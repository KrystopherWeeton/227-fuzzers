; ModuleID = '../../third_party/blink/renderer/platform/graphics/gpu/webgpu_mailbox_texture.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/gpu/webgpu_mailbox_texture.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::WebGPUMailboxTexture" = type { %"class.WTF::RefCounted", %class.scoped_refptr.0, %struct.WGPUDeviceImpl*, %"class.base::OnceCallback", %struct.WGPUTextureImpl*, i32, i32, %"class.std::__1::unique_ptr.117" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr.0 = type { %"class.blink::DawnControlClientHolder"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.77 }
%class.scoped_refptr.77 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.78", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.78" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.WGPUTextureImpl = type opaque
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::RecyclableCanvasResource"* }
%"class.blink::RecyclableCanvasResource" = type { %"class.std::__1::unique_ptr.27", %"struct.blink::ResourceCacheKey", %"class.base::WeakPtr.115" }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.blink::CanvasResourceProvider"* }
%"class.blink::CanvasResourceProvider" = type { %"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver", %"class.base::CheckedObserver", %"class.blink::CanvasMemoryDumpClient", i32, %class.sk_sp, i32, %"class.base::WeakPtr", %"class.base::WeakPtr.31", %"class.blink::IntSize", i32, %"class.blink::CanvasResourceParams", i8, %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.67", i8, i32, i32, i32, %"class.WTF::Vector", i8, i8, i64, i64, %"class.base::RepeatingCallback.91", %"class.blink::IdentifiabilityPaintOpDigest", %"class.base::WeakPtrFactory.111" }
%"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver" = type { i32 (...)** }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory.30" }
%"class.base::WeakPtrFactory.30" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.8" }
%"struct.std::__1::atomic.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"class.blink::CanvasMemoryDumpClient" = type { i32 (...)** }
%class.sk_sp = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.SkSurfaceProps = type { i32, i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr.31" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::CanvasResourceParams" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::CanvasResourceProvider::CanvasImageProvider"* }
%"class.blink::CanvasResourceProvider::CanvasImageProvider" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.cc::SkiaPaintCanvas"* }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.58", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.41, [384 x i64], %class.sk_sp.42, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.43", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.49" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.41 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.42 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkBitmap = type { %class.sk_sp.55, %class.SkPixmap, %class.sk_sp.57 }
%class.sk_sp.55 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.56, i32, i32 }
%class.sk_sp.56 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.8" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.57 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::MemoryManagedPaintRecorder"* }
%"class.blink::MemoryManagedPaintRecorder" = type { %"class.cc::PaintRecorder", %"class.base::RepeatingCallback" }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.70, %"class.std::__1::unique_ptr.71" }
%class.scoped_refptr.70 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional", %struct.SkRect }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer.82" }
%"class.WTF::VectorBuffer.82" = type { %"class.WTF::VectorBufferBase.83" }
%"class.WTF::VectorBufferBase.83" = type { %class.scoped_refptr.84*, i32, i32 }
%class.scoped_refptr.84 = type { %"class.blink::CanvasResource"* }
%"class.blink::CanvasResource" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", %"class.base::PlatformThreadRef", %class.scoped_refptr.86, %"struct.gpu::SyncToken", %"class.base::WeakPtr.88", i32, %"class.blink::CanvasResourceParams" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.85" }
%"class.base::RefCountedThreadSafe.85" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::PlatformThreadRef" = type { i64 }
%class.scoped_refptr.86 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.87" }>
%"class.base::RefCountedThreadSafe.87" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.base::WeakPtr.88" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::RepeatingCallback.91" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::IdentifiabilityPaintOpDigest" = type <{ i32, [4 x i8], %"class.blink::IdentifiableTokenBuilder", i32, [4 x i8], i64, %"class.blink::IntSize", %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider", %"class.cc::ClientPaintCache", %"struct.cc::PaintOp::SerializeOptions", i8, i8, [6 x i8] }>
%"class.blink::IdentifiableTokenBuilder" = type { %"struct.std::__1::array", i8*, i64 }
%"struct.std::__1::array" = type { [64 x i8] }
%"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider" = type { %"class.cc::ImageProvider", %"class.blink::IdentifiabilityPaintOpDigest"* }
%"class.cc::ClientPaintCache" = type { %"class.base::MRUCache", i64, i64, %"class.base::StackVector" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.92" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.97", %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source", %"class.base::StackAllocator", %"class.std::__1::vector.106" }
%"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source" = type { [8 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source"* }
%"class.std::__1::vector.106" = type { %"class.std::__1::__vector_base.107" }
%"class.std::__1::__vector_base.107" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.108" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109", %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.base::StackAllocator" }
%"struct.cc::PaintOp::SerializeOptions" = type <{ %"class.cc::ImageProvider"*, %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::ClientPaintCache"*, %class.SkStrikeServer*, %class.sk_sp.56, i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"class.cc::TransferCacheSerializeHelper" = type opaque
%class.SkStrikeServer = type opaque
%"class.base::WeakPtrFactory.111" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.blink::ResourceCacheKey" = type <{ %"class.blink::IntSize", %"class.blink::CanvasResourceParams", i8, [3 x i8] }>
%"class.base::WeakPtr.115" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::DawnControlClientHolder" = type { %"class.WTF::RefCounted.1", %"class.std::__1::unique_ptr", %"class.gpu::webgpu::WebGPUInterface"*, %struct.DawnProcTable, i8, %"class.blink::WebGPURecyclableResourceCache" }
%"class.WTF::RefCounted.1" = type { %"class.base::RefCounted.2" }
%"class.base::RefCounted.2" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::WebGraphicsContext3DProviderWrapper"* }
%"class.blink::WebGraphicsContext3DProviderWrapper" = type { %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.14", %"class.base::ObserverList", %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.blink::GraphicsContext3DUtils"* }
%"class.blink::GraphicsContext3DUtils" = type { %"class.base::WeakPtr" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::WebGraphicsContext3DProvider"* }
%"class.blink::WebGraphicsContext3DProvider" = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.20" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.gpu::webgpu::WebGPUInterface" = type { %"class.gpu::InterfaceBase" }
%"class.gpu::InterfaceBase" = type { i32 (...)** }
%struct.DawnProcTable = type { void ()* (%struct.WGPUDeviceImpl*, i8*)*, %struct.WGPUInstanceImpl* (%struct.WGPUInstanceDescriptor*)*, void (%struct.WGPUBindGroupImpl*)*, void (%struct.WGPUBindGroupImpl*)*, void (%struct.WGPUBindGroupLayoutImpl*)*, void (%struct.WGPUBindGroupLayoutImpl*)*, void (%struct.WGPUBufferImpl*)*, i8* (%struct.WGPUBufferImpl*, i64, i64)*, i8* (%struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPUBufferImpl*, i32, i64, i64, void (i32, i8*)*, i8*)*, void (%struct.WGPUBufferImpl*)*, void (%struct.WGPUBufferImpl*)*, void (%struct.WGPUBufferImpl*)*, void (%struct.WGPUCommandBufferImpl*)*, void (%struct.WGPUCommandBufferImpl*)*, %struct.WGPUComputePassEncoderImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPUComputePassDescriptor*)*, %struct.WGPURenderPassEncoderImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPURenderPassDescriptor*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUBufferImpl*, i64, %struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyBuffer*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyBuffer*, %struct.WGPUExtent3D*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*)*, %struct.WGPUCommandBufferImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPUCommandBufferDescriptor*)*, void (%struct.WGPUCommandEncoderImpl*, i8*)*, void (%struct.WGPUCommandEncoderImpl*, i8*)*, void (%struct.WGPUCommandEncoderImpl*)*, void (%struct.WGPUCommandEncoderImpl*, i8*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUQuerySetImpl*, i32, i32, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUQuerySetImpl*, i32)*, void (%struct.WGPUCommandEncoderImpl*)*, void (%struct.WGPUCommandEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, i32, i32, i32)*, void (%struct.WGPUComputePassEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPUComputePassEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, i8*)*, void (%struct.WGPUComputePassEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, i8*)*, void (%struct.WGPUComputePassEncoderImpl*, i32, %struct.WGPUBindGroupImpl*, i32, i32*)*, void (%struct.WGPUComputePassEncoderImpl*, %struct.WGPUComputePipelineImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, %struct.WGPUQuerySetImpl*, i32)*, void (%struct.WGPUComputePassEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*)*, %struct.WGPUBindGroupLayoutImpl* (%struct.WGPUComputePipelineImpl*, i32)*, void (%struct.WGPUComputePipelineImpl*)*, void (%struct.WGPUComputePipelineImpl*)*, %struct.WGPUBindGroupImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUBindGroupDescriptor*)*, %struct.WGPUBindGroupLayoutImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUBindGroupLayoutDescriptor*)*, %struct.WGPUBufferImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUBufferDescriptor*)*, %struct.WGPUCommandEncoderImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUCommandEncoderDescriptor*)*, %struct.WGPUComputePipelineImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUComputePipelineDescriptor*)*, void (%struct.WGPUDeviceImpl*, %struct.WGPUComputePipelineDescriptor*, void (i32, %struct.WGPUComputePipelineImpl*, i8*, i8*)*, i8*)*, %struct.WGPUBufferImpl* (%struct.WGPUDeviceImpl*)*, %struct.WGPUExternalTextureImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUExternalTextureDescriptor*)*, %struct.WGPUPipelineLayoutImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUPipelineLayoutDescriptor*)*, %struct.WGPUQuerySetImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUQuerySetDescriptor*)*, %struct.WGPURenderBundleEncoderImpl* (%struct.WGPUDeviceImpl*, %struct.WGPURenderBundleEncoderDescriptor*)*, %struct.WGPURenderPipelineImpl* (%struct.WGPUDeviceImpl*, %struct.WGPURenderPipelineDescriptor*)*, %struct.WGPURenderPipelineImpl* (%struct.WGPUDeviceImpl*, %struct.WGPURenderPipelineDescriptor*)*, void (%struct.WGPUDeviceImpl*, %struct.WGPURenderPipelineDescriptor*, void (i32, %struct.WGPURenderPipelineImpl*, i8*, i8*)*, i8*)*, %struct.WGPUSamplerImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUSamplerDescriptor*)*, %struct.WGPUShaderModuleImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUShaderModuleDescriptor*)*, %struct.WGPUSwapChainImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUSurfaceImpl*, %struct.WGPUSwapChainDescriptor*)*, %struct.WGPUTextureImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUTextureDescriptor*)*, %struct.WGPUQueueImpl* (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*, i32, i8*)*, void (%struct.WGPUDeviceImpl*)*, i1 (%struct.WGPUDeviceImpl*, void (i32, i8*, i8*)*, i8*)*, void (%struct.WGPUDeviceImpl*, i32)*, void (%struct.WGPUDeviceImpl*, void (i8*, i8*)*, i8*)*, void (%struct.WGPUDeviceImpl*, void (i32, i8*, i8*)*, i8*)*, void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUExternalTextureImpl*)*, void (%struct.WGPUExternalTextureImpl*)*, void (%struct.WGPUExternalTextureImpl*)*, %struct.WGPUSurfaceImpl* (%struct.WGPUInstanceImpl*, %struct.WGPUSurfaceDescriptor*)*, void (%struct.WGPUInstanceImpl*)*, void (%struct.WGPUInstanceImpl*)*, void (%struct.WGPUPipelineLayoutImpl*)*, void (%struct.WGPUPipelineLayoutImpl*)*, void (%struct.WGPUQuerySetImpl*)*, void (%struct.WGPUQuerySetImpl*)*, void (%struct.WGPUQuerySetImpl*)*, void (%struct.WGPUQueueImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*, %struct.WGPUCopyTextureForBrowserOptions*)*, void (%struct.WGPUQueueImpl*, i64, void (i32, i8*)*, i8*)*, void (%struct.WGPUQueueImpl*, i32, %struct.WGPUCommandBufferImpl**)*, void (%struct.WGPUQueueImpl*, %struct.WGPUBufferImpl*, i64, i8*, i64)*, void (%struct.WGPUQueueImpl*, %struct.WGPUImageCopyTexture*, i8*, i64, %struct.WGPUTextureDataLayout*, %struct.WGPUExtent3D*)*, void (%struct.WGPUQueueImpl*)*, void (%struct.WGPUQueueImpl*)*, void (%struct.WGPURenderBundleImpl*)*, void (%struct.WGPURenderBundleImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, i32, i32, i32)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, i32, i32, i32, i32)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, %struct.WGPURenderBundleImpl* (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPURenderBundleDescriptor*)*, void (%struct.WGPURenderBundleEncoderImpl*, i8*)*, void (%struct.WGPURenderBundleEncoderImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*, i8*)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, %struct.WGPUBindGroupImpl*, i32, i32*)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPUBufferImpl*, i32, i64, i64)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPURenderPipelineImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, %struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPURenderBundleEncoderImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32, i32, i32, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32, i32, i32, i32, i32)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i32, %struct.WGPURenderBundleImpl**)*, void (%struct.WGPURenderPassEncoderImpl*, i8*)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i8*)*, void (%struct.WGPURenderPassEncoderImpl*, i32, %struct.WGPUBindGroupImpl*, i32, i32*)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUColor*)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUColor*)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUBufferImpl*, i32, i64, i64)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPURenderPipelineImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i32, i32, i32, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32, %struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPURenderPassEncoderImpl*, float, float, float, float, float, float)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUQuerySetImpl*, i32)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*)*, %struct.WGPUBindGroupLayoutImpl* (%struct.WGPURenderPipelineImpl*, i32)*, void (%struct.WGPURenderPipelineImpl*)*, void (%struct.WGPURenderPipelineImpl*)*, void (%struct.WGPUSamplerImpl*)*, void (%struct.WGPUSamplerImpl*)*, void (%struct.WGPUShaderModuleImpl*, void (i32, %struct.WGPUCompilationInfo*, i8*)*, i8*)*, void (%struct.WGPUShaderModuleImpl*)*, void (%struct.WGPUShaderModuleImpl*)*, void (%struct.WGPUSurfaceImpl*)*, void (%struct.WGPUSurfaceImpl*)*, void (%struct.WGPUSwapChainImpl*, i32, i32, i32, i32)*, %struct.WGPUTextureViewImpl* (%struct.WGPUSwapChainImpl*)*, void (%struct.WGPUSwapChainImpl*)*, void (%struct.WGPUSwapChainImpl*)*, void (%struct.WGPUSwapChainImpl*)*, %struct.WGPUTextureViewImpl* (%struct.WGPUTextureImpl*, %struct.WGPUTextureViewDescriptor*)*, void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureViewImpl*)*, void (%struct.WGPUTextureViewImpl*)* }
%struct.WGPUInstanceImpl = type opaque
%struct.WGPUInstanceDescriptor = type { %struct.WGPUChainedStruct* }
%struct.WGPUChainedStruct = type { %struct.WGPUChainedStruct*, i32 }
%struct.WGPUBindGroupImpl = type opaque
%struct.WGPUBindGroupLayoutImpl = type opaque
%struct.WGPUBufferImpl = type opaque
%struct.WGPUCommandBufferImpl = type opaque
%struct.WGPUComputePassEncoderImpl = type opaque
%struct.WGPUCommandEncoderImpl = type opaque
%struct.WGPUComputePassDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPURenderPassEncoderImpl = type opaque
%struct.WGPURenderPassDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, %struct.WGPURenderPassColorAttachment*, %struct.WGPURenderPassDepthStencilAttachment*, %struct.WGPUQuerySetImpl* }
%struct.WGPURenderPassColorAttachment = type { %struct.WGPUTextureViewImpl*, %struct.WGPUTextureViewImpl*, i32, i32, %struct.WGPUColor, %struct.WGPUTextureViewImpl* }
%struct.WGPUColor = type { double, double, double, double }
%struct.WGPUTextureViewImpl = type opaque
%struct.WGPURenderPassDepthStencilAttachment = type { %struct.WGPUTextureViewImpl*, i32, i32, float, i8, i32, i32, i32, i8, %struct.WGPUTextureViewImpl* }
%struct.WGPUQuerySetImpl = type opaque
%struct.WGPUImageCopyBuffer = type { %struct.WGPUChainedStruct*, %struct.WGPUTextureDataLayout, %struct.WGPUBufferImpl* }
%struct.WGPUTextureDataLayout = type { %struct.WGPUChainedStruct*, i64, i32, i32 }
%struct.WGPUImageCopyTexture = type { %struct.WGPUChainedStruct*, %struct.WGPUTextureImpl*, i32, %struct.WGPUOrigin3D, i32 }
%struct.WGPUOrigin3D = type { i32, i32, i32 }
%struct.WGPUExtent3D = type { i32, i32, i32 }
%struct.WGPUCommandBufferDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUComputePipelineImpl = type opaque
%struct.WGPUBindGroupDescriptor = type { %struct.WGPUChainedStruct*, i8*, %struct.WGPUBindGroupLayoutImpl*, i32, %struct.WGPUBindGroupEntry* }
%struct.WGPUBindGroupEntry = type { i32, %struct.WGPUBufferImpl*, i64, i64, %struct.WGPUSamplerImpl*, %struct.WGPUTextureViewImpl* }
%struct.WGPUSamplerImpl = type opaque
%struct.WGPUBindGroupLayoutDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, %struct.WGPUBindGroupLayoutEntry* }
%struct.WGPUBindGroupLayoutEntry = type { %struct.WGPUChainedStruct*, i32, i32, %struct.WGPUBufferBindingLayout, %struct.WGPUSamplerBindingLayout, %struct.WGPUTextureBindingLayout, %struct.WGPUStorageTextureBindingLayout }
%struct.WGPUBufferBindingLayout = type { %struct.WGPUChainedStruct*, i32, i8, i64 }
%struct.WGPUSamplerBindingLayout = type { %struct.WGPUChainedStruct*, i32 }
%struct.WGPUTextureBindingLayout = type { %struct.WGPUChainedStruct*, i32, i32, i8 }
%struct.WGPUStorageTextureBindingLayout = type { %struct.WGPUChainedStruct*, i32, i32, i32 }
%struct.WGPUBufferDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i64, i8 }
%struct.WGPUCommandEncoderDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUComputePipelineDescriptor = type { %struct.WGPUChainedStruct*, i8*, %struct.WGPUPipelineLayoutImpl*, %struct.WGPUProgrammableStageDescriptor }
%struct.WGPUPipelineLayoutImpl = type opaque
%struct.WGPUProgrammableStageDescriptor = type { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8* }
%struct.WGPUShaderModuleImpl = type opaque
%struct.WGPUExternalTextureImpl = type opaque
%struct.WGPUExternalTextureDescriptor = type { %struct.WGPUChainedStruct*, %struct.WGPUTextureViewImpl*, i32 }
%struct.WGPUPipelineLayoutDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, %struct.WGPUBindGroupLayoutImpl** }
%struct.WGPUQuerySetDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32*, i32 }
%struct.WGPURenderBundleEncoderImpl = type opaque
%struct.WGPURenderBundleEncoderDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32*, i32, i32 }
%struct.WGPURenderPipelineImpl = type opaque
%struct.WGPURenderPipelineDescriptor = type { %struct.WGPUChainedStruct*, i8*, %struct.WGPUPipelineLayoutImpl*, %struct.WGPUVertexState, %struct.WGPUPrimitiveState, %struct.WGPUDepthStencilState*, %struct.WGPUMultisampleState, %struct.WGPUFragmentState* }
%struct.WGPUVertexState = type { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8*, i32, %struct.WGPUVertexBufferLayout* }
%struct.WGPUVertexBufferLayout = type { i64, i32, i32, %struct.WGPUVertexAttribute* }
%struct.WGPUVertexAttribute = type { i32, i64, i32 }
%struct.WGPUPrimitiveState = type { %struct.WGPUChainedStruct*, i32, i32, i32, i32 }
%struct.WGPUDepthStencilState = type { %struct.WGPUChainedStruct*, i32, i8, i32, %struct.WGPUStencilFaceState, %struct.WGPUStencilFaceState, i32, i32, i32, float, float }
%struct.WGPUStencilFaceState = type { i32, i32, i32, i32 }
%struct.WGPUMultisampleState = type { %struct.WGPUChainedStruct*, i32, i32, i8 }
%struct.WGPUFragmentState = type { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8*, i32, %struct.WGPUColorTargetState* }
%struct.WGPUColorTargetState = type { %struct.WGPUChainedStruct*, i32, %struct.WGPUBlendState*, i32 }
%struct.WGPUBlendState = type { %struct.WGPUBlendComponent, %struct.WGPUBlendComponent }
%struct.WGPUBlendComponent = type { i32, i32, i32 }
%struct.WGPUSamplerDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32, i32, i32, i32, float, float, i32, i16 }
%struct.WGPUShaderModuleDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUSwapChainImpl = type opaque
%struct.WGPUSurfaceImpl = type opaque
%struct.WGPUSwapChainDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32, i32, i32, i64 }
%struct.WGPUTextureDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, %struct.WGPUExtent3D, i32, i32, i32 }
%struct.WGPUQueueImpl = type opaque
%struct.WGPUSurfaceDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUCopyTextureForBrowserOptions = type { %struct.WGPUChainedStruct*, i8 }
%struct.WGPURenderBundleImpl = type opaque
%struct.WGPURenderBundleDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUCompilationInfo = type { i32, %struct.WGPUCompilationMessage* }
%struct.WGPUCompilationMessage = type { i8*, i32, i64, i64, i64, i64 }
%struct.WGPUTextureViewDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::WebGPURecyclableResourceCache" = type { %"class.WTF::Deque", i64, i64, i32, %"class.gpu::webgpu::WebGPUInterface"*, %class.scoped_refptr.86, %"class.base::RepeatingCallback", i8, i32, %"class.base::WeakPtr.115", %"class.base::WeakPtrFactory.116" }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::WebGPURecyclableResourceCache::Resource, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::WebGPURecyclableResourceCache::Resource, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.blink::WebGPURecyclableResourceCache::Resource"*, i32, i32 }
%"struct.blink::WebGPURecyclableResourceCache::Resource" = type { %"class.std::__1::unique_ptr.27", i32, i32 }
%"class.base::WeakPtrFactory.116" = type { %"class.base::internal::WeakPtrFactoryBase" }
%struct.WGPUDeviceImpl = type opaque
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.blink::StaticBitmapImage" = type <{ %"class.blink::Image", %"class.blink::ImageOrientation", i8, [6 x i8] }>
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.124", i8, %class.scoped_refptr.126, %"class.blink::WeakPersistent", i32, i8, %"class.std::__1::unique_ptr.325" }
%"class.WTF::ThreadSafeRefCounted.124" = type { %"class.base::RefCountedThreadSafe.125" }
%"class.base::RefCountedThreadSafe.125" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.126 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.127", i64, %"class.WTF::Vector.129", %"class.WTF::Vector.134" }
%"class.WTF::RefCounted.127" = type { %"class.base::RefCounted.128" }
%"class.base::RefCounted.128" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.129" = type { %"class.WTF::VectorBuffer.130" }
%"class.WTF::VectorBuffer.130" = type { %"class.WTF::VectorBufferBase.131" }
%"class.WTF::VectorBufferBase.131" = type { i8*, i32, i32 }
%"class.WTF::Vector.134" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"class.std::__1::unique_ptr.137"*, i32, i32 }
%"class.std::__1::unique_ptr.137" = type opaque
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.140", i32, [4 x i8], %"class.std::__1::unique_ptr.278", %"class.std::__1::unique_ptr.278", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.284", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.290", %"class.std::__1::unique_ptr.296", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.321", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.198", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.258", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.176" = type { %"struct.std::__1::__atomic_base.177" }
%"struct.std::__1::__atomic_base.177" = type { %"struct.std::__1::__atomic_base.178" }
%"struct.std::__1::__atomic_base.178" = type { %"struct.std::__1::__cxx_atomic_impl.179" }
%"struct.std::__1::__cxx_atomic_impl.179" = type { %"struct.std::__1::__cxx_atomic_base_impl.180" }
%"struct.std::__1::__cxx_atomic_base_impl.180" = type { i64 }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::Worklist.187"* }
%"class.blink::Worklist.187" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::Worklist.194"* }
%"class.blink::Worklist.194" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::Worklist.201"* }
%"class.blink::Worklist.201" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::Worklist.208"* }
%"class.blink::Worklist.208" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::Worklist.215"* }
%"class.blink::Worklist.215" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::Worklist.222"* }
%"class.blink::Worklist.222" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::Worklist.229"* }
%"class.blink::Worklist.229" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.236", %"class.std::__1::__compressed_pair.244", %"class.std::__1::__compressed_pair.249", %"class.std::__1::__compressed_pair.251", [4 x i8] }>
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238", %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { float }
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.261", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.270" }
%"class.WTF::Vector.270" = type { %"class.WTF::VectorBuffer.271" }
%"class.WTF::VectorBuffer.271" = type { %"class.WTF::VectorBufferBase.272" }
%"class.WTF::VectorBufferBase.272" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.284" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.287" }
%"class.WTF::VectorBuffer.287" = type { %"class.WTF::VectorBufferBase.288" }
%"class.WTF::VectorBufferBase.288" = type { %"struct.std::__1::pair.289"*, i32, i32 }
%"struct.std::__1::pair.289" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.302" }
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.187"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.194"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.201"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.208"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.215"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.331", i64 }
%"class.std::__1::vector.331" = type { %"class.std::__1::__vector_base.332" }
%"class.std::__1::__vector_base.332" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.333" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.320 }
%class.scoped_refptr.320 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.321" = type { %"struct.std::__1::__atomic_base.322" }
%"struct.std::__1::__atomic_base.322" = type { %"struct.std::__1::__cxx_atomic_impl.323" }
%"struct.std::__1::__cxx_atomic_impl.323" = type { %"struct.std::__1::__cxx_atomic_base_impl.324" }
%"struct.std::__1::__cxx_atomic_base_impl.324" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.blink::ImageOrientation" = type { i8 }
%"struct.gpu::webgpu::ReservedTexture" = type { %struct.WGPUTextureImpl*, i32, i32, i32, i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.340 }
%union.anon.340 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.87", [4 x i8] }>
%"class.WTF::ConditionalDestructor" = type { i8 }

$_ZN5blink23DawnControlClientHolderD2Ev = comdat any

$_ZN3WTF21ConditionalDestructorINS_5DequeIN5blink29WebGPURecyclableResourceCache8ResourceELj0ENS_18PartitionAllocatorEEELb0EED2Ev = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink17StaticBitmapImageEFvRKN3gpu9SyncTokenEEJN3WTF18RetainedRefWrapperIS4_EEEEEFvS8_EE7RunOnceEPNS0_13BindStateBaseES8_ = comdat any

$_ZN4base8internal9BindStateIMN5blink17StaticBitmapImageEFvRKN3gpu9SyncTokenEEJN3WTF18RetainedRefWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@.str = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1

@_ZN5blink20WebGPUMailboxTextureC1E13scoped_refptrINS_23DawnControlClientHolderEEP14WGPUDeviceImpl16WGPUTextureUsageRKN3gpu7MailboxERKNS7_9SyncTokenEN4base12OnceCallbackIFvSD_EEENSt3__110unique_ptrINS_24RecyclableCanvasResourceENSI_14default_deleteISK_EEEE = hidden unnamed_addr alias void (%"class.blink::WebGPUMailboxTexture"*, %"class.blink::DawnControlClientHolder"*, %struct.WGPUDeviceImpl*, i32, %"struct.gpu::Mailbox"*, %"struct.gpu::SyncToken"*, %"class.base::OnceCallback"*, i64), void (%"class.blink::WebGPUMailboxTexture"*, %"class.blink::DawnControlClientHolder"*, %struct.WGPUDeviceImpl*, i32, %"struct.gpu::Mailbox"*, %"struct.gpu::SyncToken"*, %"class.base::OnceCallback"*, i64)* @_ZN5blink20WebGPUMailboxTextureC2E13scoped_refptrINS_23DawnControlClientHolderEEP14WGPUDeviceImpl16WGPUTextureUsageRKN3gpu7MailboxERKNS7_9SyncTokenEN4base12OnceCallbackIFvSD_EEENSt3__110unique_ptrINS_24RecyclableCanvasResourceENSI_14default_deleteISK_EEEE
@_ZN5blink20WebGPUMailboxTextureD1Ev = hidden unnamed_addr alias void (%"class.blink::WebGPUMailboxTexture"*), void (%"class.blink::WebGPUMailboxTexture"*)* @_ZN5blink20WebGPUMailboxTextureD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.blink::WebGPUMailboxTexture"* @_ZN5blink20WebGPUMailboxTexture21FromStaticBitmapImageE13scoped_refptrINS_23DawnControlClientHolderEEP14WGPUDeviceImpl16WGPUTextureUsageS1_INS_17StaticBitmapImageEE(%"class.blink::DawnControlClientHolder"*, %struct.WGPUDeviceImpl*, i32, %"class.blink::StaticBitmapImage"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.gpu::webgpu::ReservedTexture", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"struct.gpu::MailboxHolder", align 8
  %9 = alloca %"struct.gpu::MailboxHolder", align 8
  %10 = alloca %"class.base::OnceCallback", align 8
  %11 = ptrtoint %"class.blink::DawnControlClientHolder"* %0 to i64
  %12 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #7
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %13, align 8
  %14 = icmp eq %"class.blink::StaticBitmapImage"* %3, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::StaticBitmapImage", %"class.blink::StaticBitmapImage"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %19, %15, %4
  %23 = ptrtoint %"class.blink::StaticBitmapImage"* %3 to i64
  %24 = call i8* @_Znwm(i64 56) #8, !noalias !2
  %25 = bitcast i8* %24 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %25, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink17StaticBitmapImageEFvRKN3gpu9SyncTokenEEJN3WTF18RetainedRefWrapperIS4_EEEEEFvS8_EE7RunOnceEPNS0_13BindStateBaseES8_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink17StaticBitmapImageEFvRKN3gpu9SyncTokenEEJN3WTF18RetainedRefWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #7, !noalias !2
  %26 = getelementptr inbounds i8, i8* %24, i64 32
  %27 = bitcast i8* %26 to <2 x i64>*
  store <2 x i64> <i64 393, i64 0>, <2 x i64>* %27, align 8, !noalias !2
  %28 = getelementptr inbounds i8, i8* %24, i64 48
  %29 = bitcast i8* %28 to i64*
  store i64 %23, i64* %29, align 8, !noalias !2
  %30 = call noalias i8* @malloc(i64 56) #7
  %31 = bitcast i8* %30 to %"class.blink::WebGPUMailboxTexture"*
  %32 = getelementptr inbounds %"struct.gpu::MailboxHolder", %"struct.gpu::MailboxHolder"* %8, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #7
  %33 = bitcast %"class.blink::StaticBitmapImage"* %3 to void (%"struct.gpu::MailboxHolder"*, %"class.blink::StaticBitmapImage"*)***
  %34 = load void (%"struct.gpu::MailboxHolder"*, %"class.blink::StaticBitmapImage"*)**, void (%"struct.gpu::MailboxHolder"*, %"class.blink::StaticBitmapImage"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"struct.gpu::MailboxHolder"*, %"class.blink::StaticBitmapImage"*)*, void (%"struct.gpu::MailboxHolder"*, %"class.blink::StaticBitmapImage"*)** %34, i64 48
  %36 = load void (%"struct.gpu::MailboxHolder"*, %"class.blink::StaticBitmapImage"*)*, void (%"struct.gpu::MailboxHolder"*, %"class.blink::StaticBitmapImage"*)** %35, align 8
  call void %36(%"struct.gpu::MailboxHolder"* nonnull sret %8, %"class.blink::StaticBitmapImage"* %3) #7
  %37 = getelementptr inbounds %"struct.gpu::MailboxHolder", %"struct.gpu::MailboxHolder"* %9, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #7
  %38 = load void (%"struct.gpu::MailboxHolder"*, %"class.blink::StaticBitmapImage"*)**, void (%"struct.gpu::MailboxHolder"*, %"class.blink::StaticBitmapImage"*)*** %33, align 8
  %39 = getelementptr inbounds void (%"struct.gpu::MailboxHolder"*, %"class.blink::StaticBitmapImage"*)*, void (%"struct.gpu::MailboxHolder"*, %"class.blink::StaticBitmapImage"*)** %38, i64 48
  %40 = load void (%"struct.gpu::MailboxHolder"*, %"class.blink::StaticBitmapImage"*)*, void (%"struct.gpu::MailboxHolder"*, %"class.blink::StaticBitmapImage"*)** %39, align 8
  call void %40(%"struct.gpu::MailboxHolder"* nonnull sret %9, %"class.blink::StaticBitmapImage"* %3) #7
  %41 = ptrtoint i8* %24 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8
  %42 = bitcast i8* %30 to i32*
  store i32 1, i32* %42, align 4
  %43 = getelementptr inbounds i8, i8* %30, i64 8
  %44 = bitcast i8* %43 to i64*
  store i64 %11, i64* %44, align 8
  %45 = getelementptr inbounds i8, i8* %30, i64 16
  %46 = bitcast i8* %45 to %struct.WGPUDeviceImpl**
  store %struct.WGPUDeviceImpl* %1, %struct.WGPUDeviceImpl** %46, align 8
  %47 = getelementptr inbounds i8, i8* %30, i64 24
  %48 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0, i32 0, i32 0
  %49 = bitcast i8* %47 to i64*
  store i64 %41, i64* %49, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %48, align 8
  %50 = getelementptr inbounds i8, i8* %30, i64 40
  %51 = bitcast i8* %50 to i32*
  %52 = getelementptr inbounds i8, i8* %30, i64 44
  %53 = bitcast i8* %52 to i32*
  %54 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %0, i64 0, i32 3, i32 70
  %55 = getelementptr inbounds i8, i8* %30, i64 48
  %56 = bitcast i8* %55 to i64*
  store i64 0, i64* %56, align 8
  %57 = load void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)** %54, align 8
  call void %57(%struct.WGPUDeviceImpl* %1) #7
  %58 = call %"class.gpu::webgpu::WebGPUInterface"* @_ZNK5blink23DawnControlClientHolder12GetInterfaceEv(%"class.blink::DawnControlClientHolder"* %0) #7
  %59 = getelementptr inbounds %"class.gpu::webgpu::WebGPUInterface", %"class.gpu::webgpu::WebGPUInterface"* %58, i64 0, i32 0
  %60 = getelementptr inbounds %"struct.gpu::MailboxHolder", %"struct.gpu::MailboxHolder"* %9, i64 0, i32 1, i32 0
  %61 = bitcast %"class.gpu::webgpu::WebGPUInterface"* %58 to void (%"class.gpu::InterfaceBase"*, i8*)***
  %62 = load void (%"class.gpu::InterfaceBase"*, i8*)**, void (%"class.gpu::InterfaceBase"*, i8*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.gpu::InterfaceBase"*, i8*)*, void (%"class.gpu::InterfaceBase"*, i8*)** %62, i64 3
  %64 = load void (%"class.gpu::InterfaceBase"*, i8*)*, void (%"class.gpu::InterfaceBase"*, i8*)** %63, align 8
  call void %64(%"class.gpu::InterfaceBase"* %59, i8* %60) #7
  %65 = bitcast %"struct.gpu::webgpu::ReservedTexture"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #7
  %66 = getelementptr inbounds %"struct.gpu::webgpu::ReservedTexture", %"struct.gpu::webgpu::ReservedTexture"* %5, i64 0, i32 1
  %67 = getelementptr inbounds %"struct.gpu::webgpu::ReservedTexture", %"struct.gpu::webgpu::ReservedTexture"* %5, i64 0, i32 2
  %68 = getelementptr inbounds %"struct.gpu::webgpu::ReservedTexture", %"struct.gpu::webgpu::ReservedTexture"* %5, i64 0, i32 3
  %69 = getelementptr inbounds %"struct.gpu::webgpu::ReservedTexture", %"struct.gpu::webgpu::ReservedTexture"* %5, i64 0, i32 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 24, i1 false) #7
  %70 = bitcast %"class.gpu::webgpu::WebGPUInterface"* %58 to void (%"struct.gpu::webgpu::ReservedTexture"*, %"class.gpu::webgpu::WebGPUInterface"*, %struct.WGPUDeviceImpl*)***
  %71 = load void (%"struct.gpu::webgpu::ReservedTexture"*, %"class.gpu::webgpu::WebGPUInterface"*, %struct.WGPUDeviceImpl*)**, void (%"struct.gpu::webgpu::ReservedTexture"*, %"class.gpu::webgpu::WebGPUInterface"*, %struct.WGPUDeviceImpl*)*** %70, align 8
  %72 = getelementptr inbounds void (%"struct.gpu::webgpu::ReservedTexture"*, %"class.gpu::webgpu::WebGPUInterface"*, %struct.WGPUDeviceImpl*)*, void (%"struct.gpu::webgpu::ReservedTexture"*, %"class.gpu::webgpu::WebGPUInterface"*, %struct.WGPUDeviceImpl*)** %71, i64 12
  %73 = load void (%"struct.gpu::webgpu::ReservedTexture"*, %"class.gpu::webgpu::WebGPUInterface"*, %struct.WGPUDeviceImpl*)*, void (%"struct.gpu::webgpu::ReservedTexture"*, %"class.gpu::webgpu::WebGPUInterface"*, %struct.WGPUDeviceImpl*)** %72, align 8
  call void %73(%"struct.gpu::webgpu::ReservedTexture"* nonnull sret %5, %"class.gpu::webgpu::WebGPUInterface"* %58, %struct.WGPUDeviceImpl* %1) #7
  %74 = load i32, i32* %66, align 8
  store i32 %74, i32* %51, align 8
  %75 = load i32, i32* %67, align 4
  store i32 %75, i32* %53, align 4
  %76 = bitcast %"struct.gpu::webgpu::ReservedTexture"* %5 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds i8, i8* %30, i64 32
  %79 = bitcast i8* %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load i32, i32* %68, align 8
  %81 = load i32, i32* %69, align 4
  %82 = bitcast %"class.gpu::webgpu::WebGPUInterface"* %58 to void (%"class.gpu::webgpu::WebGPUInterface"*, i32, i32, i32, i32, i32, i8*)***
  %83 = load void (%"class.gpu::webgpu::WebGPUInterface"*, i32, i32, i32, i32, i32, i8*)**, void (%"class.gpu::webgpu::WebGPUInterface"*, i32, i32, i32, i32, i32, i8*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.gpu::webgpu::WebGPUInterface"*, i32, i32, i32, i32, i32, i8*)*, void (%"class.gpu::webgpu::WebGPUInterface"*, i32, i32, i32, i32, i32, i8*)** %83, i64 16
  %85 = load void (%"class.gpu::webgpu::WebGPUInterface"*, i32, i32, i32, i32, i32, i8*)*, void (%"class.gpu::webgpu::WebGPUInterface"*, i32, i32, i32, i32, i32, i8*)** %84, align 8
  call void %85(%"class.gpu::webgpu::WebGPUInterface"* %58, i32 %80, i32 %81, i32 %74, i32 %75, i32 %2, i8* nonnull %32) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #7
  %86 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %86) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #7
  %87 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %87) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7
  br i1 %14, label %100, label %88

88:                                               ; preds = %22
  %89 = getelementptr inbounds %"class.blink::StaticBitmapImage", %"class.blink::StaticBitmapImage"* %3, i64 0, i32 0, i32 1, i32 0
  %90 = getelementptr inbounds %"class.base::RefCountedThreadSafe.125", %"class.base::RefCountedThreadSafe.125"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw sub i32* %90, i32 1 acq_rel
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %100

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.base::RefCountedThreadSafe.125", %"class.base::RefCountedThreadSafe.125"* %89, i64 -2
  %95 = bitcast %"class.base::RefCountedThreadSafe.125"* %94 to %"class.blink::Image"*
  %96 = bitcast %"class.base::RefCountedThreadSafe.125"* %94 to void (%"class.blink::Image"*)***
  %97 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %97, i64 1
  %99 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %98, align 8
  call void %99(%"class.blink::Image"* nonnull %95) #7
  br label %100

100:                                              ; preds = %93, %88, %22
  ret %"class.blink::WebGPUMailboxTexture"* %31
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.blink::WebGPUMailboxTexture"* @_ZN5blink20WebGPUMailboxTexture18FromCanvasResourceE13scoped_refptrINS_23DawnControlClientHolderEEP14WGPUDeviceImpl16WGPUTextureUsageNSt3__110unique_ptrINS_24RecyclableCanvasResourceENS7_14default_deleteIS9_EEEE(%"class.blink::DawnControlClientHolder"*, %struct.WGPUDeviceImpl*, i32, %"class.blink::RecyclableCanvasResource"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.gpu::webgpu::ReservedTexture", align 8
  %6 = alloca %"struct.gpu::SyncToken", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = ptrtoint %"class.blink::DawnControlClientHolder"* %0 to i64
  %9 = ptrtoint %"class.blink::RecyclableCanvasResource"* %3 to i64
  %10 = getelementptr inbounds %"class.blink::RecyclableCanvasResource", %"class.blink::RecyclableCanvasResource"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::CanvasResourceProvider"*, %"class.blink::CanvasResourceProvider"** %10, align 8
  %12 = bitcast %"class.blink::CanvasResourceProvider"* %11 to %"class.blink::CanvasResource"* (%"class.blink::CanvasResourceProvider"*)***
  %13 = load %"class.blink::CanvasResource"* (%"class.blink::CanvasResourceProvider"*)**, %"class.blink::CanvasResource"* (%"class.blink::CanvasResourceProvider"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.blink::CanvasResource"* (%"class.blink::CanvasResourceProvider"*)*, %"class.blink::CanvasResource"* (%"class.blink::CanvasResourceProvider"*)** %13, i64 3
  %15 = load %"class.blink::CanvasResource"* (%"class.blink::CanvasResourceProvider"*)*, %"class.blink::CanvasResource"* (%"class.blink::CanvasResourceProvider"*)** %14, align 8
  %16 = tail call %"class.blink::CanvasResource"* %15(%"class.blink::CanvasResourceProvider"* %11) #7
  %17 = bitcast %"class.blink::CanvasResource"* %16 to %"struct.gpu::Mailbox"* (%"class.blink::CanvasResource"*, i32)***
  %18 = load %"struct.gpu::Mailbox"* (%"class.blink::CanvasResource"*, i32)**, %"struct.gpu::Mailbox"* (%"class.blink::CanvasResource"*, i32)*** %17, align 8
  %19 = getelementptr inbounds %"struct.gpu::Mailbox"* (%"class.blink::CanvasResource"*, i32)*, %"struct.gpu::Mailbox"* (%"class.blink::CanvasResource"*, i32)** %18, i64 8
  %20 = load %"struct.gpu::Mailbox"* (%"class.blink::CanvasResource"*, i32)*, %"struct.gpu::Mailbox"* (%"class.blink::CanvasResource"*, i32)** %19, align 8
  %21 = tail call dereferenceable(16) %"struct.gpu::Mailbox"* %20(%"class.blink::CanvasResource"* %16, i32 1) #7
  %22 = getelementptr inbounds %"struct.gpu::SyncToken", %"struct.gpu::SyncToken"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  %23 = bitcast %"class.blink::CanvasResource"* %16 to void (%"struct.gpu::SyncToken"*, %"class.blink::CanvasResource"*)***
  %24 = load void (%"struct.gpu::SyncToken"*, %"class.blink::CanvasResource"*)**, void (%"struct.gpu::SyncToken"*, %"class.blink::CanvasResource"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"struct.gpu::SyncToken"*, %"class.blink::CanvasResource"*)*, void (%"struct.gpu::SyncToken"*, %"class.blink::CanvasResource"*)** %24, i64 10
  %26 = load void (%"struct.gpu::SyncToken"*, %"class.blink::CanvasResource"*)*, void (%"struct.gpu::SyncToken"*, %"class.blink::CanvasResource"*)** %25, align 8
  call void %26(%"struct.gpu::SyncToken"* nonnull sret %6, %"class.blink::CanvasResource"* %16) #7
  %27 = call noalias i8* @malloc(i64 56) #7
  %28 = bitcast i8* %27 to %"class.blink::WebGPUMailboxTexture"*
  %29 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast i8* %27 to i32*
  store i32 1, i32* %30, align 4
  %31 = getelementptr inbounds i8, i8* %27, i64 8
  %32 = bitcast i8* %31 to i64*
  store i64 %8, i64* %32, align 8
  %33 = getelementptr inbounds i8, i8* %27, i64 16
  %34 = bitcast i8* %33 to %struct.WGPUDeviceImpl**
  store %struct.WGPUDeviceImpl* %1, %struct.WGPUDeviceImpl** %34, align 8
  %35 = getelementptr inbounds i8, i8* %27, i64 24
  %36 = bitcast i8* %35 to i64*
  store i64 0, i64* %36, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %29, align 8
  %37 = getelementptr inbounds i8, i8* %27, i64 40
  %38 = bitcast i8* %37 to i32*
  %39 = getelementptr inbounds i8, i8* %27, i64 44
  %40 = bitcast i8* %39 to i32*
  %41 = getelementptr inbounds i8, i8* %27, i64 48
  %42 = bitcast i8* %41 to i64*
  store i64 %9, i64* %42, align 8
  %43 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %0, i64 0, i32 3, i32 70
  %44 = load void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)** %43, align 8
  call void %44(%struct.WGPUDeviceImpl* %1) #7
  %45 = call %"class.gpu::webgpu::WebGPUInterface"* @_ZNK5blink23DawnControlClientHolder12GetInterfaceEv(%"class.blink::DawnControlClientHolder"* %0) #7
  %46 = getelementptr inbounds %"class.gpu::webgpu::WebGPUInterface", %"class.gpu::webgpu::WebGPUInterface"* %45, i64 0, i32 0
  %47 = bitcast %"class.gpu::webgpu::WebGPUInterface"* %45 to void (%"class.gpu::InterfaceBase"*, i8*)***
  %48 = load void (%"class.gpu::InterfaceBase"*, i8*)**, void (%"class.gpu::InterfaceBase"*, i8*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.gpu::InterfaceBase"*, i8*)*, void (%"class.gpu::InterfaceBase"*, i8*)** %48, i64 3
  %50 = load void (%"class.gpu::InterfaceBase"*, i8*)*, void (%"class.gpu::InterfaceBase"*, i8*)** %49, align 8
  call void %50(%"class.gpu::InterfaceBase"* %46, i8* nonnull %22) #7
  %51 = bitcast %"struct.gpu::webgpu::ReservedTexture"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #7
  %52 = getelementptr inbounds %"struct.gpu::webgpu::ReservedTexture", %"struct.gpu::webgpu::ReservedTexture"* %5, i64 0, i32 1
  %53 = getelementptr inbounds %"struct.gpu::webgpu::ReservedTexture", %"struct.gpu::webgpu::ReservedTexture"* %5, i64 0, i32 2
  %54 = getelementptr inbounds %"struct.gpu::webgpu::ReservedTexture", %"struct.gpu::webgpu::ReservedTexture"* %5, i64 0, i32 3
  %55 = getelementptr inbounds %"struct.gpu::webgpu::ReservedTexture", %"struct.gpu::webgpu::ReservedTexture"* %5, i64 0, i32 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 24, i1 false) #7
  %56 = bitcast %"class.gpu::webgpu::WebGPUInterface"* %45 to void (%"struct.gpu::webgpu::ReservedTexture"*, %"class.gpu::webgpu::WebGPUInterface"*, %struct.WGPUDeviceImpl*)***
  %57 = load void (%"struct.gpu::webgpu::ReservedTexture"*, %"class.gpu::webgpu::WebGPUInterface"*, %struct.WGPUDeviceImpl*)**, void (%"struct.gpu::webgpu::ReservedTexture"*, %"class.gpu::webgpu::WebGPUInterface"*, %struct.WGPUDeviceImpl*)*** %56, align 8
  %58 = getelementptr inbounds void (%"struct.gpu::webgpu::ReservedTexture"*, %"class.gpu::webgpu::WebGPUInterface"*, %struct.WGPUDeviceImpl*)*, void (%"struct.gpu::webgpu::ReservedTexture"*, %"class.gpu::webgpu::WebGPUInterface"*, %struct.WGPUDeviceImpl*)** %57, i64 12
  %59 = load void (%"struct.gpu::webgpu::ReservedTexture"*, %"class.gpu::webgpu::WebGPUInterface"*, %struct.WGPUDeviceImpl*)*, void (%"struct.gpu::webgpu::ReservedTexture"*, %"class.gpu::webgpu::WebGPUInterface"*, %struct.WGPUDeviceImpl*)** %58, align 8
  call void %59(%"struct.gpu::webgpu::ReservedTexture"* nonnull sret %5, %"class.gpu::webgpu::WebGPUInterface"* %45, %struct.WGPUDeviceImpl* %1) #7
  %60 = load i32, i32* %52, align 8
  store i32 %60, i32* %38, align 8
  %61 = load i32, i32* %53, align 4
  store i32 %61, i32* %40, align 4
  %62 = bitcast %"struct.gpu::webgpu::ReservedTexture"* %5 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds i8, i8* %27, i64 32
  %65 = bitcast i8* %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = load i32, i32* %54, align 8
  %67 = load i32, i32* %55, align 4
  %68 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %21, i64 0, i32 0, i64 0
  %69 = bitcast %"class.gpu::webgpu::WebGPUInterface"* %45 to void (%"class.gpu::webgpu::WebGPUInterface"*, i32, i32, i32, i32, i32, i8*)***
  %70 = load void (%"class.gpu::webgpu::WebGPUInterface"*, i32, i32, i32, i32, i32, i8*)**, void (%"class.gpu::webgpu::WebGPUInterface"*, i32, i32, i32, i32, i32, i8*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.gpu::webgpu::WebGPUInterface"*, i32, i32, i32, i32, i32, i8*)*, void (%"class.gpu::webgpu::WebGPUInterface"*, i32, i32, i32, i32, i32, i8*)** %70, i64 16
  %72 = load void (%"class.gpu::webgpu::WebGPUInterface"*, i32, i32, i32, i32, i32, i8*)*, void (%"class.gpu::webgpu::WebGPUInterface"*, i32, i32, i32, i32, i32, i8*)** %71, align 8
  call void %72(%"class.gpu::webgpu::WebGPUInterface"* %45, i32 %66, i32 %67, i32 %60, i32 %61, i32 %2, i8* %68) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #7
  %73 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %73) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #7
  %74 = icmp eq %"class.blink::CanvasResource"* %16, null
  br i1 %74, label %87, label %75

75:                                               ; preds = %4
  %76 = getelementptr inbounds %"class.blink::CanvasResource", %"class.blink::CanvasResource"* %16, i64 0, i32 1, i32 0
  %77 = getelementptr inbounds %"class.base::RefCountedThreadSafe.85", %"class.base::RefCountedThreadSafe.85"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw sub i32* %77, i32 1 acq_rel
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %87

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.base::RefCountedThreadSafe.85", %"class.base::RefCountedThreadSafe.85"* %76, i64 -2
  %82 = bitcast %"class.base::RefCountedThreadSafe.85"* %81 to %"class.blink::CanvasResource"*
  %83 = bitcast %"class.base::RefCountedThreadSafe.85"* %81 to void (%"class.blink::CanvasResource"*)***
  %84 = load void (%"class.blink::CanvasResource"*)**, void (%"class.blink::CanvasResource"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.blink::CanvasResource"*)*, void (%"class.blink::CanvasResource"*)** %84, i64 1
  %86 = load void (%"class.blink::CanvasResource"*)*, void (%"class.blink::CanvasResource"*)** %85, align 8
  call void %86(%"class.blink::CanvasResource"* nonnull %82) #7
  br label %87

87:                                               ; preds = %4, %75, %80
  ret %"class.blink::WebGPUMailboxTexture"* %28
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20WebGPUMailboxTextureC2E13scoped_refptrINS_23DawnControlClientHolderEEP14WGPUDeviceImpl16WGPUTextureUsageRKN3gpu7MailboxERKNS7_9SyncTokenEN4base12OnceCallbackIFvSD_EEENSt3__110unique_ptrINS_24RecyclableCanvasResourceENSI_14default_deleteISK_EEEE(%"class.blink::WebGPUMailboxTexture"* nocapture, %"class.blink::DawnControlClientHolder"*, %struct.WGPUDeviceImpl*, i32, %"struct.gpu::Mailbox"* dereferenceable(16), %"struct.gpu::SyncToken"* dereferenceable(24), %"class.base::OnceCallback"* nocapture, i64) unnamed_addr #0 align 2 {
  %9 = alloca %"struct.gpu::webgpu::ReservedTexture", align 8
  %10 = ptrtoint %"class.blink::DawnControlClientHolder"* %1 to i64
  %11 = getelementptr inbounds %"class.blink::WebGPUMailboxTexture", %"class.blink::WebGPUMailboxTexture"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %11, align 4
  %12 = getelementptr inbounds %"class.blink::WebGPUMailboxTexture", %"class.blink::WebGPUMailboxTexture"* %0, i64 0, i32 1
  %13 = bitcast %class.scoped_refptr.0* %12 to i64*
  store i64 %10, i64* %13, align 8
  %14 = getelementptr inbounds %"class.blink::WebGPUMailboxTexture", %"class.blink::WebGPUMailboxTexture"* %0, i64 0, i32 2
  store %struct.WGPUDeviceImpl* %2, %struct.WGPUDeviceImpl** %14, align 8
  %15 = getelementptr inbounds %"class.blink::WebGPUMailboxTexture", %"class.blink::WebGPUMailboxTexture"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.base::OnceCallback"* %6 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.base::OnceCallback"* %15 to i64*
  store i64 %18, i64* %19, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %16, align 8
  %20 = getelementptr inbounds %"class.blink::WebGPUMailboxTexture", %"class.blink::WebGPUMailboxTexture"* %0, i64 0, i32 5
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.blink::WebGPUMailboxTexture", %"class.blink::WebGPUMailboxTexture"* %0, i64 0, i32 6
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %"class.blink::WebGPUMailboxTexture", %"class.blink::WebGPUMailboxTexture"* %0, i64 0, i32 7
  %23 = bitcast %"class.std::__1::unique_ptr.117"* %22 to i64*
  store i64 %7, i64* %23, align 8
  %24 = getelementptr inbounds %class.scoped_refptr.0, %class.scoped_refptr.0* %12, i64 0, i32 0
  %25 = load %"class.blink::DawnControlClientHolder"*, %"class.blink::DawnControlClientHolder"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %25, i64 0, i32 3, i32 70
  %27 = load void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)** %26, align 8
  %28 = load %struct.WGPUDeviceImpl*, %struct.WGPUDeviceImpl** %14, align 8
  tail call void %27(%struct.WGPUDeviceImpl* %28) #7
  %29 = load %"class.blink::DawnControlClientHolder"*, %"class.blink::DawnControlClientHolder"** %24, align 8
  %30 = tail call %"class.gpu::webgpu::WebGPUInterface"* @_ZNK5blink23DawnControlClientHolder12GetInterfaceEv(%"class.blink::DawnControlClientHolder"* %29) #7
  %31 = getelementptr inbounds %"class.gpu::webgpu::WebGPUInterface", %"class.gpu::webgpu::WebGPUInterface"* %30, i64 0, i32 0
  %32 = getelementptr inbounds %"struct.gpu::SyncToken", %"struct.gpu::SyncToken"* %5, i64 0, i32 0
  %33 = bitcast %"class.gpu::webgpu::WebGPUInterface"* %30 to void (%"class.gpu::InterfaceBase"*, i8*)***
  %34 = load void (%"class.gpu::InterfaceBase"*, i8*)**, void (%"class.gpu::InterfaceBase"*, i8*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.gpu::InterfaceBase"*, i8*)*, void (%"class.gpu::InterfaceBase"*, i8*)** %34, i64 3
  %36 = load void (%"class.gpu::InterfaceBase"*, i8*)*, void (%"class.gpu::InterfaceBase"*, i8*)** %35, align 8
  tail call void %36(%"class.gpu::InterfaceBase"* %31, i8* %32) #7
  %37 = bitcast %"struct.gpu::webgpu::ReservedTexture"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #7
  %38 = getelementptr inbounds %"struct.gpu::webgpu::ReservedTexture", %"struct.gpu::webgpu::ReservedTexture"* %9, i64 0, i32 1
  %39 = getelementptr inbounds %"struct.gpu::webgpu::ReservedTexture", %"struct.gpu::webgpu::ReservedTexture"* %9, i64 0, i32 2
  %40 = getelementptr inbounds %"struct.gpu::webgpu::ReservedTexture", %"struct.gpu::webgpu::ReservedTexture"* %9, i64 0, i32 3
  %41 = getelementptr inbounds %"struct.gpu::webgpu::ReservedTexture", %"struct.gpu::webgpu::ReservedTexture"* %9, i64 0, i32 4
  %42 = bitcast %"struct.gpu::webgpu::ReservedTexture"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 24, i1 false)
  %43 = load %struct.WGPUDeviceImpl*, %struct.WGPUDeviceImpl** %14, align 8
  %44 = bitcast %"class.gpu::webgpu::WebGPUInterface"* %30 to void (%"struct.gpu::webgpu::ReservedTexture"*, %"class.gpu::webgpu::WebGPUInterface"*, %struct.WGPUDeviceImpl*)***
  %45 = load void (%"struct.gpu::webgpu::ReservedTexture"*, %"class.gpu::webgpu::WebGPUInterface"*, %struct.WGPUDeviceImpl*)**, void (%"struct.gpu::webgpu::ReservedTexture"*, %"class.gpu::webgpu::WebGPUInterface"*, %struct.WGPUDeviceImpl*)*** %44, align 8
  %46 = getelementptr inbounds void (%"struct.gpu::webgpu::ReservedTexture"*, %"class.gpu::webgpu::WebGPUInterface"*, %struct.WGPUDeviceImpl*)*, void (%"struct.gpu::webgpu::ReservedTexture"*, %"class.gpu::webgpu::WebGPUInterface"*, %struct.WGPUDeviceImpl*)** %45, i64 12
  %47 = load void (%"struct.gpu::webgpu::ReservedTexture"*, %"class.gpu::webgpu::WebGPUInterface"*, %struct.WGPUDeviceImpl*)*, void (%"struct.gpu::webgpu::ReservedTexture"*, %"class.gpu::webgpu::WebGPUInterface"*, %struct.WGPUDeviceImpl*)** %46, align 8
  call void %47(%"struct.gpu::webgpu::ReservedTexture"* nonnull sret %9, %"class.gpu::webgpu::WebGPUInterface"* %30, %struct.WGPUDeviceImpl* %43) #7
  %48 = load i32, i32* %38, align 8
  store i32 %48, i32* %20, align 8
  %49 = load i32, i32* %39, align 4
  store i32 %49, i32* %21, align 4
  %50 = bitcast %"struct.gpu::webgpu::ReservedTexture"* %9 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.blink::WebGPUMailboxTexture", %"class.blink::WebGPUMailboxTexture"* %0, i64 0, i32 4
  %53 = bitcast %struct.WGPUTextureImpl** %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = load i32, i32* %40, align 8
  %55 = load i32, i32* %41, align 4
  %56 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %4, i64 0, i32 0, i64 0
  %57 = bitcast %"class.gpu::webgpu::WebGPUInterface"* %30 to void (%"class.gpu::webgpu::WebGPUInterface"*, i32, i32, i32, i32, i32, i8*)***
  %58 = load void (%"class.gpu::webgpu::WebGPUInterface"*, i32, i32, i32, i32, i32, i8*)**, void (%"class.gpu::webgpu::WebGPUInterface"*, i32, i32, i32, i32, i32, i8*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.gpu::webgpu::WebGPUInterface"*, i32, i32, i32, i32, i32, i8*)*, void (%"class.gpu::webgpu::WebGPUInterface"*, i32, i32, i32, i32, i32, i8*)** %58, i64 16
  %60 = load void (%"class.gpu::webgpu::WebGPUInterface"*, i32, i32, i32, i32, i32, i8*)*, void (%"class.gpu::webgpu::WebGPUInterface"*, i32, i32, i32, i32, i32, i8*)** %59, align 8
  call void %60(%"class.gpu::webgpu::WebGPUInterface"* %30, i32 %54, i32 %55, i32 %48, i32 %49, i32 %3, i8* %56) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #7
  ret void
}

declare %"class.gpu::webgpu::WebGPUInterface"* @_ZNK5blink23DawnControlClientHolder12GetInterfaceEv(%"class.blink::DawnControlClientHolder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20WebGPUMailboxTextureD2Ev(%"class.blink::WebGPUMailboxTexture"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"struct.gpu::SyncToken", align 8
  %4 = getelementptr inbounds %"class.blink::WebGPUMailboxTexture", %"class.blink::WebGPUMailboxTexture"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.blink::DawnControlClientHolder"*, %"class.blink::DawnControlClientHolder"** %4, align 8
  %6 = tail call %"class.gpu::webgpu::WebGPUInterface"* @_ZNK5blink23DawnControlClientHolder12GetInterfaceEv(%"class.blink::DawnControlClientHolder"* %5) #7
  %7 = getelementptr inbounds %"class.blink::WebGPUMailboxTexture", %"class.blink::WebGPUMailboxTexture"* %0, i64 0, i32 5
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.blink::WebGPUMailboxTexture", %"class.blink::WebGPUMailboxTexture"* %0, i64 0, i32 6
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.gpu::webgpu::WebGPUInterface"* %6 to void (%"class.gpu::webgpu::WebGPUInterface"*, i32, i32)***
  %12 = load void (%"class.gpu::webgpu::WebGPUInterface"*, i32, i32)**, void (%"class.gpu::webgpu::WebGPUInterface"*, i32, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.gpu::webgpu::WebGPUInterface"*, i32, i32)*, void (%"class.gpu::webgpu::WebGPUInterface"*, i32, i32)** %12, i64 17
  %14 = load void (%"class.gpu::webgpu::WebGPUInterface"*, i32, i32)*, void (%"class.gpu::webgpu::WebGPUInterface"*, i32, i32)** %13, align 8
  tail call void %14(%"class.gpu::webgpu::WebGPUInterface"* %6, i32 %8, i32 %10) #7
  %15 = getelementptr inbounds %"class.blink::WebGPUMailboxTexture", %"class.blink::WebGPUMailboxTexture"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %15, i64 0, i32 0
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %15, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %17, align 8
  %19 = icmp eq %"class.base::internal::BindStateBase"* %18, null
  br i1 %19, label %36, label %20

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"struct.gpu::SyncToken", %"struct.gpu::SyncToken"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  call void @_ZN3gpu9SyncTokenC1Ev(%"struct.gpu::SyncToken"* nonnull %3) #7
  %22 = getelementptr inbounds %"class.gpu::webgpu::WebGPUInterface", %"class.gpu::webgpu::WebGPUInterface"* %6, i64 0, i32 0
  %23 = bitcast %"class.gpu::webgpu::WebGPUInterface"* %6 to void (%"class.gpu::InterfaceBase"*, i8*)***
  %24 = load void (%"class.gpu::InterfaceBase"*, i8*)**, void (%"class.gpu::InterfaceBase"*, i8*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.gpu::InterfaceBase"*, i8*)*, void (%"class.gpu::InterfaceBase"*, i8*)** %24, i64 1
  %26 = load void (%"class.gpu::InterfaceBase"*, i8*)*, void (%"class.gpu::InterfaceBase"*, i8*)** %25, align 8
  call void %26(%"class.gpu::InterfaceBase"* %22, i8* nonnull %21) #7
  %27 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #7
  %28 = bitcast %"class.base::OnceCallback"* %15 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %29, i64* %30, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %17, align 8
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %32 = inttoptr i64 %29 to %"class.base::internal::BindStateBase"*
  %33 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %32, i64 0, i32 1
  %34 = bitcast void ()** %33 to void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*)**
  %35 = load void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*)** %34, align 8
  call void %35(%"class.base::internal::BindStateBase"* %32, %"struct.gpu::SyncToken"* nonnull dereferenceable(24) %3) #7
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %31) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #7
  br label %36

36:                                               ; preds = %1, %20
  %37 = load %"class.blink::DawnControlClientHolder"*, %"class.blink::DawnControlClientHolder"** %4, align 8
  %38 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %37, i64 0, i32 3, i32 71
  %39 = load void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)** %38, align 8
  %40 = getelementptr inbounds %"class.blink::WebGPUMailboxTexture", %"class.blink::WebGPUMailboxTexture"* %0, i64 0, i32 2
  %41 = load %struct.WGPUDeviceImpl*, %struct.WGPUDeviceImpl** %40, align 8
  call void %39(%struct.WGPUDeviceImpl* %41) #7
  %42 = getelementptr inbounds %"class.blink::WebGPUMailboxTexture", %"class.blink::WebGPUMailboxTexture"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %43 = load %"class.blink::RecyclableCanvasResource"*, %"class.blink::RecyclableCanvasResource"** %42, align 8
  store %"class.blink::RecyclableCanvasResource"* null, %"class.blink::RecyclableCanvasResource"** %42, align 8
  %44 = icmp eq %"class.blink::RecyclableCanvasResource"* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %36
  call void @_ZN5blink24RecyclableCanvasResourceD1Ev(%"class.blink::RecyclableCanvasResource"* nonnull %43) #7
  %46 = bitcast %"class.blink::RecyclableCanvasResource"* %43 to i8*
  call void @_ZdlPv(i8* %46) #8
  br label %47

47:                                               ; preds = %36, %45
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %16) #7
  %48 = load %"class.blink::DawnControlClientHolder"*, %"class.blink::DawnControlClientHolder"** %4, align 8
  %49 = icmp eq %"class.blink::DawnControlClientHolder"* %48, null
  br i1 %49, label %57, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %48, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %51) #7
  %52 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %50
  call void @_ZN5blink23DawnControlClientHolderD2Ev(%"class.blink::DawnControlClientHolder"* nonnull %48) #7
  %56 = bitcast %"class.blink::DawnControlClientHolder"* %48 to i8*
  call void @free(i8* %56) #7
  br label %57

57:                                               ; preds = %47, %50, %55
  ret void
}

declare void @_ZN3gpu9SyncTokenC1Ev(%"struct.gpu::SyncToken"*) unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23DawnControlClientHolderD2Ev(%"class.blink::DawnControlClientHolder"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %0, i64 0, i32 5, i32 10, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #7
  %4 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %0, i64 0, i32 5, i32 9, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %4) #7
  %5 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %0, i64 0, i32 5, i32 6, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #7
  %6 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %0, i64 0, i32 5, i32 5, i32 0
  %7 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %6, align 8
  %8 = icmp eq %"class.base::SingleThreadTaskRunner"* %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %7, i64 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe.87", %"class.base::RefCountedThreadSafe.87"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw sub i32* %11, i32 1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %17

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.base::RefCountedThreadSafe.87", %"class.base::RefCountedThreadSafe.87"* %10, i64 -2
  %16 = bitcast %"class.base::RefCountedThreadSafe.87"* %15 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %16) #7
  br label %17

17:                                               ; preds = %1, %9, %14
  %18 = bitcast %"class.blink::WebGPURecyclableResourceCache"* %2 to %"class.WTF::ConditionalDestructor"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_5DequeIN5blink29WebGPURecyclableResourceCache8ResourceELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor"* %18) #7
  %19 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"class.blink::WebGraphicsContext3DProviderWrapper"*, %"class.blink::WebGraphicsContext3DProviderWrapper"** %19, align 8
  store %"class.blink::WebGraphicsContext3DProviderWrapper"* null, %"class.blink::WebGraphicsContext3DProviderWrapper"** %19, align 8
  %21 = icmp eq %"class.blink::WebGraphicsContext3DProviderWrapper"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  tail call void @_ZN5blink35WebGraphicsContext3DProviderWrapperD1Ev(%"class.blink::WebGraphicsContext3DProviderWrapper"* nonnull %20) #7
  %23 = bitcast %"class.blink::WebGraphicsContext3DProviderWrapper"* %20 to i8*
  tail call void @free(i8* %23) #7
  br label %24

24:                                               ; preds = %17, %22
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF21ConditionalDestructorINS_5DequeIN5blink29WebGPURecyclableResourceCache8ResourceELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.WTF::ConditionalDestructor"* %0 to %"struct.blink::WebGPURecyclableResourceCache::Resource"**
  %3 = load %"struct.blink::WebGPURecyclableResourceCache::Resource"*, %"struct.blink::WebGPURecyclableResourceCache::Resource"** %2, align 8
  %4 = icmp eq %"struct.blink::WebGPURecyclableResourceCache::Resource"* %3, null
  br i1 %4, label %79, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::ConditionalDestructor", %"class.WTF::ConditionalDestructor"* %0, i64 16
  %7 = bitcast %"class.WTF::ConditionalDestructor"* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.WTF::ConditionalDestructor", %"class.WTF::ConditionalDestructor"* %0, i64 20
  %10 = bitcast %"class.WTF::ConditionalDestructor"* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %8, %11
  br i1 %12, label %76, label %13

13:                                               ; preds = %5
  %14 = icmp ugt i32 %8, %11
  %15 = zext i32 %11 to i64
  %16 = getelementptr inbounds %"struct.blink::WebGPURecyclableResourceCache::Resource", %"struct.blink::WebGPURecyclableResourceCache::Resource"* %3, i64 %15
  br i1 %14, label %33, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds %"struct.blink::WebGPURecyclableResourceCache::Resource", %"struct.blink::WebGPURecyclableResourceCache::Resource"* %3, i64 %18
  br label %20

20:                                               ; preds = %30, %17
  %21 = phi %"struct.blink::WebGPURecyclableResourceCache::Resource"* [ %31, %30 ], [ %19, %17 ]
  %22 = getelementptr inbounds %"struct.blink::WebGPURecyclableResourceCache::Resource", %"struct.blink::WebGPURecyclableResourceCache::Resource"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::CanvasResourceProvider"*, %"class.blink::CanvasResourceProvider"** %22, align 8
  store %"class.blink::CanvasResourceProvider"* null, %"class.blink::CanvasResourceProvider"** %22, align 8
  %24 = icmp eq %"class.blink::CanvasResourceProvider"* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::CanvasResourceProvider"* %23 to void (%"class.blink::CanvasResourceProvider"*)***
  %27 = load void (%"class.blink::CanvasResourceProvider"*)**, void (%"class.blink::CanvasResourceProvider"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::CanvasResourceProvider"*)*, void (%"class.blink::CanvasResourceProvider"*)** %27, i64 1
  %29 = load void (%"class.blink::CanvasResourceProvider"*)*, void (%"class.blink::CanvasResourceProvider"*)** %28, align 8
  tail call void %29(%"class.blink::CanvasResourceProvider"* nonnull %23) #7
  br label %30

30:                                               ; preds = %25, %20
  %31 = getelementptr inbounds %"struct.blink::WebGPURecyclableResourceCache::Resource", %"struct.blink::WebGPURecyclableResourceCache::Resource"* %21, i64 1
  %32 = icmp eq %"struct.blink::WebGPURecyclableResourceCache::Resource"* %31, %16
  br i1 %32, label %76, label %20

33:                                               ; preds = %13
  %34 = icmp eq i32 %11, 0
  br i1 %34, label %51, label %35

35:                                               ; preds = %33, %45
  %36 = phi %"struct.blink::WebGPURecyclableResourceCache::Resource"* [ %46, %45 ], [ %3, %33 ]
  %37 = getelementptr inbounds %"struct.blink::WebGPURecyclableResourceCache::Resource", %"struct.blink::WebGPURecyclableResourceCache::Resource"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::CanvasResourceProvider"*, %"class.blink::CanvasResourceProvider"** %37, align 8
  store %"class.blink::CanvasResourceProvider"* null, %"class.blink::CanvasResourceProvider"** %37, align 8
  %39 = icmp eq %"class.blink::CanvasResourceProvider"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.blink::CanvasResourceProvider"* %38 to void (%"class.blink::CanvasResourceProvider"*)***
  %42 = load void (%"class.blink::CanvasResourceProvider"*)**, void (%"class.blink::CanvasResourceProvider"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::CanvasResourceProvider"*)*, void (%"class.blink::CanvasResourceProvider"*)** %42, i64 1
  %44 = load void (%"class.blink::CanvasResourceProvider"*)*, void (%"class.blink::CanvasResourceProvider"*)** %43, align 8
  tail call void %44(%"class.blink::CanvasResourceProvider"* nonnull %38) #7
  br label %45

45:                                               ; preds = %40, %35
  %46 = getelementptr inbounds %"struct.blink::WebGPURecyclableResourceCache::Resource", %"struct.blink::WebGPURecyclableResourceCache::Resource"* %36, i64 1
  %47 = icmp eq %"struct.blink::WebGPURecyclableResourceCache::Resource"* %46, %16
  br i1 %47, label %48, label %35

48:                                               ; preds = %45
  %49 = load %"struct.blink::WebGPURecyclableResourceCache::Resource"*, %"struct.blink::WebGPURecyclableResourceCache::Resource"** %2, align 8
  %50 = load i32, i32* %7, align 8
  br label %51

51:                                               ; preds = %48, %33
  %52 = phi i32 [ %50, %48 ], [ %8, %33 ]
  %53 = phi %"struct.blink::WebGPURecyclableResourceCache::Resource"* [ %49, %48 ], [ %3, %33 ]
  %54 = getelementptr inbounds %"class.WTF::ConditionalDestructor", %"class.WTF::ConditionalDestructor"* %0, i64 8
  %55 = bitcast %"class.WTF::ConditionalDestructor"* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.blink::WebGPURecyclableResourceCache::Resource", %"struct.blink::WebGPURecyclableResourceCache::Resource"* %53, i64 %57
  %59 = icmp eq i32 %52, %56
  br i1 %59, label %76, label %60

60:                                               ; preds = %51
  %61 = zext i32 %52 to i64
  %62 = getelementptr inbounds %"struct.blink::WebGPURecyclableResourceCache::Resource", %"struct.blink::WebGPURecyclableResourceCache::Resource"* %53, i64 %61
  br label %63

63:                                               ; preds = %73, %60
  %64 = phi %"struct.blink::WebGPURecyclableResourceCache::Resource"* [ %74, %73 ], [ %62, %60 ]
  %65 = getelementptr inbounds %"struct.blink::WebGPURecyclableResourceCache::Resource", %"struct.blink::WebGPURecyclableResourceCache::Resource"* %64, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::CanvasResourceProvider"*, %"class.blink::CanvasResourceProvider"** %65, align 8
  store %"class.blink::CanvasResourceProvider"* null, %"class.blink::CanvasResourceProvider"** %65, align 8
  %67 = icmp eq %"class.blink::CanvasResourceProvider"* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %63
  %69 = bitcast %"class.blink::CanvasResourceProvider"* %66 to void (%"class.blink::CanvasResourceProvider"*)***
  %70 = load void (%"class.blink::CanvasResourceProvider"*)**, void (%"class.blink::CanvasResourceProvider"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::CanvasResourceProvider"*)*, void (%"class.blink::CanvasResourceProvider"*)** %70, i64 1
  %72 = load void (%"class.blink::CanvasResourceProvider"*)*, void (%"class.blink::CanvasResourceProvider"*)** %71, align 8
  tail call void %72(%"class.blink::CanvasResourceProvider"* nonnull %66) #7
  br label %73

73:                                               ; preds = %68, %63
  %74 = getelementptr inbounds %"struct.blink::WebGPURecyclableResourceCache::Resource", %"struct.blink::WebGPURecyclableResourceCache::Resource"* %64, i64 1
  %75 = icmp eq %"struct.blink::WebGPURecyclableResourceCache::Resource"* %74, %58
  br i1 %75, label %76, label %63

76:                                               ; preds = %30, %73, %51, %5
  %77 = bitcast %"class.WTF::ConditionalDestructor"* %0 to i8**
  %78 = load i8*, i8** %77, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %78) #7
  store %"struct.blink::WebGPURecyclableResourceCache::Resource"* null, %"struct.blink::WebGPURecyclableResourceCache::Resource"** %2, align 8
  br label %79

79:                                               ; preds = %1, %76
  ret void
}

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink35WebGraphicsContext3DProviderWrapperD1Ev(%"class.blink::WebGraphicsContext3DProviderWrapper"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink17StaticBitmapImageEFvRKN3gpu9SyncTokenEEJN3WTF18RetainedRefWrapperIS4_EEEEEFvS8_EE7RunOnceEPNS0_13BindStateBaseES8_(%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"* dereferenceable(24)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.blink::StaticBitmapImage"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.blink::StaticBitmapImage"*, %"struct.gpu::SyncToken"*)**
  %22 = load void (%"class.blink::StaticBitmapImage"*, %"struct.gpu::SyncToken"*)*, void (%"class.blink::StaticBitmapImage"*, %"struct.gpu::SyncToken"*)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.blink::StaticBitmapImage"*, %"struct.gpu::SyncToken"*)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.blink::StaticBitmapImage"*, %"struct.gpu::SyncToken"*)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.blink::StaticBitmapImage"* %13, %"struct.gpu::SyncToken"* dereferenceable(24) %1) #7
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink17StaticBitmapImageEFvRKN3gpu9SyncTokenEEJN3WTF18RetainedRefWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::StaticBitmapImage"**
  %6 = load %"class.blink::StaticBitmapImage"*, %"class.blink::StaticBitmapImage"** %5, align 8
  %7 = icmp eq %"class.blink::StaticBitmapImage"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::StaticBitmapImage", %"class.blink::StaticBitmapImage"* %6, i64 0, i32 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe.125", %"class.base::RefCountedThreadSafe.125"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe.125", %"class.base::RefCountedThreadSafe.125"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe.125"* %14 to %"class.blink::Image"*
  %16 = bitcast %"class.base::RefCountedThreadSafe.125"* %14 to void (%"class.blink::Image"*)***
  %17 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %17, i64 1
  %19 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %18, align 8
  tail call void %19(%"class.blink::Image"* nonnull %15) #7
  br label %20

20:                                               ; preds = %3, %8, %13
  %21 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #8
  br label %22

22:                                               ; preds = %20, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink24RecyclableCanvasResourceD1Ev(%"class.blink::RecyclableCanvasResource"*) unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5, !7}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink17StaticBitmapImageEFvRKN3gpu9SyncTokenEEJN3WTF18RetainedRefWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink17StaticBitmapImageEFvRKN3gpu9SyncTokenEEJN3WTF18RetainedRefWrapperIS4_EEEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIMN5blink17StaticBitmapImageEFvRKN3gpu9SyncTokenEEJN3WTF18RetainedRefWrapperIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIMN5blink17StaticBitmapImageEFvRKN3gpu9SyncTokenEEJN3WTF18RetainedRefWrapperIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!7 = distinct !{!7, !8, !"_ZN3WTF4BindIMN5blink17StaticBitmapImageEFvRKN3gpu9SyncTokenEEJNS_18RetainedRefWrapperIS2_EEEFvS6_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!8 = distinct !{!8, !"_ZN3WTF4BindIMN5blink17StaticBitmapImageEFvRKN3gpu9SyncTokenEEJNS_18RetainedRefWrapperIS2_EEEFvS6_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
