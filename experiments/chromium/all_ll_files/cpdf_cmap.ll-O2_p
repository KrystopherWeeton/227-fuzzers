; ModuleID = '../../third_party/pdfium/core/fpdfapi/font/cpdf_cmap.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/font/cpdf_cmap.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.(anonymous namespace)::PredefinedCMap" = type { i8*, i8, i8, i8, i8, [2 x %"struct.(anonymous namespace)::ByteRange"] }
%"struct.(anonymous namespace)::ByteRange" = type { i8, i8 }
%class.CPDF_CMap = type { %"class.fxcrt::Retainable", i8, i8, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.1", %"class.std::__1::vector.7", %"class.std::__1::vector.12", %"class.fxcrt::UnownedPtr" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::vector" = type { i64*, i64, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.CPDF_CMap::CodeRange"*, %"struct.CPDF_CMap::CodeRange"*, %"class.std::__1::__compressed_pair.2" }
%"struct.CPDF_CMap::CodeRange" = type { i64, [4 x i8], [4 x i8] }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.CPDF_CMap::CodeRange"* }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { i16*, i16*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i16* }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"struct.CPDF_CMap::CIDRange"*, %"struct.CPDF_CMap::CIDRange"*, %"class.std::__1::__compressed_pair.14" }
%"struct.CPDF_CMap::CIDRange" = type { i32, i32, i16 }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.CPDF_CMap::CIDRange"* }
%"class.fxcrt::UnownedPtr" = type { %struct.FXCMAP_CMap* }
%struct.FXCMAP_CMap = type { i8*, i16*, %struct.FXCMAP_DWordCIDMap*, i16, i16, i8, i8 }
%struct.FXCMAP_DWordCIDMap = type { i16, i16, i16, i16 }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.19", i64 }
%"class.fxcrt::UnownedPtr.19" = type { i8* }
%"class.pdfium::span.20" = type { %"class.fxcrt::UnownedPtr", i64 }
%class.CPDF_FontGlobals = type { %class.CPDF_CMapManager, [6 x %"class.pdfium::span.20"], [6 x %"class.pdfium::span.31"], %"class.std::__1::map.33" }
%class.CPDF_CMapManager = type { %"class.std::__1::map", [6 x %"class.std::__1::unique_ptr"] }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.21", %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %class.CPDF_CID2UnicodeMap* }
%class.CPDF_CID2UnicodeMap = type opaque
%"class.pdfium::span.31" = type { %"class.fxcrt::UnownedPtr.32", i64 }
%"class.fxcrt::UnownedPtr.32" = type { i16* }
%"class.std::__1::map.33" = type { %"class.std::__1::__tree.34" }
%"class.std::__1::__tree.34" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.35", %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem" }
%class.CPDF_CMapParser = type { i32, i32, %"class.fxcrt::UnownedPtr.44", %"class.std::__1::vector.1", %"class.std::__1::vector.1", %"class.std::__1::vector.12", %"class.fxcrt::ByteString", [4 x i32] }
%"class.fxcrt::UnownedPtr.44" = type { %class.CPDF_CMap* }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.45" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%class.CPDF_SimpleParser = type <{ %"class.pdfium::span", i32, [4 x i8] }>

@_ZTV9CPDF_CMap = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDF_CMap*)* @_ZN9CPDF_CMapD2Ev to i8*), i8* bitcast (void (%class.CPDF_CMap*)* @_ZN9CPDF_CMapD0Ev to i8*)] }, align 8
@_ZN12_GLOBAL__N_116kPredefinedCMapsE = internal constant [32 x %"struct.(anonymous namespace)::PredefinedCMap"] [%"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0), i8 1, i8 1, i8 2, i8 1, [2 x %"struct.(anonymous namespace)::ByteRange"] [%"struct.(anonymous namespace)::ByteRange" { i8 -95, i8 -2 }, %"struct.(anonymous namespace)::ByteRange" zeroinitializer] }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i32 0, i32 0), i8 1, i8 1, i8 2, i8 1, [2 x %"struct.(anonymous namespace)::ByteRange"] [%"struct.(anonymous namespace)::ByteRange" { i8 -95, i8 -4 }, %"struct.(anonymous namespace)::ByteRange" zeroinitializer] }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0), i8 1, i8 1, i8 2, i8 1, [2 x %"struct.(anonymous namespace)::ByteRange"] [%"struct.(anonymous namespace)::ByteRange" { i8 -127, i8 -2 }, %"struct.(anonymous namespace)::ByteRange" zeroinitializer] }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i8 1, i8 1, i8 2, i8 1, [2 x %"struct.(anonymous namespace)::ByteRange"] [%"struct.(anonymous namespace)::ByteRange" { i8 -127, i8 -2 }, %"struct.(anonymous namespace)::ByteRange" zeroinitializer] }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i32 0, i32 0), i8 1, i8 1, i8 2, i8 1, [2 x %"struct.(anonymous namespace)::ByteRange"] [%"struct.(anonymous namespace)::ByteRange" { i8 -127, i8 -2 }, %"struct.(anonymous namespace)::ByteRange" zeroinitializer] }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), i8 1, i8 1, i8 2, i8 1, [2 x %"struct.(anonymous namespace)::ByteRange"] [%"struct.(anonymous namespace)::ByteRange" { i8 -127, i8 -2 }, %"struct.(anonymous namespace)::ByteRange" zeroinitializer] }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i32 0, i32 0), i8 1, i8 5, i8 1, i8 0, [2 x %"struct.(anonymous namespace)::ByteRange"] zeroinitializer }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i32 0, i32 0), i8 1, i8 7, i8 1, i8 0, [2 x %"struct.(anonymous namespace)::ByteRange"] zeroinitializer }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i32 0, i32 0), i8 2, i8 2, i8 2, i8 1, [2 x %"struct.(anonymous namespace)::ByteRange"] [%"struct.(anonymous namespace)::ByteRange" { i8 -95, i8 -4 }, %"struct.(anonymous namespace)::ByteRange" zeroinitializer] }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i32 0, i32 0), i8 2, i8 2, i8 2, i8 1, [2 x %"struct.(anonymous namespace)::ByteRange"] [%"struct.(anonymous namespace)::ByteRange" { i8 -120, i8 -2 }, %"struct.(anonymous namespace)::ByteRange" zeroinitializer] }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i32 0, i32 0), i8 2, i8 2, i8 2, i8 1, [2 x %"struct.(anonymous namespace)::ByteRange"] [%"struct.(anonymous namespace)::ByteRange" { i8 -95, i8 -2 }, %"struct.(anonymous namespace)::ByteRange" zeroinitializer] }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i32 0, i32 0), i8 2, i8 2, i8 2, i8 1, [2 x %"struct.(anonymous namespace)::ByteRange"] [%"struct.(anonymous namespace)::ByteRange" { i8 -95, i8 -2 }, %"struct.(anonymous namespace)::ByteRange" zeroinitializer] }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i32 0, i32 0), i8 2, i8 5, i8 1, i8 0, [2 x %"struct.(anonymous namespace)::ByteRange"] zeroinitializer }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i32 0, i32 0), i8 2, i8 7, i8 1, i8 0, [2 x %"struct.(anonymous namespace)::ByteRange"] zeroinitializer }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i32 0, i32 0), i8 3, i8 3, i8 2, i8 2, [2 x %"struct.(anonymous namespace)::ByteRange"] [%"struct.(anonymous namespace)::ByteRange" { i8 -127, i8 -97 }, %"struct.(anonymous namespace)::ByteRange" { i8 -32, i8 -4 }] }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i32 0, i32 0), i8 3, i8 3, i8 2, i8 2, [2 x %"struct.(anonymous namespace)::ByteRange"] [%"struct.(anonymous namespace)::ByteRange" { i8 -127, i8 -97 }, %"struct.(anonymous namespace)::ByteRange" { i8 -32, i8 -4 }] }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i32 0, i32 0), i8 3, i8 3, i8 2, i8 2, [2 x %"struct.(anonymous namespace)::ByteRange"] [%"struct.(anonymous namespace)::ByteRange" { i8 -127, i8 -97 }, %"struct.(anonymous namespace)::ByteRange" { i8 -32, i8 -4 }] }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i32 0, i32 0), i8 3, i8 3, i8 2, i8 2, [2 x %"struct.(anonymous namespace)::ByteRange"] [%"struct.(anonymous namespace)::ByteRange" { i8 -127, i8 -97 }, %"struct.(anonymous namespace)::ByteRange" { i8 -32, i8 -4 }] }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i32 0, i32 0), i8 3, i8 3, i8 2, i8 2, [2 x %"struct.(anonymous namespace)::ByteRange"] [%"struct.(anonymous namespace)::ByteRange" { i8 -127, i8 -97 }, %"struct.(anonymous namespace)::ByteRange" { i8 -32, i8 -4 }] }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0), i8 3, i8 3, i8 2, i8 2, [2 x %"struct.(anonymous namespace)::ByteRange"] [%"struct.(anonymous namespace)::ByteRange" { i8 -114, i8 -114 }, %"struct.(anonymous namespace)::ByteRange" { i8 -95, i8 -2 }] }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i8 3, i8 3, i8 1, i8 1, [2 x %"struct.(anonymous namespace)::ByteRange"] [%"struct.(anonymous namespace)::ByteRange" { i8 33, i8 126 }, %"struct.(anonymous namespace)::ByteRange" zeroinitializer] }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i32 0, i32 0), i8 3, i8 3, i8 1, i8 1, [2 x %"struct.(anonymous namespace)::ByteRange"] [%"struct.(anonymous namespace)::ByteRange" { i8 33, i8 126 }, %"struct.(anonymous namespace)::ByteRange" zeroinitializer] }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i32 0, i32 0), i8 3, i8 3, i8 2, i8 2, [2 x %"struct.(anonymous namespace)::ByteRange"] [%"struct.(anonymous namespace)::ByteRange" { i8 -127, i8 -97 }, %"struct.(anonymous namespace)::ByteRange" { i8 -32, i8 -4 }] }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25, i32 0, i32 0), i8 3, i8 5, i8 1, i8 0, [2 x %"struct.(anonymous namespace)::ByteRange"] zeroinitializer }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i32 0, i32 0), i8 3, i8 5, i8 1, i8 0, [2 x %"struct.(anonymous namespace)::ByteRange"] zeroinitializer }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.27, i32 0, i32 0), i8 3, i8 7, i8 1, i8 0, [2 x %"struct.(anonymous namespace)::ByteRange"] zeroinitializer }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), i8 4, i8 4, i8 2, i8 1, [2 x %"struct.(anonymous namespace)::ByteRange"] [%"struct.(anonymous namespace)::ByteRange" { i8 -95, i8 -2 }, %"struct.(anonymous namespace)::ByteRange" zeroinitializer] }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i32 0, i32 0), i8 4, i8 4, i8 2, i8 1, [2 x %"struct.(anonymous namespace)::ByteRange"] [%"struct.(anonymous namespace)::ByteRange" { i8 -127, i8 -2 }, %"struct.(anonymous namespace)::ByteRange" zeroinitializer] }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.30, i32 0, i32 0), i8 4, i8 4, i8 2, i8 1, [2 x %"struct.(anonymous namespace)::ByteRange"] [%"struct.(anonymous namespace)::ByteRange" { i8 -127, i8 -2 }, %"struct.(anonymous namespace)::ByteRange" zeroinitializer] }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i32 0, i32 0), i8 4, i8 4, i8 2, i8 1, [2 x %"struct.(anonymous namespace)::ByteRange"] [%"struct.(anonymous namespace)::ByteRange" { i8 -95, i8 -3 }, %"struct.(anonymous namespace)::ByteRange" zeroinitializer] }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.32, i32 0, i32 0), i8 4, i8 5, i8 1, i8 0, [2 x %"struct.(anonymous namespace)::ByteRange"] zeroinitializer }, %"struct.(anonymous namespace)::PredefinedCMap" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i32 0, i32 0), i8 4, i8 7, i8 1, i8 0, [2 x %"struct.(anonymous namespace)::ByteRange"] zeroinitializer }], align 16
@.str.2 = private unnamed_addr constant [7 x i8] c"GB-EUC\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"GBpc-EUC\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"GBK-EUC\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"GBKp-EUC\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"GBK2K-EUC\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"GBK2K\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"UniGB-UCS2\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"UniGB-UTF16\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"B5pc\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"HKscs-B5\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"ETen-B5\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"ETenms-B5\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"UniCNS-UCS2\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"UniCNS-UTF16\00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"83pv-RKSJ\00", align 1
@.str.17 = private unnamed_addr constant [10 x i8] c"90ms-RKSJ\00", align 1
@.str.18 = private unnamed_addr constant [11 x i8] c"90msp-RKSJ\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"90pv-RKSJ\00", align 1
@.str.20 = private unnamed_addr constant [9 x i8] c"Add-RKSJ\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"EUC\00", align 1
@.str.22 = private unnamed_addr constant [2 x i8] c"H\00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c"V\00", align 1
@.str.24 = private unnamed_addr constant [9 x i8] c"Ext-RKSJ\00", align 1
@.str.25 = private unnamed_addr constant [12 x i8] c"UniJIS-UCS2\00", align 1
@.str.26 = private unnamed_addr constant [15 x i8] c"UniJIS-UCS2-HW\00", align 1
@.str.27 = private unnamed_addr constant [13 x i8] c"UniJIS-UTF16\00", align 1
@.str.28 = private unnamed_addr constant [8 x i8] c"KSC-EUC\00", align 1
@.str.29 = private unnamed_addr constant [10 x i8] c"KSCms-UHC\00", align 1
@.str.30 = private unnamed_addr constant [13 x i8] c"KSCms-UHC-HW\00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c"KSCpc-EUC\00", align 1
@.str.32 = private unnamed_addr constant [11 x i8] c"UniKS-UCS2\00", align 1
@.str.33 = private unnamed_addr constant [12 x i8] c"UniKS-UTF16\00", align 1

@_ZN9CPDF_CMapC1EN5fxcrt18StringViewTemplateIcEE = hidden unnamed_addr alias void (%class.CPDF_CMap*, %"class.fxcrt::StringViewTemplate"*), void (%class.CPDF_CMap*, %"class.fxcrt::StringViewTemplate"*)* @_ZN9CPDF_CMapC2EN5fxcrt18StringViewTemplateIcEE
@_ZN9CPDF_CMapC1EN6pdfium4spanIKhEE = hidden unnamed_addr alias void (%class.CPDF_CMap*, %"class.pdfium::span"*), void (%class.CPDF_CMap*, %"class.pdfium::span"*)* @_ZN9CPDF_CMapC2EN6pdfium4spanIKhEE
@_ZN9CPDF_CMapD1Ev = hidden unnamed_addr alias void (%class.CPDF_CMap*), void (%class.CPDF_CMap*)* @_ZN9CPDF_CMapD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPDF_CMapC2EN5fxcrt18StringViewTemplateIcEE(%class.CPDF_CMap* nocapture, %"class.fxcrt::StringViewTemplate"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.pdfium::span.20", align 8
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 0, i32 1
  store i64 0, i64* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV9CPDF_CMap, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 1
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %20, label %12

12:                                               ; preds = %2
  %13 = add i64 %10, -1
  %14 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 %13
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 86
  %19 = zext i1 %18 to i8
  br label %20

20:                                               ; preds = %2, %12
  %21 = phi i8 [ %19, %12 ], [ 0, %2 ]
  store i8 %21, i8* %8, align 1
  %22 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 3
  store i8 0, i8* %22, align 2
  %23 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 4
  store i8 1, i8* %23, align 1
  %24 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 5
  %25 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 6
  %26 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 10, i32 0
  %27 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast i32* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %28, i8 0, i64 108, i1 false)
  %29 = load i8*, i8** %27, align 8
  %30 = load i64, i64* %9, align 8
  %31 = icmp eq i64 %30, 10
  br i1 %31, label %32, label %46

32:                                               ; preds = %20
  %33 = load i8, i8* %29, align 1
  %34 = icmp eq i8 %33, 73
  br i1 %34, label %35, label %44

35:                                               ; preds = %32
  %36 = getelementptr inbounds i8, i8* %29, i64 1
  %37 = load i8, i8* %36, align 1
  %38 = icmp eq i8 %37, 100
  br i1 %38, label %174, label %39

39:                                               ; preds = %35, %174, %178, %182, %186, %190, %194, %198, %202
  %40 = getelementptr inbounds i8, i8* %29, i64 1
  %41 = load i8, i8* %40, align 1
  %42 = icmp eq i8 %41, 100
  br i1 %42, label %142, label %44

43:                                               ; preds = %202, %170
  store i32 6, i32* %24, align 4
  store i8 1, i8* %7, align 8
  br label %141

44:                                               ; preds = %39, %142, %146, %150, %154, %158, %162, %166, %170, %32
  %45 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  br label %49

46:                                               ; preds = %20
  %47 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  %48 = icmp ugt i64 %30, 2
  br i1 %48, label %49, label %54

49:                                               ; preds = %44, %46
  %50 = phi i8* [ %45, %44 ], [ %47, %46 ]
  %51 = add i64 %30, -2
  %52 = icmp eq i8* %29, null
  %53 = select i1 %52, i64 0, i64 %51
  br label %54

54:                                               ; preds = %46, %49
  %55 = phi i8* [ %50, %49 ], [ %47, %46 ]
  %56 = phi i64 [ %53, %49 ], [ %30, %46 ]
  %57 = getelementptr inbounds i8, i8* %29, i64 %56
  %58 = icmp eq i64 %56, 0
  br label %59

59:                                               ; preds = %80, %54
  %60 = phi %"struct.(anonymous namespace)::PredefinedCMap"* [ getelementptr inbounds ([32 x %"struct.(anonymous namespace)::PredefinedCMap"], [32 x %"struct.(anonymous namespace)::PredefinedCMap"]* @_ZN12_GLOBAL__N_116kPredefinedCMapsE, i64 0, i64 0), %54 ], [ %81, %80 ]
  %61 = getelementptr inbounds %"struct.(anonymous namespace)::PredefinedCMap", %"struct.(anonymous namespace)::PredefinedCMap"* %60, i64 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = icmp eq i8* %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %59
  %65 = tail call i64 @strlen(i8* nonnull %62) #8
  br label %66

66:                                               ; preds = %64, %59
  %67 = phi i64 [ %65, %64 ], [ 0, %59 ]
  %68 = icmp eq i64 %56, %67
  br i1 %68, label %69, label %80

69:                                               ; preds = %66
  br i1 %58, label %83, label %70

70:                                               ; preds = %69, %76
  %71 = phi i8* [ %78, %76 ], [ %62, %69 ]
  %72 = phi i8* [ %77, %76 ], [ %29, %69 ]
  %73 = load i8, i8* %72, align 1
  %74 = load i8, i8* %71, align 1
  %75 = icmp eq i8 %73, %74
  br i1 %75, label %76, label %80

76:                                               ; preds = %70
  %77 = getelementptr inbounds i8, i8* %72, i64 1
  %78 = getelementptr inbounds i8, i8* %71, i64 1
  %79 = icmp eq i8* %77, %57
  br i1 %79, label %83, label %70

80:                                               ; preds = %70, %66
  %81 = getelementptr inbounds %"struct.(anonymous namespace)::PredefinedCMap", %"struct.(anonymous namespace)::PredefinedCMap"* %60, i64 1
  %82 = icmp eq %"struct.(anonymous namespace)::PredefinedCMap"* %81, getelementptr inbounds ([32 x %"struct.(anonymous namespace)::PredefinedCMap"], [32 x %"struct.(anonymous namespace)::PredefinedCMap"]* @_ZN12_GLOBAL__N_116kPredefinedCMapsE, i64 1, i64 0)
  br i1 %82, label %141, label %59

83:                                               ; preds = %69, %76
  %84 = icmp eq %"struct.(anonymous namespace)::PredefinedCMap"* %60, null
  br i1 %84, label %141, label %85

85:                                               ; preds = %83
  %86 = getelementptr inbounds %"struct.(anonymous namespace)::PredefinedCMap", %"struct.(anonymous namespace)::PredefinedCMap"* %60, i64 0, i32 1
  %87 = load i8, i8* %86, align 8
  store i8 %87, i8* %22, align 2
  %88 = getelementptr inbounds %"struct.(anonymous namespace)::PredefinedCMap", %"struct.(anonymous namespace)::PredefinedCMap"* %60, i64 0, i32 2
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  store i32 %90, i32* %24, align 4
  %91 = getelementptr inbounds %"struct.(anonymous namespace)::PredefinedCMap", %"struct.(anonymous namespace)::PredefinedCMap"* %60, i64 0, i32 3
  %92 = load i8, i8* %91, align 2
  store i8 %92, i8* %23, align 1
  %93 = icmp eq i8 %92, 2
  br i1 %93, label %94, label %130

94:                                               ; preds = %85
  %95 = tail call i8* @_Znwm(i64 32) #9, !noalias !2
  %96 = ptrtoint i8* %95 to i64
  %97 = getelementptr inbounds %"struct.(anonymous namespace)::PredefinedCMap", %"struct.(anonymous namespace)::PredefinedCMap"* %60, i64 0, i32 4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 0, i64 32, i1 false) #10, !noalias !2
  %98 = load i8, i8* %97, align 1, !noalias !2
  %99 = icmp eq i8 %98, 0
  %100 = bitcast i8* %95 to i64*
  br i1 %99, label %126, label %101

101:                                              ; preds = %94
  %102 = zext i8 %98 to i64
  br label %103

103:                                              ; preds = %113, %101
  %104 = phi i64 [ 0, %101 ], [ %114, %113 ]
  %105 = getelementptr inbounds %"struct.(anonymous namespace)::PredefinedCMap", %"struct.(anonymous namespace)::PredefinedCMap"* %60, i64 0, i32 5, i64 %104, i32 0
  %106 = load i8, i8* %105, align 1, !noalias !2
  %107 = getelementptr inbounds %"struct.(anonymous namespace)::PredefinedCMap", %"struct.(anonymous namespace)::PredefinedCMap"* %60, i64 0, i32 5, i64 %104, i32 1
  %108 = load i8, i8* %107, align 1, !noalias !2
  %109 = icmp ugt i8 %106, %108
  br i1 %109, label %113, label %110

110:                                              ; preds = %103
  %111 = zext i8 %106 to i64
  %112 = zext i8 %108 to i64
  br label %116

113:                                              ; preds = %116, %103
  %114 = add nuw nsw i64 %104, 1
  %115 = icmp eq i64 %114, %102
  br i1 %115, label %126, label %103

116:                                              ; preds = %116, %110
  %117 = phi i64 [ %111, %110 ], [ %124, %116 ]
  %118 = lshr i64 %117, 6
  %119 = getelementptr inbounds i64, i64* %100, i64 %118
  %120 = and i64 %117, 63
  %121 = shl i64 1, %120
  %122 = load i64, i64* %119, align 8, !noalias !2
  %123 = or i64 %121, %122
  store i64 %123, i64* %119, align 8, !noalias !2
  %124 = add nuw nsw i64 %117, 1
  %125 = icmp ult i64 %117, %112
  br i1 %125, label %116, label %113

126:                                              ; preds = %113, %94
  %127 = bitcast %"class.std::__1::vector"* %25 to i64*
  store i64 %96, i64* %127, align 8
  %128 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 6, i32 1
  %129 = bitcast i64* %128 to <2 x i64>*
  store <2 x i64> <i64 256, i64 4>, <2 x i64>* %129, align 8
  br label %130

130:                                              ; preds = %126, %85
  %131 = tail call %class.CPDF_FontGlobals* @_ZN16CPDF_FontGlobals11GetInstanceEv() #10
  %132 = load i8, i8* %22, align 2
  %133 = zext i8 %132 to i64
  %134 = getelementptr inbounds %class.CPDF_FontGlobals, %class.CPDF_FontGlobals* %131, i64 0, i32 1, i64 %133
  %135 = bitcast %"class.pdfium::span.20"* %3 to i8*
  %136 = bitcast %"class.pdfium::span.20"* %134 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %135, i8* align 8 %136, i64 16, i1 false) #10
  %137 = bitcast %"class.fxcrt::StringViewTemplate"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %137, i8* align 8 %55, i64 16, i1 false)
  %138 = call %struct.FXCMAP_CMap* @_Z16FindEmbeddedCMapN6pdfium4spanIK11FXCMAP_CMapEEN5fxcrt18StringViewTemplateIcEE(%"class.pdfium::span.20"* nonnull %3, %"class.fxcrt::StringViewTemplate"* nonnull %4) #10
  store %struct.FXCMAP_CMap* %138, %struct.FXCMAP_CMap** %26, align 8
  %139 = icmp eq %struct.FXCMAP_CMap* %138, null
  br i1 %139, label %141, label %140

140:                                              ; preds = %130
  store i8 1, i8* %7, align 8
  br label %141

141:                                              ; preds = %80, %130, %140, %83, %43
  ret void

142:                                              ; preds = %39
  %143 = getelementptr inbounds i8, i8* %29, i64 2
  %144 = load i8, i8* %143, align 1
  %145 = icmp eq i8 %144, 101
  br i1 %145, label %146, label %44

146:                                              ; preds = %142
  %147 = getelementptr inbounds i8, i8* %29, i64 3
  %148 = load i8, i8* %147, align 1
  %149 = icmp eq i8 %148, 110
  br i1 %149, label %150, label %44

150:                                              ; preds = %146
  %151 = getelementptr inbounds i8, i8* %29, i64 4
  %152 = load i8, i8* %151, align 1
  %153 = icmp eq i8 %152, 116
  br i1 %153, label %154, label %44

154:                                              ; preds = %150
  %155 = getelementptr inbounds i8, i8* %29, i64 5
  %156 = load i8, i8* %155, align 1
  %157 = icmp eq i8 %156, 105
  br i1 %157, label %158, label %44

158:                                              ; preds = %154
  %159 = getelementptr inbounds i8, i8* %29, i64 6
  %160 = load i8, i8* %159, align 1
  %161 = icmp eq i8 %160, 116
  br i1 %161, label %162, label %44

162:                                              ; preds = %158
  %163 = getelementptr inbounds i8, i8* %29, i64 7
  %164 = load i8, i8* %163, align 1
  %165 = icmp eq i8 %164, 121
  br i1 %165, label %166, label %44

166:                                              ; preds = %162
  %167 = getelementptr inbounds i8, i8* %29, i64 8
  %168 = load i8, i8* %167, align 1
  %169 = icmp eq i8 %168, 45
  br i1 %169, label %170, label %44

170:                                              ; preds = %166
  %171 = getelementptr inbounds i8, i8* %29, i64 9
  %172 = load i8, i8* %171, align 1
  %173 = icmp eq i8 %172, 86
  br i1 %173, label %43, label %44

174:                                              ; preds = %35
  %175 = getelementptr inbounds i8, i8* %29, i64 2
  %176 = load i8, i8* %175, align 1
  %177 = icmp eq i8 %176, 101
  br i1 %177, label %178, label %39

178:                                              ; preds = %174
  %179 = getelementptr inbounds i8, i8* %29, i64 3
  %180 = load i8, i8* %179, align 1
  %181 = icmp eq i8 %180, 110
  br i1 %181, label %182, label %39

182:                                              ; preds = %178
  %183 = getelementptr inbounds i8, i8* %29, i64 4
  %184 = load i8, i8* %183, align 1
  %185 = icmp eq i8 %184, 116
  br i1 %185, label %186, label %39

186:                                              ; preds = %182
  %187 = getelementptr inbounds i8, i8* %29, i64 5
  %188 = load i8, i8* %187, align 1
  %189 = icmp eq i8 %188, 105
  br i1 %189, label %190, label %39

190:                                              ; preds = %186
  %191 = getelementptr inbounds i8, i8* %29, i64 6
  %192 = load i8, i8* %191, align 1
  %193 = icmp eq i8 %192, 116
  br i1 %193, label %194, label %39

194:                                              ; preds = %190
  %195 = getelementptr inbounds i8, i8* %29, i64 7
  %196 = load i8, i8* %195, align 1
  %197 = icmp eq i8 %196, 121
  br i1 %197, label %198, label %39

198:                                              ; preds = %194
  %199 = getelementptr inbounds i8, i8* %29, i64 8
  %200 = load i8, i8* %199, align 1
  %201 = icmp eq i8 %200, 45
  br i1 %201, label %202, label %39

202:                                              ; preds = %198
  %203 = getelementptr inbounds i8, i8* %29, i64 9
  %204 = load i8, i8* %203, align 1
  %205 = icmp eq i8 %204, 72
  br i1 %205, label %43, label %39
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.FXCMAP_CMap* @_Z16FindEmbeddedCMapN6pdfium4spanIK11FXCMAP_CMapEEN5fxcrt18StringViewTemplateIcEE(%"class.pdfium::span.20"*, %"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #2

declare %class.CPDF_FontGlobals* @_ZN16CPDF_FontGlobals11GetInstanceEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPDF_CMapC2EN6pdfium4spanIKhEE(%class.CPDF_CMap*, %"class.pdfium::span"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %class.CPDF_CMapParser, align 8
  %4 = alloca %class.CPDF_SimpleParser, align 8
  %5 = alloca %"class.pdfium::span", align 8
  %6 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %7 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %8 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 0, i32 1
  store i64 0, i64* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV9CPDF_CMap, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 1
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 2
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 3
  store i8 0, i8* %12, align 2
  %13 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 4
  store i8 1, i8* %13, align 1
  %14 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 5
  %15 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 8
  %16 = bitcast i32* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 76, i1 false)
  %17 = tail call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 65536, i64 2) #10
  %18 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 8, i32 0, i32 1
  %19 = bitcast %"class.std::__1::vector.7"* %15 to i8**
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %17, i64 131072
  %21 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast i16** %21 to i8**
  store i8* %20, i8** %22, align 8
  %23 = bitcast i16** %18 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %17, i8 0, i64 131072, i1 false) #10
  %24 = ptrtoint i8* %20 to i64
  store i64 %24, i64* %23, align 8
  %25 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 9
  %26 = bitcast %class.CPDF_CMapParser* %3 to i8*
  %27 = bitcast %"class.std::__1::vector.12"* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %26) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 112, i1 false)
  call void @_ZN15CPDF_CMapParserC1EP9CPDF_CMap(%class.CPDF_CMapParser* nonnull %3, %class.CPDF_CMap* %0) #10
  %28 = bitcast %class.CPDF_SimpleParser* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #10
  %29 = bitcast %"class.pdfium::span"* %5 to i8*
  %30 = bitcast %"class.pdfium::span"* %1 to i8*
  %31 = bitcast %class.CPDF_SimpleParser* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 8 %30, i64 16, i1 false)
  call void @_ZN17CPDF_SimpleParserC1EN6pdfium4spanIKhEE(%class.CPDF_SimpleParser* nonnull %4, %"class.pdfium::span"* nonnull %5) #10
  %32 = bitcast %"class.fxcrt::StringViewTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #10
  %33 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %6, i64 0, i32 0, i32 1
  %34 = bitcast %"class.fxcrt::StringViewTemplate"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 16, i1 false)
  call void @_ZN17CPDF_SimpleParser7GetWordEv(%"class.fxcrt::StringViewTemplate"* nonnull sret %6, %class.CPDF_SimpleParser* nonnull %4) #10
  %35 = load i64, i64* %33, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %43, label %37

37:                                               ; preds = %2
  %38 = bitcast %"class.fxcrt::StringViewTemplate"* %7 to i8*
  %39 = bitcast %"class.fxcrt::StringViewTemplate"* %6 to i8*
  br label %40

40:                                               ; preds = %37, %40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* nonnull align 8 %32, i64 16, i1 false)
  call void @_ZN15CPDF_CMapParser9ParseWordEN5fxcrt18StringViewTemplateIcEE(%class.CPDF_CMapParser* nonnull %3, %"class.fxcrt::StringViewTemplate"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 16, i1 false)
  call void @_ZN17CPDF_SimpleParser7GetWordEv(%"class.fxcrt::StringViewTemplate"* nonnull sret %6, %class.CPDF_SimpleParser* nonnull %4) #10
  %41 = load i64, i64* %33, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %40

43:                                               ; preds = %40, %2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #10
  call void @_ZN17CPDF_SimpleParserD1Ev(%class.CPDF_SimpleParser* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #10
  call void @_ZN15CPDF_CMapParserD1Ev(%class.CPDF_CMapParser* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %26) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN15CPDF_CMapParserC1EP9CPDF_CMap(%class.CPDF_CMapParser*, %class.CPDF_CMap*) unnamed_addr #2

declare void @_ZN17CPDF_SimpleParserC1EN6pdfium4spanIKhEE(%class.CPDF_SimpleParser*, %"class.pdfium::span"*) unnamed_addr #2

declare void @_ZN17CPDF_SimpleParser7GetWordEv(%"class.fxcrt::StringViewTemplate"* sret, %class.CPDF_SimpleParser*) local_unnamed_addr #2

declare void @_ZN15CPDF_CMapParser9ParseWordEN5fxcrt18StringViewTemplateIcEE(%class.CPDF_CMapParser*, %"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN17CPDF_SimpleParserD1Ev(%class.CPDF_SimpleParser*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN15CPDF_CMapParserD1Ev(%class.CPDF_CMapParser*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPDF_CMapD2Ev(%class.CPDF_CMap* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV9CPDF_CMap, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 9, i32 0, i32 0
  %4 = load %"struct.CPDF_CMap::CIDRange"*, %"struct.CPDF_CMap::CIDRange"** %3, align 8
  %5 = icmp eq %"struct.CPDF_CMap::CIDRange"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.CPDF_CMap::CIDRange"* %4 to i64
  %8 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 9, i32 0, i32 1
  %9 = bitcast %"struct.CPDF_CMap::CIDRange"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.CPDF_CMap::CIDRange"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 8, i32 0, i32 0
  %13 = load i16*, i16** %12, align 8
  %14 = icmp eq i16* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i16* %13 to i64
  %17 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 8, i32 0, i32 1
  %18 = bitcast i16** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i16* %13 to i8*
  tail call void @_Z7FX_FreePv(i8* nonnull %19) #10
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 7, i32 0, i32 0
  %22 = load %"struct.CPDF_CMap::CodeRange"*, %"struct.CPDF_CMap::CodeRange"** %21, align 8
  %23 = icmp eq %"struct.CPDF_CMap::CodeRange"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = ptrtoint %"struct.CPDF_CMap::CodeRange"* %22 to i64
  %26 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 7, i32 0, i32 1
  %27 = bitcast %"struct.CPDF_CMap::CodeRange"** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %"struct.CPDF_CMap::CodeRange"* %22 to i8*
  tail call void @_ZdlPv(i8* %28) #9
  br label %29

29:                                               ; preds = %20, %24
  %30 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 6, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = icmp eq i64* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast i64* %31 to i8*
  tail call void @_ZdlPv(i8* %34) #9
  br label %35

35:                                               ; preds = %29, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPDF_CMapD0Ev(%class.CPDF_CMap*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV9CPDF_CMap, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 9, i32 0, i32 0
  %4 = load %"struct.CPDF_CMap::CIDRange"*, %"struct.CPDF_CMap::CIDRange"** %3, align 8
  %5 = icmp eq %"struct.CPDF_CMap::CIDRange"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.CPDF_CMap::CIDRange"* %4 to i64
  %8 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 9, i32 0, i32 1
  %9 = bitcast %"struct.CPDF_CMap::CIDRange"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.CPDF_CMap::CIDRange"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 8, i32 0, i32 0
  %13 = load i16*, i16** %12, align 8
  %14 = icmp eq i16* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i16* %13 to i64
  %17 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 8, i32 0, i32 1
  %18 = bitcast i16** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i16* %13 to i8*
  tail call void @_Z7FX_FreePv(i8* nonnull %19) #10
  br label %20

20:                                               ; preds = %15, %11
  %21 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 7, i32 0, i32 0
  %22 = load %"struct.CPDF_CMap::CodeRange"*, %"struct.CPDF_CMap::CodeRange"** %21, align 8
  %23 = icmp eq %"struct.CPDF_CMap::CodeRange"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = ptrtoint %"struct.CPDF_CMap::CodeRange"* %22 to i64
  %26 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 7, i32 0, i32 1
  %27 = bitcast %"struct.CPDF_CMap::CodeRange"** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %"struct.CPDF_CMap::CodeRange"* %22 to i8*
  tail call void @_ZdlPv(i8* %28) #9
  br label %29

29:                                               ; preds = %24, %20
  %30 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 6, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = icmp eq i64* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast i64* %31 to i8*
  tail call void @_ZdlPv(i8* %34) #9
  br label %35

35:                                               ; preds = %29, %33
  %36 = bitcast %class.CPDF_CMap* %0 to i8*
  tail call void @_ZdlPv(i8* %36) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @_ZNK9CPDF_CMap15CIDFromCharCodeEj(%class.CPDF_CMap* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 6
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = trunc i32 %1 to i16
  br label %66

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 10, i32 0
  %10 = load %struct.FXCMAP_CMap*, %struct.FXCMAP_CMap** %9, align 8
  %11 = icmp eq %struct.FXCMAP_CMap* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = tail call zeroext i16 @_Z15CIDFromCharCodePK11FXCMAP_CMapj(%struct.FXCMAP_CMap* nonnull %10, i32 %1) #10
  br label %66

14:                                               ; preds = %8
  %15 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 8, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 8, i32 0, i32 1
  %18 = load i16*, i16** %17, align 8
  %19 = icmp eq i16* %16, %18
  br i1 %19, label %20, label %22

20:                                               ; preds = %14
  %21 = trunc i32 %1 to i16
  br label %66

22:                                               ; preds = %14
  %23 = icmp ult i32 %1, 65536
  br i1 %23, label %24, label %28

24:                                               ; preds = %22
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i16, i16* %16, i64 %25
  %27 = load i16, i16* %26, align 2
  br label %66

28:                                               ; preds = %22
  %29 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 9, i32 0, i32 0
  %30 = load %"struct.CPDF_CMap::CIDRange"*, %"struct.CPDF_CMap::CIDRange"** %29, align 8
  %31 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 9, i32 0, i32 1
  %32 = load %"struct.CPDF_CMap::CIDRange"*, %"struct.CPDF_CMap::CIDRange"** %31, align 8
  %33 = ptrtoint %"struct.CPDF_CMap::CIDRange"* %30 to i64
  %34 = ptrtoint %"struct.CPDF_CMap::CIDRange"* %32 to i64
  %35 = sub i64 %34, %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %53, label %37

37:                                               ; preds = %28
  %38 = sdiv exact i64 %35, 12
  br label %39

39:                                               ; preds = %39, %37
  %40 = phi %"struct.CPDF_CMap::CIDRange"* [ %30, %37 ], [ %51, %39 ]
  %41 = phi i64 [ %38, %37 ], [ %50, %39 ]
  %42 = lshr i64 %41, 1
  %43 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %40, i64 1
  %44 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %40, i64 %42, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp ult i32 %45, %1
  %47 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %43, i64 %42
  %48 = xor i64 %42, -1
  %49 = add i64 %41, %48
  %50 = select i1 %46, i64 %49, i64 %42
  %51 = select i1 %46, %"struct.CPDF_CMap::CIDRange"* %47, %"struct.CPDF_CMap::CIDRange"* %40
  %52 = icmp eq i64 %50, 0
  br i1 %52, label %53, label %39

53:                                               ; preds = %39, %28
  %54 = phi %"struct.CPDF_CMap::CIDRange"* [ %30, %28 ], [ %51, %39 ]
  %55 = icmp eq %"struct.CPDF_CMap::CIDRange"* %54, %32
  br i1 %55, label %66, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %54, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp ugt i32 %58, %1
  br i1 %59, label %66, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %54, i64 0, i32 2
  %62 = load i16, i16* %61, align 4
  %63 = sub i32 %1, %58
  %64 = trunc i32 %63 to i16
  %65 = add i16 %62, %64
  br label %66

66:                                               ; preds = %60, %56, %53, %24, %20, %12, %6
  %67 = phi i16 [ %7, %6 ], [ %13, %12 ], [ %21, %20 ], [ %27, %24 ], [ %65, %60 ], [ 0, %56 ], [ 0, %53 ]
  ret i16 %67
}

declare zeroext i16 @_Z15CIDFromCharCodePK11FXCMAP_CMapj(%struct.FXCMAP_CMap*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK9CPDF_CMap11GetNextCharEN5fxcrt18StringViewTemplateIcEEPm(%class.CPDF_CMap* nocapture readonly, %"class.fxcrt::StringViewTemplate"* nocapture readonly, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to [4 x i8]*
  %6 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 4
  %11 = load i8, i8* %10, align 1
  switch i8 %11, label %163 [
    i8 0, label %12
    i8 1, label %20
    i8 2, label %41
    i8 3, label %75
  ]

12:                                               ; preds = %3
  %13 = load i64, i64* %2, align 8
  %14 = icmp ult i64 %13, %9
  br i1 %14, label %15, label %163

15:                                               ; preds = %12
  %16 = add nuw i64 %13, 1
  store i64 %16, i64* %2, align 8
  %17 = getelementptr inbounds i8, i8* %7, i64 %13
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  br label %163

20:                                               ; preds = %3
  %21 = load i64, i64* %2, align 8
  %22 = icmp ult i64 %21, %9
  br i1 %22, label %23, label %29

23:                                               ; preds = %20
  %24 = add nuw i64 %21, 1
  store i64 %24, i64* %2, align 8
  %25 = getelementptr inbounds i8, i8* %7, i64 %21
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = shl nuw nsw i32 %27, 8
  br label %29

29:                                               ; preds = %20, %23
  %30 = phi i64 [ %24, %23 ], [ %21, %20 ]
  %31 = phi i32 [ %28, %23 ], [ 0, %20 ]
  %32 = icmp ult i64 %30, %9
  br i1 %32, label %33, label %38

33:                                               ; preds = %29
  %34 = add nuw i64 %30, 1
  store i64 %34, i64* %2, align 8
  %35 = getelementptr inbounds i8, i8* %7, i64 %30
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  br label %38

38:                                               ; preds = %29, %33
  %39 = phi i32 [ %37, %33 ], [ 0, %29 ]
  %40 = or i32 %39, %31
  br label %163

41:                                               ; preds = %3
  %42 = load i64, i64* %2, align 8
  %43 = icmp ult i64 %42, %9
  br i1 %43, label %44, label %48

44:                                               ; preds = %41
  %45 = add nuw i64 %42, 1
  store i64 %45, i64* %2, align 8
  %46 = getelementptr inbounds i8, i8* %7, i64 %42
  %47 = load i8, i8* %46, align 1
  br label %48

48:                                               ; preds = %41, %44
  %49 = phi i64 [ %45, %44 ], [ %42, %41 ]
  %50 = phi i8 [ %47, %44 ], [ 0, %41 ]
  %51 = zext i8 %50 to i64
  %52 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 6, i32 0
  %53 = load i64*, i64** %52, align 8
  %54 = lshr i64 %51, 6
  %55 = getelementptr inbounds i64, i64* %53, i64 %54
  %56 = and i64 %51, 63
  %57 = shl i64 1, %56
  %58 = load i64, i64* %55, align 8
  %59 = and i64 %57, %58
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %48
  %62 = zext i8 %50 to i32
  br label %163

63:                                               ; preds = %48
  %64 = icmp ult i64 %49, %9
  br i1 %64, label %65, label %70

65:                                               ; preds = %63
  %66 = add nuw i64 %49, 1
  store i64 %66, i64* %2, align 8
  %67 = getelementptr inbounds i8, i8* %7, i64 %49
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  br label %70

70:                                               ; preds = %63, %65
  %71 = phi i32 [ %69, %65 ], [ 0, %63 ]
  %72 = zext i8 %50 to i32
  %73 = shl nuw nsw i32 %72, 8
  %74 = or i32 %71, %73
  br label %163

75:                                               ; preds = %3
  %76 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %76) #10
  store i32 -1431655766, i32* %4, align 4
  %77 = load i64, i64* %2, align 8
  %78 = icmp ult i64 %77, %9
  br i1 %78, label %79, label %83

79:                                               ; preds = %75
  %80 = add nuw i64 %77, 1
  store i64 %80, i64* %2, align 8
  %81 = getelementptr inbounds i8, i8* %7, i64 %77
  %82 = load i8, i8* %81, align 1
  br label %83

83:                                               ; preds = %75, %79
  %84 = phi i64 [ %80, %79 ], [ %77, %75 ]
  %85 = phi i8 [ %82, %79 ], [ 0, %75 ]
  store i8 %85, i8* %76, align 4
  %86 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 7
  %87 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 7, i32 0, i32 1
  %88 = bitcast %"struct.CPDF_CMap::CodeRange"** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.std::__1::vector.1"* %86 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = sub i64 %89, %91
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %161, label %94

94:                                               ; preds = %83
  %95 = bitcast i32* %4 to i8*
  %96 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 1
  %97 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 2
  %98 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 3
  br label %99

99:                                               ; preds = %94, %152
  %100 = phi i64 [ %149, %152 ], [ %84, %94 ]
  %101 = phi i64 [ %155, %152 ], [ 1, %94 ]
  %102 = phi i64 [ %158, %152 ], [ %91, %94 ]
  %103 = phi i64 [ %159, %152 ], [ %92, %94 ]
  %104 = inttoptr i64 %102 to %"struct.CPDF_CMap::CodeRange"*
  %105 = ashr exact i64 %103, 4
  %106 = load i8, i8* %95, align 4
  %107 = icmp eq i64 %101, 1
  %108 = load i8, i8* %96, align 1
  %109 = icmp eq i64 %101, 2
  %110 = load i8, i8* %97, align 2
  %111 = icmp eq i64 %101, 3
  %112 = load i8, i8* %98, align 1
  br label %113

113:                                              ; preds = %136, %99
  %114 = phi i64 [ %105, %99 ], [ %115, %136 ]
  %115 = add i64 %114, -1
  %116 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %104, i64 %115, i32 0
  %117 = load i64, i64* %116, align 8
  %118 = icmp ult i64 %117, %101
  br i1 %118, label %136, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %104, i64 %115, i32 1, i64 0
  %121 = load i8, i8* %120, align 1
  %122 = icmp ult i8 %106, %121
  br i1 %122, label %129, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %104, i64 %115, i32 2, i64 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp ugt i8 %106, %125
  %127 = or i1 %126, %107
  %128 = select i1 %126, i64 0, i64 %101
  br i1 %127, label %129, label %185

129:                                              ; preds = %209, %199, %189, %123, %205, %195, %185, %119
  %130 = phi i64 [ 0, %119 ], [ %128, %123 ], [ 1, %185 ], [ %194, %189 ], [ 2, %195 ], [ %204, %199 ], [ 3, %205 ], [ %213, %209 ]
  %131 = icmp eq i64 %130, %117
  br i1 %131, label %138, label %132

132:                                              ; preds = %129
  %133 = icmp eq i64 %130, 0
  br i1 %133, label %136, label %134

134:                                              ; preds = %132
  %135 = icmp eq i64 %117, %101
  br i1 %135, label %138, label %144

136:                                              ; preds = %132, %113
  %137 = icmp eq i64 %115, 0
  br i1 %137, label %161, label %113

138:                                              ; preds = %134, %129
  %139 = and i64 %101, 4294967295
  %140 = bitcast i32* %4 to i8*
  %141 = load i8, i8* %140, align 4
  %142 = zext i8 %141 to i32
  %143 = icmp eq i64 %139, 1
  br i1 %143, label %161, label %165

144:                                              ; preds = %134
  %145 = icmp eq i64 %101, 4
  %146 = icmp eq i64 %100, %9
  %147 = or i1 %145, %146
  br i1 %147, label %161, label %148

148:                                              ; preds = %144
  %149 = add i64 %100, 1
  store i64 %149, i64* %2, align 8
  %150 = icmp ugt i64 %9, %100
  br i1 %150, label %152, label %151, !prof !5

151:                                              ; preds = %148
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #10, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #10, !srcloc !7
  unreachable

152:                                              ; preds = %148
  %153 = getelementptr inbounds i8, i8* %7, i64 %100
  %154 = load i8, i8* %153, align 1
  %155 = add nuw nsw i64 %101, 1
  %156 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 %101
  store i8 %154, i8* %156, align 1
  %157 = load i64, i64* %88, align 8
  %158 = load i64, i64* %90, align 8
  %159 = sub i64 %157, %158
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %99

161:                                              ; preds = %144, %152, %136, %138, %165, %172, %179, %83
  %162 = phi i32 [ 0, %83 ], [ %142, %138 ], [ %170, %165 ], [ %177, %172 ], [ %184, %179 ], [ 0, %136 ], [ 0, %152 ], [ 0, %144 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %76) #10
  br label %163

163:                                              ; preds = %3, %61, %70, %15, %12, %161, %38
  %164 = phi i32 [ %162, %161 ], [ %40, %38 ], [ %19, %15 ], [ 0, %12 ], [ %62, %61 ], [ %74, %70 ], [ 0, %3 ]
  ret i32 %164

165:                                              ; preds = %138
  %166 = shl nuw nsw i32 %142, 8
  %167 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 1
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i32
  %170 = or i32 %166, %169
  %171 = icmp eq i64 %139, 2
  br i1 %171, label %161, label %172

172:                                              ; preds = %165
  %173 = shl nuw nsw i32 %170, 8
  %174 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 2
  %175 = load i8, i8* %174, align 2
  %176 = zext i8 %175 to i32
  %177 = or i32 %173, %176
  %178 = icmp eq i64 %139, 3
  br i1 %178, label %161, label %179

179:                                              ; preds = %172
  %180 = shl nuw i32 %177, 8
  %181 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 3
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i32
  %184 = or i32 %180, %183
  br label %161

185:                                              ; preds = %123
  %186 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %104, i64 %115, i32 1, i64 1
  %187 = load i8, i8* %186, align 1
  %188 = icmp ult i8 %108, %187
  br i1 %188, label %129, label %189

189:                                              ; preds = %185
  %190 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %104, i64 %115, i32 2, i64 1
  %191 = load i8, i8* %190, align 1
  %192 = icmp ugt i8 %108, %191
  %193 = or i1 %192, %109
  %194 = select i1 %192, i64 1, i64 %101
  br i1 %193, label %129, label %195

195:                                              ; preds = %189
  %196 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %104, i64 %115, i32 1, i64 2
  %197 = load i8, i8* %196, align 1
  %198 = icmp ult i8 %110, %197
  br i1 %198, label %129, label %199

199:                                              ; preds = %195
  %200 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %104, i64 %115, i32 2, i64 2
  %201 = load i8, i8* %200, align 1
  %202 = icmp ugt i8 %110, %201
  %203 = or i1 %202, %111
  %204 = select i1 %202, i64 2, i64 %101
  br i1 %203, label %129, label %205

205:                                              ; preds = %199
  %206 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %104, i64 %115, i32 1, i64 3
  %207 = load i8, i8* %206, align 1
  %208 = icmp ult i8 %112, %207
  br i1 %208, label %129, label %209

209:                                              ; preds = %205
  %210 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %104, i64 %115, i32 2, i64 3
  %211 = load i8, i8* %210, align 1
  %212 = icmp ugt i8 %112, %211
  %213 = select i1 %212, i64 3, i64 %101
  br label %129
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK9CPDF_CMap11GetCharSizeEj(%class.CPDF_CMap* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 4
  %4 = load i8, i8* %3, align 1
  switch i8 %4, label %16 [
    i8 3, label %9
    i8 1, label %5
    i8 2, label %6
  ]

5:                                                ; preds = %2
  br label %16

6:                                                ; preds = %2
  %7 = icmp ult i32 %1, 256
  %8 = select i1 %7, i32 1, i32 2
  br label %16

9:                                                ; preds = %2
  %10 = icmp ult i32 %1, 256
  br i1 %10, label %16, label %11

11:                                               ; preds = %9
  %12 = icmp ult i32 %1, 65536
  br i1 %12, label %16, label %13

13:                                               ; preds = %11
  %14 = icmp ult i32 %1, 16777216
  %15 = select i1 %14, i32 3, i32 4
  br label %16

16:                                               ; preds = %2, %13, %11, %9, %6, %5
  %17 = phi i32 [ 2, %5 ], [ %8, %6 ], [ 1, %9 ], [ 2, %11 ], [ %15, %13 ], [ 1, %2 ]
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK9CPDF_CMap9CountCharEN5fxcrt18StringViewTemplateIcEE(%class.CPDF_CMap* nocapture readonly, %"class.fxcrt::StringViewTemplate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 4
  %6 = load i8, i8* %5, align 1
  switch i8 %6, label %59 [
    i8 0, label %16
    i8 1, label %19
    i8 2, label %7
    i8 3, label %42
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %62, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 6, i32 0
  %15 = load i64*, i64** %14, align 8
  br label %24

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  br label %62

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 1
  %23 = lshr i64 %22, 1
  br label %62

24:                                               ; preds = %11, %24
  %25 = phi i64 [ 0, %11 ], [ %40, %24 ]
  %26 = phi i64 [ 0, %11 ], [ %27, %24 ]
  %27 = add i64 %26, 1
  %28 = getelementptr inbounds i8, i8* %13, i64 %25
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = lshr i64 %30, 6
  %32 = getelementptr inbounds i64, i64* %15, i64 %31
  %33 = and i64 %30, 63
  %34 = shl i64 1, %33
  %35 = load i64, i64* %32, align 8
  %36 = and i64 %34, %35
  %37 = icmp ne i64 %36, 0
  %38 = zext i1 %37 to i64
  %39 = add nuw i64 %25, 1
  %40 = add i64 %39, %38
  %41 = icmp ult i64 %40, %9
  br i1 %41, label %24, label %62

42:                                               ; preds = %2
  %43 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #10
  store i64 0, i64* %3, align 8
  %44 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %57, label %47

47:                                               ; preds = %42
  %48 = bitcast %"class.fxcrt::StringViewTemplate"* %4 to i8*
  %49 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  br label %50

50:                                               ; preds = %47, %50
  %51 = phi i64 [ 0, %47 ], [ %53, %50 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %48, i8* align 8 %49, i64 16, i1 false)
  %52 = call i32 @_ZNK9CPDF_CMap11GetNextCharEN5fxcrt18StringViewTemplateIcEEPm(%class.CPDF_CMap* %0, %"class.fxcrt::StringViewTemplate"* nonnull %4, i64* nonnull %3)
  %53 = add i64 %51, 1
  %54 = load i64, i64* %3, align 8
  %55 = load i64, i64* %44, align 8
  %56 = icmp ult i64 %54, %55
  br i1 %56, label %50, label %57

57:                                               ; preds = %50, %42
  %58 = phi i64 [ 0, %42 ], [ %53, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #10
  br label %62

59:                                               ; preds = %2
  %60 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  br label %62

62:                                               ; preds = %24, %7, %59, %57, %19, %16
  %63 = phi i64 [ %61, %59 ], [ %58, %57 ], [ %23, %19 ], [ %18, %16 ], [ 0, %7 ], [ %27, %24 ]
  ret i64 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK9CPDF_CMap10AppendCharEPcj(%class.CPDF_CMap* nocapture readonly, i8* nocapture, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 4
  %5 = load i8, i8* %4, align 1
  switch i8 %5, label %154 [
    i8 0, label %6
    i8 1, label %8
    i8 2, label %13
    i8 3, label %33
  ]

6:                                                ; preds = %3
  %7 = trunc i32 %2 to i8
  store i8 %7, i8* %1, align 1
  br label %154

8:                                                ; preds = %3
  %9 = lshr i32 %2, 8
  %10 = trunc i32 %9 to i8
  store i8 %10, i8* %1, align 1
  %11 = trunc i32 %2 to i8
  %12 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 %11, i8* %12, align 1
  br label %154

13:                                               ; preds = %3
  %14 = icmp ult i32 %2, 256
  br i1 %14, label %15, label %28

15:                                               ; preds = %13
  %16 = zext i32 %2 to i64
  %17 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 6, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = lshr i64 %16, 6
  %20 = getelementptr inbounds i64, i64* %18, i64 %19
  %21 = and i64 %16, 63
  %22 = shl i64 1, %21
  %23 = load i64, i64* %20, align 8
  %24 = and i64 %23, %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %15
  %27 = trunc i32 %2 to i8
  store i8 %27, i8* %1, align 1
  br label %154

28:                                               ; preds = %13, %15
  %29 = lshr i32 %2, 8
  %30 = trunc i32 %29 to i8
  store i8 %30, i8* %1, align 1
  %31 = trunc i32 %2 to i8
  %32 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 %31, i8* %32, align 1
  br label %154

33:                                               ; preds = %3
  %34 = icmp ult i32 %2, 256
  br i1 %34, label %35, label %126

35:                                               ; preds = %33
  %36 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 7, i32 0, i32 0
  %37 = load %"struct.CPDF_CMap::CodeRange"*, %"struct.CPDF_CMap::CodeRange"** %36, align 8
  %38 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 7, i32 0, i32 1
  %39 = load %"struct.CPDF_CMap::CodeRange"*, %"struct.CPDF_CMap::CodeRange"** %38, align 8
  %40 = icmp eq %"struct.CPDF_CMap::CodeRange"* %37, %39
  br i1 %40, label %41, label %43

41:                                               ; preds = %35
  %42 = trunc i32 %2 to i8
  br label %119

43:                                               ; preds = %35
  %44 = ptrtoint %"struct.CPDF_CMap::CodeRange"* %37 to i64
  %45 = ptrtoint %"struct.CPDF_CMap::CodeRange"* %39 to i64
  %46 = lshr i32 %2, 8
  %47 = trunc i32 %46 to i8
  %48 = trunc i32 %2 to i8
  %49 = sub i64 %45, %44
  %50 = ashr exact i64 %49, 4
  %51 = icmp eq i64 %49, 0
  br i1 %51, label %119, label %52

52:                                               ; preds = %43, %70
  %53 = phi i64 [ %71, %70 ], [ 0, %43 ]
  %54 = xor i64 %53, -1
  %55 = add i64 %50, %54
  %56 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %37, i64 %55, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = icmp ult i64 %57, 4
  br i1 %58, label %70, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %37, i64 %55, i32 1, i64 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %67

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %37, i64 %55, i32 1, i64 1
  %65 = load i8, i8* %64, align 1
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %174, label %67

67:                                               ; preds = %186, %63, %59, %182, %178, %174
  %68 = phi i64 [ 0, %59 ], [ 1, %63 ], [ 2, %174 ], [ 2, %178 ], [ 3, %182 ], [ %190, %186 ]
  %69 = icmp eq i64 %68, %57
  br i1 %69, label %121, label %70

70:                                               ; preds = %67, %52
  %71 = add nuw i64 %53, 1
  %72 = icmp ult i64 %71, %50
  br i1 %72, label %52, label %73

73:                                               ; preds = %70, %91
  %74 = phi i64 [ %92, %91 ], [ 0, %70 ]
  %75 = xor i64 %74, -1
  %76 = add i64 %50, %75
  %77 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %37, i64 %76, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = icmp ult i64 %78, 3
  br i1 %79, label %91, label %80

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %37, i64 %76, i32 1, i64 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %88

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %37, i64 %76, i32 1, i64 1
  %86 = load i8, i8* %85, align 1
  %87 = icmp ugt i8 %86, %47
  br i1 %87, label %88, label %161

88:                                               ; preds = %169, %80, %165, %161, %84
  %89 = phi i64 [ 0, %80 ], [ 1, %84 ], [ 1, %161 ], [ 2, %165 ], [ %173, %169 ]
  %90 = icmp eq i64 %89, %78
  br i1 %90, label %121, label %91

91:                                               ; preds = %88, %73
  %92 = add nuw i64 %74, 1
  %93 = icmp ult i64 %92, %50
  br i1 %93, label %73, label %94

94:                                               ; preds = %91, %116
  %95 = phi i64 [ %117, %116 ], [ 0, %91 ]
  %96 = xor i64 %95, -1
  %97 = add i64 %50, %96
  %98 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %37, i64 %97, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = icmp ult i64 %99, 2
  br i1 %100, label %116, label %101

101:                                              ; preds = %94
  %102 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %37, i64 %97, i32 1, i64 0
  %103 = load i8, i8* %102, align 1
  %104 = icmp ugt i8 %103, %47
  br i1 %104, label %113, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %37, i64 %97, i32 2, i64 0
  %107 = load i8, i8* %106, align 1
  %108 = icmp ult i8 %107, %47
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %37, i64 %97, i32 1, i64 1
  %111 = load i8, i8* %110, align 1
  %112 = icmp ugt i8 %111, %48
  br i1 %112, label %113, label %156

113:                                              ; preds = %156, %109, %105, %101
  %114 = phi i64 [ 0, %105 ], [ 0, %101 ], [ 1, %109 ], [ %160, %156 ]
  %115 = icmp eq i64 %114, %99
  br i1 %115, label %121, label %116

116:                                              ; preds = %113, %94
  %117 = add nuw i64 %95, 1
  %118 = icmp ult i64 %117, %50
  br i1 %118, label %94, label %119

119:                                              ; preds = %116, %43, %41
  %120 = phi i8 [ %42, %41 ], [ %48, %43 ], [ %48, %116 ]
  store i8 %120, i8* %1, align 1
  br label %154

121:                                              ; preds = %67, %88, %113
  %122 = phi i32 [ 2, %113 ], [ 3, %88 ], [ 4, %67 ]
  %123 = add nsw i32 %122, -1
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds i8, i8* %1, i64 %124
  store i8 %48, i8* %125, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %1, i8 0, i64 %124, i1 false)
  br label %154

126:                                              ; preds = %33
  %127 = icmp ult i32 %2, 65536
  br i1 %127, label %128, label %133

128:                                              ; preds = %126
  %129 = lshr i32 %2, 8
  %130 = trunc i32 %129 to i8
  store i8 %130, i8* %1, align 1
  %131 = trunc i32 %2 to i8
  %132 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 %131, i8* %132, align 1
  br label %154

133:                                              ; preds = %126
  %134 = icmp ult i32 %2, 16777216
  br i1 %134, label %135, label %143

135:                                              ; preds = %133
  %136 = lshr i32 %2, 16
  %137 = trunc i32 %136 to i8
  store i8 %137, i8* %1, align 1
  %138 = lshr i32 %2, 8
  %139 = trunc i32 %138 to i8
  %140 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 %139, i8* %140, align 1
  %141 = trunc i32 %2 to i8
  %142 = getelementptr inbounds i8, i8* %1, i64 2
  store i8 %141, i8* %142, align 1
  br label %154

143:                                              ; preds = %133
  %144 = lshr i32 %2, 24
  %145 = trunc i32 %144 to i8
  store i8 %145, i8* %1, align 1
  %146 = lshr i32 %2, 16
  %147 = trunc i32 %146 to i8
  %148 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 %147, i8* %148, align 1
  %149 = lshr i32 %2, 8
  %150 = trunc i32 %149 to i8
  %151 = getelementptr inbounds i8, i8* %1, i64 2
  store i8 %150, i8* %151, align 1
  %152 = trunc i32 %2 to i8
  %153 = getelementptr inbounds i8, i8* %1, i64 3
  store i8 %152, i8* %153, align 1
  br label %154

154:                                              ; preds = %119, %3, %121, %143, %135, %128, %28, %26, %8, %6
  %155 = phi i32 [ 2, %128 ], [ 3, %135 ], [ 4, %143 ], [ 1, %26 ], [ 2, %28 ], [ 2, %8 ], [ 1, %6 ], [ %122, %121 ], [ 1, %119 ], [ 0, %3 ]
  ret i32 %155

156:                                              ; preds = %109
  %157 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %37, i64 %97, i32 2, i64 1
  %158 = load i8, i8* %157, align 1
  %159 = icmp ult i8 %158, %48
  %160 = select i1 %159, i64 1, i64 2
  br label %113

161:                                              ; preds = %84
  %162 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %37, i64 %76, i32 2, i64 1
  %163 = load i8, i8* %162, align 1
  %164 = icmp ult i8 %163, %47
  br i1 %164, label %88, label %165

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %37, i64 %76, i32 1, i64 2
  %167 = load i8, i8* %166, align 1
  %168 = icmp ugt i8 %167, %48
  br i1 %168, label %88, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %37, i64 %76, i32 2, i64 2
  %171 = load i8, i8* %170, align 1
  %172 = icmp ult i8 %171, %48
  %173 = select i1 %172, i64 2, i64 3
  br label %88

174:                                              ; preds = %63
  %175 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %37, i64 %55, i32 1, i64 2
  %176 = load i8, i8* %175, align 1
  %177 = icmp ugt i8 %176, %47
  br i1 %177, label %67, label %178

178:                                              ; preds = %174
  %179 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %37, i64 %55, i32 2, i64 2
  %180 = load i8, i8* %179, align 1
  %181 = icmp ult i8 %180, %47
  br i1 %181, label %67, label %182

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %37, i64 %55, i32 1, i64 3
  %184 = load i8, i8* %183, align 1
  %185 = icmp ugt i8 %184, %48
  br i1 %185, label %67, label %186

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %37, i64 %55, i32 2, i64 3
  %188 = load i8, i8* %187, align 1
  %189 = icmp ult i8 %188, %48
  %190 = select i1 %189, i64 3, i64 4
  br label %67
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPDF_CMap21SetAdditionalMappingsENSt3__16vectorINS_8CIDRangeENS0_9allocatorIS2_EEEE(%class.CPDF_CMap* nocapture, %"class.std::__1::vector.12"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 4
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 3
  br i1 %5, label %6, label %37

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %1, i64 0, i32 0, i32 0
  %8 = load %"struct.CPDF_CMap::CIDRange"*, %"struct.CPDF_CMap::CIDRange"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %1, i64 0, i32 0, i32 1
  %10 = load %"struct.CPDF_CMap::CIDRange"*, %"struct.CPDF_CMap::CIDRange"** %9, align 8
  %11 = icmp eq %"struct.CPDF_CMap::CIDRange"* %8, %10
  br i1 %11, label %37, label %12

12:                                               ; preds = %6
  tail call fastcc void @"_ZNSt3__16__sortIRZN9CPDF_CMap21SetAdditionalMappingsENS_6vectorINS1_8CIDRangeENS_9allocatorIS3_EEEEE3$_1PS3_EEvT0_SA_T_"(%"struct.CPDF_CMap::CIDRange"* %8, %"struct.CPDF_CMap::CIDRange"* %10) #10
  %13 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 9
  %14 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %13, i64 0, i32 0, i32 0
  %15 = load %"struct.CPDF_CMap::CIDRange"*, %"struct.CPDF_CMap::CIDRange"** %14, align 8
  %16 = icmp eq %"struct.CPDF_CMap::CIDRange"* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = ptrtoint %"struct.CPDF_CMap::CIDRange"* %15 to i64
  %19 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 9, i32 0, i32 1
  %20 = bitcast %"struct.CPDF_CMap::CIDRange"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"struct.CPDF_CMap::CIDRange"* %15 to i8*
  tail call void @_ZdlPv(i8* %21) #9
  %22 = bitcast %"class.std::__1::vector.12"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #10
  br label %23

23:                                               ; preds = %12, %17
  %24 = bitcast %"class.std::__1::vector.12"* %1 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector.12"* %13 to i64*
  store i64 %25, i64* %26, align 8
  %27 = bitcast %"struct.CPDF_CMap::CIDRange"** %9 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 9, i32 0, i32 1
  %30 = bitcast %"struct.CPDF_CMap::CIDRange"** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %32 = bitcast %"struct.CPDF_CMap::CIDRange"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %35 = bitcast %"struct.CPDF_CMap::CIDRange"** %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = bitcast %"class.std::__1::vector.12"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #10
  br label %37

37:                                               ; preds = %2, %6, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPDF_CMap29SetMixedFourByteLeadingRangesENSt3__16vectorINS_9CodeRangeENS0_9allocatorIS2_EEEE(%class.CPDF_CMap* nocapture, %"class.std::__1::vector.1"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.CPDF_CMap::CodeRange"*, %"struct.CPDF_CMap::CodeRange"** %4, align 8
  %6 = icmp eq %"struct.CPDF_CMap::CodeRange"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = ptrtoint %"struct.CPDF_CMap::CodeRange"* %5 to i64
  %9 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 7, i32 0, i32 1
  %10 = bitcast %"struct.CPDF_CMap::CodeRange"** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = bitcast %"struct.CPDF_CMap::CodeRange"* %5 to i8*
  tail call void @_ZdlPv(i8* %11) #9
  %12 = bitcast %"class.std::__1::vector.1"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #10
  br label %13

13:                                               ; preds = %2, %7
  %14 = bitcast %"class.std::__1::vector.1"* %1 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector.1"* %3 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 1
  %18 = bitcast %"struct.CPDF_CMap::CodeRange"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 7, i32 0, i32 1
  %21 = bitcast %"struct.CPDF_CMap::CodeRange"** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"struct.CPDF_CMap::CodeRange"** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %26 = bitcast %"struct.CPDF_CMap::CodeRange"** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast %"class.std::__1::vector.1"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #10
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare void @_Z7FX_FreePv(i8*) local_unnamed_addr #2

declare i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN9CPDF_CMap21SetAdditionalMappingsENS_6vectorINS1_8CIDRangeENS_9allocatorIS3_EEEEE3$_1PS3_EEvT0_SA_T_"(%"struct.CPDF_CMap::CIDRange"*, %"struct.CPDF_CMap::CIDRange"*) unnamed_addr #0 {
  %3 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %4 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %5 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %6 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %7 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %8 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %9 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %10 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %11 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %12 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %13 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %14 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %15 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %16 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %17 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %18 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %19 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %20 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %21 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %22 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %23 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %24 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %25 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %26 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %27 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %28 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %29 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %30 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %31 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %32 = bitcast %"struct.CPDF_CMap::CIDRange"* %8 to i8*
  %33 = bitcast %"struct.CPDF_CMap::CIDRange"* %9 to i8*
  %34 = bitcast %"struct.CPDF_CMap::CIDRange"* %11 to i8*
  %35 = bitcast %"struct.CPDF_CMap::CIDRange"* %12 to i8*
  %36 = bitcast %"struct.CPDF_CMap::CIDRange"* %10 to i8*
  %37 = bitcast %"struct.CPDF_CMap::CIDRange"* %13 to i8*
  %38 = bitcast %"struct.CPDF_CMap::CIDRange"* %14 to i8*
  %39 = bitcast %"struct.CPDF_CMap::CIDRange"* %15 to i8*
  %40 = bitcast %"struct.CPDF_CMap::CIDRange"* %16 to i8*
  %41 = bitcast %"struct.CPDF_CMap::CIDRange"* %5 to i8*
  %42 = bitcast %"struct.CPDF_CMap::CIDRange"* %3 to i8*
  %43 = bitcast %"struct.CPDF_CMap::CIDRange"* %4 to i8*
  %44 = bitcast %"struct.CPDF_CMap::CIDRange"* %6 to i8*
  %45 = bitcast %"struct.CPDF_CMap::CIDRange"* %7 to i8*
  br label %46

46:                                               ; preds = %409, %2
  %47 = phi %"struct.CPDF_CMap::CIDRange"* [ %1, %2 ], [ %389, %409 ]
  %48 = phi %"struct.CPDF_CMap::CIDRange"* [ %0, %2 ], [ %63, %409 ]
  %49 = ptrtoint %"struct.CPDF_CMap::CIDRange"* %47 to i64
  %50 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %47, i64 -1
  %51 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %47, i64 -1, i32 1
  %52 = bitcast %"struct.CPDF_CMap::CIDRange"* %50 to i8*
  %53 = bitcast %"struct.CPDF_CMap::CIDRange"* %50 to i8*
  %54 = bitcast %"struct.CPDF_CMap::CIDRange"* %50 to i8*
  %55 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %47, i64 -1, i32 1
  %56 = bitcast %"struct.CPDF_CMap::CIDRange"* %50 to i8*
  %57 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %47, i64 -1, i32 1
  %58 = bitcast %"struct.CPDF_CMap::CIDRange"* %50 to i8*
  %59 = ptrtoint %"struct.CPDF_CMap::CIDRange"* %47 to i64
  br label %60

60:                                               ; preds = %420, %46
  %61 = phi %"struct.CPDF_CMap::CIDRange"* [ %48, %46 ], [ %421, %420 ]
  br label %62

62:                                               ; preds = %340, %60
  %63 = phi %"struct.CPDF_CMap::CIDRange"* [ %61, %60 ], [ %329, %340 ]
  %64 = ptrtoint %"struct.CPDF_CMap::CIDRange"* %63 to i64
  %65 = sub i64 %49, %64
  %66 = sdiv exact i64 %65, 12
  switch i64 %66, label %156 [
    i64 0, label %424
    i64 1, label %424
    i64 2, label %67
    i64 3, label %78
    i64 4, label %115
    i64 5, label %120
  ]

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %47, i64 -1, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = icmp ult i32 %69, %71
  br i1 %72, label %73, label %424

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %47, i64 -1
  %75 = bitcast %"struct.CPDF_CMap::CIDRange"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %75)
  %76 = bitcast %"struct.CPDF_CMap::CIDRange"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %75, i8* align 4 %76, i64 12, i1 false) #10
  %77 = bitcast %"struct.CPDF_CMap::CIDRange"* %74 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %77, i8* nonnull align 4 %75, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %75)
  br label %424

78:                                               ; preds = %62
  %79 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 1
  %80 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %47, i64 -1
  %81 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 1, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = icmp ult i32 %82, %84
  %86 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %47, i64 -1, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = icmp ult i32 %87, %82
  br i1 %85, label %100, label %89

89:                                               ; preds = %78
  br i1 %88, label %90, label %424

90:                                               ; preds = %89
  %91 = bitcast %"struct.CPDF_CMap::CIDRange"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %91)
  %92 = bitcast %"struct.CPDF_CMap::CIDRange"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %91, i8* align 4 %92, i64 12, i1 false) #10
  %93 = bitcast %"struct.CPDF_CMap::CIDRange"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %92, i8* align 4 %93, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* nonnull align 4 %91, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %91)
  %94 = load i32, i32* %81, align 4
  %95 = load i32, i32* %83, align 4
  %96 = icmp ult i32 %94, %95
  br i1 %96, label %97, label %424

97:                                               ; preds = %90
  %98 = bitcast %"struct.CPDF_CMap::CIDRange"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %98)
  %99 = bitcast %"struct.CPDF_CMap::CIDRange"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %98, i8* align 4 %99, i64 12, i1 false) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %99, i8* align 4 %92, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %92, i8* nonnull align 4 %98, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %98)
  br label %424

100:                                              ; preds = %78
  br i1 %88, label %101, label %105

101:                                              ; preds = %100
  %102 = bitcast %"struct.CPDF_CMap::CIDRange"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %102)
  %103 = bitcast %"struct.CPDF_CMap::CIDRange"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %102, i8* align 4 %103, i64 12, i1 false) #10
  %104 = bitcast %"struct.CPDF_CMap::CIDRange"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* align 4 %104, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* nonnull align 4 %102, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %102)
  br label %424

105:                                              ; preds = %100
  %106 = bitcast %"struct.CPDF_CMap::CIDRange"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %106)
  %107 = bitcast %"struct.CPDF_CMap::CIDRange"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %106, i8* align 4 %107, i64 12, i1 false) #10
  %108 = bitcast %"struct.CPDF_CMap::CIDRange"* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %108, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* nonnull align 4 %106, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %106)
  %109 = load i32, i32* %86, align 4
  %110 = load i32, i32* %81, align 4
  %111 = icmp ult i32 %109, %110
  br i1 %111, label %112, label %424

112:                                              ; preds = %105
  %113 = bitcast %"struct.CPDF_CMap::CIDRange"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %113)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %113, i8* align 4 %108, i64 12, i1 false) #10
  %114 = bitcast %"struct.CPDF_CMap::CIDRange"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %114, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %114, i8* nonnull align 4 %113, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %113)
  br label %424

115:                                              ; preds = %62
  %116 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 1
  %117 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 2
  %118 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %47, i64 -1
  %119 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN9CPDF_CMap21SetAdditionalMappingsENS_6vectorINS1_8CIDRangeENS_9allocatorIS3_EEEEE3$_1PS3_EEjT0_SA_SA_SA_T_"(%"struct.CPDF_CMap::CIDRange"* %63, %"struct.CPDF_CMap::CIDRange"* %116, %"struct.CPDF_CMap::CIDRange"* %117, %"struct.CPDF_CMap::CIDRange"* %118)
  br label %424

120:                                              ; preds = %62
  %121 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 1
  %122 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 2
  %123 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 3
  %124 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN9CPDF_CMap21SetAdditionalMappingsENS_6vectorINS1_8CIDRangeENS_9allocatorIS3_EEEEE3$_1PS3_EEjT0_SA_SA_SA_T_"(%"struct.CPDF_CMap::CIDRange"* %63, %"struct.CPDF_CMap::CIDRange"* %121, %"struct.CPDF_CMap::CIDRange"* %122, %"struct.CPDF_CMap::CIDRange"* %123) #10
  %125 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %47, i64 -1, i32 1
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 3, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = icmp ult i32 %126, %128
  br i1 %129, label %130, label %424

130:                                              ; preds = %120
  %131 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %47, i64 -1
  %132 = bitcast %"struct.CPDF_CMap::CIDRange"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %132)
  %133 = bitcast %"struct.CPDF_CMap::CIDRange"* %123 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %132, i8* align 4 %133, i64 12, i1 false) #10
  %134 = bitcast %"struct.CPDF_CMap::CIDRange"* %131 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %133, i8* align 4 %134, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %134, i8* nonnull align 4 %132, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %132)
  %135 = load i32, i32* %127, align 4
  %136 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 2, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = icmp ult i32 %135, %137
  br i1 %138, label %139, label %424

139:                                              ; preds = %130
  %140 = bitcast %"struct.CPDF_CMap::CIDRange"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %140)
  %141 = bitcast %"struct.CPDF_CMap::CIDRange"* %122 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %140, i8* align 4 %141, i64 12, i1 false) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %141, i8* align 4 %133, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %133, i8* nonnull align 4 %140, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %140)
  %142 = load i32, i32* %136, align 4
  %143 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 1, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = icmp ult i32 %142, %144
  br i1 %145, label %146, label %424

146:                                              ; preds = %139
  %147 = bitcast %"struct.CPDF_CMap::CIDRange"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %147)
  %148 = bitcast %"struct.CPDF_CMap::CIDRange"* %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %147, i8* align 4 %148, i64 12, i1 false) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %141, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %141, i8* nonnull align 4 %147, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %147)
  %149 = load i32, i32* %143, align 4
  %150 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 0, i32 1
  %151 = load i32, i32* %150, align 4
  %152 = icmp ult i32 %149, %151
  br i1 %152, label %153, label %424

153:                                              ; preds = %146
  %154 = bitcast %"struct.CPDF_CMap::CIDRange"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %154)
  %155 = bitcast %"struct.CPDF_CMap::CIDRange"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %154, i8* align 4 %155, i64 12, i1 false) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %155, i8* align 4 %148, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %148, i8* nonnull align 4 %154, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %154)
  br label %424

156:                                              ; preds = %62
  %157 = icmp slt i64 %65, 372
  br i1 %157, label %158, label %230

158:                                              ; preds = %156
  %159 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 2
  %160 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 1
  %161 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 1, i32 1
  %162 = load i32, i32* %161, align 4
  %163 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 0, i32 1
  %164 = load i32, i32* %163, align 4
  %165 = icmp ult i32 %162, %164
  %166 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 2, i32 1
  %167 = load i32, i32* %166, align 4
  %168 = icmp ult i32 %167, %162
  br i1 %165, label %179, label %169

169:                                              ; preds = %158
  br i1 %168, label %170, label %193

170:                                              ; preds = %169
  %171 = bitcast %"struct.CPDF_CMap::CIDRange"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %171)
  %172 = bitcast %"struct.CPDF_CMap::CIDRange"* %160 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %171, i8* align 4 %172, i64 12, i1 false) #10
  %173 = bitcast %"struct.CPDF_CMap::CIDRange"* %159 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %172, i8* align 4 %173, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %173, i8* nonnull align 4 %171, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %171)
  %174 = load i32, i32* %161, align 4
  %175 = icmp ult i32 %174, %164
  br i1 %175, label %176, label %193

176:                                              ; preds = %170
  %177 = bitcast %"struct.CPDF_CMap::CIDRange"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %177)
  %178 = bitcast %"struct.CPDF_CMap::CIDRange"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %177, i8* align 4 %178, i64 12, i1 false) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %178, i8* align 4 %172, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %172, i8* nonnull align 4 %177, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %177)
  br label %193

179:                                              ; preds = %158
  br i1 %168, label %180, label %184

180:                                              ; preds = %179
  %181 = bitcast %"struct.CPDF_CMap::CIDRange"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %181)
  %182 = bitcast %"struct.CPDF_CMap::CIDRange"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %181, i8* align 4 %182, i64 12, i1 false) #10
  %183 = bitcast %"struct.CPDF_CMap::CIDRange"* %159 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %182, i8* align 4 %183, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %183, i8* nonnull align 4 %181, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %181)
  br label %193

184:                                              ; preds = %179
  %185 = bitcast %"struct.CPDF_CMap::CIDRange"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %185)
  %186 = bitcast %"struct.CPDF_CMap::CIDRange"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %185, i8* align 4 %186, i64 12, i1 false) #10
  %187 = bitcast %"struct.CPDF_CMap::CIDRange"* %160 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %186, i8* align 4 %187, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %187, i8* nonnull align 4 %185, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %185)
  %188 = load i32, i32* %161, align 4
  %189 = icmp ult i32 %167, %188
  br i1 %189, label %190, label %193

190:                                              ; preds = %184
  %191 = bitcast %"struct.CPDF_CMap::CIDRange"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %191)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %191, i8* align 4 %187, i64 12, i1 false) #10
  %192 = bitcast %"struct.CPDF_CMap::CIDRange"* %159 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %187, i8* align 4 %192, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %192, i8* nonnull align 4 %191, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %191)
  br label %193

193:                                              ; preds = %190, %184, %180, %176, %170, %169
  %194 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 3
  %195 = icmp eq %"struct.CPDF_CMap::CIDRange"* %194, %47
  br i1 %195, label %424, label %196

196:                                              ; preds = %193, %227
  %197 = phi %"struct.CPDF_CMap::CIDRange"* [ %228, %227 ], [ %194, %193 ]
  %198 = phi %"struct.CPDF_CMap::CIDRange"* [ %197, %227 ], [ %159, %193 ]
  %199 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %197, i64 0, i32 1
  %200 = load i32, i32* %199, align 4
  %201 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %198, i64 0, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = icmp ult i32 %200, %202
  br i1 %203, label %204, label %227

204:                                              ; preds = %196
  %205 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %197, i64 0, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %197, i64 0, i32 2
  %208 = bitcast i16* %207 to i32*
  %209 = load i32, i32* %208, align 4
  br label %210

210:                                              ; preds = %216, %204
  %211 = phi %"struct.CPDF_CMap::CIDRange"* [ %197, %204 ], [ %212, %216 ]
  %212 = phi %"struct.CPDF_CMap::CIDRange"* [ %198, %204 ], [ %217, %216 ]
  %213 = bitcast %"struct.CPDF_CMap::CIDRange"* %211 to i8*
  %214 = bitcast %"struct.CPDF_CMap::CIDRange"* %212 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %213, i8* align 4 %214, i64 12, i1 false) #10
  %215 = icmp eq %"struct.CPDF_CMap::CIDRange"* %212, %63
  br i1 %215, label %221, label %216

216:                                              ; preds = %210
  %217 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %212, i64 -1
  %218 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %212, i64 -1, i32 1
  %219 = load i32, i32* %218, align 4
  %220 = icmp ult i32 %200, %219
  br i1 %220, label %210, label %221

221:                                              ; preds = %216, %210
  %222 = phi %"struct.CPDF_CMap::CIDRange"* [ %63, %210 ], [ %212, %216 ]
  %223 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %222, i64 0, i32 0
  store i32 %206, i32* %223, align 4
  %224 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %222, i64 0, i32 1
  store i32 %200, i32* %224, align 4
  %225 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %222, i64 0, i32 2
  %226 = bitcast i16* %225 to i32*
  store i32 %209, i32* %226, align 4
  br label %227

227:                                              ; preds = %221, %196
  %228 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %197, i64 1
  %229 = icmp eq %"struct.CPDF_CMap::CIDRange"* %228, %47
  br i1 %229, label %424, label %196

230:                                              ; preds = %156
  %231 = icmp sgt i64 %65, 11988
  %232 = udiv i64 %65, 24
  %233 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 %232
  br i1 %231, label %234, label %267

234:                                              ; preds = %230
  %235 = udiv i64 %65, 48
  %236 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 %235
  %237 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %233, i64 %235
  %238 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN9CPDF_CMap21SetAdditionalMappingsENS_6vectorINS1_8CIDRangeENS_9allocatorIS3_EEEEE3$_1PS3_EEjT0_SA_SA_SA_T_"(%"struct.CPDF_CMap::CIDRange"* %63, %"struct.CPDF_CMap::CIDRange"* %236, %"struct.CPDF_CMap::CIDRange"* %233, %"struct.CPDF_CMap::CIDRange"* %237) #10
  %239 = load i32, i32* %55, align 4
  %240 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %237, i64 0, i32 1
  %241 = load i32, i32* %240, align 4
  %242 = icmp ult i32 %239, %241
  br i1 %242, label %243, label %293

243:                                              ; preds = %234
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %37)
  %244 = bitcast %"struct.CPDF_CMap::CIDRange"* %237 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %37, i8* align 4 %244, i64 12, i1 false) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %244, i8* align 4 %56, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %56, i8* nonnull align 4 %37, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %37)
  %245 = add i32 %238, 1
  %246 = load i32, i32* %240, align 4
  %247 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 %232, i32 1
  %248 = load i32, i32* %247, align 4
  %249 = icmp ult i32 %246, %248
  br i1 %249, label %250, label %293

250:                                              ; preds = %243
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %38)
  %251 = bitcast %"struct.CPDF_CMap::CIDRange"* %233 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %38, i8* align 4 %251, i64 12, i1 false) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %251, i8* align 4 %244, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %244, i8* nonnull align 4 %38, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %38)
  %252 = add i32 %238, 2
  %253 = load i32, i32* %247, align 4
  %254 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 %235, i32 1
  %255 = load i32, i32* %254, align 4
  %256 = icmp ult i32 %253, %255
  br i1 %256, label %257, label %293

257:                                              ; preds = %250
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %39)
  %258 = bitcast %"struct.CPDF_CMap::CIDRange"* %236 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %39, i8* align 4 %258, i64 12, i1 false) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %258, i8* align 4 %251, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %251, i8* nonnull align 4 %39, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %39)
  %259 = add i32 %238, 3
  %260 = load i32, i32* %254, align 4
  %261 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 0, i32 1
  %262 = load i32, i32* %261, align 4
  %263 = icmp ult i32 %260, %262
  br i1 %263, label %264, label %293

264:                                              ; preds = %257
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %40)
  %265 = bitcast %"struct.CPDF_CMap::CIDRange"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %40, i8* align 4 %265, i64 12, i1 false) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %265, i8* align 4 %258, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %258, i8* nonnull align 4 %40, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %40)
  %266 = add i32 %238, 4
  br label %293

267:                                              ; preds = %230
  %268 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 %232, i32 1
  %269 = load i32, i32* %268, align 4
  %270 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 0, i32 1
  %271 = load i32, i32* %270, align 4
  %272 = icmp ult i32 %269, %271
  %273 = load i32, i32* %51, align 4
  %274 = icmp ult i32 %273, %269
  br i1 %272, label %283, label %275

275:                                              ; preds = %267
  br i1 %274, label %276, label %293

276:                                              ; preds = %275
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %32)
  %277 = bitcast %"struct.CPDF_CMap::CIDRange"* %233 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* align 4 %277, i64 12, i1 false) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %277, i8* align 4 %52, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* nonnull align 4 %32, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %32)
  %278 = load i32, i32* %268, align 4
  %279 = load i32, i32* %270, align 4
  %280 = icmp ult i32 %278, %279
  br i1 %280, label %281, label %293

281:                                              ; preds = %276
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %33)
  %282 = bitcast %"struct.CPDF_CMap::CIDRange"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %282, i64 12, i1 false) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %282, i8* align 4 %277, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %277, i8* nonnull align 4 %33, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %33)
  br label %293

283:                                              ; preds = %267
  br i1 %274, label %284, label %286

284:                                              ; preds = %283
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %36)
  %285 = bitcast %"struct.CPDF_CMap::CIDRange"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %36, i8* align 4 %285, i64 12, i1 false) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %285, i8* align 4 %54, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %54, i8* nonnull align 4 %36, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %36)
  br label %293

286:                                              ; preds = %283
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %34)
  %287 = bitcast %"struct.CPDF_CMap::CIDRange"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %34, i8* align 4 %287, i64 12, i1 false) #10
  %288 = bitcast %"struct.CPDF_CMap::CIDRange"* %233 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %287, i8* align 4 %288, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %288, i8* nonnull align 4 %34, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %34)
  %289 = load i32, i32* %51, align 4
  %290 = load i32, i32* %268, align 4
  %291 = icmp ult i32 %289, %290
  br i1 %291, label %292, label %293

292:                                              ; preds = %286
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %35)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %35, i8* align 4 %288, i64 12, i1 false) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %288, i8* align 4 %53, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* nonnull align 4 %35, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %35)
  br label %293

293:                                              ; preds = %292, %286, %284, %281, %276, %275, %264, %257, %250, %243, %234
  %294 = phi i32 [ %266, %264 ], [ %259, %257 ], [ %252, %250 ], [ %245, %243 ], [ %238, %234 ], [ 1, %284 ], [ 0, %275 ], [ 2, %281 ], [ 1, %276 ], [ 2, %292 ], [ 1, %286 ]
  %295 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 0, i32 1
  %296 = load i32, i32* %295, align 4
  %297 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 %232, i32 1
  %298 = load i32, i32* %297, align 4
  %299 = icmp ult i32 %296, %298
  br i1 %299, label %353, label %300

300:                                              ; preds = %293, %345
  %301 = phi %"struct.CPDF_CMap::CIDRange"* [ %302, %345 ], [ %50, %293 ]
  %302 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %301, i64 -1
  %303 = icmp eq %"struct.CPDF_CMap::CIDRange"* %63, %302
  br i1 %303, label %304, label %345

304:                                              ; preds = %300
  %305 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 1
  %306 = load i32, i32* %57, align 4
  %307 = icmp ult i32 %296, %306
  br i1 %307, label %321, label %308

308:                                              ; preds = %304
  %309 = icmp eq %"struct.CPDF_CMap::CIDRange"* %305, %50
  br i1 %309, label %424, label %310

310:                                              ; preds = %308, %318
  %311 = phi %"struct.CPDF_CMap::CIDRange"* [ %319, %318 ], [ %305, %308 ]
  %312 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %311, i64 0, i32 1
  %313 = load i32, i32* %312, align 4
  %314 = icmp ult i32 %296, %313
  br i1 %314, label %315, label %318

315:                                              ; preds = %310
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %42)
  %316 = bitcast %"struct.CPDF_CMap::CIDRange"* %311 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %42, i8* align 4 %316, i64 12, i1 false) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %316, i8* align 4 %58, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %58, i8* nonnull align 4 %42, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %42)
  %317 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %311, i64 1
  br label %321

318:                                              ; preds = %310
  %319 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %311, i64 1
  %320 = icmp eq %"struct.CPDF_CMap::CIDRange"* %319, %50
  br i1 %320, label %424, label %310

321:                                              ; preds = %315, %304
  %322 = phi %"struct.CPDF_CMap::CIDRange"* [ %305, %304 ], [ %317, %315 ]
  %323 = icmp eq %"struct.CPDF_CMap::CIDRange"* %322, %50
  br i1 %323, label %424, label %324

324:                                              ; preds = %321, %342
  %325 = phi %"struct.CPDF_CMap::CIDRange"* [ %333, %342 ], [ %322, %321 ]
  %326 = phi %"struct.CPDF_CMap::CIDRange"* [ %336, %342 ], [ %50, %321 ]
  %327 = load i32, i32* %295, align 4
  br label %328

328:                                              ; preds = %328, %324
  %329 = phi %"struct.CPDF_CMap::CIDRange"* [ %325, %324 ], [ %333, %328 ]
  %330 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %329, i64 0, i32 1
  %331 = load i32, i32* %330, align 4
  %332 = icmp ult i32 %327, %331
  %333 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %329, i64 1
  br i1 %332, label %334, label %328

334:                                              ; preds = %328, %334
  %335 = phi %"struct.CPDF_CMap::CIDRange"* [ %336, %334 ], [ %326, %328 ]
  %336 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %335, i64 -1
  %337 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %335, i64 -1, i32 1
  %338 = load i32, i32* %337, align 4
  %339 = icmp ult i32 %327, %338
  br i1 %339, label %334, label %340

340:                                              ; preds = %334
  %341 = icmp ult %"struct.CPDF_CMap::CIDRange"* %329, %336
  br i1 %341, label %342, label %62

342:                                              ; preds = %340
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %43)
  %343 = bitcast %"struct.CPDF_CMap::CIDRange"* %329 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %43, i8* align 4 %343, i64 12, i1 false) #10
  %344 = bitcast %"struct.CPDF_CMap::CIDRange"* %336 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %343, i8* align 4 %344, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %344, i8* nonnull align 4 %43, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %43)
  br label %324

345:                                              ; preds = %300
  %346 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %301, i64 -1, i32 1
  %347 = load i32, i32* %346, align 4
  %348 = icmp ult i32 %347, %298
  br i1 %348, label %349, label %300

349:                                              ; preds = %345
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %41)
  %350 = bitcast %"struct.CPDF_CMap::CIDRange"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %41, i8* align 4 %350, i64 12, i1 false) #10
  %351 = bitcast %"struct.CPDF_CMap::CIDRange"* %302 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %350, i8* align 4 %351, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %351, i8* nonnull align 4 %41, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %41)
  %352 = add i32 %294, 1
  br label %353

353:                                              ; preds = %293, %349
  %354 = phi i32 [ %352, %349 ], [ %294, %293 ]
  %355 = phi %"struct.CPDF_CMap::CIDRange"* [ %302, %349 ], [ %50, %293 ]
  %356 = ptrtoint %"struct.CPDF_CMap::CIDRange"* %63 to i64
  %357 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %63, i64 1
  %358 = icmp ult %"struct.CPDF_CMap::CIDRange"* %357, %355
  br i1 %358, label %359, label %386

359:                                              ; preds = %353, %380
  %360 = phi %"struct.CPDF_CMap::CIDRange"* [ %385, %380 ], [ %233, %353 ]
  %361 = phi i32 [ %383, %380 ], [ %354, %353 ]
  %362 = phi %"struct.CPDF_CMap::CIDRange"* [ %371, %380 ], [ %357, %353 ]
  %363 = phi %"struct.CPDF_CMap::CIDRange"* [ %374, %380 ], [ %355, %353 ]
  %364 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %360, i64 0, i32 1
  %365 = load i32, i32* %364, align 4
  br label %366

366:                                              ; preds = %366, %359
  %367 = phi %"struct.CPDF_CMap::CIDRange"* [ %362, %359 ], [ %371, %366 ]
  %368 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %367, i64 0, i32 1
  %369 = load i32, i32* %368, align 4
  %370 = icmp ult i32 %369, %365
  %371 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %367, i64 1
  br i1 %370, label %366, label %372

372:                                              ; preds = %366, %372
  %373 = phi %"struct.CPDF_CMap::CIDRange"* [ %374, %372 ], [ %363, %366 ]
  %374 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %373, i64 -1
  %375 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %373, i64 -1, i32 1
  %376 = load i32, i32* %375, align 4
  %377 = icmp ult i32 %376, %365
  br i1 %377, label %378, label %372

378:                                              ; preds = %372
  %379 = icmp ugt %"struct.CPDF_CMap::CIDRange"* %367, %374
  br i1 %379, label %386, label %380

380:                                              ; preds = %378
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %44)
  %381 = bitcast %"struct.CPDF_CMap::CIDRange"* %367 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %44, i8* align 4 %381, i64 12, i1 false) #10
  %382 = bitcast %"struct.CPDF_CMap::CIDRange"* %374 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %381, i8* align 4 %382, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %382, i8* nonnull align 4 %44, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %44)
  %383 = add i32 %361, 1
  %384 = icmp eq %"struct.CPDF_CMap::CIDRange"* %360, %367
  %385 = select i1 %384, %"struct.CPDF_CMap::CIDRange"* %374, %"struct.CPDF_CMap::CIDRange"* %360
  br label %359

386:                                              ; preds = %378, %353
  %387 = phi %"struct.CPDF_CMap::CIDRange"* [ %233, %353 ], [ %360, %378 ]
  %388 = phi i32 [ %354, %353 ], [ %361, %378 ]
  %389 = phi %"struct.CPDF_CMap::CIDRange"* [ %357, %353 ], [ %367, %378 ]
  %390 = icmp eq %"struct.CPDF_CMap::CIDRange"* %389, %387
  br i1 %390, label %401, label %391

391:                                              ; preds = %386
  %392 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %387, i64 0, i32 1
  %393 = load i32, i32* %392, align 4
  %394 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %389, i64 0, i32 1
  %395 = load i32, i32* %394, align 4
  %396 = icmp ult i32 %393, %395
  br i1 %396, label %397, label %401

397:                                              ; preds = %391
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %45)
  %398 = bitcast %"struct.CPDF_CMap::CIDRange"* %389 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %45, i8* align 4 %398, i64 12, i1 false) #10
  %399 = bitcast %"struct.CPDF_CMap::CIDRange"* %387 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %398, i8* align 4 %399, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %399, i8* nonnull align 4 %45, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %45)
  %400 = add i32 %388, 1
  br label %401

401:                                              ; preds = %386, %397, %391
  %402 = phi i32 [ %400, %397 ], [ %388, %391 ], [ %388, %386 ]
  %403 = icmp eq i32 %402, 0
  br i1 %403, label %404, label %411

404:                                              ; preds = %401
  %405 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN9CPDF_CMap21SetAdditionalMappingsENS_6vectorINS1_8CIDRangeENS_9allocatorIS3_EEEEE3$_1PS3_EEbT0_SA_T_"(%"struct.CPDF_CMap::CIDRange"* %63, %"struct.CPDF_CMap::CIDRange"* %389)
  %406 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %389, i64 1
  %407 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN9CPDF_CMap21SetAdditionalMappingsENS_6vectorINS1_8CIDRangeENS_9allocatorIS3_EEEEE3$_1PS3_EEbT0_SA_T_"(%"struct.CPDF_CMap::CIDRange"* %406, %"struct.CPDF_CMap::CIDRange"* %47)
  br i1 %407, label %408, label %410

408:                                              ; preds = %404
  br i1 %405, label %424, label %409

409:                                              ; preds = %408, %422
  br label %46

410:                                              ; preds = %404
  br i1 %405, label %420, label %411

411:                                              ; preds = %410, %401
  %412 = ptrtoint %"struct.CPDF_CMap::CIDRange"* %389 to i64
  %413 = sub i64 %412, %356
  %414 = sdiv exact i64 %413, 12
  %415 = sub i64 %59, %412
  %416 = sdiv exact i64 %415, 12
  %417 = icmp slt i64 %414, %416
  br i1 %417, label %418, label %422

418:                                              ; preds = %411
  tail call fastcc void @"_ZNSt3__16__sortIRZN9CPDF_CMap21SetAdditionalMappingsENS_6vectorINS1_8CIDRangeENS_9allocatorIS3_EEEEE3$_1PS3_EEvT0_SA_T_"(%"struct.CPDF_CMap::CIDRange"* %63, %"struct.CPDF_CMap::CIDRange"* %389)
  %419 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %389, i64 1
  br label %420

420:                                              ; preds = %418, %410
  %421 = phi %"struct.CPDF_CMap::CIDRange"* [ %406, %410 ], [ %419, %418 ]
  br label %60

422:                                              ; preds = %411
  %423 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %389, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN9CPDF_CMap21SetAdditionalMappingsENS_6vectorINS1_8CIDRangeENS_9allocatorIS3_EEEEE3$_1PS3_EEvT0_SA_T_"(%"struct.CPDF_CMap::CIDRange"* %423, %"struct.CPDF_CMap::CIDRange"* %47)
  br label %409

424:                                              ; preds = %408, %321, %62, %62, %308, %318, %227, %193, %153, %146, %139, %130, %120, %112, %105, %101, %97, %90, %89, %67, %73, %115
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN9CPDF_CMap21SetAdditionalMappingsENS_6vectorINS1_8CIDRangeENS_9allocatorIS3_EEEEE3$_1PS3_EEjT0_SA_SA_SA_T_"(%"struct.CPDF_CMap::CIDRange"* nocapture, %"struct.CPDF_CMap::CIDRange"* nocapture, %"struct.CPDF_CMap::CIDRange"* nocapture, %"struct.CPDF_CMap::CIDRange"* nocapture) unnamed_addr #0 {
  %5 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %6 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %7 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %8 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %9 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %10 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %11 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %12 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %13 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp ult i32 %14, %16
  %18 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %2, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp ult i32 %19, %14
  br i1 %17, label %32, label %21

21:                                               ; preds = %4
  br i1 %20, label %22, label %47

22:                                               ; preds = %21
  %23 = bitcast %"struct.CPDF_CMap::CIDRange"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %23)
  %24 = bitcast %"struct.CPDF_CMap::CIDRange"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %23, i8* align 4 %24, i64 12, i1 false) #10
  %25 = bitcast %"struct.CPDF_CMap::CIDRange"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %25, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* nonnull align 4 %23, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %23)
  %26 = load i32, i32* %13, align 4
  %27 = load i32, i32* %15, align 4
  %28 = icmp ult i32 %26, %27
  br i1 %28, label %29, label %47

29:                                               ; preds = %22
  %30 = bitcast %"struct.CPDF_CMap::CIDRange"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %30)
  %31 = bitcast %"struct.CPDF_CMap::CIDRange"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %30, i8* align 4 %31, i64 12, i1 false) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %24, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* nonnull align 4 %30, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %30)
  br label %47

32:                                               ; preds = %4
  br i1 %20, label %33, label %37

33:                                               ; preds = %32
  %34 = bitcast %"struct.CPDF_CMap::CIDRange"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %34)
  %35 = bitcast %"struct.CPDF_CMap::CIDRange"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %34, i8* align 4 %35, i64 12, i1 false) #10
  %36 = bitcast %"struct.CPDF_CMap::CIDRange"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 4 %36, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* nonnull align 4 %34, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %34)
  br label %47

37:                                               ; preds = %32
  %38 = bitcast %"struct.CPDF_CMap::CIDRange"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %38)
  %39 = bitcast %"struct.CPDF_CMap::CIDRange"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %38, i8* align 4 %39, i64 12, i1 false) #10
  %40 = bitcast %"struct.CPDF_CMap::CIDRange"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %40, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* nonnull align 4 %38, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %38)
  %41 = load i32, i32* %18, align 4
  %42 = load i32, i32* %13, align 4
  %43 = icmp ult i32 %41, %42
  br i1 %43, label %44, label %47

44:                                               ; preds = %37
  %45 = bitcast %"struct.CPDF_CMap::CIDRange"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %45)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %45, i8* align 4 %40, i64 12, i1 false) #10
  %46 = bitcast %"struct.CPDF_CMap::CIDRange"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %46, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %46, i8* nonnull align 4 %45, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %45)
  br label %47

47:                                               ; preds = %21, %22, %29, %33, %37, %44
  %48 = phi i32 [ 1, %33 ], [ 0, %21 ], [ 2, %29 ], [ 1, %22 ], [ 2, %44 ], [ 1, %37 ]
  %49 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %3, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = load i32, i32* %18, align 4
  %52 = icmp ult i32 %50, %51
  br i1 %52, label %53, label %72

53:                                               ; preds = %47
  %54 = bitcast %"struct.CPDF_CMap::CIDRange"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %54)
  %55 = bitcast %"struct.CPDF_CMap::CIDRange"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %54, i8* align 4 %55, i64 12, i1 false) #10
  %56 = bitcast %"struct.CPDF_CMap::CIDRange"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %55, i8* align 4 %56, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %56, i8* nonnull align 4 %54, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %54)
  %57 = add nuw nsw i32 %48, 1
  %58 = load i32, i32* %18, align 4
  %59 = load i32, i32* %13, align 4
  %60 = icmp ult i32 %58, %59
  br i1 %60, label %61, label %72

61:                                               ; preds = %53
  %62 = bitcast %"struct.CPDF_CMap::CIDRange"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %62)
  %63 = bitcast %"struct.CPDF_CMap::CIDRange"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %62, i8* align 4 %63, i64 12, i1 false) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %63, i8* align 4 %55, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %55, i8* nonnull align 4 %62, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %62)
  %64 = add nuw nsw i32 %48, 2
  %65 = load i32, i32* %13, align 4
  %66 = load i32, i32* %15, align 4
  %67 = icmp ult i32 %65, %66
  br i1 %67, label %68, label %72

68:                                               ; preds = %61
  %69 = bitcast %"struct.CPDF_CMap::CIDRange"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %69)
  %70 = bitcast %"struct.CPDF_CMap::CIDRange"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %69, i8* align 4 %70, i64 12, i1 false) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %70, i8* align 4 %63, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %63, i8* nonnull align 4 %69, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %69)
  %71 = add nuw nsw i32 %48, 3
  br label %72

72:                                               ; preds = %53, %68, %61, %47
  %73 = phi i32 [ %71, %68 ], [ %64, %61 ], [ %57, %53 ], [ %48, %47 ]
  ret i32 %73
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN9CPDF_CMap21SetAdditionalMappingsENS_6vectorINS1_8CIDRangeENS_9allocatorIS3_EEEEE3$_1PS3_EEbT0_SA_T_"(%"struct.CPDF_CMap::CIDRange"*, %"struct.CPDF_CMap::CIDRange"*) unnamed_addr #0 {
  %3 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %4 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %5 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %6 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %7 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %8 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %9 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %10 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %11 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %12 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %13 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %14 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %15 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %16 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %17 = alloca %"struct.CPDF_CMap::CIDRange", align 4
  %18 = ptrtoint %"struct.CPDF_CMap::CIDRange"* %1 to i64
  %19 = ptrtoint %"struct.CPDF_CMap::CIDRange"* %0 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 12
  switch i64 %21, label %111 [
    i64 0, label %190
    i64 1, label %190
    i64 2, label %22
    i64 3, label %33
    i64 4, label %70
    i64 5, label %75
  ]

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %1, i64 -1, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %0, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp ult i32 %24, %26
  br i1 %27, label %28, label %190

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %1, i64 -1
  %30 = bitcast %"struct.CPDF_CMap::CIDRange"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %30)
  %31 = bitcast %"struct.CPDF_CMap::CIDRange"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %30, i8* align 4 %31, i64 12, i1 false) #10
  %32 = bitcast %"struct.CPDF_CMap::CIDRange"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* nonnull align 4 %30, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %30)
  br label %190

33:                                               ; preds = %2
  %34 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %0, i64 1
  %35 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %1, i64 -1
  %36 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %0, i64 1, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %0, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = icmp ult i32 %37, %39
  %41 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %1, i64 -1, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp ult i32 %42, %37
  br i1 %40, label %55, label %44

44:                                               ; preds = %33
  br i1 %43, label %45, label %190

45:                                               ; preds = %44
  %46 = bitcast %"struct.CPDF_CMap::CIDRange"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %46)
  %47 = bitcast %"struct.CPDF_CMap::CIDRange"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %46, i8* align 4 %47, i64 12, i1 false) #10
  %48 = bitcast %"struct.CPDF_CMap::CIDRange"* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %47, i8* align 4 %48, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %48, i8* nonnull align 4 %46, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %46)
  %49 = load i32, i32* %36, align 4
  %50 = load i32, i32* %38, align 4
  %51 = icmp ult i32 %49, %50
  br i1 %51, label %52, label %190

52:                                               ; preds = %45
  %53 = bitcast %"struct.CPDF_CMap::CIDRange"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %53)
  %54 = bitcast %"struct.CPDF_CMap::CIDRange"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %53, i8* align 4 %54, i64 12, i1 false) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %54, i8* align 4 %47, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %47, i8* nonnull align 4 %53, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %53)
  br label %190

55:                                               ; preds = %33
  br i1 %43, label %56, label %60

56:                                               ; preds = %55
  %57 = bitcast %"struct.CPDF_CMap::CIDRange"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %57)
  %58 = bitcast %"struct.CPDF_CMap::CIDRange"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %57, i8* align 4 %58, i64 12, i1 false) #10
  %59 = bitcast %"struct.CPDF_CMap::CIDRange"* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %58, i8* align 4 %59, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* nonnull align 4 %57, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %57)
  br label %190

60:                                               ; preds = %55
  %61 = bitcast %"struct.CPDF_CMap::CIDRange"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %61)
  %62 = bitcast %"struct.CPDF_CMap::CIDRange"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %61, i8* align 4 %62, i64 12, i1 false) #10
  %63 = bitcast %"struct.CPDF_CMap::CIDRange"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %62, i8* align 4 %63, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %63, i8* nonnull align 4 %61, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %61)
  %64 = load i32, i32* %41, align 4
  %65 = load i32, i32* %36, align 4
  %66 = icmp ult i32 %64, %65
  br i1 %66, label %67, label %190

67:                                               ; preds = %60
  %68 = bitcast %"struct.CPDF_CMap::CIDRange"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %68)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %68, i8* align 4 %63, i64 12, i1 false) #10
  %69 = bitcast %"struct.CPDF_CMap::CIDRange"* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %63, i8* align 4 %69, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %69, i8* nonnull align 4 %68, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %68)
  br label %190

70:                                               ; preds = %2
  %71 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %0, i64 1
  %72 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %0, i64 2
  %73 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %1, i64 -1
  %74 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN9CPDF_CMap21SetAdditionalMappingsENS_6vectorINS1_8CIDRangeENS_9allocatorIS3_EEEEE3$_1PS3_EEjT0_SA_SA_SA_T_"(%"struct.CPDF_CMap::CIDRange"* %0, %"struct.CPDF_CMap::CIDRange"* %71, %"struct.CPDF_CMap::CIDRange"* %72, %"struct.CPDF_CMap::CIDRange"* %73)
  br label %190

75:                                               ; preds = %2
  %76 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %0, i64 1
  %77 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %0, i64 2
  %78 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %0, i64 3
  %79 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN9CPDF_CMap21SetAdditionalMappingsENS_6vectorINS1_8CIDRangeENS_9allocatorIS3_EEEEE3$_1PS3_EEjT0_SA_SA_SA_T_"(%"struct.CPDF_CMap::CIDRange"* %0, %"struct.CPDF_CMap::CIDRange"* %76, %"struct.CPDF_CMap::CIDRange"* %77, %"struct.CPDF_CMap::CIDRange"* %78) #10
  %80 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %1, i64 -1, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %0, i64 3, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = icmp ult i32 %81, %83
  br i1 %84, label %85, label %190

85:                                               ; preds = %75
  %86 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %1, i64 -1
  %87 = bitcast %"struct.CPDF_CMap::CIDRange"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %87)
  %88 = bitcast %"struct.CPDF_CMap::CIDRange"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %87, i8* align 4 %88, i64 12, i1 false) #10
  %89 = bitcast %"struct.CPDF_CMap::CIDRange"* %86 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %88, i8* align 4 %89, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %89, i8* nonnull align 4 %87, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %87)
  %90 = load i32, i32* %82, align 4
  %91 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %0, i64 2, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = icmp ult i32 %90, %92
  br i1 %93, label %94, label %190

94:                                               ; preds = %85
  %95 = bitcast %"struct.CPDF_CMap::CIDRange"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %95)
  %96 = bitcast %"struct.CPDF_CMap::CIDRange"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %95, i8* align 4 %96, i64 12, i1 false) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %96, i8* align 4 %88, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %88, i8* nonnull align 4 %95, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %95)
  %97 = load i32, i32* %91, align 4
  %98 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %0, i64 1, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp ult i32 %97, %99
  br i1 %100, label %101, label %190

101:                                              ; preds = %94
  %102 = bitcast %"struct.CPDF_CMap::CIDRange"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %102)
  %103 = bitcast %"struct.CPDF_CMap::CIDRange"* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %102, i8* align 4 %103, i64 12, i1 false) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* align 4 %96, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %96, i8* nonnull align 4 %102, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %102)
  %104 = load i32, i32* %98, align 4
  %105 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %0, i64 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = icmp ult i32 %104, %106
  br i1 %107, label %108, label %190

108:                                              ; preds = %101
  %109 = bitcast %"struct.CPDF_CMap::CIDRange"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %109)
  %110 = bitcast %"struct.CPDF_CMap::CIDRange"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %109, i8* align 4 %110, i64 12, i1 false) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %110, i8* align 4 %103, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* nonnull align 4 %109, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %109)
  br label %190

111:                                              ; preds = %2
  %112 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %0, i64 2
  %113 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %0, i64 1
  %114 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %0, i64 1, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %0, i64 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = icmp ult i32 %115, %117
  %119 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %0, i64 2, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = icmp ult i32 %120, %115
  br i1 %118, label %132, label %122

122:                                              ; preds = %111
  br i1 %121, label %123, label %146

123:                                              ; preds = %122
  %124 = bitcast %"struct.CPDF_CMap::CIDRange"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %124)
  %125 = bitcast %"struct.CPDF_CMap::CIDRange"* %113 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %124, i8* align 4 %125, i64 12, i1 false) #10
  %126 = bitcast %"struct.CPDF_CMap::CIDRange"* %112 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %125, i8* align 4 %126, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %126, i8* nonnull align 4 %124, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %124)
  %127 = load i32, i32* %114, align 4
  %128 = icmp ult i32 %127, %117
  br i1 %128, label %129, label %146

129:                                              ; preds = %123
  %130 = bitcast %"struct.CPDF_CMap::CIDRange"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %130)
  %131 = bitcast %"struct.CPDF_CMap::CIDRange"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %130, i8* align 4 %131, i64 12, i1 false) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %131, i8* align 4 %125, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %125, i8* nonnull align 4 %130, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %130)
  br label %146

132:                                              ; preds = %111
  br i1 %121, label %133, label %137

133:                                              ; preds = %132
  %134 = bitcast %"struct.CPDF_CMap::CIDRange"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %134)
  %135 = bitcast %"struct.CPDF_CMap::CIDRange"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %134, i8* align 4 %135, i64 12, i1 false) #10
  %136 = bitcast %"struct.CPDF_CMap::CIDRange"* %112 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %135, i8* align 4 %136, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %136, i8* nonnull align 4 %134, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %134)
  br label %146

137:                                              ; preds = %132
  %138 = bitcast %"struct.CPDF_CMap::CIDRange"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %138)
  %139 = bitcast %"struct.CPDF_CMap::CIDRange"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %138, i8* align 4 %139, i64 12, i1 false) #10
  %140 = bitcast %"struct.CPDF_CMap::CIDRange"* %113 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %139, i8* align 4 %140, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %140, i8* nonnull align 4 %138, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %138)
  %141 = load i32, i32* %114, align 4
  %142 = icmp ult i32 %120, %141
  br i1 %142, label %143, label %146

143:                                              ; preds = %137
  %144 = bitcast %"struct.CPDF_CMap::CIDRange"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %144)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %144, i8* align 4 %140, i64 12, i1 false) #10
  %145 = bitcast %"struct.CPDF_CMap::CIDRange"* %112 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %140, i8* align 4 %145, i64 12, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %145, i8* nonnull align 4 %144, i64 12, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %144)
  br label %146

146:                                              ; preds = %122, %123, %129, %133, %137, %143
  %147 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %0, i64 3
  %148 = icmp eq %"struct.CPDF_CMap::CIDRange"* %147, %1
  br i1 %148, label %190, label %149

149:                                              ; preds = %146, %183
  %150 = phi %"struct.CPDF_CMap::CIDRange"* [ %185, %183 ], [ %147, %146 ]
  %151 = phi i32 [ %184, %183 ], [ 0, %146 ]
  %152 = phi %"struct.CPDF_CMap::CIDRange"* [ %150, %183 ], [ %112, %146 ]
  %153 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %150, i64 0, i32 1
  %154 = load i32, i32* %153, align 4
  %155 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %152, i64 0, i32 1
  %156 = load i32, i32* %155, align 4
  %157 = icmp ult i32 %154, %156
  br i1 %157, label %158, label %183

158:                                              ; preds = %149
  %159 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %150, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %150, i64 0, i32 2
  %162 = bitcast i16* %161 to i32*
  %163 = load i32, i32* %162, align 4
  br label %164

164:                                              ; preds = %170, %158
  %165 = phi %"struct.CPDF_CMap::CIDRange"* [ %150, %158 ], [ %166, %170 ]
  %166 = phi %"struct.CPDF_CMap::CIDRange"* [ %152, %158 ], [ %171, %170 ]
  %167 = bitcast %"struct.CPDF_CMap::CIDRange"* %165 to i8*
  %168 = bitcast %"struct.CPDF_CMap::CIDRange"* %166 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %167, i8* align 4 %168, i64 12, i1 false)
  %169 = icmp eq %"struct.CPDF_CMap::CIDRange"* %166, %0
  br i1 %169, label %175, label %170

170:                                              ; preds = %164
  %171 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %166, i64 -1
  %172 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %166, i64 -1, i32 1
  %173 = load i32, i32* %172, align 4
  %174 = icmp ult i32 %154, %173
  br i1 %174, label %164, label %175

175:                                              ; preds = %164, %170
  %176 = phi %"struct.CPDF_CMap::CIDRange"* [ %0, %164 ], [ %166, %170 ]
  %177 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %176, i64 0, i32 0
  store i32 %160, i32* %177, align 4
  %178 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %176, i64 0, i32 1
  store i32 %154, i32* %178, align 4
  %179 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %176, i64 0, i32 2
  %180 = bitcast i16* %179 to i32*
  store i32 %163, i32* %180, align 4
  %181 = add i32 %151, 1
  %182 = icmp eq i32 %181, 8
  br i1 %182, label %187, label %183

183:                                              ; preds = %175, %149
  %184 = phi i32 [ %181, %175 ], [ %151, %149 ]
  %185 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %150, i64 1
  %186 = icmp eq %"struct.CPDF_CMap::CIDRange"* %185, %1
  br i1 %186, label %190, label %149

187:                                              ; preds = %175
  %188 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %150, i64 1
  %189 = icmp eq %"struct.CPDF_CMap::CIDRange"* %188, %1
  br label %190

190:                                              ; preds = %183, %187, %146, %108, %101, %94, %85, %75, %67, %60, %56, %52, %45, %44, %22, %28, %2, %2, %70
  %191 = phi i1 [ true, %70 ], [ true, %2 ], [ true, %2 ], [ true, %28 ], [ true, %22 ], [ true, %44 ], [ true, %45 ], [ true, %52 ], [ true, %56 ], [ true, %60 ], [ true, %67 ], [ true, %75 ], [ true, %85 ], [ true, %94 ], [ true, %101 ], [ true, %108 ], [ true, %146 ], [ %189, %187 ], [ true, %183 ]
  ret i1 %191
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN12_GLOBAL__N_119LoadLeadingSegmentsERKNS_14PredefinedCMapE: argument 0"}
!4 = distinct !{!4, !"_ZN12_GLOBAL__N_119LoadLeadingSegmentsERKNS_14PredefinedCMapE"}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{i32 -2143425388}
!7 = !{i32 -2143425367}
