; ModuleID = 'gen/third_party/blink/renderer/core/html_element_type_helpers.cc'
source_filename = "gen/third_party/blink/renderer/core/html_element_type_helpers.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.anon = type { i8*, i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const WTF::HashMap<WTF::AtomicString, blink::HTMLElementType, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<blink::HTMLElementType>, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<const WTF::HashMap<WTF::AtomicString, blink::HTMLElementType, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<blink::HTMLElementType>, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.74", %"class.WTF::Vector.74", i8, i32, %"class.blink::Member.85", %"class.blink::Member.87", %"class.blink::Member.89", %"class.blink::Member.91", %"class.blink::Member.93", %"class.blink::Member.95", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.98", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.104", %"class.blink::Member.106", %"class.blink::Member.64", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.109", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.25", %"class.blink::Member.124", %"class.blink::Member.25", %"class.blink::Member.25", %"class.blink::Member.25", %"class.blink::UserActionElementSet", %"class.blink::Member.133", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.140", i16, i8, %"class.blink::Member.147", %"class.blink::Member.149", %"class.blink::Member.151", %"class.blink::Member.153", %"class.blink::TextLinkColors", %"class.blink::Member.155", i8, [7 x i8], %"class.blink::HeapHashMap.157", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.25", %"class.WTF::Vector.164", %"class.blink::Member.169", %"class.blink::Member.171", i8, %"class.blink::Member.25", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.173", %"class.blink::HeapVector.175", %"class.std::__1::unique_ptr.183", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.189", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.201", %"class.WTF::Vector.203", i8, i8, %"class.std::__1::unique_ptr.208", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.214", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.222", i8, i32, %"class.blink::Member.224", %"class.blink::Member.226", %"class.blink::Member.228", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.230", %"class.WTF::HashMap.232", %"class.blink::Member.237", %"class.blink::Member.239", %"class.blink::Member.241", %"class.blink::Member.243", %"class.blink::Member.9", %"class.blink::Member.9", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.245", i8, i32, %"class.blink::Member.252", %"class.blink::Member.254", i32, %"class.blink::Member.256", %"class.blink::Member.258", %"class.blink::Member.260", %"class.std::__1::unique_ptr.262", i64, %"class.std::__1::unique_ptr.268", i32, i32, %"class.blink::Member.274", %"class.blink::Member.276", %"class.blink::Member.278", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.280", %"class.WTF::Vector.282", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.287", %"class.blink::Member.294", %"class.std::__1::unique_ptr.296", %"class.blink::Member.302", i8, i8, %"class.WTF::String", %"class.blink::Member.304", i8, [7 x i8], %"class.blink::HeapHashMap.306", %"class.blink::HeapObserverSet", %"class.blink::Member.320", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.322", i32, i8, i8, %"class.blink::WeakMember.324", %"class.blink::Member.325" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.1", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.3" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.1" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.3" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.7", %"class.blink::Member.9", %"class.blink::Member.1", %"class.blink::Member.11", %"class.blink::Member.11", %"class.blink::Member.47", %"class.blink::Member.49", %"class.blink::Member.51", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.56", %"class.blink::HeapVector.58" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.7" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.11" = type { %"class.blink::MemberBase.12" }
%"class.blink::MemberBase.12" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.17" }
%"class.WTF::HashMap.17" = type { %"class.WTF::HashTable.18" }
%"class.WTF::HashTable.18" = type <{ %"struct.WTF::KeyValuePair.20"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.20" = type { %"class.WTF::AtomicString", %"class.blink::Member.21" }
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.25", i32, %"class.blink::HeapVector" }
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.53" }
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::HeapHashMap.55"* }
%"class.blink::HeapHashMap.55" = type opaque
%"class.blink::Member.56" = type { %"class.blink::MemberBase.57" }
%"class.blink::MemberBase.57" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.58" = type { %"class.WTF::Vector.61" }
%"class.WTF::Vector.61" = type { %"class.WTF::VectorBuffer.62" }
%"class.WTF::VectorBuffer.62" = type { %"class.WTF::VectorBufferBase.63" }
%"class.WTF::VectorBufferBase.63" = type { %"class.blink::Member.64"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.67" }
%"class.blink::HeapHashMap.67" = type { %"class.WTF::HashMap.70" }
%"class.WTF::HashMap.70" = type { %"class.WTF::HashTable.71" }
%"class.WTF::HashTable.71" = type <{ %"struct.WTF::KeyValuePair.73"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.73" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.74" = type { %"class.WTF::VectorBuffer.75" }
%"class.WTF::VectorBuffer.75" = type { %"class.WTF::VectorBufferBase.76" }
%"class.WTF::VectorBufferBase.76" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.77 }
%class.scoped_refptr.77 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.78" }
%"struct.std::__1::atomic.78" = type { %"struct.std::__1::__atomic_base.79" }
%"struct.std::__1::__atomic_base.79" = type { %"struct.std::__1::__atomic_base.80" }
%"struct.std::__1::__atomic_base.80" = type { %"struct.std::__1::__cxx_atomic_impl.81" }
%"struct.std::__1::__cxx_atomic_impl.81" = type { %"struct.std::__1::__cxx_atomic_base_impl.82" }
%"struct.std::__1::__cxx_atomic_base_impl.82" = type { i32 }
%"class.blink::Member.85" = type { %"class.blink::MemberBase.86" }
%"class.blink::MemberBase.86" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.87" = type { %"class.blink::MemberBase.88" }
%"class.blink::MemberBase.88" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.338", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.379", i32, i8, [3 x i8], %"class.blink::HeapVector.381", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.389", %"class.blink::Member.391", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.400", %"class.blink::Member.406", %"class.blink::Member.408", i8, [7 x i8] }>
%"class.blink::Supplementable.338" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.339" }
%"class.blink::HeapHashMap.339" = type { %"class.WTF::HashMap.342" }
%"class.WTF::HashMap.342" = type { %"class.WTF::HashTable.343" }
%"class.WTF::HashTable.343" = type <{ %"struct.WTF::KeyValuePair.345"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.345" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.354" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.346" }
%"class.blink::HeapObserverSet.346" = type { i32, [4 x i8], %"class.blink::HeapHashSet.347" }
%"class.blink::HeapHashSet.347" = type { %"class.WTF::HashSet.350" }
%"class.WTF::HashSet.350" = type { %"class.WTF::HashTable.351" }
%"class.WTF::HashTable.351" = type <{ %"class.blink::WeakMember.353"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.353" = type opaque
%"class.blink::Supplementable.354" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.355" }
%"class.blink::HeapHashMap.355" = type { %"class.WTF::HashMap.358" }
%"class.WTF::HashMap.358" = type { %"class.WTF::HashTable.359" }
%"class.WTF::HashTable.359" = type <{ %"struct.WTF::KeyValuePair.361"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.361" = type { i8*, %"class.blink::Member.410" }
%"class.blink::Member.410" = type { %"class.blink::MemberBase.411" }
%"class.blink::MemberBase.411" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.412" }
%"class.blink::Member.412" = type { %"class.blink::MemberBase.413" }
%"class.blink::MemberBase.413" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.362, %"class.std::__1::unique_ptr.363", %"class.std::__1::unique_ptr.363", %"class.std::__1::unique_ptr.369", %"class.std::__1::unique_ptr.369", %"class.blink::Member.87", i32, [4 x i8], %"class.WTF::HashSet.375", i32, i32 }
%class.scoped_refptr.362 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.369" = type { %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.375" = type { %"class.WTF::HashTable.376" }
%"class.WTF::HashTable.376" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.379" = type { %"class.blink::MemberBase.380" }
%"class.blink::MemberBase.380" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.381" = type { %"class.WTF::Vector.384" }
%"class.WTF::Vector.384" = type { %"class.WTF::VectorBuffer.385" }
%"class.WTF::VectorBuffer.385" = type { %"class.WTF::VectorBufferBase.386" }
%"class.WTF::VectorBufferBase.386" = type { %"class.blink::Member.387"*, i32, i32 }
%"class.blink::Member.387" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.393", i32, i32 }
%"class.blink::HeapHashMap.393" = type { %"class.WTF::HashMap.396" }
%"class.WTF::HashMap.396" = type { %"class.WTF::HashTable.397" }
%"class.WTF::HashTable.397" = type <{ %"struct.WTF::KeyValuePair.399"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.399" = type opaque
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.406" = type { %"class.blink::MemberBase.407" }
%"class.blink::MemberBase.407" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.89" = type { %"class.blink::MemberBase.90" }
%"class.blink::MemberBase.90" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.91" = type { %"class.blink::MemberBase.92" }
%"class.blink::MemberBase.92" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.93" = type { %"class.blink::MemberBase.94" }
%"class.blink::MemberBase.94" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.95" = type { %"class.blink::MemberBase.96" }
%"class.blink::MemberBase.96" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.104" = type { %"class.blink::MemberBase.105" }
%"class.blink::MemberBase.105" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.106" = type { %"class.blink::MemberBase.107" }
%"class.blink::MemberBase.107" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.64" = type { %"class.blink::MemberBase.65" }
%"class.blink::MemberBase.65" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.108 }
%class.scoped_refptr.108 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.109" = type { %"class.WTF::VectorBuffer.110" }
%"class.WTF::VectorBuffer.110" = type { %"class.WTF::VectorBufferBase.111" }
%"class.WTF::VectorBufferBase.111" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.112 }
%class.scoped_refptr.112 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type opaque
%"class.blink::Member.124" = type { %"class.blink::MemberBase.125" }
%"class.blink::MemberBase.125" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.126" }
%"class.blink::HeapHashMap.126" = type { %"class.WTF::HashMap.129" }
%"class.WTF::HashMap.129" = type { %"class.WTF::HashTable.130" }
%"class.WTF::HashTable.130" = type <{ %"struct.WTF::KeyValuePair.132"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.132" = type opaque
%"class.blink::Member.133" = type { %"class.blink::MemberBase.134" }
%"class.blink::MemberBase.134" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.137" }
%"class.WTF::HashTable.137" = type <{ %"class.blink::WeakMember.139"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.139" = type opaque
%"class.blink::HeapHashSet.140" = type { %"class.WTF::HashSet.143" }
%"class.WTF::HashSet.143" = type { %"class.WTF::HashTable.144" }
%"class.WTF::HashTable.144" = type <{ %"class.blink::WeakMember.146"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.146" = type opaque
%"class.blink::Member.147" = type { %"class.blink::MemberBase.148" }
%"class.blink::MemberBase.148" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.149" = type { %"class.blink::MemberBase.150" }
%"class.blink::MemberBase.150" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.151" = type { %"class.blink::MemberBase.152" }
%"class.blink::MemberBase.152" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.153" = type { %"class.blink::MemberBase.154" }
%"class.blink::MemberBase.154" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.155" = type { %"class.blink::MemberBase.156" }
%"class.blink::MemberBase.156" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.157" = type { %"class.WTF::HashMap.160" }
%"class.WTF::HashMap.160" = type { %"class.WTF::HashTable.161" }
%"class.WTF::HashTable.161" = type <{ %"struct.WTF::KeyValuePair.163"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.163" = type opaque
%"class.WTF::Vector.164" = type { %"class.WTF::VectorBuffer.165" }
%"class.WTF::VectorBuffer.165" = type { %"class.WTF::VectorBufferBase.166" }
%"class.WTF::VectorBufferBase.166" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.169" = type { %"class.blink::MemberBase.170" }
%"class.blink::MemberBase.170" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.171" = type { %"class.blink::MemberBase.172" }
%"class.blink::MemberBase.172" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.28" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.27 }
%class.scoped_refptr.27 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Member.28" = type { %"class.blink::MemberBase.29" }
%"class.blink::MemberBase.29" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.32", %"class.blink::Member.34", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.32" = type { %"class.WTF::SingleThreadedBitField.33" }
%"class.WTF::SingleThreadedBitField.33" = type { i32 }
%"class.blink::Member.34" = type { %"class.blink::MemberBase.35" }
%"class.blink::MemberBase.35" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.36 }
%class.scoped_refptr.36 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.37", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.37" = type { %"class.base::RefCounted.38" }
%"class.base::RefCounted.38" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.173" = type { %"class.blink::MemberBase.174" }
%"class.blink::MemberBase.174" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.175" = type { %"class.WTF::Vector.178" }
%"class.WTF::Vector.178" = type { %"class.WTF::VectorBuffer.179" }
%"class.WTF::VectorBuffer.179" = type { %"class.WTF::VectorBufferBase.180" }
%"class.WTF::VectorBufferBase.180" = type { %"class.blink::Member.181"*, i32, i32 }
%"class.blink::Member.181" = type opaque
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.189" = type { %"class.WTF::HashSet.192" }
%"class.WTF::HashSet.192" = type { %"class.WTF::HashTable.193" }
%"class.WTF::HashTable.193" = type <{ %"class.blink::WeakMember.195"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.195" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.196", i32, [4 x i8] }>
%"class.WTF::Vector.196" = type { %"class.WTF::VectorBuffer.197" }
%"class.WTF::VectorBuffer.197" = type { %"class.WTF::VectorBufferBase.198" }
%"class.WTF::VectorBufferBase.198" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type opaque
%"class.blink::Member.201" = type { %"class.blink::MemberBase.202" }
%"class.blink::MemberBase.202" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.203" = type { %"class.WTF::VectorBuffer.204" }
%"class.WTF::VectorBuffer.204" = type { %"class.WTF::VectorBufferBase.205" }
%"class.WTF::VectorBufferBase.205" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.43" }
%"class.WTF::Vector.43" = type { %"class.WTF::VectorBuffer.44" }
%"class.WTF::VectorBuffer.44" = type { %"class.WTF::VectorBufferBase.45" }
%"class.WTF::VectorBufferBase.45" = type { %"class.blink::Member.25"*, i32, i32 }
%"class.blink::HeapVector.214" = type { %"class.WTF::Vector.217" }
%"class.WTF::Vector.217" = type { %"class.WTF::VectorBuffer.218" }
%"class.WTF::VectorBuffer.218" = type { %"class.WTF::VectorBufferBase.219" }
%"class.WTF::VectorBufferBase.219" = type { %"class.blink::Member.220"*, i32, i32 }
%"class.blink::Member.220" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.9" }
%"class.blink::Member.222" = type { %"class.blink::MemberBase.223" }
%"class.blink::MemberBase.223" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.224" = type { %"class.blink::MemberBase.225" }
%"class.blink::MemberBase.225" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.226" = type { %"class.blink::MemberBase.227" }
%"class.blink::MemberBase.227" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.228" = type { %"class.blink::MemberBase.229" }
%"class.blink::MemberBase.229" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.230" = type { %"class.blink::MemberBase.231" }
%"class.blink::MemberBase.231" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.232" = type { %"class.WTF::HashTable.233" }
%"class.WTF::HashTable.233" = type <{ %"struct.WTF::KeyValuePair.236"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.236" = type opaque
%"class.blink::Member.237" = type { %"class.blink::MemberBase.238" }
%"class.blink::MemberBase.238" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.239" = type { %"class.blink::MemberBase.240" }
%"class.blink::MemberBase.240" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.241" = type { %"class.blink::MemberBase.242" }
%"class.blink::MemberBase.242" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.243" = type { %"class.blink::MemberBase.244" }
%"class.blink::MemberBase.244" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::Member.9" = type { %"class.blink::MemberBase.10" }
%"class.blink::MemberBase.10" = type { %"class.blink::Document"* }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.115, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.115 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.116" }>
%"class.base::RefCountedThreadSafe.116" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.117 }
%class.scoped_refptr.117 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.118", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.118" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.119" }
%"struct.std::__1::atomic.119" = type { %"struct.std::__1::__atomic_base.120" }
%"struct.std::__1::__atomic_base.120" = type { %"struct.std::__1::__atomic_base.121" }
%"struct.std::__1::__atomic_base.121" = type { %"struct.std::__1::__cxx_atomic_impl.122" }
%"struct.std::__1::__cxx_atomic_impl.122" = type { %"struct.std::__1::__cxx_atomic_base_impl.123" }
%"struct.std::__1::__cxx_atomic_base_impl.123" = type { i8 }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.10" }
%"class.blink::HeapHashSet.245" = type { %"class.WTF::HashSet.248" }
%"class.WTF::HashSet.248" = type { %"class.WTF::HashTable.249" }
%"class.WTF::HashTable.249" = type <{ %"class.blink::Member.251"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.251" = type opaque
%"class.blink::Member.252" = type { %"class.blink::MemberBase.253" }
%"class.blink::MemberBase.253" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.254" = type { %"class.blink::MemberBase.255" }
%"class.blink::MemberBase.255" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.256" = type { %"class.blink::MemberBase.257" }
%"class.blink::MemberBase.257" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.258" = type { %"class.blink::MemberBase.259" }
%"class.blink::MemberBase.259" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.260" = type { %"class.blink::MemberBase.261" }
%"class.blink::MemberBase.261" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.274" = type { %"class.blink::MemberBase.275" }
%"class.blink::MemberBase.275" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.276" = type { %"class.blink::MemberBase.277" }
%"class.blink::MemberBase.277" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.278" = type { %"class.blink::MemberBase.279" }
%"class.blink::MemberBase.279" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.280" = type { %"class.blink::MemberBase.281" }
%"class.blink::MemberBase.281" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.282" = type { %"class.WTF::VectorBuffer.283" }
%"class.WTF::VectorBuffer.283" = type { %"class.WTF::VectorBufferBase.284" }
%"class.WTF::VectorBufferBase.284" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.287" = type { %"class.WTF::HashMap.290" }
%"class.WTF::HashMap.290" = type { %"class.WTF::HashTable.291" }
%"class.WTF::HashTable.291" = type <{ %"struct.WTF::KeyValuePair.293"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.293" = type opaque
%"class.blink::Member.294" = type { %"class.blink::MemberBase.295" }
%"class.blink::MemberBase.295" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.302" = type { %"class.blink::MemberBase.303" }
%"class.blink::MemberBase.303" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.304" = type { %"class.blink::MemberBase.305" }
%"class.blink::MemberBase.305" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.306" = type { %"class.WTF::HashMap.309" }
%"class.WTF::HashMap.309" = type { %"class.WTF::HashTable.310" }
%"class.WTF::HashTable.310" = type <{ %"struct.WTF::KeyValuePair.312"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.312" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.313" }
%"class.blink::HeapHashSet.313" = type { %"class.WTF::HashSet.316" }
%"class.WTF::HashSet.316" = type { %"class.WTF::HashTable.317" }
%"class.WTF::HashTable.317" = type <{ %"class.blink::WeakMember.319"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.319" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.9", %"class.blink::HeapHashSet.329", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.336", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.329" = type { %"class.WTF::HashSet.332" }
%"class.WTF::HashSet.332" = type { %"class.WTF::HashTable.333" }
%"class.WTF::HashTable.333" = type <{ %"class.blink::Member.335"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.335" = type opaque
%"class.blink::HeapTaskRunnerTimer.336" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.337", { i64, i64 } }
%"class.blink::WeakMember.337" = type { %"class.blink::MemberBase.323" }
%"class.blink::WeakMember.324" = type { %"class.blink::MemberBase" }
%"class.blink::Member.325" = type { %"class.blink::MemberBase.326" }
%"class.blink::MemberBase.326" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.416" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink15HTMLElementTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink15HTMLElementTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink15HTMLElementTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKPKcRKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink15HTMLElementTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS2_IN5blink15HTMLElementTypeEEEEENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S6_EERKPKcRKS6_EEvRT_OT0_OT1_ = comdat any

@_ZZN5blink17CreateHTMLTypeMapEvE5kTags = internal constant [142 x %struct.anon] [%struct.anon { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0), i32 0 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0), i32 72 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i32 1 }, %struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i32 2 }, %struct.anon { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i32 0, i32 0), i32 3 }, %struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i32 0, i32 0), i32 72 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i32 0, i32 0), i32 52 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i32 0, i32 0), i32 4 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i32 0, i32 0), i32 5 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i32 0, i32 0), i32 6 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i32 0, i32 0), i32 7 }, %struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), i32 60 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i32 0, i32 0), i32 62 }, %struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i32 0, i32 0), i32 62 }, %struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i32 0, i32 0), i32 72 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i32 8 }, %struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i32 0, i32 0), i32 9 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i32 0, i32 0), i32 39 }, %struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i32 0, i32 0), i32 10 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.33, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i32 0, i32 0), i32 11 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i32 0, i32 0), i32 12 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i32 0, i32 0), i32 13 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i32 0, i32 0), i32 14 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i32 0, i32 0), i32 16 }, %struct.anon { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.41, i32 0, i32 0), i32 17 }, %struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i32 0, i32 0), i32 18 }, %struct.anon { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.43, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.44, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i32 0, i32 0), i32 19 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i32 0, i32 0), i32 20 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i32 0, i32 0), i32 21 }, %struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.49, i32 0, i32 0), i32 22 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.50, i32 0, i32 0), i32 24 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.51, i32 0, i32 0), i32 24 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.52, i32 0, i32 0), i32 24 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.53, i32 0, i32 0), i32 24 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i32 0, i32 0), i32 24 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i32 0, i32 0), i32 24 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i32 0, i32 0), i32 23 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.58, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.59, i32 0, i32 0), i32 25 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i32 0, i32 0), i32 26 }, %struct.anon { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.61, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.62, i32 0, i32 0), i32 27 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0), i32 72 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.64, i32 0, i32 0), i32 28 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.65, i32 0, i32 0), i32 29 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i32 0, i32 0), i32 39 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.68, i32 0, i32 0), i32 72 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i32 0, i32 0), i32 30 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.71, i32 0, i32 0), i32 31 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i32 0, i32 0), i32 32 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.73, i32 0, i32 0), i32 33 }, %struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.74, i32 0, i32 0), i32 50 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i32 34 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.78, i32 0, i32 0), i32 35 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.79, i32 0, i32 0), i32 36 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.80, i32 0, i32 0), i32 37 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i32 0, i32 0), i32 38 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.82, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.84, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.86, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.87, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.88, i32 0, i32 0), i32 40 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.89, i32 0, i32 0), i32 41 }, %struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.90, i32 0, i32 0), i32 42 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.91, i32 0, i32 0), i32 43 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.92, i32 0, i32 0), i32 44 }, %struct.anon { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.93, i32 0, i32 0), i32 45 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.94, i32 0, i32 0), i32 46 }, %struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.95, i32 0, i32 0), i32 47 }, %struct.anon { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.96, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.97, i32 0, i32 0), i32 48 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.98, i32 0, i32 0), i32 49 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.99, i32 0, i32 0), i32 50 }, %struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.100, i32 0, i32 0), i32 51 }, %struct.anon { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.101, i32 0, i32 0), i32 52 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.102, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.104, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.105, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.106, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.107, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.108, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.109, i32 0, i32 0), i32 53 }, %struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.110, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.111, i32 0, i32 0), i32 54 }, %struct.anon { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.112, i32 0, i32 0), i32 55 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.113, i32 0, i32 0), i32 56 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.114, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.115, i32 0, i32 0), i32 57 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.116, i32 0, i32 0), i32 58 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.117, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.118, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.119, i32 0, i32 0), i32 59 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.120, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.121, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.122, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.123, i32 0, i32 0), i32 63 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.124, i32 0, i32 0), i32 65 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.125, i32 0, i32 0), i32 61 }, %struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.126, i32 0, i32 0), i32 66 }, %struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.127, i32 0, i32 0), i32 67 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.128, i32 0, i32 0), i32 65 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.129, i32 0, i32 0), i32 61 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.130, i32 0, i32 0), i32 65 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.131, i32 0, i32 0), i32 68 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i32 69 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.133, i32 0, i32 0), i32 64 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.134, i32 0, i32 0), i32 70 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.135, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.136, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i32 0, i32 0), i32 71 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.138, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.139, i32 0, i32 0), i32 73 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.140, i32 0, i32 0), i32 15 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.141, i32 0, i32 0), i32 50 }], align 16
@.str = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"abbr\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"acronym\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"address\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"applet\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"area\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"article\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"aside\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"audio\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"base\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"basefont\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"bdi\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"bdo\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"bgsound\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"big\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"blockquote\00", align 1
@.str.17 = private unnamed_addr constant [5 x i8] c"body\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"br\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"button\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"canvas\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"caption\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"center\00", align 1
@.str.23 = private unnamed_addr constant [5 x i8] c"cite\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c"code\00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c"col\00", align 1
@.str.26 = private unnamed_addr constant [9 x i8] c"colgroup\00", align 1
@.str.27 = private unnamed_addr constant [8 x i8] c"command\00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.29 = private unnamed_addr constant [9 x i8] c"datalist\00", align 1
@.str.30 = private unnamed_addr constant [3 x i8] c"dd\00", align 1
@.str.31 = private unnamed_addr constant [4 x i8] c"del\00", align 1
@.str.32 = private unnamed_addr constant [8 x i8] c"details\00", align 1
@.str.33 = private unnamed_addr constant [4 x i8] c"dfn\00", align 1
@.str.34 = private unnamed_addr constant [7 x i8] c"dialog\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c"dir\00", align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"div\00", align 1
@.str.37 = private unnamed_addr constant [3 x i8] c"dl\00", align 1
@.str.38 = private unnamed_addr constant [3 x i8] c"dt\00", align 1
@.str.39 = private unnamed_addr constant [3 x i8] c"em\00", align 1
@.str.40 = private unnamed_addr constant [6 x i8] c"embed\00", align 1
@.str.41 = private unnamed_addr constant [12 x i8] c"fencedframe\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"fieldset\00", align 1
@.str.43 = private unnamed_addr constant [11 x i8] c"figcaption\00", align 1
@.str.44 = private unnamed_addr constant [7 x i8] c"figure\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"font\00", align 1
@.str.46 = private unnamed_addr constant [7 x i8] c"footer\00", align 1
@.str.47 = private unnamed_addr constant [5 x i8] c"form\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"frame\00", align 1
@.str.49 = private unnamed_addr constant [9 x i8] c"frameset\00", align 1
@.str.50 = private unnamed_addr constant [3 x i8] c"h1\00", align 1
@.str.51 = private unnamed_addr constant [3 x i8] c"h2\00", align 1
@.str.52 = private unnamed_addr constant [3 x i8] c"h3\00", align 1
@.str.53 = private unnamed_addr constant [3 x i8] c"h4\00", align 1
@.str.54 = private unnamed_addr constant [3 x i8] c"h5\00", align 1
@.str.55 = private unnamed_addr constant [3 x i8] c"h6\00", align 1
@.str.56 = private unnamed_addr constant [5 x i8] c"head\00", align 1
@.str.57 = private unnamed_addr constant [7 x i8] c"header\00", align 1
@.str.58 = private unnamed_addr constant [7 x i8] c"hgroup\00", align 1
@.str.59 = private unnamed_addr constant [3 x i8] c"hr\00", align 1
@.str.60 = private unnamed_addr constant [5 x i8] c"html\00", align 1
@.str.61 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@.str.62 = private unnamed_addr constant [7 x i8] c"iframe\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c"image\00", align 1
@.str.64 = private unnamed_addr constant [4 x i8] c"img\00", align 1
@.str.65 = private unnamed_addr constant [6 x i8] c"input\00", align 1
@.str.66 = private unnamed_addr constant [4 x i8] c"ins\00", align 1
@.str.67 = private unnamed_addr constant [4 x i8] c"kbd\00", align 1
@.str.68 = private unnamed_addr constant [7 x i8] c"keygen\00", align 1
@.str.69 = private unnamed_addr constant [6 x i8] c"label\00", align 1
@.str.70 = private unnamed_addr constant [6 x i8] c"layer\00", align 1
@.str.71 = private unnamed_addr constant [7 x i8] c"legend\00", align 1
@.str.72 = private unnamed_addr constant [3 x i8] c"li\00", align 1
@.str.73 = private unnamed_addr constant [5 x i8] c"link\00", align 1
@.str.74 = private unnamed_addr constant [8 x i8] c"listing\00", align 1
@.str.75 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.76 = private unnamed_addr constant [4 x i8] c"map\00", align 1
@.str.77 = private unnamed_addr constant [5 x i8] c"mark\00", align 1
@.str.78 = private unnamed_addr constant [8 x i8] c"marquee\00", align 1
@.str.79 = private unnamed_addr constant [5 x i8] c"menu\00", align 1
@.str.80 = private unnamed_addr constant [5 x i8] c"meta\00", align 1
@.str.81 = private unnamed_addr constant [6 x i8] c"meter\00", align 1
@.str.82 = private unnamed_addr constant [4 x i8] c"nav\00", align 1
@.str.83 = private unnamed_addr constant [5 x i8] c"nobr\00", align 1
@.str.84 = private unnamed_addr constant [8 x i8] c"noembed\00", align 1
@.str.85 = private unnamed_addr constant [9 x i8] c"noframes\00", align 1
@.str.86 = private unnamed_addr constant [8 x i8] c"nolayer\00", align 1
@.str.87 = private unnamed_addr constant [9 x i8] c"noscript\00", align 1
@.str.88 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@.str.89 = private unnamed_addr constant [3 x i8] c"ol\00", align 1
@.str.90 = private unnamed_addr constant [9 x i8] c"optgroup\00", align 1
@.str.91 = private unnamed_addr constant [7 x i8] c"option\00", align 1
@.str.92 = private unnamed_addr constant [7 x i8] c"output\00", align 1
@.str.93 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@.str.94 = private unnamed_addr constant [6 x i8] c"param\00", align 1
@.str.95 = private unnamed_addr constant [8 x i8] c"picture\00", align 1
@.str.96 = private unnamed_addr constant [10 x i8] c"plaintext\00", align 1
@.str.97 = private unnamed_addr constant [6 x i8] c"popup\00", align 1
@.str.98 = private unnamed_addr constant [7 x i8] c"portal\00", align 1
@.str.99 = private unnamed_addr constant [4 x i8] c"pre\00", align 1
@.str.100 = private unnamed_addr constant [9 x i8] c"progress\00", align 1
@.str.101 = private unnamed_addr constant [2 x i8] c"q\00", align 1
@.str.102 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.103 = private unnamed_addr constant [3 x i8] c"rp\00", align 1
@.str.104 = private unnamed_addr constant [3 x i8] c"rt\00", align 1
@.str.105 = private unnamed_addr constant [4 x i8] c"rtc\00", align 1
@.str.106 = private unnamed_addr constant [5 x i8] c"ruby\00", align 1
@.str.107 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.108 = private unnamed_addr constant [5 x i8] c"samp\00", align 1
@.str.109 = private unnamed_addr constant [7 x i8] c"script\00", align 1
@.str.110 = private unnamed_addr constant [8 x i8] c"section\00", align 1
@.str.111 = private unnamed_addr constant [7 x i8] c"select\00", align 1
@.str.112 = private unnamed_addr constant [11 x i8] c"selectmenu\00", align 1
@.str.113 = private unnamed_addr constant [5 x i8] c"slot\00", align 1
@.str.114 = private unnamed_addr constant [6 x i8] c"small\00", align 1
@.str.115 = private unnamed_addr constant [7 x i8] c"source\00", align 1
@.str.116 = private unnamed_addr constant [5 x i8] c"span\00", align 1
@.str.117 = private unnamed_addr constant [7 x i8] c"strike\00", align 1
@.str.118 = private unnamed_addr constant [7 x i8] c"strong\00", align 1
@.str.119 = private unnamed_addr constant [6 x i8] c"style\00", align 1
@.str.120 = private unnamed_addr constant [4 x i8] c"sub\00", align 1
@.str.121 = private unnamed_addr constant [8 x i8] c"summary\00", align 1
@.str.122 = private unnamed_addr constant [4 x i8] c"sup\00", align 1
@.str.123 = private unnamed_addr constant [6 x i8] c"table\00", align 1
@.str.124 = private unnamed_addr constant [6 x i8] c"tbody\00", align 1
@.str.125 = private unnamed_addr constant [3 x i8] c"td\00", align 1
@.str.126 = private unnamed_addr constant [9 x i8] c"template\00", align 1
@.str.127 = private unnamed_addr constant [9 x i8] c"textarea\00", align 1
@.str.128 = private unnamed_addr constant [6 x i8] c"tfoot\00", align 1
@.str.129 = private unnamed_addr constant [3 x i8] c"th\00", align 1
@.str.130 = private unnamed_addr constant [6 x i8] c"thead\00", align 1
@.str.131 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str.132 = private unnamed_addr constant [6 x i8] c"title\00", align 1
@.str.133 = private unnamed_addr constant [3 x i8] c"tr\00", align 1
@.str.134 = private unnamed_addr constant [6 x i8] c"track\00", align 1
@.str.135 = private unnamed_addr constant [3 x i8] c"tt\00", align 1
@.str.136 = private unnamed_addr constant [2 x i8] c"u\00", align 1
@.str.137 = private unnamed_addr constant [3 x i8] c"ul\00", align 1
@.str.138 = private unnamed_addr constant [4 x i8] c"var\00", align 1
@.str.139 = private unnamed_addr constant [6 x i8] c"video\00", align 1
@.str.140 = private unnamed_addr constant [4 x i8] c"wbr\00", align 1
@.str.141 = private unnamed_addr constant [4 x i8] c"xmp\00", align 1
@_ZZN5blinkL14GetHTMLTypeMapEvE15s_html_type_map = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blinkL14GetHTMLTypeMapEvE15s_html_type_map = internal global i64 0, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase30is_html_popup_element_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase36is_html_select_menu_element_enabled_E = external local_unnamed_addr global i8, align 1
@.str.142 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.143 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringEN5blink15HTMLElementTypeEEEEEPKcv = private unnamed_addr constant [108 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::AtomicString, blink::HTMLElementType>]\00", align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.144 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CreateHTMLTypeMapEv(%"class.WTF::HashMap"* noalias sret) local_unnamed_addr #0 {
  %2 = bitcast %"class.WTF::HashMap"* %0 to i8*
  %3 = bitcast %"class.WTF::HashMap"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 24, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 20, i1 false) #8
  %4 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0
  tail call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink15HTMLElementTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* %4, i32 142) #8
  br label %5

5:                                                ; preds = %1, %5
  %6 = phi %struct.anon* [ getelementptr inbounds ([142 x %struct.anon], [142 x %struct.anon]* @_ZZN5blink17CreateHTMLTypeMapEvE5kTags, i64 0, i64 0), %1 ], [ %10, %5 ]
  %7 = getelementptr inbounds %struct.anon, %struct.anon* %6, i64 0, i32 0
  %8 = getelementptr inbounds %struct.anon, %struct.anon* %6, i64 0, i32 1
  %9 = tail call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink15HTMLElementTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKPKcRKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable"* %4, i8** dereferenceable(8) %7, i32* dereferenceable(4) %8) #8
  %10 = getelementptr inbounds %struct.anon, %struct.anon* %6, i64 1
  %11 = icmp eq %struct.anon* %10, getelementptr inbounds ([142 x %struct.anon], [142 x %struct.anon]* @_ZZN5blink17CreateHTMLTypeMapEvE5kTags, i64 1, i64 0)
  br i1 %11, label %12, label %5

12:                                               ; preds = %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink21htmlElementTypeForTagERKN3WTF12AtomicStringEPKNS_8DocumentE(%"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.blink::Document"*) local_unnamed_addr #0 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL14GetHTMLTypeMapEvE15s_html_type_map to i8*) acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %25, !prof !2

13:                                               ; preds = %2
  %14 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL14GetHTMLTypeMapEvE15s_html_type_map) #8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %25, label %16

16:                                               ; preds = %13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL14GetHTMLTypeMapEvE15s_html_type_map, i64 0, i32 0, i32 0, i64 0), i8 -86, i64 24, i1 false) #8, !alias.scope !3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL14GetHTMLTypeMapEvE15s_html_type_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #8, !alias.scope !3
  tail call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink15HTMLElementTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL14GetHTMLTypeMapEvE15s_html_type_map to %"class.WTF::HashTable"*), i32 142) #8
  br label %17

17:                                               ; preds = %17, %16
  %18 = phi %struct.anon* [ getelementptr inbounds ([142 x %struct.anon], [142 x %struct.anon]* @_ZZN5blink17CreateHTMLTypeMapEvE5kTags, i64 0, i64 0), %16 ], [ %22, %17 ]
  %19 = getelementptr inbounds %struct.anon, %struct.anon* %18, i64 0, i32 0
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %18, i64 0, i32 1
  %21 = tail call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink15HTMLElementTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKPKcRKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL14GetHTMLTypeMapEvE15s_html_type_map to %"class.WTF::HashTable"*), i8** dereferenceable(8) %19, i32* dereferenceable(4) %20) #8
  %22 = getelementptr inbounds %struct.anon, %struct.anon* %18, i64 1
  %23 = icmp eq %struct.anon* %22, getelementptr inbounds ([142 x %struct.anon], [142 x %struct.anon]* @_ZZN5blink17CreateHTMLTypeMapEvE5kTags, i64 1, i64 0)
  br i1 %23, label %24, label %17

24:                                               ; preds = %17
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL14GetHTMLTypeMapEvE15s_html_type_map) #8
  br label %25

25:                                               ; preds = %2, %13, %24
  %26 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL14GetHTMLTypeMapEvE15s_html_type_map to %"struct.WTF::KeyValuePair"**), align 8
  %27 = icmp eq %"struct.WTF::KeyValuePair"* %26, null
  %28 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL14GetHTMLTypeMapEvE15s_html_type_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  br i1 %27, label %80, label %29

29:                                               ; preds = %25
  %30 = add i32 %28, -1
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = lshr i32 %35, 8
  %37 = and i32 %36, %30
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %80, label %43

43:                                               ; preds = %29
  %44 = xor i32 %36, -1
  %45 = lshr i32 %35, 31
  %46 = add nsw i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %67, %43
  %58 = phi %"struct.WTF::KeyValuePair"* [ %39, %43 ], [ %72, %67 ]
  %59 = phi i64 [ %38, %43 ], [ %71, %67 ]
  %60 = phi i64 [ 0, %43 ], [ %69, %67 ]
  %61 = bitcast %"struct.WTF::KeyValuePair"* %58 to i8**
  %62 = load i8*, i8** %61, align 8
  %63 = icmp ne i8* %62, inttoptr (i64 -1 to i8*)
  %64 = bitcast i8* %62 to %"class.WTF::StringImpl"*
  %65 = icmp eq %"class.WTF::StringImpl"* %33, %64
  %66 = and i1 %63, %65
  br i1 %66, label %76, label %67

67:                                               ; preds = %57
  %68 = icmp eq i64 %60, 0
  %69 = select i1 %68, i64 %56, i64 %60
  %70 = add i64 %69, %59
  %71 = and i64 %70, %31
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 0, i32 0, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %80, label %57

76:                                               ; preds = %57
  %77 = icmp eq %"struct.WTF::KeyValuePair"* %58, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %76
  %79 = zext i32 %28 to i64
  br label %83

80:                                               ; preds = %67, %76, %29, %25
  %81 = zext i32 %28 to i64
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %81
  br label %83

83:                                               ; preds = %78, %80
  %84 = phi i64 [ %79, %78 ], [ %81, %80 ]
  %85 = phi %"struct.WTF::KeyValuePair"* [ %58, %78 ], [ %82, %80 ]
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %84
  %87 = icmp eq %"struct.WTF::KeyValuePair"* %85, %86
  br i1 %87, label %213, label %88

88:                                               ; preds = %83
  %89 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #8
  %90 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %93, label %97

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %94, align 8
  %95 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %96 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %95, i64* %96, align 8
  br label %104

97:                                               ; preds = %88
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %91, %"class.WTF::StringImpl"** %98, align 8
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 1
  %102 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %103 = bitcast i8** %102 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %101, %"class.WTF::StringImpl"** %103, align 8
  br label %104

104:                                              ; preds = %97, %93
  %105 = phi i32 [ %100, %97 ], [ 0, %93 ]
  %106 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %105, i32* %106, align 8
  %107 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #8
  %108 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %109 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.41, i64 0, i64 0), i8** %110, align 8
  %111 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 11, i32* %111, align 8
  %112 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %9, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #8
  br i1 %112, label %113, label %119

113:                                              ; preds = %104
  %114 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %1) #8
  %115 = icmp eq %"class.blink::ExecutionContext"* %114, null
  %116 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %114, i64 0, i32 4
  %117 = select i1 %115, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %116
  %118 = call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase19FencedFramesEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %117) #8
  br i1 %118, label %119, label %213

119:                                              ; preds = %113, %104
  %120 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #8
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %123, label %127

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %124, align 8
  %125 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %126 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %125, i64* %126, align 8
  br label %135

127:                                              ; preds = %119
  %128 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %121, %"class.WTF::StringImpl"** %128, align 8
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 1
  %132 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %133 = bitcast i8** %132 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %131, %"class.WTF::StringImpl"** %133, align 8
  %134 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %135

135:                                              ; preds = %127, %123
  %136 = phi i64 [ %134, %127 ], [ %125, %123 ]
  %137 = phi i32 [ %130, %127 ], [ 0, %123 ]
  %138 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %137, i32* %138, align 8
  %139 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %139) #8
  %140 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %136, i64* %140, align 8
  %141 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.97, i64 0, i64 0), i8** %141, align 8
  %142 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 5, i32* %142, align 8
  %143 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %139) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #8
  br i1 %143, label %144, label %150

144:                                              ; preds = %135
  %145 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %1) #8
  %146 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_html_select_menu_element_enabled_E, align 1, !range !6
  %147 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_html_popup_element_enabled_E, align 1
  %148 = or i8 %147, %146
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %213, label %150

150:                                              ; preds = %144, %135
  %151 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %151) #8
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %154, label %158

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %155, align 8
  %156 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %157 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %156, i64* %157, align 8
  br label %166

158:                                              ; preds = %150
  %159 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %152, %"class.WTF::StringImpl"** %159, align 8
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 1
  %161 = load i32, i32* %160, align 4
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 1
  %163 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %164 = bitcast i8** %163 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %162, %"class.WTF::StringImpl"** %164, align 8
  %165 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %166

166:                                              ; preds = %158, %154
  %167 = phi i64 [ %165, %158 ], [ %156, %154 ]
  %168 = phi i32 [ %161, %158 ], [ 0, %154 ]
  %169 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %168, i32* %169, align 8
  %170 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %170) #8
  %171 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %167, i64* %171, align 8
  %172 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.98, i64 0, i64 0), i8** %172, align 8
  %173 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 6, i32* %173, align 8
  %174 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %170) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %151) #8
  br i1 %174, label %175, label %181

175:                                              ; preds = %166
  %176 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %1) #8
  %177 = icmp eq %"class.blink::ExecutionContext"* %176, null
  %178 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %176, i64 0, i32 4
  %179 = select i1 %177, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %178
  %180 = call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase14PortalsEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %179) #8
  br i1 %180, label %181, label %213

181:                                              ; preds = %175, %166
  %182 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %182) #8
  %183 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %184 = icmp eq %"class.WTF::StringImpl"* %183, null
  br i1 %184, label %185, label %189

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %186, align 8
  %187 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %188 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %187, i64* %188, align 8
  br label %197

189:                                              ; preds = %181
  %190 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %183, %"class.WTF::StringImpl"** %190, align 8
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 1
  %192 = load i32, i32* %191, align 4
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 1
  %194 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %195 = bitcast i8** %194 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %193, %"class.WTF::StringImpl"** %195, align 8
  %196 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %197

197:                                              ; preds = %189, %185
  %198 = phi i64 [ %196, %189 ], [ %187, %185 ]
  %199 = phi i32 [ %192, %189 ], [ 0, %185 ]
  %200 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %199, i32* %200, align 8
  %201 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %201) #8
  %202 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %198, i64* %202, align 8
  %203 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.112, i64 0, i64 0), i8** %203, align 8
  %204 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 10, i32* %204, align 8
  %205 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %201) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %182) #8
  br i1 %205, label %206, label %210

206:                                              ; preds = %197
  %207 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %1) #8
  %208 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_html_select_menu_element_enabled_E, align 1, !range !6
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %213, label %210

210:                                              ; preds = %206, %197
  %211 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %85, i64 0, i32 1
  %212 = load i32, i32* %211, align 8
  br label %213

213:                                              ; preds = %144, %206, %175, %113, %83, %210
  %214 = phi i32 [ %212, %210 ], [ 72, %83 ], [ 72, %113 ], [ 72, %144 ], [ 72, %175 ], [ 72, %206 ]
  ret i32 %214
}

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase19FencedFramesEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #2

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase14PortalsEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21IsKnownBuiltinTagNameERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL14GetHTMLTypeMapEvE15s_html_type_map to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %16, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL14GetHTMLTypeMapEvE15s_html_type_map) #8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL14GetHTMLTypeMapEvE15s_html_type_map, i64 0, i32 0, i32 0, i64 0), i8 -86, i64 24, i1 false) #8, !alias.scope !7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL14GetHTMLTypeMapEvE15s_html_type_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #8, !alias.scope !7
  tail call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink15HTMLElementTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL14GetHTMLTypeMapEvE15s_html_type_map to %"class.WTF::HashTable"*), i32 142) #8
  br label %8

8:                                                ; preds = %8, %7
  %9 = phi %struct.anon* [ getelementptr inbounds ([142 x %struct.anon], [142 x %struct.anon]* @_ZZN5blink17CreateHTMLTypeMapEvE5kTags, i64 0, i64 0), %7 ], [ %13, %8 ]
  %10 = getelementptr inbounds %struct.anon, %struct.anon* %9, i64 0, i32 0
  %11 = getelementptr inbounds %struct.anon, %struct.anon* %9, i64 0, i32 1
  %12 = tail call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink15HTMLElementTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKPKcRKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL14GetHTMLTypeMapEvE15s_html_type_map to %"class.WTF::HashTable"*), i8** dereferenceable(8) %10, i32* dereferenceable(4) %11) #8
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %9, i64 1
  %14 = icmp eq %struct.anon* %13, getelementptr inbounds ([142 x %struct.anon], [142 x %struct.anon]* @_ZZN5blink17CreateHTMLTypeMapEvE5kTags, i64 1, i64 0)
  br i1 %14, label %15, label %8

15:                                               ; preds = %8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL14GetHTMLTypeMapEvE15s_html_type_map) #8
  br label %16

16:                                               ; preds = %1, %4, %15
  %17 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL14GetHTMLTypeMapEvE15s_html_type_map to %"struct.WTF::KeyValuePair"**), align 8
  %18 = icmp eq %"struct.WTF::KeyValuePair"* %17, null
  br i1 %18, label %67, label %19

19:                                               ; preds = %16
  %20 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL14GetHTMLTypeMapEvE15s_html_type_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %21 = add i32 %20, -1
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = lshr i32 %26, 8
  %28 = and i32 %27, %21
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 %29
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %67, label %34

34:                                               ; preds = %19
  %35 = xor i32 %27, -1
  %36 = lshr i32 %26, 31
  %37 = add nsw i32 %36, %35
  %38 = shl i32 %37, 12
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 7
  %41 = xor i32 %40, %39
  %42 = shl i32 %41, 2
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 20
  %45 = xor i32 %44, %43
  %46 = or i32 %45, 1
  %47 = zext i32 %46 to i64
  br label %48

48:                                               ; preds = %58, %34
  %49 = phi %"struct.WTF::KeyValuePair"* [ %30, %34 ], [ %63, %58 ]
  %50 = phi i64 [ %29, %34 ], [ %62, %58 ]
  %51 = phi i64 [ 0, %34 ], [ %60, %58 ]
  %52 = bitcast %"struct.WTF::KeyValuePair"* %49 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp ne i8* %53, inttoptr (i64 -1 to i8*)
  %55 = bitcast i8* %53 to %"class.WTF::StringImpl"*
  %56 = icmp eq %"class.WTF::StringImpl"* %24, %55
  %57 = and i1 %54, %56
  br i1 %57, label %67, label %58

58:                                               ; preds = %48
  %59 = icmp eq i64 %51, 0
  %60 = select i1 %59, i64 %47, i64 %51
  %61 = add i64 %60, %50
  %62 = and i64 %61, %22
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %67, label %48

67:                                               ; preds = %48, %58, %16, %19
  %68 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ null, %19 ], [ null, %58 ], [ %49, %48 ]
  %69 = icmp ne %"struct.WTF::KeyValuePair"* %68, null
  ret i1 %69
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #3

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink15HTMLElementTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %63

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.142, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.143, i64 0, i64 0)) #8
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 4
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringEN5blink15HTMLElementTypeEEEEEPKcv, i64 0, i64 0)) #8
  %30 = bitcast i8* %29 to %"struct.WTF::KeyValuePair"*
  %31 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %32 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %31, i64 0, i32 0, i32 0, i32 0
  br label %33

33:                                               ; preds = %55, %26
  %34 = phi i64 [ 0, %26 ], [ %59, %55 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %34
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #8
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !10

52:                                               ; preds = %43
  call void @llvm.trap() #8
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %53, %38, %33
  %56 = ptrtoint %"class.WTF::StringImpl"* %36 to i64
  %57 = bitcast %"struct.WTF::KeyValuePair"* %35 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %34, i32 1
  store i32 -128, i32* %58, align 8
  %59 = add nuw nsw i64 %34, 1
  %60 = icmp eq i64 %59, %27
  br i1 %60, label %61, label %33

61:                                               ; preds = %55
  %62 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink15HTMLElementTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %30, i32 %17, %"struct.WTF::KeyValuePair"* null) #8
  br label %63

63:                                               ; preds = %61, %16
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink15HTMLElementTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %16 to i64
  br label %61

18:                                               ; preds = %160
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %161, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair"* [ null, %10 ], [ %164, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %162, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %57, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %55, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %52, %29
  %32 = phi i64 [ 0, %29 ], [ %53, %52 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %32
  %34 = bitcast %"struct.WTF::KeyValuePair"* %33 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast i8* %35 to %"class.WTF::StringImpl"*
  %37 = ptrtoint i8* %35 to i64
  switch i64 %37, label %38 [
    i64 -1, label %52
    i64 0, label %52
  ]

38:                                               ; preds = %31
  %39 = getelementptr inbounds i8, i8* %35, i64 8
  %40 = bitcast i8* %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = bitcast i8* %35 to i32*
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %38
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %38
  %49 = phi i32 [ %47, %46 ], [ %45, %38 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #8
  br label %52

52:                                               ; preds = %51, %48, %31, %31
  %53 = add nuw nsw i64 %32, 1
  %54 = icmp eq i64 %53, %30
  br i1 %54, label %55, label %31

55:                                               ; preds = %52, %27
  %56 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %56) #8
  br label %57

57:                                               ; preds = %20, %55
  %58 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, -2147483648
  store i32 %60, i32* %58, align 8
  ret %"struct.WTF::KeyValuePair"* %23

61:                                               ; preds = %13, %160
  %62 = phi i64 [ %17, %13 ], [ %161, %160 ]
  %63 = phi i32 [ %7, %13 ], [ %162, %160 ]
  %64 = phi %"struct.WTF::KeyValuePair"* [ %16, %13 ], [ %163, %160 ]
  %65 = phi %"struct.WTF::KeyValuePair"* [ null, %13 ], [ %164, %160 ]
  %66 = phi i32 [ 0, %13 ], [ %165, %160 ]
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 %67
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = bitcast %"struct.WTF::KeyValuePair"* %68 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = inttoptr i64 %71 to %"class.WTF::StringImpl"*
  switch i64 %71, label %73 [
    i64 -1, label %160
    i64 0, label %160
  ]

73:                                               ; preds = %61
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = lshr i32 %75, 8
  %77 = and i32 %76, %14
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %78
  %80 = ptrtoint %"struct.WTF::KeyValuePair"* %79 to i64
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %100, label %84

84:                                               ; preds = %73
  %85 = xor i32 %76, -1
  %86 = lshr i32 %75, 31
  %87 = add nsw i32 %86, %85
  %88 = shl i32 %87, 12
  %89 = xor i32 %88, %87
  %90 = lshr i32 %89, 7
  %91 = xor i32 %90, %89
  %92 = shl i32 %91, 2
  %93 = xor i32 %92, %91
  %94 = lshr i32 %93, 20
  %95 = xor i32 %94, %93
  %96 = or i32 %95, 1
  %97 = zext i32 %96 to i64
  br label %106

98:                                               ; preds = %118
  %99 = ptrtoint %"struct.WTF::KeyValuePair"* %124 to i64
  br label %100

100:                                              ; preds = %98, %73
  %101 = phi i64 [ %80, %73 ], [ %99, %98 ]
  %102 = phi %"struct.WTF::KeyValuePair"* [ null, %73 ], [ %119, %98 ]
  %103 = icmp eq %"struct.WTF::KeyValuePair"* %102, null
  %104 = ptrtoint %"struct.WTF::KeyValuePair"* %102 to i64
  %105 = select i1 %103, i64 %101, i64 %104
  br label %129

106:                                              ; preds = %118, %84
  %107 = phi %"struct.WTF::KeyValuePair"* [ null, %84 ], [ %119, %118 ]
  %108 = phi i64 [ %80, %84 ], [ %125, %118 ]
  %109 = phi %"struct.WTF::KeyValuePair"* [ %79, %84 ], [ %124, %118 ]
  %110 = phi i64 [ %78, %84 ], [ %123, %118 ]
  %111 = phi i64 [ 0, %84 ], [ %121, %118 ]
  %112 = bitcast %"struct.WTF::KeyValuePair"* %109 to i8**
  %113 = load i8*, i8** %112, align 8
  %114 = icmp eq i8* %113, inttoptr (i64 -1 to i8*)
  br i1 %114, label %118, label %115

115:                                              ; preds = %106
  %116 = bitcast i8* %113 to %"class.WTF::StringImpl"*
  %117 = icmp eq %"class.WTF::StringImpl"* %72, %116
  br i1 %117, label %129, label %118

118:                                              ; preds = %115, %106
  %119 = phi %"struct.WTF::KeyValuePair"* [ %107, %115 ], [ %109, %106 ]
  %120 = icmp eq i64 %111, 0
  %121 = select i1 %120, i64 %97, i64 %111
  %122 = add i64 %121, %110
  %123 = and i64 %122, %15
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %123
  %125 = ptrtoint %"struct.WTF::KeyValuePair"* %124 to i64
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %124, i64 0, i32 0, i32 0, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %98, label %106

129:                                              ; preds = %115, %100
  %130 = phi i64 [ %105, %100 ], [ %108, %115 ]
  %131 = inttoptr i64 %130 to %"struct.WTF::KeyValuePair"*
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #8
  br label %148

148:                                              ; preds = %129, %144, %147
  %149 = load i64, i64* %70, align 8
  %150 = inttoptr i64 %130 to i64*
  store i64 %149, i64* %150, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %69, align 8
  %151 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %131, i64 0, i32 1
  %152 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 %67, i32 1
  %153 = load i32, i32* %152, align 8
  store i32 %153, i32* %151, align 8
  %154 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %155 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %154, i64 %67
  %156 = icmp eq %"struct.WTF::KeyValuePair"* %155, %3
  %157 = select i1 %156, %"struct.WTF::KeyValuePair"* %131, %"struct.WTF::KeyValuePair"* %65
  %158 = load i32, i32* %6, align 8
  %159 = ptrtoint %"struct.WTF::KeyValuePair"* %154 to i64
  br label %160

160:                                              ; preds = %61, %61, %148
  %161 = phi i64 [ %62, %61 ], [ %159, %148 ], [ %62, %61 ]
  %162 = phi i32 [ %63, %61 ], [ %158, %148 ], [ %63, %61 ]
  %163 = phi %"struct.WTF::KeyValuePair"* [ %64, %61 ], [ %154, %148 ], [ %64, %61 ]
  %164 = phi %"struct.WTF::KeyValuePair"* [ %65, %61 ], [ %157, %148 ], [ %65, %61 ]
  %165 = add i32 %66, 1
  %166 = icmp eq i32 %165, %162
  br i1 %166, label %18, label %61
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink15HTMLElementTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKPKcRKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable"*, i8** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink15HTMLElementTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %11 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"struct.WTF::KeyValuePair"* [ %7, %3 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  %19 = load i8*, i8** %1, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %12
  %22 = tail call i64 @strlen(i8* nonnull %19) #9
  br label %23

23:                                               ; preds = %21, %12
  %24 = phi i64 [ %22, %21 ], [ 0, %12 ]
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %5, i8* %19, i64 %24) #8
  %25 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = lshr i32 %28, 8
  %30 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %30, label %43, label %31

31:                                               ; preds = %23
  %32 = load atomic i32, i32* %27 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %31
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %31
  %40 = phi i32 [ %38, %37 ], [ %36, %31 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #8
  br label %43

43:                                               ; preds = %23, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  %44 = and i32 %29, %16
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %45
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %46, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %144, label %50

50:                                               ; preds = %43
  %51 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  %52 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %53 = xor i32 %29, -1
  %54 = lshr i32 %28, 31
  %55 = add nsw i32 %54, %53
  %56 = shl i32 %55, 12
  %57 = xor i32 %56, %55
  %58 = lshr i32 %57, 7
  %59 = xor i32 %58, %57
  %60 = shl i32 %59, 2
  %61 = xor i32 %60, %59
  %62 = lshr i32 %61, 20
  %63 = xor i32 %62, %61
  %64 = or i32 %63, 1
  %65 = zext i32 %64 to i64
  br label %66

66:                                               ; preds = %50, %100
  %67 = phi %"struct.WTF::KeyValuePair"* [ %46, %50 ], [ %106, %100 ]
  %68 = phi %"struct.WTF::KeyValuePair"* [ null, %50 ], [ %101, %100 ]
  %69 = phi i64 [ %45, %50 ], [ %105, %100 ]
  %70 = phi i64 [ 0, %50 ], [ %103, %100 ]
  %71 = bitcast %"struct.WTF::KeyValuePair"* %67 to i8**
  %72 = load i8*, i8** %71, align 8
  %73 = icmp eq i8* %72, inttoptr (i64 -1 to i8*)
  br i1 %73, label %100, label %74

74:                                               ; preds = %66
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #8
  %75 = load i8*, i8** %1, align 8
  %76 = icmp eq i8* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = call i64 @strlen(i8* nonnull %75) #9
  br label %79

79:                                               ; preds = %77, %74
  %80 = phi i64 [ %78, %77 ], [ 0, %74 ]
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %4, i8* %75, i64 %80) #8
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %82, %83
  %85 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %83) #8
  br label %99

99:                                               ; preds = %79, %95, %98
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #8
  br i1 %84, label %157, label %100

100:                                              ; preds = %66, %99
  %101 = phi %"struct.WTF::KeyValuePair"* [ %68, %99 ], [ %67, %66 ]
  %102 = icmp eq i64 %70, 0
  %103 = select i1 %102, i64 %65, i64 %70
  %104 = add i64 %103, %69
  %105 = and i64 %104, %17
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %105
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %106, i64 0, i32 0, i32 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %110, label %66

110:                                              ; preds = %100
  %111 = icmp eq %"struct.WTF::KeyValuePair"* %101, null
  br i1 %111, label %144, label %112

112:                                              ; preds = %110
  %113 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %114 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %134, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %134

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = zext i32 %124 to i33
  %126 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %125, i33 1) #8
  %127 = extractvalue { i33, i1 } %126, 1
  %128 = extractvalue { i33, i1 } %126, 0
  %129 = icmp slt i33 %128, 0
  %130 = or i1 %127, %129
  br i1 %130, label %131, label %132, !prof !10

131:                                              ; preds = %122
  call void @llvm.trap() #8
  unreachable

132:                                              ; preds = %122
  %133 = trunc i33 %128 to i32
  store i32 %133, i32* %123, align 4
  br label %134

134:                                              ; preds = %112, %117, %132
  %135 = ptrtoint %"class.WTF::StringImpl"* %115 to i64
  %136 = bitcast %"struct.WTF::KeyValuePair"* %101 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %101, i64 0, i32 1
  store i32 -128, i32* %137, align 8
  %138 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %139 = load i32, i32* %138, align 8
  %140 = add i32 %139, 2147483647
  %141 = and i32 %140, 2147483647
  %142 = and i32 %139, -2147483648
  %143 = or i32 %141, %142
  store i32 %143, i32* %138, align 8
  br label %144

144:                                              ; preds = %43, %110, %134
  %145 = phi %"struct.WTF::KeyValuePair"* [ %101, %134 ], [ %106, %110 ], [ %46, %43 ]
  call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS2_IN5blink15HTMLElementTypeEEEEENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S6_EERKPKcRKS6_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair"* dereferenceable(16) %145, i8** dereferenceable(8) %1, i32* dereferenceable(4) %2)
  %146 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %147 = load i32, i32* %146, align 4
  %148 = add i32 %147, 1
  store i32 %148, i32* %146, align 4
  %149 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %150 = load i32, i32* %149, align 8
  %151 = add i32 %150, %148
  %152 = shl i32 %151, 1
  %153 = load i32, i32* %14, align 8
  %154 = icmp ult i32 %152, %153
  br i1 %154, label %157, label %155

155:                                              ; preds = %144
  %156 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink15HTMLElementTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %145)
  br label %157

157:                                              ; preds = %99, %144, %155
  %158 = phi i8 [ 1, %144 ], [ 1, %155 ], [ 0, %99 ]
  %159 = phi %"struct.WTF::KeyValuePair"* [ %145, %144 ], [ %156, %155 ], [ %67, %99 ]
  %160 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %159, 0
  %161 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %160, i8 %158, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %161
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink15HTMLElementTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.144, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.142, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringEN5blink15HTMLElementTypeEEEEEPKcv, i64 0, i64 0)) #8
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %69, label %38

38:                                               ; preds = %31
  %39 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %40 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %39, i64 0, i32 0, i32 0, i32 0
  br label %41

41:                                               ; preds = %63, %38
  %42 = phi i64 [ 0, %38 ], [ %67, %63 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %42
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %63, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %63

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i33
  %55 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %54, i33 1) #8
  %56 = extractvalue { i33, i1 } %55, 1
  %57 = extractvalue { i33, i1 } %55, 0
  %58 = icmp slt i33 %57, 0
  %59 = or i1 %56, %58
  br i1 %59, label %60, label %61, !prof !10

60:                                               ; preds = %51
  call void @llvm.trap() #8
  unreachable

61:                                               ; preds = %51
  %62 = trunc i33 %57 to i32
  store i32 %62, i32* %52, align 4
  br label %63

63:                                               ; preds = %61, %46, %41
  %64 = ptrtoint %"class.WTF::StringImpl"* %44 to i64
  %65 = bitcast %"struct.WTF::KeyValuePair"* %43 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %42, i32 1
  store i32 -128, i32* %66, align 8
  %67 = add nuw nsw i64 %42, 1
  %68 = icmp eq i64 %67, %33
  br i1 %68, label %69, label %41

69:                                               ; preds = %63, %31
  %70 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink15HTMLElementTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #8
  ret %"struct.WTF::KeyValuePair"* %70
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS2_IN5blink15HTMLElementTypeEEEEENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S6_EERKPKcRKS6_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair"* dereferenceable(16), i8** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = load i8*, i8** %1, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = tail call i64 @strlen(i8* nonnull %6) #9
  br label %10

10:                                               ; preds = %3, %8
  %11 = phi i64 [ %9, %8 ], [ 0, %3 ]
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %4, i8* %6, i64 %11) #8
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.WTF::AtomicString"* %4 to i64*
  %14 = load i64, i64* %13, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %15 = bitcast %"struct.WTF::KeyValuePair"* %0 to i64*
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  store i64 %14, i64* %15, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #8
  br label %32

32:                                               ; preds = %10, %28, %31
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #8
  br label %48

48:                                               ; preds = %32, %44, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1
  %50 = load i32, i32* %2, align 4
  store i32 %50, i32* %49, align 4
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink17CreateHTMLTypeMapEv: argument 0"}
!5 = distinct !{!5, !"_ZN5blink17CreateHTMLTypeMapEv"}
!6 = !{i8 0, i8 2}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN5blink17CreateHTMLTypeMapEv: argument 0"}
!9 = distinct !{!9, !"_ZN5blink17CreateHTMLTypeMapEv"}
!10 = !{!"branch_weights", i32 1, i32 2000}
