; ModuleID = '../../components/autofill/core/browser/address_rewriter.cc'
source_filename = "../../components/autofill/core/browser/address_rewriter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.webui::ResourcePath" = type { i8*, i32 }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.std::__1::basic_string.1"* }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::tuple.110" = type { i8 }
%"class.base::BasicStringPiece.38" = type { i8*, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.autofill::(anonymous namespace)::Cache" = type { %"class.base::Lock", %"class.std::__1::unordered_map" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.19", %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.33", %"class.std::__1::__compressed_pair.35", [4 x i8] }>
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21", %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i64 }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.14" }
%"struct.std::__1::pair" = type { %"class.std::__1::unique_ptr", %"class.std::__1::basic_string.1" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.re2::RE2"* }
%"class.re2::RE2" = type { %"class.std::__1::basic_string.1", %"class.re2::RE2::Options", %"class.re2::Regexp"*, %"class.std::__1::basic_string.1"*, i32, %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", i8, %"class.re2::Regexp"*, %"class.re2::Prog"*, i32, i8, %"class.re2::Prog"*, %"class.std::__1::map"*, %"class.std::__1::map.12"*, %"struct.std::__1::once_flag", %"struct.std::__1::once_flag", %"struct.std::__1::once_flag" }
%"class.re2::RE2::Options" = type { i32, i8, i8, i8, i64, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.re2::Regexp" = type opaque
%"class.re2::Prog" = type opaque
%"class.std::__1::map" = type opaque
%"class.std::__1::map.12" = type opaque
%"struct.std::__1::once_flag" = type { i64 }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.5 }
%struct.anon.5 = type { i8 }
%"class.ui::ResourceBundle" = type { %"class.ui::ResourceBundle::Delegate"*, %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48", %"class.std::__1::vector.54", i32, %"class.std::__1::map.61", %"class.gfx::Image", %"class.std::__1::map.70", %"class.base::FilePath", %"class.std::__1::unordered_map.81", i8, i8, %"class.std::__1::basic_string.1" }
%"class.ui::ResourceBundle::Delegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.base::Lock"* }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.ui::ResourceHandle"* }
%"class.ui::ResourceHandle" = type opaque
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"class.std::__1::unique_ptr.48"*, %"class.std::__1::unique_ptr.48"*, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.std::__1::unique_ptr.48"* }
%"class.std::__1::map.61" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.62", %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.gfx::Image" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%"class.std::__1::map.70" = type { %"class.std::__1::__tree.71" }
%"class.std::__1::__tree.71" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.72", %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string.1" }
%"class.std::__1::unordered_map.81" = type { %"class.std::__1::__hash_table.82" }
%"class.std::__1::__hash_table.82" = type <{ %"class.std::__1::unique_ptr.83", %"class.std::__1::__compressed_pair.93", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", [4 x i8] }>
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85", %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"struct.std::__1::__hash_node_base.86"** }
%"struct.std::__1::__hash_node_base.86" = type { %"struct.std::__1::__hash_node_base.86"* }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.std::__1::__bucket_list_deallocator.88" }
%"class.std::__1::__bucket_list_deallocator.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"struct.std::__1::__hash_node_base.86" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.autofill::AddressRewriter" = type { i8* }
%"class.re2::StringPiece" = type { i8*, i64 }
%"class.std::__1::allocator.31" = type { i8 }
%"struct.std::__1::pair.40" = type { %"class.std::__1::basic_string.1", %"class.std::__1::vector" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS1_IcEEEENS_6vectorINS_4pairINS_10unique_ptrIN3re23RE2ENS_14default_deleteISD_EEEES8_EENS1_ISH_EEEEEEPvEEEEE7destroyINSA_IKS8_SJ_EEvvEEvRSN_PT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorINS_4pairINS_10unique_ptrIN3re23RE2ENS_14default_deleteISC_EEEES7_EENS5_ISG_EEEEEENS_22__unordered_map_hasherIS7_SJ_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SJ_SO_SM_Lb1EEENS5_ISJ_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISJ_PvEEEERKT_ = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorINS_4pairINS_10unique_ptrIN3re23RE2ENS_14default_deleteISC_EEEES7_EENS5_ISG_EEEEEENS_22__unordered_map_hasherIS7_SJ_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SJ_SO_SM_Lb1EEENS5_ISJ_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSY_IJEEEEEENS9_INS_15__hash_iteratorIPNS_11__hash_nodeISJ_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorINS_4pairINS_10unique_ptrIN3re23RE2ENS_14default_deleteISC_EEEES7_EENS5_ISG_EEEEEENS_22__unordered_map_hasherIS7_SJ_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SJ_SO_SM_Lb1EEENS5_ISJ_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorINS_4pairINS_10unique_ptrIN3re23RE2ENS_14default_deleteISC_EEEES7_EENS5_ISG_EEEEEENS_22__unordered_map_hasherIS7_SJ_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SJ_SO_SM_Lb1EEENS5_ISJ_EEE8__rehashEm = comdat any

$_ZNSt3__16vectorINS_4pairINS_10unique_ptrIN3re23RE2ENS_14default_deleteIS4_EEEENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENSB_ISE_EEE24__emplace_back_slow_pathIJS7_SD_EEEvDpOT_ = comdat any

@_ZN4base9SingletonIN8autofill12_GLOBAL__N_15CacheENS_22DefaultSingletonTraitsIS3_EES3_E9instance_E = internal global i64 0, align 8
@kAutofillAddressRewriterResourcesSize = external local_unnamed_addr constant i64, align 8
@kAutofillAddressRewriterResources = external local_unnamed_addr global [0 x %"struct.webui::ResourcePath"], align 8
@.str = private unnamed_addr constant [22 x i8] c"IDR_ADDRESS_REWRITER_\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"_RULES\00", align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN8autofill15AddressRewriter14ForCountryCodeERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::tuple", align 8
  %3 = alloca %"class.std::__1::tuple.110", align 1
  %4 = alloca [3 x %"class.base::BasicStringPiece.38"], align 8
  %5 = alloca %"class.std::__1::basic_string.1", align 8
  %6 = alloca %"class.std::__1::basic_string.1", align 8
  %7 = alloca %"class.std::__1::basic_string.1", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = bitcast %"class.std::__1::basic_string.1"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %13 = bitcast %"class.std::__1::basic_string.1"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #13
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %21 = select i1 %17, i16* %19, i16* %20
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %16 to i64
  %25 = select i1 %17, i64 %23, i64 %24
  call void @_ZN4base4i18n7ToUpperENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %8, i16* %21, i64 %25) #13
  %26 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i16*, i16** %30, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %8 to i16*
  %33 = select i1 %29, i16* %31, i16* %32
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = zext i8 %28 to i64
  %37 = select i1 %29, i64 %35, i64 %36
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.1"* nonnull sret %7, i16* %33, i64 %37) #13
  %38 = load i8, i8* %27, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %1
  %41 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #14
  br label %43

43:                                               ; preds = %1, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #13
  %44 = load atomic i64, i64* @_ZN4base9SingletonIN8autofill12_GLOBAL__N_15CacheENS_22DefaultSingletonTraitsIS3_EES3_E9instance_E acquire, align 8
  %45 = icmp ugt i64 %44, 1
  br i1 %45, label %57, label %46

46:                                               ; preds = %43
  %47 = call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* nonnull @_ZN4base9SingletonIN8autofill12_GLOBAL__N_15CacheENS_22DefaultSingletonTraitsIS3_EES3_E9instance_E) #13
  br i1 %47, label %48, label %55

48:                                               ; preds = %46
  %49 = call i8* @_Znwm(i64 80) #14
  %50 = bitcast i8* %49 to %"class.base::internal::LockImpl"*
  call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* nonnull %50) #13
  %51 = getelementptr inbounds i8, i8* %49, i64 40
  %52 = getelementptr inbounds i8, i8* %49, i64 72
  %53 = bitcast i8* %52 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %53, align 4
  %54 = ptrtoint i8* %49 to i64
  call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* nonnull @_ZN4base9SingletonIN8autofill12_GLOBAL__N_15CacheENS_22DefaultSingletonTraitsIS3_EES3_E9instance_E, i64 %54, void (i8*)* nonnull @_ZN4base9SingletonIN8autofill12_GLOBAL__N_15CacheENS_22DefaultSingletonTraitsIS3_EES3_E6OnExitEPv, i8* null) #13
  br label %57

55:                                               ; preds = %46
  %56 = load atomic i64, i64* @_ZN4base9SingletonIN8autofill12_GLOBAL__N_15CacheENS_22DefaultSingletonTraitsIS3_EES3_E9instance_E acquire, align 8
  br label %57

57:                                               ; preds = %43, %48, %55
  %58 = phi i64 [ %44, %43 ], [ %54, %48 ], [ %56, %55 ]
  %59 = inttoptr i64 %58 to %"class.autofill::(anonymous namespace)::Cache"*
  %60 = getelementptr inbounds %"class.autofill::(anonymous namespace)::Cache", %"class.autofill::(anonymous namespace)::Cache"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %60) #13
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %65, label %63, !prof !2

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.autofill::(anonymous namespace)::Cache", %"class.autofill::(anonymous namespace)::Cache"* %59, i64 0, i32 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %64) #13
  br label %65

65:                                               ; preds = %63, %57
  %66 = getelementptr inbounds %"class.autofill::(anonymous namespace)::Cache", %"class.autofill::(anonymous namespace)::Cache"* %59, i64 0, i32 1, i32 0
  %67 = call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorINS_4pairINS_10unique_ptrIN3re23RE2ENS_14default_deleteISC_EEEES7_EENS5_ISG_EEEEEENS_22__unordered_map_hasherIS7_SJ_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SJ_SO_SM_Lb1EEENS5_ISJ_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISJ_PvEEEERKT_(%"class.std::__1::__hash_table"* %66, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %7) #13
  %68 = icmp eq %"struct.std::__1::__hash_node_base"* %67, null
  br i1 %68, label %73, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %67, i64 5
  %71 = bitcast %"struct.std::__1::__hash_node_base"* %70 to %"class.std::__1::vector"*
  %72 = bitcast %"class.std::__1::basic_string.1"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %153

73:                                               ; preds = %65
  %74 = bitcast %"class.std::__1::basic_string.1"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #13
  %75 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 0, i64 24, i1 false) #13
  %76 = bitcast %"class.std::__1::basic_string.1"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #13
  %77 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = bitcast [3 x %"class.base::BasicStringPiece.38"]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 -86, i64 24, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %79) #13, !noalias !3
  %80 = getelementptr inbounds [3 x %"class.base::BasicStringPiece.38"], [3 x %"class.base::BasicStringPiece.38"]* %4, i64 0, i64 0
  %81 = getelementptr inbounds [3 x %"class.base::BasicStringPiece.38"], [3 x %"class.base::BasicStringPiece.38"]* %4, i64 0, i64 0, i32 0
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8** %81, align 8, !noalias !3
  %82 = getelementptr inbounds [3 x %"class.base::BasicStringPiece.38"], [3 x %"class.base::BasicStringPiece.38"]* %4, i64 0, i64 0, i32 1
  store i64 21, i64* %82, align 8, !noalias !3
  %83 = getelementptr inbounds [3 x %"class.base::BasicStringPiece.38"], [3 x %"class.base::BasicStringPiece.38"]* %4, i64 0, i64 1, i32 0
  %84 = bitcast %"class.std::__1::basic_string.1"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1, !noalias !3
  %87 = icmp slt i8 %86, 0
  %88 = load i8*, i8** %10, align 8, !noalias !3
  %89 = select i1 %87, i8* %88, i8* %9
  store i8* %89, i8** %83, align 8, !noalias !3
  %90 = getelementptr inbounds [3 x %"class.base::BasicStringPiece.38"], [3 x %"class.base::BasicStringPiece.38"]* %4, i64 0, i64 1, i32 1
  %91 = load i64, i64* %11, align 8, !noalias !3
  %92 = zext i8 %86 to i64
  %93 = select i1 %87, i64 %91, i64 %92
  store i64 %93, i64* %90, align 8, !noalias !3
  %94 = getelementptr inbounds [3 x %"class.base::BasicStringPiece.38"], [3 x %"class.base::BasicStringPiece.38"]* %4, i64 0, i64 2, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8** %94, align 8, !noalias !3
  %95 = getelementptr inbounds [3 x %"class.base::BasicStringPiece.38"], [3 x %"class.base::BasicStringPiece.38"]* %4, i64 0, i64 2, i32 1
  store i64 6, i64* %95, align 8, !noalias !3
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string.1"* nonnull sret %5, i64 3, %"class.base::BasicStringPiece.38"* nonnull %80) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %79) #13, !noalias !3
  %96 = load i64, i64* @kAutofillAddressRewriterResourcesSize, align 8
  %97 = icmp eq i64 %96, 0
  %98 = bitcast %"class.std::__1::basic_string.1"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br i1 %97, label %128, label %99

99:                                               ; preds = %73
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  br label %101

101:                                              ; preds = %115, %99
  %102 = phi i64 [ 0, %99 ], [ %116, %115 ]
  %103 = getelementptr inbounds [0 x %"struct.webui::ResourcePath"], [0 x %"struct.webui::ResourcePath"]* @kAutofillAddressRewriterResources, i64 0, i64 %102, i32 0
  %104 = load i8*, i8** %103, align 8
  %105 = call i64 @strlen(i8* %104) #13
  %106 = load i8, i8* %100, align 1
  %107 = icmp slt i8 %106, 0
  %108 = load i64, i64* %78, align 8
  %109 = zext i8 %106 to i64
  %110 = select i1 %107, i64 %108, i64 %109
  %111 = icmp eq i64 %105, %110
  br i1 %111, label %112, label %115

112:                                              ; preds = %101
  %113 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string.1"* nonnull %5, i64 0, i64 -1, i8* %104, i64 %105) #13
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %118, label %115

115:                                              ; preds = %112, %101
  %116 = add nuw i64 %102, 1
  %117 = icmp eq i64 %116, %96
  br i1 %117, label %128, label %101

118:                                              ; preds = %112
  %119 = getelementptr inbounds [0 x %"struct.webui::ResourcePath"], [0 x %"struct.webui::ResourcePath"]* @kAutofillAddressRewriterResources, i64 0, i64 %102, i32 1
  %120 = load i32, i32* %119, align 8
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %128, label %122

122:                                              ; preds = %118
  %123 = call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #13
  %124 = call { i8*, i64 } @_ZNK2ui14ResourceBundle18GetRawDataResourceEi(%"class.ui::ResourceBundle"* %123, i32 %120) #13
  %125 = extractvalue { i8*, i64 } %124, 0
  %126 = extractvalue { i8*, i64 } %124, 1
  %127 = call zeroext i1 @_ZN11compression14GzipUncompressEN4base4spanIKcLm18446744073709551615EEEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(i64 %126, i8* %125, %"class.std::__1::basic_string.1"* nonnull %6) #13
  br label %128

128:                                              ; preds = %115, %122, %118, %73
  %129 = phi i1 [ false, %118 ], [ true, %122 ], [ false, %73 ], [ false, %115 ]
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %131 = load i8, i8* %130, align 1
  %132 = icmp slt i8 %131, 0
  br i1 %132, label %133, label %135

133:                                              ; preds = %128
  %134 = load i8*, i8** %77, align 8
  call void @_ZdlPv(i8* %134) #14
  br label %135

135:                                              ; preds = %133, %128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #13
  br i1 %129, label %136, label %144

136:                                              ; preds = %135
  %137 = bitcast %"class.std::__1::tuple"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137) #13
  %138 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string.1"* %7, %"class.std::__1::basic_string.1"** %138, align 8
  %139 = getelementptr inbounds %"class.std::__1::tuple.110", %"class.std::__1::tuple.110"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %139) #13
  %140 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorINS_4pairINS_10unique_ptrIN3re23RE2ENS_14default_deleteISC_EEEES7_EENS5_ISG_EEEEEENS_22__unordered_map_hasherIS7_SJ_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SJ_SO_SM_Lb1EEENS5_ISJ_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSY_IJEEEEEENS9_INS_15__hash_iteratorIPNS_11__hash_nodeISJ_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %66, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.110"* nonnull dereferenceable(1) %3) #13
  %141 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %140, 0
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %141, i64 5
  %143 = bitcast %"struct.std::__1::__hash_node_base"* %142 to %"class.std::__1::vector"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %139) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #13
  call fastcc void @_ZN8autofill12_GLOBAL__N_120CompileRulesFromDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_6vectorINS1_4pairINS1_10unique_ptrIN3re23RE2ENS1_14default_deleteISE_EEEES7_EENS5_ISI_EEEE(%"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %6, %"class.std::__1::vector"* %143) #13
  br label %144

144:                                              ; preds = %136, %135
  %145 = phi %"class.std::__1::vector"* [ %143, %136 ], [ null, %135 ]
  %146 = bitcast %"class.std::__1::basic_string.1"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %146, i64 0, i32 1, i32 0
  %148 = load i8, i8* %147, align 1
  %149 = icmp slt i8 %148, 0
  br i1 %149, label %150, label %152

150:                                              ; preds = %144
  %151 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %151) #14
  br label %152

152:                                              ; preds = %150, %144
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #13
  br label %153

153:                                              ; preds = %69, %152
  %154 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %72, %69 ], [ %84, %152 ]
  %155 = phi %"class.std::__1::vector"* [ %71, %69 ], [ %145, %152 ]
  %156 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %60) #13
  %157 = bitcast %"class.std::__1::vector"* %155 to i8*
  %158 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %154, i64 0, i32 1, i32 0
  %159 = load i8, i8* %158, align 1
  %160 = icmp slt i8 %159, 0
  br i1 %160, label %161, label %163

161:                                              ; preds = %153
  %162 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %162) #14
  br label %163

163:                                              ; preds = %153, %161
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #13
  ret i8* %157
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.1"* sret, i16*, i64) local_unnamed_addr #2

declare void @_ZN4base4i18n7ToUpperENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN8autofill15AddressRewriter14ForCustomRulesERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string.1"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::tuple", align 8
  %3 = alloca %"class.std::__1::tuple.110", align 1
  %4 = load atomic i64, i64* @_ZN4base9SingletonIN8autofill12_GLOBAL__N_15CacheENS_22DefaultSingletonTraitsIS3_EES3_E9instance_E acquire, align 8
  %5 = icmp ugt i64 %4, 1
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* nonnull @_ZN4base9SingletonIN8autofill12_GLOBAL__N_15CacheENS_22DefaultSingletonTraitsIS3_EES3_E9instance_E) #13
  br i1 %7, label %8, label %15

8:                                                ; preds = %6
  %9 = tail call i8* @_Znwm(i64 80) #14
  %10 = bitcast i8* %9 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* nonnull %10) #13
  %11 = getelementptr inbounds i8, i8* %9, i64 40
  %12 = getelementptr inbounds i8, i8* %9, i64 72
  %13 = bitcast i8* %12 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %13, align 4
  %14 = ptrtoint i8* %9 to i64
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* nonnull @_ZN4base9SingletonIN8autofill12_GLOBAL__N_15CacheENS_22DefaultSingletonTraitsIS3_EES3_E9instance_E, i64 %14, void (i8*)* nonnull @_ZN4base9SingletonIN8autofill12_GLOBAL__N_15CacheENS_22DefaultSingletonTraitsIS3_EES3_E6OnExitEPv, i8* null) #13
  br label %17

15:                                               ; preds = %6
  %16 = load atomic i64, i64* @_ZN4base9SingletonIN8autofill12_GLOBAL__N_15CacheENS_22DefaultSingletonTraitsIS3_EES3_E9instance_E acquire, align 8
  br label %17

17:                                               ; preds = %1, %8, %15
  %18 = phi i64 [ %4, %1 ], [ %14, %8 ], [ %16, %15 ]
  %19 = inttoptr i64 %18 to %"class.autofill::(anonymous namespace)::Cache"*
  %20 = getelementptr inbounds %"class.autofill::(anonymous namespace)::Cache", %"class.autofill::(anonymous namespace)::Cache"* %19, i64 0, i32 1, i32 0
  %21 = bitcast %"class.std::__1::tuple"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  %22 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string.1"* %0, %"class.std::__1::basic_string.1"** %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::tuple.110", %"class.std::__1::tuple.110"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %23) #13
  %24 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorINS_4pairINS_10unique_ptrIN3re23RE2ENS_14default_deleteISC_EEEES7_EENS5_ISG_EEEEEENS_22__unordered_map_hasherIS7_SJ_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SJ_SO_SM_Lb1EEENS5_ISJ_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSY_IJEEEEEENS9_INS_15__hash_iteratorIPNS_11__hash_nodeISJ_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %20, %"class.std::__1::basic_string.1"* dereferenceable(24) %0, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.110"* nonnull dereferenceable(1) %3) #13
  %25 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %24, 0
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 5
  %27 = bitcast %"struct.std::__1::__hash_node_base"* %26 to %"class.std::__1::vector"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %23) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  call fastcc void @_ZN8autofill12_GLOBAL__N_120CompileRulesFromDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_6vectorINS1_4pairINS1_10unique_ptrIN3re23RE2ENS1_14default_deleteISE_EEEES7_EENS5_ISI_EEEE(%"class.std::__1::basic_string.1"* dereferenceable(24) %0, %"class.std::__1::vector"* %27) #13
  %28 = bitcast %"struct.std::__1::__hash_node_base"* %26 to i8*
  ret i8* %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8autofill15AddressRewriter7RewriteERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.autofill::AddressRewriter"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string.1", align 8
  %5 = alloca %"class.re2::StringPiece", align 8
  %6 = alloca %"class.std::__1::basic_string.1", align 8
  %7 = getelementptr inbounds %"class.autofill::AddressRewriter", %"class.autofill::AddressRewriter"* %1, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %23

10:                                               ; preds = %3
  %11 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %18 = select i1 %14, i16* %16, i16* %17
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %13 to i64
  %22 = select i1 %14, i64 %20, i64 %21
  tail call void @_ZN4base18CollapseWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEb(%"class.std::__1::basic_string"* sret %0, i16* %18, i64 %22, i1 zeroext true) #13
  br label %103

23:                                               ; preds = %3
  %24 = bitcast %"class.std::__1::basic_string.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %27, i64 0, i32 1, i32 1
  %29 = bitcast %"class.std::__1::basic_string.1"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false)
  %30 = load i8, i8* %28, align 1
  %31 = icmp slt i8 %30, 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  %34 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %35 = select i1 %31, i16* %33, i16* %34
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = zext i8 %30 to i64
  %39 = select i1 %31, i64 %37, i64 %38
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.1"* nonnull sret %4, i16* %35, i64 %39) #13
  %40 = bitcast %"class.autofill::AddressRewriter"* %1 to %"class.std::__1::vector"**
  %41 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %41, i64 0, i32 0, i32 0
  %43 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %41, i64 0, i32 0, i32 1
  %45 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %44, align 8
  %46 = icmp eq %"struct.std::__1::pair"* %43, %45
  br i1 %46, label %51, label %47

47:                                               ; preds = %23
  %48 = bitcast %"class.re2::StringPiece"* %5 to i8*
  %49 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %5, i64 0, i32 0
  %50 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %5, i64 0, i32 1
  br label %83

51:                                               ; preds = %83, %23
  %52 = bitcast %"class.std::__1::basic_string.1"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #13
  %53 = bitcast %"class.std::__1::basic_string.1"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  %57 = load i8*, i8** %25, align 8
  %58 = select i1 %56, i8* %57, i8* %24
  %59 = load i64, i64* %26, align 8
  %60 = zext i8 %55 to i64
  %61 = select i1 %56, i64 %59, i64 %60
  call void @_ZN4base23CollapseWhitespaceASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.std::__1::basic_string.1"* nonnull sret %6, i8* %58, i64 %61, i1 zeroext true) #13
  %62 = bitcast %"class.std::__1::basic_string.1"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  %66 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = select i1 %65, i8* %67, i8* %52
  %69 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = zext i8 %64 to i64
  %72 = select i1 %65, i64 %70, i64 %71
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret %0, i8* %68, i64 %72) #13
  %73 = load i8, i8* %63, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %77

75:                                               ; preds = %51
  %76 = load i8*, i8** %66, align 8
  call void @_ZdlPv(i8* %76) #14
  br label %77

77:                                               ; preds = %51, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #13
  %78 = load i8, i8* %54, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %77
  %81 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %81) #14
  br label %82

82:                                               ; preds = %77, %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #13
  br label %103

83:                                               ; preds = %47, %83
  %84 = phi %"struct.std::__1::pair"* [ %43, %47 ], [ %101, %83 ]
  %85 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %84, i64 0, i32 0, i32 0, i32 0, i32 0
  %86 = load %"class.re2::RE2"*, %"class.re2::RE2"** %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #13
  %87 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %84, i64 0, i32 1
  %88 = bitcast %"class.std::__1::basic_string.1"* %87 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  %90 = load i8, i8* %89, align 1
  %91 = icmp slt i8 %90, 0
  %92 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  %94 = bitcast %"class.std::__1::basic_string.1"* %87 to i8*
  %95 = select i1 %91, i8* %93, i8* %94
  store i8* %95, i8** %49, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %84, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = zext i8 %90 to i64
  %99 = select i1 %91, i64 %97, i64 %98
  store i64 %99, i64* %50, align 8
  %100 = call i32 @_ZN3re23RE213GlobalReplaceEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKS0_RKNS_11StringPieceE(%"class.std::__1::basic_string.1"* nonnull %4, %"class.re2::RE2"* dereferenceable(200) %86, %"class.re2::StringPiece"* nonnull dereferenceable(16) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #13
  %101 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %84, i64 1
  %102 = icmp eq %"struct.std::__1::pair"* %101, %45
  br i1 %102, label %51, label %83

103:                                              ; preds = %82, %10
  ret void
}

declare void @_ZN4base18CollapseWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEb(%"class.std::__1::basic_string"* sret, i16*, i64, i1 zeroext) local_unnamed_addr #2

declare i32 @_ZN3re23RE213GlobalReplaceEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKS0_RKNS_11StringPieceE(%"class.std::__1::basic_string.1"*, %"class.re2::RE2"* dereferenceable(200), %"class.re2::StringPiece"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

declare void @_ZN4base23CollapseWhitespaceASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.std::__1::basic_string.1"* sret, i8*, i64, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base9SingletonIN8autofill12_GLOBAL__N_15CacheENS_22DefaultSingletonTraitsIS3_EES3_E6OnExitEPv(i8* nocapture readnone) #0 align 2 {
  %2 = load atomic i64, i64* @_ZN4base9SingletonIN8autofill12_GLOBAL__N_15CacheENS_22DefaultSingletonTraitsIS3_EES3_E9instance_E monotonic, align 8
  %3 = inttoptr i64 %2 to %"class.autofill::(anonymous namespace)::Cache"*
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.autofill::(anonymous namespace)::Cache", %"class.autofill::(anonymous namespace)::Cache"* %3, i64 0, i32 1, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.28"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %7, align 8
  %9 = bitcast %"class.std::__1::__compressed_pair.28"* %6 to %"class.std::__1::allocator.31"*
  %10 = icmp eq %"struct.std::__1::__hash_node_base"* %8, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %5, %11
  %12 = phi %"struct.std::__1::__hash_node_base"* [ %14, %11 ], [ %8, %5 ]
  %13 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %12, i64 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %12, i64 2
  %16 = bitcast %"struct.std::__1::__hash_node_base"* %15 to %"struct.std::__1::pair.40"*
  tail call void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS1_IcEEEENS_6vectorINS_4pairINS_10unique_ptrIN3re23RE2ENS_14default_deleteISD_EEEES8_EENS1_ISH_EEEEEEPvEEEEE7destroyINSA_IKS8_SJ_EEvvEEvRSN_PT_(%"class.std::__1::allocator.31"* dereferenceable(1) %9, %"struct.std::__1::pair.40"* %16) #13
  %17 = bitcast %"struct.std::__1::__hash_node_base"* %12 to i8*
  tail call void @_ZdlPv(i8* %17) #14
  %18 = icmp eq %"struct.std::__1::__hash_node_base"* %14, null
  br i1 %18, label %19, label %11

19:                                               ; preds = %11, %5
  %20 = getelementptr inbounds %"class.autofill::(anonymous namespace)::Cache", %"class.autofill::(anonymous namespace)::Cache"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = icmp eq %"struct.std::__1::__hash_node_base"** %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = bitcast %"struct.std::__1::__hash_node_base"** %21 to i8*
  tail call void @_ZdlPv(i8* %24) #14
  br label %25

25:                                               ; preds = %23, %19
  %26 = getelementptr inbounds %"class.autofill::(anonymous namespace)::Cache", %"class.autofill::(anonymous namespace)::Cache"* %3, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %26) #13
  %27 = inttoptr i64 %2 to i8*
  tail call void @_ZdlPv(i8* %27) #14
  br label %28

28:                                               ; preds = %1, %25
  store i64 0, i64* @_ZN4base9SingletonIN8autofill12_GLOBAL__N_15CacheENS_22DefaultSingletonTraitsIS3_EES3_E9instance_E, align 8
  ret void
}

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #2

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS1_IcEEEENS_6vectorINS_4pairINS_10unique_ptrIN3re23RE2ENS_14default_deleteISD_EEEES8_EENS1_ISH_EEEEEEPvEEEEE7destroyINSA_IKS8_SJ_EEvvEEvRSN_PT_(%"class.std::__1::allocator.31"* dereferenceable(1), %"struct.std::__1::pair.40"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::pair.40", %"struct.std::__1::pair.40"* %1, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = icmp eq %"struct.std::__1::pair"* %5, null
  br i1 %6, label %36, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.std::__1::pair"* %5 to i8*
  %9 = getelementptr inbounds %"struct.std::__1::pair.40", %"struct.std::__1::pair.40"* %1, i64 0, i32 1, i32 0, i32 1
  %10 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %11 = icmp eq %"struct.std::__1::pair"* %10, %5
  br i1 %11, label %34, label %12

12:                                               ; preds = %7, %29
  %13 = phi %"struct.std::__1::pair"* [ %14, %29 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %13, i64 -1
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %13, i64 -1, i32 1
  %16 = bitcast %"class.std::__1::basic_string.1"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @_ZdlPv(i8* %22) #14
  br label %23

23:                                               ; preds = %20, %12
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.re2::RE2"*, %"class.re2::RE2"** %24, align 8
  store %"class.re2::RE2"* null, %"class.re2::RE2"** %24, align 8
  %26 = icmp eq %"class.re2::RE2"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  tail call void @_ZN3re23RE2D1Ev(%"class.re2::RE2"* nonnull %25) #13
  %28 = bitcast %"class.re2::RE2"* %25 to i8*
  tail call void @_ZdlPv(i8* %28) #14
  br label %29

29:                                               ; preds = %27, %23
  %30 = icmp eq %"struct.std::__1::pair"* %14, %5
  br i1 %30, label %31, label %12

31:                                               ; preds = %29
  %32 = bitcast %"class.std::__1::vector"* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  br label %34

34:                                               ; preds = %31, %7
  %35 = phi i8* [ %33, %31 ], [ %8, %7 ]
  store %"struct.std::__1::pair"* %5, %"struct.std::__1::pair"** %9, align 8
  tail call void @_ZdlPv(i8* %35) #14
  br label %36

36:                                               ; preds = %34, %2
  %37 = bitcast %"struct.std::__1::pair.40"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"struct.std::__1::pair.40", %"struct.std::__1::pair.40"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  tail call void @_ZdlPv(i8* %43) #14
  br label %44

44:                                               ; preds = %36, %41
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3re23RE2D1Ev(%"class.re2::RE2"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN8autofill12_GLOBAL__N_120CompileRulesFromDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_6vectorINS1_4pairINS1_10unique_ptrIN3re23RE2ENS1_14default_deleteISE_EEEES7_EENS5_ISI_EEEE(%"class.std::__1::basic_string.1"* dereferenceable(24), %"class.std::__1::vector"*) unnamed_addr #0 {
  %3 = alloca %"class.base::BasicStringPiece.38", align 8
  %4 = alloca %"class.re2::RE2::Options", align 16
  %5 = alloca %"class.re2::StringPiece", align 8
  %6 = alloca %"class.std::__1::unique_ptr", align 8
  %7 = alloca %"class.std::__1::basic_string.1", align 8
  %8 = bitcast %"class.base::BasicStringPiece.38"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #13
  %9 = getelementptr inbounds %"class.base::BasicStringPiece.38", %"class.base::BasicStringPiece.38"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"class.base::BasicStringPiece.38", %"class.base::BasicStringPiece.38"* %3, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  %18 = select i1 %14, i8* %16, i8* %17
  store i8* %18, i8** %9, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %13 to i64
  %22 = select i1 %14, i64 %20, i64 %21
  store i64 %22, i64* %10, align 8
  %23 = bitcast %"class.re2::RE2::Options"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #13
  %24 = getelementptr inbounds %"class.re2::RE2::Options", %"class.re2::RE2::Options"* %4, i64 0, i32 0
  %25 = getelementptr inbounds %"class.re2::RE2::Options", %"class.re2::RE2::Options"* %4, i64 0, i32 1
  %26 = bitcast %"class.re2::RE2::Options"* %4 to <2 x i64>*
  store <2 x i64> <i64 -6148914691236517206, i64 8388608>, <2 x i64>* %26, align 16
  store i8 0, i8* %25, align 4
  %27 = getelementptr inbounds %"class.re2::RE2::Options", %"class.re2::RE2::Options"* %4, i64 0, i32 2
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %"class.re2::RE2::Options", %"class.re2::RE2::Options"* %4, i64 0, i32 3
  store i8 1, i8* %28, align 2
  %29 = getelementptr inbounds %"class.re2::RE2::Options", %"class.re2::RE2::Options"* %4, i64 0, i32 5
  %30 = getelementptr inbounds %"class.re2::RE2::Options", %"class.re2::RE2::Options"* %4, i64 0, i32 9
  %31 = bitcast i8* %29 to i32*
  store i32 0, i32* %31, align 16
  store i8 1, i8* %30, align 4
  %32 = getelementptr inbounds %"class.re2::RE2::Options", %"class.re2::RE2::Options"* %4, i64 0, i32 10
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %"class.re2::RE2::Options", %"class.re2::RE2::Options"* %4, i64 0, i32 11
  %34 = getelementptr inbounds %"class.re2::RE2::Options", %"class.re2::RE2::Options"* %4, i64 0, i32 12
  store i8 0, i8* %34, align 1
  store i32 1, i32* %24, align 16
  store i8 1, i8* %33, align 2
  %35 = icmp eq i64 %22, 0
  br i1 %35, label %127, label %36

36:                                               ; preds = %2
  %37 = bitcast %"class.re2::StringPiece"* %5 to i8*
  %38 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %5, i64 0, i32 1
  %39 = bitcast %"class.re2::StringPiece"* %5 to i64*
  %40 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.std::__1::unique_ptr"* %6 to i8**
  %43 = bitcast %"class.std::__1::basic_string.1"* %7 to i8*
  %44 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %47 = bitcast %"class.std::__1::basic_string.1"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  %52 = bitcast %"struct.std::__1::pair"** %49 to i64*
  %53 = bitcast %"class.std::__1::basic_string.1"* %7 to i8*
  br label %54

54:                                               ; preds = %125, %36
  %55 = phi i8* [ %18, %36 ], [ %126, %125 ]
  %56 = phi i64 [ %22, %36 ], [ %123, %125 ]
  %57 = ptrtoint i8* %55 to i64
  %58 = call i8* @memchr(i8* %55, i32 9, i64 %56) #13
  %59 = icmp eq i8* %58, null
  %60 = ptrtoint i8* %58 to i64
  %61 = ptrtoint i8* %55 to i64
  %62 = sub i64 %60, %61
  %63 = select i1 %59, i64 -1, i64 %62
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #13
  store i64 %57, i64* %39, align 8
  store i64 %63, i64* %38, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #13
  store %"class.re2::RE2"* inttoptr (i64 -6148914691236517206 to %"class.re2::RE2"*), %"class.re2::RE2"** %41, align 8
  %64 = call i8* @_Znwm(i64 200) #14
  %65 = bitcast i8* %64 to %"class.re2::RE2"*
  call void @_ZN3re23RE2C1ERKNS_11StringPieceERKNS0_7OptionsE(%"class.re2::RE2"* nonnull %65, %"class.re2::StringPiece"* nonnull dereferenceable(16) %5, %"class.re2::RE2::Options"* nonnull dereferenceable(24) %4) #13
  store i8* %64, i8** %42, align 8
  %66 = add i64 %63, 1
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece.38"* nonnull %3, i64 %66)
  %67 = load i64, i64* %10, align 8
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %54
  %70 = load i8*, i8** %9, align 8
  %71 = call i8* @memchr(i8* %70, i32 10, i64 %67) #13
  %72 = icmp eq i8* %71, null
  br i1 %72, label %77, label %73

73:                                               ; preds = %69
  %74 = ptrtoint i8* %71 to i64
  %75 = ptrtoint i8* %70 to i64
  %76 = sub i64 %74, %75
  br label %77

77:                                               ; preds = %54, %69, %73
  %78 = phi i64 [ -1, %54 ], [ %76, %73 ], [ -1, %69 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 24, i1 false)
  %79 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece.38"* nonnull %3, i64 0, i64 %78)
  %80 = extractvalue { i8*, i64 } %79, 0
  %81 = extractvalue { i8*, i64 } %79, 1
  %82 = icmp ugt i64 %81, -17
  br i1 %82, label %83, label %85

83:                                               ; preds = %77
  %84 = bitcast %"class.std::__1::basic_string.1"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %84) #15
  unreachable

85:                                               ; preds = %77
  %86 = icmp ult i64 %81, 23
  br i1 %86, label %92, label %87

87:                                               ; preds = %85
  %88 = add nuw i64 %81, 16
  %89 = and i64 %88, -16
  %90 = call i8* @_Znwm(i64 %89) #14
  store i8* %90, i8** %44, align 8, !alias.scope !6
  %91 = or i64 %89, -9223372036854775808
  store i64 %91, i64* %46, align 8, !alias.scope !6
  store i64 %81, i64* %45, align 8, !alias.scope !6
  br label %95

92:                                               ; preds = %85
  %93 = trunc i64 %81 to i8
  store i8 %93, i8* %48, align 1, !alias.scope !6
  %94 = icmp eq i64 %81, 0
  br i1 %94, label %97, label %95

95:                                               ; preds = %92, %87
  %96 = phi i8* [ %90, %87 ], [ %43, %92 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %96, i8* align 1 %80, i64 %81, i1 false) #13
  br label %97

97:                                               ; preds = %92, %95
  %98 = phi i8* [ %43, %92 ], [ %96, %95 ]
  %99 = getelementptr inbounds i8, i8* %98, i64 %81
  store i8 0, i8* %99, align 1
  %100 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %49, align 8
  %101 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %50, align 8
  %102 = icmp ult %"struct.std::__1::pair"* %100, %101
  br i1 %102, label %103, label %110

103:                                              ; preds = %97
  %104 = load i64, i64* %51, align 8
  store %"class.re2::RE2"* null, %"class.re2::RE2"** %41, align 8
  %105 = bitcast %"struct.std::__1::pair"* %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %100, i64 0, i32 1
  %107 = bitcast %"class.std::__1::basic_string.1"* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* nonnull align 8 %43, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 24, i1 false) #13
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %100, i64 1
  %109 = ptrtoint %"struct.std::__1::pair"* %108 to i64
  store i64 %109, i64* %52, align 8
  br label %111

110:                                              ; preds = %97
  call void @_ZNSt3__16vectorINS_4pairINS_10unique_ptrIN3re23RE2ENS_14default_deleteIS4_EEEENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENSB_ISE_EEE24__emplace_back_slow_pathIJS7_SD_EEEvDpOT_(%"class.std::__1::vector"* %1, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %6, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %7) #13
  br label %111

111:                                              ; preds = %103, %110
  %112 = add i64 %78, 1
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece.38"* nonnull %3, i64 %112)
  %113 = load i8, i8* %48, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %111
  %116 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %116) #14
  br label %117

117:                                              ; preds = %111, %115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #13
  %118 = load %"class.re2::RE2"*, %"class.re2::RE2"** %41, align 8
  store %"class.re2::RE2"* null, %"class.re2::RE2"** %41, align 8
  %119 = icmp eq %"class.re2::RE2"* %118, null
  br i1 %119, label %122, label %120

120:                                              ; preds = %117
  call void @_ZN3re23RE2D1Ev(%"class.re2::RE2"* nonnull %118) #13
  %121 = bitcast %"class.re2::RE2"* %118 to i8*
  call void @_ZdlPv(i8* %121) #14
  br label %122

122:                                              ; preds = %117, %120
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #13
  %123 = load i64, i64* %10, align 8
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %127, label %125

125:                                              ; preds = %122
  %126 = load i8*, i8** %9, align 8
  br label %54

127:                                              ; preds = %122, %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  ret void
}

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorINS_4pairINS_10unique_ptrIN3re23RE2ENS_14default_deleteISC_EEEES7_EENS5_ISG_EEEEEENS_22__unordered_map_hasherIS7_SJ_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SJ_SO_SM_Lb1EEENS5_ISJ_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISJ_PvEEEERKT_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string.1"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.std::__1::basic_string.1"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string.1"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #13
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #13
  %18 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %111, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #13, !range !9
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %111, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base"* %40, null
  br i1 %41, label %111, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  %44 = load i8, i8* %5, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i64, i64* %10, align 8
  %47 = zext i8 %44 to i64
  %48 = select i1 %45, i64 %46, i64 %47
  %49 = load i8*, i8** %8, align 8
  %50 = select i1 %45, i8* %49, i8* %12
  %51 = icmp eq i64 %48, 0
  br label %52

52:                                               ; preds = %42, %107
  %53 = phi %"struct.std::__1::__hash_node_base"* [ %40, %42 ], [ %109, %107 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, %17
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  br i1 %23, label %61, label %59

59:                                               ; preds = %58
  %60 = and i64 %56, %43
  br label %65

61:                                               ; preds = %58
  %62 = icmp ult i64 %56, %19
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %56, %19
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %56, %61 ]
  %67 = icmp eq i64 %66, %32
  br i1 %67, label %107, label %111

68:                                               ; preds = %52
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %72 to i64
  %78 = select i1 %73, i64 %76, i64 %77
  %79 = icmp eq i64 %78, %48
  br i1 %79, label %80, label %107

80:                                               ; preds = %68
  %81 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i8*
  %84 = select i1 %73, i8* %82, i8* %83
  br i1 %73, label %91, label %85

85:                                               ; preds = %80
  br i1 %51, label %111, label %86

86:                                               ; preds = %85
  %87 = ptrtoint i8* %82 to i64
  %88 = trunc i64 %87 to i8
  %89 = load i8, i8* %50, align 1
  %90 = icmp eq i8 %89, %88
  br i1 %90, label %92, label %107

91:                                               ; preds = %80
  br i1 %51, label %111, label %104

92:                                               ; preds = %86, %99
  %93 = phi i64 [ %96, %99 ], [ %77, %86 ]
  %94 = phi i8* [ %97, %99 ], [ %83, %86 ]
  %95 = phi i8* [ %100, %99 ], [ %50, %86 ]
  %96 = add i64 %93, -1
  %97 = getelementptr inbounds i8, i8* %94, i64 1
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %95, i64 1
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %100, align 1
  %103 = icmp eq i8 %101, %102
  br i1 %103, label %92, label %107

104:                                              ; preds = %91
  %105 = call i32 @bcmp(i8* %84, i8* %50, i64 %48) #13
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %99, %86, %68, %65, %104
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base"* %109, null
  br i1 %110, label %111, label %52

111:                                              ; preds = %104, %107, %65, %91, %85, %92, %38, %2, %31
  %112 = phi %"struct.std::__1::__hash_node_base"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %53, %92 ], [ %53, %104 ], [ null, %107 ], [ null, %65 ], [ %53, %91 ], [ %53, %85 ]
  ret %"struct.std::__1::__hash_node_base"* %112
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #6 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() local_unnamed_addr #2

declare { i8*, i64 } @_ZNK2ui14ResourceBundle18GetRawDataResourceEi(%"class.ui::ResourceBundle"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN11compression14GzipUncompressEN4base4spanIKcLm18446744073709551615EEEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(i64, i8*, %"class.std::__1::basic_string.1"*) local_unnamed_addr #2

declare void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string.1"* sret, i64, %"class.base::BasicStringPiece.38"*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string.1"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorINS_4pairINS_10unique_ptrIN3re23RE2ENS_14default_deleteISC_EEEES7_EENS5_ISG_EEEEEENS_22__unordered_map_hasherIS7_SJ_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SJ_SO_SM_Lb1EEENS5_ISJ_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSY_IJEEEEEENS9_INS_15__hash_iteratorIPNS_11__hash_nodeISJ_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string.1"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.110"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %7 = bitcast %"class.std::__1::basic_string.1"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_string.1"* %1 to i8*
  %16 = zext i8 %9 to i64
  %17 = select i1 %10, i8* %12, i8* %15
  %18 = select i1 %10, i64 %14, i64 %16
  %19 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #13
  %20 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %6, i8* %17, i64 %18) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #13
  %21 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %114, label %24

24:                                               ; preds = %5
  %25 = call i64 @llvm.ctpop.i64(i64 %22) #13, !range !9
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, -1
  %29 = and i64 %28, %20
  br label %34

30:                                               ; preds = %24
  %31 = icmp ult i64 %20, %22
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %20, %22
  br label %34

34:                                               ; preds = %27, %30, %32
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %20, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base"* %39, null
  br i1 %40, label %114, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base"* %43, null
  br i1 %44, label %114, label %45

45:                                               ; preds = %41
  %46 = add i64 %22, -1
  %47 = load i8, i8* %8, align 1
  %48 = icmp slt i8 %47, 0
  %49 = load i64, i64* %13, align 8
  %50 = zext i8 %47 to i64
  %51 = select i1 %48, i64 %49, i64 %50
  %52 = load i8*, i8** %11, align 8
  %53 = select i1 %48, i8* %52, i8* %15
  %54 = icmp eq i64 %51, 0
  br label %55

55:                                               ; preds = %45, %98
  %56 = phi %"struct.std::__1::__hash_node_base"* [ %43, %45 ], [ %100, %98 ]
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 1
  %58 = bitcast %"struct.std::__1::__hash_node_base"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, %20
  br i1 %60, label %71, label %61

61:                                               ; preds = %55
  br i1 %26, label %64, label %62

62:                                               ; preds = %61
  %63 = and i64 %59, %46
  br label %68

64:                                               ; preds = %61
  %65 = icmp ult i64 %59, %22
  br i1 %65, label %68, label %66

66:                                               ; preds = %64
  %67 = urem i64 %59, %22
  br label %68

68:                                               ; preds = %62, %64, %66
  %69 = phi i64 [ %63, %62 ], [ %67, %66 ], [ %59, %64 ]
  %70 = icmp eq i64 %69, %35
  br i1 %70, label %71, label %114

71:                                               ; preds = %55, %68
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 2
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 3
  %78 = bitcast %"struct.std::__1::__hash_node_base"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %75 to i64
  %81 = select i1 %76, i64 %79, i64 %80
  %82 = icmp eq i64 %81, %51
  br i1 %82, label %83, label %98

83:                                               ; preds = %71
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i8**
  %85 = load i8*, i8** %84, align 8
  %86 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i8*
  %87 = select i1 %76, i8* %85, i8* %86
  br i1 %76, label %94, label %88

88:                                               ; preds = %83
  br i1 %54, label %215, label %89

89:                                               ; preds = %88
  %90 = ptrtoint i8* %85 to i64
  %91 = trunc i64 %90 to i8
  %92 = load i8, i8* %53, align 1
  %93 = icmp eq i8 %92, %91
  br i1 %93, label %102, label %98

94:                                               ; preds = %83
  br i1 %54, label %215, label %95

95:                                               ; preds = %94
  %96 = call i32 @bcmp(i8* %87, i8* %53, i64 %51) #13
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %215, label %98

98:                                               ; preds = %109, %89, %71, %95
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base"* %100, null
  br i1 %101, label %114, label %55

102:                                              ; preds = %89, %109
  %103 = phi i64 [ %106, %109 ], [ %80, %89 ]
  %104 = phi i8* [ %107, %109 ], [ %86, %89 ]
  %105 = phi i8* [ %110, %109 ], [ %53, %89 ]
  %106 = add i64 %103, -1
  %107 = getelementptr inbounds i8, i8* %104, i64 1
  %108 = icmp eq i64 %106, 0
  br i1 %108, label %215, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds i8, i8* %105, i64 1
  %111 = load i8, i8* %107, align 1
  %112 = load i8, i8* %110, align 1
  %113 = icmp eq i8 %111, %112
  br i1 %113, label %102, label %98

114:                                              ; preds = %68, %98, %41, %34, %5
  %115 = phi i64 [ %35, %34 ], [ -6148914691236517206, %5 ], [ %35, %41 ], [ %35, %98 ], [ %35, %68 ]
  %116 = call i8* @_Znwm(i64 64) #14, !noalias !10
  %117 = getelementptr inbounds i8, i8* %116, i64 16
  %118 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %118, align 8, !noalias !10
  %120 = bitcast %"class.std::__1::basic_string.1"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1, !noalias !10
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %114
  %125 = bitcast %"class.std::__1::basic_string.1"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %125, i64 24, i1 false) #13, !noalias !10
  br label %132

126:                                              ; preds = %114
  %127 = bitcast i8* %117 to %"class.std::__1::basic_string.1"*
  %128 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i8*, i8** %128, align 8, !noalias !10
  %130 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %131 = load i64, i64* %130, align 8, !noalias !10
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.1"* %127, i8* %129, i64 %131) #13, !noalias !10
  br label %132

132:                                              ; preds = %124, %126
  %133 = getelementptr inbounds i8, i8* %116, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 24, i1 false) #13, !noalias !10
  %134 = getelementptr inbounds i8, i8* %116, i64 8
  %135 = bitcast i8* %134 to i64*
  store i64 %20, i64* %135, align 8, !noalias !10
  %136 = bitcast i8* %116 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %136, align 8, !noalias !10
  %137 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %138 = load i64, i64* %137, align 8
  %139 = add i64 %138, 1
  %140 = uitofp i64 %139 to float
  %141 = uitofp i64 %22 to float
  %142 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %143 = load float, float* %142, align 4
  %144 = fmul float %143, %141
  %145 = fcmp olt float %144, %140
  %146 = or i1 %23, %145
  br i1 %146, label %147, label %170

147:                                              ; preds = %132
  %148 = shl i64 %22, 1
  %149 = icmp ult i64 %22, 3
  %150 = call i64 @llvm.ctpop.i64(i64 %22) #13, !range !9
  %151 = icmp ugt i64 %150, 1
  %152 = or i1 %149, %151
  %153 = zext i1 %152 to i64
  %154 = or i64 %148, %153
  %155 = fdiv float %140, %143
  %156 = call float @llvm.ceil.f32(float %155) #13
  %157 = fptoui float %156 to i64
  %158 = icmp ult i64 %154, %157
  %159 = select i1 %158, i64 %157, i64 %154
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorINS_4pairINS_10unique_ptrIN3re23RE2ENS_14default_deleteISC_EEEES7_EENS5_ISG_EEEEEENS_22__unordered_map_hasherIS7_SJ_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SJ_SO_SM_Lb1EEENS5_ISJ_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %159)
  %160 = load i64, i64* %21, align 8
  %161 = call i64 @llvm.ctpop.i64(i64 %160) #13, !range !9
  %162 = icmp ugt i64 %161, 1
  br i1 %162, label %166, label %163

163:                                              ; preds = %147
  %164 = add i64 %160, -1
  %165 = and i64 %164, %20
  br label %170

166:                                              ; preds = %147
  %167 = icmp ult i64 %20, %160
  br i1 %167, label %170, label %168

168:                                              ; preds = %166
  %169 = urem i64 %20, %160
  br label %170

170:                                              ; preds = %168, %166, %163, %132
  %171 = phi i64 [ %22, %132 ], [ %160, %163 ], [ %160, %166 ], [ %160, %168 ]
  %172 = phi i64 [ %115, %132 ], [ %165, %163 ], [ %20, %166 ], [ %169, %168 ]
  %173 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %174 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %173, align 8
  %175 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %174, i64 %172
  %176 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %175, align 8
  %177 = icmp eq %"struct.std::__1::__hash_node_base"* %176, null
  br i1 %177, label %178, label %204

178:                                              ; preds = %170
  %179 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %180 = bitcast %"struct.std::__1::__hash_node_base"* %179 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = bitcast i8* %116 to i64*
  store i64 %181, i64* %182, align 8
  %183 = bitcast %"struct.std::__1::__hash_node_base"* %179 to i8**
  store i8* %116, i8** %183, align 8
  store %"struct.std::__1::__hash_node_base"* %179, %"struct.std::__1::__hash_node_base"** %175, align 8
  %184 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %136, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base"* %184, null
  br i1 %185, label %211, label %186

186:                                              ; preds = %178
  %187 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %184, i64 1
  %188 = bitcast %"struct.std::__1::__hash_node_base"* %187 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = call i64 @llvm.ctpop.i64(i64 %171) #13, !range !9
  %191 = icmp ugt i64 %190, 1
  br i1 %191, label %195, label %192

192:                                              ; preds = %186
  %193 = add i64 %171, -1
  %194 = and i64 %189, %193
  br label %199

195:                                              ; preds = %186
  %196 = icmp ult i64 %189, %171
  br i1 %196, label %199, label %197

197:                                              ; preds = %195
  %198 = urem i64 %189, %171
  br label %199

199:                                              ; preds = %192, %195, %197
  %200 = phi i64 [ %194, %192 ], [ %198, %197 ], [ %189, %195 ]
  %201 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %173, align 8
  %202 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %201, i64 %200
  %203 = bitcast %"struct.std::__1::__hash_node_base"** %202 to i8**
  br label %209

204:                                              ; preds = %170
  %205 = bitcast %"struct.std::__1::__hash_node_base"* %176 to i64*
  %206 = load i64, i64* %205, align 8
  %207 = bitcast i8* %116 to i64*
  store i64 %206, i64* %207, align 8
  %208 = bitcast %"struct.std::__1::__hash_node_base"* %176 to i8**
  br label %209

209:                                              ; preds = %199, %204
  %210 = phi i8** [ %208, %204 ], [ %203, %199 ]
  store i8* %116, i8** %210, align 8
  br label %211

211:                                              ; preds = %209, %178
  %212 = bitcast i8* %116 to %"struct.std::__1::__hash_node_base"*
  %213 = load i64, i64* %137, align 8
  %214 = add i64 %213, 1
  store i64 %214, i64* %137, align 8
  br label %215

215:                                              ; preds = %88, %94, %95, %102, %211
  %216 = phi i8 [ 1, %211 ], [ 0, %102 ], [ 0, %95 ], [ 0, %94 ], [ 0, %88 ]
  %217 = phi %"struct.std::__1::__hash_node_base"* [ %212, %211 ], [ %56, %102 ], [ %56, %95 ], [ %56, %94 ], [ %56, %88 ]
  %218 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %217, 0
  %219 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %218, i8 %216, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %219
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorINS_4pairINS_10unique_ptrIN3re23RE2ENS_14default_deleteISC_EEEES7_EENS5_ISG_EEEEEENS_22__unordered_map_hasherIS7_SJ_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SJ_SO_SM_Lb1EEENS5_ISJ_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !9
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorINS_4pairINS_10unique_ptrIN3re23RE2ENS_14default_deleteISC_EEEES7_EENS5_ISG_EEEEEENS_22__unordered_map_hasherIS7_SJ_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SJ_SO_SM_Lb1EEENS5_ISJ_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !9
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !9
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorINS_4pairINS_10unique_ptrIN3re23RE2ENS_14default_deleteISC_EEEES7_EENS5_ISG_EEEEEENS_22__unordered_map_hasherIS7_SJ_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SJ_SO_SM_Lb1EEENS5_ISJ_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.1"*, i8*, i64) local_unnamed_addr #2

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorINS_4pairINS_10unique_ptrIN3re23RE2ENS_14default_deleteISC_EEEES7_EENS5_ISG_EEEEEENS_22__unordered_map_hasherIS7_SJ_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SJ_SO_SM_Lb1EEENS5_ISJ_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %186, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !13

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %194, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !9
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %194, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %180
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %184, %180 ]
  %81 = phi i64 [ %71, %77 ], [ %182, %180 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %181, %180 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %180, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %118, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base"* %102, null
  br i1 %103, label %166, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %108 to i64
  %114 = select i1 %109, i64 %112, i64 %113
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8**
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8*
  %117 = icmp eq i64 %114, 0
  br label %119

118:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %180

119:                                              ; preds = %104, %162
  %120 = phi %"struct.std::__1::__hash_node_base"* [ %102, %104 ], [ %164, %162 ]
  %121 = phi %"struct.std::__1::__hash_node_base"* [ %80, %104 ], [ %120, %162 ]
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = icmp eq i64 %114, %131
  br i1 %132, label %133, label %166

133:                                              ; preds = %119
  %134 = load i8*, i8** %115, align 8
  %135 = select i1 %109, i8* %134, i8* %116
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i8**
  %137 = load i8*, i8** %136, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i8*
  %139 = select i1 %126, i8* %137, i8* %138
  br i1 %109, label %146, label %140

140:                                              ; preds = %133
  br i1 %117, label %162, label %141

141:                                              ; preds = %140
  %142 = ptrtoint i8* %134 to i64
  %143 = trunc i64 %142 to i8
  %144 = load i8, i8* %139, align 1
  %145 = icmp eq i8 %144, %143
  br i1 %145, label %147, label %166

146:                                              ; preds = %133
  br i1 %117, label %162, label %159

147:                                              ; preds = %141, %154
  %148 = phi i64 [ %151, %154 ], [ %113, %141 ]
  %149 = phi i8* [ %152, %154 ], [ %116, %141 ]
  %150 = phi i8* [ %155, %154 ], [ %139, %141 ]
  %151 = add i64 %148, -1
  %152 = getelementptr inbounds i8, i8* %149, i64 1
  %153 = icmp eq i64 %151, 0
  br i1 %153, label %162, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds i8, i8* %150, i64 1
  %156 = load i8, i8* %152, align 1
  %157 = load i8, i8* %155, align 1
  %158 = icmp eq i8 %156, %157
  br i1 %158, label %147, label %166

159:                                              ; preds = %146
  %160 = tail call i32 @bcmp(i8* %135, i8* %139, i64 %114) #13
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %166

162:                                              ; preds = %147, %140, %146, %159
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 0, i32 0
  %164 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base"* %164, null
  br i1 %165, label %166, label %119

166:                                              ; preds = %159, %162, %119, %141, %154, %100
  %167 = phi %"struct.std::__1::__hash_node_base"* [ %80, %100 ], [ %121, %154 ], [ %121, %159 ], [ %120, %162 ], [ %121, %119 ], [ %121, %141 ]
  %168 = bitcast %"struct.std::__1::__hash_node_base"* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %169, i64* %170, align 8
  %171 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %171, i64 %93
  %173 = bitcast %"struct.std::__1::__hash_node_base"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %168, align 8
  %176 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %176, i64 %93
  %178 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %178, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %179, align 8
  br label %180

180:                                              ; preds = %92, %166, %118
  %181 = phi %"struct.std::__1::__hash_node_base"* [ %80, %118 ], [ %82, %166 ], [ %80, %92 ]
  %182 = phi i64 [ %93, %118 ], [ %81, %166 ], [ %81, %92 ]
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %181, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base"* %184, null
  br i1 %185, label %194, label %79

186:                                              ; preds = %2
  %187 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %187, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %187, align 8
  %189 = icmp eq %"struct.std::__1::__hash_node_base"** %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %186
  %191 = bitcast %"struct.std::__1::__hash_node_base"** %188 to i8*
  tail call void @_ZdlPv(i8* %191) #14
  br label %192

192:                                              ; preds = %186, %190
  %193 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %193, align 8
  br label %194

194:                                              ; preds = %180, %70, %35, %192
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

; Function Attrs: nounwind ssp uwtable
declare void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece.38"*, i64) local_unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece.38"*, i64, i64) local_unnamed_addr #0 align 2

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #10

declare void @_ZN3re23RE2C1ERKNS_11StringPieceERKNS0_7OptionsE(%"class.re2::RE2"*, %"class.re2::StringPiece"* dereferenceable(16), %"class.re2::RE2::Options"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #11

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairINS_10unique_ptrIN3re23RE2ENS_14default_deleteIS4_EEEENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENSB_ISE_EEE24__emplace_back_slow_pathIJS7_SD_EEEvDpOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr"* dereferenceable(8), %"class.std::__1::basic_string.1"* dereferenceable(24)) local_unnamed_addr #6 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.std::__1::pair"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 5
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 576460752303423487
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #15
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.std::__1::pair"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = ashr exact i64 %19, 5
  %21 = icmp ult i64 %20, 288230376151711743
  br i1 %21, label %22, label %30

22:                                               ; preds = %15
  %23 = ashr exact i64 %19, 4
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = icmp ugt i64 %25, 576460752303423487
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  tail call void @abort() #15
  unreachable

30:                                               ; preds = %15, %27
  %31 = phi i64 [ %25, %27 ], [ 576460752303423487, %15 ]
  %32 = shl i64 %31, 5
  %33 = tail call i8* @_Znwm(i64 %32) #14
  %34 = bitcast i8* %33 to %"struct.std::__1::pair"*
  br label %35

35:                                               ; preds = %22, %30
  %36 = phi i64 [ %31, %30 ], [ 0, %22 ]
  %37 = phi %"struct.std::__1::pair"* [ %34, %30 ], [ null, %22 ]
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 %10
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 %36
  %40 = ptrtoint %"struct.std::__1::pair"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %43 = load i64, i64* %42, align 8
  store %"class.re2::RE2"* null, %"class.re2::RE2"** %41, align 8
  %44 = bitcast %"struct.std::__1::pair"* %38 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 %10, i32 1
  %46 = bitcast %"class.std::__1::basic_string.1"* %45 to i8*
  %47 = bitcast %"class.std::__1::basic_string.1"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #13
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 1
  %49 = ptrtoint %"struct.std::__1::pair"* %48 to i64
  %50 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %51 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %50, align 8
  %52 = ptrtoint %"struct.std::__1::pair"* %51 to i64
  %53 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %54 = icmp eq %"struct.std::__1::pair"* %53, %51
  br i1 %54, label %105, label %55

55:                                               ; preds = %35
  %56 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %53, i64 -1, i32 0, i32 0, i32 0, i32 0
  %57 = ptrtoint %"class.re2::RE2"** %56 to i64
  %58 = sub i64 %57, %52
  %59 = and i64 %58, 32
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %72

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 -1
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %53, i64 -1
  %64 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = bitcast %"struct.std::__1::pair"* %63 to i64*
  %66 = load i64, i64* %65, align 8
  store %"class.re2::RE2"* null, %"class.re2::RE2"** %64, align 8
  %67 = bitcast %"struct.std::__1::pair"* %62 to i64*
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 -1, i32 1
  %69 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %53, i64 -1, i32 1
  %70 = bitcast %"class.std::__1::basic_string.1"* %68 to i8*
  %71 = bitcast %"class.std::__1::basic_string.1"* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 24, i1 false) #13
  br label %72

72:                                               ; preds = %61, %55
  %73 = phi %"struct.std::__1::pair"* [ undef, %55 ], [ %62, %61 ]
  %74 = phi %"struct.std::__1::pair"* [ %38, %55 ], [ %62, %61 ]
  %75 = phi %"struct.std::__1::pair"* [ %53, %55 ], [ %63, %61 ]
  %76 = icmp ult i64 %58, 32
  br i1 %76, label %101, label %77

77:                                               ; preds = %72, %77
  %78 = phi %"struct.std::__1::pair"* [ %90, %77 ], [ %74, %72 ]
  %79 = phi %"struct.std::__1::pair"* [ %91, %77 ], [ %75, %72 ]
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %78, i64 -1
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %79, i64 -1
  %82 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %81, i64 0, i32 0, i32 0, i32 0, i32 0
  %83 = bitcast %"struct.std::__1::pair"* %81 to i64*
  %84 = load i64, i64* %83, align 8
  store %"class.re2::RE2"* null, %"class.re2::RE2"** %82, align 8
  %85 = bitcast %"struct.std::__1::pair"* %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %78, i64 -1, i32 1
  %87 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %79, i64 -1, i32 1
  %88 = bitcast %"class.std::__1::basic_string.1"* %86 to i8*
  %89 = bitcast %"class.std::__1::basic_string.1"* %87 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 24, i1 false) #13
  %90 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %78, i64 -2
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %79, i64 -2
  %92 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %91, i64 0, i32 0, i32 0, i32 0, i32 0
  %93 = bitcast %"struct.std::__1::pair"* %91 to i64*
  %94 = load i64, i64* %93, align 8
  store %"class.re2::RE2"* null, %"class.re2::RE2"** %92, align 8
  %95 = bitcast %"struct.std::__1::pair"* %90 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %78, i64 -2, i32 1
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %79, i64 -2, i32 1
  %98 = bitcast %"class.std::__1::basic_string.1"* %96 to i8*
  %99 = bitcast %"class.std::__1::basic_string.1"* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 24, i1 false) #13
  %100 = icmp eq %"struct.std::__1::pair"* %91, %51
  br i1 %100, label %101, label %77

101:                                              ; preds = %77, %72
  %102 = phi %"struct.std::__1::pair"* [ %73, %72 ], [ %90, %77 ]
  %103 = load i64, i64* %7, align 8
  %104 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  br label %105

105:                                              ; preds = %35, %101
  %106 = phi %"struct.std::__1::pair"* [ %104, %101 ], [ %51, %35 ]
  %107 = phi %"struct.std::__1::pair"* [ %102, %101 ], [ %38, %35 ]
  %108 = phi i64 [ %103, %101 ], [ %52, %35 ]
  %109 = ptrtoint %"struct.std::__1::pair"* %107 to i64
  store i64 %109, i64* %7, align 8
  store i64 %49, i64* %5, align 8
  store i64 %40, i64* %17, align 8
  %110 = inttoptr i64 %108 to %"struct.std::__1::pair"*
  %111 = icmp eq %"struct.std::__1::pair"* %106, %110
  br i1 %111, label %131, label %112

112:                                              ; preds = %105, %129
  %113 = phi %"struct.std::__1::pair"* [ %114, %129 ], [ %106, %105 ]
  %114 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %113, i64 -1
  %115 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %113, i64 -1, i32 1
  %116 = bitcast %"class.std::__1::basic_string.1"* %115 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = load i8, i8* %117, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %112
  %121 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  tail call void @_ZdlPv(i8* %122) #14
  br label %123

123:                                              ; preds = %120, %112
  %124 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  %125 = load %"class.re2::RE2"*, %"class.re2::RE2"** %124, align 8
  store %"class.re2::RE2"* null, %"class.re2::RE2"** %124, align 8
  %126 = icmp eq %"class.re2::RE2"* %125, null
  br i1 %126, label %129, label %127

127:                                              ; preds = %123
  tail call void @_ZN3re23RE2D1Ev(%"class.re2::RE2"* nonnull %125) #13
  %128 = bitcast %"class.re2::RE2"* %125 to i8*
  tail call void @_ZdlPv(i8* %128) #14
  br label %129

129:                                              ; preds = %127, %123
  %130 = icmp eq %"struct.std::__1::pair"* %114, %110
  br i1 %130, label %131, label %112

131:                                              ; preds = %129, %105
  %132 = icmp eq i64 %108, 0
  br i1 %132, label %135, label %133

133:                                              ; preds = %131
  %134 = inttoptr i64 %108 to i8*
  tail call void @_ZdlPv(i8* %134) #14
  br label %135

135:                                              ; preds = %131, %133
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #9

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN8autofill12_GLOBAL__N_19GetMapKeyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!5 = distinct !{!5, !"_ZN8autofill12_GLOBAL__N_19GetMapKeyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!8 = distinct !{!8, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!9 = !{i64 0, i64 65}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorINS_4pairINS_10unique_ptrIN3re23RE2ENS_14default_deleteISC_EEEES7_EENS5_ISG_EEEEEENS_22__unordered_map_hasherIS7_SJ_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SJ_SO_SM_Lb1EEENS5_ISJ_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS7_EEENSY_IJEEEEEENSA_INS_11__hash_nodeISJ_PvEENS_22__hash_node_destructorINS5_IS15_EEEEEEmOT_DpOT0_: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorINS_4pairINS_10unique_ptrIN3re23RE2ENS_14default_deleteISC_EEEES7_EENS5_ISG_EEEEEENS_22__unordered_map_hasherIS7_SJ_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SJ_SO_SM_Lb1EEENS5_ISJ_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS7_EEENSY_IJEEEEEENSA_INS_11__hash_nodeISJ_PvEENS_22__hash_node_destructorINS5_IS15_EEEEEEmOT_DpOT0_"}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
