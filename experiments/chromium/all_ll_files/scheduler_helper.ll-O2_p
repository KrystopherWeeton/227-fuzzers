; ModuleID = '../../third_party/blink/renderer/platform/scheduler/common/scheduler_helper.cc'
source_filename = "../../third_party/blink/renderer/platform/scheduler/common/scheduler_helper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::scheduler::SchedulerHelper" = type { %"class.base::sequence_manager::SequenceManager::Observer", %"class.base::sequence_manager::SequenceManager"*, %class.scoped_refptr, %"class.blink::scheduler::SchedulerHelper::Observer"*, %"class.blink::scheduler::UkmTaskSampler", %"class.absl::optional" }
%"class.base::sequence_manager::SequenceManager::Observer" = type { i32 (...)** }
%"class.base::sequence_manager::SequenceManager" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::scheduler::SchedulerHelper::Observer" = type { i32 (...)** }
%"class.blink::scheduler::UkmTaskSampler" = type { double, double, %"class.std::__1::mersenne_twister_engine" }
%"class.std::__1::mersenne_twister_engine" = type { [312 x i64], i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::SimpleTaskExecutor" }
%"class.base::SimpleTaskExecutor" = type { %"class.base::TaskExecutor", %class.scoped_refptr, %"class.base::TaskExecutor"* }
%"class.base::TaskExecutor" = type { i32 (...)** }
%"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings" = type { double }
%"class.base::sequence_manager::TaskQueue" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.2", %"class.base::internal::CheckedLock", %"class.std::__1::unique_ptr", %"class.base::WeakPtr", %class.scoped_refptr.3, %class.scoped_refptr, i32, i32, i8*, %"class.base::WeakPtrFactory.153" }
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::CheckedLock" = type { %"class.base::Lock" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::sequence_manager::internal::TaskQueueImpl" = type <{ i8*, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %class.scoped_refptr.3, %class.scoped_refptr.107, %"class.base::internal::CheckedLock", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread", %"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly", %"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag", i8, i8, i8, [5 x i8] }>
%"class.base::sequence_manager::internal::SequenceManagerImpl" = type { %"class.base::sequence_manager::SequenceManager", %"class.base::sequence_manager::internal::SequencedTaskSource", %"class.base::sequence_manager::internal::TaskQueueSelector::Observer", %"class.base::RunLoop::NestingObserver", %class.scoped_refptr.3, %"class.base::sequence_manager::internal::EnqueueOrderGenerator", %"class.std::__1::unique_ptr.10", %"struct.base::sequence_manager::SequenceManager::Settings", %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings", i32, %"class.base::sequence_manager::internal::AtomicFlagSet", i32, %"struct.base::sequence_manager::internal::SequenceManagerImpl::MainThreadOnly", %"class.base::WeakPtrFactory" }
%"class.base::sequence_manager::internal::SequencedTaskSource" = type { i32 (...)** }
%"class.base::sequence_manager::internal::TaskQueueSelector::Observer" = type { i32 (...)** }
%"class.base::RunLoop::NestingObserver" = type { i32 (...)** }
%"class.base::sequence_manager::internal::EnqueueOrderGenerator" = type { %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i64 }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.base::sequence_manager::internal::ThreadController"* }
%"class.base::sequence_manager::internal::ThreadController" = type { i32 (...)** }
%"struct.base::sequence_manager::SequenceManager::Settings" = type <{ i32, i8, [3 x i8], %"class.base::TickClock"*, i8, [7 x i8] }>
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::sequence_manager::internal::AtomicFlagSet" = type { %class.scoped_refptr.3, %"class.std::__1::unique_ptr.14", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.base::sequence_manager::internal::AtomicFlagSet::Group" = type { %"struct.std::__1::atomic.5", i64, [64 x %"class.base::RepeatingCallback.154"], %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"class.std::__1::unique_ptr.14", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"class.base::RepeatingCallback.154" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.20 }
%class.scoped_refptr.20 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.21", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.21" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.base::sequence_manager::internal::SequenceManagerImpl::MainThreadOnly" = type { i32, %"class.base::circular_deque", %"struct.base::debug::CrashKeyString"*, %"struct.base::debug::CrashKeyString"*, %"struct.base::debug::CrashKeyString"*, %"struct.std::__1::array.23", %"class.std::__1::mersenne_twister_engine", %"class.std::__1::uniform_real_distribution", %"class.base::sequence_manager::internal::TaskQueueSelector", %"class.base::ObserverList", %"class.base::ObserverList.42", %"class.std::__1::set", %"class.std::__1::unique_ptr.54", i8, %"class.base::TimeTicks", %"class.std::__1::set.60", %"class.std::__1::map", %"class.std::__1::map", i8, i8, %"class.std::__1::deque", %"class.base::sequence_manager::SequenceManager::Observer"*, %"class.base::ObserverList.87", %"class.std::__1::multiset" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"struct.base::sequence_manager::internal::TaskQueueImpl::DeferredNonNestableTask"*, i64 }
%"struct.base::sequence_manager::internal::TaskQueueImpl::DeferredNonNestableTask" = type <{ %"struct.base::sequence_manager::Task", %"class.base::sequence_manager::internal::TaskQueueImpl"*, i32, [4 x i8] }>
%"struct.base::sequence_manager::Task" = type { %"struct.base::PendingTask.base", i8, i8, i8, %class.scoped_refptr.22, %"class.base::sequence_manager::EnqueueOrder" }
%"struct.base::PendingTask.base" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array", i32, [4 x i8], i8*, i32, i8 }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.std::__1::array" = type { [4 x i8*] }
%class.scoped_refptr.22 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::sequence_manager::EnqueueOrder" = type { i64 }
%"struct.base::debug::CrashKeyString" = type <{ i8*, i32, [4 x i8] }>
%"struct.std::__1::array.23" = type { [64 x i8] }
%"class.std::__1::uniform_real_distribution" = type { %"class.std::__1::uniform_real_distribution<double>::param_type" }
%"class.std::__1::uniform_real_distribution<double>::param_type" = type { double, double }
%"class.base::sequence_manager::internal::TaskQueueSelector" = type { %"class.base::sequence_manager::internal::WorkQueueSets::Observer", %class.scoped_refptr.3, %"struct.std::__1::array.24", %"class.base::sequence_manager::internal::TaskQueueSelector::ActivePriorityTracker", %"class.base::sequence_manager::internal::WorkQueueSets", %"class.base::sequence_manager::internal::WorkQueueSets", i64, %"class.base::sequence_manager::internal::TaskQueueSelector::Observer"* }
%"class.base::sequence_manager::internal::WorkQueueSets::Observer" = type { i32 (...)** }
%"struct.std::__1::array.24" = type { [7 x i32] }
%"class.base::sequence_manager::internal::TaskQueueSelector::ActivePriorityTracker" = type { i64 }
%"class.base::sequence_manager::internal::WorkQueueSets" = type { i8*, %"struct.std::__1::array.25", %"class.base::sequence_manager::internal::WorkQueueSets::Observer"* }
%"struct.std::__1::array.25" = type { [7 x %"class.base::internal::IntrusiveHeap"] }
%"class.base::internal::IntrusiveHeap" = type { %"class.base::IntrusiveHeap" }
%"class.base::IntrusiveHeap" = type { %"struct.base::IntrusiveHeap<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder, base::internal::IntrusiveHeapImpl<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder> >::Impl" }
%"struct.base::IntrusiveHeap<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder, base::internal::IntrusiveHeapImpl<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder> >::Impl" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder"*, %"struct.base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder"*, %"class.std::__1::__compressed_pair.32" }
%"struct.base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder" = type { %"class.base::sequence_manager::EnqueueOrder", %"class.base::sequence_manager::internal::WorkQueue"* }
%"class.base::sequence_manager::internal::WorkQueue" = type <{ %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", %"class.base::sequence_manager::internal::WorkQueueSets"*, %"class.base::sequence_manager::internal::TaskQueueImpl"*, i64, %"class.base::HeapHandle", i8*, %"class.base::sequence_manager::EnqueueOrder", i32, [4 x i8] }>
%"class.base::sequence_manager::internal::LazilyDeallocatedDeque" = type { %"class.std::__1::unique_ptr.26", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, i64, i64, %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* }
%"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring" = type { i64, i64, i64, %"struct.base::sequence_manager::Task"*, %"class.std::__1::unique_ptr.26" }
%"class.base::HeapHandle" = type { i64 }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder"* }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.35", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.37" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::ObserverList.42" = type <{ %"class.std::__1::vector.35", %"class.base::LinkedList.43", i64, i32, [4 x i8] }>
%"class.base::LinkedList.43" = type { %"class.base::LinkNode.44" }
%"class.base::LinkNode.44" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { i64 }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.base::sequence_manager::internal::RealTimeDomain"* }
%"class.base::sequence_manager::internal::RealTimeDomain" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::set.60" = type { %"class.std::__1::__tree.61" }
%"class.std::__1::__tree.61" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.62", %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.70" }
%"class.std::__1::__tree.70" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.71", %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.83" }
%"struct.std::__1::__split_buffer" = type { %"struct.base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask"**, %"struct.base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask"**, %"struct.base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask"**, %"class.std::__1::__compressed_pair.78" }
%"struct.base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask" = type { %"struct.base::sequence_manager::Task", %"class.base::sequence_manager::internal::TaskQueueImpl"*, i8*, %"class.base::sequence_manager::TaskQueue::TaskTiming", i8, i32 }
%"class.base::sequence_manager::TaskQueue::TaskTiming" = type { i32, i8, i8, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::ThreadTicks", %"class.base::ThreadTicks" }
%"class.base::ThreadTicks" = type { %"class.base::time_internal::TimeBase.77" }
%"class.base::time_internal::TimeBase.77" = type { i64 }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"struct.base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask"** }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.base::ObserverList.87" = type <{ %"class.std::__1::vector.35", %"class.base::LinkedList.88", i64, i32, [4 x i8] }>
%"class.base::LinkedList.88" = type { %"class.base::LinkNode.89" }
%"class.base::LinkNode.89" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::multiset" = type { %"class.std::__1::__tree.91" }
%"class.std::__1::__tree.91" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.92", %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.100 }
%class.scoped_refptr.100 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.101", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.101" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.102" }
%"struct.std::__1::atomic.102" = type { %"struct.std::__1::__atomic_base.103" }
%"struct.std::__1::__atomic_base.103" = type { %"struct.std::__1::__atomic_base.104" }
%"struct.std::__1::__atomic_base.104" = type { %"struct.std::__1::__cxx_atomic_impl.105" }
%"struct.std::__1::__cxx_atomic_impl.105" = type { %"struct.std::__1::__cxx_atomic_base_impl.106" }
%"struct.std::__1::__cxx_atomic_base_impl.106" = type { i8 }
%class.scoped_refptr.107 = type { %"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster"* }
%"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster" = type { %"class.base::RefCountedThreadSafe.108", [4 x i8], %"class.base::internal::OperationsController", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::RefCountedThreadSafe.108" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::OperationsController" = type { %"struct.std::__1::atomic.109", [4 x i8], %"class.base::WaitableEvent" }
%"struct.std::__1::atomic.109" = type { %"struct.std::__1::__atomic_base.110" }
%"struct.std::__1::__atomic_base.110" = type { %"struct.std::__1::__atomic_base.111" }
%"struct.std::__1::__atomic_base.111" = type { %"struct.std::__1::__cxx_atomic_impl.112" }
%"struct.std::__1::__cxx_atomic_impl.112" = type { %"struct.std::__1::__cxx_atomic_base_impl.113" }
%"struct.std::__1::__cxx_atomic_base_impl.113" = type { i32 }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.114, i8, [7 x i8] }>
%class.scoped_refptr.114 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.115", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.115" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.116" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread" = type { %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", i8, i8, i8, %"class.base::RepeatingCallback", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" }
%"class.base::sequence_manager::TimeDomain" = type opaque
%"class.base::sequence_manager::TaskQueue::Observer" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" = type <{ i8, [7 x i8], %"class.absl::optional.120", i8, [7 x i8] }>
%"class.absl::optional.120" = type { %"class.absl::optional_internal::optional_data.121" }
%"class.absl::optional_internal::optional_data.121" = type { %"class.absl::optional_internal::optional_data_base.122" }
%"class.absl::optional_internal::optional_data_base.122" = type { %"class.absl::optional_internal::optional_data_dtor_base.123" }
%"class.absl::optional_internal::optional_data_dtor_base.123" = type { i8, %union.anon.124 }
%union.anon.124 = type { %"class.base::TimeTicks" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly" = type <{ %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue", %"class.base::ObserverList", %"class.base::HeapHandle", i8, [7 x i8], %"class.base::trace_event::BlameContext"*, %"class.base::sequence_manager::EnqueueOrder", %"class.absl::optional.120", %"class.base::sequence_manager::EnqueueOrder", %"class.base::sequence_manager::EnqueueOrder", %"class.base::RepeatingCallback.142", %"class.base::RepeatingCallback.143", %"class.absl::optional.144", i8, [7 x i8], %"class.absl::optional.120", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.base::sequence_manager::internal::WorkQueue"* }
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue" = type { %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue", i32, [4 x i8] }
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue" = type { %"class.std::__1::priority_queue.base", [7 x i8] }
%"class.std::__1::priority_queue.base" = type <{ %"class.std::__1::vector.133", %"struct.std::__1::less.140" }>
%"class.std::__1::vector.133" = type { %"class.std::__1::__vector_base.134" }
%"class.std::__1::__vector_base.134" = type { %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"*, %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"struct.base::sequence_manager::Task"* }
%"struct.std::__1::less.140" = type { i8 }
%"class.base::trace_event::BlameContext" = type opaque
%"class.base::RepeatingCallback.142" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.143" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.absl::optional.144" = type { %"class.absl::optional_internal::optional_data.145" }
%"class.absl::optional_internal::optional_data.145" = type { %"class.absl::optional_internal::optional_data_base.146" }
%"class.absl::optional_internal::optional_data_base.146" = type { %"class.absl::optional_internal::optional_data_dtor_base.147" }
%"class.absl::optional_internal::optional_data_dtor_base.147" = type { i8, %union.anon.148 }
%union.anon.148 = type { %"struct.base::sequence_manager::internal::DelayedWakeUp" }
%"struct.base::sequence_manager::internal::DelayedWakeUp" = type { %"class.base::TimeTicks", i32, i32 }
%"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag" = type { %"class.base::sequence_manager::internal::AtomicFlagSet"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.152 }
%class.scoped_refptr.152 = type { %"class.base::internal::WeakReference::Flag"* }
%class.scoped_refptr.3 = type { %"class.base::sequence_manager::internal::AssociatedThreadId"* }
%"class.base::sequence_manager::internal::AssociatedThreadId" = type { %"class.base::RefCountedThreadSafe.4", %"struct.std::__1::atomic" }
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.153" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.base::sequence_manager::TaskTimeObserver" = type { i32 (...)** }

$_ZN5blink9scheduler15SchedulerHelper17ShutdownAllQueuesEv = comdat any

@_ZTVN5blink9scheduler15SchedulerHelperE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::scheduler::SchedulerHelper"*)* @_ZN5blink9scheduler15SchedulerHelperD2Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::SchedulerHelper"*)* @_ZN5blink9scheduler15SchedulerHelperD0Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::SchedulerHelper"*)* @_ZN5blink9scheduler15SchedulerHelper20OnBeginNestedRunLoopEv to i8*), i8* bitcast (void (%"class.blink::scheduler::SchedulerHelper"*)* @_ZN5blink9scheduler15SchedulerHelper19OnExitNestedRunLoopEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::scheduler::SchedulerHelper"*)* @_ZN5blink9scheduler15SchedulerHelper17ShutdownAllQueuesEv to i8*)] }, align 8

@_ZN5blink9scheduler15SchedulerHelperD1Ev = hidden unnamed_addr alias void (%"class.blink::scheduler::SchedulerHelper"*), void (%"class.blink::scheduler::SchedulerHelper"*)* @_ZN5blink9scheduler15SchedulerHelperD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15SchedulerHelperC2EPN4base16sequence_manager15SequenceManagerE(%"class.blink::scheduler::SchedulerHelper"*, %"class.base::sequence_manager::SequenceManager"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink9scheduler15SchedulerHelperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 1
  store %"class.base::sequence_manager::SequenceManager"* %1, %"class.base::sequence_manager::SequenceManager"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 2, i32 0
  %6 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 4
  %7 = bitcast %"class.base::sequence_manager::SequenceManager"* %1 to %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"* (%"class.base::sequence_manager::SequenceManager"*)***
  %8 = bitcast %"class.base::SingleThreadTaskRunner"** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  %9 = load %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"* (%"class.base::sequence_manager::SequenceManager"*)**, %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"* (%"class.base::sequence_manager::SequenceManager"*)*** %7, align 8
  %10 = getelementptr inbounds %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"* (%"class.base::sequence_manager::SequenceManager"*)*, %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"* (%"class.base::sequence_manager::SequenceManager"*)** %9, i64 19
  %11 = load %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"* (%"class.base::sequence_manager::SequenceManager"*)*, %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"* (%"class.base::sequence_manager::SequenceManager"*)** %10, align 8
  %12 = tail call dereferenceable(8) %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"* %11(%"class.base::sequence_manager::SequenceManager"* %1) #6
  %13 = getelementptr inbounds %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings", %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"* %12, i64 0, i32 0
  %14 = load double, double* %13, align 8
  tail call void @_ZN5blink9scheduler14UkmTaskSamplerC1Edd(%"class.blink::scheduler::UkmTaskSampler"* %6, double %14, double 1.000000e-04) #6
  %15 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast %union.anon* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #6
  %18 = load %"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager"** %4, align 8
  %19 = bitcast %"class.base::sequence_manager::SequenceManager"* %18 to void (%"class.base::sequence_manager::SequenceManager"*, i32)***
  %20 = load void (%"class.base::sequence_manager::SequenceManager"*, i32)**, void (%"class.base::sequence_manager::SequenceManager"*, i32)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.base::sequence_manager::SequenceManager"*, i32)*, void (%"class.base::sequence_manager::SequenceManager"*, i32)** %20, i64 16
  %22 = load void (%"class.base::sequence_manager::SequenceManager"*, i32)*, void (%"class.base::sequence_manager::SequenceManager"*, i32)** %21, align 8
  tail call void %22(%"class.base::sequence_manager::SequenceManager"* %18, i32 4) #6
  ret void
}

declare void @_ZN5blink9scheduler14UkmTaskSamplerC1Edd(%"class.blink::scheduler::UkmTaskSampler"*, double, double) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15SchedulerHelper21AttachToCurrentThreadEv(%"class.blink::scheduler::SchedulerHelper"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN4base18SimpleTaskExecutorD1Ev(%"class.base::SimpleTaskExecutor"* %6) #6
  store i8 0, i8* %2, align 8
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 2, i32 0
  %10 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %9, align 8
  %11 = icmp eq %"class.base::SingleThreadTaskRunner"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 1 monotonic
  br label %15

15:                                               ; preds = %7, %12
  tail call void @_ZN4base18SimpleTaskExecutorC1E13scoped_refptrINS_22SingleThreadTaskRunnerEE(%"class.base::SimpleTaskExecutor"* %8, %"class.base::SingleThreadTaskRunner"* %10) #6
  store i8 1, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15SchedulerHelper17InitDefaultQueuesE13scoped_refptrIN4base16sequence_manager9TaskQueueEES6_NS_8TaskTypeE(%"class.blink::scheduler::SchedulerHelper"* nocapture, %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  tail call void @_ZN4base16sequence_manager9TaskQueue16SetQueuePriorityENS1_13QueuePriorityE(%"class.base::sequence_manager::TaskQueue"* %2, i8 zeroext 0) #6
  %5 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN4base16sequence_manager9TaskQueue16CreateTaskRunnerEh(%"class.base::sequence_manager::TaskQueue"* %1, i8 zeroext %3) #6
  %6 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 2
  %7 = ptrtoint %"class.base::SingleThreadTaskRunner"* %5 to i64
  %8 = bitcast %class.scoped_refptr* %6 to i64*
  %9 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %6, i64 0, i32 0
  %10 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %9, align 8
  store i64 %7, i64* %8, align 8
  %11 = icmp eq %"class.base::SingleThreadTaskRunner"* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %10, i64 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acq_rel
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %13, i64 -2
  %19 = bitcast %"class.base::RefCountedThreadSafe"* %18 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %19) #6
  br label %20

20:                                               ; preds = %17, %12
  %21 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %9, align 8
  br label %22

22:                                               ; preds = %20, %4
  %23 = phi %"class.base::SingleThreadTaskRunner"* [ %21, %20 ], [ %5, %4 ]
  %24 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 1
  %25 = load %"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager"** %24, align 8
  %26 = icmp eq %"class.base::SingleThreadTaskRunner"* %23, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %23, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 1 monotonic
  br label %30

30:                                               ; preds = %22, %27
  %31 = bitcast %"class.base::sequence_manager::SequenceManager"* %25 to void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::SingleThreadTaskRunner"*)***
  %32 = load void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::SingleThreadTaskRunner"*)**, void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::SingleThreadTaskRunner"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::SingleThreadTaskRunner"*)*, void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::SingleThreadTaskRunner"*)** %32, i64 13
  %34 = load void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::SingleThreadTaskRunner"*)*, void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::SingleThreadTaskRunner"*)** %33, align 8
  tail call void %34(%"class.base::sequence_manager::SequenceManager"* %25, %"class.base::SingleThreadTaskRunner"* %23) #6
  %35 = icmp eq %"class.base::sequence_manager::TaskQueue"* %2, null
  br i1 %35, label %48, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %2, i64 0, i32 1
  %38 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw sub i32* %38, i32 1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %48

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %37, i64 -2
  %43 = bitcast %"class.base::RefCountedThreadSafe.2"* %42 to %"class.base::sequence_manager::TaskQueue"*
  %44 = bitcast %"class.base::RefCountedThreadSafe.2"* %42 to void (%"class.base::sequence_manager::TaskQueue"*)***
  %45 = load void (%"class.base::sequence_manager::TaskQueue"*)**, void (%"class.base::sequence_manager::TaskQueue"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %45, i64 3
  %47 = load void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %46, align 8
  tail call void %47(%"class.base::sequence_manager::TaskQueue"* nonnull %43) #6
  br label %48

48:                                               ; preds = %30, %36, %41
  %49 = icmp eq %"class.base::sequence_manager::TaskQueue"* %1, null
  br i1 %49, label %62, label %50

50:                                               ; preds = %48
  %51 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %1, i64 0, i32 1
  %52 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw sub i32* %52, i32 1 acq_rel
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %62

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %51, i64 -2
  %57 = bitcast %"class.base::RefCountedThreadSafe.2"* %56 to %"class.base::sequence_manager::TaskQueue"*
  %58 = bitcast %"class.base::RefCountedThreadSafe.2"* %56 to void (%"class.base::sequence_manager::TaskQueue"*)***
  %59 = load void (%"class.base::sequence_manager::TaskQueue"*)**, void (%"class.base::sequence_manager::TaskQueue"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %59, i64 3
  %61 = load void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %60, align 8
  tail call void %61(%"class.base::sequence_manager::TaskQueue"* nonnull %57) #6
  br label %62

62:                                               ; preds = %48, %50, %55
  ret void
}

declare void @_ZN4base16sequence_manager9TaskQueue16SetQueuePriorityENS1_13QueuePriorityE(%"class.base::sequence_manager::TaskQueue"*, i8 zeroext) local_unnamed_addr #1

declare %"class.base::SingleThreadTaskRunner"* @_ZN4base16sequence_manager9TaskQueue16CreateTaskRunnerEh(%"class.base::sequence_manager::TaskQueue"*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15SchedulerHelperD2Ev(%"class.blink::scheduler::SchedulerHelper"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink9scheduler15SchedulerHelperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 1
  %4 = load %"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager"** %3, align 8
  %5 = icmp eq %"class.base::sequence_manager::SequenceManager"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.base::sequence_manager::SequenceManager"* %4 to void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager::Observer"*)***
  %8 = load void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager::Observer"*)**, void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager::Observer"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager::Observer"*)*, void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager::Observer"*)** %8, i64 5
  %10 = load void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager::Observer"*)*, void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager::Observer"*)** %9, align 8
  tail call void %10(%"class.base::sequence_manager::SequenceManager"* nonnull %4, %"class.base::sequence_manager::SequenceManager::Observer"* null) #6
  store %"class.base::sequence_manager::SequenceManager"* null, %"class.base::sequence_manager::SequenceManager"** %3, align 8
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN4base18SimpleTaskExecutorD1Ev(%"class.base::SimpleTaskExecutor"* %16) #6
  store i8 0, i8* %12, align 8
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 2, i32 0
  %19 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %18, align 8
  %20 = icmp eq %"class.base::SingleThreadTaskRunner"* %19, null
  br i1 %20, label %29, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %19, i64 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw sub i32* %23, i32 1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %29

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %22, i64 -2
  %28 = bitcast %"class.base::RefCountedThreadSafe"* %27 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %28) #6
  br label %29

29:                                               ; preds = %17, %21, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15SchedulerHelper8ShutdownEv(%"class.blink::scheduler::SchedulerHelper"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 1
  %3 = load %"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager"** %2, align 8
  %4 = icmp eq %"class.base::sequence_manager::SequenceManager"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::scheduler::SchedulerHelper"* %0 to void (%"class.blink::scheduler::SchedulerHelper"*)***
  %7 = load void (%"class.blink::scheduler::SchedulerHelper"*)**, void (%"class.blink::scheduler::SchedulerHelper"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::scheduler::SchedulerHelper"*)*, void (%"class.blink::scheduler::SchedulerHelper"*)** %7, i64 6
  %9 = load void (%"class.blink::scheduler::SchedulerHelper"*)*, void (%"class.blink::scheduler::SchedulerHelper"*)** %8, align 8
  tail call void %9(%"class.blink::scheduler::SchedulerHelper"* %0) #6
  %10 = load %"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager"** %2, align 8
  %11 = bitcast %"class.base::sequence_manager::SequenceManager"* %10 to void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager::Observer"*)***
  %12 = load void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager::Observer"*)**, void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager::Observer"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager::Observer"*)*, void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager::Observer"*)** %12, i64 5
  %14 = load void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager::Observer"*)*, void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager::Observer"*)** %13, align 8
  tail call void %14(%"class.base::sequence_manager::SequenceManager"* %10, %"class.base::sequence_manager::SequenceManager::Observer"* null) #6
  store %"class.base::sequence_manager::SequenceManager"* null, %"class.base::sequence_manager::SequenceManager"** %2, align 8
  br label %15

15:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15SchedulerHelperD0Ev(%"class.blink::scheduler::SchedulerHelper"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15SchedulerHelper26SetWorkBatchSizeForTestingEi(%"class.blink::scheduler::SchedulerHelper"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 1
  %4 = load %"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager"** %3, align 8
  %5 = bitcast %"class.base::sequence_manager::SequenceManager"* %4 to void (%"class.base::sequence_manager::SequenceManager"*, i32)***
  %6 = load void (%"class.base::sequence_manager::SequenceManager"*, i32)**, void (%"class.base::sequence_manager::SequenceManager"*, i32)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.base::sequence_manager::SequenceManager"*, i32)*, void (%"class.base::sequence_manager::SequenceManager"*, i32)** %6, i64 16
  %8 = load void (%"class.base::sequence_manager::SequenceManager"*, i32)*, void (%"class.base::sequence_manager::SequenceManager"*, i32)** %7, align 8
  tail call void %8(%"class.base::sequence_manager::SequenceManager"* %4, i32 %1) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9scheduler15SchedulerHelper31GetAndClearSystemIsQuiescentBitEv(%"class.blink::scheduler::SchedulerHelper"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 1
  %3 = load %"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager"** %2, align 8
  %4 = bitcast %"class.base::sequence_manager::SequenceManager"* %3 to i1 (%"class.base::sequence_manager::SequenceManager"*)***
  %5 = load i1 (%"class.base::sequence_manager::SequenceManager"*)**, i1 (%"class.base::sequence_manager::SequenceManager"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.base::sequence_manager::SequenceManager"*)*, i1 (%"class.base::sequence_manager::SequenceManager"*)** %5, i64 15
  %7 = load i1 (%"class.base::sequence_manager::SequenceManager"*)*, i1 (%"class.base::sequence_manager::SequenceManager"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.base::sequence_manager::SequenceManager"* %3) #6
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15SchedulerHelper15AddTaskObserverEPN4base12TaskObserverE(%"class.blink::scheduler::SchedulerHelper"* nocapture readonly, %"class.base::TaskObserver"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 1
  %4 = load %"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager"** %3, align 8
  %5 = icmp eq %"class.base::sequence_manager::SequenceManager"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.base::sequence_manager::SequenceManager"* %4 to %"class.base::sequence_manager::internal::SequenceManagerImpl"*
  %8 = bitcast %"class.base::sequence_manager::SequenceManager"* %4 to void (%"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::TaskObserver"*)***
  %9 = load void (%"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::TaskObserver"*)**, void (%"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::TaskObserver"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::TaskObserver"*)*, void (%"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::TaskObserver"*)** %9, i64 25
  %11 = load void (%"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::TaskObserver"*)*, void (%"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::TaskObserver"*)** %10, align 8
  tail call void %11(%"class.base::sequence_manager::internal::SequenceManagerImpl"* nonnull %7, %"class.base::TaskObserver"* %1) #6
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15SchedulerHelper18RemoveTaskObserverEPN4base12TaskObserverE(%"class.blink::scheduler::SchedulerHelper"* nocapture readonly, %"class.base::TaskObserver"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 1
  %4 = load %"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager"** %3, align 8
  %5 = icmp eq %"class.base::sequence_manager::SequenceManager"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.base::sequence_manager::SequenceManager"* %4 to %"class.base::sequence_manager::internal::SequenceManagerImpl"*
  %8 = bitcast %"class.base::sequence_manager::SequenceManager"* %4 to void (%"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::TaskObserver"*)***
  %9 = load void (%"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::TaskObserver"*)**, void (%"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::TaskObserver"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::TaskObserver"*)*, void (%"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::TaskObserver"*)** %9, i64 26
  %11 = load void (%"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::TaskObserver"*)*, void (%"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::TaskObserver"*)** %10, align 8
  tail call void %11(%"class.base::sequence_manager::internal::SequenceManagerImpl"* nonnull %7, %"class.base::TaskObserver"* %1) #6
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15SchedulerHelper19AddTaskTimeObserverEPN4base16sequence_manager16TaskTimeObserverE(%"class.blink::scheduler::SchedulerHelper"* nocapture readonly, %"class.base::sequence_manager::TaskTimeObserver"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 1
  %4 = load %"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager"** %3, align 8
  %5 = icmp eq %"class.base::sequence_manager::SequenceManager"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.base::sequence_manager::SequenceManager"* %4 to void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::TaskTimeObserver"*)***
  %8 = load void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::TaskTimeObserver"*)**, void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::TaskTimeObserver"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::TaskTimeObserver"*)*, void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::TaskTimeObserver"*)** %8, i64 6
  %10 = load void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::TaskTimeObserver"*)*, void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::TaskTimeObserver"*)** %9, align 8
  tail call void %10(%"class.base::sequence_manager::SequenceManager"* nonnull %4, %"class.base::sequence_manager::TaskTimeObserver"* %1) #6
  br label %11

11:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15SchedulerHelper22RemoveTaskTimeObserverEPN4base16sequence_manager16TaskTimeObserverE(%"class.blink::scheduler::SchedulerHelper"* nocapture readonly, %"class.base::sequence_manager::TaskTimeObserver"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 1
  %4 = load %"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager"** %3, align 8
  %5 = icmp eq %"class.base::sequence_manager::SequenceManager"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.base::sequence_manager::SequenceManager"* %4 to void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::TaskTimeObserver"*)***
  %8 = load void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::TaskTimeObserver"*)**, void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::TaskTimeObserver"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::TaskTimeObserver"*)*, void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::TaskTimeObserver"*)** %8, i64 7
  %10 = load void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::TaskTimeObserver"*)*, void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::TaskTimeObserver"*)** %9, align 8
  tail call void %10(%"class.base::sequence_manager::SequenceManager"* nonnull %4, %"class.base::sequence_manager::TaskTimeObserver"* %1) #6
  br label %11

11:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15SchedulerHelper11SetObserverEPNS1_8ObserverE(%"class.blink::scheduler::SchedulerHelper"*, %"class.blink::scheduler::SchedulerHelper::Observer"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 3
  store %"class.blink::scheduler::SchedulerHelper::Observer"* %1, %"class.blink::scheduler::SchedulerHelper::Observer"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 1
  %5 = load %"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 0
  %7 = bitcast %"class.base::sequence_manager::SequenceManager"* %5 to void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager::Observer"*)***
  %8 = load void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager::Observer"*)**, void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager::Observer"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager::Observer"*)*, void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager::Observer"*)** %8, i64 5
  %10 = load void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager::Observer"*)*, void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager::Observer"*)** %9, align 8
  tail call void %10(%"class.base::sequence_manager::SequenceManager"* %5, %"class.base::sequence_manager::SequenceManager::Observer"* %6) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15SchedulerHelper13ReclaimMemoryEv(%"class.blink::scheduler::SchedulerHelper"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 1
  %3 = load %"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager"** %2, align 8
  %4 = bitcast %"class.base::sequence_manager::SequenceManager"* %3 to void (%"class.base::sequence_manager::SequenceManager"*)***
  %5 = load void (%"class.base::sequence_manager::SequenceManager"*)**, void (%"class.base::sequence_manager::SequenceManager"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.base::sequence_manager::SequenceManager"*)*, void (%"class.base::sequence_manager::SequenceManager"*)** %5, i64 14
  %7 = load void (%"class.base::sequence_manager::SequenceManager"*)*, void (%"class.base::sequence_manager::SequenceManager"*)** %6, align 8
  tail call void %7(%"class.base::sequence_manager::SequenceManager"* %3) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::sequence_manager::TimeDomain"* @_ZNK5blink9scheduler15SchedulerHelper16real_time_domainEv(%"class.blink::scheduler::SchedulerHelper"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 1
  %3 = load %"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager"** %2, align 8
  %4 = bitcast %"class.base::sequence_manager::SequenceManager"* %3 to %"class.base::sequence_manager::TimeDomain"* (%"class.base::sequence_manager::SequenceManager"*)***
  %5 = load %"class.base::sequence_manager::TimeDomain"* (%"class.base::sequence_manager::SequenceManager"*)**, %"class.base::sequence_manager::TimeDomain"* (%"class.base::sequence_manager::SequenceManager"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain"* (%"class.base::sequence_manager::SequenceManager"*)*, %"class.base::sequence_manager::TimeDomain"* (%"class.base::sequence_manager::SequenceManager"*)** %5, i64 10
  %7 = load %"class.base::sequence_manager::TimeDomain"* (%"class.base::sequence_manager::SequenceManager"*)*, %"class.base::sequence_manager::TimeDomain"* (%"class.base::sequence_manager::SequenceManager"*)** %6, align 8
  %8 = tail call %"class.base::sequence_manager::TimeDomain"* %7(%"class.base::sequence_manager::SequenceManager"* %3) #6
  ret %"class.base::sequence_manager::TimeDomain"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15SchedulerHelper18RegisterTimeDomainEPN4base16sequence_manager10TimeDomainE(%"class.blink::scheduler::SchedulerHelper"* nocapture readonly, %"class.base::sequence_manager::TimeDomain"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 1
  %4 = load %"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager"** %3, align 8
  %5 = bitcast %"class.base::sequence_manager::SequenceManager"* %4 to void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::TimeDomain"*)***
  %6 = load void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::TimeDomain"*)**, void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::TimeDomain"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::TimeDomain"*)*, void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::TimeDomain"*)** %6, i64 8
  %8 = load void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::TimeDomain"*)*, void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::TimeDomain"*)** %7, align 8
  tail call void %8(%"class.base::sequence_manager::SequenceManager"* %4, %"class.base::sequence_manager::TimeDomain"* %1) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15SchedulerHelper20UnregisterTimeDomainEPN4base16sequence_manager10TimeDomainE(%"class.blink::scheduler::SchedulerHelper"* nocapture readonly, %"class.base::sequence_manager::TimeDomain"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 1
  %4 = load %"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager"** %3, align 8
  %5 = icmp eq %"class.base::sequence_manager::SequenceManager"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.base::sequence_manager::SequenceManager"* %4 to void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::TimeDomain"*)***
  %8 = load void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::TimeDomain"*)**, void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::TimeDomain"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::TimeDomain"*)*, void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::TimeDomain"*)** %8, i64 9
  %10 = load void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::TimeDomain"*)*, void (%"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::TimeDomain"*)** %9, align 8
  tail call void %10(%"class.base::sequence_manager::SequenceManager"* nonnull %4, %"class.base::sequence_manager::TimeDomain"* %1) #6
  br label %11

11:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15SchedulerHelper20OnBeginNestedRunLoopEv(%"class.blink::scheduler::SchedulerHelper"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 3
  %3 = load %"class.blink::scheduler::SchedulerHelper::Observer"*, %"class.blink::scheduler::SchedulerHelper::Observer"** %2, align 8
  %4 = icmp eq %"class.blink::scheduler::SchedulerHelper::Observer"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::scheduler::SchedulerHelper::Observer"* %3 to void (%"class.blink::scheduler::SchedulerHelper::Observer"*)***
  %7 = load void (%"class.blink::scheduler::SchedulerHelper::Observer"*)**, void (%"class.blink::scheduler::SchedulerHelper::Observer"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::scheduler::SchedulerHelper::Observer"*)*, void (%"class.blink::scheduler::SchedulerHelper::Observer"*)** %7, i64 2
  %9 = load void (%"class.blink::scheduler::SchedulerHelper::Observer"*)*, void (%"class.blink::scheduler::SchedulerHelper::Observer"*)** %8, align 8
  tail call void %9(%"class.blink::scheduler::SchedulerHelper::Observer"* nonnull %3) #6
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15SchedulerHelper19OnExitNestedRunLoopEv(%"class.blink::scheduler::SchedulerHelper"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 3
  %3 = load %"class.blink::scheduler::SchedulerHelper::Observer"*, %"class.blink::scheduler::SchedulerHelper::Observer"** %2, align 8
  %4 = icmp eq %"class.blink::scheduler::SchedulerHelper::Observer"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::scheduler::SchedulerHelper::Observer"* %3 to void (%"class.blink::scheduler::SchedulerHelper::Observer"*)***
  %7 = load void (%"class.blink::scheduler::SchedulerHelper::Observer"*)**, void (%"class.blink::scheduler::SchedulerHelper::Observer"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::scheduler::SchedulerHelper::Observer"*)*, void (%"class.blink::scheduler::SchedulerHelper::Observer"*)** %7, i64 3
  %9 = load void (%"class.blink::scheduler::SchedulerHelper::Observer"*)*, void (%"class.blink::scheduler::SchedulerHelper::Observer"*)** %8, align 8
  tail call void %9(%"class.blink::scheduler::SchedulerHelper::Observer"* nonnull %3) #6
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::TickClock"* @_ZNK5blink9scheduler15SchedulerHelper8GetClockEv(%"class.blink::scheduler::SchedulerHelper"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 1
  %3 = load %"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager"** %2, align 8
  %4 = icmp eq %"class.base::sequence_manager::SequenceManager"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.base::sequence_manager::SequenceManager"* %3 to %"class.base::TickClock"* (%"class.base::sequence_manager::SequenceManager"*)***
  %7 = load %"class.base::TickClock"* (%"class.base::sequence_manager::SequenceManager"*)**, %"class.base::TickClock"* (%"class.base::sequence_manager::SequenceManager"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.base::TickClock"* (%"class.base::sequence_manager::SequenceManager"*)*, %"class.base::TickClock"* (%"class.base::sequence_manager::SequenceManager"*)** %7, i64 11
  %9 = load %"class.base::TickClock"* (%"class.base::sequence_manager::SequenceManager"*)*, %"class.base::TickClock"* (%"class.base::sequence_manager::SequenceManager"*)** %8, align 8
  %10 = tail call %"class.base::TickClock"* %9(%"class.base::sequence_manager::SequenceManager"* nonnull %3) #6
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi %"class.base::TickClock"* [ %10, %5 ], [ null, %1 ]
  ret %"class.base::TickClock"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink9scheduler15SchedulerHelper8NowTicksEv(%"class.blink::scheduler::SchedulerHelper"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 1
  %3 = load %"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager"** %2, align 8
  %4 = icmp eq %"class.base::sequence_manager::SequenceManager"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.base::sequence_manager::SequenceManager"* %3 to i64 (%"class.base::sequence_manager::SequenceManager"*)***
  %7 = load i64 (%"class.base::sequence_manager::SequenceManager"*)**, i64 (%"class.base::sequence_manager::SequenceManager"*)*** %6, align 8
  %8 = getelementptr inbounds i64 (%"class.base::sequence_manager::SequenceManager"*)*, i64 (%"class.base::sequence_manager::SequenceManager"*)** %7, i64 12
  %9 = load i64 (%"class.base::sequence_manager::SequenceManager"*)*, i64 (%"class.base::sequence_manager::SequenceManager"*)** %8, align 8
  %10 = tail call i64 %9(%"class.base::sequence_manager::SequenceManager"* nonnull %3) #6
  br label %13

11:                                               ; preds = %1
  %12 = tail call i64 @_ZN4base9TimeTicks3NowEv() #6
  br label %13

13:                                               ; preds = %11, %5
  %14 = phi i64 [ %10, %5 ], [ %12, %11 ]
  ret i64 %14
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15SchedulerHelper13SetTimerSlackEN4base10TimerSlackE(%"class.blink::scheduler::SchedulerHelper"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 1
  %4 = load %"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager"** %3, align 8
  %5 = icmp eq %"class.base::sequence_manager::SequenceManager"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.base::sequence_manager::SequenceManager"* %4 to %"class.base::sequence_manager::internal::SequenceManagerImpl"*
  %8 = bitcast %"class.base::sequence_manager::SequenceManager"* %4 to void (%"class.base::sequence_manager::internal::SequenceManagerImpl"*, i32)***
  %9 = load void (%"class.base::sequence_manager::internal::SequenceManagerImpl"*, i32)**, void (%"class.base::sequence_manager::internal::SequenceManagerImpl"*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.base::sequence_manager::internal::SequenceManagerImpl"*, i32)*, void (%"class.base::sequence_manager::internal::SequenceManagerImpl"*, i32)** %9, i64 17
  %11 = load void (%"class.base::sequence_manager::internal::SequenceManagerImpl"*, i32)*, void (%"class.base::sequence_manager::internal::SequenceManagerImpl"*, i32)** %10, align 8
  tail call void %11(%"class.base::sequence_manager::internal::SequenceManagerImpl"* nonnull %7, i32 %1) #6
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink9scheduler15SchedulerHelper34GetSamplingRateForRecordingCPUTimeEv(%"class.blink::scheduler::SchedulerHelper"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 1
  %3 = load %"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager"** %2, align 8
  %4 = icmp eq %"class.base::sequence_manager::SequenceManager"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.base::sequence_manager::SequenceManager"* %3 to %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"* (%"class.base::sequence_manager::SequenceManager"*)***
  %7 = load %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"* (%"class.base::sequence_manager::SequenceManager"*)**, %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"* (%"class.base::sequence_manager::SequenceManager"*)*** %6, align 8
  %8 = getelementptr inbounds %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"* (%"class.base::sequence_manager::SequenceManager"*)*, %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"* (%"class.base::sequence_manager::SequenceManager"*)** %7, i64 19
  %9 = load %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"* (%"class.base::sequence_manager::SequenceManager"*)*, %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"* (%"class.base::sequence_manager::SequenceManager"*)** %8, align 8
  %10 = tail call dereferenceable(8) %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"* %9(%"class.base::sequence_manager::SequenceManager"* nonnull %3) #6
  %11 = getelementptr inbounds %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings", %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"* %10, i64 0, i32 0
  %12 = load double, double* %11, align 8
  br label %13

13:                                               ; preds = %1, %5
  %14 = phi double [ %12, %5 ], [ 0.000000e+00, %1 ]
  ret double %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9scheduler15SchedulerHelper23HasCPUTimingForEachTaskEv(%"class.blink::scheduler::SchedulerHelper"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::SchedulerHelper"* %0, i64 0, i32 1
  %3 = load %"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager"** %2, align 8
  %4 = icmp eq %"class.base::sequence_manager::SequenceManager"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.base::sequence_manager::SequenceManager"* %3 to %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"* (%"class.base::sequence_manager::SequenceManager"*)***
  %7 = load %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"* (%"class.base::sequence_manager::SequenceManager"*)**, %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"* (%"class.base::sequence_manager::SequenceManager"*)*** %6, align 8
  %8 = getelementptr inbounds %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"* (%"class.base::sequence_manager::SequenceManager"*)*, %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"* (%"class.base::sequence_manager::SequenceManager"*)** %7, i64 19
  %9 = load %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"* (%"class.base::sequence_manager::SequenceManager"*)*, %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"* (%"class.base::sequence_manager::SequenceManager"*)** %8, align 8
  %10 = tail call dereferenceable(8) %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"* %9(%"class.base::sequence_manager::SequenceManager"* nonnull %3) #6
  %11 = getelementptr inbounds %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings", %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"* %10, i64 0, i32 0
  %12 = load double, double* %11, align 8
  %13 = fcmp oeq double %12, 1.000000e+00
  br label %14

14:                                               ; preds = %1, %5
  %15 = phi i1 [ %13, %5 ], [ false, %1 ]
  ret i1 %15
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9scheduler15SchedulerHelper17ShutdownAllQueuesEv(%"class.blink::scheduler::SchedulerHelper"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind
declare void @_ZN4base18SimpleTaskExecutorD1Ev(%"class.base::SimpleTaskExecutor"*) unnamed_addr #5

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

declare void @_ZN4base18SimpleTaskExecutorC1E13scoped_refptrINS_22SingleThreadTaskRunnerEE(%"class.base::SimpleTaskExecutor"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
