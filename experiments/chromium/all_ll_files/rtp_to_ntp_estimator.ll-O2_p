; ModuleID = '../../third_party/webrtc/system_wrappers/source/rtp_to_ntp_estimator.cc'
source_filename = "../../third_party/webrtc/system_wrappers/source/rtp_to_ntp_estimator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.webrtc::RtpToNtpEstimator::RtcpMeasurement" = type { %"class.webrtc::NtpTime", i64 }
%"class.webrtc::NtpTime" = type { i64 }
%"class.webrtc::RtpToNtpEstimator" = type { i32, %"class.std::__1::list", %"class.absl::optional", %"class.webrtc::Unwrapper" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.webrtc::RtpToNtpEstimator::Parameters" }
%"struct.webrtc::RtpToNtpEstimator::Parameters" = type { double, double }
%"class.webrtc::Unwrapper" = type { %"class.absl::optional.1" }
%"class.absl::optional.1" = type { %"class.absl::optional_internal::optional_data.2" }
%"class.absl::optional_internal::optional_data.2" = type { %"class.absl::optional_internal::optional_data_base.3" }
%"class.absl::optional_internal::optional_data_base.3" = type { %"class.absl::optional_internal::optional_data_dtor_base.4" }
%"class.absl::optional_internal::optional_data_dtor_base.4" = type { i8, %union.anon.5 }
%union.anon.5 = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { double*, double*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { double* }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.webrtc::RtpToNtpEstimator::RtcpMeasurement" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.rtc::DiagnosticLogMessage" = type { i8*, i32, i32, i32, i32, i8*, i8, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.13 }
%union.anon.13 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [72 x i8] c"../../third_party/webrtc/system_wrappers/source/rtp_to_ntp_estimator.cc\00", align 1
@.str.1 = private unnamed_addr constant [56 x i8] c"Newer RTCP SR report with older RTP timestamp, dropping\00", align 1
@.str.2 = private unnamed_addr constant [71 x i8] c"Multiple consecutively invalid RTCP SR reports, clearing measurements.\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN6webrtc17RtpToNtpEstimator15RtcpMeasurementC1Ejjl = hidden unnamed_addr alias void (%"struct.webrtc::RtpToNtpEstimator::RtcpMeasurement"*, i32, i32, i64), void (%"struct.webrtc::RtpToNtpEstimator::RtcpMeasurement"*, i32, i32, i64)* @_ZN6webrtc17RtpToNtpEstimator15RtcpMeasurementC2Ejjl
@_ZN6webrtc17RtpToNtpEstimatorC1Ev = hidden unnamed_addr alias void (%"class.webrtc::RtpToNtpEstimator"*), void (%"class.webrtc::RtpToNtpEstimator"*)* @_ZN6webrtc17RtpToNtpEstimatorC2Ev
@_ZN6webrtc17RtpToNtpEstimatorD1Ev = hidden unnamed_addr alias void (%"class.webrtc::RtpToNtpEstimator"*), void (%"class.webrtc::RtpToNtpEstimator"*)* @_ZN6webrtc17RtpToNtpEstimatorD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc17RtpToNtpEstimator15RtcpMeasurementC2Ejjl(%"struct.webrtc::RtpToNtpEstimator::RtcpMeasurement"* nocapture, i32, i32, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.webrtc::RtpToNtpEstimator::RtcpMeasurement", %"struct.webrtc::RtpToNtpEstimator::RtcpMeasurement"* %0, i64 0, i32 0, i32 0
  %6 = zext i32 %1 to i64
  %7 = shl nuw i64 %6, 32
  %8 = zext i32 %2 to i64
  %9 = or i64 %7, %8
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"struct.webrtc::RtpToNtpEstimator::RtcpMeasurement", %"struct.webrtc::RtpToNtpEstimator::RtcpMeasurement"* %0, i64 0, i32 1
  store i64 %3, i64* %10, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc17RtpToNtpEstimator15RtcpMeasurement7IsEqualERKS1_(%"struct.webrtc::RtpToNtpEstimator::RtcpMeasurement"* nocapture readonly, %"struct.webrtc::RtpToNtpEstimator::RtcpMeasurement"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.webrtc::RtpToNtpEstimator::RtcpMeasurement", %"struct.webrtc::RtpToNtpEstimator::RtcpMeasurement"* %0, i64 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.webrtc::RtpToNtpEstimator::RtcpMeasurement", %"struct.webrtc::RtpToNtpEstimator::RtcpMeasurement"* %1, i64 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.webrtc::RtpToNtpEstimator::RtcpMeasurement", %"struct.webrtc::RtpToNtpEstimator::RtcpMeasurement"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.webrtc::RtpToNtpEstimator::RtcpMeasurement", %"struct.webrtc::RtpToNtpEstimator::RtcpMeasurement"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br label %14

14:                                               ; preds = %8, %2
  %15 = phi i1 [ true, %2 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc17RtpToNtpEstimatorC2Ev(%"class.webrtc::RtpToNtpEstimator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %4, %"struct.std::__1::__list_node_base"** %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %4, %"struct.std::__1::__list_node_base"** %6, align 8
  %7 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc17RtpToNtpEstimatorD2Ev(%"class.webrtc::RtpToNtpEstimator"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 1, i32 0
  %3 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %30, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %8 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %2, i64 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %2, i64 0, i32 0, i32 0
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %11, i64 0, i32 1
  %13 = bitcast %"struct.std::__1::__list_node_base"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %8, i64 0, i32 0
  %16 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %16, i64 0, i32 1
  %18 = bitcast %"struct.std::__1::__list_node_base"** %17 to i64*
  store i64 %14, i64* %18, align 8
  %19 = bitcast %"struct.std::__1::__list_node_base"* %8 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"struct.std::__1::__list_node_base"** %12 to i64**
  %22 = load i64*, i64** %21, align 8
  store i64 %20, i64* %22, align 8
  store i64 0, i64* %3, align 8
  %23 = icmp eq %"struct.std::__1::__list_node_base"* %8, %9
  br i1 %23, label %30, label %24

24:                                               ; preds = %6, %24
  %25 = phi %"struct.std::__1::__list_node_base"* [ %27, %24 ], [ %8, %6 ]
  %26 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 0, i32 1
  %27 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %26, align 8
  %28 = bitcast %"struct.std::__1::__list_node_base"* %25 to i8*
  tail call void @_ZdlPv(i8* %28) #11
  %29 = icmp eq %"struct.std::__1::__list_node_base"* %27, %9
  br i1 %29, label %30, label %24

30:                                               ; preds = %24, %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc17RtpToNtpEstimator16UpdateParametersEv(%"class.webrtc::RtpToNtpEstimator"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.std::__1::vector", align 8
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %5, 2
  br i1 %6, label %362, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::vector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #12
  %12 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #12
  %16 = bitcast double** %11 to i64*
  %17 = bitcast %"class.std::__1::vector"* %2 to i64*
  %18 = icmp ugt i64 %5, 2305843009213693951
  br i1 %18, label %19, label %20

19:                                               ; preds = %7
  tail call void @abort() #13
  unreachable

20:                                               ; preds = %7
  %21 = bitcast double** %10 to i64*
  %22 = shl i64 %5, 3
  %23 = tail call i8* @_Znwm(i64 %22) #11
  %24 = bitcast i8* %23 to double*
  %25 = ptrtoint i8* %23 to i64
  %26 = getelementptr inbounds double, double* %24, i64 %5
  %27 = ptrtoint double* %26 to i64
  %28 = ptrtoint i8* %23 to i64
  store i64 %28, i64* %17, align 8
  store i64 %25, i64* %21, align 8
  store i64 %27, i64* %16, align 8
  %29 = bitcast i8* %23 to double*
  %30 = bitcast double** %15 to i64*
  %31 = bitcast %"class.std::__1::vector"* %3 to i64*
  %32 = bitcast double** %14 to i64*
  %33 = shl i64 %5, 3
  %34 = tail call i8* @_Znwm(i64 %33) #11
  %35 = bitcast i8* %34 to double*
  %36 = ptrtoint i8* %34 to i64
  %37 = getelementptr inbounds double, double* %35, i64 %5
  %38 = ptrtoint double* %37 to i64
  %39 = ptrtoint i8* %34 to i64
  store i64 %39, i64* %31, align 8
  store i64 %36, i64* %32, align 8
  store i64 %38, i64* %30, align 8
  %40 = bitcast i8* %34 to double*
  %41 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %42 = bitcast %"struct.std::__1::__list_node_base"** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 1, i32 0, i32 0
  %45 = inttoptr i64 %43 to %"struct.std::__1::__list_node_base"*
  %46 = icmp eq %"struct.std::__1::__list_node_base"* %44, %45
  %47 = bitcast double** %10 to i64*
  %48 = bitcast double** %14 to i64*
  br i1 %46, label %55, label %198

49:                                               ; preds = %331
  %50 = load double*, double** %9, align 8
  %51 = bitcast double* %50 to i8*
  %52 = load i64, i64* %47, align 8
  %53 = load double*, double** %13, align 8
  %54 = bitcast double* %53 to i8*
  br label %55

55:                                               ; preds = %20, %49
  %56 = phi i8* [ %51, %49 ], [ %23, %20 ]
  %57 = phi double* [ %50, %49 ], [ %29, %20 ]
  %58 = phi i64 [ %332, %49 ], [ %36, %20 ]
  %59 = phi i8* [ %54, %49 ], [ %34, %20 ]
  %60 = phi double* [ %53, %49 ], [ %40, %20 ]
  %61 = phi i64 [ %52, %49 ], [ %25, %20 ]
  %62 = ptrtoint double* %57 to i64
  %63 = sub i64 %61, %62
  %64 = ashr exact i64 %63, 3
  %65 = icmp eq i64 %63, 0
  %66 = select i1 %65, double* null, double* %57
  %67 = ptrtoint double* %60 to i64
  %68 = sub i64 %58, %67
  %69 = ashr exact i64 %68, 3
  %70 = icmp eq i64 %68, 0
  %71 = select i1 %70, double* null, double* %60
  %72 = icmp ugt i64 %64, 1
  %73 = icmp eq i64 %69, %64
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %354

75:                                               ; preds = %55
  %76 = add nsw i64 %64, -1
  %77 = and i64 %64, 3
  %78 = icmp ult i64 %76, 3
  br i1 %78, label %81, label %79

79:                                               ; preds = %75
  %80 = sub nsw i64 %64, %77
  br label %111

81:                                               ; preds = %111, %75
  %82 = phi <2 x double> [ undef, %75 ], [ %145, %111 ]
  %83 = phi i64 [ 0, %75 ], [ %146, %111 ]
  %84 = phi <2 x double> [ zeroinitializer, %75 ], [ %145, %111 ]
  %85 = icmp eq i64 %77, 0
  br i1 %85, label %100, label %86

86:                                               ; preds = %81, %86
  %87 = phi i64 [ %97, %86 ], [ %83, %81 ]
  %88 = phi <2 x double> [ %96, %86 ], [ %84, %81 ]
  %89 = phi i64 [ %98, %86 ], [ %77, %81 ]
  %90 = getelementptr inbounds double, double* %66, i64 %87
  %91 = load double, double* %90, align 8
  %92 = getelementptr inbounds double, double* %71, i64 %87
  %93 = load double, double* %92, align 8
  %94 = insertelement <2 x double> undef, double %91, i32 0
  %95 = insertelement <2 x double> %94, double %93, i32 1
  %96 = fadd <2 x double> %88, %95
  %97 = add nuw i64 %87, 1
  %98 = add i64 %89, -1
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %86, !llvm.loop !2

100:                                              ; preds = %86, %81
  %101 = phi <2 x double> [ %82, %81 ], [ %96, %86 ]
  %102 = uitofp i64 %64 to double
  %103 = insertelement <2 x double> undef, double %102, i32 0
  %104 = shufflevector <2 x double> %103, <2 x double> undef, <2 x i32> zeroinitializer
  %105 = fdiv <2 x double> %101, %104
  br i1 %65, label %165, label %106

106:                                              ; preds = %100
  %107 = and i64 %64, 1
  %108 = icmp eq i64 %63, 8
  br i1 %108, label %149, label %109

109:                                              ; preds = %106
  %110 = sub nsw i64 %64, %107
  br label %170

111:                                              ; preds = %111, %79
  %112 = phi i64 [ 0, %79 ], [ %146, %111 ]
  %113 = phi <2 x double> [ zeroinitializer, %79 ], [ %145, %111 ]
  %114 = phi i64 [ %80, %79 ], [ %147, %111 ]
  %115 = getelementptr inbounds double, double* %66, i64 %112
  %116 = load double, double* %115, align 8
  %117 = getelementptr inbounds double, double* %71, i64 %112
  %118 = load double, double* %117, align 8
  %119 = insertelement <2 x double> undef, double %116, i32 0
  %120 = insertelement <2 x double> %119, double %118, i32 1
  %121 = fadd <2 x double> %113, %120
  %122 = or i64 %112, 1
  %123 = getelementptr inbounds double, double* %66, i64 %122
  %124 = load double, double* %123, align 8
  %125 = getelementptr inbounds double, double* %71, i64 %122
  %126 = load double, double* %125, align 8
  %127 = insertelement <2 x double> undef, double %124, i32 0
  %128 = insertelement <2 x double> %127, double %126, i32 1
  %129 = fadd <2 x double> %121, %128
  %130 = or i64 %112, 2
  %131 = getelementptr inbounds double, double* %66, i64 %130
  %132 = load double, double* %131, align 8
  %133 = getelementptr inbounds double, double* %71, i64 %130
  %134 = load double, double* %133, align 8
  %135 = insertelement <2 x double> undef, double %132, i32 0
  %136 = insertelement <2 x double> %135, double %134, i32 1
  %137 = fadd <2 x double> %129, %136
  %138 = or i64 %112, 3
  %139 = getelementptr inbounds double, double* %66, i64 %138
  %140 = load double, double* %139, align 8
  %141 = getelementptr inbounds double, double* %71, i64 %138
  %142 = load double, double* %141, align 8
  %143 = insertelement <2 x double> undef, double %140, i32 0
  %144 = insertelement <2 x double> %143, double %142, i32 1
  %145 = fadd <2 x double> %137, %144
  %146 = add nuw i64 %112, 4
  %147 = add i64 %114, -4
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %81, label %111

149:                                              ; preds = %170, %106
  %150 = phi <2 x double> [ undef, %106 ], [ %194, %170 ]
  %151 = phi i64 [ 0, %106 ], [ %195, %170 ]
  %152 = phi <2 x double> [ zeroinitializer, %106 ], [ %194, %170 ]
  %153 = icmp eq i64 %107, 0
  br i1 %153, label %165, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds double, double* %66, i64 %151
  %156 = load double, double* %155, align 8
  %157 = getelementptr inbounds double, double* %71, i64 %151
  %158 = load double, double* %157, align 8
  %159 = insertelement <2 x double> undef, double %156, i32 0
  %160 = insertelement <2 x double> %159, double %158, i32 1
  %161 = fsub <2 x double> %160, %105
  %162 = shufflevector <2 x double> %161, <2 x double> undef, <2 x i32> zeroinitializer
  %163 = fmul <2 x double> %162, %161
  %164 = fadd <2 x double> %152, %163
  br label %165

165:                                              ; preds = %154, %149, %100
  %166 = phi <2 x double> [ zeroinitializer, %100 ], [ %150, %149 ], [ %164, %154 ]
  %167 = extractelement <2 x double> %166, i32 0
  %168 = tail call double @llvm.fabs.f64(double %167) #12
  %169 = fcmp olt double %168, 1.000000e-08
  br i1 %169, label %354, label %343

170:                                              ; preds = %170, %109
  %171 = phi i64 [ 0, %109 ], [ %195, %170 ]
  %172 = phi <2 x double> [ zeroinitializer, %109 ], [ %194, %170 ]
  %173 = phi i64 [ %110, %109 ], [ %196, %170 ]
  %174 = getelementptr inbounds double, double* %66, i64 %171
  %175 = load double, double* %174, align 8
  %176 = getelementptr inbounds double, double* %71, i64 %171
  %177 = load double, double* %176, align 8
  %178 = insertelement <2 x double> undef, double %175, i32 0
  %179 = insertelement <2 x double> %178, double %177, i32 1
  %180 = fsub <2 x double> %179, %105
  %181 = shufflevector <2 x double> %180, <2 x double> undef, <2 x i32> zeroinitializer
  %182 = fmul <2 x double> %181, %180
  %183 = fadd <2 x double> %172, %182
  %184 = or i64 %171, 1
  %185 = getelementptr inbounds double, double* %66, i64 %184
  %186 = load double, double* %185, align 8
  %187 = getelementptr inbounds double, double* %71, i64 %184
  %188 = load double, double* %187, align 8
  %189 = insertelement <2 x double> undef, double %186, i32 0
  %190 = insertelement <2 x double> %189, double %188, i32 1
  %191 = fsub <2 x double> %190, %105
  %192 = shufflevector <2 x double> %191, <2 x double> undef, <2 x i32> zeroinitializer
  %193 = fmul <2 x double> %192, %191
  %194 = fadd <2 x double> %183, %193
  %195 = add nuw i64 %171, 2
  %196 = add i64 %173, -2
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %149, label %170

198:                                              ; preds = %20, %339
  %199 = phi i64 [ %332, %339 ], [ %36, %20 ]
  %200 = phi double* [ %333, %339 ], [ %35, %20 ]
  %201 = phi i64 [ %342, %339 ], [ %25, %20 ]
  %202 = phi double* [ %341, %339 ], [ %26, %20 ]
  %203 = phi double* [ %340, %339 ], [ %24, %20 ]
  %204 = phi %"struct.std::__1::__list_node_base"* [ %337, %339 ], [ %45, %20 ]
  %205 = phi i64 [ %336, %339 ], [ %43, %20 ]
  %206 = inttoptr i64 %205 to %"struct.std::__1::__list_node"*
  %207 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %206, i64 0, i32 1, i32 1
  %208 = load i64, i64* %207, align 8
  %209 = sitofp i64 %208 to double
  %210 = icmp ult double* %203, %202
  %211 = ptrtoint double* %202 to i64
  br i1 %210, label %212, label %217

212:                                              ; preds = %198
  store double %209, double* %203, align 8
  %213 = getelementptr inbounds double, double* %203, i64 1
  %214 = ptrtoint double* %213 to i64
  store i64 %214, i64* %47, align 8
  %215 = load double*, double** %14, align 8
  %216 = ptrtoint double* %215 to i64
  br label %264

217:                                              ; preds = %198
  %218 = ptrtoint double* %203 to i64
  %219 = load i64, i64* %17, align 8
  %220 = sub i64 %218, %219
  %221 = ashr exact i64 %220, 3
  %222 = add nsw i64 %221, 1
  %223 = icmp ugt i64 %222, 2305843009213693951
  br i1 %223, label %224, label %226

224:                                              ; preds = %217
  %225 = bitcast %"class.std::__1::vector"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %225) #13
  unreachable

226:                                              ; preds = %217
  %227 = sub i64 %211, %219
  %228 = ashr exact i64 %227, 3
  %229 = icmp ult i64 %228, 1152921504606846975
  br i1 %229, label %230, label %238

230:                                              ; preds = %226
  %231 = ashr exact i64 %227, 2
  %232 = icmp ult i64 %231, %222
  %233 = select i1 %232, i64 %222, i64 %231
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %243, label %235

235:                                              ; preds = %230
  %236 = icmp ugt i64 %233, 2305843009213693951
  br i1 %236, label %237, label %238

237:                                              ; preds = %235
  tail call void @abort() #13
  unreachable

238:                                              ; preds = %235, %226
  %239 = phi i64 [ %233, %235 ], [ 2305843009213693951, %226 ]
  %240 = shl i64 %239, 3
  %241 = tail call i8* @_Znwm(i64 %240) #11
  %242 = bitcast i8* %241 to double*
  br label %243

243:                                              ; preds = %238, %230
  %244 = phi i64 [ %239, %238 ], [ 0, %230 ]
  %245 = phi double* [ %242, %238 ], [ null, %230 ]
  %246 = getelementptr inbounds double, double* %245, i64 %221
  %247 = getelementptr inbounds double, double* %245, i64 %244
  %248 = ptrtoint double* %247 to i64
  store double %209, double* %246, align 8
  %249 = getelementptr inbounds double, double* %246, i64 1
  %250 = ptrtoint double* %249 to i64
  %251 = sub i64 %201, %219
  %252 = ashr exact i64 %251, 3
  %253 = sub nsw i64 0, %252
  %254 = getelementptr inbounds double, double* %246, i64 %253
  %255 = ptrtoint double* %254 to i64
  %256 = icmp sgt i64 %251, 0
  br i1 %256, label %257, label %260

257:                                              ; preds = %243
  %258 = bitcast double* %254 to i8*
  %259 = inttoptr i64 %219 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %258, i8* align 8 %259, i64 %251, i1 false) #12
  br label %260

260:                                              ; preds = %257, %243
  store i64 %255, i64* %17, align 8
  store i64 %250, i64* %47, align 8
  store i64 %248, i64* %16, align 8
  %261 = icmp eq i64 %219, 0
  br i1 %261, label %264, label %262

262:                                              ; preds = %260
  %263 = inttoptr i64 %219 to i8*
  tail call void @_ZdlPv(i8* %263) #11
  br label %264

264:                                              ; preds = %212, %260, %262
  %265 = phi i64 [ %216, %212 ], [ %199, %260 ], [ %199, %262 ]
  %266 = phi double* [ %215, %212 ], [ %200, %260 ], [ %200, %262 ]
  %267 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %206, i64 0, i32 1, i32 0, i32 0
  %268 = load i64, i64* %267, align 8
  %269 = trunc i64 %268 to i32
  %270 = uitofp i32 %269 to double
  %271 = fdiv double %270, 0x4150624DD2F1A9FC
  %272 = lshr i64 %268, 32
  %273 = mul nuw nsw i64 %272, 1000
  %274 = fadd double %271, 5.000000e-01
  %275 = fptosi double %274 to i64
  %276 = add nsw i64 %273, %275
  %277 = sitofp i64 %276 to double
  %278 = load double*, double** %15, align 8
  %279 = icmp ult double* %266, %278
  %280 = ptrtoint double* %278 to i64
  br i1 %279, label %281, label %284

281:                                              ; preds = %264
  store double %277, double* %266, align 8
  %282 = getelementptr inbounds double, double* %266, i64 1
  %283 = ptrtoint double* %282 to i64
  store i64 %283, i64* %48, align 8
  br label %331

284:                                              ; preds = %264
  %285 = ptrtoint double* %266 to i64
  %286 = load i64, i64* %31, align 8
  %287 = sub i64 %285, %286
  %288 = ashr exact i64 %287, 3
  %289 = add nsw i64 %288, 1
  %290 = icmp ugt i64 %289, 2305843009213693951
  br i1 %290, label %291, label %293

291:                                              ; preds = %284
  %292 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %292) #13
  unreachable

293:                                              ; preds = %284
  %294 = sub i64 %280, %286
  %295 = ashr exact i64 %294, 3
  %296 = icmp ult i64 %295, 1152921504606846975
  br i1 %296, label %297, label %305

297:                                              ; preds = %293
  %298 = ashr exact i64 %294, 2
  %299 = icmp ult i64 %298, %289
  %300 = select i1 %299, i64 %289, i64 %298
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %310, label %302

302:                                              ; preds = %297
  %303 = icmp ugt i64 %300, 2305843009213693951
  br i1 %303, label %304, label %305

304:                                              ; preds = %302
  tail call void @abort() #13
  unreachable

305:                                              ; preds = %302, %293
  %306 = phi i64 [ %300, %302 ], [ 2305843009213693951, %293 ]
  %307 = shl i64 %306, 3
  %308 = tail call i8* @_Znwm(i64 %307) #11
  %309 = bitcast i8* %308 to double*
  br label %310

310:                                              ; preds = %305, %297
  %311 = phi i64 [ %306, %305 ], [ 0, %297 ]
  %312 = phi double* [ %309, %305 ], [ null, %297 ]
  %313 = getelementptr inbounds double, double* %312, i64 %288
  %314 = getelementptr inbounds double, double* %312, i64 %311
  %315 = ptrtoint double* %314 to i64
  store double %277, double* %313, align 8
  %316 = getelementptr inbounds double, double* %313, i64 1
  %317 = ptrtoint double* %316 to i64
  %318 = sub i64 %265, %286
  %319 = ashr exact i64 %318, 3
  %320 = sub nsw i64 0, %319
  %321 = getelementptr inbounds double, double* %313, i64 %320
  %322 = ptrtoint double* %321 to i64
  %323 = icmp sgt i64 %318, 0
  br i1 %323, label %324, label %327

324:                                              ; preds = %310
  %325 = bitcast double* %321 to i8*
  %326 = inttoptr i64 %286 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %325, i8* align 8 %326, i64 %318, i1 false) #12
  br label %327

327:                                              ; preds = %324, %310
  store i64 %322, i64* %31, align 8
  store i64 %317, i64* %48, align 8
  store i64 %315, i64* %30, align 8
  %328 = icmp eq i64 %286, 0
  br i1 %328, label %331, label %329

329:                                              ; preds = %327
  %330 = inttoptr i64 %286 to i8*
  tail call void @_ZdlPv(i8* %330) #11
  br label %331

331:                                              ; preds = %281, %327, %329
  %332 = phi i64 [ %283, %281 ], [ %317, %327 ], [ %317, %329 ]
  %333 = phi double* [ %282, %281 ], [ %316, %327 ], [ %316, %329 ]
  %334 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %204, i64 0, i32 1
  %335 = bitcast %"struct.std::__1::__list_node_base"** %334 to i64*
  %336 = load i64, i64* %335, align 8
  %337 = inttoptr i64 %336 to %"struct.std::__1::__list_node_base"*
  %338 = icmp eq %"struct.std::__1::__list_node_base"* %44, %337
  br i1 %338, label %49, label %339

339:                                              ; preds = %331
  %340 = load double*, double** %10, align 8
  %341 = load double*, double** %11, align 8
  %342 = ptrtoint double* %340 to i64
  br label %198

343:                                              ; preds = %165
  %344 = extractelement <2 x double> %166, i32 1
  %345 = fdiv double %344, %167
  %346 = extractelement <2 x double> %105, i32 0
  %347 = fmul double %346, %345
  %348 = extractelement <2 x double> %105, i32 1
  %349 = fsub double %348, %347
  %350 = fdiv double 1.000000e+00, %345
  %351 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %352 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store double %350, double* %352, align 8
  %353 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store double %349, double* %353, align 8
  store i8 1, i8* %351, align 8
  br label %354

354:                                              ; preds = %165, %55, %343
  %355 = icmp eq double* %60, null
  br i1 %355, label %357, label %356

356:                                              ; preds = %354
  store i64 %67, i64* %48, align 8
  tail call void @_ZdlPv(i8* %59) #11
  br label %357

357:                                              ; preds = %354, %356
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #12
  %358 = icmp eq double* %57, null
  br i1 %358, label %361, label %359

359:                                              ; preds = %357
  %360 = ptrtoint double* %57 to i64
  store i64 %360, i64* %47, align 8
  tail call void @_ZdlPv(i8* %56) #11
  br label %361

361:                                              ; preds = %357, %359
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  br label %362

362:                                              ; preds = %1, %361
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6webrtc17RtpToNtpEstimator18UpdateMeasurementsEjjjPb(%"class.webrtc::RtpToNtpEstimator"*, i32, i32, i32, i8* nocapture) local_unnamed_addr #2 align 2 {
  %6 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %7 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  store i8 0, i8* %4, align 1
  %8 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %5
  %12 = zext i32 %3 to i64
  br label %38

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = trunc i64 %15 to i32
  %17 = sub i32 %3, %16
  %18 = zext i32 %17 to i64
  %19 = icmp eq i32 %17, -2147483648
  br i1 %19, label %20, label %22

20:                                               ; preds = %13
  %21 = icmp ult i32 %16, %3
  br label %26

22:                                               ; preds = %13
  %23 = icmp ne i32 %16, %3
  %24 = icmp sgt i32 %17, -1
  %25 = and i1 %23, %24
  br label %26

26:                                               ; preds = %22, %20
  %27 = phi i1 [ %21, %20 ], [ %25, %22 ]
  %28 = icmp eq i32 %17, 0
  %29 = or i1 %28, %27
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = add nsw i64 %15, %18
  %32 = icmp sgt i64 %31, 4294967295
  %33 = or i64 %18, -4294967296
  %34 = select i1 %32, i64 %33, i64 %18
  br label %35

35:                                               ; preds = %30, %26
  %36 = phi i64 [ %18, %26 ], [ %34, %30 ]
  %37 = add nsw i64 %36, %15
  br label %38

38:                                               ; preds = %11, %35
  %39 = phi i64 [ %37, %35 ], [ %12, %11 ]
  store i8 1, i8* %8, align 8
  %40 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %39, i64* %40, align 8
  %41 = zext i32 %1 to i64
  %42 = shl nuw i64 %41, 32
  %43 = zext i32 %2 to i64
  %44 = or i64 %42, %43
  %45 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 1
  %46 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %45, i64 0, i32 0, i32 0
  %48 = bitcast %"struct.std::__1::__list_node_base"** %46 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = inttoptr i64 %49 to %"struct.std::__1::__list_node_base"*
  %51 = icmp eq %"struct.std::__1::__list_node_base"* %47, %50
  %52 = inttoptr i64 %49 to %"struct.std::__1::__list_node"*
  br i1 %51, label %70, label %59

53:                                               ; preds = %66
  %54 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  %55 = bitcast %"struct.std::__1::__list_node_base"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = inttoptr i64 %56 to %"struct.std::__1::__list_node_base"*
  %58 = icmp eq %"struct.std::__1::__list_node_base"* %47, %57
  br i1 %58, label %70, label %59

59:                                               ; preds = %38, %53
  %60 = phi %"struct.std::__1::__list_node_base"* [ %57, %53 ], [ %50, %38 ]
  %61 = phi i64 [ %56, %53 ], [ %49, %38 ]
  %62 = inttoptr i64 %61 to %"struct.std::__1::__list_node"*
  %63 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %62, i64 0, i32 1, i32 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, %44
  br i1 %65, label %185, label %66

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %62, i64 0, i32 1, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %68, %39
  br i1 %69, label %185, label %53

70:                                               ; preds = %53, %38
  %71 = icmp eq i64 %44, 0
  br i1 %71, label %185, label %72

72:                                               ; preds = %70
  %73 = uitofp i32 %2 to double
  %74 = fdiv double %73, 0x4150624DD2F1A9FC
  %75 = mul nuw nsw i64 %41, 1000
  %76 = fadd double %74, 5.000000e-01
  %77 = fptosi double %76 to i64
  %78 = add nsw i64 %75, %77
  %79 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %72
  %83 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 0
  store i32 0, i32* %83, align 8
  br label %171

84:                                               ; preds = %72
  %85 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %52, i64 0, i32 1, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %52, i64 0, i32 1, i32 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = trunc i64 %88 to i32
  %90 = uitofp i32 %89 to double
  %91 = fdiv double %90, 0x4150624DD2F1A9FC
  %92 = lshr i64 %88, 32
  %93 = mul nuw nsw i64 %92, 1000
  %94 = fadd double %91, 5.000000e-01
  %95 = fptosi double %94 to i64
  %96 = add nsw i64 %93, %95
  %97 = icmp sle i64 %78, %96
  %98 = add nsw i64 %96, 3600000
  %99 = icmp sgt i64 %78, %98
  %100 = or i1 %97, %99
  br i1 %100, label %111, label %101

101:                                              ; preds = %84
  %102 = icmp sgt i64 %39, %86
  br i1 %102, label %108, label %103

103:                                              ; preds = %101
  %104 = bitcast %"class.rtc::DiagnosticLogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %104) #12
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %6, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str, i64 0, i64 0), i32 149, i32 2, i32 0, i32 0) #12
  %105 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %6, i64 0, i32 7
  %106 = bitcast %"class.std::__1::basic_ostringstream"* %105 to %"class.std::__1::basic_ostream"*
  %107 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %106, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.1, i64 0, i64 0), i64 55) #12
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %104) #12
  br label %111

108:                                              ; preds = %101
  %109 = sub nsw i64 %39, %86
  %110 = icmp sgt i64 %109, 33554432
  br i1 %110, label %111, label %150

111:                                              ; preds = %84, %103, %108
  %112 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 0
  %113 = load i32, i32* %112, align 8
  %114 = add nsw i32 %113, 1
  store i32 %114, i32* %112, align 8
  %115 = icmp slt i32 %114, 3
  br i1 %115, label %185, label %116

116:                                              ; preds = %111
  %117 = bitcast %"class.rtc::DiagnosticLogMessage"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %117) #12
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %7, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str, i64 0, i64 0), i32 163, i32 2, i32 0, i32 0) #12
  %118 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %7, i64 0, i32 7
  %119 = bitcast %"class.std::__1::basic_ostringstream"* %118 to %"class.std::__1::basic_ostream"*
  %120 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %119, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.2, i64 0, i64 0), i64 70) #12
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %117) #12
  %121 = load i64, i64* %79, align 8
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %147, label %123

123:                                              ; preds = %116
  %124 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %46, align 8
  %125 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %45, i64 0, i32 0, i32 0, i32 0
  %126 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %126, i64 0, i32 1
  %128 = bitcast %"struct.std::__1::__list_node_base"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %124, i64 0, i32 0
  %131 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %130, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %131, i64 0, i32 1
  %133 = bitcast %"struct.std::__1::__list_node_base"** %132 to i64*
  store i64 %129, i64* %133, align 8
  %134 = bitcast %"struct.std::__1::__list_node_base"* %124 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"struct.std::__1::__list_node_base"** %127 to i64**
  %137 = load i64*, i64** %136, align 8
  store i64 %135, i64* %137, align 8
  store i64 0, i64* %79, align 8
  %138 = icmp eq %"struct.std::__1::__list_node_base"* %124, %47
  br i1 %138, label %147, label %139

139:                                              ; preds = %123, %139
  %140 = phi %"struct.std::__1::__list_node_base"* [ %142, %139 ], [ %124, %123 ]
  %141 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %140, i64 0, i32 1
  %142 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %141, align 8
  %143 = bitcast %"struct.std::__1::__list_node_base"* %140 to i8*
  call void @_ZdlPv(i8* %143) #11
  %144 = icmp eq %"struct.std::__1::__list_node_base"* %142, %47
  br i1 %144, label %145, label %139

145:                                              ; preds = %139
  %146 = load i64, i64* %79, align 8
  br label %147

147:                                              ; preds = %145, %116, %123
  %148 = phi i64 [ %146, %145 ], [ 0, %116 ], [ 0, %123 ]
  %149 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %149, align 8
  br label %150

150:                                              ; preds = %147, %108
  %151 = phi i64 [ %148, %147 ], [ %80, %108 ]
  %152 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 0
  store i32 0, i32* %152, align 8
  %153 = icmp eq i64 %151, 20
  br i1 %153, label %154, label %171

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %45, i64 0, i32 0, i32 0, i32 0
  %156 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %155, align 8
  %157 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %156, i64 0, i32 1
  %158 = bitcast %"struct.std::__1::__list_node_base"** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %156, i64 0, i32 0
  %161 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %160, align 8
  %162 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %161, i64 0, i32 1
  %163 = bitcast %"struct.std::__1::__list_node_base"** %162 to i64*
  store i64 %159, i64* %163, align 8
  %164 = bitcast %"struct.std::__1::__list_node_base"* %156 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = bitcast %"struct.std::__1::__list_node_base"** %157 to i64**
  %167 = load i64*, i64** %166, align 8
  store i64 %165, i64* %167, align 8
  %168 = load i64, i64* %79, align 8
  %169 = add i64 %168, -1
  store i64 %169, i64* %79, align 8
  %170 = bitcast %"struct.std::__1::__list_node_base"* %156 to i8*
  call void @_ZdlPv(i8* %170) #11
  br label %171

171:                                              ; preds = %82, %154, %150
  %172 = call i8* @_Znwm(i64 32) #11, !noalias !5
  %173 = bitcast i8* %172 to %"struct.std::__1::__list_node_base"**
  %174 = getelementptr inbounds i8, i8* %172, i64 16
  %175 = bitcast i8* %174 to i64*
  store i64 %44, i64* %175, align 8
  %176 = getelementptr inbounds i8, i8* %172, i64 24
  %177 = bitcast i8* %176 to i64*
  store i64 %39, i64* %177, align 8
  store %"struct.std::__1::__list_node_base"* %47, %"struct.std::__1::__list_node_base"** %173, align 8
  %178 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %46, align 8
  %179 = getelementptr inbounds i8, i8* %172, i64 8
  %180 = bitcast i8* %179 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %178, %"struct.std::__1::__list_node_base"** %180, align 8
  %181 = bitcast %"struct.std::__1::__list_node_base"* %178 to i8**
  store i8* %172, i8** %181, align 8
  %182 = bitcast %"struct.std::__1::__list_node_base"** %46 to i8**
  store i8* %172, i8** %182, align 8
  %183 = load i64, i64* %79, align 8
  %184 = add i64 %183, 1
  store i64 %184, i64* %79, align 8
  store i8 1, i8* %4, align 1
  call void @_ZN6webrtc17RtpToNtpEstimator16UpdateParametersEv(%"class.webrtc::RtpToNtpEstimator"* %0)
  br label %185

185:                                              ; preds = %66, %59, %70, %171, %111
  %186 = phi i1 [ false, %70 ], [ true, %171 ], [ false, %111 ], [ true, %59 ], [ true, %66 ]
  ret i1 %186
}

declare void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"*, i8*, i32, i32, i32, i32) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc17RtpToNtpEstimator8EstimateElPl(%"class.webrtc::RtpToNtpEstimator"* nocapture, i64, i64* nocapture) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %53, label %7

7:                                                ; preds = %3
  %8 = trunc i64 %1 to i32
  %9 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  %13 = and i64 %1, 4294967295
  br label %39

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = trunc i64 %16 to i32
  %18 = sub i32 %8, %17
  %19 = zext i32 %18 to i64
  %20 = icmp eq i32 %18, -2147483648
  br i1 %20, label %21, label %23

21:                                               ; preds = %14
  %22 = icmp ugt i32 %8, %17
  br label %27

23:                                               ; preds = %14
  %24 = icmp ne i32 %8, %17
  %25 = icmp sgt i32 %18, -1
  %26 = and i1 %24, %25
  br label %27

27:                                               ; preds = %23, %21
  %28 = phi i1 [ %22, %21 ], [ %26, %23 ]
  %29 = icmp eq i32 %18, 0
  %30 = or i1 %29, %28
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = add nsw i64 %16, %19
  %33 = icmp sgt i64 %32, 4294967295
  %34 = or i64 %19, -4294967296
  %35 = select i1 %33, i64 %34, i64 %19
  br label %36

36:                                               ; preds = %31, %27
  %37 = phi i64 [ %19, %27 ], [ %35, %31 ]
  %38 = add nsw i64 %37, %16
  br label %39

39:                                               ; preds = %12, %36
  %40 = phi i64 [ %38, %36 ], [ %13, %12 ]
  store i8 1, i8* %9, align 8
  %41 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %40, i64* %41, align 8
  %42 = sitofp i64 %40 to double
  %43 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %44 = load double, double* %43, align 8
  %45 = fdiv double %42, %44
  %46 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %47 = load double, double* %46, align 8
  %48 = fadd double %45, %47
  %49 = fadd double %48, 5.000000e-01
  %50 = fcmp olt double %49, 0.000000e+00
  br i1 %50, label %53, label %51

51:                                               ; preds = %39
  %52 = fptosi double %49 to i64
  store i64 %52, i64* %2, align 8
  br label %53

53:                                               ; preds = %3, %51, %39
  %54 = phi i1 [ false, %3 ], [ true, %51 ], [ false, %39 ]
  ret i1 %54
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc17RtpToNtpEstimator6paramsEv(%"class.absl::optional"* noalias nocapture sret, %"class.webrtc::RtpToNtpEstimator"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.webrtc::RtpToNtpEstimator", %"class.webrtc::RtpToNtpEstimator"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #2 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #2 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #5

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #5

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__14listIN6webrtc17RtpToNtpEstimator15RtcpMeasurementENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__14listIN6webrtc17RtpToNtpEstimator15RtcpMeasurementENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
