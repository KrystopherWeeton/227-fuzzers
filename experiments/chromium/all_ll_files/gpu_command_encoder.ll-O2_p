; ModuleID = '../../third_party/blink/renderer/modules/webgpu/gpu_command_encoder.cc'
source_filename = "../../third_party/blink/renderer/modules/webgpu/gpu_command_encoder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.309", i32, [4 x i8], %"class.std::__1::unique_ptr.447", %"class.std::__1::unique_ptr.447", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.453", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.459", %"class.std::__1::unique_ptr.465", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.477", %"class.std::__1::unique_ptr.483", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.490", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.312", %"class.std::__1::unique_ptr.318", %"class.std::__1::unique_ptr.324", %"class.std::__1::unique_ptr.330", %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.342", %"class.std::__1::unique_ptr.353", %"class.std::__1::unique_ptr.360", %"class.std::__1::unique_ptr.360", %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.374", %"class.std::__1::unique_ptr.381", %"class.std::__1::unique_ptr.381", %"class.std::__1::unique_ptr.388", %"class.std::__1::unique_ptr.395", %"class.std::__1::unique_ptr.402", %"class.std::__1::unique_ptr.427", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.345" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.345" = type { %"struct.std::__1::__atomic_base.346" }
%"struct.std::__1::__atomic_base.346" = type { %"struct.std::__1::__atomic_base.347" }
%"struct.std::__1::__atomic_base.347" = type { %"struct.std::__1::__cxx_atomic_impl.348" }
%"struct.std::__1::__cxx_atomic_impl.348" = type { %"struct.std::__1::__cxx_atomic_base_impl.349" }
%"struct.std::__1::__cxx_atomic_base_impl.349" = type { i64 }
%"class.std::__1::unique_ptr.353" = type { %"class.std::__1::__compressed_pair.354" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"class.blink::Worklist.356"* }
%"class.blink::Worklist.356" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.345" }
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.blink::Worklist.363"* }
%"class.blink::Worklist.363" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.345" }
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.blink::Worklist.370"* }
%"class.blink::Worklist.370" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.345" }
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"class.blink::Worklist.377"* }
%"class.blink::Worklist.377" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.345" }
%"class.std::__1::unique_ptr.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.383" }
%"struct.std::__1::__compressed_pair_elem.383" = type { %"class.blink::Worklist.384"* }
%"class.blink::Worklist.384" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.345" }
%"class.std::__1::unique_ptr.388" = type { %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"class.blink::Worklist.391"* }
%"class.blink::Worklist.391" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.345" }
%"class.std::__1::unique_ptr.395" = type { %"class.std::__1::__compressed_pair.396" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.397" }
%"struct.std::__1::__compressed_pair_elem.397" = type { %"class.blink::Worklist.398"* }
%"class.blink::Worklist.398" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.345" }
%"class.std::__1::unique_ptr.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.420", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { i64 }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { float }
%"class.std::__1::unique_ptr.427" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.430", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.439" }
%"class.WTF::Vector.439" = type { %"class.WTF::VectorBuffer.440" }
%"class.WTF::VectorBuffer.440" = type { %"class.WTF::VectorBufferBase.441" }
%"class.WTF::VectorBufferBase.441" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.447" = type { %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.453" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.456" }
%"class.WTF::VectorBuffer.456" = type { %"class.WTF::VectorBufferBase.457" }
%"class.WTF::VectorBufferBase.457" = type { %"struct.std::__1::pair.458"*, i32, i32 }
%"struct.std::__1::pair.458" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.459" = type { %"class.std::__1::__compressed_pair.460" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.461" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.465" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.471" }
%"class.std::__1::unique_ptr.471" = type { %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.356"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.363"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.370"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.377"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.384"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.494", i64 }
%"class.std::__1::vector.494" = type { %"class.std::__1::__vector_base.495" }
%"class.std::__1::__vector_base.495" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.496" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.497" }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.477" = type { %"class.std::__1::__compressed_pair.478" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"struct.std::__1::__compressed_pair_elem.479" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.489 }
%class.scoped_refptr.489 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.490" = type { %"struct.std::__1::__atomic_base.491" }
%"struct.std::__1::__atomic_base.491" = type { %"struct.std::__1::__cxx_atomic_impl.492" }
%"struct.std::__1::__cxx_atomic_impl.492" = type { %"struct.std::__1::__cxx_atomic_base_impl.493" }
%"struct.std::__1::__cxx_atomic_base_impl.493" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.501", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.501" = type { %"class.base::RefCounted.502" }
%"class.base::RefCounted.502" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.505" }
%"class.blink::HeapHashMap.505" = type { %"class.WTF::HashMap.508" }
%"class.WTF::HashMap.508" = type { %"class.WTF::HashTable.509" }
%"class.WTF::HashTable.509" = type <{ %"struct.WTF::KeyValuePair.511"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.511" = type { %"class.blink::WeakMember.512", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::GPUCommandEncoder" = type { %"class.blink::DawnObject.237" }
%"class.blink::DawnObject.237" = type { %"class.blink::DawnObjectImpl", %struct.WGPUCommandEncoderImpl*, %struct.WGPUDeviceImpl* }
%"class.blink::DawnObjectImpl" = type { %"class.blink::ScriptWrappable", %"class.blink::DawnObjectBase", %"class.blink::Member.120" }
%"class.blink::DawnObjectBase" = type { %class.scoped_refptr, %"class.WTF::String" }
%class.scoped_refptr = type { %"class.blink::DawnControlClientHolder"* }
%"class.blink::DawnControlClientHolder" = type { %"class.WTF::RefCounted", %"class.std::__1::unique_ptr", %"class.gpu::webgpu::WebGPUInterface"*, %struct.DawnProcTable, i8, %"class.blink::WebGPURecyclableResourceCache" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::WebGraphicsContext3DProviderWrapper"* }
%"class.blink::WebGraphicsContext3DProviderWrapper" = type { %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.13", %"class.base::ObserverList", %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.blink::GraphicsContext3DUtils"* }
%"class.blink::GraphicsContext3DUtils" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.7" }
%"struct.std::__1::atomic.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { i8 }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::WebGraphicsContext3DProvider"* }
%"class.blink::WebGraphicsContext3DProvider" = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.19" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.22 }
%class.scoped_refptr.22 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.gpu::webgpu::WebGPUInterface" = type { %"class.gpu::InterfaceBase" }
%"class.gpu::InterfaceBase" = type { i32 (...)** }
%struct.DawnProcTable = type { void ()* (%struct.WGPUDeviceImpl*, i8*)*, %struct.WGPUInstanceImpl* (%struct.WGPUInstanceDescriptor*)*, void (%struct.WGPUBindGroupImpl*)*, void (%struct.WGPUBindGroupImpl*)*, void (%struct.WGPUBindGroupLayoutImpl*)*, void (%struct.WGPUBindGroupLayoutImpl*)*, void (%struct.WGPUBufferImpl*)*, i8* (%struct.WGPUBufferImpl*, i64, i64)*, i8* (%struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPUBufferImpl*, i32, i64, i64, void (i32, i8*)*, i8*)*, void (%struct.WGPUBufferImpl*)*, void (%struct.WGPUBufferImpl*)*, void (%struct.WGPUBufferImpl*)*, void (%struct.WGPUCommandBufferImpl*)*, void (%struct.WGPUCommandBufferImpl*)*, %struct.WGPUComputePassEncoderImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPUComputePassDescriptor*)*, %struct.WGPURenderPassEncoderImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPURenderPassDescriptor*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUBufferImpl*, i64, %struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyBuffer*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyBuffer*, %struct.WGPUExtent3D*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*)*, %struct.WGPUCommandBufferImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPUCommandBufferDescriptor*)*, void (%struct.WGPUCommandEncoderImpl*, i8*)*, void (%struct.WGPUCommandEncoderImpl*, i8*)*, void (%struct.WGPUCommandEncoderImpl*)*, void (%struct.WGPUCommandEncoderImpl*, i8*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUQuerySetImpl*, i32, i32, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUQuerySetImpl*, i32)*, void (%struct.WGPUCommandEncoderImpl*)*, void (%struct.WGPUCommandEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, i32, i32, i32)*, void (%struct.WGPUComputePassEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPUComputePassEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, i8*)*, void (%struct.WGPUComputePassEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, i8*)*, void (%struct.WGPUComputePassEncoderImpl*, i32, %struct.WGPUBindGroupImpl*, i32, i32*)*, void (%struct.WGPUComputePassEncoderImpl*, %struct.WGPUComputePipelineImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, %struct.WGPUQuerySetImpl*, i32)*, void (%struct.WGPUComputePassEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*)*, %struct.WGPUBindGroupLayoutImpl* (%struct.WGPUComputePipelineImpl*, i32)*, void (%struct.WGPUComputePipelineImpl*)*, void (%struct.WGPUComputePipelineImpl*)*, %struct.WGPUBindGroupImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUBindGroupDescriptor*)*, %struct.WGPUBindGroupLayoutImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUBindGroupLayoutDescriptor*)*, %struct.WGPUBufferImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUBufferDescriptor*)*, %struct.WGPUCommandEncoderImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUCommandEncoderDescriptor*)*, %struct.WGPUComputePipelineImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUComputePipelineDescriptor*)*, void (%struct.WGPUDeviceImpl*, %struct.WGPUComputePipelineDescriptor*, void (i32, %struct.WGPUComputePipelineImpl*, i8*, i8*)*, i8*)*, %struct.WGPUBufferImpl* (%struct.WGPUDeviceImpl*)*, %struct.WGPUExternalTextureImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUExternalTextureDescriptor*)*, %struct.WGPUPipelineLayoutImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUPipelineLayoutDescriptor*)*, %struct.WGPUQuerySetImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUQuerySetDescriptor*)*, %struct.WGPURenderBundleEncoderImpl* (%struct.WGPUDeviceImpl*, %struct.WGPURenderBundleEncoderDescriptor*)*, %struct.WGPURenderPipelineImpl* (%struct.WGPUDeviceImpl*, %struct.WGPURenderPipelineDescriptor*)*, %struct.WGPURenderPipelineImpl* (%struct.WGPUDeviceImpl*, %struct.WGPURenderPipelineDescriptor*)*, void (%struct.WGPUDeviceImpl*, %struct.WGPURenderPipelineDescriptor*, void (i32, %struct.WGPURenderPipelineImpl*, i8*, i8*)*, i8*)*, %struct.WGPUSamplerImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUSamplerDescriptor*)*, %struct.WGPUShaderModuleImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUShaderModuleDescriptor*)*, %struct.WGPUSwapChainImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUSurfaceImpl*, %struct.WGPUSwapChainDescriptor*)*, %struct.WGPUTextureImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUTextureDescriptor*)*, %struct.WGPUQueueImpl* (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*, i32, i8*)*, void (%struct.WGPUDeviceImpl*)*, i1 (%struct.WGPUDeviceImpl*, void (i32, i8*, i8*)*, i8*)*, void (%struct.WGPUDeviceImpl*, i32)*, void (%struct.WGPUDeviceImpl*, void (i8*, i8*)*, i8*)*, void (%struct.WGPUDeviceImpl*, void (i32, i8*, i8*)*, i8*)*, void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUExternalTextureImpl*)*, void (%struct.WGPUExternalTextureImpl*)*, void (%struct.WGPUExternalTextureImpl*)*, %struct.WGPUSurfaceImpl* (%struct.WGPUInstanceImpl*, %struct.WGPUSurfaceDescriptor*)*, void (%struct.WGPUInstanceImpl*)*, void (%struct.WGPUInstanceImpl*)*, void (%struct.WGPUPipelineLayoutImpl*)*, void (%struct.WGPUPipelineLayoutImpl*)*, void (%struct.WGPUQuerySetImpl*)*, void (%struct.WGPUQuerySetImpl*)*, void (%struct.WGPUQuerySetImpl*)*, void (%struct.WGPUQueueImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*, %struct.WGPUCopyTextureForBrowserOptions*)*, void (%struct.WGPUQueueImpl*, i64, void (i32, i8*)*, i8*)*, void (%struct.WGPUQueueImpl*, i32, %struct.WGPUCommandBufferImpl**)*, void (%struct.WGPUQueueImpl*, %struct.WGPUBufferImpl*, i64, i8*, i64)*, void (%struct.WGPUQueueImpl*, %struct.WGPUImageCopyTexture*, i8*, i64, %struct.WGPUTextureDataLayout*, %struct.WGPUExtent3D*)*, void (%struct.WGPUQueueImpl*)*, void (%struct.WGPUQueueImpl*)*, void (%struct.WGPURenderBundleImpl*)*, void (%struct.WGPURenderBundleImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, i32, i32, i32)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, i32, i32, i32, i32)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, %struct.WGPURenderBundleImpl* (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPURenderBundleDescriptor*)*, void (%struct.WGPURenderBundleEncoderImpl*, i8*)*, void (%struct.WGPURenderBundleEncoderImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*, i8*)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, %struct.WGPUBindGroupImpl*, i32, i32*)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPUBufferImpl*, i32, i64, i64)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPURenderPipelineImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, %struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPURenderBundleEncoderImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32, i32, i32, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32, i32, i32, i32, i32)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i32, %struct.WGPURenderBundleImpl**)*, void (%struct.WGPURenderPassEncoderImpl*, i8*)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i8*)*, void (%struct.WGPURenderPassEncoderImpl*, i32, %struct.WGPUBindGroupImpl*, i32, i32*)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUColor*)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUColor*)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUBufferImpl*, i32, i64, i64)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPURenderPipelineImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i32, i32, i32, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32, %struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPURenderPassEncoderImpl*, float, float, float, float, float, float)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUQuerySetImpl*, i32)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*)*, %struct.WGPUBindGroupLayoutImpl* (%struct.WGPURenderPipelineImpl*, i32)*, void (%struct.WGPURenderPipelineImpl*)*, void (%struct.WGPURenderPipelineImpl*)*, void (%struct.WGPUSamplerImpl*)*, void (%struct.WGPUSamplerImpl*)*, void (%struct.WGPUShaderModuleImpl*, void (i32, %struct.WGPUCompilationInfo*, i8*)*, i8*)*, void (%struct.WGPUShaderModuleImpl*)*, void (%struct.WGPUShaderModuleImpl*)*, void (%struct.WGPUSurfaceImpl*)*, void (%struct.WGPUSurfaceImpl*)*, void (%struct.WGPUSwapChainImpl*, i32, i32, i32, i32)*, %struct.WGPUTextureViewImpl* (%struct.WGPUSwapChainImpl*)*, void (%struct.WGPUSwapChainImpl*)*, void (%struct.WGPUSwapChainImpl*)*, void (%struct.WGPUSwapChainImpl*)*, %struct.WGPUTextureViewImpl* (%struct.WGPUTextureImpl*, %struct.WGPUTextureViewDescriptor*)*, void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureViewImpl*)*, void (%struct.WGPUTextureViewImpl*)* }
%struct.WGPUInstanceImpl = type opaque
%struct.WGPUInstanceDescriptor = type { %struct.WGPUChainedStruct* }
%struct.WGPUChainedStruct = type { %struct.WGPUChainedStruct*, i32 }
%struct.WGPUBindGroupImpl = type opaque
%struct.WGPUBindGroupLayoutImpl = type opaque
%struct.WGPUBufferImpl = type opaque
%struct.WGPUCommandBufferImpl = type opaque
%struct.WGPUComputePassEncoderImpl = type opaque
%struct.WGPUComputePassDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPURenderPassEncoderImpl = type opaque
%struct.WGPURenderPassDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, %struct.WGPURenderPassColorAttachment*, %struct.WGPURenderPassDepthStencilAttachment*, %struct.WGPUQuerySetImpl* }
%struct.WGPURenderPassColorAttachment = type { %struct.WGPUTextureViewImpl*, %struct.WGPUTextureViewImpl*, i32, i32, %struct.WGPUColor, %struct.WGPUTextureViewImpl* }
%struct.WGPUColor = type { double, double, double, double }
%struct.WGPUTextureViewImpl = type opaque
%struct.WGPURenderPassDepthStencilAttachment = type { %struct.WGPUTextureViewImpl*, i32, i32, float, i8, i32, i32, i32, i8, %struct.WGPUTextureViewImpl* }
%struct.WGPUQuerySetImpl = type opaque
%struct.WGPUImageCopyBuffer = type { %struct.WGPUChainedStruct*, %struct.WGPUTextureDataLayout, %struct.WGPUBufferImpl* }
%struct.WGPUTextureDataLayout = type { %struct.WGPUChainedStruct*, i64, i32, i32 }
%struct.WGPUImageCopyTexture = type { %struct.WGPUChainedStruct*, %struct.WGPUTextureImpl*, i32, %struct.WGPUOrigin3D, i32 }
%struct.WGPUTextureImpl = type opaque
%struct.WGPUOrigin3D = type { i32, i32, i32 }
%struct.WGPUExtent3D = type { i32, i32, i32 }
%struct.WGPUCommandBufferDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUComputePipelineImpl = type opaque
%struct.WGPUBindGroupDescriptor = type { %struct.WGPUChainedStruct*, i8*, %struct.WGPUBindGroupLayoutImpl*, i32, %struct.WGPUBindGroupEntry* }
%struct.WGPUBindGroupEntry = type { i32, %struct.WGPUBufferImpl*, i64, i64, %struct.WGPUSamplerImpl*, %struct.WGPUTextureViewImpl* }
%struct.WGPUSamplerImpl = type opaque
%struct.WGPUBindGroupLayoutDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, %struct.WGPUBindGroupLayoutEntry* }
%struct.WGPUBindGroupLayoutEntry = type { %struct.WGPUChainedStruct*, i32, i32, %struct.WGPUBufferBindingLayout, %struct.WGPUSamplerBindingLayout, %struct.WGPUTextureBindingLayout, %struct.WGPUStorageTextureBindingLayout }
%struct.WGPUBufferBindingLayout = type { %struct.WGPUChainedStruct*, i32, i8, i64 }
%struct.WGPUSamplerBindingLayout = type { %struct.WGPUChainedStruct*, i32 }
%struct.WGPUTextureBindingLayout = type { %struct.WGPUChainedStruct*, i32, i32, i8 }
%struct.WGPUStorageTextureBindingLayout = type { %struct.WGPUChainedStruct*, i32, i32, i32 }
%struct.WGPUBufferDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i64, i8 }
%struct.WGPUCommandEncoderDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUComputePipelineDescriptor = type { %struct.WGPUChainedStruct*, i8*, %struct.WGPUPipelineLayoutImpl*, %struct.WGPUProgrammableStageDescriptor }
%struct.WGPUPipelineLayoutImpl = type opaque
%struct.WGPUProgrammableStageDescriptor = type { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8* }
%struct.WGPUShaderModuleImpl = type opaque
%struct.WGPUExternalTextureImpl = type opaque
%struct.WGPUExternalTextureDescriptor = type { %struct.WGPUChainedStruct*, %struct.WGPUTextureViewImpl*, i32 }
%struct.WGPUPipelineLayoutDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, %struct.WGPUBindGroupLayoutImpl** }
%struct.WGPUQuerySetDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32*, i32 }
%struct.WGPURenderBundleEncoderImpl = type opaque
%struct.WGPURenderBundleEncoderDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32*, i32, i32 }
%struct.WGPURenderPipelineImpl = type opaque
%struct.WGPURenderPipelineDescriptor = type { %struct.WGPUChainedStruct*, i8*, %struct.WGPUPipelineLayoutImpl*, %struct.WGPUVertexState, %struct.WGPUPrimitiveState, %struct.WGPUDepthStencilState*, %struct.WGPUMultisampleState, %struct.WGPUFragmentState* }
%struct.WGPUVertexState = type { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8*, i32, %struct.WGPUVertexBufferLayout* }
%struct.WGPUVertexBufferLayout = type { i64, i32, i32, %struct.WGPUVertexAttribute* }
%struct.WGPUVertexAttribute = type { i32, i64, i32 }
%struct.WGPUPrimitiveState = type { %struct.WGPUChainedStruct*, i32, i32, i32, i32 }
%struct.WGPUDepthStencilState = type { %struct.WGPUChainedStruct*, i32, i8, i32, %struct.WGPUStencilFaceState, %struct.WGPUStencilFaceState, i32, i32, i32, float, float }
%struct.WGPUStencilFaceState = type { i32, i32, i32, i32 }
%struct.WGPUMultisampleState = type { %struct.WGPUChainedStruct*, i32, i32, i8 }
%struct.WGPUFragmentState = type { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8*, i32, %struct.WGPUColorTargetState* }
%struct.WGPUColorTargetState = type { %struct.WGPUChainedStruct*, i32, %struct.WGPUBlendState*, i32 }
%struct.WGPUBlendState = type { %struct.WGPUBlendComponent, %struct.WGPUBlendComponent }
%struct.WGPUBlendComponent = type { i32, i32, i32 }
%struct.WGPUSamplerDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32, i32, i32, i32, float, float, i32, i16 }
%struct.WGPUShaderModuleDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUSwapChainImpl = type opaque
%struct.WGPUSurfaceImpl = type opaque
%struct.WGPUSwapChainDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32, i32, i32, i64 }
%struct.WGPUTextureDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, %struct.WGPUExtent3D, i32, i32, i32 }
%struct.WGPUQueueImpl = type opaque
%struct.WGPUSurfaceDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUCopyTextureForBrowserOptions = type { %struct.WGPUChainedStruct*, i8 }
%struct.WGPURenderBundleImpl = type opaque
%struct.WGPURenderBundleDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUCompilationInfo = type { i32, %struct.WGPUCompilationMessage* }
%struct.WGPUCompilationMessage = type { i8*, i32, i64, i64, i64, i64 }
%struct.WGPUTextureViewDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::WebGPURecyclableResourceCache" = type { %"class.WTF::Deque", i64, i64, i32, %"class.gpu::webgpu::WebGPUInterface"*, %class.scoped_refptr.110, %"class.base::RepeatingCallback", i8, i32, %"class.base::WeakPtr.112", %"class.base::WeakPtrFactory.113" }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::WebGPURecyclableResourceCache::Resource, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::WebGPURecyclableResourceCache::Resource, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.blink::WebGPURecyclableResourceCache::Resource"*, i32, i32 }
%"struct.blink::WebGPURecyclableResourceCache::Resource" = type { %"class.std::__1::unique_ptr.26", i32, i32 }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::CanvasResourceProvider"* }
%"class.blink::CanvasResourceProvider" = type { %"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver", %"class.base::CheckedObserver", %"class.blink::CanvasMemoryDumpClient", i32, %class.sk_sp, i32, %"class.base::WeakPtr", %"class.base::WeakPtr.30", %"class.blink::IntSize", i32, %"class.blink::CanvasResourceParams", i8, %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.66", i8, i32, i32, i32, %"class.WTF::Vector", i8, i8, i64, i64, %"class.base::RepeatingCallback.86", %"class.blink::IdentifiabilityPaintOpDigest", %"class.base::WeakPtrFactory.106" }
%"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver" = type { i32 (...)** }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory.29" }
%"class.base::WeakPtrFactory.29" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::CanvasMemoryDumpClient" = type { i32 (...)** }
%class.sk_sp = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.SkSurfaceProps = type { i32, i32 }
%"class.base::WeakPtr.30" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::CanvasResourceParams" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::CanvasResourceProvider::CanvasImageProvider"* }
%"class.blink::CanvasResourceProvider::CanvasImageProvider" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.cc::SkiaPaintCanvas"* }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.57", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.40, [384 x i64], %class.sk_sp.41, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.42", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.48" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.40 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.41 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkBitmap = type { %class.sk_sp.54, %class.SkPixmap, %class.sk_sp.56 }
%class.sk_sp.54 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.55, i32, i32 }
%class.sk_sp.55 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.7" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.56 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::MemoryManagedPaintRecorder"* }
%"class.blink::MemoryManagedPaintRecorder" = type { %"class.cc::PaintRecorder", %"class.base::RepeatingCallback" }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.69, %"class.std::__1::unique_ptr.70" }
%class.scoped_refptr.69 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional", %struct.SkRect }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer.81" }
%"class.WTF::VectorBuffer.81" = type { %"class.WTF::VectorBufferBase.82" }
%"class.WTF::VectorBufferBase.82" = type { %class.scoped_refptr.83*, i32, i32 }
%class.scoped_refptr.83 = type opaque
%"class.base::RepeatingCallback.86" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.76 }
%class.scoped_refptr.76 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.77", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.77" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::IdentifiabilityPaintOpDigest" = type <{ i32, [4 x i8], %"class.blink::IdentifiableTokenBuilder", i32, [4 x i8], i64, %"class.blink::IntSize", %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider", %"class.cc::ClientPaintCache", %"struct.cc::PaintOp::SerializeOptions", i8, i8, [6 x i8] }>
%"class.blink::IdentifiableTokenBuilder" = type { %"struct.std::__1::array", i8*, i64 }
%"struct.std::__1::array" = type { [64 x i8] }
%"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider" = type { %"class.cc::ImageProvider", %"class.blink::IdentifiabilityPaintOpDigest"* }
%"class.cc::ClientPaintCache" = type { %"class.base::MRUCache", i64, i64, %"class.base::StackVector" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.87" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.92", %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source", %"class.base::StackAllocator", %"class.std::__1::vector.101" }
%"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source" = type { [8 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source"* }
%"class.std::__1::vector.101" = type { %"class.std::__1::__vector_base.102" }
%"class.std::__1::__vector_base.102" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.103" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104", %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.base::StackAllocator" }
%"struct.cc::PaintOp::SerializeOptions" = type <{ %"class.cc::ImageProvider"*, %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::ClientPaintCache"*, %class.SkStrikeServer*, %class.sk_sp.55, i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"class.cc::TransferCacheSerializeHelper" = type opaque
%class.SkStrikeServer = type opaque
%"class.base::WeakPtrFactory.106" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.110 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.111" }>
%"class.base::RefCountedThreadSafe.111" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr.112" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.113" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.WTF::String" = type { %class.scoped_refptr.114 }
%class.scoped_refptr.114 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.115" }
%"struct.std::__1::atomic.115" = type { %"struct.std::__1::__atomic_base.116" }
%"struct.std::__1::__atomic_base.116" = type { %"struct.std::__1::__atomic_base.117" }
%"struct.std::__1::__atomic_base.117" = type { %"struct.std::__1::__cxx_atomic_impl.118" }
%"struct.std::__1::__cxx_atomic_impl.118" = type { %"struct.std::__1::__cxx_atomic_base_impl.119" }
%"struct.std::__1::__cxx_atomic_base_impl.119" = type { i32 }
%"class.blink::Member.120" = type { %"class.blink::MemberBase.121" }
%"class.blink::MemberBase.121" = type { %"class.blink::GPUDevice"* }
%struct.WGPUDeviceImpl = type opaque
%"class.blink::GPUDevice" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContextClient", %"class.blink::DawnObject.143", %"class.blink::Member.144", %"class.blink::Member.146", %"class.blink::Member.148", %"class.blink::Member.150", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.158", i32, [4 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.135" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.126" }
%"class.WTF::Vector.126" = type { %"class.WTF::VectorBuffer.127" }
%"class.WTF::VectorBuffer.127" = type { %"class.WTF::VectorBufferBase.128", [32 x i8] }
%"class.WTF::VectorBufferBase.128" = type { %"struct.std::__1::pair.129"*, i32, i32 }
%"struct.std::__1::pair.129" = type { %"class.WTF::AtomicString", %"class.blink::Member.130" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.130" = type { %"class.blink::MemberBase.131" }
%"class.blink::MemberBase.131" = type { %"class.blink::HeapVector.132"* }
%"class.blink::HeapVector.132" = type opaque
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.WTF::Vector.138"* }
%"class.WTF::Vector.138" = type opaque
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.142" }
%"class.blink::MemberBase.142" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.206", i32, i8, [3 x i8], %"class.blink::HeapVector.208", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.216", %"class.blink::Member.218", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.227", %"class.blink::Member.233", %"class.blink::Member.235", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.180" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.177" }
%"class.WTF::HashTable.177" = type <{ %"class.blink::WeakMember.179"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.179" = type opaque
%"class.blink::Supplementable.180" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.181" }
%"class.blink::HeapHashMap.181" = type { %"class.WTF::HashMap.184" }
%"class.WTF::HashMap.184" = type { %"class.WTF::HashTable.185" }
%"class.WTF::HashTable.185" = type <{ %"struct.WTF::KeyValuePair.187"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.187" = type { i8*, %"class.blink::Member.305" }
%"class.blink::Member.305" = type { %"class.blink::MemberBase.306" }
%"class.blink::MemberBase.306" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.307" }
%"class.blink::Member.307" = type { %"class.blink::MemberBase.308" }
%"class.blink::MemberBase.308" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.188, %"class.std::__1::unique_ptr.189", %"class.std::__1::unique_ptr.189", %"class.std::__1::unique_ptr.195", %"class.std::__1::unique_ptr.195", %"class.blink::Member.201", i32, [4 x i8], %"class.WTF::HashSet.202", i32, i32 }
%class.scoped_refptr.188 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.201" = type { %"class.blink::MemberBase.142" }
%"class.WTF::HashSet.202" = type { %"class.WTF::HashTable.203" }
%"class.WTF::HashTable.203" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.206" = type { %"class.blink::MemberBase.207" }
%"class.blink::MemberBase.207" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.208" = type { %"class.WTF::Vector.211" }
%"class.WTF::Vector.211" = type { %"class.WTF::VectorBuffer.212" }
%"class.WTF::VectorBuffer.212" = type { %"class.WTF::VectorBufferBase.213" }
%"class.WTF::VectorBufferBase.213" = type { %"class.blink::Member.214"*, i32, i32 }
%"class.blink::Member.214" = type opaque
%"class.blink::Member.216" = type { %"class.blink::MemberBase.217" }
%"class.blink::MemberBase.217" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.218" = type { %"class.blink::MemberBase.219" }
%"class.blink::MemberBase.219" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.220", i32, i32 }
%"class.blink::HeapHashMap.220" = type { %"class.WTF::HashMap.223" }
%"class.WTF::HashMap.223" = type { %"class.WTF::HashTable.224" }
%"class.WTF::HashTable.224" = type <{ %"struct.WTF::KeyValuePair.226"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.226" = type opaque
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.233" = type { %"class.blink::MemberBase.234" }
%"class.blink::MemberBase.234" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.235" = type { %"class.blink::MemberBase.236" }
%"class.blink::MemberBase.236" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::DawnObject.143" = type { %"class.blink::DawnObjectBase", %struct.WGPUDeviceImpl* }
%"class.blink::Member.144" = type { %"class.blink::MemberBase.145" }
%"class.blink::MemberBase.145" = type { %"class.blink::GPUAdapter"* }
%"class.blink::GPUAdapter" = type opaque
%"class.blink::Member.146" = type { %"class.blink::MemberBase.147" }
%"class.blink::MemberBase.147" = type { %"class.blink::GPUSupportedFeatures"* }
%"class.blink::GPUSupportedFeatures" = type opaque
%"class.blink::Member.148" = type { %"class.blink::MemberBase.149" }
%"class.blink::MemberBase.149" = type { %"class.blink::GPUQueue"* }
%"class.blink::GPUQueue" = type opaque
%"class.blink::Member.150" = type { %"class.blink::MemberBase.151" }
%"class.blink::MemberBase.151" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::DawnCallback"* }
%"class.blink::DawnCallback" = type opaque
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::DawnCallback.161"* }
%"class.blink::DawnCallback.161" = type opaque
%struct.WGPUCommandEncoderImpl = type opaque
%"class.blink::GPURenderPassColorAttachment" = type { %"class.blink::IDLDictionaryBase", %"class.blink::Member", %"class.blink::GPULoadOpOrDoubleSequenceOrGPUColorDict", %"class.blink::Member", %"class.WTF::String", %"class.blink::Member" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::GPULoadOpOrDoubleSequenceOrGPUColorDict" = type { i32, %"class.WTF::Vector.165", %"class.blink::Member.170", %"class.WTF::String" }
%"class.WTF::Vector.165" = type { %"class.WTF::VectorBuffer.166" }
%"class.WTF::VectorBuffer.166" = type { %"class.WTF::VectorBufferBase.167" }
%"class.WTF::VectorBufferBase.167" = type { double*, i32, i32 }
%"class.blink::Member.170" = type { %"class.blink::MemberBase.171" }
%"class.blink::MemberBase.171" = type { %"class.blink::GPUColorDict"* }
%"class.blink::GPUColorDict" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, double, double, double, double }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::GPUTextureView"* }
%"class.blink::GPUTextureView" = type { %"class.blink::DawnObject" }
%"class.blink::DawnObject" = type { %"class.blink::DawnObjectImpl", %struct.WGPUTextureViewImpl*, %struct.WGPUDeviceImpl* }
%"class.blink::GPUCommandEncoderDescriptor" = type { %"class.blink::GPUObjectDescriptorBase" }
%"class.blink::GPUObjectDescriptorBase" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.240 }
%union.anon.240 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::GPURenderPassEncoder" = type { %"class.blink::DawnObject.244", %"class.blink::NoAllocDirectCallHost" }
%"class.blink::DawnObject.244" = type { %"class.blink::DawnObjectImpl", %struct.WGPURenderPassEncoderImpl*, %struct.WGPUDeviceImpl* }
%"class.blink::NoAllocDirectCallHost" = type { %"class.WTF::Vector.245", %"struct.v8::FastApiCallbackOptions"* }
%"class.WTF::Vector.245" = type { %"class.WTF::VectorBuffer.246" }
%"class.WTF::VectorBuffer.246" = type { %"class.WTF::VectorBufferBase.247" }
%"class.WTF::VectorBufferBase.247" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"struct.v8::FastApiCallbackOptions" = type { i8, %union.anon.250 }
%union.anon.250 = type { i64 }
%"class.blink::GPURenderPassDescriptor" = type { %"class.blink::GPUObjectDescriptorBase", i8, %"class.blink::HeapVector.251", %"class.blink::Member.260", %"class.blink::Member.262" }
%"class.blink::HeapVector.251" = type { %"class.WTF::Vector.254" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::Member.257"*, i32, i32 }
%"class.blink::Member.257" = type { %"class.blink::MemberBase.258" }
%"class.blink::MemberBase.258" = type { %"class.blink::GPURenderPassColorAttachment"* }
%"class.blink::Member.260" = type { %"class.blink::MemberBase.261" }
%"class.blink::MemberBase.261" = type { %"class.blink::GPURenderPassDepthStencilAttachment"* }
%"class.blink::GPURenderPassDepthStencilAttachment" = type { %"class.blink::IDLDictionaryBase", %"class.blink::Member", %"class.blink::GPULoadOpOrFloat", %"class.WTF::String", %"class.blink::GPULoadOpOrUnsignedLongEnforceRange", %"class.WTF::String", %"class.blink::Member" }
%"class.blink::GPULoadOpOrFloat" = type { i32, float, %"class.WTF::String" }
%"class.blink::GPULoadOpOrUnsignedLongEnforceRange" = type <{ i32, [4 x i8], %"class.WTF::String", i32, [4 x i8] }>
%"class.blink::Member.262" = type { %"class.blink::MemberBase.263" }
%"class.blink::MemberBase.263" = type { %"class.blink::GPUQuerySet"* }
%"class.blink::GPUQuerySet" = type { %"class.blink::DawnObject.264" }
%"class.blink::DawnObject.264" = type { %"class.blink::DawnObjectImpl", %struct.WGPUQuerySetImpl*, %struct.WGPUDeviceImpl* }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.265" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.265" = type { %"class.v8::TracedReference.266" }
%"class.v8::TracedReference.266" = type { %"class.v8::BasicTracedReference.267" }
%"class.v8::BasicTracedReference.267" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::GPUComputePassEncoder" = type { %"class.blink::DawnObject.274" }
%"class.blink::DawnObject.274" = type { %"class.blink::DawnObjectImpl", %struct.WGPUComputePassEncoderImpl*, %struct.WGPUDeviceImpl* }
%"class.blink::GPUComputePassDescriptor" = type { %"class.blink::GPUObjectDescriptorBase" }
%"class.blink::GPUImageCopyBuffer" = type { %"class.blink::GPUImageDataLayout.base", %"class.blink::Member.275" }
%"class.blink::GPUImageDataLayout.base" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i32, i64, i32 }>
%"class.blink::Member.275" = type { %"class.blink::MemberBase.276" }
%"class.blink::MemberBase.276" = type { %"class.blink::GPUBuffer"* }
%"class.blink::GPUBuffer" = type { %"class.blink::DawnObject.277", i64, %"class.blink::HeapVector.278", %"class.WTF::Vector.287" }
%"class.blink::DawnObject.277" = type { %"class.blink::DawnObjectImpl", %struct.WGPUBufferImpl*, %struct.WGPUDeviceImpl* }
%"class.blink::HeapVector.278" = type { %"class.WTF::Vector.281" }
%"class.WTF::Vector.281" = type { %"class.WTF::VectorBuffer.282" }
%"class.WTF::VectorBuffer.282" = type { %"class.WTF::VectorBufferBase.283" }
%"class.WTF::VectorBufferBase.283" = type { %"class.blink::Member.284"*, i32, i32 }
%"class.blink::Member.284" = type { %"class.blink::MemberBase.285" }
%"class.blink::MemberBase.285" = type { %"class.blink::DOMArrayBuffer"* }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::Vector.287" = type { %"class.WTF::VectorBuffer.288" }
%"class.WTF::VectorBuffer.288" = type { %"class.WTF::VectorBufferBase.289" }
%"class.WTF::VectorBufferBase.289" = type { %"struct.std::__1::pair.290"*, i32, i32 }
%"struct.std::__1::pair.290" = type { i64, i64 }
%"class.blink::GPUImageCopyTexture" = type { %"class.blink::IDLDictionaryBase", i8, %"class.WTF::String", i32, %"class.blink::UnsignedLongEnforceRangeSequenceOrGPUOrigin3DDict", %"class.blink::Member.300" }
%"class.blink::UnsignedLongEnforceRangeSequenceOrGPUOrigin3DDict" = type { i32, %"class.blink::Member.293", %"class.WTF::Vector.295" }
%"class.blink::Member.293" = type { %"class.blink::MemberBase.294" }
%"class.blink::MemberBase.294" = type { %"class.blink::GPUOrigin3DDict"* }
%"class.blink::GPUOrigin3DDict" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i32, i32, i32 }
%"class.WTF::Vector.295" = type { %"class.WTF::VectorBuffer.296" }
%"class.WTF::VectorBuffer.296" = type { %"class.WTF::VectorBufferBase.297" }
%"class.WTF::VectorBufferBase.297" = type { i32*, i32, i32 }
%"class.blink::Member.300" = type { %"class.blink::MemberBase.301" }
%"class.blink::MemberBase.301" = type { %"class.blink::GPUTexture"* }
%"class.blink::GPUTexture" = type { %"class.blink::DawnObject.302", i32, %class.scoped_refptr.303 }
%"class.blink::DawnObject.302" = type { %"class.blink::DawnObjectImpl", %struct.WGPUTextureImpl*, %struct.WGPUDeviceImpl* }
%class.scoped_refptr.303 = type { %"class.blink::WebGPUMailboxTexture"* }
%"class.blink::WebGPUMailboxTexture" = type opaque
%"class.blink::V8UnionGPUExtent3DDictOrUnsignedLongEnforceRangeSequence" = type opaque
%"class.blink::GPUImageDataLayout" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i32, i64, i32, [4 x i8] }>
%"class.blink::GPUCommandBuffer" = type { %"class.blink::DawnObject.304" }
%"class.blink::DawnObject.304" = type { %"class.blink::DawnObjectImpl", %struct.WGPUCommandBufferImpl*, %struct.WGPUDeviceImpl* }
%"class.blink::GPUCommandBufferDescriptor" = type { %"class.blink::GPUObjectDescriptorBase" }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.518, %"class.blink::Member.519", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.518 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.519" = type { %"class.blink::MemberBase.520" }
%"class.blink::MemberBase.520" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.521" }
%"class.blink::Persistent.521" = type { %"class.blink::PersistentBase.522" }
%"class.blink::PersistentBase.522" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink17GPUCommandEncoderD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink17GPUCommandEncoder18GetWrapperTypeInfoEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10DawnObjectIP22WGPUCommandEncoderImplED2Ev = comdat any

$_ZN5blink10DawnObjectIP22WGPUCommandEncoderImplED0Ev = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_28GPURenderPassColorAttachmentEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZTVN5blink17GPUCommandEncoderE = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink10DawnObjectIP22WGPUCommandEncoderImplEE = comdat any

@_ZTVN5blink17GPUCommandEncoderE = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::DawnObject.237"*)* @_ZN5blink10DawnObjectIP22WGPUCommandEncoderImplED2Ev to i8*), i8* bitcast (void (%"class.blink::GPUCommandEncoder"*)* @_ZN5blink17GPUCommandEncoderD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::DawnObjectImpl"*, %"class.blink::Visitor"*)* @_ZNK5blink14DawnObjectImpl5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::GPUCommandEncoder"*)* @_ZNK5blink17GPUCommandEncoder18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [122 x i8] c"Specifying the texture view for a render pass color attachment with 'attachment' has been deprecated. Use 'view' instead.\00", align 1
@.str.1 = private unnamed_addr constant [35 x i8] c"required member view is undefined.\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"loadValue color size must be 4\00", align 1
@.str.3 = private unnamed_addr constant [130 x i8] c"Specifying the texture view for a render pass depth/stencil attachment with 'attachment' has been deprecated. Use 'view' instead.\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink10DawnObjectIP22WGPUCommandEncoderImplEE = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::DawnObject.237"*)* @_ZN5blink10DawnObjectIP22WGPUCommandEncoderImplED2Ev to i8*), i8* bitcast (void (%"class.blink::DawnObject.237"*)* @_ZN5blink10DawnObjectIP22WGPUCommandEncoderImplED0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::DawnObjectImpl"*, %"class.blink::Visitor"*)* @_ZNK5blink14DawnObjectImpl5TraceEPNS_7VisitorE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, comdat, align 8
@.str.6 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.7 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink17GPUCommandEncoder18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8

@_ZN5blink17GPUCommandEncoderC1EPNS_9GPUDeviceEP22WGPUCommandEncoderImpl = hidden unnamed_addr alias void (%"class.blink::GPUCommandEncoder"*, %"class.blink::GPUDevice"*, %struct.WGPUCommandEncoderImpl*), void (%"class.blink::GPUCommandEncoder"*, %"class.blink::GPUDevice"*, %struct.WGPUCommandEncoderImpl*)* @_ZN5blink17GPUCommandEncoderC2EPNS_9GPUDeviceEP22WGPUCommandEncoderImpl

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10AsDawnTypeEPKNS_28GPURenderPassColorAttachmentE(%struct.WGPURenderPassColorAttachment* noalias nocapture sret, %"class.blink::GPURenderPassColorAttachment"*) local_unnamed_addr #0 {
  %3 = alloca %struct.WGPUColor, align 8
  %4 = alloca %struct.WGPUColor, align 8
  %5 = bitcast %struct.WGPURenderPassColorAttachment* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 64, i1 false)
  %6 = getelementptr inbounds %"class.blink::GPURenderPassColorAttachment", %"class.blink::GPURenderPassColorAttachment"* %1, i64 0, i32 5, i32 0, i32 0
  %7 = load %"class.blink::GPUTextureView"*, %"class.blink::GPUTextureView"** %6, align 8
  %8 = icmp eq %"class.blink::GPUTextureView"* %7, null
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::GPURenderPassColorAttachment", %"class.blink::GPURenderPassColorAttachment"* %1, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.blink::GPUTextureView"*, %"class.blink::GPUTextureView"** %10, align 8
  %12 = icmp eq %"class.blink::GPUTextureView"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %9, %2
  %14 = phi %"class.blink::GPUTextureView"* [ %7, %2 ], [ %11, %9 ]
  %15 = getelementptr inbounds %"class.blink::GPUTextureView", %"class.blink::GPUTextureView"* %14, i64 0, i32 0, i32 1
  %16 = bitcast %struct.WGPUTextureViewImpl** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %struct.WGPURenderPassColorAttachment* %0 to i64*
  store i64 %17, i64* %18, align 8
  br label %19

19:                                               ; preds = %13, %9
  %20 = getelementptr inbounds %"class.blink::GPURenderPassColorAttachment", %"class.blink::GPURenderPassColorAttachment"* %1, i64 0, i32 3, i32 0, i32 0
  %21 = load %"class.blink::GPUTextureView"*, %"class.blink::GPUTextureView"** %20, align 8
  %22 = icmp eq %"class.blink::GPUTextureView"* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::GPUTextureView", %"class.blink::GPUTextureView"* %21, i64 0, i32 0, i32 1
  %25 = load %struct.WGPUTextureViewImpl*, %struct.WGPUTextureViewImpl** %24, align 8
  br label %26

26:                                               ; preds = %19, %23
  %27 = phi %struct.WGPUTextureViewImpl* [ %25, %23 ], [ null, %19 ]
  %28 = getelementptr inbounds %struct.WGPURenderPassColorAttachment, %struct.WGPURenderPassColorAttachment* %0, i64 0, i32 1
  store %struct.WGPUTextureViewImpl* %27, %struct.WGPUTextureViewImpl** %28, align 8
  %29 = getelementptr inbounds %"class.blink::GPURenderPassColorAttachment", %"class.blink::GPURenderPassColorAttachment"* %1, i64 0, i32 2
  %30 = getelementptr inbounds %"class.blink::GPULoadOpOrDoubleSequenceOrGPUColorDict", %"class.blink::GPULoadOpOrDoubleSequenceOrGPUColorDict"* %29, i64 0, i32 0
  %31 = load i32, i32* %30, align 8
  switch i32 %31, label %48 [
    i32 3, label %32
    i32 1, label %36
    i32 2, label %42
  ]

32:                                               ; preds = %26
  %33 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink39GPULoadOpOrDoubleSequenceOrGPUColorDict14GetAsGPULoadOpEv(%"class.blink::GPULoadOpOrDoubleSequenceOrGPUColorDict"* %29) #8
  %34 = tail call i32 @_ZN5blink10AsDawnEnumI10WGPULoadOpEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %33) #8
  %35 = getelementptr inbounds %struct.WGPURenderPassColorAttachment, %struct.WGPURenderPassColorAttachment* %0, i64 0, i32 2
  store i32 %34, i32* %35, align 8
  br label %48

36:                                               ; preds = %26
  %37 = tail call dereferenceable(16) %"class.WTF::Vector.165"* @_ZNK5blink39GPULoadOpOrDoubleSequenceOrGPUColorDict19GetAsDoubleSequenceEv(%"class.blink::GPULoadOpOrDoubleSequenceOrGPUColorDict"* %29) #8
  %38 = getelementptr inbounds %struct.WGPURenderPassColorAttachment, %struct.WGPURenderPassColorAttachment* %0, i64 0, i32 2
  store i32 0, i32* %38, align 8
  %39 = bitcast %struct.WGPUColor* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #8
  call void @_ZN5blink11AsDawnColorERKN3WTF6VectorIdLj0ENS0_18PartitionAllocatorEEE(%struct.WGPUColor* nonnull sret %3, %"class.WTF::Vector.165"* dereferenceable(16) %37) #8
  %40 = getelementptr inbounds %struct.WGPURenderPassColorAttachment, %struct.WGPURenderPassColorAttachment* %0, i64 0, i32 4
  %41 = bitcast %struct.WGPUColor* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* nonnull align 8 %39, i64 32, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #8
  br label %48

42:                                               ; preds = %26
  %43 = tail call %"class.blink::GPUColorDict"* @_ZNK5blink39GPULoadOpOrDoubleSequenceOrGPUColorDict17GetAsGPUColorDictEv(%"class.blink::GPULoadOpOrDoubleSequenceOrGPUColorDict"* %29) #8
  %44 = getelementptr inbounds %struct.WGPURenderPassColorAttachment, %struct.WGPURenderPassColorAttachment* %0, i64 0, i32 2
  store i32 0, i32* %44, align 8
  %45 = bitcast %struct.WGPUColor* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %45) #8
  call void @_ZN5blink10AsDawnTypeEPKNS_12GPUColorDictE(%struct.WGPUColor* nonnull sret %4, %"class.blink::GPUColorDict"* %43) #8
  %46 = getelementptr inbounds %struct.WGPURenderPassColorAttachment, %struct.WGPURenderPassColorAttachment* %0, i64 0, i32 4
  %47 = bitcast %struct.WGPUColor* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* nonnull align 8 %45, i64 32, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %45) #8
  br label %48

48:                                               ; preds = %26, %36, %42, %32
  %49 = getelementptr inbounds %"class.blink::GPURenderPassColorAttachment", %"class.blink::GPURenderPassColorAttachment"* %1, i64 0, i32 4
  %50 = call i32 @_ZN5blink10AsDawnEnumI11WGPUStoreOpEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %49) #8
  %51 = getelementptr inbounds %struct.WGPURenderPassColorAttachment, %struct.WGPURenderPassColorAttachment* %0, i64 0, i32 3
  store i32 %50, i32* %51, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink39GPULoadOpOrDoubleSequenceOrGPUColorDict14GetAsGPULoadOpEv(%"class.blink::GPULoadOpOrDoubleSequenceOrGPUColorDict"*) local_unnamed_addr #2

declare i32 @_ZN5blink10AsDawnEnumI10WGPULoadOpEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(16) %"class.WTF::Vector.165"* @_ZNK5blink39GPULoadOpOrDoubleSequenceOrGPUColorDict19GetAsDoubleSequenceEv(%"class.blink::GPULoadOpOrDoubleSequenceOrGPUColorDict"*) local_unnamed_addr #2

declare void @_ZN5blink11AsDawnColorERKN3WTF6VectorIdLj0ENS0_18PartitionAllocatorEEE(%struct.WGPUColor* sret, %"class.WTF::Vector.165"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %"class.blink::GPUColorDict"* @_ZNK5blink39GPULoadOpOrDoubleSequenceOrGPUColorDict17GetAsGPUColorDictEv(%"class.blink::GPULoadOpOrDoubleSequenceOrGPUColorDict"*) local_unnamed_addr #2

declare void @_ZN5blink10AsDawnTypeEPKNS_12GPUColorDictE(%struct.WGPUColor* sret, %"class.blink::GPUColorDict"*) local_unnamed_addr #2

declare i32 @_ZN5blink10AsDawnEnumI11WGPUStoreOpEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::GPUCommandEncoder"* @_ZN5blink17GPUCommandEncoder6CreateEPNS_9GPUDeviceEPKNS_27GPUCommandEncoderDescriptorE(%"class.blink::GPUDevice"*, %"class.blink::GPUCommandEncoderDescriptor"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %struct.WGPUCommandEncoderDescriptor, align 8
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #8
  %8 = bitcast %struct.WGPUCommandEncoderDescriptor* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false)
  %9 = icmp eq %"class.blink::GPUCommandEncoderDescriptor"* %1, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::GPUCommandEncoderDescriptor", %"class.blink::GPUCommandEncoderDescriptor"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %23, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.blink::GPUCommandEncoderDescriptor", %"class.blink::GPUCommandEncoderDescriptor"* %1, i64 0, i32 0, i32 1
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.WTF::String"* %16, i32 0) #8
  %17 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* nonnull align 8 %15, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #8
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = load i8*, i8** %7, align 8
  %22 = select i1 %20, i8* %21, i8* %6
  br label %23

23:                                               ; preds = %14, %10
  %24 = phi i8* [ null, %10 ], [ %22, %14 ]
  %25 = getelementptr inbounds %struct.WGPUCommandEncoderDescriptor, %struct.WGPUCommandEncoderDescriptor* %5, i64 0, i32 0
  store %struct.WGPUChainedStruct* null, %struct.WGPUChainedStruct** %25, align 8
  %26 = getelementptr inbounds %struct.WGPUCommandEncoderDescriptor, %struct.WGPUCommandEncoderDescriptor* %5, i64 0, i32 1
  store i8* %24, i8** %26, align 8
  br label %27

27:                                               ; preds = %2, %23
  %28 = phi %struct.WGPUCommandEncoderDescriptor* [ %5, %23 ], [ null, %2 ]
  %29 = getelementptr inbounds %"class.blink::GPUDevice", %"class.blink::GPUDevice"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %30 = load %"class.blink::DawnControlClientHolder"*, %"class.blink::DawnControlClientHolder"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %30, i64 0, i32 3, i32 47
  %32 = load %struct.WGPUCommandEncoderImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUCommandEncoderDescriptor*)*, %struct.WGPUCommandEncoderImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUCommandEncoderDescriptor*)** %31, align 8
  %33 = getelementptr inbounds %"class.blink::GPUDevice", %"class.blink::GPUDevice"* %0, i64 0, i32 2, i32 1
  %34 = load %struct.WGPUDeviceImpl*, %struct.WGPUDeviceImpl** %33, align 8
  %35 = call %struct.WGPUCommandEncoderImpl* %32(%struct.WGPUDeviceImpl* %34, %struct.WGPUCommandEncoderDescriptor* %28) #8
  %36 = ptrtoint %struct.WGPUCommandEncoderImpl* %35 to i64
  %37 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 56) #8
  %38 = bitcast i8* %37 to %"class.blink::GPUCommandEncoder"*
  %39 = bitcast i8* %37 to %"class.blink::DawnObjectImpl"*
  call void @_ZN5blink14DawnObjectImplC2EPNS_9GPUDeviceE(%"class.blink::DawnObjectImpl"* %39, %"class.blink::GPUDevice"* %0) #8
  %40 = bitcast i8* %37 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink10DawnObjectIP22WGPUCommandEncoderImplEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds i8, i8* %37, i64 40
  %42 = bitcast i8* %41 to i64*
  store i64 %36, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %37, i64 48
  %44 = bitcast i8* %43 to %struct.WGPUDeviceImpl**
  %45 = call %struct.WGPUDeviceImpl* @_ZN5blink14DawnObjectImpl15GetDeviceHandleEv(%"class.blink::DawnObjectImpl"* %39) #8
  store %struct.WGPUDeviceImpl* %45, %struct.WGPUDeviceImpl** %44, align 8
  %46 = getelementptr inbounds i8, i8* %37, i64 16
  %47 = bitcast i8* %46 to %"class.blink::DawnControlClientHolder"**
  %48 = load %"class.blink::DawnControlClientHolder"*, %"class.blink::DawnControlClientHolder"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %48, i64 0, i32 3, i32 70
  %50 = load void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)** %49, align 8
  call void %50(%struct.WGPUDeviceImpl* %45) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink17GPUCommandEncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %51 = getelementptr inbounds i8, i8* %37, i64 -4
  %52 = bitcast i8* %51 to i16*
  %53 = load atomic i16, i16* %52 monotonic, align 2
  %54 = or i16 %53, 1
  store atomic i16 %54, i16* %52 release, align 2
  %55 = bitcast i8* %46 to %"class.blink::DawnObjectBase"*
  %56 = getelementptr inbounds %"class.blink::GPUCommandEncoderDescriptor", %"class.blink::GPUCommandEncoderDescriptor"* %1, i64 0, i32 0, i32 1
  call void @_ZN5blink14DawnObjectBase8setLabelERKN3WTF6StringE(%"class.blink::DawnObjectBase"* %55, %"class.WTF::String"* dereferenceable(8) %56) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8
  %57 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %27
  %62 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %62) #9
  br label %63

63:                                               ; preds = %27, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret %"class.blink::GPUCommandEncoder"* %38
}

declare void @_ZN5blink14DawnObjectBase8setLabelERKN3WTF6StringE(%"class.blink::DawnObjectBase"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17GPUCommandEncoderC2EPNS_9GPUDeviceEP22WGPUCommandEncoderImpl(%"class.blink::GPUCommandEncoder"*, %"class.blink::GPUDevice"*, %struct.WGPUCommandEncoderImpl*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink14DawnObjectImplC2EPNS_9GPUDeviceE(%"class.blink::DawnObjectImpl"* %4, %"class.blink::GPUDevice"* %1) #8
  %5 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink10DawnObjectIP22WGPUCommandEncoderImplEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 1
  store %struct.WGPUCommandEncoderImpl* %2, %struct.WGPUCommandEncoderImpl** %6, align 8
  %7 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 2
  %8 = tail call %struct.WGPUDeviceImpl* @_ZN5blink14DawnObjectImpl15GetDeviceHandleEv(%"class.blink::DawnObjectImpl"* %4) #8
  store %struct.WGPUDeviceImpl* %8, %struct.WGPUDeviceImpl** %7, align 8
  %9 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::DawnControlClientHolder"*, %"class.blink::DawnControlClientHolder"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %10, i64 0, i32 3, i32 70
  %12 = load void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)** %11, align 8
  tail call void %12(%struct.WGPUDeviceImpl* %8) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink17GPUCommandEncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::GPURenderPassEncoder"* @_ZN5blink17GPUCommandEncoder15beginRenderPassEPKNS_23GPURenderPassDescriptorERNS_14ExceptionStateE(%"class.blink::GPUCommandEncoder"* nocapture readonly, %"class.blink::GPURenderPassDescriptor"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.WGPURenderPassColorAttachment, align 8
  %5 = alloca %"class.blink::GPULoadOpOrDoubleSequenceOrGPUColorDict", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %struct.WGPURenderPassDescriptor, align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %struct.WGPURenderPassDepthStencilAttachment, align 8
  %10 = alloca [12 x i8], align 4
  %11 = getelementptr inbounds %"class.blink::GPURenderPassDescriptor", %"class.blink::GPURenderPassDescriptor"* %1, i64 0, i32 2, i32 0
  %12 = getelementptr inbounds %"class.blink::GPURenderPassDescriptor", %"class.blink::GPURenderPassDescriptor"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %47, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.blink::GPULoadOpOrDoubleSequenceOrGPUColorDict"* %5 to i8*
  %18 = getelementptr inbounds %"class.blink::GPULoadOpOrDoubleSequenceOrGPUColorDict", %"class.blink::GPULoadOpOrDoubleSequenceOrGPUColorDict"* %5, i64 0, i32 0
  br label %19

19:                                               ; preds = %44, %15
  %20 = phi i32 [ 0, %15 ], [ %45, %44 ]
  %21 = call dereferenceable(8) %"class.blink::Member.257"* @_ZNK3WTF6VectorIN5blink6MemberINS1_28GPURenderPassColorAttachmentEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.254"* %11, i32 %20) #8
  %22 = getelementptr inbounds %"class.blink::Member.257", %"class.blink::Member.257"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::GPURenderPassColorAttachment"*, %"class.blink::GPURenderPassColorAttachment"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::GPURenderPassColorAttachment", %"class.blink::GPURenderPassColorAttachment"* %23, i64 0, i32 1, i32 0, i32 0
  %25 = load %"class.blink::GPUTextureView"*, %"class.blink::GPUTextureView"** %24, align 8
  %26 = icmp eq %"class.blink::GPUTextureView"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %19
  %28 = load %"class.blink::GPUDevice"*, %"class.blink::GPUDevice"** %16, align 8
  call void @_ZN5blink9GPUDevice17AddConsoleWarningEPKc(%"class.blink::GPUDevice"* %28, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @.str, i64 0, i64 0)) #8
  br label %34

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.blink::GPURenderPassColorAttachment", %"class.blink::GPURenderPassColorAttachment"* %23, i64 0, i32 5, i32 0, i32 0
  %31 = load %"class.blink::GPUTextureView"*, %"class.blink::GPUTextureView"** %30, align 8
  %32 = icmp eq %"class.blink::GPUTextureView"* %31, null
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0)) #8
  br label %215

34:                                               ; preds = %29, %27
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 40, i1 false)
  %35 = getelementptr inbounds %"class.blink::GPURenderPassColorAttachment", %"class.blink::GPURenderPassColorAttachment"* %23, i64 0, i32 2
  call void @_ZN5blink39GPULoadOpOrDoubleSequenceOrGPUColorDictC1ERKS0_(%"class.blink::GPULoadOpOrDoubleSequenceOrGPUColorDict"* nonnull %5, %"class.blink::GPULoadOpOrDoubleSequenceOrGPUColorDict"* dereferenceable(40) %35) #8
  %36 = load i32, i32* %18, align 8
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = call dereferenceable(16) %"class.WTF::Vector.165"* @_ZNK5blink39GPULoadOpOrDoubleSequenceOrGPUColorDict19GetAsDoubleSequenceEv(%"class.blink::GPULoadOpOrDoubleSequenceOrGPUColorDict"* nonnull %5) #8
  %40 = getelementptr inbounds %"class.WTF::Vector.165", %"class.WTF::Vector.165"* %39, i64 0, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 4
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0)) #8
  call void @_ZN5blink39GPULoadOpOrDoubleSequenceOrGPUColorDictD1Ev(%"class.blink::GPULoadOpOrDoubleSequenceOrGPUColorDict"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #8
  br label %215

44:                                               ; preds = %38, %34
  call void @_ZN5blink39GPULoadOpOrDoubleSequenceOrGPUColorDictD1Ev(%"class.blink::GPULoadOpOrDoubleSequenceOrGPUColorDict"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #8
  %45 = add nuw i32 %20, 1
  %46 = icmp eq i32 %45, %13
  br i1 %46, label %47, label %19

47:                                               ; preds = %44, %3
  %48 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #8
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 24, i1 false) #8
  %50 = bitcast %struct.WGPURenderPassDescriptor* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %50) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 48, i1 false)
  %51 = getelementptr inbounds %struct.WGPURenderPassDescriptor, %struct.WGPURenderPassDescriptor* %7, i64 0, i32 2
  store i32 %13, i32* %51, align 8
  %52 = getelementptr inbounds %struct.WGPURenderPassDescriptor, %struct.WGPURenderPassDescriptor* %7, i64 0, i32 3
  store %struct.WGPURenderPassColorAttachment* null, %struct.WGPURenderPassColorAttachment** %52, align 8
  %53 = getelementptr inbounds %"class.blink::GPURenderPassDescriptor", %"class.blink::GPURenderPassDescriptor"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %71, label %56

56:                                               ; preds = %47
  %57 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #8
  %58 = getelementptr inbounds %"class.blink::GPURenderPassDescriptor", %"class.blink::GPURenderPassDescriptor"* %1, i64 0, i32 0, i32 1
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %8, %"class.WTF::String"* %58, i32 0) #8
  %59 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %56
  %64 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %64) #9
  br label %65

65:                                               ; preds = %63, %56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %48, i8* nonnull align 8 %57, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #8
  %66 = load i8, i8* %60, align 1
  %67 = icmp slt i8 %66, 0
  %68 = load i8*, i8** %49, align 8
  %69 = select i1 %67, i8* %68, i8* %48
  %70 = getelementptr inbounds %struct.WGPURenderPassDescriptor, %struct.WGPURenderPassDescriptor* %7, i64 0, i32 1
  store i8* %69, i8** %70, align 8
  br label %71

71:                                               ; preds = %47, %65
  br i1 %14, label %93, label %72

72:                                               ; preds = %71
  %73 = load i32, i32* %12, align 4
  %74 = zext i32 %73 to i64
  %75 = shl nuw nsw i64 %74, 6
  %76 = call i8* @_Znam(i64 %75) #9
  %77 = bitcast i8* %76 to %struct.WGPURenderPassColorAttachment*
  %78 = icmp eq i32 %73, 0
  br i1 %78, label %91, label %79

79:                                               ; preds = %72
  %80 = bitcast %struct.WGPURenderPassColorAttachment* %4 to i8*
  br label %81

81:                                               ; preds = %81, %79
  %82 = phi i64 [ 0, %79 ], [ %89, %81 ]
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %80) #8
  %83 = trunc i64 %82 to i32
  %84 = call dereferenceable(8) %"class.blink::Member.257"* @_ZNK3WTF6VectorIN5blink6MemberINS1_28GPURenderPassColorAttachmentEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.254"* %11, i32 %83) #8
  %85 = getelementptr inbounds %"class.blink::Member.257", %"class.blink::Member.257"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.blink::GPURenderPassColorAttachment"*, %"class.blink::GPURenderPassColorAttachment"** %85, align 8
  call void @_ZN5blink10AsDawnTypeEPKNS_28GPURenderPassColorAttachmentE(%struct.WGPURenderPassColorAttachment* nonnull sret %4, %"class.blink::GPURenderPassColorAttachment"* %86) #8
  %87 = getelementptr inbounds %struct.WGPURenderPassColorAttachment, %struct.WGPURenderPassColorAttachment* %77, i64 %82
  %88 = bitcast %struct.WGPURenderPassColorAttachment* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* nonnull align 8 %80, i64 64, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %80) #8
  %89 = add nuw nsw i64 %82, 1
  %90 = icmp eq i64 %89, %74
  br i1 %90, label %91, label %81

91:                                               ; preds = %81, %72
  %92 = bitcast %struct.WGPURenderPassColorAttachment** %52 to i8**
  store i8* %76, i8** %92, align 8
  br label %93

93:                                               ; preds = %71, %91
  %94 = phi i8* [ null, %71 ], [ %76, %91 ]
  %95 = phi %struct.WGPURenderPassColorAttachment* [ null, %71 ], [ %77, %91 ]
  %96 = bitcast %struct.WGPURenderPassDepthStencilAttachment* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %96) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %96, i8 0, i64 48, i1 false)
  %97 = getelementptr inbounds %"class.blink::GPURenderPassDescriptor", %"class.blink::GPURenderPassDescriptor"* %1, i64 0, i32 3, i32 0, i32 0
  %98 = load %"class.blink::GPURenderPassDepthStencilAttachment"*, %"class.blink::GPURenderPassDepthStencilAttachment"** %97, align 8
  %99 = icmp eq %"class.blink::GPURenderPassDepthStencilAttachment"* %98, null
  br i1 %99, label %170, label %100

100:                                              ; preds = %93
  %101 = getelementptr inbounds %"class.blink::GPURenderPassDepthStencilAttachment", %"class.blink::GPURenderPassDepthStencilAttachment"* %98, i64 0, i32 1, i32 0, i32 0
  %102 = load %"class.blink::GPUTextureView"*, %"class.blink::GPUTextureView"** %101, align 8
  %103 = icmp eq %"class.blink::GPUTextureView"* %102, null
  br i1 %103, label %104, label %111

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::GPURenderPassDepthStencilAttachment", %"class.blink::GPURenderPassDepthStencilAttachment"* %98, i64 0, i32 6, i32 0, i32 0
  %106 = load %"class.blink::GPUTextureView"*, %"class.blink::GPUTextureView"** %105, align 8
  %107 = icmp eq %"class.blink::GPUTextureView"* %106, null
  br i1 %107, label %110, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds [12 x i8], [12 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %109)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %109, i8 0, i64 12, i1 false), !alias.scope !2
  br label %123

110:                                              ; preds = %104
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0)) #8
  br label %203

111:                                              ; preds = %100
  %112 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %113 = load %"class.blink::GPUDevice"*, %"class.blink::GPUDevice"** %112, align 8
  call void @_ZN5blink9GPUDevice17AddConsoleWarningEPKc(%"class.blink::GPUDevice"* %113, i8* getelementptr inbounds ([130 x i8], [130 x i8]* @.str.3, i64 0, i64 0)) #8
  %114 = load %"class.blink::GPURenderPassDepthStencilAttachment"*, %"class.blink::GPURenderPassDepthStencilAttachment"** %97, align 8
  %115 = getelementptr inbounds %"class.blink::GPURenderPassDepthStencilAttachment", %"class.blink::GPURenderPassDepthStencilAttachment"* %114, i64 0, i32 6, i32 0, i32 0
  %116 = load %"class.blink::GPUTextureView"*, %"class.blink::GPUTextureView"** %115, align 8, !noalias !2
  %117 = getelementptr inbounds [12 x i8], [12 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %117)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %117, i8 0, i64 12, i1 false), !alias.scope !2
  %118 = icmp eq %"class.blink::GPUTextureView"* %116, null
  br i1 %118, label %119, label %123

119:                                              ; preds = %111
  %120 = getelementptr inbounds %"class.blink::GPURenderPassDepthStencilAttachment", %"class.blink::GPURenderPassDepthStencilAttachment"* %114, i64 0, i32 1, i32 0, i32 0
  %121 = load %"class.blink::GPUTextureView"*, %"class.blink::GPUTextureView"** %120, align 8, !noalias !2
  %122 = icmp eq %"class.blink::GPUTextureView"* %121, null
  br i1 %122, label %130, label %123

123:                                              ; preds = %119, %111, %108
  %124 = phi %"class.blink::GPUTextureView"* [ %106, %108 ], [ %116, %111 ], [ %121, %119 ]
  %125 = phi i8* [ %109, %108 ], [ %117, %111 ], [ %117, %119 ]
  %126 = phi %"class.blink::GPURenderPassDepthStencilAttachment"* [ %98, %108 ], [ %114, %111 ], [ %114, %119 ]
  %127 = getelementptr inbounds %"class.blink::GPUTextureView", %"class.blink::GPUTextureView"* %124, i64 0, i32 0, i32 1
  %128 = bitcast %struct.WGPUTextureViewImpl** %127 to i64*
  %129 = load i64, i64* %128, align 8, !noalias !2
  br label %130

130:                                              ; preds = %123, %119
  %131 = phi i8* [ %117, %119 ], [ %125, %123 ]
  %132 = phi %"class.blink::GPURenderPassDepthStencilAttachment"* [ %114, %119 ], [ %126, %123 ]
  %133 = phi i64 [ 0, %119 ], [ %129, %123 ]
  %134 = getelementptr inbounds %"class.blink::GPURenderPassDepthStencilAttachment", %"class.blink::GPURenderPassDepthStencilAttachment"* %132, i64 0, i32 2
  %135 = getelementptr inbounds %"class.blink::GPULoadOpOrFloat", %"class.blink::GPULoadOpOrFloat"* %134, i64 0, i32 0
  %136 = load i32, i32* %135, align 8, !noalias !2
  switch i32 %136, label %142 [
    i32 2, label %137
    i32 1, label %140
  ]

137:                                              ; preds = %130
  %138 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink16GPULoadOpOrFloat14GetAsGPULoadOpEv(%"class.blink::GPULoadOpOrFloat"* %134) #8, !noalias !2
  %139 = call i32 @_ZN5blink10AsDawnEnumI10WGPULoadOpEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %138) #8, !noalias !2
  br label %142

140:                                              ; preds = %130
  %141 = call float @_ZNK5blink16GPULoadOpOrFloat10GetAsFloatEv(%"class.blink::GPULoadOpOrFloat"* %134) #8, !noalias !2
  br label %142

142:                                              ; preds = %140, %137, %130
  %143 = phi i32 [ 0, %130 ], [ 0, %140 ], [ %139, %137 ]
  %144 = phi float [ 0.000000e+00, %130 ], [ %141, %140 ], [ 1.000000e+00, %137 ]
  %145 = getelementptr inbounds %"class.blink::GPURenderPassDepthStencilAttachment", %"class.blink::GPURenderPassDepthStencilAttachment"* %132, i64 0, i32 3
  %146 = call i32 @_ZN5blink10AsDawnEnumI11WGPUStoreOpEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %145) #8, !noalias !2
  %147 = getelementptr inbounds %"class.blink::GPURenderPassDepthStencilAttachment", %"class.blink::GPURenderPassDepthStencilAttachment"* %132, i64 0, i32 4
  %148 = getelementptr inbounds %"class.blink::GPULoadOpOrUnsignedLongEnforceRange", %"class.blink::GPULoadOpOrUnsignedLongEnforceRange"* %147, i64 0, i32 0
  %149 = load i32, i32* %148, align 8, !noalias !2
  switch i32 %149, label %155 [
    i32 1, label %150
    i32 2, label %153
  ]

150:                                              ; preds = %142
  %151 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink35GPULoadOpOrUnsignedLongEnforceRange14GetAsGPULoadOpEv(%"class.blink::GPULoadOpOrUnsignedLongEnforceRange"* %147) #8, !noalias !2
  %152 = call i32 @_ZN5blink10AsDawnEnumI10WGPULoadOpEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %151) #8, !noalias !2
  br label %155

153:                                              ; preds = %142
  %154 = call i32 @_ZNK5blink35GPULoadOpOrUnsignedLongEnforceRange17GetAsUnsignedLongEv(%"class.blink::GPULoadOpOrUnsignedLongEnforceRange"* %147) #8, !noalias !2
  br label %155

155:                                              ; preds = %142, %150, %153
  %156 = phi i32 [ 0, %142 ], [ 0, %153 ], [ %152, %150 ]
  %157 = phi i32 [ 0, %142 ], [ %154, %153 ], [ 0, %150 ]
  %158 = getelementptr inbounds %"class.blink::GPURenderPassDepthStencilAttachment", %"class.blink::GPURenderPassDepthStencilAttachment"* %132, i64 0, i32 5
  %159 = call i32 @_ZN5blink10AsDawnEnumI11WGPUStoreOpEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %158) #8, !noalias !2
  %160 = bitcast %struct.WGPURenderPassDepthStencilAttachment* %9 to i64*
  store i64 %133, i64* %160, align 8
  %161 = getelementptr inbounds %struct.WGPURenderPassDepthStencilAttachment, %struct.WGPURenderPassDepthStencilAttachment* %9, i64 0, i32 1
  store i32 %143, i32* %161, align 8
  %162 = getelementptr inbounds %struct.WGPURenderPassDepthStencilAttachment, %struct.WGPURenderPassDepthStencilAttachment* %9, i64 0, i32 2
  store i32 %146, i32* %162, align 4
  %163 = getelementptr inbounds %struct.WGPURenderPassDepthStencilAttachment, %struct.WGPURenderPassDepthStencilAttachment* %9, i64 0, i32 3
  store float %144, float* %163, align 8
  %164 = getelementptr inbounds %struct.WGPURenderPassDepthStencilAttachment, %struct.WGPURenderPassDepthStencilAttachment* %9, i64 0, i32 4
  %165 = bitcast i8* %164 to i32*
  store i32 0, i32* %165, align 4
  %166 = getelementptr inbounds %struct.WGPURenderPassDepthStencilAttachment, %struct.WGPURenderPassDepthStencilAttachment* %9, i64 0, i32 5
  store i32 %156, i32* %166, align 8
  %167 = getelementptr inbounds %struct.WGPURenderPassDepthStencilAttachment, %struct.WGPURenderPassDepthStencilAttachment* %9, i64 0, i32 6
  store i32 %159, i32* %167, align 4
  %168 = getelementptr inbounds %struct.WGPURenderPassDepthStencilAttachment, %struct.WGPURenderPassDepthStencilAttachment* %9, i64 0, i32 7
  store i32 %157, i32* %168, align 8
  %169 = getelementptr inbounds %struct.WGPURenderPassDepthStencilAttachment, %struct.WGPURenderPassDepthStencilAttachment* %9, i64 0, i32 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %169, i8* nonnull align 4 %131, i64 12, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %131)
  br label %170

170:                                              ; preds = %93, %155
  %171 = phi %struct.WGPURenderPassDepthStencilAttachment* [ %9, %155 ], [ null, %93 ]
  %172 = getelementptr inbounds %struct.WGPURenderPassDescriptor, %struct.WGPURenderPassDescriptor* %7, i64 0, i32 4
  store %struct.WGPURenderPassDepthStencilAttachment* %171, %struct.WGPURenderPassDepthStencilAttachment** %172, align 8
  %173 = getelementptr inbounds %"class.blink::GPURenderPassDescriptor", %"class.blink::GPURenderPassDescriptor"* %1, i64 0, i32 4, i32 0, i32 0
  %174 = load %"class.blink::GPUQuerySet"*, %"class.blink::GPUQuerySet"** %173, align 8
  %175 = icmp eq %"class.blink::GPUQuerySet"* %174, null
  br i1 %175, label %182, label %176

176:                                              ; preds = %170
  %177 = getelementptr inbounds %"class.blink::GPUQuerySet", %"class.blink::GPUQuerySet"* %174, i64 0, i32 0, i32 1
  %178 = bitcast %struct.WGPUQuerySetImpl** %177 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = getelementptr inbounds %struct.WGPURenderPassDescriptor, %struct.WGPURenderPassDescriptor* %7, i64 0, i32 5
  %181 = bitcast %struct.WGPUQuerySetImpl** %180 to i64*
  store i64 %179, i64* %181, align 8
  br label %184

182:                                              ; preds = %170
  %183 = getelementptr inbounds %struct.WGPURenderPassDescriptor, %struct.WGPURenderPassDescriptor* %7, i64 0, i32 5
  store %struct.WGPUQuerySetImpl* null, %struct.WGPUQuerySetImpl** %183, align 8
  br label %184

184:                                              ; preds = %182, %176
  %185 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %186 = load %"class.blink::DawnControlClientHolder"*, %"class.blink::DawnControlClientHolder"** %185, align 8
  %187 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %186, i64 0, i32 3, i32 16
  %188 = load %struct.WGPURenderPassEncoderImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPURenderPassDescriptor*)*, %struct.WGPURenderPassEncoderImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPURenderPassDescriptor*)** %187, align 8
  %189 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 1
  %190 = load %struct.WGPUCommandEncoderImpl*, %struct.WGPUCommandEncoderImpl** %189, align 8
  %191 = call %struct.WGPURenderPassEncoderImpl* %188(%struct.WGPUCommandEncoderImpl* %190, %struct.WGPURenderPassDescriptor* nonnull %7) #8
  %192 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 80) #8
  %193 = bitcast i8* %192 to %"class.blink::GPURenderPassEncoder"*
  %194 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %195 = load %"class.blink::GPUDevice"*, %"class.blink::GPUDevice"** %194, align 8
  call void @_ZN5blink20GPURenderPassEncoderC1EPNS_9GPUDeviceEP25WGPURenderPassEncoderImpl(%"class.blink::GPURenderPassEncoder"* %193, %"class.blink::GPUDevice"* %195, %struct.WGPURenderPassEncoderImpl* %191) #8
  %196 = getelementptr inbounds i8, i8* %192, i64 -4
  %197 = bitcast i8* %196 to i16*
  %198 = load atomic i16, i16* %197 monotonic, align 2
  %199 = or i16 %198, 1
  store atomic i16 %199, i16* %197 release, align 2
  %200 = getelementptr inbounds i8, i8* %192, i64 16
  %201 = bitcast i8* %200 to %"class.blink::DawnObjectBase"*
  %202 = getelementptr inbounds %"class.blink::GPURenderPassDescriptor", %"class.blink::GPURenderPassDescriptor"* %1, i64 0, i32 0, i32 1
  call void @_ZN5blink14DawnObjectBase8setLabelERKN3WTF6StringE(%"class.blink::DawnObjectBase"* %201, %"class.WTF::String"* dereferenceable(8) %202) #8
  br label %203

203:                                              ; preds = %184, %110
  %204 = phi %"class.blink::GPURenderPassEncoder"* [ %193, %184 ], [ null, %110 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %96) #8
  %205 = icmp eq %struct.WGPURenderPassColorAttachment* %95, null
  br i1 %205, label %207, label %206

206:                                              ; preds = %203
  call void @_ZdaPv(i8* %94) #9
  br label %207

207:                                              ; preds = %203, %206
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %50) #8
  %208 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %209 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %208, i64 0, i32 1, i32 0
  %210 = load i8, i8* %209, align 1
  %211 = icmp slt i8 %210, 0
  br i1 %211, label %212, label %214

212:                                              ; preds = %207
  %213 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %213) #9
  br label %214

214:                                              ; preds = %207, %212
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #8
  br label %215

215:                                              ; preds = %43, %33, %214
  %216 = phi %"class.blink::GPURenderPassEncoder"* [ %204, %214 ], [ null, %33 ], [ null, %43 ]
  ret %"class.blink::GPURenderPassEncoder"* %216
}

declare void @_ZN5blink9GPUDevice17AddConsoleWarningEPKc(%"class.blink::GPUDevice"*, i8*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

declare void @_ZN5blink39GPULoadOpOrDoubleSequenceOrGPUColorDictC1ERKS0_(%"class.blink::GPULoadOpOrDoubleSequenceOrGPUColorDict"*, %"class.blink::GPULoadOpOrDoubleSequenceOrGPUColorDict"* dereferenceable(40)) unnamed_addr #2

declare void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink39GPULoadOpOrDoubleSequenceOrGPUColorDictD1Ev(%"class.blink::GPULoadOpOrDoubleSequenceOrGPUColorDict"*) unnamed_addr #3

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::GPUComputePassEncoder"* @_ZN5blink17GPUCommandEncoder16beginComputePassEPKNS_24GPUComputePassDescriptorE(%"class.blink::GPUCommandEncoder"* nocapture readonly, %"class.blink::GPUComputePassDescriptor"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %struct.WGPUComputePassDescriptor, align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #8
  %8 = bitcast %struct.WGPUComputePassDescriptor* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false)
  %9 = getelementptr inbounds %"class.blink::GPUComputePassDescriptor", %"class.blink::GPUComputePassDescriptor"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %24

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.blink::GPUComputePassDescriptor", %"class.blink::GPUComputePassDescriptor"* %1, i64 0, i32 0, i32 1
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.WTF::String"* %16, i32 0) #8
  %17 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* nonnull align 8 %15, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #8
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = load i8*, i8** %7, align 8
  %22 = select i1 %20, i8* %21, i8* %6
  %23 = getelementptr inbounds %struct.WGPUComputePassDescriptor, %struct.WGPUComputePassDescriptor* %4, i64 0, i32 1
  store i8* %22, i8** %23, align 8
  br label %24

24:                                               ; preds = %12, %14
  %25 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %13, %12 ], [ %17, %14 ]
  %26 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %27 = load %"class.blink::DawnControlClientHolder"*, %"class.blink::DawnControlClientHolder"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %27, i64 0, i32 3, i32 15
  %29 = load %struct.WGPUComputePassEncoderImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPUComputePassDescriptor*)*, %struct.WGPUComputePassEncoderImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPUComputePassDescriptor*)** %28, align 8
  %30 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 1
  %31 = load %struct.WGPUCommandEncoderImpl*, %struct.WGPUCommandEncoderImpl** %30, align 8
  %32 = call %struct.WGPUComputePassEncoderImpl* %29(%struct.WGPUCommandEncoderImpl* %31, %struct.WGPUComputePassDescriptor* nonnull %4) #8
  %33 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 56) #8
  %34 = bitcast i8* %33 to %"class.blink::GPUComputePassEncoder"*
  %35 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::GPUDevice"*, %"class.blink::GPUDevice"** %35, align 8
  call void @_ZN5blink21GPUComputePassEncoderC1EPNS_9GPUDeviceEP26WGPUComputePassEncoderImpl(%"class.blink::GPUComputePassEncoder"* %34, %"class.blink::GPUDevice"* %36, %struct.WGPUComputePassEncoderImpl* %32) #8
  %37 = getelementptr inbounds i8, i8* %33, i64 -4
  %38 = bitcast i8* %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = or i16 %39, 1
  store atomic i16 %40, i16* %38 release, align 2
  %41 = getelementptr inbounds i8, i8* %33, i64 16
  %42 = bitcast i8* %41 to %"class.blink::DawnObjectBase"*
  %43 = getelementptr inbounds %"class.blink::GPUComputePassDescriptor", %"class.blink::GPUComputePassDescriptor"* %1, i64 0, i32 0, i32 1
  call void @_ZN5blink14DawnObjectBase8setLabelERKN3WTF6StringE(%"class.blink::DawnObjectBase"* %42, %"class.WTF::String"* dereferenceable(8) %43) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %24
  %48 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %48) #9
  br label %49

49:                                               ; preds = %24, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret %"class.blink::GPUComputePassEncoder"* %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17GPUCommandEncoder19copyBufferToTextureEPNS_18GPUImageCopyBufferEPNS_19GPUImageCopyTextureEPKNS_56V8UnionGPUExtent3DDictOrUnsignedLongEnforceRangeSequenceE(%"class.blink::GPUCommandEncoder"* nocapture readonly, %"class.blink::GPUImageCopyBuffer"*, %"class.blink::GPUImageCopyTexture"*, %"class.blink::V8UnionGPUExtent3DDictOrUnsignedLongEnforceRangeSequence"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %struct.WGPUExtent3D, align 8
  %6 = alloca %struct.WGPUImageCopyTexture, align 8
  %7 = alloca %struct.WGPUImageCopyBuffer, align 8
  %8 = bitcast %struct.WGPUExtent3D* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %8) #8
  %9 = getelementptr inbounds %struct.WGPUExtent3D, %struct.WGPUExtent3D* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::GPUDevice"*, %"class.blink::GPUDevice"** %10, align 8
  %12 = tail call { i64, i32 } @_ZN5blink10AsDawnTypeEPKNS_56V8UnionGPUExtent3DDictOrUnsignedLongEnforceRangeSequenceEPNS_9GPUDeviceE(%"class.blink::V8UnionGPUExtent3DDictOrUnsignedLongEnforceRangeSequence"* %3, %"class.blink::GPUDevice"* %11) #8
  %13 = extractvalue { i64, i32 } %12, 0
  %14 = extractvalue { i64, i32 } %12, 1
  %15 = bitcast %struct.WGPUExtent3D* %5 to i64*
  store i64 %13, i64* %15, align 8
  store i32 %14, i32* %9, align 8
  %16 = bitcast %struct.WGPUImageCopyTexture* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false)
  %17 = load %"class.blink::GPUDevice"*, %"class.blink::GPUDevice"** %10, align 8
  call void @_ZN5blink10AsDawnTypeEPKNS_19GPUImageCopyTextureEPNS_9GPUDeviceE(%struct.WGPUImageCopyTexture* nonnull sret %6, %"class.blink::GPUImageCopyTexture"* %2, %"class.blink::GPUDevice"* %17) #8
  %18 = bitcast %struct.WGPUImageCopyBuffer* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #8
  %19 = getelementptr inbounds %struct.WGPUImageCopyBuffer, %struct.WGPUImageCopyBuffer* %7, i64 0, i32 2
  %20 = getelementptr inbounds %"class.blink::GPUImageCopyBuffer", %"class.blink::GPUImageCopyBuffer"* %1, i64 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 32, i1 false) #8, !alias.scope !5
  %21 = load %"class.blink::GPUBuffer"*, %"class.blink::GPUBuffer"** %20, align 8, !noalias !5
  %22 = getelementptr inbounds %"class.blink::GPUBuffer", %"class.blink::GPUBuffer"* %21, i64 0, i32 0, i32 1
  %23 = bitcast %struct.WGPUBufferImpl** %22 to i64*
  %24 = load i64, i64* %23, align 8, !noalias !5
  %25 = bitcast %struct.WGPUBufferImpl** %19 to i64*
  store i64 %24, i64* %25, align 8, !alias.scope !5
  %26 = bitcast %"class.blink::GPUImageCopyBuffer"* %1 to %"class.blink::GPUImageDataLayout"*
  %27 = getelementptr inbounds %struct.WGPUImageCopyBuffer, %struct.WGPUImageCopyBuffer* %7, i64 0, i32 1
  %28 = call i8* @_ZN5blink25ValidateTextureDataLayoutEPKNS_18GPUImageDataLayoutEP21WGPUTextureDataLayout(%"class.blink::GPUImageDataLayout"* %26, %struct.WGPUTextureDataLayout* %27) #8
  %29 = icmp eq i8* %28, null
  %30 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %31 = load %"class.blink::DawnControlClientHolder"*, %"class.blink::DawnControlClientHolder"** %30, align 8
  br i1 %29, label %37, label %32

32:                                               ; preds = %4
  %33 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %31, i64 0, i32 3, i32 22
  %34 = load void (%struct.WGPUCommandEncoderImpl*, i8*)*, void (%struct.WGPUCommandEncoderImpl*, i8*)** %33, align 8
  %35 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 1
  %36 = load %struct.WGPUCommandEncoderImpl*, %struct.WGPUCommandEncoderImpl** %35, align 8
  call void %34(%struct.WGPUCommandEncoderImpl* %36, i8* nonnull %28) #8
  br label %42

37:                                               ; preds = %4
  %38 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %31, i64 0, i32 3, i32 18
  %39 = load void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyBuffer*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyBuffer*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*)** %38, align 8
  %40 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 1
  %41 = load %struct.WGPUCommandEncoderImpl*, %struct.WGPUCommandEncoderImpl** %40, align 8
  call void %39(%struct.WGPUCommandEncoderImpl* %41, %struct.WGPUImageCopyBuffer* nonnull %7, %struct.WGPUImageCopyTexture* nonnull %6, %struct.WGPUExtent3D* nonnull %5) #8
  br label %42

42:                                               ; preds = %37, %32
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %8) #8
  ret void
}

declare { i64, i32 } @_ZN5blink10AsDawnTypeEPKNS_56V8UnionGPUExtent3DDictOrUnsignedLongEnforceRangeSequenceEPNS_9GPUDeviceE(%"class.blink::V8UnionGPUExtent3DDictOrUnsignedLongEnforceRangeSequence"*, %"class.blink::GPUDevice"*) local_unnamed_addr #2

declare void @_ZN5blink10AsDawnTypeEPKNS_19GPUImageCopyTextureEPNS_9GPUDeviceE(%struct.WGPUImageCopyTexture* sret, %"class.blink::GPUImageCopyTexture"*, %"class.blink::GPUDevice"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17GPUCommandEncoder19copyTextureToBufferEPNS_19GPUImageCopyTextureEPNS_18GPUImageCopyBufferEPKNS_56V8UnionGPUExtent3DDictOrUnsignedLongEnforceRangeSequenceE(%"class.blink::GPUCommandEncoder"* nocapture readonly, %"class.blink::GPUImageCopyTexture"*, %"class.blink::GPUImageCopyBuffer"*, %"class.blink::V8UnionGPUExtent3DDictOrUnsignedLongEnforceRangeSequence"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %struct.WGPUExtent3D, align 8
  %6 = alloca %struct.WGPUImageCopyTexture, align 8
  %7 = alloca %struct.WGPUImageCopyBuffer, align 8
  %8 = bitcast %struct.WGPUExtent3D* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %8) #8
  %9 = getelementptr inbounds %struct.WGPUExtent3D, %struct.WGPUExtent3D* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::GPUDevice"*, %"class.blink::GPUDevice"** %10, align 8
  %12 = tail call { i64, i32 } @_ZN5blink10AsDawnTypeEPKNS_56V8UnionGPUExtent3DDictOrUnsignedLongEnforceRangeSequenceEPNS_9GPUDeviceE(%"class.blink::V8UnionGPUExtent3DDictOrUnsignedLongEnforceRangeSequence"* %3, %"class.blink::GPUDevice"* %11) #8
  %13 = extractvalue { i64, i32 } %12, 0
  %14 = extractvalue { i64, i32 } %12, 1
  %15 = bitcast %struct.WGPUExtent3D* %5 to i64*
  store i64 %13, i64* %15, align 8
  store i32 %14, i32* %9, align 8
  %16 = bitcast %struct.WGPUImageCopyTexture* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false)
  %17 = load %"class.blink::GPUDevice"*, %"class.blink::GPUDevice"** %10, align 8
  call void @_ZN5blink10AsDawnTypeEPKNS_19GPUImageCopyTextureEPNS_9GPUDeviceE(%struct.WGPUImageCopyTexture* nonnull sret %6, %"class.blink::GPUImageCopyTexture"* %1, %"class.blink::GPUDevice"* %17) #8
  %18 = bitcast %struct.WGPUImageCopyBuffer* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #8
  %19 = getelementptr inbounds %struct.WGPUImageCopyBuffer, %struct.WGPUImageCopyBuffer* %7, i64 0, i32 2
  %20 = getelementptr inbounds %"class.blink::GPUImageCopyBuffer", %"class.blink::GPUImageCopyBuffer"* %2, i64 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 32, i1 false) #8, !alias.scope !8
  %21 = load %"class.blink::GPUBuffer"*, %"class.blink::GPUBuffer"** %20, align 8, !noalias !8
  %22 = getelementptr inbounds %"class.blink::GPUBuffer", %"class.blink::GPUBuffer"* %21, i64 0, i32 0, i32 1
  %23 = bitcast %struct.WGPUBufferImpl** %22 to i64*
  %24 = load i64, i64* %23, align 8, !noalias !8
  %25 = bitcast %struct.WGPUBufferImpl** %19 to i64*
  store i64 %24, i64* %25, align 8, !alias.scope !8
  %26 = bitcast %"class.blink::GPUImageCopyBuffer"* %2 to %"class.blink::GPUImageDataLayout"*
  %27 = getelementptr inbounds %struct.WGPUImageCopyBuffer, %struct.WGPUImageCopyBuffer* %7, i64 0, i32 1
  %28 = call i8* @_ZN5blink25ValidateTextureDataLayoutEPKNS_18GPUImageDataLayoutEP21WGPUTextureDataLayout(%"class.blink::GPUImageDataLayout"* %26, %struct.WGPUTextureDataLayout* %27) #8
  %29 = icmp eq i8* %28, null
  %30 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %31 = load %"class.blink::DawnControlClientHolder"*, %"class.blink::DawnControlClientHolder"** %30, align 8
  br i1 %29, label %37, label %32

32:                                               ; preds = %4
  %33 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %31, i64 0, i32 3, i32 22
  %34 = load void (%struct.WGPUCommandEncoderImpl*, i8*)*, void (%struct.WGPUCommandEncoderImpl*, i8*)** %33, align 8
  %35 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 1
  %36 = load %struct.WGPUCommandEncoderImpl*, %struct.WGPUCommandEncoderImpl** %35, align 8
  call void %34(%struct.WGPUCommandEncoderImpl* %36, i8* nonnull %28) #8
  br label %42

37:                                               ; preds = %4
  %38 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %31, i64 0, i32 3, i32 19
  %39 = load void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyBuffer*, %struct.WGPUExtent3D*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyBuffer*, %struct.WGPUExtent3D*)** %38, align 8
  %40 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 1
  %41 = load %struct.WGPUCommandEncoderImpl*, %struct.WGPUCommandEncoderImpl** %40, align 8
  call void %39(%struct.WGPUCommandEncoderImpl* %41, %struct.WGPUImageCopyTexture* nonnull %6, %struct.WGPUImageCopyBuffer* nonnull %7, %struct.WGPUExtent3D* nonnull %5) #8
  br label %42

42:                                               ; preds = %37, %32
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %8) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17GPUCommandEncoder20copyTextureToTextureEPNS_19GPUImageCopyTextureES2_PKNS_56V8UnionGPUExtent3DDictOrUnsignedLongEnforceRangeSequenceE(%"class.blink::GPUCommandEncoder"* nocapture readonly, %"class.blink::GPUImageCopyTexture"*, %"class.blink::GPUImageCopyTexture"*, %"class.blink::V8UnionGPUExtent3DDictOrUnsignedLongEnforceRangeSequence"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %struct.WGPUImageCopyTexture, align 8
  %6 = alloca %struct.WGPUImageCopyTexture, align 8
  %7 = alloca %struct.WGPUExtent3D, align 8
  %8 = bitcast %struct.WGPUImageCopyTexture* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 40, i1 false)
  %9 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::GPUDevice"*, %"class.blink::GPUDevice"** %9, align 8
  call void @_ZN5blink10AsDawnTypeEPKNS_19GPUImageCopyTextureEPNS_9GPUDeviceE(%struct.WGPUImageCopyTexture* nonnull sret %5, %"class.blink::GPUImageCopyTexture"* %1, %"class.blink::GPUDevice"* %10) #8
  %11 = bitcast %struct.WGPUImageCopyTexture* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = load %"class.blink::GPUDevice"*, %"class.blink::GPUDevice"** %9, align 8
  call void @_ZN5blink10AsDawnTypeEPKNS_19GPUImageCopyTextureEPNS_9GPUDeviceE(%struct.WGPUImageCopyTexture* nonnull sret %6, %"class.blink::GPUImageCopyTexture"* %2, %"class.blink::GPUDevice"* %12) #8
  %13 = bitcast %struct.WGPUExtent3D* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %13) #8
  %14 = getelementptr inbounds %struct.WGPUExtent3D, %struct.WGPUExtent3D* %7, i64 0, i32 2
  %15 = load %"class.blink::GPUDevice"*, %"class.blink::GPUDevice"** %9, align 8
  %16 = call { i64, i32 } @_ZN5blink10AsDawnTypeEPKNS_56V8UnionGPUExtent3DDictOrUnsignedLongEnforceRangeSequenceEPNS_9GPUDeviceE(%"class.blink::V8UnionGPUExtent3DDictOrUnsignedLongEnforceRangeSequence"* %3, %"class.blink::GPUDevice"* %15) #8
  %17 = extractvalue { i64, i32 } %16, 0
  %18 = extractvalue { i64, i32 } %16, 1
  %19 = bitcast %struct.WGPUExtent3D* %7 to i64*
  store i64 %17, i64* %19, align 8
  store i32 %18, i32* %14, align 8
  %20 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %21 = load %"class.blink::DawnControlClientHolder"*, %"class.blink::DawnControlClientHolder"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %21, i64 0, i32 3, i32 20
  %23 = load void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*)** %22, align 8
  %24 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 1
  %25 = load %struct.WGPUCommandEncoderImpl*, %struct.WGPUCommandEncoderImpl** %24, align 8
  call void %23(%struct.WGPUCommandEncoderImpl* %25, %struct.WGPUImageCopyTexture* nonnull %5, %struct.WGPUImageCopyTexture* nonnull %6, %struct.WGPUExtent3D* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::GPUCommandBuffer"* @_ZN5blink17GPUCommandEncoder6finishEPKNS_26GPUCommandBufferDescriptorE(%"class.blink::GPUCommandEncoder"* nocapture readonly, %"class.blink::GPUCommandBufferDescriptor"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %struct.WGPUCommandBufferDescriptor, align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #8
  %8 = bitcast %struct.WGPUCommandBufferDescriptor* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false)
  %9 = getelementptr inbounds %"class.blink::GPUCommandBufferDescriptor", %"class.blink::GPUCommandBufferDescriptor"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %24

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.blink::GPUCommandBufferDescriptor", %"class.blink::GPUCommandBufferDescriptor"* %1, i64 0, i32 0, i32 1
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.WTF::String"* %16, i32 0) #8
  %17 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* nonnull align 8 %15, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #8
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = load i8*, i8** %7, align 8
  %22 = select i1 %20, i8* %21, i8* %6
  %23 = getelementptr inbounds %struct.WGPUCommandBufferDescriptor, %struct.WGPUCommandBufferDescriptor* %4, i64 0, i32 1
  store i8* %22, i8** %23, align 8
  br label %24

24:                                               ; preds = %12, %14
  %25 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %13, %12 ], [ %17, %14 ]
  %26 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %27 = load %"class.blink::DawnControlClientHolder"*, %"class.blink::DawnControlClientHolder"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %27, i64 0, i32 3, i32 21
  %29 = load %struct.WGPUCommandBufferImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPUCommandBufferDescriptor*)*, %struct.WGPUCommandBufferImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPUCommandBufferDescriptor*)** %28, align 8
  %30 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 1
  %31 = load %struct.WGPUCommandEncoderImpl*, %struct.WGPUCommandEncoderImpl** %30, align 8
  %32 = call %struct.WGPUCommandBufferImpl* %29(%struct.WGPUCommandEncoderImpl* %31, %struct.WGPUCommandBufferDescriptor* nonnull %4) #8
  %33 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 56) #8
  %34 = bitcast i8* %33 to %"class.blink::GPUCommandBuffer"*
  %35 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::GPUDevice"*, %"class.blink::GPUDevice"** %35, align 8
  call void @_ZN5blink16GPUCommandBufferC1EPNS_9GPUDeviceEP21WGPUCommandBufferImpl(%"class.blink::GPUCommandBuffer"* %34, %"class.blink::GPUDevice"* %36, %struct.WGPUCommandBufferImpl* %32) #8
  %37 = getelementptr inbounds i8, i8* %33, i64 -4
  %38 = bitcast i8* %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = or i16 %39, 1
  store atomic i16 %40, i16* %38 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %24
  %45 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %45) #9
  br label %46

46:                                               ; preds = %24, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret %"class.blink::GPUCommandBuffer"* %34
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17GPUCommandEncoderD0Ev(%"class.blink::GPUCommandEncoder"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink10DawnObjectIP22WGPUCommandEncoderImplEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::DawnControlClientHolder"*, %"class.blink::DawnControlClientHolder"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %4, i64 0, i32 3, i32 29
  %6 = load void (%struct.WGPUCommandEncoderImpl*)*, void (%struct.WGPUCommandEncoderImpl*)** %5, align 8
  %7 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 1
  %8 = load %struct.WGPUCommandEncoderImpl*, %struct.WGPUCommandEncoderImpl** %7, align 8
  tail call void %6(%struct.WGPUCommandEncoderImpl* %8) #8
  %9 = load %"class.blink::DawnControlClientHolder"*, %"class.blink::DawnControlClientHolder"** %3, align 8
  %10 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %9, i64 0, i32 3, i32 71
  %11 = load void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)** %10, align 8
  %12 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 2
  %13 = load %struct.WGPUDeviceImpl*, %struct.WGPUDeviceImpl** %12, align 8
  tail call void %11(%struct.WGPUDeviceImpl* %13) #8
  %14 = getelementptr inbounds %"class.blink::GPUCommandEncoder", %"class.blink::GPUCommandEncoder"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink14DawnObjectImplD2Ev(%"class.blink::DawnObjectImpl"* %14) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink14DawnObjectImpl5TraceEPNS_7VisitorE(%"class.blink::DawnObjectImpl"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink17GPUCommandEncoder18GetWrapperTypeInfoEv(%"class.blink::GPUCommandEncoder"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink17GPUCommandEncoder18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink16GPULoadOpOrFloat14GetAsGPULoadOpEv(%"class.blink::GPULoadOpOrFloat"*) local_unnamed_addr #2

declare float @_ZNK5blink16GPULoadOpOrFloat10GetAsFloatEv(%"class.blink::GPULoadOpOrFloat"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink35GPULoadOpOrUnsignedLongEnforceRange14GetAsGPULoadOpEv(%"class.blink::GPULoadOpOrUnsignedLongEnforceRange"*) local_unnamed_addr #2

declare i32 @_ZNK5blink35GPULoadOpOrUnsignedLongEnforceRange17GetAsUnsignedLongEv(%"class.blink::GPULoadOpOrUnsignedLongEnforceRange"*) local_unnamed_addr #2

declare i8* @_ZN5blink25ValidateTextureDataLayoutEPKNS_18GPUImageDataLayoutEP21WGPUTextureDataLayout(%"class.blink::GPUImageDataLayout"*, %struct.WGPUTextureDataLayout*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !11

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #8
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.115"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.115"*)) #8
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #8
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %40, i8* %41) #8
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #8
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #8
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !11

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #8
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #8
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.115"*) local_unnamed_addr #2

declare void @_ZN5blink14DawnObjectImplC2EPNS_9GPUDeviceE(%"class.blink::DawnObjectImpl"*, %"class.blink::GPUDevice"*) unnamed_addr #2

declare %struct.WGPUDeviceImpl* @_ZN5blink14DawnObjectImpl15GetDeviceHandleEv(%"class.blink::DawnObjectImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10DawnObjectIP22WGPUCommandEncoderImplED2Ev(%"class.blink::DawnObject.237"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DawnObject.237", %"class.blink::DawnObject.237"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink10DawnObjectIP22WGPUCommandEncoderImplEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DawnObject.237", %"class.blink::DawnObject.237"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::DawnControlClientHolder"*, %"class.blink::DawnControlClientHolder"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %4, i64 0, i32 3, i32 29
  %6 = load void (%struct.WGPUCommandEncoderImpl*)*, void (%struct.WGPUCommandEncoderImpl*)** %5, align 8
  %7 = getelementptr inbounds %"class.blink::DawnObject.237", %"class.blink::DawnObject.237"* %0, i64 0, i32 1
  %8 = load %struct.WGPUCommandEncoderImpl*, %struct.WGPUCommandEncoderImpl** %7, align 8
  tail call void %6(%struct.WGPUCommandEncoderImpl* %8) #8
  %9 = load %"class.blink::DawnControlClientHolder"*, %"class.blink::DawnControlClientHolder"** %3, align 8
  %10 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %9, i64 0, i32 3, i32 71
  %11 = load void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)** %10, align 8
  %12 = getelementptr inbounds %"class.blink::DawnObject.237", %"class.blink::DawnObject.237"* %0, i64 0, i32 2
  %13 = load %struct.WGPUDeviceImpl*, %struct.WGPUDeviceImpl** %12, align 8
  tail call void %11(%struct.WGPUDeviceImpl* %13) #8
  %14 = getelementptr inbounds %"class.blink::DawnObject.237", %"class.blink::DawnObject.237"* %0, i64 0, i32 0
  tail call void @_ZN5blink14DawnObjectImplD2Ev(%"class.blink::DawnObjectImpl"* %14) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10DawnObjectIP22WGPUCommandEncoderImplED0Ev(%"class.blink::DawnObject.237"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN5blink14DawnObjectImplD2Ev(%"class.blink::DawnObjectImpl"*) unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.257"* @_ZNK3WTF6VectorIN5blink6MemberINS1_28GPURenderPassColorAttachmentEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.254"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.254", %"class.WTF::Vector.254"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.254", %"class.WTF::Vector.254"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.257"*, %"class.blink::Member.257"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.257", %"class.blink::Member.257"* %24, i64 %25
  ret %"class.blink::Member.257"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #7

declare void @_ZN5blink20GPURenderPassEncoderC1EPNS_9GPUDeviceEP25WGPURenderPassEncoderImpl(%"class.blink::GPURenderPassEncoder"*, %"class.blink::GPUDevice"*, %struct.WGPURenderPassEncoderImpl*) unnamed_addr #2

declare void @_ZN5blink21GPUComputePassEncoderC1EPNS_9GPUDeviceEP26WGPUComputePassEncoderImpl(%"class.blink::GPUComputePassEncoder"*, %"class.blink::GPUDevice"*, %struct.WGPUComputePassEncoderImpl*) unnamed_addr #2

declare void @_ZN5blink16GPUCommandBufferC1EPNS_9GPUDeviceEP21WGPUCommandBufferImpl(%"class.blink::GPUCommandBuffer"*, %"class.blink::GPUDevice"*, %struct.WGPUCommandBufferImpl*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink12_GLOBAL__N_110AsDawnTypeEPKNS_35GPURenderPassDepthStencilAttachmentE: argument 0"}
!4 = distinct !{!4, !"_ZN5blink12_GLOBAL__N_110AsDawnTypeEPKNS_35GPURenderPassDepthStencilAttachmentE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink12_GLOBAL__N_132ValidateAndConvertBufferCopyViewEPKNS_18GPUImageCopyBufferEPPKc: argument 0"}
!7 = distinct !{!7, !"_ZN5blink12_GLOBAL__N_132ValidateAndConvertBufferCopyViewEPKNS_18GPUImageCopyBufferEPPKc"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink12_GLOBAL__N_132ValidateAndConvertBufferCopyViewEPKNS_18GPUImageCopyBufferEPPKc: argument 0"}
!10 = distinct !{!10, !"_ZN5blink12_GLOBAL__N_132ValidateAndConvertBufferCopyViewEPKNS_18GPUImageCopyBufferEPPKc"}
!11 = !{!"branch_weights", i32 1, i32 2000}
