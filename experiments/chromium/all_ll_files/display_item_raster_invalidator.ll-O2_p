; ModuleID = '../../third_party/blink/renderer/platform/graphics/paint/display_item_raster_invalidator.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/paint/display_item_raster_invalidator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::DisplayItemRasterInvalidator" = type { %"class.blink::RasterInvalidator"*, %"class.base::RepeatingCallback", %"class.blink::DisplayItemList::Range"*, %"class.blink::DisplayItemList::Range"*, %"class.blink::ChunkToLayerMapper"*, %"class.WTF::HashMap.108" }
%"class.blink::RasterInvalidator" = type { %"class.gfx::Rect", %"class.WTF::Vector", %class.scoped_refptr, %"class.std::__1::unique_ptr.63" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.blink::RasterInvalidator::PaintChunkInfo"*, i32, i32 }
%"struct.blink::RasterInvalidator::PaintChunkInfo" = type { i32, %"class.blink::IntRect", %"class.blink::FloatClipRect", %class.SkMatrix }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%class.SkMatrix = type { [9 x float], i32 }
%class.scoped_refptr = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.5" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.0", i32, [4 x i8] }>
%"class.WTF::Vector.0" = type { %"class.WTF::VectorBuffer.1" }
%"class.WTF::VectorBuffer.1" = type { %"class.WTF::VectorBufferBase.2" }
%"class.WTF::VectorBufferBase.2" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.5" = type { %"class.WTF::VectorBuffer.6" }
%"class.WTF::VectorBuffer.6" = type { %"class.WTF::VectorBufferBase.7" }
%"class.WTF::VectorBufferBase.7" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.55", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"class.blink::Color" = type { i32 }
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.8, %class.scoped_refptr.9, %class.scoped_refptr.10 }
%class.scoped_refptr.8 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.21", i8, i8, %class.scoped_refptr.8, i32, i32 }
%"class.WTF::RefCounted.21" = type { %"class.base::RefCounted.22" }
%"class.base::RefCounted.22" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.9 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.132" }
%"class.blink::PaintPropertyNode.132" = type { %"class.WTF::RefCounted.133", i8, i8, %class.scoped_refptr.9, i32, i32 }
%"class.WTF::RefCounted.133" = type { %"class.base::RefCounted.134" }
%"class.base::RefCounted.134" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.10 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.129" }
%"class.blink::PaintPropertyNode.129" = type { %"class.WTF::RefCounted.130", i8, i8, %class.scoped_refptr.10, i32, i32 }
%"class.WTF::RefCounted.130" = type { %"class.base::RefCounted.131" }
%"class.base::RefCounted.131" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.11", %"class.WTF::Vector.16", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.11" = type { %"class.WTF::VectorBuffer.12" }
%"class.WTF::VectorBuffer.12" = type { %"class.WTF::VectorBufferBase.13" }
%"class.WTF::VectorBufferBase.13" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.16" = type { %"class.WTF::VectorBuffer.17" }
%"class.WTF::VectorBuffer.17" = type { %"class.WTF::VectorBufferBase.18" }
%"class.WTF::VectorBufferBase.18" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.34" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.27, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.28", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.27 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.118", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.118" = type { %"class.WTF::RefCounted.119", i8, i8, %class.scoped_refptr.27, i32, i32 }
%"class.WTF::RefCounted.119" = type { %"class.base::RefCounted.120" }
%"class.base::RefCounted.120" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.121" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.121" = type { %"class.absl::optional_internal::optional_data.122" }
%"class.absl::optional_internal::optional_data.122" = type { %"class.absl::optional_internal::optional_data_base.123" }
%"class.absl::optional_internal::optional_data_base.123" = type { %"class.absl::optional_internal::optional_data_dtor_base.124" }
%"class.absl::optional_internal::optional_data_dtor_base.124" = type { i8, %union.anon.125 }
%union.anon.125 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.126" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [3 x i8], %union.anon }
%union.anon = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo"* }
%"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo" = type { %"class.WTF::HashMap", %"class.blink::RasterInvalidationTracking" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::RasterInvalidationTracking" = type { %"class.WTF::Vector.68", %class.sk_sp, %"class.blink::IntRect", %"class.blink::Region", %"class.WTF::Vector.94", %class.sk_sp }
%"class.WTF::Vector.68" = type { %"class.WTF::VectorBuffer.69" }
%"class.WTF::VectorBuffer.69" = type { %"class.WTF::VectorBufferBase.70" }
%"class.WTF::VectorBufferBase.70" = type { %"struct.blink::RasterInvalidationInfo"*, i32, i32 }
%"struct.blink::RasterInvalidationInfo" = type <{ %"class.blink::DisplayItemClient"*, %"class.WTF::String", %"class.blink::IntRect", i8, [7 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr.71 }
%class.scoped_refptr.71 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.72" }
%"struct.std::__1::__atomic_base.72" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.84", %"class.WTF::Vector.89" }
%"class.WTF::Vector.84" = type { %"class.WTF::VectorBuffer.85" }
%"class.WTF::VectorBuffer.85" = type { %"class.WTF::VectorBufferBase.86", [128 x i8] }
%"class.WTF::VectorBufferBase.86" = type { i32*, i32, i32 }
%"class.WTF::Vector.89" = type { %"class.WTF::VectorBuffer.90" }
%"class.WTF::VectorBuffer.90" = type { %"class.WTF::VectorBufferBase.91", [128 x i8] }
%"class.WTF::VectorBufferBase.91" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.94" = type { %"class.WTF::VectorBuffer.95" }
%"class.WTF::VectorBuffer.95" = type { %"class.WTF::VectorBufferBase.96" }
%"class.WTF::VectorBufferBase.96" = type { %"struct.blink::RasterUnderInvalidation"*, i32, i32 }
%"struct.blink::RasterUnderInvalidation" = type { i32, i32, i32, i32 }
%class.sk_sp = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.80", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.75" }>
%"struct.std::__1::atomic.75" = type { %"struct.std::__1::__atomic_base.76" }
%"struct.std::__1::__atomic_base.76" = type { %"struct.std::__1::__atomic_base.77" }
%"struct.std::__1::__atomic_base.77" = type { %"struct.std::__1::__cxx_atomic_impl.78" }
%"struct.std::__1::__cxx_atomic_impl.78" = type { %"struct.std::__1::__cxx_atomic_base_impl.79" }
%"struct.std::__1::__cxx_atomic_base_impl.79" = type { i32 }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { i8* }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.102 }
%class.scoped_refptr.102 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.75" }
%"class.blink::DisplayItemList::Range" = type { %"class.blink::DisplayItemList::IteratorWrapper", %"class.blink::DisplayItemList::IteratorWrapper" }
%"class.blink::DisplayItemList::IteratorWrapper" = type { %"struct.blink::DisplayItemList::ItemSlot"* }
%"class.blink::ChunkToLayerMapper" = type <{ %"class.blink::PropertyTreeState", %"class.gfx::Vector2dF", %"class.blink::PropertyTreeState", %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::FloatClipRect", i8, i8, [2 x i8] }>
%"class.gfx::Vector2dF" = type { float, float }
%"class.blink::PropertyTreeState" = type { %"class.blink::PropertyTreeStateOrAlias" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::GeometryMapper::Translation2DOrMatrix" = type { %"class.blink::FloatSize", %"class.absl::optional.103" }
%"class.absl::optional.103" = type { %"class.absl::optional_internal::optional_data.104" }
%"class.absl::optional_internal::optional_data.104" = type { %"class.absl::optional_internal::optional_data_base.105" }
%"class.absl::optional_internal::optional_data_base.105" = type { %"class.absl::optional_internal::optional_data_dtor_base.106" }
%"class.absl::optional_internal::optional_data_dtor_base.106" = type { i8, %union.anon.107 }
%union.anon.107 = type { %"class.blink::TransformationMatrix" }
%"class.WTF::HashMap.108" = type { %"class.WTF::HashTable.109" }
%"class.WTF::HashTable.109" = type <{ %"struct.WTF::KeyValuePair.112"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.112" = type { %"class.blink::DisplayItemClient"*, %"class.WTF::Vector.113" }
%"class.WTF::Vector.113" = type { %"class.WTF::VectorBuffer.114" }
%"class.WTF::VectorBuffer.114" = type { %"class.WTF::VectorBufferBase.115" }
%"class.WTF::VectorBufferBase.115" = type { %"class.blink::DisplayItemList::IteratorWrapper"*, i32, i32 }
%"class.WTF::HashMap.135" = type { %"class.WTF::HashTable.136" }
%"class.WTF::HashTable.136" = type <{ %"struct.WTF::KeyValuePair.139"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.139" = type <{ %"class.blink::DisplayItemClient"*, %struct.OldAndNewDisplayItems, [4 x i8] }>
%struct.OldAndNewDisplayItems = type <{ %"class.blink::IntRect", %"class.blink::IntRect", i8, [3 x i8] }>
%"class.WTF::Vector.140" = type { %"class.WTF::VectorBuffer.141" }
%"class.WTF::VectorBuffer.141" = type { %"class.WTF::VectorBufferBase.142" }
%"class.WTF::VectorBufferBase.142" = type { i8*, i32, i32 }
%"class.blink::DisplayItem" = type <{ %"class.blink::DisplayItemClient"*, %"class.blink::IntRect", i32, i16, [2 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.151 }
%union.anon.151 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF9HashTableIPKN5blink17DisplayItemClientENS_12KeyValuePairIS4_NS_6VectorINS1_15DisplayItemList15IteratorWrapperIPKNS7_8ItemSlotEKNS1_11DisplayItemEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSM_ISG_EEEESN_SF_E6insertINS_17HashMapTranslatorISP_SK_SF_EES4_SG_EENS_18HashTableAddResultISQ_SH_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN5blink17DisplayItemClientENS_12KeyValuePairIS4_NS_6VectorINS1_15DisplayItemList15IteratorWrapperIPKNS7_8ItemSlotEKNS1_11DisplayItemEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSM_ISG_EEEESN_SF_E6ExpandEPSH_ = comdat any

$_ZN3WTF9HashTableIPKN5blink17DisplayItemClientENS_12KeyValuePairIS4_NS_6VectorINS1_15DisplayItemList15IteratorWrapperIPKNS7_8ItemSlotEKNS1_11DisplayItemEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSM_ISG_EEEESN_SF_E8RehashToEPSH_jSR_ = comdat any

$_ZN3WTF9HashTableIPKN5blink17DisplayItemClientENS_12KeyValuePairIS4_NS_6VectorINS1_15DisplayItemList15IteratorWrapperIPKNS7_8ItemSlotEKNS1_11DisplayItemEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSM_ISG_EEEESN_SF_E16LookupForWritingERKS4_ = comdat any

$_ZN3WTF6VectorIN5blink15DisplayItemList15IteratorWrapperIPKNS2_8ItemSlotEKNS1_11DisplayItemEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS9_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15DisplayItemList15IteratorWrapperIPKNS3_8ItemSlotEKNS2_11DisplayItemEEEEEmm = comdat any

$_ZN3WTF9HashTableIPKN5blink17DisplayItemClientENS_12KeyValuePairIS4_NS_6VectorINS1_15DisplayItemList15IteratorWrapperIPKNS7_8ItemSlotEKNS1_11DisplayItemEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSM_ISG_EEEESN_SF_E4findERKS4_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm = comdat any

$_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink17DisplayItemClientENS_6VectorINS2_15DisplayItemList15IteratorWrapperIPKNS7_8ItemSlotEKNS2_11DisplayItemEEELj0ENS_18PartitionAllocatorEEEEEEEPKcv = private unnamed_addr constant [250 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const blink::DisplayItemClient *, WTF::Vector<blink::DisplayItemList::IteratorWrapper<const blink::DisplayItemList::ItemSlot *, const blink::DisplayItem>, 0, WTF::PartitionAllocator> >]\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15DisplayItemList15IteratorWrapperIPKNS2_8ItemSlotEKNS1_11DisplayItemEEEEEPKcv = private unnamed_addr constant [155 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::DisplayItemList::IteratorWrapper<const blink::DisplayItemList::ItemSlot *, const blink::DisplayItem>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv = private unnamed_addr constant [52 x i8] c"const char *WTF::GetStringWithTypeName() [T = bool]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink17DisplayItemClientEZNS2_28DisplayItemRasterInvalidator8GenerateEvE21OldAndNewDisplayItemsEEEEPKcv = private unnamed_addr constant [122 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const blink::DisplayItemClient *, OldAndNewDisplayItems>]\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28DisplayItemRasterInvalidator8GenerateEv(%"class.blink::DisplayItemRasterInvalidator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::DisplayItemClient"*, align 8
  %3 = alloca %"class.WTF::Vector.113", align 8
  %4 = alloca %"class.blink::DisplayItemClient"*, align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = alloca %"class.blink::IntRect", align 4
  %7 = alloca { i64, i64 }, align 8
  %8 = alloca %"class.base::RepeatingCallback", align 8
  %9 = alloca { i64, i64 }, align 8
  %10 = alloca %"class.blink::IntRect", align 4
  %11 = alloca { i64, i64 }, align 8
  %12 = alloca %"class.base::RepeatingCallback", align 8
  %13 = alloca { i64, i64 }, align 8
  %14 = alloca %"class.blink::IntRect", align 4
  %15 = alloca { i64, i64 }, align 8
  %16 = alloca %"class.base::RepeatingCallback", align 8
  %17 = alloca { i64, i64 }, align 8
  %18 = alloca %"class.blink::IntRect", align 4
  %19 = alloca { i64, i64 }, align 8
  %20 = alloca %"class.base::RepeatingCallback", align 8
  %21 = alloca { i64, i64 }, align 8
  %22 = alloca %"class.blink::IntRect", align 4
  %23 = alloca { i64, i64 }, align 8
  %24 = alloca %"class.base::RepeatingCallback", align 8
  %25 = alloca { i64, i64 }, align 8
  %26 = alloca %"class.blink::IntRect", align 4
  %27 = alloca { i64, i64 }, align 8
  %28 = alloca %"class.base::RepeatingCallback", align 8
  %29 = alloca { i64, i64 }, align 8
  %30 = alloca %"class.blink::IntRect", align 4
  %31 = alloca { i64, i64 }, align 8
  %32 = alloca %"class.base::RepeatingCallback", align 8
  %33 = alloca { i64, i64 }, align 8
  %34 = alloca %"class.blink::IntRect", align 4
  %35 = alloca { i64, i64 }, align 8
  %36 = alloca %"class.base::RepeatingCallback", align 8
  %37 = alloca { i64, i64 }, align 8
  %38 = alloca { i64, i64 }, align 8
  %39 = alloca %"class.WTF::HashMap.135", align 8
  %40 = alloca %"class.WTF::Vector.140", align 8
  %41 = alloca %"class.blink::DisplayItemList::IteratorWrapper", align 8
  %42 = alloca %"class.blink::DisplayItemClient"*, align 8
  %43 = alloca %struct.OldAndNewDisplayItems, align 4
  %44 = alloca %"class.blink::DisplayItemClient"*, align 8
  %45 = alloca %struct.OldAndNewDisplayItems, align 4
  %46 = alloca %"class.blink::DisplayItemClient"*, align 8
  %47 = alloca %struct.OldAndNewDisplayItems, align 4
  %48 = bitcast %"class.WTF::HashMap.135"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #5
  %49 = getelementptr inbounds %"class.WTF::HashMap.135", %"class.WTF::HashMap.135"* %39, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.WTF::HashMap.135", %"class.WTF::HashMap.135"* %39, i64 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.WTF::HashMap.135", %"class.WTF::HashMap.135"* %39, i64 0, i32 0, i32 2
  %52 = bitcast %"class.WTF::HashMap.135"* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 20, i1 false) #5
  %53 = bitcast %"class.WTF::Vector.140"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #5
  %54 = getelementptr inbounds %"class.WTF::Vector.140", %"class.WTF::Vector.140"* %40, i64 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.WTF::Vector.140", %"class.WTF::Vector.140"* %40, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 16, i1 false) #5
  %56 = getelementptr inbounds %"class.blink::DisplayItemRasterInvalidator", %"class.blink::DisplayItemRasterInvalidator"* %0, i64 0, i32 2
  %57 = load %"class.blink::DisplayItemList::Range"*, %"class.blink::DisplayItemList::Range"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::DisplayItemList::Range", %"class.blink::DisplayItemList::Range"* %57, i64 0, i32 1
  %59 = bitcast %"class.blink::DisplayItemList::IteratorWrapper"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.blink::DisplayItemList::Range"* %57 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %60, %62
  %64 = sdiv exact i64 %63, 40
  %65 = trunc i64 %64 to i32
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %1
  %68 = bitcast %"class.blink::DisplayItemList::Range"** %56 to i64**
  br label %83

69:                                               ; preds = %1
  %70 = getelementptr inbounds %"class.WTF::Vector.140", %"class.WTF::Vector.140"* %40, i64 0, i32 0, i32 0, i32 1
  %71 = icmp ugt i32 %65, 4
  %72 = and i64 %64, 4294967295
  %73 = select i1 %71, i64 %72, i64 4
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %73) #5
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #5
  %76 = ptrtoint i8* %75 to i64
  %77 = bitcast %"class.WTF::Vector.140"* %40 to i64*
  store atomic i64 %76, i64* %77 monotonic, align 8
  %78 = trunc i64 %74 to i32
  store i32 %78, i32* %70, align 8
  %79 = and i64 %64, 4294967295
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %75, i8 0, i64 %79, i1 false) #5
  %80 = bitcast %"class.blink::DisplayItemList::Range"** %56 to i64**
  %81 = load i64*, i64** %80, align 8
  %82 = bitcast i64* %81 to %"class.blink::DisplayItemList::Range"*
  br label %83

83:                                               ; preds = %67, %69
  %84 = phi i64** [ %68, %67 ], [ %80, %69 ]
  %85 = phi i64* [ %61, %67 ], [ %81, %69 ]
  %86 = phi %"class.blink::DisplayItemList::Range"* [ %57, %67 ], [ %82, %69 ]
  store i32 %65, i32* %55, align 4
  %87 = bitcast %"class.blink::DisplayItemList::IteratorWrapper"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #5
  %88 = getelementptr inbounds %"class.blink::DisplayItemList::IteratorWrapper", %"class.blink::DisplayItemList::IteratorWrapper"* %41, i64 0, i32 0
  store %"struct.blink::DisplayItemList::ItemSlot"* inttoptr (i64 -6148914691236517206 to %"struct.blink::DisplayItemList::ItemSlot"*), %"struct.blink::DisplayItemList::ItemSlot"** %88, align 8
  %89 = load i64, i64* %85, align 8
  %90 = bitcast %"class.blink::DisplayItemList::IteratorWrapper"* %41 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.blink::DisplayItemRasterInvalidator", %"class.blink::DisplayItemRasterInvalidator"* %0, i64 0, i32 3
  %92 = load %"class.blink::DisplayItemList::Range"*, %"class.blink::DisplayItemList::Range"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::DisplayItemList::Range", %"class.blink::DisplayItemList::Range"* %92, i64 0, i32 0, i32 0
  %94 = load %"struct.blink::DisplayItemList::ItemSlot"*, %"struct.blink::DisplayItemList::ItemSlot"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::DisplayItemList::Range", %"class.blink::DisplayItemList::Range"* %92, i64 0, i32 1, i32 0
  %96 = load %"struct.blink::DisplayItemList::ItemSlot"*, %"struct.blink::DisplayItemList::ItemSlot"** %95, align 8
  %97 = icmp eq %"struct.blink::DisplayItemList::ItemSlot"* %94, %96
  %98 = inttoptr i64 %89 to %"struct.blink::DisplayItemList::ItemSlot"*
  br i1 %97, label %122, label %99

99:                                               ; preds = %83
  %100 = bitcast %"class.blink::DisplayItemClient"** %2 to i8*
  %101 = bitcast %"class.blink::DisplayItemClient"** %2 to i64*
  %102 = bitcast %"class.WTF::Vector.113"* %3 to i8*
  %103 = getelementptr inbounds %"class.blink::DisplayItemRasterInvalidator", %"class.blink::DisplayItemRasterInvalidator"* %0, i64 0, i32 5, i32 0
  %104 = getelementptr inbounds %"class.WTF::Vector.113", %"class.WTF::Vector.113"* %3, i64 0, i32 0, i32 0, i32 0
  %105 = getelementptr inbounds %"class.WTF::Vector.113", %"class.WTF::Vector.113"* %3, i64 0, i32 0, i32 0, i32 2
  %106 = getelementptr inbounds %"class.blink::DisplayItemRasterInvalidator", %"class.blink::DisplayItemRasterInvalidator"* %0, i64 0, i32 5
  %107 = bitcast %"class.blink::DisplayItemClient"** %4 to i8*
  %108 = bitcast %"class.blink::DisplayItemClient"** %4 to i64*
  %109 = getelementptr inbounds %"class.WTF::HashMap.108", %"class.WTF::HashMap.108"* %106, i64 0, i32 0
  %110 = getelementptr inbounds %"class.WTF::HashMap.108", %"class.WTF::HashMap.108"* %106, i64 0, i32 0, i32 0
  %111 = getelementptr inbounds %"class.blink::DisplayItemRasterInvalidator", %"class.blink::DisplayItemRasterInvalidator"* %0, i64 0, i32 5, i32 0, i32 1
  %112 = bitcast %"class.blink::DisplayItemClient"** %44 to i8*
  %113 = bitcast %"class.blink::DisplayItemClient"** %44 to i64*
  %114 = bitcast %struct.OldAndNewDisplayItems* %45 to i8*
  %115 = bitcast %"class.blink::DisplayItemClient"** %42 to i8*
  %116 = bitcast %"class.blink::DisplayItemClient"** %42 to i64*
  %117 = bitcast %struct.OldAndNewDisplayItems* %43 to i8*
  %118 = bitcast %struct.OldAndNewDisplayItems* %45 to i8*
  %119 = bitcast %struct.OldAndNewDisplayItems* %43 to i8*
  br label %136

120:                                              ; preds = %381
  %121 = load i64*, i64** %84, align 8
  br label %122

122:                                              ; preds = %120, %83
  %123 = phi i64* [ %121, %120 ], [ %85, %83 ]
  %124 = load i64, i64* %123, align 8
  %125 = getelementptr inbounds i64, i64* %123, i64 1
  %126 = bitcast i64* %125 to %"struct.blink::DisplayItemList::ItemSlot"**
  %127 = load %"struct.blink::DisplayItemList::ItemSlot"*, %"struct.blink::DisplayItemList::ItemSlot"** %126, align 8
  %128 = inttoptr i64 %124 to %"struct.blink::DisplayItemList::ItemSlot"*
  %129 = icmp eq %"struct.blink::DisplayItemList::ItemSlot"* %127, %128
  br i1 %129, label %389, label %130

130:                                              ; preds = %122
  %131 = bitcast i64* %123 to %"class.blink::DisplayItemList::Range"*
  %132 = bitcast %"class.blink::DisplayItemClient"** %46 to i8*
  %133 = bitcast %"class.blink::DisplayItemClient"** %46 to i64*
  %134 = bitcast %struct.OldAndNewDisplayItems* %47 to i8*
  %135 = bitcast %struct.OldAndNewDisplayItems* %47 to i8*
  br label %556

136:                                              ; preds = %386, %99
  %137 = phi %"struct.blink::DisplayItemList::ItemSlot"* [ %98, %99 ], [ %382, %386 ]
  %138 = phi i64* [ %85, %99 ], [ %388, %386 ]
  %139 = phi %"struct.blink::DisplayItemList::ItemSlot"* [ %98, %99 ], [ %383, %386 ]
  %140 = phi %"class.blink::DisplayItemList::Range"* [ %86, %99 ], [ %387, %386 ]
  %141 = phi %"struct.blink::DisplayItemList::ItemSlot"* [ %94, %99 ], [ %384, %386 ]
  %142 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %141, i64 0, i32 0, i64 28
  %143 = bitcast i8* %142 to i16*
  %144 = load i16, i16* %143, align 4
  %145 = and i16 %144, 2048
  %146 = icmp eq i16 %145, 0
  %147 = getelementptr inbounds %"class.blink::DisplayItemList::Range", %"class.blink::DisplayItemList::Range"* %140, i64 0, i32 1, i32 0
  br i1 %146, label %156, label %148

148:                                              ; preds = %136
  %149 = load %"struct.blink::DisplayItemList::ItemSlot"*, %"struct.blink::DisplayItemList::ItemSlot"** %147, align 8
  %150 = load %"struct.blink::DisplayItemList::ItemSlot"*, %"struct.blink::DisplayItemList::ItemSlot"** %88, align 8
  %151 = icmp eq %"struct.blink::DisplayItemList::ItemSlot"* %150, %149
  %152 = bitcast %"struct.blink::DisplayItemList::ItemSlot"* %141 to %"class.blink::DisplayItemClient"**
  br i1 %151, label %230, label %153

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %141, i64 0, i32 0, i64 24
  %155 = bitcast i8* %154 to i32*
  br label %159

156:                                              ; preds = %136
  %157 = bitcast %"struct.blink::DisplayItemList::ItemSlot"** %147 to i64*
  %158 = load i64, i64* %157, align 8
  br label %290

159:                                              ; preds = %221, %153
  %160 = phi i64* [ %138, %153 ], [ %222, %221 ]
  %161 = phi %"class.blink::DisplayItemList::Range"* [ %140, %153 ], [ %223, %221 ]
  %162 = phi %"class.blink::DisplayItemList::Range"* [ %140, %153 ], [ %224, %221 ]
  %163 = phi %"struct.blink::DisplayItemList::ItemSlot"* [ %150, %153 ], [ %226, %221 ]
  %164 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %163, i64 0, i32 0, i64 28
  %165 = bitcast i8* %164 to i16*
  %166 = load i16, i16* %165, align 4
  %167 = and i16 %166, 2048
  %168 = icmp eq i16 %167, 0
  br i1 %168, label %221, label %169

169:                                              ; preds = %159
  %170 = bitcast %"struct.blink::DisplayItemList::ItemSlot"* %163 to %"class.blink::DisplayItemClient"**
  %171 = load %"class.blink::DisplayItemClient"*, %"class.blink::DisplayItemClient"** %170, align 8
  %172 = load %"class.blink::DisplayItemClient"*, %"class.blink::DisplayItemClient"** %152, align 8
  %173 = icmp eq %"class.blink::DisplayItemClient"* %171, %172
  %174 = ptrtoint %"class.blink::DisplayItemClient"* %171 to i64
  br i1 %173, label %175, label %189

175:                                              ; preds = %169
  %176 = load i32, i32* %155, align 8
  %177 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %163, i64 0, i32 0, i64 24
  %178 = bitcast i8* %177 to i32*
  %179 = load i32, i32* %178, align 8
  %180 = load i16, i16* %143, align 4
  %181 = xor i16 %180, %166
  %182 = and i16 %181, 255
  %183 = icmp eq i16 %182, 0
  %184 = icmp eq i32 %179, %176
  %185 = and i1 %184, %183
  br i1 %185, label %186, label %189

186:                                              ; preds = %175
  %187 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %163, i64 1
  store %"struct.blink::DisplayItemList::ItemSlot"* %187, %"struct.blink::DisplayItemList::ItemSlot"** %88, align 8
  %188 = ptrtoint %"struct.blink::DisplayItemList::ItemSlot"* %163 to i64
  br label %290

189:                                              ; preds = %175, %169
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #5
  store i64 %174, i64* %101, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %102) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %102, i8 0, i64 16, i1 false) #5
  %190 = call { %"struct.WTF::KeyValuePair.112"*, i8 } @_ZN3WTF9HashTableIPKN5blink17DisplayItemClientENS_12KeyValuePairIS4_NS_6VectorINS1_15DisplayItemList15IteratorWrapperIPKNS7_8ItemSlotEKNS1_11DisplayItemEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSM_ISG_EEEESN_SF_E6insertINS_17HashMapTranslatorISP_SK_SF_EES4_SG_EENS_18HashTableAddResultISQ_SH_EEOT0_OT1_(%"class.WTF::HashTable.109"* %103, %"class.blink::DisplayItemClient"** nonnull dereferenceable(8) %2, %"class.WTF::Vector.113"* nonnull dereferenceable(16) %3) #5
  %191 = extractvalue { %"struct.WTF::KeyValuePair.112"*, i8 } %190, 0
  %192 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %191, i64 0, i32 1
  %193 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %191, i64 0, i32 1, i32 0, i32 0, i32 2
  %194 = load i32, i32* %193, align 4
  %195 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %191, i64 0, i32 1, i32 0, i32 0, i32 1
  %196 = load i32, i32* %195, align 8
  %197 = icmp eq i32 %194, %196
  br i1 %197, label %207, label %198, !prof !2

198:                                              ; preds = %189
  %199 = getelementptr inbounds %"class.WTF::Vector.113", %"class.WTF::Vector.113"* %192, i64 0, i32 0, i32 0, i32 0
  %200 = load %"class.blink::DisplayItemList::IteratorWrapper"*, %"class.blink::DisplayItemList::IteratorWrapper"** %199, align 8
  %201 = zext i32 %194 to i64
  %202 = getelementptr inbounds %"class.blink::DisplayItemList::IteratorWrapper", %"class.blink::DisplayItemList::IteratorWrapper"* %200, i64 %201
  %203 = bitcast %"class.blink::DisplayItemList::IteratorWrapper"* %202 to i64*
  %204 = load i64, i64* %90, align 8
  store i64 %204, i64* %203, align 8
  %205 = load i32, i32* %193, align 4
  %206 = add i32 %205, 1
  store i32 %206, i32* %193, align 4
  br label %208

207:                                              ; preds = %189
  call void @_ZN3WTF6VectorIN5blink15DisplayItemList15IteratorWrapperIPKNS2_8ItemSlotEKNS1_11DisplayItemEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS9_EEvOT_(%"class.WTF::Vector.113"* %192, %"class.blink::DisplayItemList::IteratorWrapper"* nonnull dereferenceable(8) %41) #5
  br label %208

208:                                              ; preds = %207, %198
  %209 = load %"class.blink::DisplayItemList::IteratorWrapper"*, %"class.blink::DisplayItemList::IteratorWrapper"** %104, align 8
  %210 = icmp eq %"class.blink::DisplayItemList::IteratorWrapper"* %209, null
  %211 = bitcast %"class.blink::DisplayItemList::IteratorWrapper"* %209 to i8*
  br i1 %210, label %217, label %212, !prof !3

212:                                              ; preds = %208
  %213 = load i32, i32* %105, align 4
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %216, label %215, !prof !2

215:                                              ; preds = %212
  store i32 0, i32* %105, align 4
  br label %216

216:                                              ; preds = %215, %212
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %211) #5
  store %"class.blink::DisplayItemList::IteratorWrapper"* null, %"class.blink::DisplayItemList::IteratorWrapper"** %104, align 8
  br label %217

217:                                              ; preds = %216, %208
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #5
  %218 = load %"struct.blink::DisplayItemList::ItemSlot"*, %"struct.blink::DisplayItemList::ItemSlot"** %88, align 8
  %219 = load %"class.blink::DisplayItemList::Range"*, %"class.blink::DisplayItemList::Range"** %56, align 8
  %220 = bitcast %"class.blink::DisplayItemList::Range"* %219 to i64*
  br label %221

221:                                              ; preds = %217, %159
  %222 = phi i64* [ %160, %159 ], [ %220, %217 ]
  %223 = phi %"class.blink::DisplayItemList::Range"* [ %161, %159 ], [ %219, %217 ]
  %224 = phi %"class.blink::DisplayItemList::Range"* [ %162, %159 ], [ %219, %217 ]
  %225 = phi %"struct.blink::DisplayItemList::ItemSlot"* [ %163, %159 ], [ %218, %217 ]
  %226 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %225, i64 1
  store %"struct.blink::DisplayItemList::ItemSlot"* %226, %"struct.blink::DisplayItemList::ItemSlot"** %88, align 8
  %227 = getelementptr inbounds %"class.blink::DisplayItemList::Range", %"class.blink::DisplayItemList::Range"* %224, i64 0, i32 1, i32 0
  %228 = load %"struct.blink::DisplayItemList::ItemSlot"*, %"struct.blink::DisplayItemList::ItemSlot"** %227, align 8
  %229 = icmp eq %"struct.blink::DisplayItemList::ItemSlot"* %226, %228
  br i1 %229, label %230, label %159

230:                                              ; preds = %221, %148
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #5
  %231 = bitcast %"struct.blink::DisplayItemList::ItemSlot"* %141 to i64*
  %232 = load i64, i64* %231, align 8
  store i64 %232, i64* %108, align 8
  %233 = call { %"struct.WTF::KeyValuePair.112"*, %"struct.WTF::KeyValuePair.112"* } @_ZN3WTF9HashTableIPKN5blink17DisplayItemClientENS_12KeyValuePairIS4_NS_6VectorINS1_15DisplayItemList15IteratorWrapperIPKNS7_8ItemSlotEKNS1_11DisplayItemEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSM_ISG_EEEESN_SF_E4findERKS4_(%"class.WTF::HashTable.109"* %109, %"class.blink::DisplayItemClient"** nonnull dereferenceable(8) %4) #5
  %234 = extractvalue { %"struct.WTF::KeyValuePair.112"*, %"struct.WTF::KeyValuePair.112"* } %233, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #5
  %235 = load %"struct.WTF::KeyValuePair.112"*, %"struct.WTF::KeyValuePair.112"** %110, align 8
  %236 = load i32, i32* %111, align 8
  %237 = zext i32 %236 to i64
  %238 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %235, i64 %237
  %239 = icmp eq %"struct.WTF::KeyValuePair.112"* %234, %238
  br i1 %239, label %240, label %246

240:                                              ; preds = %230
  %241 = load %"class.blink::DisplayItemList::Range"*, %"class.blink::DisplayItemList::Range"** %56, align 8
  %242 = getelementptr inbounds %"class.blink::DisplayItemList::Range", %"class.blink::DisplayItemList::Range"* %241, i64 0, i32 1, i32 0
  %243 = bitcast %"struct.blink::DisplayItemList::ItemSlot"** %242 to i64*
  %244 = load i64, i64* %243, align 8
  %245 = bitcast %"class.blink::DisplayItemList::Range"* %241 to i64*
  br label %290

246:                                              ; preds = %230
  %247 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %234, i64 0, i32 1, i32 0, i32 0, i32 0
  %248 = load %"class.blink::DisplayItemList::IteratorWrapper"*, %"class.blink::DisplayItemList::IteratorWrapper"** %247, align 8
  %249 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %234, i64 0, i32 1, i32 0, i32 0, i32 2
  %250 = load i32, i32* %249, align 4
  %251 = zext i32 %250 to i64
  %252 = getelementptr inbounds %"class.blink::DisplayItemList::IteratorWrapper", %"class.blink::DisplayItemList::IteratorWrapper"* %248, i64 %251
  %253 = icmp eq i32 %250, 0
  br i1 %253, label %281, label %254

254:                                              ; preds = %246
  %255 = load %"class.blink::DisplayItemClient"*, %"class.blink::DisplayItemClient"** %152, align 8
  %256 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %141, i64 0, i32 0, i64 24
  %257 = bitcast i8* %256 to i32*
  br label %258

258:                                              ; preds = %278, %254
  %259 = phi %"class.blink::DisplayItemList::IteratorWrapper"* [ %248, %254 ], [ %279, %278 ]
  %260 = bitcast %"class.blink::DisplayItemList::IteratorWrapper"* %259 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %261 to %"class.blink::DisplayItem"*
  %263 = getelementptr inbounds %"class.blink::DisplayItem", %"class.blink::DisplayItem"* %262, i64 0, i32 0
  %264 = load %"class.blink::DisplayItemClient"*, %"class.blink::DisplayItemClient"** %263, align 8
  %265 = icmp eq %"class.blink::DisplayItemClient"* %264, %255
  br i1 %265, label %266, label %278

266:                                              ; preds = %258
  %267 = load i32, i32* %257, align 8
  %268 = getelementptr inbounds %"class.blink::DisplayItem", %"class.blink::DisplayItem"* %262, i64 0, i32 2
  %269 = load i32, i32* %268, align 8
  %270 = load i16, i16* %143, align 4
  %271 = getelementptr inbounds %"class.blink::DisplayItem", %"class.blink::DisplayItem"* %262, i64 0, i32 3
  %272 = load i16, i16* %271, align 4
  %273 = xor i16 %272, %270
  %274 = and i16 %273, 255
  %275 = icmp eq i16 %274, 0
  %276 = icmp eq i32 %269, %267
  %277 = and i1 %276, %275
  br i1 %277, label %287, label %278

278:                                              ; preds = %266, %258
  %279 = getelementptr inbounds %"class.blink::DisplayItemList::IteratorWrapper", %"class.blink::DisplayItemList::IteratorWrapper"* %259, i64 1
  %280 = icmp eq %"class.blink::DisplayItemList::IteratorWrapper"* %279, %252
  br i1 %280, label %281, label %258

281:                                              ; preds = %278, %246
  %282 = load %"class.blink::DisplayItemList::Range"*, %"class.blink::DisplayItemList::Range"** %56, align 8
  %283 = getelementptr inbounds %"class.blink::DisplayItemList::Range", %"class.blink::DisplayItemList::Range"* %282, i64 0, i32 1, i32 0
  %284 = bitcast %"struct.blink::DisplayItemList::ItemSlot"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"class.blink::DisplayItemList::Range"* %282 to i64*
  br label %290

287:                                              ; preds = %266
  %288 = load %"class.blink::DisplayItemList::Range"*, %"class.blink::DisplayItemList::Range"** %56, align 8
  %289 = bitcast %"class.blink::DisplayItemList::Range"* %288 to i64*
  br label %290

290:                                              ; preds = %287, %156, %186, %240, %281
  %291 = phi i64* [ %160, %186 ], [ %138, %156 ], [ %245, %240 ], [ %286, %281 ], [ %289, %287 ]
  %292 = phi %"class.blink::DisplayItemList::Range"* [ %161, %186 ], [ %140, %156 ], [ %241, %240 ], [ %282, %281 ], [ %288, %287 ]
  %293 = phi i64 [ %188, %186 ], [ %158, %156 ], [ %244, %240 ], [ %285, %281 ], [ %261, %287 ]
  %294 = inttoptr i64 %293 to %"struct.blink::DisplayItemList::ItemSlot"*
  %295 = getelementptr inbounds %"class.blink::DisplayItemList::Range", %"class.blink::DisplayItemList::Range"* %292, i64 0, i32 1, i32 0
  %296 = load %"struct.blink::DisplayItemList::ItemSlot"*, %"struct.blink::DisplayItemList::ItemSlot"** %295, align 8
  %297 = icmp eq %"struct.blink::DisplayItemList::ItemSlot"* %296, %294
  br i1 %297, label %298, label %319

298:                                              ; preds = %290
  %299 = load i16, i16* %143, align 4
  %300 = and i16 %299, 1024
  %301 = icmp eq i16 %300, 0
  br i1 %301, label %381, label %302

302:                                              ; preds = %298
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #5
  %303 = bitcast %"struct.blink::DisplayItemList::ItemSlot"* %141 to i64*
  %304 = load i64, i64* %303, align 8
  store i64 %304, i64* %116, align 8
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %117) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %119, i8 0, i64 36, i1 false)
  %305 = call fastcc %"struct.WTF::KeyValuePair.139"* @_ZN3WTF7HashMapIPKN5blink17DisplayItemClientEZNS1_28DisplayItemRasterInvalidator8GenerateEvE21OldAndNewDisplayItemsNS_7PtrHashIS3_EENS_10HashTraitsIS4_EENS9_IS6_EENS_18PartitionAllocatorEE6insertIS4_S6_EENS_18HashTableAddResultINS_9HashTableIS4_NS_12KeyValuePairIS4_S6_EENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_SB_EESA_SC_EESI_EEOT_OT0_(%"class.WTF::HashMap.135"* nonnull %39, %"class.blink::DisplayItemClient"** nonnull dereferenceable(8) %42, %struct.OldAndNewDisplayItems* nonnull dereferenceable(36) %43)
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %117) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #5
  %306 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %305, i64 0, i32 1, i32 1
  %307 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %141, i64 0, i32 0, i64 8
  %308 = bitcast i8* %307 to %"class.blink::IntRect"*
  call void @_ZN5blink7IntRect5UniteERKS0_(%"class.blink::IntRect"* %306, %"class.blink::IntRect"* dereferenceable(16) %308) #5
  %309 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %305, i64 0, i32 1, i32 2
  %310 = load i8, i8* %309, align 4
  %311 = icmp eq i8 %310, 0
  br i1 %311, label %312, label %381

312:                                              ; preds = %302
  %313 = bitcast %"struct.blink::DisplayItemList::ItemSlot"* %141 to %"class.blink::DisplayItemClient"**
  %314 = load %"class.blink::DisplayItemClient"*, %"class.blink::DisplayItemClient"** %313, align 8
  %315 = getelementptr inbounds %"class.blink::DisplayItemClient", %"class.blink::DisplayItemClient"* %314, i64 0, i32 1
  %316 = load i8, i8* %315, align 8
  %317 = icmp eq i8 %316, 20
  %318 = select i1 %317, i8 20, i8 9
  store i8 %318, i8* %309, align 4
  br label %381

319:                                              ; preds = %290
  %320 = bitcast %"struct.blink::DisplayItemList::ItemSlot"* %141 to %"class.blink::DisplayItemClient"**
  %321 = load %"class.blink::DisplayItemClient"*, %"class.blink::DisplayItemClient"** %320, align 8
  %322 = getelementptr inbounds %"class.blink::DisplayItemClient", %"class.blink::DisplayItemClient"* %321, i64 0, i32 1
  %323 = load i8, i8* %322, align 8
  %324 = icmp ugt i8 %323, 2
  %325 = ptrtoint %"class.blink::DisplayItemClient"* %321 to i64
  br i1 %324, label %328, label %326

326:                                              ; preds = %319
  %327 = icmp ugt %"struct.blink::DisplayItemList::ItemSlot"* %139, %294
  br i1 %327, label %328, label %331

328:                                              ; preds = %319, %326
  %329 = phi i8 [ %323, %319 ], [ 22, %326 ]
  %330 = inttoptr i64 %293 to %"class.blink::DisplayItem"*
  br label %334

331:                                              ; preds = %326
  %332 = inttoptr i64 %293 to %"class.blink::DisplayItem"*
  %333 = icmp eq i8 %323, 0
  br i1 %333, label %364, label %334

334:                                              ; preds = %328, %331
  %335 = phi %"class.blink::DisplayItem"* [ %330, %328 ], [ %332, %331 ]
  %336 = phi i8 [ %329, %328 ], [ %323, %331 ]
  %337 = getelementptr inbounds %"class.blink::DisplayItem", %"class.blink::DisplayItem"* %335, i64 0, i32 3
  %338 = load i16, i16* %337, align 4
  %339 = and i16 %338, 1024
  %340 = icmp eq i16 %339, 0
  br i1 %340, label %341, label %345

341:                                              ; preds = %334
  %342 = load i16, i16* %143, align 4
  %343 = and i16 %342, 1024
  %344 = icmp eq i16 %343, 0
  br i1 %344, label %364, label %345

345:                                              ; preds = %341, %334
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #5
  store i64 %325, i64* %113, align 8
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %114) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %118, i8 0, i64 36, i1 false)
  %346 = call fastcc %"struct.WTF::KeyValuePair.139"* @_ZN3WTF7HashMapIPKN5blink17DisplayItemClientEZNS1_28DisplayItemRasterInvalidator8GenerateEvE21OldAndNewDisplayItemsNS_7PtrHashIS3_EENS_10HashTraitsIS4_EENS9_IS6_EENS_18PartitionAllocatorEE6insertIS4_S6_EENS_18HashTableAddResultINS_9HashTableIS4_NS_12KeyValuePairIS4_S6_EENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_SB_EESA_SC_EESI_EEOT_OT0_(%"class.WTF::HashMap.135"* nonnull %39, %"class.blink::DisplayItemClient"** nonnull dereferenceable(8) %44, %struct.OldAndNewDisplayItems* nonnull dereferenceable(36) %45)
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %114) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #5
  %347 = load i16, i16* %337, align 4
  %348 = and i16 %347, 5120
  %349 = icmp eq i16 %348, 4096
  br i1 %349, label %353, label %350

350:                                              ; preds = %345
  %351 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %346, i64 0, i32 1, i32 0
  %352 = getelementptr inbounds %"class.blink::DisplayItem", %"class.blink::DisplayItem"* %335, i64 0, i32 1
  call void @_ZN5blink7IntRect5UniteERKS0_(%"class.blink::IntRect"* %351, %"class.blink::IntRect"* dereferenceable(16) %352) #5
  br label %353

353:                                              ; preds = %345, %350
  %354 = load i16, i16* %143, align 4
  %355 = and i16 %354, 1024
  %356 = icmp eq i16 %355, 0
  br i1 %356, label %361, label %357

357:                                              ; preds = %353
  %358 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %346, i64 0, i32 1, i32 1
  %359 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %141, i64 0, i32 0, i64 8
  %360 = bitcast i8* %359 to %"class.blink::IntRect"*
  call void @_ZN5blink7IntRect5UniteERKS0_(%"class.blink::IntRect"* %358, %"class.blink::IntRect"* dereferenceable(16) %360) #5
  br label %361

361:                                              ; preds = %353, %357
  %362 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %346, i64 0, i32 1, i32 2
  store i8 %336, i8* %362, align 4
  %363 = load i64*, i64** %84, align 8
  br label %364

364:                                              ; preds = %341, %331, %361
  %365 = phi i64* [ %291, %331 ], [ %363, %361 ], [ %291, %341 ]
  %366 = phi %"class.blink::DisplayItem"* [ %332, %331 ], [ %335, %361 ], [ %335, %341 ]
  %367 = load i64, i64* %365, align 8
  %368 = sub i64 %293, %367
  %369 = sdiv exact i64 %368, 40
  %370 = trunc i64 %369 to i32
  %371 = call dereferenceable(1) i8* @_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.140"* nonnull %40, i32 %370) #5
  store i8 1, i8* %371, align 1
  %372 = getelementptr inbounds %"class.blink::DisplayItem", %"class.blink::DisplayItem"* %366, i64 0, i32 3
  %373 = load i16, i16* %372, align 4
  %374 = and i16 %373, 4096
  %375 = icmp eq i16 %374, 0
  br i1 %375, label %376, label %381

376:                                              ; preds = %364
  %377 = icmp ult %"struct.blink::DisplayItemList::ItemSlot"* %137, %294
  %378 = ptrtoint %"struct.blink::DisplayItemList::ItemSlot"* %137 to i64
  %379 = select i1 %377, i64 %293, i64 %378
  %380 = inttoptr i64 %379 to %"struct.blink::DisplayItemList::ItemSlot"*
  br label %381

381:                                              ; preds = %298, %302, %376, %364, %312
  %382 = phi %"struct.blink::DisplayItemList::ItemSlot"* [ %137, %312 ], [ %137, %364 ], [ %380, %376 ], [ %137, %302 ], [ %137, %298 ]
  %383 = phi %"struct.blink::DisplayItemList::ItemSlot"* [ %139, %312 ], [ %139, %364 ], [ %380, %376 ], [ %139, %302 ], [ %139, %298 ]
  %384 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %141, i64 1
  %385 = icmp eq %"struct.blink::DisplayItemList::ItemSlot"* %384, %96
  br i1 %385, label %120, label %386

386:                                              ; preds = %381
  %387 = load %"class.blink::DisplayItemList::Range"*, %"class.blink::DisplayItemList::Range"** %56, align 8
  %388 = bitcast %"class.blink::DisplayItemList::Range"* %387 to i64*
  br label %136

389:                                              ; preds = %580, %122
  %390 = load i32, i32* %51, align 4
  %391 = icmp eq i32 %390, 0
  %392 = load %"struct.WTF::KeyValuePair.139"*, %"struct.WTF::KeyValuePair.139"** %49, align 8
  %393 = load i32, i32* %50, align 8
  %394 = zext i32 %393 to i64
  %395 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %392, i64 %394
  br i1 %391, label %587, label %396

396:                                              ; preds = %389
  %397 = icmp eq i32 %393, 0
  br i1 %397, label %405, label %398

398:                                              ; preds = %396, %402
  %399 = phi %"struct.WTF::KeyValuePair.139"* [ %403, %402 ], [ %392, %396 ]
  %400 = bitcast %"struct.WTF::KeyValuePair.139"* %399 to i64*
  %401 = load i64, i64* %400, align 8
  switch i64 %401, label %405 [
    i64 -1, label %402
    i64 0, label %402
  ]

402:                                              ; preds = %398, %398
  %403 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %399, i64 1
  %404 = icmp eq %"struct.WTF::KeyValuePair.139"* %403, %395
  br i1 %404, label %587, label %398

405:                                              ; preds = %398, %396
  %406 = phi %"struct.WTF::KeyValuePair.139"* [ %392, %396 ], [ %399, %398 ]
  %407 = icmp eq %"struct.WTF::KeyValuePair.139"* %406, %395
  br i1 %407, label %587, label %408

408:                                              ; preds = %405
  %409 = bitcast { i64, i64 }* %37 to %"class.blink::IntRect"*
  %410 = bitcast { i64, i64 }* %38 to %"class.blink::IntRect"*
  %411 = bitcast { i64, i64 }* %37 to i8*
  %412 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %37, i64 0, i32 1
  %413 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %37, i64 0, i32 0
  %414 = bitcast %"class.base::RepeatingCallback"* %32 to i8*
  %415 = bitcast { i64, i64 }* %31 to %"class.blink::IntRect"*
  %416 = bitcast { i64, i64 }* %31 to i8*
  %417 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %31, i64 0, i32 1
  %418 = getelementptr inbounds %"class.blink::DisplayItemRasterInvalidator", %"class.blink::DisplayItemRasterInvalidator"* %0, i64 0, i32 0
  %419 = getelementptr inbounds %"class.blink::DisplayItemRasterInvalidator", %"class.blink::DisplayItemRasterInvalidator"* %0, i64 0, i32 4
  %420 = bitcast %"class.blink::IntRect"* %30 to i8*
  %421 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %30, i64 0, i32 0, i32 0
  %422 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %30, i64 0, i32 0, i32 1
  %423 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %30, i64 0, i32 1, i32 0
  %424 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %30, i64 0, i32 1, i32 1
  %425 = bitcast { i64, i64 }* %29 to i8*
  %426 = bitcast { i64, i64 }* %29 to %"class.blink::IntRect"*
  %427 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i64 0, i32 1
  %428 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i64 0, i32 0
  %429 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %31, i64 0, i32 0
  %430 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %32, i64 0, i32 0
  %431 = getelementptr inbounds %"class.blink::DisplayItemRasterInvalidator", %"class.blink::DisplayItemRasterInvalidator"* %0, i64 0, i32 1, i32 0
  %432 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %433 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %32, i64 0, i32 0, i32 0
  %434 = bitcast { i64, i64 }* %38 to i8*
  %435 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %38, i64 0, i32 1
  %436 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %38, i64 0, i32 0
  %437 = bitcast %"class.base::RepeatingCallback"* %36 to i8*
  %438 = bitcast { i64, i64 }* %35 to %"class.blink::IntRect"*
  %439 = bitcast { i64, i64 }* %35 to i8*
  %440 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %35, i64 0, i32 1
  %441 = bitcast %"class.blink::IntRect"* %34 to i8*
  %442 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %34, i64 0, i32 0, i32 0
  %443 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %34, i64 0, i32 0, i32 1
  %444 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %34, i64 0, i32 1, i32 0
  %445 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %34, i64 0, i32 1, i32 1
  %446 = bitcast { i64, i64 }* %33 to i8*
  %447 = bitcast { i64, i64 }* %33 to %"class.blink::IntRect"*
  %448 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %33, i64 0, i32 1
  %449 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %33, i64 0, i32 0
  %450 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %35, i64 0, i32 0
  %451 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %36, i64 0, i32 0
  %452 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %453 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %36, i64 0, i32 0, i32 0
  %454 = bitcast %"class.base::RepeatingCallback"* %12 to i8*
  %455 = bitcast { i64, i64 }* %11 to %"class.blink::IntRect"*
  %456 = bitcast { i64, i64 }* %11 to i8*
  %457 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 1
  %458 = bitcast %"class.blink::IntRect"* %10 to i8*
  %459 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %10, i64 0, i32 0, i32 0
  %460 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %10, i64 0, i32 0, i32 1
  %461 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %10, i64 0, i32 1, i32 0
  %462 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %10, i64 0, i32 1, i32 1
  %463 = bitcast { i64, i64 }* %9 to i8*
  %464 = bitcast { i64, i64 }* %9 to %"class.blink::IntRect"*
  %465 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %466 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %467 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 0
  %468 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %12, i64 0, i32 0
  %469 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %470 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %12, i64 0, i32 0, i32 0
  %471 = bitcast %"class.base::RepeatingCallback"* %8 to i8*
  %472 = bitcast { i64, i64 }* %7 to %"class.blink::IntRect"*
  %473 = bitcast { i64, i64 }* %7 to i8*
  %474 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %475 = bitcast %"class.blink::IntRect"* %6 to i8*
  %476 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %6, i64 0, i32 0, i32 0
  %477 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %6, i64 0, i32 0, i32 1
  %478 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %6, i64 0, i32 1, i32 0
  %479 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %6, i64 0, i32 1, i32 1
  %480 = bitcast { i64, i64 }* %5 to i8*
  %481 = bitcast { i64, i64 }* %5 to %"class.blink::IntRect"*
  %482 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %483 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %484 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %485 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0
  %486 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %487 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0, i32 0
  %488 = bitcast %"class.base::RepeatingCallback"* %20 to i8*
  %489 = bitcast { i64, i64 }* %19 to %"class.blink::IntRect"*
  %490 = bitcast { i64, i64 }* %19 to i8*
  %491 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i64 0, i32 1
  %492 = bitcast %"class.blink::IntRect"* %18 to i8*
  %493 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %18, i64 0, i32 0, i32 0
  %494 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %18, i64 0, i32 0, i32 1
  %495 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %18, i64 0, i32 1, i32 0
  %496 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %18, i64 0, i32 1, i32 1
  %497 = bitcast { i64, i64 }* %17 to i8*
  %498 = bitcast { i64, i64 }* %17 to %"class.blink::IntRect"*
  %499 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i64 0, i32 1
  %500 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i64 0, i32 0
  %501 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i64 0, i32 0
  %502 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %20, i64 0, i32 0
  %503 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %504 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %20, i64 0, i32 0, i32 0
  %505 = bitcast %"class.base::RepeatingCallback"* %16 to i8*
  %506 = bitcast { i64, i64 }* %15 to %"class.blink::IntRect"*
  %507 = bitcast { i64, i64 }* %15 to i8*
  %508 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 1
  %509 = bitcast %"class.blink::IntRect"* %14 to i8*
  %510 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %14, i64 0, i32 0, i32 0
  %511 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %14, i64 0, i32 0, i32 1
  %512 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %14, i64 0, i32 1, i32 0
  %513 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %14, i64 0, i32 1, i32 1
  %514 = bitcast { i64, i64 }* %13 to i8*
  %515 = bitcast { i64, i64 }* %13 to %"class.blink::IntRect"*
  %516 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 1
  %517 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 0
  %518 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 0
  %519 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %16, i64 0, i32 0
  %520 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %521 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %16, i64 0, i32 0, i32 0
  %522 = bitcast %"class.base::RepeatingCallback"* %24 to i8*
  %523 = bitcast { i64, i64 }* %23 to %"class.blink::IntRect"*
  %524 = bitcast { i64, i64 }* %23 to i8*
  %525 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i64 0, i32 1
  %526 = bitcast %"class.blink::IntRect"* %22 to i8*
  %527 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %22, i64 0, i32 0, i32 0
  %528 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %22, i64 0, i32 0, i32 1
  %529 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %22, i64 0, i32 1, i32 0
  %530 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %22, i64 0, i32 1, i32 1
  %531 = bitcast { i64, i64 }* %21 to i8*
  %532 = bitcast { i64, i64 }* %21 to %"class.blink::IntRect"*
  %533 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i64 0, i32 1
  %534 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i64 0, i32 0
  %535 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i64 0, i32 0
  %536 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %24, i64 0, i32 0
  %537 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %538 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %24, i64 0, i32 0, i32 0
  %539 = bitcast %"class.base::RepeatingCallback"* %28 to i8*
  %540 = bitcast { i64, i64 }* %27 to %"class.blink::IntRect"*
  %541 = bitcast { i64, i64 }* %27 to i8*
  %542 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %27, i64 0, i32 1
  %543 = bitcast %"class.blink::IntRect"* %26 to i8*
  %544 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %26, i64 0, i32 0, i32 0
  %545 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %26, i64 0, i32 0, i32 1
  %546 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %26, i64 0, i32 1, i32 0
  %547 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %26, i64 0, i32 1, i32 1
  %548 = bitcast { i64, i64 }* %25 to i8*
  %549 = bitcast { i64, i64 }* %25 to %"class.blink::IntRect"*
  %550 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %25, i64 0, i32 1
  %551 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %25, i64 0, i32 0
  %552 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %27, i64 0, i32 0
  %553 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %28, i64 0, i32 0
  %554 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %555 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %28, i64 0, i32 0, i32 0
  br label %601

556:                                              ; preds = %130, %580
  %557 = phi %"struct.blink::DisplayItemList::ItemSlot"* [ %128, %130 ], [ %581, %580 ]
  %558 = phi %"class.blink::DisplayItemList::Range"* [ %131, %130 ], [ %583, %580 ]
  %559 = phi i64 [ %124, %130 ], [ %582, %580 ]
  %560 = bitcast %"class.blink::DisplayItemList::Range"* %558 to i64*
  %561 = load i64, i64* %560, align 8
  %562 = sub i64 %559, %561
  %563 = sdiv exact i64 %562, 40
  %564 = trunc i64 %563 to i32
  %565 = call dereferenceable(1) i8* @_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.140"* nonnull %40, i32 %564) #5
  %566 = load i8, i8* %565, align 1, !range !4
  %567 = icmp eq i8 %566, 0
  br i1 %567, label %568, label %580

568:                                              ; preds = %556
  %569 = inttoptr i64 %559 to %"class.blink::DisplayItem"*
  %570 = getelementptr inbounds %"class.blink::DisplayItem", %"class.blink::DisplayItem"* %569, i64 0, i32 3
  %571 = load i16, i16* %570, align 4
  %572 = and i16 %571, 5120
  %573 = icmp eq i16 %572, 4096
  br i1 %573, label %580, label %574

574:                                              ; preds = %568
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #5
  %575 = inttoptr i64 %559 to i64*
  %576 = load i64, i64* %575, align 8
  store i64 %576, i64* %133, align 8
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %134) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %135, i8 0, i64 36, i1 false)
  %577 = call fastcc %"struct.WTF::KeyValuePair.139"* @_ZN3WTF7HashMapIPKN5blink17DisplayItemClientEZNS1_28DisplayItemRasterInvalidator8GenerateEvE21OldAndNewDisplayItemsNS_7PtrHashIS3_EENS_10HashTraitsIS4_EENS9_IS6_EENS_18PartitionAllocatorEE6insertIS4_S6_EENS_18HashTableAddResultINS_9HashTableIS4_NS_12KeyValuePairIS4_S6_EENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_SB_EESA_SC_EESI_EEOT_OT0_(%"class.WTF::HashMap.135"* nonnull %39, %"class.blink::DisplayItemClient"** nonnull dereferenceable(8) %46, %struct.OldAndNewDisplayItems* nonnull dereferenceable(36) %47)
  %578 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %577, i64 0, i32 1, i32 0
  %579 = getelementptr inbounds %"class.blink::DisplayItem", %"class.blink::DisplayItem"* %569, i64 0, i32 1
  call void @_ZN5blink7IntRect5UniteERKS0_(%"class.blink::IntRect"* %578, %"class.blink::IntRect"* dereferenceable(16) %579) #5
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %134) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #5
  br label %580

580:                                              ; preds = %568, %574, %556
  %581 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %557, i64 1
  %582 = ptrtoint %"struct.blink::DisplayItemList::ItemSlot"* %581 to i64
  %583 = load %"class.blink::DisplayItemList::Range"*, %"class.blink::DisplayItemList::Range"** %56, align 8
  %584 = getelementptr inbounds %"class.blink::DisplayItemList::Range", %"class.blink::DisplayItemList::Range"* %583, i64 0, i32 1, i32 0
  %585 = load %"struct.blink::DisplayItemList::ItemSlot"*, %"struct.blink::DisplayItemList::ItemSlot"** %584, align 8
  %586 = icmp eq %"struct.blink::DisplayItemList::ItemSlot"* %585, %581
  br i1 %586, label %389, label %556

587:                                              ; preds = %402, %969, %979, %976, %389, %405
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #5
  %588 = load i8*, i8** %54, align 8
  %589 = icmp eq i8* %588, null
  br i1 %589, label %595, label %590, !prof !3

590:                                              ; preds = %587
  %591 = load i32, i32* %55, align 4
  %592 = icmp eq i32 %591, 0
  br i1 %592, label %594, label %593, !prof !2

593:                                              ; preds = %590
  store i32 0, i32* %55, align 4
  br label %594

594:                                              ; preds = %593, %590
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %588) #5
  store i8* null, i8** %54, align 8
  br label %595

595:                                              ; preds = %587, %594
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #5
  %596 = load %"struct.WTF::KeyValuePair.139"*, %"struct.WTF::KeyValuePair.139"** %49, align 8
  %597 = icmp eq %"struct.WTF::KeyValuePair.139"* %596, null
  br i1 %597, label %600, label %598, !prof !3

598:                                              ; preds = %595
  %599 = bitcast %"struct.WTF::KeyValuePair.139"* %596 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %599) #5
  store %"struct.WTF::KeyValuePair.139"* null, %"struct.WTF::KeyValuePair.139"** %49, align 8
  br label %600

600:                                              ; preds = %595, %598
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #5
  ret void

601:                                              ; preds = %408, %979
  %602 = phi %"struct.WTF::KeyValuePair.139"* [ %406, %408 ], [ %973, %979 ]
  %603 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %602, i64 0, i32 0
  %604 = load %"class.blink::DisplayItemClient"*, %"class.blink::DisplayItemClient"** %603, align 8
  %605 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %602, i64 0, i32 1, i32 0
  %606 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %602, i64 0, i32 1, i32 1
  %607 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %602, i64 0, i32 1, i32 2
  %608 = load i8, i8* %607, align 8
  %609 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %602, i64 0, i32 1, i32 1, i32 1, i32 0
  %610 = load i32, i32* %609, align 4
  %611 = icmp slt i32 %610, 1
  %612 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %602, i64 0, i32 1, i32 1, i32 1, i32 1
  %613 = load i32, i32* %612, align 4
  %614 = icmp slt i32 %613, 1
  %615 = or i1 %611, %614
  %616 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %602, i64 0, i32 1, i32 0, i32 1, i32 0
  %617 = load i32, i32* %616, align 4
  %618 = icmp slt i32 %617, 1
  %619 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %602, i64 0, i32 1, i32 0, i32 1, i32 1
  %620 = load i32, i32* %619, align 4
  %621 = icmp slt i32 %620, 1
  %622 = or i1 %618, %621
  br i1 %615, label %623, label %654

623:                                              ; preds = %601
  br i1 %622, label %969, label %624

624:                                              ; preds = %623
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %539) #5
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %541) #5
  store i64 -6148914691236517206, i64* %542, align 8
  %625 = load %"class.blink::RasterInvalidator"*, %"class.blink::RasterInvalidator"** %418, align 8
  %626 = load %"class.blink::ChunkToLayerMapper"*, %"class.blink::ChunkToLayerMapper"** %419, align 8
  %627 = call { i64, i64 } @_ZNK5blink18ChunkToLayerMapper13MapVisualRectERKNS_7IntRectE(%"class.blink::ChunkToLayerMapper"* %626, %"class.blink::IntRect"* dereferenceable(16) %605) #5
  %628 = extractvalue { i64, i64 } %627, 0
  %629 = extractvalue { i64, i64 } %627, 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %543) #5
  %630 = getelementptr inbounds %"class.blink::RasterInvalidator", %"class.blink::RasterInvalidator"* %625, i64 0, i32 0, i32 1, i32 0
  %631 = load i32, i32* %630, align 4
  %632 = getelementptr inbounds %"class.blink::RasterInvalidator", %"class.blink::RasterInvalidator"* %625, i64 0, i32 0, i32 1, i32 1
  %633 = load i32, i32* %632, align 4
  store i32 0, i32* %544, align 4
  store i32 0, i32* %545, align 4
  store i32 %631, i32* %546, align 4
  store i32 %633, i32* %547, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %548) #5
  store i64 %628, i64* %551, align 8
  store i64 %629, i64* %550, align 8
  call void @_ZN5blink7IntRect9IntersectERKS0_(%"class.blink::IntRect"* nonnull %549, %"class.blink::IntRect"* nonnull dereferenceable(16) %26) #5
  %634 = load i64, i64* %551, align 8
  %635 = load i64, i64* %550, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %548) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %543) #5
  store i64 %634, i64* %552, align 8
  store i64 %635, i64* %542, align 8
  %636 = trunc i64 %635 to i32
  %637 = icmp slt i32 %636, 1
  %638 = lshr i64 %635, 32
  %639 = trunc i64 %638 to i32
  %640 = icmp slt i32 %639, 1
  %641 = or i1 %637, %640
  br i1 %641, label %653, label %642

642:                                              ; preds = %624
  %643 = load %"class.blink::RasterInvalidator"*, %"class.blink::RasterInvalidator"** %418, align 8
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %553, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %431) #5
  %644 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %554, align 8
  %645 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %644, i64 0, i32 1
  %646 = bitcast void ()** %645 to void (%"class.base::internal::BindStateBase"*, %"class.blink::IntRect"*)**
  %647 = load void (%"class.base::internal::BindStateBase"*, %"class.blink::IntRect"*)*, void (%"class.base::internal::BindStateBase"*, %"class.blink::IntRect"*)** %646, align 8
  call void %647(%"class.base::internal::BindStateBase"* %644, %"class.blink::IntRect"* nonnull dereferenceable(16) %540) #5
  %648 = getelementptr inbounds %"class.blink::RasterInvalidator", %"class.blink::RasterInvalidator"* %643, i64 0, i32 3, i32 0, i32 0, i32 0
  %649 = load %"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo"*, %"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo"** %648, align 8
  %650 = icmp eq %"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo"* %649, null
  br i1 %650, label %652, label %651

651:                                              ; preds = %642
  call void @_ZN5blink17RasterInvalidator23TrackRasterInvalidationERKNS_7IntRectERKNS_17DisplayItemClientENS_23PaintInvalidationReasonENS0_16ClientIsOldOrNewE(%"class.blink::RasterInvalidator"* %643, %"class.blink::IntRect"* nonnull dereferenceable(16) %540, %"class.blink::DisplayItemClient"* dereferenceable(16) %604, i8 zeroext 10, i32 0) #5
  br label %652

652:                                              ; preds = %651, %642
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %555) #5
  br label %653

653:                                              ; preds = %652, %624
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %541) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %539) #5
  br label %969

654:                                              ; preds = %601
  br i1 %622, label %655, label %685

655:                                              ; preds = %654
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %522) #5
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %524) #5
  store i64 -6148914691236517206, i64* %525, align 8
  %656 = load %"class.blink::RasterInvalidator"*, %"class.blink::RasterInvalidator"** %418, align 8
  %657 = load %"class.blink::ChunkToLayerMapper"*, %"class.blink::ChunkToLayerMapper"** %419, align 8
  %658 = call { i64, i64 } @_ZNK5blink18ChunkToLayerMapper13MapVisualRectERKNS_7IntRectE(%"class.blink::ChunkToLayerMapper"* %657, %"class.blink::IntRect"* dereferenceable(16) %606) #5
  %659 = extractvalue { i64, i64 } %658, 0
  %660 = extractvalue { i64, i64 } %658, 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %526) #5
  %661 = getelementptr inbounds %"class.blink::RasterInvalidator", %"class.blink::RasterInvalidator"* %656, i64 0, i32 0, i32 1, i32 0
  %662 = load i32, i32* %661, align 4
  %663 = getelementptr inbounds %"class.blink::RasterInvalidator", %"class.blink::RasterInvalidator"* %656, i64 0, i32 0, i32 1, i32 1
  %664 = load i32, i32* %663, align 4
  store i32 0, i32* %527, align 4
  store i32 0, i32* %528, align 4
  store i32 %662, i32* %529, align 4
  store i32 %664, i32* %530, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %531) #5
  store i64 %659, i64* %534, align 8
  store i64 %660, i64* %533, align 8
  call void @_ZN5blink7IntRect9IntersectERKS0_(%"class.blink::IntRect"* nonnull %532, %"class.blink::IntRect"* nonnull dereferenceable(16) %22) #5
  %665 = load i64, i64* %534, align 8
  %666 = load i64, i64* %533, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %531) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %526) #5
  store i64 %665, i64* %535, align 8
  store i64 %666, i64* %525, align 8
  %667 = trunc i64 %666 to i32
  %668 = icmp slt i32 %667, 1
  %669 = lshr i64 %666, 32
  %670 = trunc i64 %669 to i32
  %671 = icmp slt i32 %670, 1
  %672 = or i1 %668, %671
  br i1 %672, label %684, label %673

673:                                              ; preds = %655
  %674 = load %"class.blink::RasterInvalidator"*, %"class.blink::RasterInvalidator"** %418, align 8
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %536, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %431) #5
  %675 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %537, align 8
  %676 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %675, i64 0, i32 1
  %677 = bitcast void ()** %676 to void (%"class.base::internal::BindStateBase"*, %"class.blink::IntRect"*)**
  %678 = load void (%"class.base::internal::BindStateBase"*, %"class.blink::IntRect"*)*, void (%"class.base::internal::BindStateBase"*, %"class.blink::IntRect"*)** %677, align 8
  call void %678(%"class.base::internal::BindStateBase"* %675, %"class.blink::IntRect"* nonnull dereferenceable(16) %523) #5
  %679 = getelementptr inbounds %"class.blink::RasterInvalidator", %"class.blink::RasterInvalidator"* %674, i64 0, i32 3, i32 0, i32 0, i32 0
  %680 = load %"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo"*, %"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo"** %679, align 8
  %681 = icmp eq %"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo"* %680, null
  br i1 %681, label %683, label %682

682:                                              ; preds = %673
  call void @_ZN5blink17RasterInvalidator23TrackRasterInvalidationERKNS_7IntRectERKNS_17DisplayItemClientENS_23PaintInvalidationReasonENS0_16ClientIsOldOrNewE(%"class.blink::RasterInvalidator"* %674, %"class.blink::IntRect"* nonnull dereferenceable(16) %523, %"class.blink::DisplayItemClient"* dereferenceable(16) %604, i8 zeroext 9, i32 1) #5
  br label %683

683:                                              ; preds = %682, %673
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %538) #5
  br label %684

684:                                              ; preds = %683, %655
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %524) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %522) #5
  br label %969

685:                                              ; preds = %654
  %686 = getelementptr inbounds %"class.blink::DisplayItemClient", %"class.blink::DisplayItemClient"* %604, i64 0, i32 1
  %687 = load i8, i8* %686, align 8
  %688 = icmp eq i8 %687, 21
  br i1 %688, label %689, label %748

689:                                              ; preds = %685
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %488) #5
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %490) #5
  store i64 -6148914691236517206, i64* %491, align 8
  %690 = load %"class.blink::RasterInvalidator"*, %"class.blink::RasterInvalidator"** %418, align 8
  %691 = load %"class.blink::ChunkToLayerMapper"*, %"class.blink::ChunkToLayerMapper"** %419, align 8
  %692 = call { i64, i64 } @_ZNK5blink18ChunkToLayerMapper13MapVisualRectERKNS_7IntRectE(%"class.blink::ChunkToLayerMapper"* %691, %"class.blink::IntRect"* dereferenceable(16) %605) #5
  %693 = extractvalue { i64, i64 } %692, 0
  %694 = extractvalue { i64, i64 } %692, 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %492) #5
  %695 = getelementptr inbounds %"class.blink::RasterInvalidator", %"class.blink::RasterInvalidator"* %690, i64 0, i32 0, i32 1, i32 0
  %696 = load i32, i32* %695, align 4
  %697 = getelementptr inbounds %"class.blink::RasterInvalidator", %"class.blink::RasterInvalidator"* %690, i64 0, i32 0, i32 1, i32 1
  %698 = load i32, i32* %697, align 4
  store i32 0, i32* %493, align 4
  store i32 0, i32* %494, align 4
  store i32 %696, i32* %495, align 4
  store i32 %698, i32* %496, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %497) #5
  store i64 %693, i64* %500, align 8
  store i64 %694, i64* %499, align 8
  call void @_ZN5blink7IntRect9IntersectERKS0_(%"class.blink::IntRect"* nonnull %498, %"class.blink::IntRect"* nonnull dereferenceable(16) %18) #5
  %699 = load i64, i64* %500, align 8
  %700 = load i64, i64* %499, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %497) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %492) #5
  store i64 %699, i64* %501, align 8
  store i64 %700, i64* %491, align 8
  %701 = trunc i64 %700 to i32
  %702 = icmp slt i32 %701, 1
  %703 = lshr i64 %700, 32
  %704 = trunc i64 %703 to i32
  %705 = icmp slt i32 %704, 1
  %706 = or i1 %702, %705
  br i1 %706, label %718, label %707

707:                                              ; preds = %689
  %708 = load %"class.blink::RasterInvalidator"*, %"class.blink::RasterInvalidator"** %418, align 8
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %502, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %431) #5
  %709 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %503, align 8
  %710 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %709, i64 0, i32 1
  %711 = bitcast void ()** %710 to void (%"class.base::internal::BindStateBase"*, %"class.blink::IntRect"*)**
  %712 = load void (%"class.base::internal::BindStateBase"*, %"class.blink::IntRect"*)*, void (%"class.base::internal::BindStateBase"*, %"class.blink::IntRect"*)** %711, align 8
  call void %712(%"class.base::internal::BindStateBase"* %709, %"class.blink::IntRect"* nonnull dereferenceable(16) %489) #5
  %713 = getelementptr inbounds %"class.blink::RasterInvalidator", %"class.blink::RasterInvalidator"* %708, i64 0, i32 3, i32 0, i32 0, i32 0
  %714 = load %"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo"*, %"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo"** %713, align 8
  %715 = icmp eq %"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo"* %714, null
  br i1 %715, label %717, label %716

716:                                              ; preds = %707
  call void @_ZN5blink17RasterInvalidator23TrackRasterInvalidationERKNS_7IntRectERKNS_17DisplayItemClientENS_23PaintInvalidationReasonENS0_16ClientIsOldOrNewE(%"class.blink::RasterInvalidator"* %708, %"class.blink::IntRect"* nonnull dereferenceable(16) %489, %"class.blink::DisplayItemClient"* dereferenceable(16) %604, i8 zeroext 10, i32 0) #5
  br label %717

717:                                              ; preds = %716, %707
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %504) #5
  br label %718

718:                                              ; preds = %717, %689
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %490) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %488) #5
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %505) #5
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %507) #5
  store i64 -6148914691236517206, i64* %508, align 8
  %719 = load %"class.blink::RasterInvalidator"*, %"class.blink::RasterInvalidator"** %418, align 8
  %720 = load %"class.blink::ChunkToLayerMapper"*, %"class.blink::ChunkToLayerMapper"** %419, align 8
  %721 = call { i64, i64 } @_ZNK5blink18ChunkToLayerMapper13MapVisualRectERKNS_7IntRectE(%"class.blink::ChunkToLayerMapper"* %720, %"class.blink::IntRect"* dereferenceable(16) %606) #5
  %722 = extractvalue { i64, i64 } %721, 0
  %723 = extractvalue { i64, i64 } %721, 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %509) #5
  %724 = getelementptr inbounds %"class.blink::RasterInvalidator", %"class.blink::RasterInvalidator"* %719, i64 0, i32 0, i32 1, i32 0
  %725 = load i32, i32* %724, align 4
  %726 = getelementptr inbounds %"class.blink::RasterInvalidator", %"class.blink::RasterInvalidator"* %719, i64 0, i32 0, i32 1, i32 1
  %727 = load i32, i32* %726, align 4
  store i32 0, i32* %510, align 4
  store i32 0, i32* %511, align 4
  store i32 %725, i32* %512, align 4
  store i32 %727, i32* %513, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %514) #5
  store i64 %722, i64* %517, align 8
  store i64 %723, i64* %516, align 8
  call void @_ZN5blink7IntRect9IntersectERKS0_(%"class.blink::IntRect"* nonnull %515, %"class.blink::IntRect"* nonnull dereferenceable(16) %14) #5
  %728 = load i64, i64* %517, align 8
  %729 = load i64, i64* %516, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %514) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %509) #5
  store i64 %728, i64* %518, align 8
  store i64 %729, i64* %508, align 8
  %730 = trunc i64 %729 to i32
  %731 = icmp slt i32 %730, 1
  %732 = lshr i64 %729, 32
  %733 = trunc i64 %732 to i32
  %734 = icmp slt i32 %733, 1
  %735 = or i1 %731, %734
  br i1 %735, label %747, label %736

736:                                              ; preds = %718
  %737 = load %"class.blink::RasterInvalidator"*, %"class.blink::RasterInvalidator"** %418, align 8
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %519, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %431) #5
  %738 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %520, align 8
  %739 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %738, i64 0, i32 1
  %740 = bitcast void ()** %739 to void (%"class.base::internal::BindStateBase"*, %"class.blink::IntRect"*)**
  %741 = load void (%"class.base::internal::BindStateBase"*, %"class.blink::IntRect"*)*, void (%"class.base::internal::BindStateBase"*, %"class.blink::IntRect"*)** %740, align 8
  call void %741(%"class.base::internal::BindStateBase"* %738, %"class.blink::IntRect"* nonnull dereferenceable(16) %506) #5
  %742 = getelementptr inbounds %"class.blink::RasterInvalidator", %"class.blink::RasterInvalidator"* %737, i64 0, i32 3, i32 0, i32 0, i32 0
  %743 = load %"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo"*, %"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo"** %742, align 8
  %744 = icmp eq %"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo"* %743, null
  br i1 %744, label %746, label %745

745:                                              ; preds = %736
  call void @_ZN5blink17RasterInvalidator23TrackRasterInvalidationERKNS_7IntRectERKNS_17DisplayItemClientENS_23PaintInvalidationReasonENS0_16ClientIsOldOrNewE(%"class.blink::RasterInvalidator"* %737, %"class.blink::IntRect"* nonnull dereferenceable(16) %506, %"class.blink::DisplayItemClient"* dereferenceable(16) %604, i8 zeroext 9, i32 1) #5
  br label %746

746:                                              ; preds = %745, %736
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %521) #5
  br label %747

747:                                              ; preds = %746, %718
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %507) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %505) #5
  br label %969

748:                                              ; preds = %685
  %749 = icmp ugt i8 %608, 2
  br i1 %749, label %764, label %750

750:                                              ; preds = %748
  %751 = bitcast %"class.blink::IntRect"* %605 to i64*
  %752 = load i64, i64* %751, align 4
  %753 = trunc i64 %752 to i32
  %754 = lshr i64 %752, 32
  %755 = trunc i64 %754 to i32
  %756 = bitcast %"class.blink::IntRect"* %606 to i64*
  %757 = load i64, i64* %756, align 4
  %758 = trunc i64 %757 to i32
  %759 = lshr i64 %757, 32
  %760 = trunc i64 %759 to i32
  %761 = icmp ne i32 %753, %758
  %762 = icmp ne i32 %755, %760
  %763 = or i1 %761, %762
  br i1 %763, label %764, label %828

764:                                              ; preds = %750, %748
  %765 = phi i8 [ %608, %748 ], [ 7, %750 ]
  %766 = call zeroext i1 @_ZNK5blink7IntRect8ContainsERKS0_(%"class.blink::IntRect"* %606, %"class.blink::IntRect"* dereferenceable(16) %605) #5
  br i1 %766, label %798, label %767

767:                                              ; preds = %764
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %454) #5
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %456) #5
  store i64 -6148914691236517206, i64* %457, align 8
  %768 = load %"class.blink::RasterInvalidator"*, %"class.blink::RasterInvalidator"** %418, align 8
  %769 = load %"class.blink::ChunkToLayerMapper"*, %"class.blink::ChunkToLayerMapper"** %419, align 8
  %770 = call { i64, i64 } @_ZNK5blink18ChunkToLayerMapper13MapVisualRectERKNS_7IntRectE(%"class.blink::ChunkToLayerMapper"* %769, %"class.blink::IntRect"* dereferenceable(16) %605) #5
  %771 = extractvalue { i64, i64 } %770, 0
  %772 = extractvalue { i64, i64 } %770, 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %458) #5
  %773 = getelementptr inbounds %"class.blink::RasterInvalidator", %"class.blink::RasterInvalidator"* %768, i64 0, i32 0, i32 1, i32 0
  %774 = load i32, i32* %773, align 4
  %775 = getelementptr inbounds %"class.blink::RasterInvalidator", %"class.blink::RasterInvalidator"* %768, i64 0, i32 0, i32 1, i32 1
  %776 = load i32, i32* %775, align 4
  store i32 0, i32* %459, align 4
  store i32 0, i32* %460, align 4
  store i32 %774, i32* %461, align 4
  store i32 %776, i32* %462, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %463) #5
  store i64 %771, i64* %466, align 8
  store i64 %772, i64* %465, align 8
  call void @_ZN5blink7IntRect9IntersectERKS0_(%"class.blink::IntRect"* nonnull %464, %"class.blink::IntRect"* nonnull dereferenceable(16) %10) #5
  %777 = load i64, i64* %466, align 8
  %778 = load i64, i64* %465, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %463) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %458) #5
  store i64 %777, i64* %467, align 8
  store i64 %778, i64* %457, align 8
  %779 = trunc i64 %778 to i32
  %780 = icmp slt i32 %779, 1
  %781 = lshr i64 %778, 32
  %782 = trunc i64 %781 to i32
  %783 = icmp slt i32 %782, 1
  %784 = or i1 %780, %783
  br i1 %784, label %796, label %785

785:                                              ; preds = %767
  %786 = load %"class.blink::RasterInvalidator"*, %"class.blink::RasterInvalidator"** %418, align 8
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %468, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %431) #5
  %787 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %469, align 8
  %788 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %787, i64 0, i32 1
  %789 = bitcast void ()** %788 to void (%"class.base::internal::BindStateBase"*, %"class.blink::IntRect"*)**
  %790 = load void (%"class.base::internal::BindStateBase"*, %"class.blink::IntRect"*)*, void (%"class.base::internal::BindStateBase"*, %"class.blink::IntRect"*)** %789, align 8
  call void %790(%"class.base::internal::BindStateBase"* %787, %"class.blink::IntRect"* nonnull dereferenceable(16) %455) #5
  %791 = getelementptr inbounds %"class.blink::RasterInvalidator", %"class.blink::RasterInvalidator"* %786, i64 0, i32 3, i32 0, i32 0, i32 0
  %792 = load %"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo"*, %"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo"** %791, align 8
  %793 = icmp eq %"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo"* %792, null
  br i1 %793, label %795, label %794

794:                                              ; preds = %785
  call void @_ZN5blink17RasterInvalidator23TrackRasterInvalidationERKNS_7IntRectERKNS_17DisplayItemClientENS_23PaintInvalidationReasonENS0_16ClientIsOldOrNewE(%"class.blink::RasterInvalidator"* %786, %"class.blink::IntRect"* nonnull dereferenceable(16) %455, %"class.blink::DisplayItemClient"* dereferenceable(16) %604, i8 zeroext %765, i32 1) #5
  br label %795

795:                                              ; preds = %794, %785
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %470) #5
  br label %796

796:                                              ; preds = %795, %767
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %456) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %454) #5
  %797 = call zeroext i1 @_ZNK5blink7IntRect8ContainsERKS0_(%"class.blink::IntRect"* %605, %"class.blink::IntRect"* dereferenceable(16) %606) #5
  br i1 %797, label %969, label %798

798:                                              ; preds = %796, %764
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %471) #5
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %473) #5
  store i64 -6148914691236517206, i64* %474, align 8
  %799 = load %"class.blink::RasterInvalidator"*, %"class.blink::RasterInvalidator"** %418, align 8
  %800 = load %"class.blink::ChunkToLayerMapper"*, %"class.blink::ChunkToLayerMapper"** %419, align 8
  %801 = call { i64, i64 } @_ZNK5blink18ChunkToLayerMapper13MapVisualRectERKNS_7IntRectE(%"class.blink::ChunkToLayerMapper"* %800, %"class.blink::IntRect"* dereferenceable(16) %606) #5
  %802 = extractvalue { i64, i64 } %801, 0
  %803 = extractvalue { i64, i64 } %801, 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %475) #5
  %804 = getelementptr inbounds %"class.blink::RasterInvalidator", %"class.blink::RasterInvalidator"* %799, i64 0, i32 0, i32 1, i32 0
  %805 = load i32, i32* %804, align 4
  %806 = getelementptr inbounds %"class.blink::RasterInvalidator", %"class.blink::RasterInvalidator"* %799, i64 0, i32 0, i32 1, i32 1
  %807 = load i32, i32* %806, align 4
  store i32 0, i32* %476, align 4
  store i32 0, i32* %477, align 4
  store i32 %805, i32* %478, align 4
  store i32 %807, i32* %479, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %480) #5
  store i64 %802, i64* %483, align 8
  store i64 %803, i64* %482, align 8
  call void @_ZN5blink7IntRect9IntersectERKS0_(%"class.blink::IntRect"* nonnull %481, %"class.blink::IntRect"* nonnull dereferenceable(16) %6) #5
  %808 = load i64, i64* %483, align 8
  %809 = load i64, i64* %482, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %480) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %475) #5
  store i64 %808, i64* %484, align 8
  store i64 %809, i64* %474, align 8
  %810 = trunc i64 %809 to i32
  %811 = icmp slt i32 %810, 1
  %812 = lshr i64 %809, 32
  %813 = trunc i64 %812 to i32
  %814 = icmp slt i32 %813, 1
  %815 = or i1 %811, %814
  br i1 %815, label %827, label %816

816:                                              ; preds = %798
  %817 = load %"class.blink::RasterInvalidator"*, %"class.blink::RasterInvalidator"** %418, align 8
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %485, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %431) #5
  %818 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %486, align 8
  %819 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %818, i64 0, i32 1
  %820 = bitcast void ()** %819 to void (%"class.base::internal::BindStateBase"*, %"class.blink::IntRect"*)**
  %821 = load void (%"class.base::internal::BindStateBase"*, %"class.blink::IntRect"*)*, void (%"class.base::internal::BindStateBase"*, %"class.blink::IntRect"*)** %820, align 8
  call void %821(%"class.base::internal::BindStateBase"* %818, %"class.blink::IntRect"* nonnull dereferenceable(16) %472) #5
  %822 = getelementptr inbounds %"class.blink::RasterInvalidator", %"class.blink::RasterInvalidator"* %817, i64 0, i32 3, i32 0, i32 0, i32 0
  %823 = load %"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo"*, %"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo"** %822, align 8
  %824 = icmp eq %"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo"* %823, null
  br i1 %824, label %826, label %825

825:                                              ; preds = %816
  call void @_ZN5blink17RasterInvalidator23TrackRasterInvalidationERKNS_7IntRectERKNS_17DisplayItemClientENS_23PaintInvalidationReasonENS0_16ClientIsOldOrNewE(%"class.blink::RasterInvalidator"* %817, %"class.blink::IntRect"* nonnull dereferenceable(16) %472, %"class.blink::DisplayItemClient"* dereferenceable(16) %604, i8 zeroext %765, i32 1) #5
  br label %826

826:                                              ; preds = %825, %816
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %487) #5
  br label %827

827:                                              ; preds = %826, %798
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %473) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %471) #5
  br label %969

828:                                              ; preds = %750
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %411) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %411, i8 -86, i64 16, i1 false) #5
  %829 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %602, i64 0, i32 1, i32 0, i32 1
  %830 = bitcast %"class.blink::IntSize"* %829 to i64*
  %831 = load i64, i64* %830, align 4
  %832 = trunc i64 %831 to i32
  %833 = and i64 %831, -4294967296
  %834 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %602, i64 0, i32 1, i32 1, i32 1
  %835 = bitcast %"class.blink::IntSize"* %834 to i64*
  %836 = load i64, i64* %835, align 4
  %837 = trunc i64 %836 to i32
  %838 = sub nsw i32 %837, %832
  %839 = icmp sgt i32 %838, 0
  br i1 %839, label %840, label %845

840:                                              ; preds = %828
  %841 = and i64 %836, -4294967296
  %842 = add i64 %831, %757
  %843 = zext i32 %838 to i64
  %844 = or i64 %841, %843
  br label %852

845:                                              ; preds = %828
  %846 = icmp slt i32 %838, 0
  br i1 %846, label %847, label %852

847:                                              ; preds = %845
  %848 = add i64 %836, %757
  %849 = sub nsw i32 0, %838
  %850 = zext i32 %849 to i64
  %851 = or i64 %833, %850
  br label %852

852:                                              ; preds = %847, %845, %840
  %853 = phi i64 [ %842, %840 ], [ %848, %847 ], [ 0, %845 ]
  %854 = phi i64 [ %759, %840 ], [ %759, %847 ], [ 0, %845 ]
  %855 = phi i64 [ %844, %840 ], [ %851, %847 ], [ 0, %845 ]
  %856 = shl nuw i64 %854, 32
  %857 = and i64 %853, 4294967295
  %858 = or i64 %856, %857
  store i64 %858, i64* %413, align 8
  store i64 %855, i64* %412, align 8
  %859 = trunc i64 %855 to i32
  %860 = icmp slt i32 %859, 1
  %861 = lshr i64 %855, 32
  %862 = trunc i64 %861 to i32
  %863 = icmp slt i32 %862, 1
  %864 = or i1 %860, %863
  br i1 %864, label %899, label %865

865:                                              ; preds = %852
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %414) #5
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %416) #5
  store i64 -6148914691236517206, i64* %417, align 8
  %866 = load %"class.blink::RasterInvalidator"*, %"class.blink::RasterInvalidator"** %418, align 8
  %867 = load %"class.blink::ChunkToLayerMapper"*, %"class.blink::ChunkToLayerMapper"** %419, align 8
  %868 = call { i64, i64 } @_ZNK5blink18ChunkToLayerMapper13MapVisualRectERKNS_7IntRectE(%"class.blink::ChunkToLayerMapper"* %867, %"class.blink::IntRect"* nonnull dereferenceable(16) %409) #5
  %869 = extractvalue { i64, i64 } %868, 0
  %870 = extractvalue { i64, i64 } %868, 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %420) #5
  %871 = getelementptr inbounds %"class.blink::RasterInvalidator", %"class.blink::RasterInvalidator"* %866, i64 0, i32 0, i32 1, i32 0
  %872 = load i32, i32* %871, align 4
  %873 = getelementptr inbounds %"class.blink::RasterInvalidator", %"class.blink::RasterInvalidator"* %866, i64 0, i32 0, i32 1, i32 1
  %874 = load i32, i32* %873, align 4
  store i32 0, i32* %421, align 4
  store i32 0, i32* %422, align 4
  store i32 %872, i32* %423, align 4
  store i32 %874, i32* %424, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %425) #5
  store i64 %869, i64* %428, align 8
  store i64 %870, i64* %427, align 8
  call void @_ZN5blink7IntRect9IntersectERKS0_(%"class.blink::IntRect"* nonnull %426, %"class.blink::IntRect"* nonnull dereferenceable(16) %30) #5
  %875 = load i64, i64* %428, align 8
  %876 = load i64, i64* %427, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %425) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %420) #5
  store i64 %875, i64* %429, align 8
  store i64 %876, i64* %417, align 8
  %877 = trunc i64 %876 to i32
  %878 = icmp slt i32 %877, 1
  %879 = lshr i64 %876, 32
  %880 = trunc i64 %879 to i32
  %881 = icmp slt i32 %880, 1
  %882 = or i1 %878, %881
  br i1 %882, label %894, label %883

883:                                              ; preds = %865
  %884 = load %"class.blink::RasterInvalidator"*, %"class.blink::RasterInvalidator"** %418, align 8
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %430, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %431) #5
  %885 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %432, align 8
  %886 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %885, i64 0, i32 1
  %887 = bitcast void ()** %886 to void (%"class.base::internal::BindStateBase"*, %"class.blink::IntRect"*)**
  %888 = load void (%"class.base::internal::BindStateBase"*, %"class.blink::IntRect"*)*, void (%"class.base::internal::BindStateBase"*, %"class.blink::IntRect"*)** %887, align 8
  call void %888(%"class.base::internal::BindStateBase"* %885, %"class.blink::IntRect"* nonnull dereferenceable(16) %415) #5
  %889 = getelementptr inbounds %"class.blink::RasterInvalidator", %"class.blink::RasterInvalidator"* %884, i64 0, i32 3, i32 0, i32 0, i32 0
  %890 = load %"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo"*, %"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo"** %889, align 8
  %891 = icmp eq %"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo"* %890, null
  br i1 %891, label %893, label %892

892:                                              ; preds = %883
  call void @_ZN5blink17RasterInvalidator23TrackRasterInvalidationERKNS_7IntRectERKNS_17DisplayItemClientENS_23PaintInvalidationReasonENS0_16ClientIsOldOrNewE(%"class.blink::RasterInvalidator"* %884, %"class.blink::IntRect"* nonnull dereferenceable(16) %415, %"class.blink::DisplayItemClient"* dereferenceable(16) %604, i8 zeroext 1, i32 1) #5
  br label %893

893:                                              ; preds = %892, %883
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %433) #5
  br label %894

894:                                              ; preds = %893, %865
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %416) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %414) #5
  %895 = load i64, i64* %756, align 4
  %896 = load i64, i64* %830, align 4
  %897 = load i64, i64* %835, align 4
  %898 = lshr i64 %895, 32
  br label %899

899:                                              ; preds = %894, %852
  %900 = phi i64 [ %759, %852 ], [ %898, %894 ]
  %901 = phi i64 [ %836, %852 ], [ %897, %894 ]
  %902 = phi i64 [ %831, %852 ], [ %896, %894 ]
  %903 = phi i64 [ %757, %852 ], [ %895, %894 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %434) #5
  %904 = lshr i64 %902, 32
  %905 = trunc i64 %904 to i32
  %906 = lshr i64 %901, 32
  %907 = trunc i64 %906 to i32
  %908 = sub nsw i32 %907, %905
  %909 = icmp sgt i32 %908, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %434, i8 -86, i64 16, i1 false) #5
  br i1 %909, label %910, label %916

910:                                              ; preds = %899
  %911 = add nuw nsw i64 %904, %900
  %912 = and i64 %901, 4294967295
  %913 = zext i32 %908 to i64
  %914 = shl nuw i64 %913, 32
  %915 = or i64 %914, %912
  br label %925

916:                                              ; preds = %899
  %917 = icmp slt i32 %908, 0
  br i1 %917, label %918, label %925

918:                                              ; preds = %916
  %919 = add nuw nsw i64 %906, %900
  %920 = sub nsw i32 0, %908
  %921 = and i64 %902, 4294967295
  %922 = zext i32 %920 to i64
  %923 = shl nuw i64 %922, 32
  %924 = or i64 %923, %921
  br label %925

925:                                              ; preds = %918, %916, %910
  %926 = phi i64 [ %903, %910 ], [ %903, %918 ], [ 0, %916 ]
  %927 = phi i64 [ %911, %910 ], [ %919, %918 ], [ 0, %916 ]
  %928 = phi i64 [ %915, %910 ], [ %924, %918 ], [ 0, %916 ]
  %929 = shl i64 %927, 32
  %930 = and i64 %926, 4294967295
  %931 = or i64 %929, %930
  store i64 %931, i64* %436, align 8
  store i64 %928, i64* %435, align 8
  %932 = trunc i64 %928 to i32
  %933 = icmp slt i32 %932, 1
  %934 = lshr i64 %928, 32
  %935 = trunc i64 %934 to i32
  %936 = icmp slt i32 %935, 1
  %937 = or i1 %933, %936
  br i1 %937, label %968, label %938

938:                                              ; preds = %925
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %437) #5
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %439) #5
  store i64 -6148914691236517206, i64* %440, align 8
  %939 = load %"class.blink::RasterInvalidator"*, %"class.blink::RasterInvalidator"** %418, align 8
  %940 = load %"class.blink::ChunkToLayerMapper"*, %"class.blink::ChunkToLayerMapper"** %419, align 8
  %941 = call { i64, i64 } @_ZNK5blink18ChunkToLayerMapper13MapVisualRectERKNS_7IntRectE(%"class.blink::ChunkToLayerMapper"* %940, %"class.blink::IntRect"* nonnull dereferenceable(16) %410) #5
  %942 = extractvalue { i64, i64 } %941, 0
  %943 = extractvalue { i64, i64 } %941, 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %441) #5
  %944 = getelementptr inbounds %"class.blink::RasterInvalidator", %"class.blink::RasterInvalidator"* %939, i64 0, i32 0, i32 1, i32 0
  %945 = load i32, i32* %944, align 4
  %946 = getelementptr inbounds %"class.blink::RasterInvalidator", %"class.blink::RasterInvalidator"* %939, i64 0, i32 0, i32 1, i32 1
  %947 = load i32, i32* %946, align 4
  store i32 0, i32* %442, align 4
  store i32 0, i32* %443, align 4
  store i32 %945, i32* %444, align 4
  store i32 %947, i32* %445, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %446) #5
  store i64 %942, i64* %449, align 8
  store i64 %943, i64* %448, align 8
  call void @_ZN5blink7IntRect9IntersectERKS0_(%"class.blink::IntRect"* nonnull %447, %"class.blink::IntRect"* nonnull dereferenceable(16) %34) #5
  %948 = load i64, i64* %449, align 8
  %949 = load i64, i64* %448, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %446) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %441) #5
  store i64 %948, i64* %450, align 8
  store i64 %949, i64* %440, align 8
  %950 = trunc i64 %949 to i32
  %951 = icmp slt i32 %950, 1
  %952 = lshr i64 %949, 32
  %953 = trunc i64 %952 to i32
  %954 = icmp slt i32 %953, 1
  %955 = or i1 %951, %954
  br i1 %955, label %967, label %956

956:                                              ; preds = %938
  %957 = load %"class.blink::RasterInvalidator"*, %"class.blink::RasterInvalidator"** %418, align 8
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %451, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %431) #5
  %958 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %452, align 8
  %959 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %958, i64 0, i32 1
  %960 = bitcast void ()** %959 to void (%"class.base::internal::BindStateBase"*, %"class.blink::IntRect"*)**
  %961 = load void (%"class.base::internal::BindStateBase"*, %"class.blink::IntRect"*)*, void (%"class.base::internal::BindStateBase"*, %"class.blink::IntRect"*)** %960, align 8
  call void %961(%"class.base::internal::BindStateBase"* %958, %"class.blink::IntRect"* nonnull dereferenceable(16) %438) #5
  %962 = getelementptr inbounds %"class.blink::RasterInvalidator", %"class.blink::RasterInvalidator"* %957, i64 0, i32 3, i32 0, i32 0, i32 0
  %963 = load %"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo"*, %"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo"** %962, align 8
  %964 = icmp eq %"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo"* %963, null
  br i1 %964, label %966, label %965

965:                                              ; preds = %956
  call void @_ZN5blink17RasterInvalidator23TrackRasterInvalidationERKNS_7IntRectERKNS_17DisplayItemClientENS_23PaintInvalidationReasonENS0_16ClientIsOldOrNewE(%"class.blink::RasterInvalidator"* %957, %"class.blink::IntRect"* nonnull dereferenceable(16) %438, %"class.blink::DisplayItemClient"* dereferenceable(16) %604, i8 zeroext 1, i32 1) #5
  br label %966

966:                                              ; preds = %965, %956
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %453) #5
  br label %967

967:                                              ; preds = %966, %938
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %439) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %437) #5
  br label %968

968:                                              ; preds = %967, %925
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %434) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %411) #5
  br label %969

969:                                              ; preds = %623, %653, %684, %747, %796, %827, %968
  %970 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %602, i64 1
  %971 = icmp eq %"struct.WTF::KeyValuePair.139"* %970, %395
  br i1 %971, label %587, label %972

972:                                              ; preds = %969, %976
  %973 = phi %"struct.WTF::KeyValuePair.139"* [ %977, %976 ], [ %970, %969 ]
  %974 = bitcast %"struct.WTF::KeyValuePair.139"* %973 to i64*
  %975 = load i64, i64* %974, align 8
  switch i64 %975, label %979 [
    i64 -1, label %976
    i64 0, label %976
  ]

976:                                              ; preds = %972, %972
  %977 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %973, i64 1
  %978 = icmp eq %"struct.WTF::KeyValuePair.139"* %977, %395
  br i1 %978, label %587, label %972

979:                                              ; preds = %972
  %980 = icmp eq %"struct.WTF::KeyValuePair.139"* %973, %395
  br i1 %980, label %587, label %601
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"struct.WTF::KeyValuePair.139"* @_ZN3WTF7HashMapIPKN5blink17DisplayItemClientEZNS1_28DisplayItemRasterInvalidator8GenerateEvE21OldAndNewDisplayItemsNS_7PtrHashIS3_EENS_10HashTraitsIS4_EENS9_IS6_EENS_18PartitionAllocatorEE6insertIS4_S6_EENS_18HashTableAddResultINS_9HashTableIS4_NS_12KeyValuePairIS4_S6_EENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_SB_EESA_SC_EESI_EEOT_OT0_(%"class.WTF::HashMap.135"* nocapture, %"class.blink::DisplayItemClient"** nocapture readonly dereferenceable(8), %struct.OldAndNewDisplayItems* nocapture readonly dereferenceable(36)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashMap.135", %"class.WTF::HashMap.135"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::HashMap.135", %"class.WTF::HashMap.135"* %0, i64 0, i32 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.139"*, %"struct.WTF::KeyValuePair.139"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.139"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call fastcc %"struct.WTF::KeyValuePair.139"* @_ZN3WTF9HashTableIPKN5blink17DisplayItemClientENS_12KeyValuePairIS4_ZNS1_28DisplayItemRasterInvalidator8GenerateEvE21OldAndNewDisplayItemsEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.136"* %4, %"struct.WTF::KeyValuePair.139"* null) #5
  %10 = load %"struct.WTF::KeyValuePair.139"*, %"struct.WTF::KeyValuePair.139"** %5, align 8
  br label %11

11:                                               ; preds = %8, %3
  %12 = phi %"struct.WTF::KeyValuePair.139"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashMap.135", %"class.WTF::HashMap.135"* %0, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = bitcast %"class.blink::DisplayItemClient"** %1 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = shl i64 %18, 32
  %20 = xor i64 %19, -1
  %21 = add i64 %18, %20
  %22 = lshr i64 %21, 22
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 13
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 8
  %28 = xor i64 %27, %26
  %29 = mul i64 %28, 9
  %30 = lshr i64 %29, 15
  %31 = xor i64 %30, %29
  %32 = shl i64 %31, 27
  %33 = xor i64 %32, -1
  %34 = add i64 %31, %33
  %35 = lshr i64 %34, 31
  %36 = xor i64 %35, %34
  %37 = trunc i64 %36 to i32
  %38 = and i32 %15, %37
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %12, i64 %39
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %40, i64 0, i32 0
  %42 = load %"class.blink::DisplayItemClient"*, %"class.blink::DisplayItemClient"** %41, align 8
  %43 = icmp eq %"class.blink::DisplayItemClient"* %42, null
  %44 = inttoptr i64 %18 to %"class.blink::DisplayItemClient"*
  br i1 %43, label %88, label %45

45:                                               ; preds = %11
  %46 = xor i32 %37, -1
  %47 = lshr i32 %37, 23
  %48 = add i32 %47, %46
  %49 = shl i32 %48, 12
  %50 = xor i32 %49, %48
  %51 = lshr i32 %50, 7
  %52 = xor i32 %51, %50
  %53 = shl i32 %52, 2
  %54 = xor i32 %53, %52
  %55 = lshr i32 %54, 20
  %56 = xor i32 %55, %54
  %57 = or i32 %56, 1
  %58 = zext i32 %57 to i64
  br label %59

59:                                               ; preds = %66, %45
  %60 = phi %"class.blink::DisplayItemClient"* [ %42, %45 ], [ %75, %66 ]
  %61 = phi %"struct.WTF::KeyValuePair.139"* [ %40, %45 ], [ %73, %66 ]
  %62 = phi %"struct.WTF::KeyValuePair.139"* [ null, %45 ], [ %68, %66 ]
  %63 = phi i64 [ %39, %45 ], [ %72, %66 ]
  %64 = phi i64 [ 0, %45 ], [ %70, %66 ]
  %65 = icmp eq %"class.blink::DisplayItemClient"* %60, %44
  br i1 %65, label %106, label %66

66:                                               ; preds = %59
  %67 = icmp eq %"class.blink::DisplayItemClient"* %60, inttoptr (i64 -1 to %"class.blink::DisplayItemClient"*)
  %68 = select i1 %67, %"struct.WTF::KeyValuePair.139"* %61, %"struct.WTF::KeyValuePair.139"* %62
  %69 = icmp eq i64 %64, 0
  %70 = select i1 %69, i64 %58, i64 %64
  %71 = add i64 %70, %63
  %72 = and i64 %71, %16
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %12, i64 %72
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %73, i64 0, i32 0
  %75 = load %"class.blink::DisplayItemClient"*, %"class.blink::DisplayItemClient"** %74, align 8
  %76 = icmp eq %"class.blink::DisplayItemClient"* %75, null
  br i1 %76, label %77, label %59

77:                                               ; preds = %66
  %78 = icmp eq %"struct.WTF::KeyValuePair.139"* %68, null
  br i1 %78, label %88, label %79

79:                                               ; preds = %77
  %80 = bitcast %"struct.WTF::KeyValuePair.139"* %68 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 0, i64 44, i1 false) #5
  %81 = getelementptr inbounds %"class.WTF::HashMap.135", %"class.WTF::HashMap.135"* %0, i64 0, i32 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  %87 = load i64, i64* %17, align 8
  br label %88

88:                                               ; preds = %79, %77, %11
  %89 = phi i64 [ %87, %79 ], [ %18, %77 ], [ %18, %11 ]
  %90 = phi %"struct.WTF::KeyValuePair.139"* [ %68, %79 ], [ %73, %77 ], [ %40, %11 ]
  %91 = bitcast %"struct.WTF::KeyValuePair.139"* %90 to i64*
  store i64 %89, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %90, i64 0, i32 1
  %93 = bitcast %struct.OldAndNewDisplayItems* %92 to i8*
  %94 = bitcast %struct.OldAndNewDisplayItems* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* align 4 %94, i64 33, i1 false) #5
  %95 = getelementptr inbounds %"class.WTF::HashMap.135", %"class.WTF::HashMap.135"* %0, i64 0, i32 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = add i32 %96, 1
  store i32 %97, i32* %95, align 4
  %98 = getelementptr inbounds %"class.WTF::HashMap.135", %"class.WTF::HashMap.135"* %0, i64 0, i32 0, i32 3
  %99 = load i32, i32* %98, align 8
  %100 = add i32 %99, %97
  %101 = shl i32 %100, 1
  %102 = load i32, i32* %13, align 8
  %103 = icmp ult i32 %101, %102
  br i1 %103, label %106, label %104

104:                                              ; preds = %88
  %105 = tail call fastcc %"struct.WTF::KeyValuePair.139"* @_ZN3WTF9HashTableIPKN5blink17DisplayItemClientENS_12KeyValuePairIS4_ZNS1_28DisplayItemRasterInvalidator8GenerateEvE21OldAndNewDisplayItemsEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.136"* %4, %"struct.WTF::KeyValuePair.139"* %90) #5
  br label %106

106:                                              ; preds = %59, %88, %104
  %107 = phi %"struct.WTF::KeyValuePair.139"* [ %90, %88 ], [ %105, %104 ], [ %61, %59 ]
  ret %"struct.WTF::KeyValuePair.139"* %107
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink7IntRect5UniteERKS0_(%"class.blink::IntRect"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.112"*, i8 } @_ZN3WTF9HashTableIPKN5blink17DisplayItemClientENS_12KeyValuePairIS4_NS_6VectorINS1_15DisplayItemList15IteratorWrapperIPKNS7_8ItemSlotEKNS1_11DisplayItemEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSM_ISG_EEEESN_SF_E6insertINS_17HashMapTranslatorISP_SK_SF_EES4_SG_EENS_18HashTableAddResultISQ_SH_EEOT0_OT1_(%"class.WTF::HashTable.109"*, %"class.blink::DisplayItemClient"** dereferenceable(8), %"class.WTF::Vector.113"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.109", %"class.WTF::HashTable.109"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.112"*, %"struct.WTF::KeyValuePair.112"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.112"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.112"* @_ZN3WTF9HashTableIPKN5blink17DisplayItemClientENS_12KeyValuePairIS4_NS_6VectorINS1_15DisplayItemList15IteratorWrapperIPKNS7_8ItemSlotEKNS1_11DisplayItemEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSM_ISG_EEEESN_SF_E6ExpandEPSH_(%"class.WTF::HashTable.109"* %0, %"struct.WTF::KeyValuePair.112"* null)
  %9 = load %"struct.WTF::KeyValuePair.112"*, %"struct.WTF::KeyValuePair.112"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.112"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.109", %"class.WTF::HashTable.109"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::DisplayItemClient"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %39, i64 0, i32 0
  %41 = load %"class.blink::DisplayItemClient"*, %"class.blink::DisplayItemClient"** %40, align 8
  %42 = icmp eq %"class.blink::DisplayItemClient"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::DisplayItemClient"*
  br i1 %42, label %78, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::DisplayItemClient"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.112"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.112"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::DisplayItemClient"* %59, %43
  br i1 %64, label %122, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::DisplayItemClient"* %59, inttoptr (i64 -1 to %"class.blink::DisplayItemClient"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.112"* %60, %"struct.WTF::KeyValuePair.112"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %72, i64 0, i32 0
  %74 = load %"class.blink::DisplayItemClient"*, %"class.blink::DisplayItemClient"** %73, align 8
  %75 = icmp eq %"class.blink::DisplayItemClient"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.112"* %67, null
  br i1 %77, label %78, label %81

78:                                               ; preds = %10, %76
  %79 = phi %"struct.WTF::KeyValuePair.112"* [ %72, %76 ], [ %39, %10 ]
  %80 = bitcast %"struct.WTF::KeyValuePair.112"* %79 to i64*
  br label %94

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %67, i64 0, i32 1
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %67, i64 0, i32 1, i32 0, i32 0, i32 1
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %67, i64 0, i32 1, i32 0, i32 0, i32 2
  %85 = bitcast %"class.WTF::Vector.113"* %82 to i64*
  %86 = bitcast %"struct.WTF::KeyValuePair.112"* %67 to i64*
  store i64 0, i64* %86, align 8
  store atomic i64 0, i64* %85 monotonic, align 8
  store i32 0, i32* %83, align 4
  store i32 0, i32* %84, align 4
  %87 = getelementptr inbounds %"class.WTF::HashTable.109", %"class.WTF::HashTable.109"* %0, i64 0, i32 3
  %88 = load i32, i32* %87, align 8
  %89 = add i32 %88, 2147483647
  %90 = and i32 %89, 2147483647
  %91 = and i32 %88, -2147483648
  %92 = or i32 %90, %91
  store i32 %92, i32* %87, align 8
  %93 = load i64, i64* %16, align 8
  br label %94

94:                                               ; preds = %78, %81
  %95 = phi i64* [ %80, %78 ], [ %86, %81 ]
  %96 = phi i64 [ %17, %78 ], [ %93, %81 ]
  %97 = phi %"struct.WTF::KeyValuePair.112"* [ %79, %78 ], [ %67, %81 ]
  store i64 %96, i64* %95, align 8
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %97, i64 0, i32 1
  %99 = bitcast %"class.WTF::Vector.113"* %2 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.WTF::Vector.113"* %98 to i64*
  %102 = load i64, i64* %101, align 8
  store atomic i64 %102, i64* %99 monotonic, align 8
  store atomic i64 %100, i64* %101 monotonic, align 8
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %97, i64 0, i32 1, i32 0, i32 0, i32 1
  %104 = getelementptr inbounds %"class.WTF::Vector.113", %"class.WTF::Vector.113"* %2, i64 0, i32 0, i32 0, i32 1
  %105 = load i32, i32* %103, align 4
  %106 = load i32, i32* %104, align 4
  store i32 %106, i32* %103, align 4
  store i32 %105, i32* %104, align 4
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %97, i64 0, i32 1, i32 0, i32 0, i32 2
  %108 = getelementptr inbounds %"class.WTF::Vector.113", %"class.WTF::Vector.113"* %2, i64 0, i32 0, i32 0, i32 2
  %109 = load i32, i32* %107, align 4
  %110 = load i32, i32* %108, align 4
  store i32 %110, i32* %107, align 4
  store i32 %109, i32* %108, align 4
  %111 = getelementptr inbounds %"class.WTF::HashTable.109", %"class.WTF::HashTable.109"* %0, i64 0, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = add i32 %112, 1
  store i32 %113, i32* %111, align 4
  %114 = getelementptr inbounds %"class.WTF::HashTable.109", %"class.WTF::HashTable.109"* %0, i64 0, i32 3
  %115 = load i32, i32* %114, align 8
  %116 = add i32 %115, %113
  %117 = shl i32 %116, 1
  %118 = load i32, i32* %12, align 8
  %119 = icmp ult i32 %117, %118
  br i1 %119, label %122, label %120

120:                                              ; preds = %94
  %121 = tail call %"struct.WTF::KeyValuePair.112"* @_ZN3WTF9HashTableIPKN5blink17DisplayItemClientENS_12KeyValuePairIS4_NS_6VectorINS1_15DisplayItemList15IteratorWrapperIPKNS7_8ItemSlotEKNS1_11DisplayItemEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSM_ISG_EEEESN_SF_E6ExpandEPSH_(%"class.WTF::HashTable.109"* %0, %"struct.WTF::KeyValuePair.112"* %97)
  br label %122

122:                                              ; preds = %58, %94, %120
  %123 = phi i8 [ 1, %94 ], [ 1, %120 ], [ 0, %58 ]
  %124 = phi %"struct.WTF::KeyValuePair.112"* [ %97, %94 ], [ %121, %120 ], [ %60, %58 ]
  %125 = insertvalue { %"struct.WTF::KeyValuePair.112"*, i8 } undef, %"struct.WTF::KeyValuePair.112"* %124, 0
  %126 = insertvalue { %"struct.WTF::KeyValuePair.112"*, i8 } %125, i8 %123, 1
  ret { %"struct.WTF::KeyValuePair.112"*, i8 } %126
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.112"* @_ZN3WTF9HashTableIPKN5blink17DisplayItemClientENS_12KeyValuePairIS4_NS_6VectorINS1_15DisplayItemList15IteratorWrapperIPKNS7_8ItemSlotEKNS1_11DisplayItemEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSM_ISG_EEEESN_SF_E6ExpandEPSH_(%"class.WTF::HashTable.109"*, %"struct.WTF::KeyValuePair.112"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.109", %"class.WTF::HashTable.109"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.109", %"class.WTF::HashTable.109"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #5
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #5
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %22, i8* %23) #5
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #5
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #5
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #5
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([250 x i8], [250 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink17DisplayItemClientENS_6VectorINS2_15DisplayItemList15IteratorWrapperIPKNS7_8ItemSlotEKNS2_11DisplayItemEEELj0ENS_18PartitionAllocatorEEEEEEEPKcv, i64 0, i64 0)) #5
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.112"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %72, label %38

38:                                               ; preds = %31
  %39 = and i64 %33, 1
  %40 = icmp eq i32 %32, 1
  br i1 %40, label %62, label %41

41:                                               ; preds = %38
  %42 = sub nsw i64 %33, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %59, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %60, %43 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %36, i64 %44
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %36, i64 %44, i32 1
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %36, i64 %44, i32 1, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %36, i64 %44, i32 1, i32 0, i32 0, i32 2
  %50 = bitcast %"class.WTF::Vector.113"* %47 to i64*
  %51 = bitcast %"struct.WTF::KeyValuePair.112"* %46 to i64*
  store i64 0, i64* %51, align 8
  store atomic i64 0, i64* %50 monotonic, align 8
  store i32 0, i32* %48, align 4
  store i32 0, i32* %49, align 4
  %52 = or i64 %44, 1
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %36, i64 %52
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %36, i64 %52, i32 1
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %36, i64 %52, i32 1, i32 0, i32 0, i32 1
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %36, i64 %52, i32 1, i32 0, i32 0, i32 2
  %57 = bitcast %"class.WTF::Vector.113"* %54 to i64*
  %58 = bitcast %"struct.WTF::KeyValuePair.112"* %53 to i64*
  store i64 0, i64* %58, align 8
  store atomic i64 0, i64* %57 monotonic, align 8
  store i32 0, i32* %55, align 4
  store i32 0, i32* %56, align 4
  %59 = add nuw nsw i64 %44, 2
  %60 = add i64 %45, -2
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %43

62:                                               ; preds = %43, %38
  %63 = phi i64 [ 0, %38 ], [ %59, %43 ]
  %64 = icmp eq i64 %39, 0
  br i1 %64, label %72, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %36, i64 %63
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %36, i64 %63, i32 1
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %36, i64 %63, i32 1, i32 0, i32 0, i32 1
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %36, i64 %63, i32 1, i32 0, i32 0, i32 2
  %70 = bitcast %"class.WTF::Vector.113"* %67 to i64*
  %71 = bitcast %"struct.WTF::KeyValuePair.112"* %66 to i64*
  store i64 0, i64* %71, align 8
  store atomic i64 0, i64* %70 monotonic, align 8
  store i32 0, i32* %68, align 4
  store i32 0, i32* %69, align 4
  br label %72

72:                                               ; preds = %65, %62, %31
  %73 = call %"struct.WTF::KeyValuePair.112"* @_ZN3WTF9HashTableIPKN5blink17DisplayItemClientENS_12KeyValuePairIS4_NS_6VectorINS1_15DisplayItemList15IteratorWrapperIPKNS7_8ItemSlotEKNS1_11DisplayItemEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSM_ISG_EEEESN_SF_E8RehashToEPSH_jSR_(%"class.WTF::HashTable.109"* %0, %"struct.WTF::KeyValuePair.112"* %36, i32 %32, %"struct.WTF::KeyValuePair.112"* %1) #5
  ret %"struct.WTF::KeyValuePair.112"* %73
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.112"* @_ZN3WTF9HashTableIPKN5blink17DisplayItemClientENS_12KeyValuePairIS4_NS_6VectorINS1_15DisplayItemList15IteratorWrapperIPKNS7_8ItemSlotEKNS1_11DisplayItemEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSM_ISG_EEEESN_SF_E8RehashToEPSH_jSR_(%"class.WTF::HashTable.109"*, %"struct.WTF::KeyValuePair.112"*, i32, %"struct.WTF::KeyValuePair.112"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.109", align 8
  %6 = bitcast %"class.WTF::HashTable.109"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #5
  %7 = getelementptr inbounds %"class.WTF::HashTable.109", %"class.WTF::HashTable.109"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.109", %"class.WTF::HashTable.109"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.109", %"class.WTF::HashTable.109"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.109", %"class.WTF::HashTable.109"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.109"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.112"* %1, %"struct.WTF::KeyValuePair.112"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.109", %"class.WTF::HashTable.109"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.109", %"class.WTF::HashTable.109"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.112"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.109"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.109"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.112"*, %"struct.WTF::KeyValuePair.112"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.112"* %22 to i64
  br label %66

24:                                               ; preds = %113
  %25 = bitcast %"class.WTF::HashTable.109"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.109"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %114, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.112"* [ null, %16 ], [ %117, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %115, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.112"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %62, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %60, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %57, %39
  %42 = phi i64 [ 0, %39 ], [ %58, %57 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %35, i64 %42, i32 0
  %44 = load %"class.blink::DisplayItemClient"*, %"class.blink::DisplayItemClient"** %43, align 8
  %45 = icmp eq %"class.blink::DisplayItemClient"* %44, inttoptr (i64 -1 to %"class.blink::DisplayItemClient"*)
  br i1 %45, label %57, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %35, i64 %42, i32 1, i32 0, i32 0, i32 0
  %48 = load %"class.blink::DisplayItemList::IteratorWrapper"*, %"class.blink::DisplayItemList::IteratorWrapper"** %47, align 8
  %49 = icmp eq %"class.blink::DisplayItemList::IteratorWrapper"* %48, null
  %50 = bitcast %"class.blink::DisplayItemList::IteratorWrapper"* %48 to i8*
  br i1 %49, label %57, label %51, !prof !3

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %35, i64 %42, i32 1, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %56, label %55, !prof !2

55:                                               ; preds = %51
  store i32 0, i32* %52, align 4
  br label %56

56:                                               ; preds = %55, %51
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %50) #5
  store %"class.blink::DisplayItemList::IteratorWrapper"* null, %"class.blink::DisplayItemList::IteratorWrapper"** %47, align 8
  br label %57

57:                                               ; preds = %56, %46, %41
  %58 = add nuw nsw i64 %42, 1
  %59 = icmp eq i64 %58, %40
  br i1 %59, label %60, label %41

60:                                               ; preds = %57, %37
  %61 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %61) #5
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %62

62:                                               ; preds = %28, %60
  %63 = getelementptr inbounds %"class.WTF::HashTable.109", %"class.WTF::HashTable.109"* %0, i64 0, i32 3
  %64 = load i32, i32* %63, align 8
  %65 = and i32 %64, -2147483648
  store i32 %65, i32* %63, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #5
  ret %"struct.WTF::KeyValuePair.112"* %33

66:                                               ; preds = %21, %113
  %67 = phi i64 [ %114, %113 ], [ %23, %21 ]
  %68 = phi i32 [ %115, %113 ], [ %13, %21 ]
  %69 = phi %"struct.WTF::KeyValuePair.112"* [ %116, %113 ], [ %22, %21 ]
  %70 = phi %"struct.WTF::KeyValuePair.112"* [ %117, %113 ], [ null, %21 ]
  %71 = phi i32 [ %118, %113 ], [ 0, %21 ]
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %69, i64 %72
  %74 = bitcast %"struct.WTF::KeyValuePair.112"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  switch i64 %75, label %76 [
    i64 -1, label %113
    i64 0, label %113
  ]

76:                                               ; preds = %66
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %73, i64 0, i32 0
  %78 = call { %"struct.WTF::KeyValuePair.112"*, i8 } @_ZN3WTF9HashTableIPKN5blink17DisplayItemClientENS_12KeyValuePairIS4_NS_6VectorINS1_15DisplayItemList15IteratorWrapperIPKNS7_8ItemSlotEKNS1_11DisplayItemEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSM_ISG_EEEESN_SF_E16LookupForWritingERKS4_(%"class.WTF::HashTable.109"* nonnull %5, %"class.blink::DisplayItemClient"** dereferenceable(8) %77) #5
  %79 = extractvalue { %"struct.WTF::KeyValuePair.112"*, i8 } %78, 0
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %79, i64 0, i32 1, i32 0, i32 0, i32 0
  %81 = load %"class.blink::DisplayItemList::IteratorWrapper"*, %"class.blink::DisplayItemList::IteratorWrapper"** %80, align 8
  %82 = icmp eq %"class.blink::DisplayItemList::IteratorWrapper"* %81, null
  %83 = bitcast %"class.blink::DisplayItemList::IteratorWrapper"* %81 to i8*
  br i1 %82, label %90, label %84, !prof !3

84:                                               ; preds = %76
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %79, i64 0, i32 1, i32 0, i32 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %89, label %88, !prof !2

88:                                               ; preds = %84
  store i32 0, i32* %85, align 4
  br label %89

89:                                               ; preds = %88, %84
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %83) #5
  store %"class.blink::DisplayItemList::IteratorWrapper"* null, %"class.blink::DisplayItemList::IteratorWrapper"** %80, align 8
  br label %90

90:                                               ; preds = %76, %89
  %91 = load i64, i64* %74, align 8
  %92 = bitcast %"struct.WTF::KeyValuePair.112"* %79 to i64*
  store i64 %91, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %79, i64 0, i32 1
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %69, i64 %72, i32 1
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %79, i64 0, i32 1, i32 0, i32 0, i32 1
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %79, i64 0, i32 1, i32 0, i32 0, i32 2
  %97 = bitcast %"class.WTF::Vector.113"* %94 to i64*
  %98 = bitcast %"class.WTF::Vector.113"* %93 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 16, i1 false) #5
  %99 = load i64, i64* %97, align 8
  %100 = bitcast %"class.WTF::Vector.113"* %93 to i64*
  store atomic i64 0, i64* %97 monotonic, align 8
  store atomic i64 %99, i64* %100 monotonic, align 8
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %69, i64 %72, i32 1, i32 0, i32 0, i32 1
  %102 = load i32, i32* %95, align 4
  %103 = load i32, i32* %101, align 4
  store i32 %103, i32* %95, align 4
  store i32 %102, i32* %101, align 4
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %69, i64 %72, i32 1, i32 0, i32 0, i32 2
  %105 = load i32, i32* %96, align 4
  %106 = load i32, i32* %104, align 4
  store i32 %106, i32* %96, align 4
  store i32 %105, i32* %104, align 4
  %107 = load %"struct.WTF::KeyValuePair.112"*, %"struct.WTF::KeyValuePair.112"** %15, align 8
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %107, i64 %72
  %109 = icmp eq %"struct.WTF::KeyValuePair.112"* %108, %3
  %110 = select i1 %109, %"struct.WTF::KeyValuePair.112"* %79, %"struct.WTF::KeyValuePair.112"* %70
  %111 = load i32, i32* %12, align 8
  %112 = ptrtoint %"struct.WTF::KeyValuePair.112"* %107 to i64
  br label %113

113:                                              ; preds = %66, %66, %90
  %114 = phi i64 [ %67, %66 ], [ %112, %90 ], [ %67, %66 ]
  %115 = phi i32 [ %68, %66 ], [ %111, %90 ], [ %68, %66 ]
  %116 = phi %"struct.WTF::KeyValuePair.112"* [ %69, %66 ], [ %107, %90 ], [ %69, %66 ]
  %117 = phi %"struct.WTF::KeyValuePair.112"* [ %70, %66 ], [ %110, %90 ], [ %70, %66 ]
  %118 = add i32 %71, 1
  %119 = icmp eq i32 %118, %115
  br i1 %119, label %24, label %66
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.112"*, i8 } @_ZN3WTF9HashTableIPKN5blink17DisplayItemClientENS_12KeyValuePairIS4_NS_6VectorINS1_15DisplayItemList15IteratorWrapperIPKNS7_8ItemSlotEKNS1_11DisplayItemEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSM_ISG_EEEESN_SF_E16LookupForWritingERKS4_(%"class.WTF::HashTable.109"*, %"class.blink::DisplayItemClient"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.109", %"class.WTF::HashTable.109"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.112"*, %"struct.WTF::KeyValuePair.112"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.109", %"class.WTF::HashTable.109"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::DisplayItemClient"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.112"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %32, i64 0, i32 0
  %35 = load %"class.blink::DisplayItemClient"*, %"class.blink::DisplayItemClient"** %34, align 8
  %36 = icmp eq %"class.blink::DisplayItemClient"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::DisplayItemClient"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.112"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.112"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.112"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.112"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.112"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.blink::DisplayItemClient"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.blink::DisplayItemClient"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.blink::DisplayItemClient"* %63, inttoptr (i64 -1 to %"class.blink::DisplayItemClient"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.112"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %75, i64 0, i32 0
  %78 = load %"class.blink::DisplayItemClient"*, %"class.blink::DisplayItemClient"** %77, align 8
  %79 = icmp eq %"class.blink::DisplayItemClient"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.112"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.112"*, i8 } undef, %"struct.WTF::KeyValuePair.112"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.112"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.112"*, i8 } %85
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink15DisplayItemList15IteratorWrapperIPKNS2_8ItemSlotEKNS1_11DisplayItemEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS9_EEvOT_(%"class.WTF::Vector.113"*, %"class.blink::DisplayItemList::IteratorWrapper"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.113", %"class.WTF::Vector.113"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.113", %"class.WTF::Vector.113"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::DisplayItemList::IteratorWrapper"*, %"class.blink::DisplayItemList::IteratorWrapper"** %6, align 8
  %8 = icmp ugt %"class.blink::DisplayItemList::IteratorWrapper"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::DisplayItemList::IteratorWrapper", %"class.blink::DisplayItemList::IteratorWrapper"* %7, i64 %10
  %12 = icmp ugt %"class.blink::DisplayItemList::IteratorWrapper"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.113", %"class.WTF::Vector.113"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::DisplayItemList::IteratorWrapper"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15DisplayItemList15IteratorWrapperIPKNS3_8ItemSlotEKNS2_11DisplayItemEEEEEmm(i64 %26) #5
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15DisplayItemList15IteratorWrapperIPKNS2_8ItemSlotEKNS1_11DisplayItemEEEEEPKcv, i64 0, i64 0)) #5
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.113"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::DisplayItemList::IteratorWrapper"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::DisplayItemList::IteratorWrapper"*, %"class.blink::DisplayItemList::IteratorWrapper"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::DisplayItemList::IteratorWrapper"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::DisplayItemList::IteratorWrapper"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #5
  %47 = bitcast %"class.WTF::Vector.113"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #5
  %51 = bitcast %"class.WTF::Vector.113"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::DisplayItemList::IteratorWrapper"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::DisplayItemList::IteratorWrapper"* %1 to i64
  %56 = ptrtoint %"class.blink::DisplayItemList::IteratorWrapper"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.113", %"class.WTF::Vector.113"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::DisplayItemList::IteratorWrapper"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15DisplayItemList15IteratorWrapperIPKNS3_8ItemSlotEKNS2_11DisplayItemEEEEEmm(i64 %71) #5
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15DisplayItemList15IteratorWrapperIPKNS2_8ItemSlotEKNS1_11DisplayItemEEEEEPKcv, i64 0, i64 0)) #5
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.113"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::DisplayItemList::IteratorWrapper"*, %"class.blink::DisplayItemList::IteratorWrapper"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::DisplayItemList::IteratorWrapper"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::DisplayItemList::IteratorWrapper"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #5
  %87 = bitcast %"class.WTF::Vector.113"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #5
  %91 = bitcast %"class.WTF::Vector.113"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::DisplayItemList::IteratorWrapper"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::DisplayItemList::IteratorWrapper"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::DisplayItemList::IteratorWrapper", %"class.blink::DisplayItemList::IteratorWrapper"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::DisplayItemList::IteratorWrapper"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::DisplayItemList::IteratorWrapper"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::DisplayItemList::IteratorWrapper", %"class.blink::DisplayItemList::IteratorWrapper"* %100, i64 %103
  %105 = bitcast %"class.blink::DisplayItemList::IteratorWrapper"* %101 to i64*
  %106 = bitcast %"class.blink::DisplayItemList::IteratorWrapper"* %104 to i64*
  %107 = load i64, i64* %105, align 8
  store i64 %107, i64* %106, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15DisplayItemList15IteratorWrapperIPKNS3_8ItemSlotEKNS2_11DisplayItemEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #5
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #5
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #5
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #5
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #5
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.112"*, %"struct.WTF::KeyValuePair.112"* } @_ZN3WTF9HashTableIPKN5blink17DisplayItemClientENS_12KeyValuePairIS4_NS_6VectorINS1_15DisplayItemList15IteratorWrapperIPKNS7_8ItemSlotEKNS1_11DisplayItemEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSM_ISG_EEEESN_SF_E4findERKS4_(%"class.WTF::HashTable.109"*, %"class.blink::DisplayItemClient"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.109", %"class.WTF::HashTable.109"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.112"*, %"struct.WTF::KeyValuePair.112"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.112"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.109", %"class.WTF::HashTable.109"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::DisplayItemClient"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %34, i64 0, i32 0
  %36 = load %"class.blink::DisplayItemClient"*, %"class.blink::DisplayItemClient"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::DisplayItemClient"*
  %38 = icmp eq %"class.blink::DisplayItemClient"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %8
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::DisplayItemClient"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::DisplayItemClient"* %54, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %63, i64 0, i32 0
  %65 = load %"class.blink::DisplayItemClient"*, %"class.blink::DisplayItemClient"** %64, align 8
  %66 = icmp eq %"class.blink::DisplayItemClient"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.112"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.112"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %53, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.112", %"struct.WTF::KeyValuePair.112"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair.112"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair.112"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair.112"*, %"struct.WTF::KeyValuePair.112"* } undef, %"struct.WTF::KeyValuePair.112"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair.112"*, %"struct.WTF::KeyValuePair.112"* } %79, %"struct.WTF::KeyValuePair.112"* %78, 1
  ret { %"struct.WTF::KeyValuePair.112"*, %"struct.WTF::KeyValuePair.112"* } %80
}

declare { i64, i64 } @_ZNK5blink18ChunkToLayerMapper13MapVisualRectERKNS_7IntRectE(%"class.blink::ChunkToLayerMapper"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

declare void @_ZN5blink7IntRect9IntersectERKS0_(%"class.blink::IntRect"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink17RasterInvalidator23TrackRasterInvalidationERKNS_7IntRectERKNS_17DisplayItemClientENS_23PaintInvalidationReasonENS0_16ClientIsOldOrNewE(%"class.blink::RasterInvalidator"*, %"class.blink::IntRect"* dereferenceable(16), %"class.blink::DisplayItemClient"* dereferenceable(16), i8 zeroext, i32) local_unnamed_addr #2

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7IntRect8ContainsERKS0_(%"class.blink::IntRect"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #5
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #5
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #5
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #5
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #5
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"struct.WTF::KeyValuePair.139"* @_ZN3WTF9HashTableIPKN5blink17DisplayItemClientENS_12KeyValuePairIS4_ZNS1_28DisplayItemRasterInvalidator8GenerateEvE21OldAndNewDisplayItemsEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.136"* nocapture, %"struct.WTF::KeyValuePair.139"* readnone) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.136", %"class.WTF::HashTable.136"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.136", %"class.WTF::HashTable.136"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #5
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #5
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %22, i8* %23) #5
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #5
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #5
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #5
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 48
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink17DisplayItemClientEZNS2_28DisplayItemRasterInvalidator8GenerateEvE21OldAndNewDisplayItemsEEEEPKcv, i64 0, i64 0)) #5
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.139"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %84, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 7
  %41 = icmp ult i64 %39, 7
  br i1 %41, label %73, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %70, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %71, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %36, i64 %45
  %48 = bitcast %"struct.WTF::KeyValuePair.139"* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 44, i1 false) #5
  %49 = or i64 %45, 1
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %36, i64 %49
  %51 = bitcast %"struct.WTF::KeyValuePair.139"* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 44, i1 false) #5
  %52 = or i64 %45, 2
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %36, i64 %52
  %54 = bitcast %"struct.WTF::KeyValuePair.139"* %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 0, i64 44, i1 false) #5
  %55 = or i64 %45, 3
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %36, i64 %55
  %57 = bitcast %"struct.WTF::KeyValuePair.139"* %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 0, i64 44, i1 false) #5
  %58 = or i64 %45, 4
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %36, i64 %58
  %60 = bitcast %"struct.WTF::KeyValuePair.139"* %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 44, i1 false) #5
  %61 = or i64 %45, 5
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %36, i64 %61
  %63 = bitcast %"struct.WTF::KeyValuePair.139"* %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 0, i64 44, i1 false) #5
  %64 = or i64 %45, 6
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %36, i64 %64
  %66 = bitcast %"struct.WTF::KeyValuePair.139"* %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 44, i1 false) #5
  %67 = or i64 %45, 7
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %36, i64 %67
  %69 = bitcast %"struct.WTF::KeyValuePair.139"* %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 44, i1 false) #5
  %70 = add nuw nsw i64 %45, 8
  %71 = add i64 %46, -8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %44

73:                                               ; preds = %44, %38
  %74 = phi i64 [ 0, %38 ], [ %70, %44 ]
  %75 = icmp eq i64 %40, 0
  br i1 %75, label %84, label %76

76:                                               ; preds = %73, %76
  %77 = phi i64 [ %81, %76 ], [ %74, %73 ]
  %78 = phi i64 [ %82, %76 ], [ %40, %73 ]
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %36, i64 %77
  %80 = bitcast %"struct.WTF::KeyValuePair.139"* %79 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 0, i64 44, i1 false) #5
  %81 = add nuw nsw i64 %77, 1
  %82 = add i64 %78, -1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %76, !llvm.loop !5

84:                                               ; preds = %73, %76, %31
  %85 = ptrtoint i8* %35 to i64
  %86 = load i32, i32* %6, align 8
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::HashTable.136", %"class.WTF::HashTable.136"* %0, i64 0, i32 0
  br i1 %87, label %89, label %92

89:                                               ; preds = %84
  %90 = bitcast %"class.WTF::HashTable.136"* %0 to i64*
  %91 = load i64, i64* %90, align 8
  br label %99

92:                                               ; preds = %84
  %93 = add i32 %32, -1
  %94 = zext i32 %93 to i64
  %95 = load %"struct.WTF::KeyValuePair.139"*, %"struct.WTF::KeyValuePair.139"** %88, align 8
  %96 = ptrtoint %"struct.WTF::KeyValuePair.139"* %95 to i64
  br label %106

97:                                               ; preds = %197
  %98 = bitcast %"class.WTF::HashTable.136"* %0 to i64*
  br label %99

99:                                               ; preds = %97, %89
  %100 = phi i64* [ %90, %89 ], [ %98, %97 ]
  %101 = phi i64 [ %91, %89 ], [ %198, %97 ]
  %102 = phi %"struct.WTF::KeyValuePair.139"* [ null, %89 ], [ %201, %97 ]
  store atomic i64 %85, i64* %100 monotonic, align 8
  store i32 %32, i32* %6, align 8
  %103 = icmp eq i64 %101, 0
  br i1 %103, label %204, label %104

104:                                              ; preds = %99
  %105 = inttoptr i64 %101 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %105) #5
  br label %204

106:                                              ; preds = %197, %92
  %107 = phi i64 [ %96, %92 ], [ %198, %197 ]
  %108 = phi i32 [ %86, %92 ], [ %199, %197 ]
  %109 = phi %"struct.WTF::KeyValuePair.139"* [ %95, %92 ], [ %200, %197 ]
  %110 = phi %"struct.WTF::KeyValuePair.139"* [ null, %92 ], [ %201, %197 ]
  %111 = phi i32 [ 0, %92 ], [ %202, %197 ]
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %109, i64 %112
  %114 = bitcast %"struct.WTF::KeyValuePair.139"* %113 to i64*
  %115 = load i64, i64* %114, align 8
  switch i64 %115, label %116 [
    i64 -1, label %197
    i64 0, label %197
  ]

116:                                              ; preds = %106
  %117 = shl i64 %115, 32
  %118 = xor i64 %117, -1
  %119 = add i64 %115, %118
  %120 = lshr i64 %119, 22
  %121 = xor i64 %120, %119
  %122 = shl i64 %121, 13
  %123 = xor i64 %122, -1
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 8
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, 9
  %128 = lshr i64 %127, 15
  %129 = xor i64 %128, %127
  %130 = shl i64 %129, 27
  %131 = xor i64 %130, -1
  %132 = add i64 %129, %131
  %133 = lshr i64 %132, 31
  %134 = xor i64 %133, %132
  %135 = trunc i64 %134 to i32
  %136 = and i32 %93, %135
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %36, i64 %137
  %139 = ptrtoint %"struct.WTF::KeyValuePair.139"* %138 to i64
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %138, i64 0, i32 0
  %141 = load %"class.blink::DisplayItemClient"*, %"class.blink::DisplayItemClient"** %140, align 8
  %142 = icmp eq %"class.blink::DisplayItemClient"* %141, null
  %143 = inttoptr i64 %115 to %"class.blink::DisplayItemClient"*
  br i1 %142, label %161, label %144

144:                                              ; preds = %116
  %145 = xor i32 %135, -1
  %146 = lshr i32 %135, 23
  %147 = add i32 %146, %145
  %148 = shl i32 %147, 12
  %149 = xor i32 %148, %147
  %150 = lshr i32 %149, 7
  %151 = xor i32 %150, %149
  %152 = shl i32 %151, 2
  %153 = xor i32 %152, %151
  %154 = lshr i32 %153, 20
  %155 = xor i32 %154, %153
  %156 = or i32 %155, 1
  %157 = zext i32 %156 to i64
  br label %167

158:                                              ; preds = %174
  %159 = ptrtoint %"struct.WTF::KeyValuePair.139"* %181 to i64
  %160 = inttoptr i64 %176 to %"struct.WTF::KeyValuePair.139"*
  br label %161

161:                                              ; preds = %158, %116
  %162 = phi i64 [ %159, %158 ], [ %139, %116 ]
  %163 = phi %"struct.WTF::KeyValuePair.139"* [ %160, %158 ], [ null, %116 ]
  %164 = icmp eq %"struct.WTF::KeyValuePair.139"* %163, null
  %165 = ptrtoint %"struct.WTF::KeyValuePair.139"* %163 to i64
  %166 = select i1 %164, i64 %162, i64 %165
  br label %186

167:                                              ; preds = %174, %144
  %168 = phi i64 [ 0, %144 ], [ %176, %174 ]
  %169 = phi %"class.blink::DisplayItemClient"* [ %141, %144 ], [ %184, %174 ]
  %170 = phi i64 [ %139, %144 ], [ %182, %174 ]
  %171 = phi i64 [ %137, %144 ], [ %180, %174 ]
  %172 = phi i64 [ 0, %144 ], [ %178, %174 ]
  %173 = icmp eq %"class.blink::DisplayItemClient"* %169, %143
  br i1 %173, label %186, label %174

174:                                              ; preds = %167
  %175 = icmp eq %"class.blink::DisplayItemClient"* %169, inttoptr (i64 -1 to %"class.blink::DisplayItemClient"*)
  %176 = select i1 %175, i64 %170, i64 %168
  %177 = icmp eq i64 %172, 0
  %178 = select i1 %177, i64 %157, i64 %172
  %179 = add i64 %178, %171
  %180 = and i64 %179, %94
  %181 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %36, i64 %180
  %182 = ptrtoint %"struct.WTF::KeyValuePair.139"* %181 to i64
  %183 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %181, i64 0, i32 0
  %184 = load %"class.blink::DisplayItemClient"*, %"class.blink::DisplayItemClient"** %183, align 8
  %185 = icmp eq %"class.blink::DisplayItemClient"* %184, null
  br i1 %185, label %158, label %167

186:                                              ; preds = %167, %161
  %187 = phi i64 [ %166, %161 ], [ %170, %167 ]
  %188 = inttoptr i64 %187 to %"struct.WTF::KeyValuePair.139"*
  %189 = inttoptr i64 %187 to i8*
  %190 = bitcast %"struct.WTF::KeyValuePair.139"* %113 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %189, i8* align 8 %190, i64 48, i1 false) #5
  %191 = load %"struct.WTF::KeyValuePair.139"*, %"struct.WTF::KeyValuePair.139"** %88, align 8
  %192 = getelementptr inbounds %"struct.WTF::KeyValuePair.139", %"struct.WTF::KeyValuePair.139"* %191, i64 %112
  %193 = icmp eq %"struct.WTF::KeyValuePair.139"* %192, %1
  %194 = select i1 %193, %"struct.WTF::KeyValuePair.139"* %188, %"struct.WTF::KeyValuePair.139"* %110
  %195 = load i32, i32* %6, align 8
  %196 = ptrtoint %"struct.WTF::KeyValuePair.139"* %191 to i64
  br label %197

197:                                              ; preds = %186, %106, %106
  %198 = phi i64 [ %107, %106 ], [ %196, %186 ], [ %107, %106 ]
  %199 = phi i32 [ %108, %106 ], [ %195, %186 ], [ %108, %106 ]
  %200 = phi %"struct.WTF::KeyValuePair.139"* [ %109, %106 ], [ %191, %186 ], [ %109, %106 ]
  %201 = phi %"struct.WTF::KeyValuePair.139"* [ %110, %106 ], [ %194, %186 ], [ %110, %106 ]
  %202 = add i32 %111, 1
  %203 = icmp eq i32 %202, %199
  br i1 %203, label %97, label %106

204:                                              ; preds = %99, %104
  %205 = getelementptr inbounds %"class.WTF::HashTable.136", %"class.WTF::HashTable.136"* %0, i64 0, i32 3
  %206 = load i32, i32* %205, align 8
  %207 = and i32 %206, -2147483648
  store i32 %207, i32* %205, align 8
  ret %"struct.WTF::KeyValuePair.139"* %102
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(1) i8* @_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.140"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.140", %"class.WTF::Vector.140"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #5
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #5
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #5
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #5
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  %23 = getelementptr inbounds %"class.WTF::Vector.140", %"class.WTF::Vector.140"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  ret i8* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
