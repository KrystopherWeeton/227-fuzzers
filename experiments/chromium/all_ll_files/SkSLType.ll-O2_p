; ModuleID = '../../third_party/skia/src/sksl/ir/SkSLType.cpp'
source_filename = "../../third_party/skia/src/sksl/ir/SkSLType.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.6", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.8" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.SkSL::Type::Field"* }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.SkSL::Type"* }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.17", %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.33", [4 x i8] }>
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19", %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { i64 }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { float }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.36"* }
%"class.std::__1::vector.36" = type opaque
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr", %"class.std::__1::vector.37", i8, %"class.std::__1::vector.45", %"class.std::__1::forward_list", %class.SkTHashMap, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::shared_ptr" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"class.std::__1::unique_ptr.39"*, %"class.std::__1::unique_ptr.39"*, %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::unique_ptr.39"* }
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"class.std::__1::unique_ptr.47"*, %"class.std::__1::unique_ptr.47"*, %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.std::__1::unique_ptr.47"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.58" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.SkSL::Expression" = type { %"class.SkSL::IRNode", %"class.SkSL::Type"* }

$_ZN4SkSL13ErrorReporter5errorEiPKc = comdat any

$_ZN4SkSL4TypeD2Ev = comdat any

$_ZN4SkSL4TypeD0Ev = comdat any

$_ZNK4SkSL4Type11descriptionEv = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZTVN4SkSL4TypeE = comdat any

@.str = private unnamed_addr constant [48 x i8] c"../../third_party/skia/src/sksl/ir/SkSLType.cpp\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"unsupported vector column count (%d)\00", align 1
@.str.2 = private unnamed_addr constant [37 x i8] c"unsupported matrix column count (%d)\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"unsupported row count (%d)\00", align 1
@.str.4 = private unnamed_addr constant [36 x i8] c"expected '(' to begin function call\00", align 1
@.str.5 = private unnamed_addr constant [45 x i8] c"expected '(' to begin constructor invocation\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"expected '\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c"', but found '\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"cannot construct '\00", align 1
@.str.10 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZTVN4SkSL4TypeE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::Type"*)* @_ZN4SkSL4TypeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Type"*)* @_ZN4SkSL4TypeD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Type"*)* @_ZNK4SkSL4Type11descriptionEv to i8*)] }, comdat, align 8
@.str.12 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"e\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"*, %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"struct.SkSL::StringFragment"*
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %"struct.SkSL::StringFragment"*
  %7 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 0, i32 1, i32 0
  %9 = bitcast i8** %8 to <2 x i64>*
  %10 = load <2 x i64>, <2 x i64>* %9, align 8
  store <2 x i64> %10, <2 x i64>* %5, align 16
  %11 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 0, i32 1, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 0, i32 1, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %6, i8* %12, i64 %14) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  br i1 %15, label %121, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 3
  %18 = load i32, i32* %17, align 8
  switch i32 %18, label %65 [
    i32 11, label %19
    i32 4, label %41
  ]

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 11
  br i1 %22, label %23, label %65

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 8
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 8
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %25, %27
  br i1 %28, label %29, label %121

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 6
  %31 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %30, align 8
  %32 = icmp eq %"class.SkSL::Type"* %31, null
  %33 = select i1 %32, %"class.SkSL::Type"* %0, %"class.SkSL::Type"* %31
  %34 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %35 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %34, align 8
  %36 = icmp eq %"class.SkSL::Type"* %35, null
  %37 = select i1 %36, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %35
  %38 = call { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"* %33, %"class.SkSL::Type"* dereferenceable(184) %37)
  %39 = extractvalue { i64, i8 } %38, 0
  %40 = extractvalue { i64, i8 } %38, 1
  br label %121

41:                                               ; preds = %16
  %42 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 8
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 8
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %47, label %121

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 9
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 9
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %49, %51
  br i1 %52, label %53, label %121

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 6
  %55 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %54, align 8
  %56 = icmp eq %"class.SkSL::Type"* %55, null
  %57 = select i1 %56, %"class.SkSL::Type"* %0, %"class.SkSL::Type"* %55
  %58 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %59 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %58, align 8
  %60 = icmp eq %"class.SkSL::Type"* %59, null
  %61 = select i1 %60, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %59
  %62 = call { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"* %57, %"class.SkSL::Type"* dereferenceable(184) %61)
  %63 = extractvalue { i64, i8 } %62, 0
  %64 = extractvalue { i64, i8 } %62, 1
  br label %121

65:                                               ; preds = %16, %19
  %66 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 4
  %67 = load i32, i32* %66, align 4
  %68 = add i32 %67, -1
  %69 = icmp ugt i32 %68, 1
  %70 = icmp ult i32 %67, 3
  br i1 %70, label %71, label %95

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 4
  %73 = load i32, i32* %72, align 4
  %74 = icmp ult i32 %73, 3
  br i1 %74, label %75, label %95

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 18
  %77 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %76, align 8
  %78 = icmp eq %"class.SkSL::Type"* %77, null
  %79 = or i1 %69, %78
  br i1 %79, label %80, label %121

80:                                               ; preds = %75
  %81 = icmp eq i32 %67, %73
  br i1 %81, label %82, label %121

82:                                               ; preds = %80
  %83 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 5
  %84 = load i32, i32* %83, align 8
  %85 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 5
  %86 = load i32, i32* %85, align 8
  %87 = icmp slt i32 %84, %86
  br i1 %87, label %91, label %88

88:                                               ; preds = %82
  %89 = sub nsw i32 %84, %86
  %90 = zext i32 %89 to i64
  br label %121

91:                                               ; preds = %82
  %92 = sub nsw i32 %86, %84
  %93 = zext i32 %92 to i64
  %94 = shl nuw i64 %93, 32
  br label %121

95:                                               ; preds = %71, %65
  %96 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7
  %97 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7, i32 0, i32 1
  %98 = bitcast %"class.SkSL::Type"*** %97 to i64*
  %99 = bitcast %"class.std::__1::vector"* %96 to i64*
  %100 = bitcast <2 x i64>* %3 to i8*
  br label %101

101:                                              ; preds = %108, %95
  %102 = phi i64 [ 0, %95 ], [ %118, %108 ]
  %103 = load i64, i64* %98, align 8
  %104 = load i64, i64* %99, align 8
  %105 = sub i64 %103, %104
  %106 = ashr exact i64 %105, 3
  %107 = icmp ult i64 %102, %106
  br i1 %107, label %108, label %121

108:                                              ; preds = %101
  %109 = inttoptr i64 %104 to %"class.SkSL::Type"**
  %110 = getelementptr inbounds %"class.SkSL::Type"*, %"class.SkSL::Type"** %109, i64 %102
  %111 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %110, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %100) #10
  %112 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %111, i64 0, i32 0, i32 1, i32 0
  %113 = bitcast i8** %112 to <2 x i64>*
  %114 = load <2 x i64>, <2 x i64>* %113, align 8
  store <2 x i64> %114, <2 x i64>* %3, align 16
  %115 = load i8*, i8** %11, align 8
  %116 = load i64, i64* %13, align 8
  %117 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %4, i8* %115, i64 %116) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %100) #10
  %118 = add nuw i64 %102, 1
  br i1 %117, label %119, label %101

119:                                              ; preds = %108
  %120 = and i64 %118, 4294967295
  br label %121

121:                                              ; preds = %101, %75, %119, %80, %41, %47, %23, %2, %91, %88, %53, %29
  %122 = phi i64 [ %39, %29 ], [ %63, %53 ], [ %90, %88 ], [ %94, %91 ], [ %120, %119 ], [ 0, %2 ], [ 0, %23 ], [ 0, %47 ], [ 0, %41 ], [ 0, %80 ], [ 0, %75 ], [ 0, %101 ]
  %123 = phi i8 [ %40, %29 ], [ %64, %53 ], [ 0, %88 ], [ 0, %91 ], [ 0, %119 ], [ 0, %2 ], [ 1, %23 ], [ 1, %47 ], [ 1, %41 ], [ 1, %80 ], [ 0, %75 ], [ 1, %101 ]
  %124 = insertvalue { i64, i8 } undef, i64 %122, 0
  %125 = insertvalue { i64, i8 } %124, i8 %123, 1
  ret { i64, i8 } %125
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"* readonly, %"class.SkSL::Context"* readonly dereferenceable(744), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %"struct.SkSL::StringFragment"*
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %"struct.SkSL::StringFragment"*
  %9 = alloca <2 x i64>, align 16
  %10 = bitcast <2 x i64>* %9 to %"struct.SkSL::StringFragment"*
  %11 = alloca <2 x i64>, align 16
  %12 = bitcast <2 x i64>* %11 to %"struct.SkSL::StringFragment"*
  %13 = alloca <2 x i64>, align 16
  %14 = bitcast <2 x i64>* %13 to %"struct.SkSL::StringFragment"*
  %15 = alloca <2 x i64>, align 16
  %16 = bitcast <2 x i64>* %15 to %"struct.SkSL::StringFragment"*
  %17 = alloca <2 x i64>, align 16
  %18 = bitcast <2 x i64>* %17 to %"struct.SkSL::StringFragment"*
  %19 = alloca <2 x i64>, align 16
  %20 = alloca <2 x i64>, align 16
  %21 = bitcast <2 x i64>* %20 to %"struct.SkSL::StringFragment"*
  %22 = icmp eq i32 %2, 1
  %23 = icmp eq i32 %3, 1
  %24 = and i1 %22, %23
  br i1 %24, label %300, label %25

25:                                               ; preds = %4
  %26 = bitcast <2 x i64>* %19 to %"struct.SkSL::StringFragment"*
  %27 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %27, align 8
  %29 = bitcast <2 x i64>* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #10
  %30 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 0, i32 1, i32 0
  %31 = bitcast i8** %30 to <2 x i64>*
  %32 = load <2 x i64>, <2 x i64>* %31, align 8
  store <2 x i64> %32, <2 x i64>* %19, align 16
  %33 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %28, i64 0, i32 0, i32 1, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %28, i64 0, i32 0, i32 1, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %26, i8* %34, i64 %36) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #10
  br i1 %37, label %49, label %38

38:                                               ; preds = %25
  %39 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 30, i32 0, i32 0, i32 0
  %40 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %39, align 8
  %41 = bitcast <2 x i64>* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #10
  %42 = bitcast i8** %30 to <2 x i64>*
  %43 = load <2 x i64>, <2 x i64>* %42, align 8
  store <2 x i64> %43, <2 x i64>* %15, align 16
  %44 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %40, i64 0, i32 0, i32 1, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %40, i64 0, i32 0, i32 1, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %16, i8* %45, i64 %47) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #10
  br i1 %48, label %49, label %97

49:                                               ; preds = %38, %25
  switch i32 %3, label %96 [
    i32 1, label %50
    i32 2, label %63
    i32 3, label %74
    i32 4, label %85
  ]

50:                                               ; preds = %49
  switch i32 %2, label %62 [
    i32 1, label %51
    i32 2, label %53
    i32 3, label %56
    i32 4, label %59
  ]

51:                                               ; preds = %50
  %52 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %27, align 8
  br label %300

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %55 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %54, align 8
  br label %300

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %58 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %57, align 8
  br label %300

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %61 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %60, align 8
  br label %300

62:                                               ; preds = %50
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 69, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 %2) #11
  unreachable

63:                                               ; preds = %49
  switch i32 %2, label %73 [
    i32 2, label %64
    i32 3, label %67
    i32 4, label %70
  ]

64:                                               ; preds = %63
  %65 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 32, i32 0, i32 0, i32 0
  %66 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %65, align 8
  br label %300

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 35, i32 0, i32 0, i32 0
  %69 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %68, align 8
  br label %300

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 38, i32 0, i32 0, i32 0
  %72 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %71, align 8
  br label %300

73:                                               ; preds = %63
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 76, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i64 0, i64 0), i32 %2) #11
  unreachable

74:                                               ; preds = %49
  switch i32 %2, label %84 [
    i32 2, label %75
    i32 3, label %78
    i32 4, label %81
  ]

75:                                               ; preds = %74
  %76 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 33, i32 0, i32 0, i32 0
  %77 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %76, align 8
  br label %300

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 36, i32 0, i32 0, i32 0
  %80 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %79, align 8
  br label %300

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 39, i32 0, i32 0, i32 0
  %83 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %82, align 8
  br label %300

84:                                               ; preds = %74
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 83, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i64 0, i64 0), i32 %2) #11
  unreachable

85:                                               ; preds = %49
  switch i32 %2, label %95 [
    i32 2, label %86
    i32 3, label %89
    i32 4, label %92
  ]

86:                                               ; preds = %85
  %87 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 34, i32 0, i32 0, i32 0
  %88 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %87, align 8
  br label %300

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 37, i32 0, i32 0, i32 0
  %91 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %90, align 8
  br label %300

92:                                               ; preds = %85
  %93 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 40, i32 0, i32 0, i32 0
  %94 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %93, align 8
  br label %300

95:                                               ; preds = %85
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 90, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i64 0, i64 0), i32 %2) #11
  unreachable

96:                                               ; preds = %49
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 92, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i32 %3) #11
  unreachable

97:                                               ; preds = %38
  %98 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %99 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %98, align 8
  %100 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %100) #10
  %101 = bitcast i8** %30 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8
  store <2 x i64> %102, <2 x i64>* %5, align 16
  %103 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %99, i64 0, i32 0, i32 1, i32 0
  %104 = load i8*, i8** %103, align 8
  %105 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %99, i64 0, i32 0, i32 1, i32 1
  %106 = load i64, i64* %105, align 8
  %107 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %6, i8* %104, i64 %106) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %100) #10
  br i1 %107, label %108, label %156

108:                                              ; preds = %97
  switch i32 %3, label %155 [
    i32 1, label %109
    i32 2, label %122
    i32 3, label %133
    i32 4, label %144
  ]

109:                                              ; preds = %108
  switch i32 %2, label %121 [
    i32 1, label %110
    i32 2, label %112
    i32 3, label %115
    i32 4, label %118
  ]

110:                                              ; preds = %109
  %111 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %98, align 8
  br label %300

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %114 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %113, align 8
  br label %300

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %117 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %116, align 8
  br label %300

118:                                              ; preds = %109
  %119 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 7, i32 0, i32 0, i32 0
  %120 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %119, align 8
  br label %300

121:                                              ; preds = %109
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 102, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 %2) #11
  unreachable

122:                                              ; preds = %108
  switch i32 %2, label %132 [
    i32 2, label %123
    i32 3, label %126
    i32 4, label %129
  ]

123:                                              ; preds = %122
  %124 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 41, i32 0, i32 0, i32 0
  %125 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %124, align 8
  br label %300

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 44, i32 0, i32 0, i32 0
  %128 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %127, align 8
  br label %300

129:                                              ; preds = %122
  %130 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 47, i32 0, i32 0, i32 0
  %131 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %130, align 8
  br label %300

132:                                              ; preds = %122
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 109, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i64 0, i64 0), i32 %2) #11
  unreachable

133:                                              ; preds = %108
  switch i32 %2, label %143 [
    i32 2, label %134
    i32 3, label %137
    i32 4, label %140
  ]

134:                                              ; preds = %133
  %135 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 42, i32 0, i32 0, i32 0
  %136 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %135, align 8
  br label %300

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 45, i32 0, i32 0, i32 0
  %139 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %138, align 8
  br label %300

140:                                              ; preds = %133
  %141 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 48, i32 0, i32 0, i32 0
  %142 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %141, align 8
  br label %300

143:                                              ; preds = %133
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 116, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i64 0, i64 0), i32 %2) #11
  unreachable

144:                                              ; preds = %108
  switch i32 %2, label %154 [
    i32 2, label %145
    i32 3, label %148
    i32 4, label %151
  ]

145:                                              ; preds = %144
  %146 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 43, i32 0, i32 0, i32 0
  %147 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %146, align 8
  br label %300

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 46, i32 0, i32 0, i32 0
  %150 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %149, align 8
  br label %300

151:                                              ; preds = %144
  %152 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 49, i32 0, i32 0, i32 0
  %153 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %152, align 8
  br label %300

154:                                              ; preds = %144
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 123, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i64 0, i64 0), i32 %2) #11
  unreachable

155:                                              ; preds = %108
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i32 %3) #11
  unreachable

156:                                              ; preds = %97
  %157 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %158 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %157, align 8
  %159 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %159) #10
  %160 = bitcast i8** %30 to <2 x i64>*
  %161 = load <2 x i64>, <2 x i64>* %160, align 8
  store <2 x i64> %161, <2 x i64>* %7, align 16
  %162 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %158, i64 0, i32 0, i32 1, i32 0
  %163 = load i8*, i8** %162, align 8
  %164 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %158, i64 0, i32 0, i32 1, i32 1
  %165 = load i64, i64* %164, align 8
  %166 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %8, i8* %163, i64 %165) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %159) #10
  br i1 %166, label %178, label %167

167:                                              ; preds = %156
  %168 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 31, i32 0, i32 0, i32 0
  %169 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %168, align 8
  %170 = bitcast <2 x i64>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %170) #10
  %171 = bitcast i8** %30 to <2 x i64>*
  %172 = load <2 x i64>, <2 x i64>* %171, align 8
  store <2 x i64> %172, <2 x i64>* %9, align 16
  %173 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %169, i64 0, i32 0, i32 1, i32 0
  %174 = load i8*, i8** %173, align 8
  %175 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %169, i64 0, i32 0, i32 1, i32 1
  %176 = load i64, i64* %175, align 8
  %177 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %10, i8* %174, i64 %176) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %170) #10
  br i1 %177, label %178, label %193

178:                                              ; preds = %167, %156
  br i1 %23, label %179, label %192

179:                                              ; preds = %178
  switch i32 %2, label %191 [
    i32 1, label %180
    i32 2, label %182
    i32 3, label %185
    i32 4, label %188
  ]

180:                                              ; preds = %179
  %181 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %157, align 8
  br label %300

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 9, i32 0, i32 0, i32 0
  %184 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %183, align 8
  br label %300

185:                                              ; preds = %179
  %186 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 10, i32 0, i32 0, i32 0
  %187 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %186, align 8
  br label %300

188:                                              ; preds = %179
  %189 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 11, i32 0, i32 0, i32 0
  %190 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %189, align 8
  br label %300

191:                                              ; preds = %179
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 135, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 %2) #11
  unreachable

192:                                              ; preds = %178
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 137, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i32 %3) #11
  unreachable

193:                                              ; preds = %167
  %194 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 16, i32 0, i32 0, i32 0
  %195 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %194, align 8
  %196 = bitcast <2 x i64>* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %196) #10
  %197 = bitcast i8** %30 to <2 x i64>*
  %198 = load <2 x i64>, <2 x i64>* %197, align 8
  store <2 x i64> %198, <2 x i64>* %11, align 16
  %199 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %195, i64 0, i32 0, i32 1, i32 0
  %200 = load i8*, i8** %199, align 8
  %201 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %195, i64 0, i32 0, i32 1, i32 1
  %202 = load i64, i64* %201, align 8
  %203 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %12, i8* %200, i64 %202) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %196) #10
  br i1 %203, label %204, label %219

204:                                              ; preds = %193
  br i1 %23, label %205, label %218

205:                                              ; preds = %204
  switch i32 %2, label %217 [
    i32 1, label %206
    i32 2, label %208
    i32 3, label %211
    i32 4, label %214
  ]

206:                                              ; preds = %205
  %207 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %194, align 8
  br label %300

208:                                              ; preds = %205
  %209 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 17, i32 0, i32 0, i32 0
  %210 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %209, align 8
  br label %300

211:                                              ; preds = %205
  %212 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 18, i32 0, i32 0, i32 0
  %213 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %212, align 8
  br label %300

214:                                              ; preds = %205
  %215 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 19, i32 0, i32 0, i32 0
  %216 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %215, align 8
  br label %300

217:                                              ; preds = %205
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 147, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 %2) #11
  unreachable

218:                                              ; preds = %204
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 149, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i32 %3) #11
  unreachable

219:                                              ; preds = %193
  %220 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 12, i32 0, i32 0, i32 0
  %221 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %220, align 8
  %222 = bitcast <2 x i64>* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %222) #10
  %223 = bitcast i8** %30 to <2 x i64>*
  %224 = load <2 x i64>, <2 x i64>* %223, align 8
  store <2 x i64> %224, <2 x i64>* %13, align 16
  %225 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %221, i64 0, i32 0, i32 1, i32 0
  %226 = load i8*, i8** %225, align 8
  %227 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %221, i64 0, i32 0, i32 1, i32 1
  %228 = load i64, i64* %227, align 8
  %229 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %14, i8* %226, i64 %228) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %222) #10
  br i1 %229, label %230, label %245

230:                                              ; preds = %219
  br i1 %23, label %231, label %244

231:                                              ; preds = %230
  switch i32 %2, label %243 [
    i32 1, label %232
    i32 2, label %234
    i32 3, label %237
    i32 4, label %240
  ]

232:                                              ; preds = %231
  %233 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %220, align 8
  br label %300

234:                                              ; preds = %231
  %235 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 13, i32 0, i32 0, i32 0
  %236 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %235, align 8
  br label %300

237:                                              ; preds = %231
  %238 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 14, i32 0, i32 0, i32 0
  %239 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %238, align 8
  br label %300

240:                                              ; preds = %231
  %241 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 15, i32 0, i32 0, i32 0
  %242 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %241, align 8
  br label %300

243:                                              ; preds = %231
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 159, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 %2) #11
  unreachable

244:                                              ; preds = %230
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 161, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i32 %3) #11
  unreachable

245:                                              ; preds = %219
  %246 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 20, i32 0, i32 0, i32 0
  %247 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %246, align 8
  %248 = bitcast <2 x i64>* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %248) #10
  %249 = bitcast i8** %30 to <2 x i64>*
  %250 = load <2 x i64>, <2 x i64>* %249, align 8
  store <2 x i64> %250, <2 x i64>* %17, align 16
  %251 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %247, i64 0, i32 0, i32 1, i32 0
  %252 = load i8*, i8** %251, align 8
  %253 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %247, i64 0, i32 0, i32 1, i32 1
  %254 = load i64, i64* %253, align 8
  %255 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %18, i8* %252, i64 %254) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %248) #10
  br i1 %255, label %256, label %271

256:                                              ; preds = %245
  br i1 %23, label %257, label %270

257:                                              ; preds = %256
  switch i32 %2, label %269 [
    i32 1, label %258
    i32 2, label %260
    i32 3, label %263
    i32 4, label %266
  ]

258:                                              ; preds = %257
  %259 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %246, align 8
  br label %300

260:                                              ; preds = %257
  %261 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 21, i32 0, i32 0, i32 0
  %262 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %261, align 8
  br label %300

263:                                              ; preds = %257
  %264 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 22, i32 0, i32 0, i32 0
  %265 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %264, align 8
  br label %300

266:                                              ; preds = %257
  %267 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 23, i32 0, i32 0, i32 0
  %268 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %267, align 8
  br label %300

269:                                              ; preds = %257
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 171, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 %2) #11
  unreachable

270:                                              ; preds = %256
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 173, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i32 %3) #11
  unreachable

271:                                              ; preds = %245
  %272 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0
  %273 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %272, align 8
  %274 = bitcast <2 x i64>* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %274) #10
  %275 = bitcast i8** %30 to <2 x i64>*
  %276 = load <2 x i64>, <2 x i64>* %275, align 8
  store <2 x i64> %276, <2 x i64>* %20, align 16
  %277 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %273, i64 0, i32 0, i32 1, i32 0
  %278 = load i8*, i8** %277, align 8
  %279 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %273, i64 0, i32 0, i32 1, i32 1
  %280 = load i64, i64* %279, align 8
  %281 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %21, i8* %278, i64 %280) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %274) #10
  br i1 %281, label %282, label %297

282:                                              ; preds = %271
  br i1 %23, label %283, label %296

283:                                              ; preds = %282
  switch i32 %2, label %295 [
    i32 1, label %284
    i32 2, label %286
    i32 3, label %289
    i32 4, label %292
  ]

284:                                              ; preds = %283
  %285 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %272, align 8
  br label %300

286:                                              ; preds = %283
  %287 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 25, i32 0, i32 0, i32 0
  %288 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %287, align 8
  br label %300

289:                                              ; preds = %283
  %290 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 26, i32 0, i32 0, i32 0
  %291 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %290, align 8
  br label %300

292:                                              ; preds = %283
  %293 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 27, i32 0, i32 0, i32 0
  %294 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %293, align 8
  br label %300

295:                                              ; preds = %283
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 183, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 %2) #11
  unreachable

296:                                              ; preds = %282
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 185, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i32 %3) #11
  unreachable

297:                                              ; preds = %271
  %298 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 29, i32 0, i32 0, i32 0
  %299 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %298, align 8
  br label %300

300:                                              ; preds = %4, %297, %292, %289, %286, %284, %266, %263, %260, %258, %240, %237, %234, %232, %214, %211, %208, %206, %188, %185, %182, %180, %151, %148, %145, %140, %137, %134, %129, %126, %123, %118, %115, %112, %110, %92, %89, %86, %81, %78, %75, %70, %67, %64, %59, %56, %53, %51
  %301 = phi %"class.SkSL::Type"* [ %94, %92 ], [ %91, %89 ], [ %88, %86 ], [ %83, %81 ], [ %80, %78 ], [ %77, %75 ], [ %72, %70 ], [ %69, %67 ], [ %66, %64 ], [ %61, %59 ], [ %58, %56 ], [ %55, %53 ], [ %52, %51 ], [ %153, %151 ], [ %150, %148 ], [ %147, %145 ], [ %142, %140 ], [ %139, %137 ], [ %136, %134 ], [ %131, %129 ], [ %128, %126 ], [ %125, %123 ], [ %120, %118 ], [ %117, %115 ], [ %114, %112 ], [ %111, %110 ], [ %190, %188 ], [ %187, %185 ], [ %184, %182 ], [ %181, %180 ], [ %216, %214 ], [ %213, %211 ], [ %210, %208 ], [ %207, %206 ], [ %242, %240 ], [ %239, %237 ], [ %236, %234 ], [ %233, %232 ], [ %268, %266 ], [ %265, %263 ], [ %262, %260 ], [ %259, %258 ], [ %294, %292 ], [ %291, %289 ], [ %288, %286 ], [ %285, %284 ], [ %299, %297 ], [ %0, %4 ]
  ret %"class.SkSL::Type"* %301
}

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Type"* @_ZNK4SkSL4Type5cloneEPNS_11SymbolTableE(%"class.SkSL::Type"*, %"class.SkSL::SymbolTable"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.39", align 8
  %4 = alloca %"class.std::__1::unique_ptr.39", align 8
  %5 = alloca [15 x i8], align 8
  %6 = alloca %"class.std::__1::unique_ptr.39", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.std::__1::vector.6", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  switch i32 %12, label %420 [
    i32 0, label %13
    i32 9, label %13
    i32 1, label %13
  ]

13:                                               ; preds = %2, %2, %2
  %14 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 0, i32 1, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 0, i32 1, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL11SymbolTableixENS_14StringFragmentE(%"class.SkSL::SymbolTable"* %1, i8* %15, i64 %17) #10
  %19 = icmp eq %"class.SkSL::Symbol"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.SkSL::Symbol"* %18 to %"class.SkSL::Type"*
  br label %420

22:                                               ; preds = %13
  %23 = load i32, i32* %11, align 8
  switch i32 %23, label %420 [
    i32 0, label %24
    i32 9, label %146
    i32 1, label %309
  ]

24:                                               ; preds = %22
  %25 = load i8*, i8** %14, align 8
  %26 = load i64, i64* %16, align 8
  %27 = icmp ugt i64 %26, -17
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = bitcast %"class.SkSL::String"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %29) #11
  unreachable

30:                                               ; preds = %24
  %31 = icmp ult i64 %26, 23
  br i1 %31, label %41, label %32

32:                                               ; preds = %30
  %33 = add nuw i64 %26, 16
  %34 = and i64 %33, -16
  %35 = tail call i8* @_Znwm(i64 %34) #12
  %36 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %35, i8** %36, align 8
  %37 = or i64 %34, -9223372036854775808
  %38 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %26, i64* %39, align 8
  %40 = bitcast %"class.SkSL::String"* %7 to i8*
  br label %47

41:                                               ; preds = %30
  %42 = trunc i64 %26 to i8
  %43 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  store i8 %42, i8* %44, align 1
  %45 = bitcast %"class.SkSL::String"* %7 to i8*
  %46 = icmp eq i64 %26, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %41, %32
  %48 = phi i8* [ %45, %41 ], [ %40, %32 ]
  %49 = phi i8* [ %45, %41 ], [ %35, %32 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %49, i8* align 1 %25, i64 %26, i1 false) #10
  br label %50

50:                                               ; preds = %41, %47
  %51 = phi i8* [ %45, %41 ], [ %48, %47 ]
  %52 = phi i8* [ %45, %41 ], [ %49, %47 ]
  %53 = getelementptr inbounds i8, i8* %52, i64 %26
  store i8 0, i8* %53, align 1
  %54 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 6
  %55 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %54, align 8
  %56 = icmp eq %"class.SkSL::Type"* %55, null
  %57 = select i1 %56, %"class.SkSL::Type"* %0, %"class.SkSL::Type"* %55
  %58 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 8
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %60)
  %61 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 184) #10
  %62 = bitcast i8* %61 to %"class.SkSL::Type"*
  %63 = bitcast %"class.SkSL::String"* %7 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = bitcast i64* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %60, i8* align 8 %66, i64 15, i1 false) #10
  %67 = getelementptr inbounds i8, i8* %51, i64 23
  %68 = load i8, i8* %67, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 24, i1 false) #10
  %69 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %57, i64 0, i32 1
  %70 = bitcast i8** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast i8* %61 to i32 (...)***
  %73 = getelementptr inbounds i8, i8* %61, i64 8
  %74 = bitcast i8* %73 to i32*
  store i32 -1, i32* %74, align 8
  %75 = getelementptr inbounds i8, i8* %61, i64 12
  %76 = bitcast i8* %75 to i32*
  store i32 13, i32* %76, align 4
  %77 = getelementptr inbounds i8, i8* %61, i64 16
  %78 = bitcast i8* %77 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), i8** %78, align 8
  %79 = getelementptr inbounds i8, i8* %61, i64 24
  %80 = bitcast i8* %79 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 16, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %72, align 8
  %81 = getelementptr inbounds i8, i8* %61, i64 40
  %82 = bitcast i8* %81 to i64*
  store i64 %71, i64* %82, align 8
  %83 = getelementptr inbounds i8, i8* %61, i64 48
  %84 = bitcast i8* %83 to i64*
  store i64 %64, i64* %84, align 8
  %85 = getelementptr inbounds i8, i8* %61, i64 56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* nonnull align 8 %60, i64 15, i1 false) #10
  %86 = getelementptr inbounds i8, i8* %61, i64 71
  store i8 %68, i8* %86, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 15, i1 false)
  %87 = getelementptr inbounds i8, i8* %61, i64 72
  %88 = bitcast i8* %87 to i32*
  store i32 0, i32* %88, align 8
  %89 = getelementptr inbounds i8, i8* %61, i64 76
  %90 = bitcast i8* %89 to i32*
  store i32 4, i32* %90, align 4
  %91 = getelementptr inbounds i8, i8* %61, i64 80
  %92 = bitcast i8* %91 to i32*
  store i32 -1, i32* %92, align 8
  %93 = getelementptr inbounds i8, i8* %61, i64 88
  %94 = bitcast i8* %93 to %"class.SkSL::Type"**
  store %"class.SkSL::Type"* %57, %"class.SkSL::Type"** %94, align 8
  %95 = getelementptr inbounds i8, i8* %61, i64 96
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 24, i1 false) #10
  %96 = getelementptr inbounds i8, i8* %61, i64 120
  %97 = bitcast i8* %96 to i32*
  store i32 %59, i32* %97, align 8
  %98 = getelementptr inbounds i8, i8* %61, i64 124
  %99 = bitcast i8* %98 to i32*
  store i32 1, i32* %99, align 4
  %100 = getelementptr inbounds i8, i8* %61, i64 128
  %101 = getelementptr inbounds i8, i8* %61, i64 168
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 33, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 16, i1 false) #10
  %102 = icmp slt i8 %68, 0
  br i1 %102, label %103, label %107

103:                                              ; preds = %50
  %104 = inttoptr i64 %64 to i8*
  %105 = bitcast i8* %85 to i64*
  %106 = load i64, i64* %105, align 8
  br label %109

107:                                              ; preds = %50
  %108 = zext i8 %68 to i64
  br label %109

109:                                              ; preds = %103, %107
  %110 = phi i8* [ %104, %103 ], [ %83, %107 ]
  %111 = phi i64 [ %106, %103 ], [ %108, %107 ]
  store i8* %110, i8** %78, align 8
  store i64 %111, i64* %80, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %60)
  %112 = ptrtoint i8* %61 to i64
  %113 = bitcast i8* %61 to %"class.SkSL::Symbol"*
  tail call void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %1, %"class.SkSL::Symbol"* %113) #10
  %114 = bitcast %"class.std::__1::unique_ptr.39"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #10
  %115 = bitcast %"class.std::__1::unique_ptr.39"* %4 to i64*
  store i64 %112, i64* %115, align 8
  %116 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %1, i64 0, i32 1, i32 0, i32 1
  %117 = load %"class.std::__1::unique_ptr.39"*, %"class.std::__1::unique_ptr.39"** %116, align 8
  %118 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %119 = load %"class.std::__1::unique_ptr.39"*, %"class.std::__1::unique_ptr.39"** %118, align 8
  %120 = icmp ult %"class.std::__1::unique_ptr.39"* %117, %119
  br i1 %120, label %121, label %127

121:                                              ; preds = %109
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %122, align 8
  %123 = bitcast %"class.std::__1::unique_ptr.39"* %117 to i64*
  store i64 %112, i64* %123, align 8
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %117, i64 1
  %125 = ptrtoint %"class.std::__1::unique_ptr.39"* %124 to i64
  %126 = bitcast %"class.std::__1::unique_ptr.39"** %116 to i64*
  store i64 %125, i64* %126, align 8
  br label %129

127:                                              ; preds = %109
  %128 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %1, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.37"* %128, %"class.std::__1::unique_ptr.39"* nonnull dereferenceable(8) %4) #10
  br label %129

129:                                              ; preds = %127, %121
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %4, i64 0, i32 0, i32 0, i32 0
  %131 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %130, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %130, align 8
  %132 = icmp eq %"class.SkSL::Symbol"* %131, null
  br i1 %132, label %138, label %133

133:                                              ; preds = %129
  %134 = bitcast %"class.SkSL::Symbol"* %131 to void (%"class.SkSL::Symbol"*)***
  %135 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %135, i64 1
  %137 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %136, align 8
  call void %137(%"class.SkSL::Symbol"* nonnull %131) #10
  br label %138

138:                                              ; preds = %129, %133
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #10
  %139 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  %141 = load i8, i8* %140, align 1
  %142 = icmp slt i8 %141, 0
  br i1 %142, label %143, label %420

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load i8*, i8** %144, align 8
  call void @_ZdlPv(i8* %145) #12
  br label %420

146:                                              ; preds = %22
  %147 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 0, i32 0, i32 1
  %148 = load i32, i32* %147, align 8
  %149 = load i8*, i8** %14, align 8
  %150 = load i64, i64* %16, align 8
  %151 = icmp ugt i64 %150, -17
  br i1 %151, label %152, label %154

152:                                              ; preds = %146
  %153 = bitcast %"class.SkSL::String"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %153) #11
  unreachable

154:                                              ; preds = %146
  %155 = icmp ult i64 %150, 23
  br i1 %155, label %164, label %156

156:                                              ; preds = %154
  %157 = add nuw i64 %150, 16
  %158 = and i64 %157, -16
  %159 = tail call i8* @_Znwm(i64 %158) #12
  %160 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %159, i8** %160, align 8
  %161 = or i64 %158, -9223372036854775808
  %162 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %161, i64* %162, align 8
  %163 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %150, i64* %163, align 8
  br label %170

164:                                              ; preds = %154
  %165 = trunc i64 %150 to i8
  %166 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %167 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %166, i64 0, i32 1, i32 0
  store i8 %165, i8* %167, align 1
  %168 = bitcast %"class.SkSL::String"* %8 to i8*
  %169 = icmp eq i64 %150, 0
  br i1 %169, label %172, label %170

170:                                              ; preds = %164, %156
  %171 = phi i8* [ %159, %156 ], [ %168, %164 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %171, i8* align 1 %149, i64 %150, i1 false) #10
  br label %172

172:                                              ; preds = %164, %170
  %173 = phi i8* [ %168, %164 ], [ %171, %170 ]
  %174 = getelementptr inbounds i8, i8* %173, i64 %150
  store i8 0, i8* %174, align 1
  %175 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10
  %176 = bitcast %"class.std::__1::vector.6"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %176, i8 0, i64 24, i1 false) #10
  %177 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 1
  %178 = bitcast %"struct.SkSL::Type::Field"** %177 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = bitcast %"class.std::__1::vector.6"* %175 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = sub i64 %179, %181
  %183 = sdiv exact i64 %182, 104
  %184 = icmp eq i64 %182, 0
  br i1 %184, label %208, label %185

185:                                              ; preds = %172
  %186 = icmp ugt i64 %183, 177372539170284150
  br i1 %186, label %187, label %189

187:                                              ; preds = %185
  %188 = bitcast %"class.std::__1::vector.6"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %188) #11
  unreachable

189:                                              ; preds = %185
  %190 = tail call i8* @_Znwm(i64 %182) #12
  %191 = bitcast i8* %190 to %"struct.SkSL::Type::Field"*
  %192 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %9, i64 0, i32 0, i32 1
  %193 = bitcast %"struct.SkSL::Type::Field"** %192 to i8**
  store i8* %190, i8** %193, align 8
  %194 = bitcast %"class.std::__1::vector.6"* %9 to i8**
  store i8* %190, i8** %194, align 8
  %195 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %191, i64 %183
  %196 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.SkSL::Type::Field"* %195, %"struct.SkSL::Type::Field"** %196, align 8
  %197 = bitcast %"struct.SkSL::Type::Field"** %192 to i64*
  %198 = ptrtoint i8* %190 to i64
  %199 = icmp sgt i64 %182, 0
  %200 = ptrtoint %"struct.SkSL::Type::Field"* %195 to i64
  br i1 %199, label %201, label %206

201:                                              ; preds = %189
  %202 = udiv exact i64 %182, 104
  %203 = inttoptr i64 %181 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %190, i8* align 8 %203, i64 %182, i1 false) #10
  %204 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %191, i64 %202
  %205 = ptrtoint %"struct.SkSL::Type::Field"* %204 to i64
  br label %206

206:                                              ; preds = %201, %189
  %207 = phi i64 [ %205, %201 ], [ %198, %189 ]
  store i64 %207, i64* %197, align 8
  br label %208

208:                                              ; preds = %172, %206
  %209 = phi i64 [ %200, %206 ], [ 0, %172 ]
  %210 = phi i64 [ %207, %206 ], [ 0, %172 ]
  %211 = phi i64 [ %198, %206 ], [ 0, %172 ]
  %212 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %212)
  %213 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 184) #10
  %214 = bitcast i8* %213 to %"class.SkSL::Type"*
  %215 = bitcast %"class.SkSL::String"* %8 to i8*
  %216 = bitcast %"class.SkSL::String"* %8 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %219 = bitcast i64* %218 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %212, i8* align 8 %219, i64 15, i1 false) #10
  %220 = getelementptr inbounds i8, i8* %215, i64 23
  %221 = load i8, i8* %220, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %215, i8 0, i64 24, i1 false) #10
  %222 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %9, i64 0, i32 0, i32 1
  %223 = bitcast %"struct.SkSL::Type::Field"** %222 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %176, i8 0, i64 24, i1 false) #10
  %224 = bitcast i8* %213 to i32 (...)***
  %225 = getelementptr inbounds i8, i8* %213, i64 8
  %226 = bitcast i8* %225 to i32*
  store i32 %148, i32* %226, align 8
  %227 = getelementptr inbounds i8, i8* %213, i64 12
  %228 = bitcast i8* %227 to i32*
  store i32 13, i32* %228, align 4
  %229 = getelementptr inbounds i8, i8* %213, i64 16
  %230 = bitcast i8* %229 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), i8** %230, align 8
  %231 = getelementptr inbounds i8, i8* %213, i64 24
  %232 = bitcast i8* %231 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %231, i8 0, i64 16, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %224, align 8
  %233 = getelementptr inbounds i8, i8* %213, i64 40
  %234 = bitcast i8* %233 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0), i8** %234, align 8
  %235 = getelementptr inbounds i8, i8* %213, i64 48
  %236 = bitcast i8* %235 to i64*
  store i64 %217, i64* %236, align 8
  %237 = getelementptr inbounds i8, i8* %213, i64 56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %237, i8* nonnull align 8 %212, i64 15, i1 false) #10
  %238 = getelementptr inbounds i8, i8* %213, i64 71
  store i8 %221, i8* %238, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %212, i8 0, i64 15, i1 false)
  %239 = getelementptr inbounds i8, i8* %213, i64 72
  %240 = bitcast i8* %239 to i32*
  store i32 9, i32* %240, align 8
  %241 = getelementptr inbounds i8, i8* %213, i64 76
  %242 = bitcast i8* %241 to i32*
  store i32 4, i32* %242, align 4
  %243 = getelementptr inbounds i8, i8* %213, i64 80
  %244 = bitcast i8* %243 to i32*
  store i32 -1, i32* %244, align 8
  %245 = getelementptr inbounds i8, i8* %213, i64 88
  %246 = getelementptr inbounds i8, i8* %213, i64 120
  %247 = bitcast i8* %246 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %245, i8 0, i64 32, i1 false) #10
  store i32 -1, i32* %247, align 8
  %248 = getelementptr inbounds i8, i8* %213, i64 124
  %249 = bitcast i8* %248 to i32*
  store i32 -1, i32* %249, align 4
  %250 = getelementptr inbounds i8, i8* %213, i64 128
  %251 = bitcast i8* %250 to i64*
  store i64 %211, i64* %251, align 8
  %252 = getelementptr inbounds i8, i8* %213, i64 136
  %253 = bitcast i8* %252 to i64*
  store i64 %210, i64* %253, align 8
  %254 = getelementptr inbounds i8, i8* %213, i64 144
  %255 = bitcast i8* %254 to i64*
  store i64 %209, i64* %255, align 8
  %256 = getelementptr inbounds i8, i8* %213, i64 152
  %257 = getelementptr inbounds i8, i8* %213, i64 168
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %256, i8 0, i64 9, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %257, i8 0, i64 16, i1 false) #10
  %258 = icmp slt i8 %221, 0
  br i1 %258, label %259, label %263

259:                                              ; preds = %208
  %260 = inttoptr i64 %217 to i8*
  %261 = bitcast i8* %237 to i64*
  %262 = load i64, i64* %261, align 8
  br label %265

263:                                              ; preds = %208
  %264 = zext i8 %221 to i64
  br label %265

265:                                              ; preds = %259, %263
  %266 = phi i8* [ %260, %259 ], [ %235, %263 ]
  %267 = phi i64 [ %262, %259 ], [ %264, %263 ]
  store i8* %266, i8** %230, align 8
  store i64 %267, i64* %232, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %212)
  %268 = ptrtoint i8* %213 to i64
  %269 = bitcast i8* %213 to %"class.SkSL::Symbol"*
  tail call void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %1, %"class.SkSL::Symbol"* %269) #10
  %270 = bitcast %"class.std::__1::unique_ptr.39"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %270) #10
  %271 = bitcast %"class.std::__1::unique_ptr.39"* %3 to i64*
  store i64 %268, i64* %271, align 8
  %272 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %1, i64 0, i32 1, i32 0, i32 1
  %273 = load %"class.std::__1::unique_ptr.39"*, %"class.std::__1::unique_ptr.39"** %272, align 8
  %274 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %275 = load %"class.std::__1::unique_ptr.39"*, %"class.std::__1::unique_ptr.39"** %274, align 8
  %276 = icmp ult %"class.std::__1::unique_ptr.39"* %273, %275
  br i1 %276, label %277, label %283

277:                                              ; preds = %265
  %278 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %278, align 8
  %279 = bitcast %"class.std::__1::unique_ptr.39"* %273 to i64*
  store i64 %268, i64* %279, align 8
  %280 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %273, i64 1
  %281 = ptrtoint %"class.std::__1::unique_ptr.39"* %280 to i64
  %282 = bitcast %"class.std::__1::unique_ptr.39"** %272 to i64*
  store i64 %281, i64* %282, align 8
  br label %285

283:                                              ; preds = %265
  %284 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %1, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.37"* %284, %"class.std::__1::unique_ptr.39"* nonnull dereferenceable(8) %3) #10
  br label %285

285:                                              ; preds = %283, %277
  %286 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %3, i64 0, i32 0, i32 0, i32 0
  %287 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %286, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %286, align 8
  %288 = icmp eq %"class.SkSL::Symbol"* %287, null
  br i1 %288, label %294, label %289

289:                                              ; preds = %285
  %290 = bitcast %"class.SkSL::Symbol"* %287 to void (%"class.SkSL::Symbol"*)***
  %291 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %290, align 8
  %292 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %291, i64 1
  %293 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %292, align 8
  call void %293(%"class.SkSL::Symbol"* nonnull %287) #10
  br label %294

294:                                              ; preds = %285, %289
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %270) #10
  %295 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %9, i64 0, i32 0, i32 0
  %296 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %295, align 8
  %297 = icmp eq %"struct.SkSL::Type::Field"* %296, null
  br i1 %297, label %301, label %298

298:                                              ; preds = %294
  %299 = ptrtoint %"struct.SkSL::Type::Field"* %296 to i64
  store i64 %299, i64* %223, align 8
  %300 = bitcast %"struct.SkSL::Type::Field"* %296 to i8*
  call void @_ZdlPv(i8* %300) #12
  br label %301

301:                                              ; preds = %294, %298
  %302 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %303 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %302, i64 0, i32 1, i32 0
  %304 = load i8, i8* %303, align 1
  %305 = icmp slt i8 %304, 0
  br i1 %305, label %306, label %420

306:                                              ; preds = %301
  %307 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %308 = load i8*, i8** %307, align 8
  call void @_ZdlPv(i8* %308) #12
  br label %420

309:                                              ; preds = %22
  %310 = load i8*, i8** %14, align 8
  %311 = load i64, i64* %16, align 8
  %312 = icmp ugt i64 %311, -17
  br i1 %312, label %313, label %315

313:                                              ; preds = %309
  %314 = bitcast %"class.SkSL::String"* %10 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %314) #11
  unreachable

315:                                              ; preds = %309
  %316 = icmp ult i64 %311, 23
  br i1 %316, label %326, label %317

317:                                              ; preds = %315
  %318 = add nuw i64 %311, 16
  %319 = and i64 %318, -16
  %320 = tail call i8* @_Znwm(i64 %319) #12
  %321 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %320, i8** %321, align 8
  %322 = or i64 %319, -9223372036854775808
  %323 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %322, i64* %323, align 8
  %324 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %311, i64* %324, align 8
  %325 = bitcast %"class.SkSL::String"* %10 to i8*
  br label %332

326:                                              ; preds = %315
  %327 = trunc i64 %311 to i8
  %328 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %329 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %328, i64 0, i32 1, i32 0
  store i8 %327, i8* %329, align 1
  %330 = bitcast %"class.SkSL::String"* %10 to i8*
  %331 = icmp eq i64 %311, 0
  br i1 %331, label %335, label %332

332:                                              ; preds = %326, %317
  %333 = phi i8* [ %330, %326 ], [ %325, %317 ]
  %334 = phi i8* [ %330, %326 ], [ %320, %317 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %334, i8* align 1 %310, i64 %311, i1 false) #10
  br label %335

335:                                              ; preds = %326, %332
  %336 = phi i8* [ %330, %326 ], [ %333, %332 ]
  %337 = phi i8* [ %330, %326 ], [ %334, %332 ]
  %338 = getelementptr inbounds i8, i8* %337, i64 %311
  store i8 0, i8* %338, align 1
  %339 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %339)
  %340 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 184) #10
  %341 = bitcast i8* %340 to %"class.SkSL::Type"*
  %342 = bitcast %"class.SkSL::String"* %10 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = bitcast i64* %344 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %339, i8* align 8 %345, i64 15, i1 false) #10
  %346 = getelementptr inbounds i8, i8* %336, i64 23
  %347 = load i8, i8* %346, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %336, i8 0, i64 24, i1 false) #10
  %348 = bitcast i8* %340 to i32 (...)***
  %349 = getelementptr inbounds i8, i8* %340, i64 8
  %350 = bitcast i8* %349 to i32*
  store i32 -1, i32* %350, align 8
  %351 = getelementptr inbounds i8, i8* %340, i64 12
  %352 = bitcast i8* %351 to i32*
  store i32 13, i32* %352, align 4
  %353 = getelementptr inbounds i8, i8* %340, i64 16
  %354 = bitcast i8* %353 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), i8** %354, align 8
  %355 = getelementptr inbounds i8, i8* %340, i64 24
  %356 = bitcast i8* %355 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %355, i8 0, i64 16, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %348, align 8
  %357 = getelementptr inbounds i8, i8* %340, i64 40
  %358 = bitcast i8* %357 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0), i8** %358, align 8
  %359 = getelementptr inbounds i8, i8* %340, i64 48
  %360 = bitcast i8* %359 to i64*
  store i64 %343, i64* %360, align 8
  %361 = getelementptr inbounds i8, i8* %340, i64 56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %361, i8* nonnull align 8 %339, i64 15, i1 false) #10
  %362 = getelementptr inbounds i8, i8* %340, i64 71
  store i8 %347, i8* %362, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %339, i8 0, i64 15, i1 false)
  %363 = getelementptr inbounds i8, i8* %340, i64 72
  %364 = bitcast i8* %363 to i32*
  store i32 1, i32* %364, align 8
  %365 = getelementptr inbounds i8, i8* %340, i64 76
  %366 = bitcast i8* %365 to i32*
  store i32 4, i32* %366, align 4
  %367 = getelementptr inbounds i8, i8* %340, i64 80
  %368 = bitcast i8* %367 to i32*
  store i32 -1, i32* %368, align 8
  %369 = getelementptr inbounds i8, i8* %340, i64 88
  %370 = getelementptr inbounds i8, i8* %340, i64 120
  %371 = bitcast i8* %370 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %369, i8 0, i64 32, i1 false) #10
  store i32 -1, i32* %371, align 8
  %372 = getelementptr inbounds i8, i8* %340, i64 124
  %373 = bitcast i8* %372 to i32*
  store i32 -1, i32* %373, align 4
  %374 = getelementptr inbounds i8, i8* %340, i64 128
  %375 = getelementptr inbounds i8, i8* %340, i64 168
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %374, i8 0, i64 33, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %375, i8 0, i64 16, i1 false) #10
  %376 = icmp slt i8 %347, 0
  br i1 %376, label %377, label %381

377:                                              ; preds = %335
  %378 = inttoptr i64 %343 to i8*
  %379 = bitcast i8* %361 to i64*
  %380 = load i64, i64* %379, align 8
  br label %383

381:                                              ; preds = %335
  %382 = zext i8 %347 to i64
  br label %383

383:                                              ; preds = %377, %381
  %384 = phi i8* [ %378, %377 ], [ %359, %381 ]
  %385 = phi i64 [ %380, %377 ], [ %382, %381 ]
  store i8* %384, i8** %354, align 8
  store i64 %385, i64* %356, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %339)
  %386 = ptrtoint i8* %340 to i64
  %387 = bitcast i8* %340 to %"class.SkSL::Symbol"*
  tail call void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %1, %"class.SkSL::Symbol"* %387) #10
  %388 = bitcast %"class.std::__1::unique_ptr.39"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %388) #10
  %389 = bitcast %"class.std::__1::unique_ptr.39"* %6 to i64*
  store i64 %386, i64* %389, align 8
  %390 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %1, i64 0, i32 1, i32 0, i32 1
  %391 = load %"class.std::__1::unique_ptr.39"*, %"class.std::__1::unique_ptr.39"** %390, align 8
  %392 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %393 = load %"class.std::__1::unique_ptr.39"*, %"class.std::__1::unique_ptr.39"** %392, align 8
  %394 = icmp ult %"class.std::__1::unique_ptr.39"* %391, %393
  br i1 %394, label %395, label %401

395:                                              ; preds = %383
  %396 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %396, align 8
  %397 = bitcast %"class.std::__1::unique_ptr.39"* %391 to i64*
  store i64 %386, i64* %397, align 8
  %398 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %391, i64 1
  %399 = ptrtoint %"class.std::__1::unique_ptr.39"* %398 to i64
  %400 = bitcast %"class.std::__1::unique_ptr.39"** %390 to i64*
  store i64 %399, i64* %400, align 8
  br label %403

401:                                              ; preds = %383
  %402 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %1, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.37"* %402, %"class.std::__1::unique_ptr.39"* nonnull dereferenceable(8) %6) #10
  br label %403

403:                                              ; preds = %401, %395
  %404 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %6, i64 0, i32 0, i32 0, i32 0
  %405 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %404, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %404, align 8
  %406 = icmp eq %"class.SkSL::Symbol"* %405, null
  br i1 %406, label %412, label %407

407:                                              ; preds = %403
  %408 = bitcast %"class.SkSL::Symbol"* %405 to void (%"class.SkSL::Symbol"*)***
  %409 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %408, align 8
  %410 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %409, i64 1
  %411 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %410, align 8
  call void %411(%"class.SkSL::Symbol"* nonnull %405) #10
  br label %412

412:                                              ; preds = %403, %407
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %388) #10
  %413 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %414 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %413, i64 0, i32 1, i32 0
  %415 = load i8, i8* %414, align 1
  %416 = icmp slt i8 %415, 0
  br i1 %416, label %417, label %420

417:                                              ; preds = %412
  %418 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %419 = load i8*, i8** %418, align 8
  call void @_ZdlPv(i8* %419) #12
  br label %420

420:                                              ; preds = %2, %417, %412, %306, %301, %143, %138, %20, %22
  %421 = phi %"class.SkSL::Type"* [ %21, %20 ], [ null, %22 ], [ %62, %138 ], [ %62, %143 ], [ %214, %301 ], [ %214, %306 ], [ %341, %412 ], [ %341, %417 ], [ %0, %2 ]
  ret %"class.SkSL::Type"* %421
}

declare %"class.SkSL::Symbol"* @_ZN4SkSL11SymbolTableixENS_14StringFragmentE(%"class.SkSL::SymbolTable"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZNK4SkSL4Type16coerceExpressionENSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEERKNS_7ContextE(%"class.SkSL::Type"*, %"class.SkSL::Expression"*, %"class.SkSL::Context"* dereferenceable(744)) local_unnamed_addr #0 align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %"struct.SkSL::StringFragment"*
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = alloca %"class.SkSL::String", align 8
  %15 = ptrtoint %"class.SkSL::Expression"* %1 to i64
  %16 = icmp eq %"class.SkSL::Expression"* %1, null
  br i1 %16, label %264, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  switch i32 %21, label %28 [
    i32 46, label %22
    i32 54, label %25
  ]

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %2, i64 0, i32 1
  %24 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %23, align 8
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %24, i32 %19, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i64 0, i64 0))
  br label %259

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %2, i64 0, i32 1
  %27 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %26, align 8
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %27, i32 %19, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.5, i64 0, i64 0))
  br label %259

28:                                               ; preds = %17
  %29 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %30 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %30, i64 3
  %32 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %31, align 8
  %33 = tail call dereferenceable(184) %"class.SkSL::Type"* %32(%"class.SkSL::Expression"* nonnull %1) #10
  %34 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #10
  %35 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %33, i64 0, i32 0, i32 1, i32 0
  %36 = bitcast i8** %35 to <2 x i64>*
  %37 = load <2 x i64>, <2 x i64>* %36, align 8
  store <2 x i64> %37, <2 x i64>* %4, align 16
  %38 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 0, i32 1, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 0, i32 1, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %5, i8* %39, i64 %41) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #10
  br i1 %42, label %264, label %43

43:                                               ; preds = %28
  %44 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %2, i64 0, i32 4
  %45 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %44, align 8
  %46 = bitcast %"class.SkSL::Expression"* %1 to { i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)***
  %47 = load { i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)**, { i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)*** %46, align 8
  %48 = getelementptr inbounds { i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)*, { i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)** %47, i64 8
  %49 = load { i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)*, { i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)** %48, align 8
  %50 = call { i64, i8 } %49(%"class.SkSL::Expression"* nonnull %1, %"class.SkSL::Type"* dereferenceable(184) %0) #10
  %51 = extractvalue { i64, i8 } %50, 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %60

53:                                               ; preds = %43
  %54 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %45, i64 0, i32 1, i32 15
  %55 = load i8, i8* %54, align 1, !range !2
  %56 = icmp ne i8 %55, 0
  %57 = extractvalue { i64, i8 } %50, 0
  %58 = icmp ult i64 %57, 4294967296
  %59 = or i1 %58, %56
  br i1 %59, label %186, label %60

60:                                               ; preds = %43, %53
  %61 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %2, i64 0, i32 1
  %62 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %61, align 8
  %63 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #10
  %64 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #10
  %65 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #10
  %66 = bitcast %"class.SkSL::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #10
  %67 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 18
  %68 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %67, align 8, !noalias !3
  %69 = icmp eq %"class.SkSL::Type"* %68, null
  %70 = select i1 %69, %"class.SkSL::Type"* %0, %"class.SkSL::Type"* %68
  %71 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %70, i64 0, i32 0, i32 1, i32 0
  %72 = load i8*, i8** %71, align 8, !noalias !3
  %73 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %70, i64 0, i32 0, i32 1, i32 1
  %74 = load i64, i64* %73, align 8, !noalias !3
  %75 = icmp ugt i64 %74, -17
  br i1 %75, label %76, label %78

76:                                               ; preds = %60
  %77 = bitcast %"class.SkSL::String"* %10 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %77) #11
  unreachable

78:                                               ; preds = %60
  %79 = icmp ult i64 %74, 23
  br i1 %79, label %88, label %80

80:                                               ; preds = %78
  %81 = add nuw i64 %74, 16
  %82 = and i64 %81, -16
  %83 = call i8* @_Znwm(i64 %82) #12
  %84 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %83, i8** %84, align 8, !alias.scope !3
  %85 = or i64 %82, -9223372036854775808
  %86 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %85, i64* %86, align 8, !alias.scope !3
  %87 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %74, i64* %87, align 8, !alias.scope !3
  br label %93

88:                                               ; preds = %78
  %89 = trunc i64 %74 to i8
  %90 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  store i8 %89, i8* %91, align 1, !alias.scope !3
  %92 = icmp eq i64 %74, 0
  br i1 %92, label %95, label %93

93:                                               ; preds = %88, %80
  %94 = phi i8* [ %83, %80 ], [ %66, %88 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %94, i8* align 1 %72, i64 %74, i1 false) #10
  br label %95

95:                                               ; preds = %88, %93
  %96 = phi i8* [ %66, %88 ], [ %94, %93 ]
  %97 = getelementptr inbounds i8, i8* %96, i64 %74
  store i8 0, i8* %97, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %9, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %10) #10
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %8, %"class.SkSL::String"* nonnull %9, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #10
  %98 = bitcast %"class.SkSL::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #10
  %99 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %29, align 8
  %100 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %99, i64 3
  %101 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %100, align 8
  %102 = call dereferenceable(184) %"class.SkSL::Type"* %101(%"class.SkSL::Expression"* nonnull %1) #10
  %103 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %102, i64 0, i32 18
  %104 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %103, align 8, !noalias !6
  %105 = icmp eq %"class.SkSL::Type"* %104, null
  %106 = select i1 %105, %"class.SkSL::Type"* %102, %"class.SkSL::Type"* %104
  %107 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %106, i64 0, i32 0, i32 1, i32 0
  %108 = load i8*, i8** %107, align 8, !noalias !6
  %109 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %106, i64 0, i32 0, i32 1, i32 1
  %110 = load i64, i64* %109, align 8, !noalias !6
  %111 = icmp ugt i64 %110, -17
  br i1 %111, label %112, label %114

112:                                              ; preds = %95
  %113 = bitcast %"class.SkSL::String"* %11 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %113) #11
  unreachable

114:                                              ; preds = %95
  %115 = icmp ult i64 %110, 23
  br i1 %115, label %124, label %116

116:                                              ; preds = %114
  %117 = add nuw i64 %110, 16
  %118 = and i64 %117, -16
  %119 = call i8* @_Znwm(i64 %118) #12
  %120 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %119, i8** %120, align 8, !alias.scope !6
  %121 = or i64 %118, -9223372036854775808
  %122 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %121, i64* %122, align 8, !alias.scope !6
  %123 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %110, i64* %123, align 8, !alias.scope !6
  br label %129

124:                                              ; preds = %114
  %125 = trunc i64 %110 to i8
  %126 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %127 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %126, i64 0, i32 1, i32 0
  store i8 %125, i8* %127, align 1, !alias.scope !6
  %128 = icmp eq i64 %110, 0
  br i1 %128, label %131, label %129

129:                                              ; preds = %124, %116
  %130 = phi i8* [ %119, %116 ], [ %98, %124 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %130, i8* align 1 %108, i64 %110, i1 false) #10
  br label %131

131:                                              ; preds = %124, %129
  %132 = phi i8* [ %98, %124 ], [ %130, %129 ]
  %133 = getelementptr inbounds i8, i8* %132, i64 %110
  store i8 0, i8* %133, align 1
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::String"* nonnull %8, %"class.SkSL::String"* nonnull dereferenceable(24) %11) #10
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %6, %"class.SkSL::String"* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #10
  %134 = bitcast %"class.SkSL::ErrorReporter"* %62 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %135 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %135, i64 2
  %137 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %136, align 8
  call void %137(%"class.SkSL::ErrorReporter"* %62, i32 %19, %"class.SkSL::String"* nonnull %6) #10
  %138 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %139 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %138, i64 0, i32 1, i32 0
  %140 = load i8, i8* %139, align 1
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %142, label %145

142:                                              ; preds = %131
  %143 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load i8*, i8** %143, align 8
  call void @_ZdlPv(i8* %144) #12
  br label %145

145:                                              ; preds = %131, %142
  %146 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %146, i64 0, i32 1, i32 0
  %148 = load i8, i8* %147, align 1
  %149 = icmp slt i8 %148, 0
  br i1 %149, label %150, label %153

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load i8*, i8** %151, align 8
  call void @_ZdlPv(i8* %152) #12
  br label %153

153:                                              ; preds = %145, %150
  %154 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %155 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %154, i64 0, i32 1, i32 0
  %156 = load i8, i8* %155, align 1
  %157 = icmp slt i8 %156, 0
  br i1 %157, label %158, label %161

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load i8*, i8** %159, align 8
  call void @_ZdlPv(i8* %160) #12
  br label %161

161:                                              ; preds = %153, %158
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #10
  %162 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %162, i64 0, i32 1, i32 0
  %164 = load i8, i8* %163, align 1
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %166, label %169

166:                                              ; preds = %161
  %167 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load i8*, i8** %167, align 8
  call void @_ZdlPv(i8* %168) #12
  br label %169

169:                                              ; preds = %161, %166
  %170 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %171 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %170, i64 0, i32 1, i32 0
  %172 = load i8, i8* %171, align 1
  %173 = icmp slt i8 %172, 0
  br i1 %173, label %174, label %177

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load i8*, i8** %175, align 8
  call void @_ZdlPv(i8* %176) #12
  br label %177

177:                                              ; preds = %169, %174
  %178 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %179 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %178, i64 0, i32 1, i32 0
  %180 = load i8, i8* %179, align 1
  %181 = icmp slt i8 %180, 0
  br i1 %181, label %182, label %185

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load i8*, i8** %183, align 8
  call void @_ZdlPv(i8* %184) #12
  br label %185

185:                                              ; preds = %177, %182
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #10
  br label %259

186:                                              ; preds = %53
  %187 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 3
  %188 = load i32, i32* %187, align 8
  switch i32 %188, label %195 [
    i32 8, label %189
    i32 11, label %192
    i32 4, label %192
  ]

189:                                              ; preds = %186
  %190 = call %"class.SkSL::Expression"* @_ZN4SkSL21ConstructorScalarCast4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744) %2, i32 %19, %"class.SkSL::Type"* dereferenceable(184) %0, %"class.SkSL::Expression"* nonnull %1) #10
  %191 = ptrtoint %"class.SkSL::Expression"* %190 to i64
  br label %264

192:                                              ; preds = %186, %186
  %193 = call %"class.SkSL::Expression"* @_ZN4SkSL23ConstructorCompoundCast4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744) %2, i32 %19, %"class.SkSL::Type"* dereferenceable(184) %0, %"class.SkSL::Expression"* nonnull %1) #10
  %194 = ptrtoint %"class.SkSL::Expression"* %193 to i64
  br label %264

195:                                              ; preds = %186
  %196 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %2, i64 0, i32 1
  %197 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %196, align 8
  %198 = bitcast %"class.SkSL::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %198) #10
  %199 = bitcast %"class.SkSL::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %199) #10
  %200 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 18
  %201 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %200, align 8, !noalias !9
  %202 = icmp eq %"class.SkSL::Type"* %201, null
  %203 = select i1 %202, %"class.SkSL::Type"* %0, %"class.SkSL::Type"* %201
  %204 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %203, i64 0, i32 0, i32 1, i32 0
  %205 = load i8*, i8** %204, align 8, !noalias !9
  %206 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %203, i64 0, i32 0, i32 1, i32 1
  %207 = load i64, i64* %206, align 8, !noalias !9
  %208 = icmp ugt i64 %207, -17
  br i1 %208, label %209, label %211

209:                                              ; preds = %195
  %210 = bitcast %"class.SkSL::String"* %14 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %210) #11
  unreachable

211:                                              ; preds = %195
  %212 = icmp ult i64 %207, 23
  br i1 %212, label %221, label %213

213:                                              ; preds = %211
  %214 = add nuw i64 %207, 16
  %215 = and i64 %214, -16
  %216 = call i8* @_Znwm(i64 %215) #12
  %217 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %216, i8** %217, align 8, !alias.scope !9
  %218 = or i64 %215, -9223372036854775808
  %219 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %218, i64* %219, align 8, !alias.scope !9
  %220 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %207, i64* %220, align 8, !alias.scope !9
  br label %226

221:                                              ; preds = %211
  %222 = trunc i64 %207 to i8
  %223 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %224 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %223, i64 0, i32 1, i32 0
  store i8 %222, i8* %224, align 1, !alias.scope !9
  %225 = icmp eq i64 %207, 0
  br i1 %225, label %228, label %226

226:                                              ; preds = %221, %213
  %227 = phi i8* [ %216, %213 ], [ %199, %221 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %227, i8* align 1 %205, i64 %207, i1 false) #10
  br label %228

228:                                              ; preds = %221, %226
  %229 = phi i8* [ %199, %221 ], [ %227, %226 ]
  %230 = getelementptr inbounds i8, i8* %229, i64 %207
  store i8 0, i8* %230, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %13, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %14) #10
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %12, %"class.SkSL::String"* nonnull %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #10
  %231 = bitcast %"class.SkSL::ErrorReporter"* %197 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %232 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %231, align 8
  %233 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %232, i64 2
  %234 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %233, align 8
  call void %234(%"class.SkSL::ErrorReporter"* %197, i32 %19, %"class.SkSL::String"* nonnull %12) #10
  %235 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %236 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %235, i64 0, i32 1, i32 0
  %237 = load i8, i8* %236, align 1
  %238 = icmp slt i8 %237, 0
  br i1 %238, label %239, label %242

239:                                              ; preds = %228
  %240 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load i8*, i8** %240, align 8
  call void @_ZdlPv(i8* %241) #12
  br label %242

242:                                              ; preds = %228, %239
  %243 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %244 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %243, i64 0, i32 1, i32 0
  %245 = load i8, i8* %244, align 1
  %246 = icmp slt i8 %245, 0
  br i1 %246, label %247, label %250

247:                                              ; preds = %242
  %248 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = load i8*, i8** %248, align 8
  call void @_ZdlPv(i8* %249) #12
  br label %250

250:                                              ; preds = %242, %247
  %251 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %252 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %251, i64 0, i32 1, i32 0
  %253 = load i8, i8* %252, align 1
  %254 = icmp slt i8 %253, 0
  br i1 %254, label %255, label %258

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %257 = load i8*, i8** %256, align 8
  call void @_ZdlPv(i8* %257) #12
  br label %258

258:                                              ; preds = %250, %255
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %199) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %198) #10
  br label %259

259:                                              ; preds = %185, %258, %25, %22
  %260 = bitcast %"class.SkSL::Expression"* %1 to void (%"class.SkSL::Expression"*)***
  %261 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %260, align 8
  %262 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %261, i64 1
  %263 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %262, align 8
  call void %263(%"class.SkSL::Expression"* nonnull %1) #10
  br label %264

264:                                              ; preds = %3, %28, %192, %189, %259
  %265 = phi i64 [ 0, %259 ], [ %15, %28 ], [ %194, %192 ], [ %191, %189 ], [ 0, %3 ]
  %266 = inttoptr i64 %265 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %266
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"*, i32, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = tail call i64 @strlen(i8* %2) #10
  %6 = icmp ugt i64 %5, -17
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = bitcast %"class.SkSL::String"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %8) #11
  unreachable

9:                                                ; preds = %3
  %10 = icmp ult i64 %5, 23
  br i1 %10, label %20, label %11

11:                                               ; preds = %9
  %12 = add nuw i64 %5, 16
  %13 = and i64 %12, -16
  %14 = tail call i8* @_Znwm(i64 %13) #12
  %15 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %14, i8** %15, align 8
  %16 = or i64 %13, -9223372036854775808
  %17 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %5, i64* %18, align 8
  %19 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %26

20:                                               ; preds = %9
  %21 = trunc i64 %5 to i8
  %22 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = bitcast %"class.SkSL::String"* %4 to i8*
  %25 = icmp eq i64 %5, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20, %11
  %27 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %22, %20 ], [ %19, %11 ]
  %28 = phi i8* [ %24, %20 ], [ %14, %11 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 %2, i64 %5, i1 false) #10
  br label %29

29:                                               ; preds = %20, %26
  %30 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %22, %20 ], [ %27, %26 ]
  %31 = phi i8* [ %24, %20 ], [ %28, %26 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %5
  store i8 0, i8* %32, align 1
  %33 = bitcast %"class.SkSL::ErrorReporter"* %0 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %34 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %34, i64 2
  %36 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %35, align 8
  call void %36(%"class.SkSL::ErrorReporter"* %0, i32 %1, %"class.SkSL::String"* nonnull %4) #10
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #12
  br label %43

43:                                               ; preds = %29, %40
  ret void
}

declare void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* sret, i8*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*) local_unnamed_addr #3

declare void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* sret, %"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #3

declare %"class.SkSL::Expression"* @_ZN4SkSL21ConstructorScalarCast4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::Expression"*) local_unnamed_addr #3

declare %"class.SkSL::Expression"* @_ZN4SkSL23ConstructorCompoundCast4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::Expression"*) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4SkSL4Type17isOrContainsArrayEv(%"class.SkSL::Type"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 9
  br i1 %4, label %5, label %21

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 0
  %7 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %6, align 8
  %8 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 1
  %9 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %8, align 8
  %10 = icmp eq %"struct.SkSL::Type::Field"* %7, %9
  br i1 %10, label %19, label %13

11:                                               ; preds = %13
  %12 = icmp eq %"struct.SkSL::Type::Field"* %18, %9
  br i1 %12, label %19, label %13

13:                                               ; preds = %5, %11
  %14 = phi %"struct.SkSL::Type::Field"* [ %18, %11 ], [ %7, %5 ]
  %15 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %14, i64 0, i32 2
  %16 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %15, align 8
  %17 = tail call zeroext i1 @_ZNK4SkSL4Type17isOrContainsArrayEv(%"class.SkSL::Type"* %16)
  %18 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %14, i64 1
  br i1 %17, label %19, label %11

19:                                               ; preds = %11, %13, %5
  %20 = phi i1 [ false, %5 ], [ true, %13 ], [ false, %11 ]
  ret i1 %20

21:                                               ; preds = %1
  %22 = icmp eq i32 %3, 0
  ret i1 %22
}

declare zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"*, i8*, i64) local_unnamed_addr #3

declare i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL4TypeD2Ev(%"class.SkSL::Type"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 0
  %4 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %3, align 8
  %5 = icmp eq %"struct.SkSL::Type::Field"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.SkSL::Type::Field"* %4 to i64
  %8 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 1
  %9 = bitcast %"struct.SkSL::Type::Field"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.SkSL::Type::Field"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7, i32 0, i32 0
  %13 = load %"class.SkSL::Type"**, %"class.SkSL::Type"*** %12, align 8
  %14 = icmp eq %"class.SkSL::Type"** %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"class.SkSL::Type"** %13 to i64
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7, i32 0, i32 1
  %18 = bitcast %"class.SkSL::Type"*** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.SkSL::Type"** %13 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 2, i32 0
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %20, %26
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL4TypeD0Ev(%"class.SkSL::Type"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 0
  %4 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %3, align 8
  %5 = icmp eq %"struct.SkSL::Type::Field"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.SkSL::Type::Field"* %4 to i64
  %8 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 1
  %9 = bitcast %"struct.SkSL::Type::Field"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.SkSL::Type::Field"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7, i32 0, i32 0
  %13 = load %"class.SkSL::Type"**, %"class.SkSL::Type"*** %12, align 8
  %14 = icmp eq %"class.SkSL::Type"** %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"class.SkSL::Type"** %13 to i64
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7, i32 0, i32 1
  %18 = bitcast %"class.SkSL::Type"*** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.SkSL::Type"** %13 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %15, %11
  %21 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 2, i32 0
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %20, %26
  %30 = bitcast %"class.SkSL::Type"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %30) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL4Type11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Type"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 18
  %4 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %3, align 8, !noalias !12
  %5 = icmp eq %"class.SkSL::Type"* %4, null
  %6 = select i1 %5, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %4
  %7 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %6, i64 0, i32 0, i32 1, i32 0
  %8 = load i8*, i8** %7, align 8, !noalias !12
  %9 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %6, i64 0, i32 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8, !noalias !12
  %11 = icmp ugt i64 %10, -17
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.SkSL::String"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = icmp ult i64 %10, 23
  br i1 %15, label %24, label %16

16:                                               ; preds = %14
  %17 = add nuw i64 %10, 16
  %18 = and i64 %17, -16
  %19 = tail call i8* @_Znwm(i64 %18) #12
  %20 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %19, i8** %20, align 8, !alias.scope !12
  %21 = or i64 %18, -9223372036854775808
  %22 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %21, i64* %22, align 8, !alias.scope !12
  %23 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %10, i64* %23, align 8, !alias.scope !12
  br label %30

24:                                               ; preds = %14
  %25 = trunc i64 %10 to i8
  %26 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  store i8 %25, i8* %27, align 1, !alias.scope !12
  %28 = bitcast %"class.SkSL::String"* %0 to i8*
  %29 = icmp eq i64 %10, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %24, %16
  %31 = phi i8* [ %19, %16 ], [ %28, %24 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %31, i8* align 1 %8, i64 %10, i1 false) #10
  br label %32

32:                                               ; preds = %24, %30
  %33 = phi i8* [ %28, %24 ], [ %31, %30 ]
  %34 = getelementptr inbounds i8, i8* %33, i64 %10
  store i8 0, i8* %34, align 1
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN4SkSL4Pool10FreeMemoryEPv(i8*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"*, %"class.SkSL::Symbol"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.37"*, %"class.std::__1::unique_ptr.39"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.39"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.37"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.37"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.39"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.39"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.39"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.39"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.39"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.39"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.39"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.39"*, %"class.std::__1::unique_ptr.39"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.39"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.39"*, %"class.std::__1::unique_ptr.39"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.39"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.SkSL::Symbol"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.39"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.39"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.39"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.39"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !15

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.39"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.39"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.39"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.39"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.39"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.39"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.39"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.39"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.39"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.39"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.39"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.39"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.39"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.39"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.39"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.39"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.39"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.39"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.39"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.39"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.39"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.39"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.39"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.39"*, %"class.std::__1::unique_ptr.39"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.39"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.39"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.39"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.39"*
  %138 = icmp eq %"class.std::__1::unique_ptr.39"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.39"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %142, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %142, align 8
  %144 = icmp eq %"class.SkSL::Symbol"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.SkSL::Symbol"* %143 to void (%"class.SkSL::Symbol"*)***
  %147 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %147, i64 1
  %149 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %148, align 8
  tail call void %149(%"class.SkSL::Symbol"* nonnull %143) #10
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.39"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #12
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4SkSL4Type11displayNameEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!8 = distinct !{!8, !"_ZNK4SkSL4Type11displayNameEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!11 = distinct !{!11, !"_ZNK4SkSL4Type11displayNameEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!14 = distinct !{!14, !"_ZNK4SkSL4Type11displayNameEv"}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.unroll.disable"}
