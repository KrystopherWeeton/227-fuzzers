; ModuleID = '../../components/cbor/diagnostic_writer.cc'
source_filename = "../../components/cbor/diagnostic_writer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.3 }
%union.anon.3 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.cbor::Value" = type { i32, %union.anon }
%union.anon = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"class.cbor::Value"*, %"class.cbor::Value"*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.cbor::Value"* }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.14" }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.16" }
%"struct.std::__1::pair" = type { %"class.cbor::Value", %"class.cbor::Value" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::pair"* }

@.str = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"null\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"undefined\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"none\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4cbor16DiagnosticWriter5WriteERKNS_5ValueEm(%"class.std::__1::basic_string"* noalias sret, %"class.cbor::Value"* dereferenceable(32), i64) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #7
  %5 = tail call fastcc zeroext i1 @_ZN4cborL9SerializeERKNS_5ValueEmPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.cbor::Value"* dereferenceable(32) %1, i64 %2, %"class.std::__1::basic_string"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN4cborL9SerializeERKNS_5ValueEmPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.cbor::Value"* dereferenceable(32), i64, %"class.std::__1::basic_string"*) unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = getelementptr inbounds %"class.cbor::Value", %"class.cbor::Value"* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  switch i32 %10, label %272 [
    i32 0, label %11
    i32 1, label %32
    i32 -2, label %53
    i32 2, label %95
    i32 3, label %137
    i32 4, label %191
    i32 5, label %223
    i32 7, label %260
    i32 -1, label %270
  ]

11:                                               ; preds = %3
  %12 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #7
  %13 = tail call dereferenceable(8) i64* @_ZNK4cbor5Value11GetUnsignedEv(%"class.cbor::Value"* %0) #7
  %14 = load i64, i64* %13, align 8
  call void @_ZN4base14NumberToStringEl(%"class.std::__1::basic_string"* nonnull sret %4, i64 %14) #7
  %15 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %17 to i64
  %24 = select i1 %18, i8* %20, i8* %12
  %25 = select i1 %18, i64 %22, i64 %23
  %26 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %2, i8* %24, i64 %25) #7
  %27 = load i8, i8* %16, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %11
  %30 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %30) #8
  br label %31

31:                                               ; preds = %11, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #7
  br label %272

32:                                               ; preds = %3
  %33 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #7
  %34 = tail call dereferenceable(8) i64* @_ZNK4cbor5Value11GetNegativeEv(%"class.cbor::Value"* %0) #7
  %35 = load i64, i64* %34, align 8
  call void @_ZN4base14NumberToStringEl(%"class.std::__1::basic_string"* nonnull sret %5, i64 %35) #7
  %36 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = zext i8 %38 to i64
  %45 = select i1 %39, i8* %41, i8* %33
  %46 = select i1 %39, i64 %43, i64 %44
  %47 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %2, i8* %45, i64 %46) #7
  %48 = load i8, i8* %37, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %32
  %51 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %51) #8
  br label %52

52:                                               ; preds = %32, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #7
  br label %272

53:                                               ; preds = %3
  %54 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZNK4cbor5Value14GetInvalidUTF8Ev(%"class.cbor::Value"* %0) #7
  %55 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 0, i64 24, i1 false) #7
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %54, i64 0, i32 0, i32 1
  %57 = bitcast i8** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.std::__1::vector"* %54 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = sub i64 %58, %60
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %85, label %63

63:                                               ; preds = %53
  %64 = icmp slt i64 %61, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %63
  %66 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %66) #9
  unreachable

67:                                               ; preds = %63
  %68 = tail call i8* @_Znwm(i64 %61) #8
  %69 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  store i8* %68, i8** %69, align 8
  %70 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  store i8* %68, i8** %70, align 8
  %71 = getelementptr inbounds i8, i8* %68, i64 %61
  %72 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8* %71, i8** %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %54, i64 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = load i64, i64* %57, align 8
  %76 = bitcast i8** %69 to i64*
  %77 = ptrtoint i8* %74 to i64
  %78 = sub i64 %75, %77
  %79 = icmp sgt i64 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %67
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %68, i8* align 1 %74, i64 %78, i1 false) #7
  %81 = getelementptr inbounds i8, i8* %68, i64 %78
  br label %82

82:                                               ; preds = %80, %67
  %83 = phi i8* [ %81, %80 ], [ %68, %67 ]
  %84 = ptrtoint i8* %83 to i64
  store i64 %84, i64* %76, align 8
  br label %85

85:                                               ; preds = %53, %82
  %86 = call fastcc zeroext i1 @_ZN4cborL9AppendHexENSt3__16vectorIhNS0_9allocatorIhEEEEcmPNS0_12basic_stringIcNS0_11char_traitsIcEENS2_IcEEEE(%"class.std::__1::vector"* nonnull %6, i8 signext 115, i64 %1, %"class.std::__1::basic_string"* %2)
  %87 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = icmp eq i8* %88, null
  br i1 %89, label %94, label %90

90:                                               ; preds = %85
  %91 = ptrtoint i8* %88 to i64
  %92 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %93 = bitcast i8** %92 to i64*
  store i64 %91, i64* %93, align 8
  tail call void @_ZdlPv(i8* nonnull %88) #8
  br label %94

94:                                               ; preds = %85, %90
  br i1 %86, label %272, label %273

95:                                               ; preds = %3
  %96 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZNK4cbor5Value13GetBytestringEv(%"class.cbor::Value"* %0) #7
  %97 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 0, i64 24, i1 false) #7
  %98 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %96, i64 0, i32 0, i32 1
  %99 = bitcast i8** %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.std::__1::vector"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = sub i64 %100, %102
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %127, label %105

105:                                              ; preds = %95
  %106 = icmp slt i64 %103, 0
  br i1 %106, label %107, label %109

107:                                              ; preds = %105
  %108 = bitcast %"class.std::__1::vector"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %108) #9
  unreachable

109:                                              ; preds = %105
  %110 = tail call i8* @_Znwm(i64 %103) #8
  %111 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  store i8* %110, i8** %111, align 8
  %112 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  store i8* %110, i8** %112, align 8
  %113 = getelementptr inbounds i8, i8* %110, i64 %103
  %114 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8* %113, i8** %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %96, i64 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  %117 = load i64, i64* %99, align 8
  %118 = bitcast i8** %111 to i64*
  %119 = ptrtoint i8* %116 to i64
  %120 = sub i64 %117, %119
  %121 = icmp sgt i64 %120, 0
  br i1 %121, label %122, label %124

122:                                              ; preds = %109
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %110, i8* align 1 %116, i64 %120, i1 false) #7
  %123 = getelementptr inbounds i8, i8* %110, i64 %120
  br label %124

124:                                              ; preds = %122, %109
  %125 = phi i8* [ %123, %122 ], [ %110, %109 ]
  %126 = ptrtoint i8* %125 to i64
  store i64 %126, i64* %118, align 8
  br label %127

127:                                              ; preds = %95, %124
  %128 = call fastcc zeroext i1 @_ZN4cborL9AppendHexENSt3__16vectorIhNS0_9allocatorIhEEEEcmPNS0_12basic_stringIcNS0_11char_traitsIcEENS2_IcEEEE(%"class.std::__1::vector"* nonnull %7, i8 signext 104, i64 %1, %"class.std::__1::basic_string"* %2)
  %129 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  %131 = icmp eq i8* %130, null
  br i1 %131, label %136, label %132

132:                                              ; preds = %127
  %133 = ptrtoint i8* %130 to i64
  %134 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %135 = bitcast i8** %134 to i64*
  store i64 %133, i64* %135, align 8
  tail call void @_ZdlPv(i8* nonnull %130) #8
  br label %136

136:                                              ; preds = %127, %132
  br i1 %128, label %272, label %273

137:                                              ; preds = %3
  %138 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %138) #7
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %138, i8 0, i64 24, i1 false) #7
  %141 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4cbor5Value9GetStringEv(%"class.cbor::Value"* %0) #7
  %142 = bitcast %"class.std::__1::basic_string"* %141 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %143 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %142, i64 0, i32 1, i32 0
  %144 = load i8, i8* %143, align 1
  %145 = icmp slt i8 %144, 0
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %141, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load i8*, i8** %146, align 8
  %148 = bitcast %"class.std::__1::basic_string"* %141 to i8*
  %149 = select i1 %145, i8* %147, i8* %148
  %150 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %141, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %151 = load i64, i64* %150, align 8
  %152 = zext i8 %144 to i64
  %153 = select i1 %145, i64 %151, i64 %152
  %154 = call zeroext i1 @_ZN4base16EscapeJSONStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEbPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(i8* %149, i64 %153, i1 zeroext true, %"class.std::__1::basic_string"* nonnull %8) #7
  %155 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %156 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %155, i64 0, i32 1, i32 0
  %157 = load i8, i8* %156, align 1
  %158 = icmp slt i8 %157, 0
  br i1 %158, label %159, label %162

159:                                              ; preds = %137
  %160 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %161 = load i64, i64* %160, align 8
  br label %164

162:                                              ; preds = %137
  %163 = zext i8 %157 to i64
  br label %164

164:                                              ; preds = %159, %162
  %165 = phi i64 [ %161, %159 ], [ %163, %162 ]
  %166 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %167 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %166, i64 0, i32 1, i32 0
  %168 = load i8, i8* %167, align 1
  %169 = icmp slt i8 %168, 0
  %170 = load i64, i64* %140, align 8
  %171 = zext i8 %168 to i64
  %172 = select i1 %169, i64 %170, i64 %171
  %173 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %165, i64 %172) #7
  %174 = extractvalue { i64, i1 } %173, 1
  %175 = extractvalue { i64, i1 } %173, 0
  %176 = select i1 %174, i64 -1, i64 %175, !prof !2
  %177 = icmp ugt i64 %176, %1
  br i1 %177, label %187, label %178

178:                                              ; preds = %164
  %179 = load i8*, i8** %139, align 8
  %180 = select i1 %169, i8* %179, i8* %138
  %181 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %2, i8* %180, i64 %172) #7
  %182 = load i8, i8* %167, align 1
  %183 = icmp slt i8 %182, 0
  br i1 %183, label %184, label %186

184:                                              ; preds = %178
  %185 = load i8*, i8** %139, align 8
  call void @_ZdlPv(i8* %185) #8
  br label %186

186:                                              ; preds = %178, %184
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138) #7
  br label %272

187:                                              ; preds = %164
  br i1 %169, label %188, label %190

188:                                              ; preds = %187
  %189 = load i8*, i8** %139, align 8
  call void @_ZdlPv(i8* %189) #8
  br label %190

190:                                              ; preds = %187, %188
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138) #7
  br label %273

191:                                              ; preds = %3
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %2, i8 signext 91) #7
  %192 = tail call dereferenceable(24) %"class.std::__1::vector.7"* @_ZNK4cbor5Value8GetArrayEv(%"class.cbor::Value"* %0) #7
  %193 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %192, i64 0, i32 0, i32 0
  %194 = load %"class.cbor::Value"*, %"class.cbor::Value"** %193, align 8
  %195 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %192, i64 0, i32 0, i32 1
  %196 = load %"class.cbor::Value"*, %"class.cbor::Value"** %195, align 8
  %197 = icmp eq %"class.cbor::Value"* %194, %196
  br i1 %197, label %222, label %198

198:                                              ; preds = %191
  %199 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %200 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %199, i64 0, i32 1, i32 0
  %201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %204

202:                                              ; preds = %218
  %203 = icmp eq %"class.cbor::Value"* %221, %196
  br i1 %203, label %222, label %204

204:                                              ; preds = %198, %202
  %205 = phi i1 [ false, %198 ], [ true, %202 ]
  %206 = phi %"class.cbor::Value"* [ %194, %198 ], [ %221, %202 ]
  br i1 %205, label %207, label %209

207:                                              ; preds = %204
  %208 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0)) #7
  br label %209

209:                                              ; preds = %204, %207
  %210 = tail call fastcc zeroext i1 @_ZN4cborL9SerializeERKNS_5ValueEmPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.cbor::Value"* dereferenceable(32) %206, i64 %1, %"class.std::__1::basic_string"* %2)
  br i1 %210, label %211, label %273

211:                                              ; preds = %209
  %212 = load i8, i8* %200, align 1
  %213 = icmp slt i8 %212, 0
  br i1 %213, label %214, label %216

214:                                              ; preds = %211
  %215 = load i64, i64* %201, align 8
  br label %218

216:                                              ; preds = %211
  %217 = zext i8 %212 to i64
  br label %218

218:                                              ; preds = %214, %216
  %219 = phi i64 [ %215, %214 ], [ %217, %216 ]
  %220 = icmp ugt i64 %219, %1
  %221 = getelementptr inbounds %"class.cbor::Value", %"class.cbor::Value"* %206, i64 1
  br i1 %220, label %273, label %202

222:                                              ; preds = %202, %191
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %2, i8 signext 93) #7
  br label %272

223:                                              ; preds = %3
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %2, i8 signext 123) #7
  %224 = tail call dereferenceable(24) %"class.base::flat_map"* @_ZNK4cbor5Value6GetMapEv(%"class.cbor::Value"* %0) #7
  %225 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %224, i64 0, i32 0, i32 0, i32 0, i32 0
  %226 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %225, align 8
  %227 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %224, i64 0, i32 0, i32 0, i32 0, i32 1
  %228 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %227, align 8
  %229 = icmp eq %"struct.std::__1::pair"* %226, %228
  br i1 %229, label %259, label %230

230:                                              ; preds = %223
  %231 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %232 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %231, i64 0, i32 1, i32 0
  %233 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %236

234:                                              ; preds = %255
  %235 = icmp eq %"struct.std::__1::pair"* %258, %228
  br i1 %235, label %259, label %236

236:                                              ; preds = %230, %234
  %237 = phi i1 [ false, %230 ], [ true, %234 ]
  %238 = phi %"struct.std::__1::pair"* [ %226, %230 ], [ %258, %234 ]
  br i1 %237, label %239, label %241

239:                                              ; preds = %236
  %240 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0)) #7
  br label %241

241:                                              ; preds = %236, %239
  %242 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %238, i64 0, i32 0
  %243 = tail call fastcc zeroext i1 @_ZN4cborL9SerializeERKNS_5ValueEmPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.cbor::Value"* dereferenceable(32) %242, i64 %1, %"class.std::__1::basic_string"* %2)
  br i1 %243, label %244, label %273

244:                                              ; preds = %241
  %245 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)) #7
  %246 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %238, i64 0, i32 1
  %247 = tail call fastcc zeroext i1 @_ZN4cborL9SerializeERKNS_5ValueEmPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.cbor::Value"* dereferenceable(32) %246, i64 %1, %"class.std::__1::basic_string"* %2)
  br i1 %247, label %248, label %273

248:                                              ; preds = %244
  %249 = load i8, i8* %232, align 1
  %250 = icmp slt i8 %249, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %248
  %252 = load i64, i64* %233, align 8
  br label %255

253:                                              ; preds = %248
  %254 = zext i8 %249 to i64
  br label %255

255:                                              ; preds = %251, %253
  %256 = phi i64 [ %252, %251 ], [ %254, %253 ]
  %257 = icmp ugt i64 %256, %1
  %258 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %238, i64 1
  br i1 %257, label %273, label %234

259:                                              ; preds = %234, %223
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %2, i8 signext 125) #7
  br label %272

260:                                              ; preds = %3
  %261 = tail call i32 @_ZNK4cbor5Value14GetSimpleValueEv(%"class.cbor::Value"* %0) #7
  switch i32 %261, label %272 [
    i32 20, label %262
    i32 21, label %264
    i32 22, label %266
    i32 23, label %268
  ]

262:                                              ; preds = %260
  %263 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)) #7
  br label %272

264:                                              ; preds = %260
  %265 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #7
  br label %272

266:                                              ; preds = %260
  %267 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0)) #7
  br label %272

268:                                              ; preds = %260
  %269 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0)) #7
  br label %272

270:                                              ; preds = %3
  %271 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0)) #7
  br label %272

272:                                              ; preds = %259, %222, %186, %94, %136, %262, %264, %266, %268, %260, %3, %270, %52, %31
  br label %273

273:                                              ; preds = %255, %244, %241, %218, %209, %190, %136, %94, %272
  %274 = phi i1 [ true, %272 ], [ false, %190 ], [ false, %94 ], [ false, %136 ], [ false, %209 ], [ false, %218 ], [ false, %241 ], [ false, %244 ], [ false, %255 ]
  ret i1 %274
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base14NumberToStringEl(%"class.std::__1::basic_string"* sret, i64) local_unnamed_addr #2

declare dereferenceable(8) i64* @_ZNK4cbor5Value11GetUnsignedEv(%"class.cbor::Value"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(8) i64* @_ZNK4cbor5Value11GetNegativeEv(%"class.cbor::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN4cborL9AppendHexENSt3__16vectorIhNS0_9allocatorIhEEEEcmPNS0_12basic_stringIcNS0_11char_traitsIcEENS2_IcEEEE(%"class.std::__1::vector"* nocapture readonly, i8 signext, i64, %"class.std::__1::basic_string"*) unnamed_addr #0 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %3, i8 signext %1) #7
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %3, i8 signext 39) #7
  %6 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  br label %15

13:                                               ; preds = %4
  %14 = zext i8 %8 to i64
  br label %15

15:                                               ; preds = %10, %13
  %16 = phi i64 [ %12, %10 ], [ %14, %13 ]
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector"* %0 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %22, i64 2) #7
  %24 = extractvalue { i64, i1 } %23, 1
  %25 = extractvalue { i64, i1 } %23, 0
  %26 = select i1 %24, i64 -1, i64 %25, !prof !2
  %27 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %16, i64 %26) #7
  %28 = extractvalue { i64, i1 } %27, 1
  %29 = extractvalue { i64, i1 } %27, 0
  %30 = select i1 %28, i64 -1, i64 %29, !prof !2
  %31 = icmp ugt i64 %30, %2
  br i1 %31, label %52, label %32

32:                                               ; preds = %15
  %33 = inttoptr i64 %21 to i8*
  %34 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #7
  call void @_ZN4base9HexEncodeEPKvm(%"class.std::__1::basic_string"* nonnull sret %5, i8* %33, i64 %22) #7
  %35 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = zext i8 %37 to i64
  %44 = select i1 %38, i8* %40, i8* %34
  %45 = select i1 %38, i64 %42, i64 %43
  %46 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %3, i8* %44, i64 %45) #7
  %47 = load i8, i8* %36, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %32
  %50 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %50) #8
  br label %51

51:                                               ; preds = %32, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #7
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %3, i8 signext 39) #7
  br label %52

52:                                               ; preds = %15, %51
  %53 = phi i1 [ true, %51 ], [ false, %15 ]
  ret i1 %53
}

declare dereferenceable(24) %"class.std::__1::vector"* @_ZNK4cbor5Value14GetInvalidUTF8Ev(%"class.cbor::Value"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::vector"* @_ZNK4cbor5Value13GetBytestringEv(%"class.cbor::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base16EscapeJSONStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEbPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(i8*, i64, i1 zeroext, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4cbor5Value9GetStringEv(%"class.cbor::Value"*) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::vector.7"* @_ZNK4cbor5Value8GetArrayEv(%"class.cbor::Value"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

declare dereferenceable(24) %"class.base::flat_map"* @_ZNK4cbor5Value6GetMapEv(%"class.cbor::Value"*) local_unnamed_addr #2

declare i32 @_ZNK4cbor5Value14GetSimpleValueEv(%"class.cbor::Value"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN4base9HexEncodeEPKvm(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
