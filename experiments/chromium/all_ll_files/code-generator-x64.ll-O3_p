; ModuleID = '../../v8/src/compiler/backend/x64/code-generator-x64.cc'
source_filename = "../../v8/src/compiler/backend/x64/code-generator-x64.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::compiler::CodeGenerator" = type { %"class.v8::internal::compiler::GapResolver::Assembler", %"class.v8::internal::Zone"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::Linkage"*, %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::UnwindingInfoWriter", %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Label"*, %"class.v8::internal::Label", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition", %"class.v8::internal::TurboAssembler", %"class.v8::internal::compiler::GapResolver", %"class.v8::internal::SafepointTableBuilder", %"class.v8::internal::ZoneVector.863", i32, i32, i32, i32, %"class.v8::internal::ZoneDeque.870", %"class.v8::internal::ZoneDeque.884", i64, %"class.v8::internal::TranslationArrayBuilder", i32, i32, [5 x %"class.v8::internal::Label"], i64, i64, i8, i32, %"class.v8::internal::compiler::CodeGenerator::JumpTable"*, %"class.v8::internal::compiler::OutOfLineCode"*, %"class.v8::base::Optional.899", i32, i32, %"class.v8::internal::SourcePositionTableBuilder", %"class.v8::internal::ZoneVector.904", i32, i32, %"class.v8::internal::ZoneVector.667", %"struct.v8::internal::compiler::TurbolizerCodeOffsetsInfo", %"class.v8::internal::ZoneVector.911", i8* }
%"class.v8::internal::compiler::GapResolver::Assembler" = type { i32 (...)** }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.13", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.332", %"class.std::__1::unique_ptr.333", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.339", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.388", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.455", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.465", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.470", %"struct.std::__1::atomic.56", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.504", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.524"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.531", i32, i8, i8, i32, i32, %"class.std::__1::vector.537", %"class.std::__1::vector.537", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.544", i64, %"class.std::__1::unordered_map.545", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.205", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.64", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.604", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.610", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.644", %"class.std::__1::vector.648", %"class.std::__1::vector.648", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.8", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.41", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.65", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.69", %"class.std::__1::vector.69", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.82", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.160", %"class.std::__1::shared_ptr.166", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.167", %"class.std::__1::unique_ptr.193", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.199", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.212", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set", i8, [7 x i8], %"class.std::__1::unordered_map.241", %"class.std::__1::unordered_map.267", %"class.std::__1::unordered_map.241", %"class.std::__1::unordered_map.291", %"class.std::__1::vector.319", i8, %"class.std::__1::unique_ptr.326", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.19", %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.33", [4 x i8] }>
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21", %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i64 }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.36", %"struct.std::__1::atomic.36", %"struct.std::__1::atomic.36" }
%"struct.std::__1::atomic.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__cxx_atomic_impl.39" }
%"struct.std::__1::__cxx_atomic_impl.39" = type { %"struct.std::__1::__cxx_atomic_base_impl.40" }
%"struct.std::__1::__cxx_atomic_base_impl.40" = type { i64 }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__cxx_atomic_impl.43" }
%"struct.std::__1::__cxx_atomic_impl.43" = type { %"struct.std::__1::__cxx_atomic_base_impl.44" }
%"struct.std::__1::__cxx_atomic_base_impl.44" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.45" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type opaque
%"class.v8::internal::CodeSpace" = type opaque
%"class.v8::internal::OldLargeObjectSpace" = type opaque
%"class.v8::internal::CodeLargeObjectSpace" = type opaque
%"class.v8::internal::NewLargeObjectSpace" = type opaque
%"class.v8::internal::ReadOnlySpace" = type opaque
%"class.v8::internal::OldSpace" = type opaque
%"class.v8::internal::MapSpace" = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type opaque
%"class.v8::internal::Space" = type opaque
%"class.v8::internal::LocalHeap" = type opaque
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.56", %"struct.std::__1::atomic.60", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.60" = type { %"struct.std::__1::__atomic_base.61" }
%"struct.std::__1::__atomic_base.61" = type { %"struct.std::__1::__cxx_atomic_impl.62" }
%"struct.std::__1::__cxx_atomic_impl.62" = type { %"struct.std::__1::__cxx_atomic_base_impl.63" }
%"struct.std::__1::__cxx_atomic_base_impl.63" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.64" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.65" = type { %"struct.std::__1::__atomic_base.66" }
%"struct.std::__1::__atomic_base.66" = type { %"struct.std::__1::__cxx_atomic_impl.67" }
%"struct.std::__1::__cxx_atomic_impl.67" = type { %"struct.std::__1::__cxx_atomic_base_impl.68" }
%"struct.std::__1::__cxx_atomic_base_impl.68" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.std::__1::vector.69" = type { %"class.std::__1::__vector_base.70" }
%"class.std::__1::__vector_base.70" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.71" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type opaque
%"class.v8::internal::MinorMarkCompactCollector" = type opaque
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type opaque
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type opaque
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type opaque
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type opaque
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.166" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type opaque
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.167" = type { %"class.std::__1::__hash_table.168" }
%"class.std::__1::__hash_table.168" = type <{ %"class.std::__1::unique_ptr.169", %"class.std::__1::__compressed_pair.179", %"class.std::__1::__compressed_pair.184", %"class.std::__1::__compressed_pair.187", [4 x i8] }>
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171", %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"struct.std::__1::__hash_node_base.172"** }
%"struct.std::__1::__hash_node_base.172" = type { %"struct.std::__1::__hash_node_base.172"* }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.std::__1::__bucket_list_deallocator.174" }
%"class.std::__1::__bucket_list_deallocator.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"struct.std::__1::__hash_node_base.172" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.205", %"class.std::__1::vector.205" }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.218" }
%"class.std::__1::__hash_table.218" = type <{ %"class.std::__1::unique_ptr.219", %"class.std::__1::__compressed_pair.229", %"class.std::__1::__compressed_pair.234", %"class.std::__1::__compressed_pair.236", [4 x i8] }>
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221", %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"struct.std::__1::__hash_node_base.222"** }
%"struct.std::__1::__hash_node_base.222" = type { %"struct.std::__1::__hash_node_base.222"* }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.std::__1::__bucket_list_deallocator.224" }
%"class.std::__1::__bucket_list_deallocator.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.std::__1::__hash_node_base.222" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::unordered_map.267" = type { %"class.std::__1::__hash_table.268" }
%"class.std::__1::__hash_table.268" = type <{ %"class.std::__1::unique_ptr.269", %"class.std::__1::__compressed_pair.279", %"class.std::__1::__compressed_pair.284", %"class.std::__1::__compressed_pair.287", [4 x i8] }>
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271", %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.std::__1::__hash_node_base.272"** }
%"struct.std::__1::__hash_node_base.272" = type { %"struct.std::__1::__hash_node_base.272"* }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.std::__1::__bucket_list_deallocator.274" }
%"class.std::__1::__bucket_list_deallocator.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.272" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::unordered_map.241" = type { %"class.std::__1::__hash_table.242" }
%"class.std::__1::__hash_table.242" = type <{ %"class.std::__1::unique_ptr.243", %"class.std::__1::__compressed_pair.253", %"class.std::__1::__compressed_pair.258", %"class.std::__1::__compressed_pair.261", [4 x i8] }>
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245", %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.std::__1::__hash_node_base.246"** }
%"struct.std::__1::__hash_node_base.246" = type { %"struct.std::__1::__hash_node_base.246"* }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.std::__1::__bucket_list_deallocator.248" }
%"class.std::__1::__bucket_list_deallocator.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"struct.std::__1::__hash_node_base.246" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::unordered_map.291" = type { %"class.std::__1::__hash_table.292" }
%"class.std::__1::__hash_table.292" = type <{ %"class.std::__1::unique_ptr.293", %"class.std::__1::__compressed_pair.303", %"class.std::__1::__compressed_pair.308", %"class.std::__1::__compressed_pair.313", [4 x i8] }>
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295", %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"struct.std::__1::__hash_node_base.296"** }
%"struct.std::__1::__hash_node_base.296" = type { %"struct.std::__1::__hash_node_base.296"* }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.std::__1::__bucket_list_deallocator.298" }
%"class.std::__1::__bucket_list_deallocator.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"struct.std::__1::__hash_node_base.296" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::vector.319" = type { %"class.std::__1::__vector_base.320" }
%"class.std::__1::__vector_base.320" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.321" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type opaque
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.205" }
%"class.std::__1::shared_ptr.332" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type opaque
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type opaque
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.339" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type opaque
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type opaque
%"class.v8::internal::StubCache" = type opaque
%"class.v8::internal::Deoptimizer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::JSFunction", %"class.v8::internal::Code", i32, i8, i64, i32, i8, i32, i32, %"class.v8::internal::FrameDescription"*, i32, %"class.v8::internal::FrameDescription"**, i64, i64, i64, i64, i32, i64, %"class.v8::internal::TranslatedState", %"class.std::__1::vector.372", %"class.std::__1::unique_ptr.379" }
%"class.v8::internal::JSFunction" = type { %"class.v8::internal::JSFunctionOrBoundFunction" }
%"class.v8::internal::JSFunctionOrBoundFunction" = type { %"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" }
%"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Code" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FrameDescription" = type { i64, i32, %"class.v8::internal::RegisterValues", i64, i64, i64, i64, i64, i64, [1 x i64] }
%"class.v8::internal::RegisterValues" = type { [16 x i64], [16 x %"class.v8::internal::Float64"] }
%"class.v8::internal::Float64" = type { i64 }
%"class.v8::internal::TranslatedState" = type <{ i32, [4 x i8], %"class.std::__1::vector.340", %"class.v8::internal::Isolate"*, i64, i32, i32, %"class.std::__1::deque.359", %"class.v8::internal::Handle.371", %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.std::__1::vector.340" = type { %"class.std::__1::__vector_base.341" }
%"class.std::__1::__vector_base.341" = type { %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"*, %"class.std::__1::__compressed_pair.354" }
%"class.v8::internal::TranslatedFrame" = type <{ i32, %"class.v8::internal::BytecodeOffset", %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::Handle.342", i32, i32, i32, [4 x i8], %"class.std::__1::deque", %"class.v8::base::Optional", [6 x i8] }>
%"class.v8::internal::BytecodeOffset" = type { i32 }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle.342" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.349" }
%"struct.std::__1::__split_buffer" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.std::__1::__compressed_pair.344" }
%"class.v8::internal::TranslatedValue" = type { i8, i8, %"class.v8::internal::TranslatedState"*, %"class.v8::internal::Handle.343", %union.anon }
%"class.v8::internal::Handle.343" = type { %"class.v8::internal::HandleBase" }
%union.anon = type { %"class.v8::internal::Object" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"class.v8::internal::TranslatedValue"** }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.353 }
%union.anon.353 = type { i8 }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"class.v8::internal::TranslatedFrame"* }
%"class.std::__1::deque.359" = type { %"class.std::__1::__deque_base.360" }
%"class.std::__1::__deque_base.360" = type { %"struct.std::__1::__split_buffer.361", i64, %"class.std::__1::__compressed_pair.367" }
%"struct.std::__1::__split_buffer.361" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"class.std::__1::__compressed_pair.362" }
%"struct.v8::internal::TranslatedState::ObjectPosition" = type { i32, i32 }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"** }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.v8::internal::Handle.371" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackVector" = type { %"class.v8::internal::TorqueGeneratedFeedbackVector" }
%"class.v8::internal::TorqueGeneratedFeedbackVector" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FeedbackSlot" = type { i32 }
%"class.std::__1::vector.372" = type { %"class.std::__1::__vector_base.373" }
%"class.std::__1::__vector_base.373" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"class.std::__1::__compressed_pair.374" }
%"struct.v8::internal::Deoptimizer::ValueToMaterialize" = type { i64, %"class.v8::internal::TranslatedFrame::iterator" }
%"class.v8::internal::TranslatedFrame::iterator" = type <{ %"class.std::__1::__deque_iterator", i32, [4 x i8] }>
%"class.std::__1::__deque_iterator" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"* }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"* }
%"class.std::__1::unique_ptr.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"class.v8::internal::CodeTracer::Scope"* }
%"class.v8::internal::CodeTracer::Scope" = type { %"class.v8::internal::CodeTracer"* }
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type opaque
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.441", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.441" = type { %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type { %"class.v8::internal::IdentityMapBase.base", %"class.v8::internal::ZoneAllocationPolicy" }
%"class.v8::internal::IdentityMapBase.base" = type <{ i32 (...)**, %"struct.v8::base::hash", [7 x i8], %"class.v8::internal::Heap"*, i32, i32, i32, i32, i64*, %"class.v8::internal::StrongRootsEntry"*, i64*, i8 }>
%"struct.v8::base::hash" = type { i8 }
%"class.v8::internal::ZoneAllocationPolicy" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.447", %"class.v8::internal::DetachableVector.448", %"class.v8::internal::DetachableVector.447", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.448" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.447" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type opaque
%"class.v8::internal::EternalHandles" = type opaque
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.449" }
%"class.std::__1::unique_ptr.449" = type { %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.388" = type { %"class.std::__1::__vector_base.389" }
%"class.std::__1::__vector_base.389" = type { i32*, i32*, %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type opaque
%"struct.std::__1::atomic.455" = type { %"struct.std::__1::__atomic_base.456" }
%"struct.std::__1::__atomic_base.456" = type { %"struct.std::__1::__cxx_atomic_impl.457" }
%"struct.std::__1::__cxx_atomic_impl.457" = type { %"struct.std::__1::__cxx_atomic_base_impl.458" }
%"struct.std::__1::__cxx_atomic_base_impl.458" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.465" = type { %"struct.std::__1::__atomic_base.466" }
%"struct.std::__1::__atomic_base.466" = type { %"struct.std::__1::__cxx_atomic_impl.467" }
%"struct.std::__1::__cxx_atomic_impl.467" = type { %"struct.std::__1::__cxx_atomic_base_impl.468" }
%"struct.std::__1::__cxx_atomic_base_impl.468" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.404 }
%union.anon.404 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.470" = type { %"class.std::__1::__hash_table.471" }
%"class.std::__1::__hash_table.471" = type <{ %"class.std::__1::unique_ptr.472", %"class.std::__1::__compressed_pair.482", %"class.std::__1::__compressed_pair.487", %"class.std::__1::__compressed_pair.490", [4 x i8] }>
%"class.std::__1::unique_ptr.472" = type { %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474", %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"struct.std::__1::__hash_node_base.475"** }
%"struct.std::__1::__hash_node_base.475" = type { %"struct.std::__1::__hash_node_base.475"* }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.std::__1::__bucket_list_deallocator.477" }
%"class.std::__1::__bucket_list_deallocator.477" = type { %"class.std::__1::__compressed_pair.478" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"struct.std::__1::__hash_node_base.475" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::atomic.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__cxx_atomic_impl.58" }
%"struct.std::__1::__cxx_atomic_impl.58" = type { %"struct.std::__1::__cxx_atomic_base_impl.59" }
%"struct.std::__1::__cxx_atomic_base_impl.59" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.496", %"class.v8::internal::Handle.502", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.503", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.496" = type { %"class.std::__1::__compressed_pair.497" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.498" }
%"struct.std::__1::__compressed_pair_elem.498" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.502" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.503" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type opaque
%"class.std::__1::unique_ptr.504" = type { %"class.std::__1::__compressed_pair.505" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type opaque
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque.510" }
%"class.std::__1::deque.510" = type { %"class.std::__1::__deque_base.511" }
%"class.std::__1::__deque_base.511" = type { %"struct.std::__1::__split_buffer.512", i64, %"class.std::__1::__compressed_pair.519" }
%"struct.std::__1::__split_buffer.512" = type { %"struct.std::__1::pair.513"**, %"struct.std::__1::pair.513"**, %"struct.std::__1::pair.513"**, %"class.std::__1::__compressed_pair.514" }
%"struct.std::__1::pair.513" = type opaque
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"struct.std::__1::pair.513"** }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.524" = type { %"class.std::__1::__vector_base.525" }
%"class.std::__1::__vector_base.525" = type { %"class.v8::internal::Handle.343"*, %"class.v8::internal::Handle.343"*, %"class.std::__1::__compressed_pair.526" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.527" }
%"struct.std::__1::__compressed_pair_elem.527" = type { %"class.v8::internal::Handle.343"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.460", i32, %"class.v8::Local.12" }
%"class.v8::Local.460" = type { %"class.v8::Promise"* }
%"class.v8::Local.12" = type { %"class.v8::Value"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.531" = type { %"class.std::__1::__compressed_pair.532" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.533" }
%"struct.std::__1::__compressed_pair_elem.533" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.431", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.431" = type { %"class.std::__1::__vector_base.432" }
%"class.std::__1::__vector_base.432" = type { i64**, i64**, %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { i64** }
%"class.std::__1::vector.537" = type { %"class.std::__1::__vector_base.538" }
%"class.std::__1::__vector_base.538" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.544" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.545" = type { %"class.std::__1::__hash_table.546" }
%"class.std::__1::__hash_table.546" = type <{ %"class.std::__1::unique_ptr.547", %"class.std::__1::__compressed_pair.557", %"class.std::__1::__compressed_pair.562", %"class.std::__1::__compressed_pair.567", [4 x i8] }>
%"class.std::__1::unique_ptr.547" = type { %"class.std::__1::__compressed_pair.548" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.549", %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.549" = type { %"struct.std::__1::__hash_node_base.550"** }
%"struct.std::__1::__hash_node_base.550" = type { %"struct.std::__1::__hash_node_base.550"* }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"class.std::__1::__bucket_list_deallocator.552" }
%"class.std::__1::__bucket_list_deallocator.552" = type { %"class.std::__1::__compressed_pair.553" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.550" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.205" = type { %"class.std::__1::__vector_base.206" }
%"class.std::__1::__vector_base.206" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.64" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.573", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.602", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.573" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.598, %union.anon.600, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.598 = type { i64 }
%union.anon.600 = type { i64 }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.602" = type { %"class.v8::PersistentBase.603" }
%"class.v8::PersistentBase.603" = type { %"class.v8::Context"* }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.574", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.574" = type { %"class.std::__1::__hash_table.575" }
%"class.std::__1::__hash_table.575" = type <{ %"class.std::__1::unique_ptr.576", %"class.std::__1::__compressed_pair.586", %"class.std::__1::__compressed_pair.591", %"class.std::__1::__compressed_pair.594", [4 x i8] }>
%"class.std::__1::unique_ptr.576" = type { %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.578", %"struct.std::__1::__compressed_pair_elem.580" }
%"struct.std::__1::__compressed_pair_elem.578" = type { %"struct.std::__1::__hash_node_base.579"** }
%"struct.std::__1::__hash_node_base.579" = type { %"struct.std::__1::__hash_node_base.579"* }
%"struct.std::__1::__compressed_pair_elem.580" = type { %"class.std::__1::__bucket_list_deallocator.581" }
%"class.std::__1::__bucket_list_deallocator.581" = type { %"class.std::__1::__compressed_pair.582" }
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"struct.std::__1::__hash_node_base.579" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.604" = type { %"class.std::__1::__compressed_pair.605" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type opaque
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.610" = type { %"class.std::__1::__compressed_pair.611" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.461", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.461" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.618" }
%"class.std::__1::unordered_map.618" = type { %"class.std::__1::__hash_table.619" }
%"class.std::__1::__hash_table.619" = type <{ %"class.std::__1::unique_ptr.620", %"class.std::__1::__compressed_pair.630", %"class.std::__1::__compressed_pair.635", %"class.std::__1::__compressed_pair.638", [4 x i8] }>
%"class.std::__1::unique_ptr.620" = type { %"class.std::__1::__compressed_pair.621" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.622", %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.622" = type { %"struct.std::__1::__hash_node_base.623"** }
%"struct.std::__1::__hash_node_base.623" = type { %"struct.std::__1::__hash_node_base.623"* }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"class.std::__1::__bucket_list_deallocator.625" }
%"class.std::__1::__bucket_list_deallocator.625" = type { %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.631" }
%"struct.std::__1::__compressed_pair_elem.631" = type { %"struct.std::__1::__hash_node_base.623" }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.644" = type { %"struct.std::__1::__atomic_base.645" }
%"struct.std::__1::__atomic_base.645" = type { %"struct.std::__1::__cxx_atomic_impl.646" }
%"struct.std::__1::__cxx_atomic_impl.646" = type { %"struct.std::__1::__cxx_atomic_base_impl.647" }
%"struct.std::__1::__cxx_atomic_base_impl.647" = type { %"class.std::__1::vector.648"* }
%"class.std::__1::vector.648" = type { %"class.std::__1::__vector_base.649" }
%"class.std::__1::__vector_base.649" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.650" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.650" = type { %"struct.std::__1::__compressed_pair_elem.651" }
%"struct.std::__1::__compressed_pair_elem.651" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::compiler::FrameAccessState" = type <{ %"class.v8::internal::compiler::Frame"*, i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.v8::internal::compiler::Frame" = type { i32, i32, i32, %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"* }
%"class.v8::internal::AlignedSlotAllocator" = type { i32, i32, i32, i32 }
%"class.v8::internal::BitVector" = type { i32, i32, %"union.v8::internal::BitVector::DataStorage" }
%"union.v8::internal::BitVector::DataStorage" = type { i64* }
%"class.v8::internal::compiler::Linkage" = type { %"class.v8::internal::compiler::CallDescriptor"* }
%"class.v8::internal::compiler::CallDescriptor" = type { i32, %"class.v8::internal::MachineType", [2 x i8], %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::Signature"*, i64, i64, %"class.v8::base::Flags", i32, i32, i32, %"class.v8::base::Flags.655", i32, i8*, %"class.v8::CFunctionInfo"* }
%"class.v8::internal::MachineType" = type { i8, i8 }
%"class.v8::internal::compiler::LinkageLocation" = type <{ i32, %"class.v8::internal::MachineType", [2 x i8] }>
%"class.v8::internal::Signature" = type { i64, i64, %"class.v8::internal::compiler::LinkageLocation"* }
%"class.v8::base::Flags" = type { i8 }
%"class.v8::base::Flags.655" = type { i32 }
%"class.v8::CFunctionInfo" = type opaque
%"class.v8::internal::compiler::InstructionSequence" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*, %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneMap", %"class.std::__1::map.688", %"class.v8::internal::ZoneVector.697", %"class.v8::internal::ZoneVector.658", %"class.v8::internal::ZoneDeque", i32, %"class.v8::internal::ZoneDeque.729", %"class.v8::internal::ZoneVector.742", i32, %"class.v8::internal::ZoneVector.749", %"class.v8::internal::compiler::InstructionBlock"* }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector.656" }
%"class.std::__1::vector.656" = type { %"class.std::__1::__vector_base.657" }
%"class.std::__1::__vector_base.657" = type { %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"**, %"class.std::__1::__compressed_pair.677" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.678", %"struct.std::__1::__compressed_pair_elem.679" }
%"struct.std::__1::__compressed_pair_elem.678" = type { %"class.v8::internal::compiler::InstructionBlock"** }
%"struct.std::__1::__compressed_pair_elem.679" = type { %"class.v8::internal::ZoneAllocator.680" }
%"class.v8::internal::ZoneAllocator.680" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.681", %"class.std::__1::__compressed_pair.685" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682", %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::__tree_end_node" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.v8::internal::ZoneAllocator.684" }
%"class.v8::internal::ZoneAllocator.684" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.685" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::map.688" = type { %"class.std::__1::__tree.689" }
%"class.std::__1::__tree.689" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.690", %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.682", %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.v8::internal::ZoneAllocator.692" }
%"class.v8::internal::ZoneAllocator.692" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.v8::internal::ZoneVector.697" = type { %"class.std::__1::vector.698" }
%"class.std::__1::vector.698" = type { %"class.std::__1::__vector_base.699" }
%"class.std::__1::__vector_base.699" = type { %"class.v8::internal::compiler::Constant"*, %"class.v8::internal::compiler::Constant"*, %"class.std::__1::__compressed_pair.700" }
%"class.v8::internal::compiler::Constant" = type { i32, i8, i64 }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.702" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.v8::internal::compiler::Constant"* }
%"struct.std::__1::__compressed_pair_elem.702" = type { %"class.v8::internal::ZoneAllocator.703" }
%"class.v8::internal::ZoneAllocator.703" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.658" = type { %"class.std::__1::vector.659" }
%"class.std::__1::vector.659" = type { %"class.std::__1::__vector_base.660" }
%"class.std::__1::__vector_base.660" = type { %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"*, %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.663" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.v8::internal::compiler::RpoNumber"* }
%"struct.std::__1::__compressed_pair_elem.663" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneDeque" = type { %"class.std::__1::deque.704" }
%"class.std::__1::deque.704" = type { %"class.std::__1::__deque_base.705" }
%"class.std::__1::__deque_base.705" = type { %"struct.std::__1::__split_buffer.706", i64, %"class.std::__1::__compressed_pair.725" }
%"struct.std::__1::__split_buffer.706" = type { %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"***, %"class.std::__1::__compressed_pair.721" }
%"class.v8::internal::compiler::Instruction" = type { i32, i32, [2 x %"class.v8::internal::compiler::ParallelMove"*], %"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::InstructionBlock"*, [1 x %"class.v8::internal::compiler::InstructionOperand"] }
%"class.v8::internal::compiler::ParallelMove" = type { %"class.v8::internal::ZoneVector.707" }
%"class.v8::internal::ZoneVector.707" = type { %"class.std::__1::vector.708" }
%"class.std::__1::vector.708" = type { %"class.std::__1::__vector_base.709" }
%"class.std::__1::__vector_base.709" = type { %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"**, %"class.std::__1::__compressed_pair.710" }
%"class.v8::internal::compiler::MoveOperands" = type { %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand" }
%"class.v8::internal::compiler::InstructionOperand" = type { i64 }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.711", %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.711" = type { %"class.v8::internal::compiler::MoveOperands"** }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::ZoneAllocator.713" }
%"class.v8::internal::ZoneAllocator.713" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::ReferenceMap" = type <{ %"class.v8::internal::ZoneVector.714", i32, [4 x i8] }>
%"class.v8::internal::ZoneVector.714" = type { %"class.std::__1::vector.715" }
%"class.std::__1::vector.715" = type { %"class.std::__1::__vector_base.716" }
%"class.std::__1::__vector_base.716" = type { %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"*, %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718", %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::compiler::InstructionOperand"* }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.v8::internal::ZoneAllocator.720" }
%"class.v8::internal::ZoneAllocator.720" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.721" = type { %"struct.std::__1::__compressed_pair_elem.722", %"struct.std::__1::__compressed_pair_elem.723" }
%"struct.std::__1::__compressed_pair_elem.722" = type { %"class.v8::internal::compiler::Instruction"*** }
%"struct.std::__1::__compressed_pair_elem.723" = type { %"class.v8::internal::RecyclingZoneAllocator" }
%"class.v8::internal::RecyclingZoneAllocator" = type { %"class.v8::internal::ZoneAllocator.724", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Instruction **>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.724" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Instruction **>::FreeBlock" = type opaque
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.24", %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.v8::internal::RecyclingZoneAllocator.727" }
%"class.v8::internal::RecyclingZoneAllocator.727" = type { %"class.v8::internal::ZoneAllocator.728", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Instruction *>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.728" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Instruction *>::FreeBlock" = type opaque
%"class.v8::internal::ZoneDeque.729" = type { %"class.std::__1::deque.730" }
%"class.std::__1::deque.730" = type { %"class.std::__1::__deque_base.731" }
%"class.std::__1::__deque_base.731" = type { %"struct.std::__1::__split_buffer.732", i64, %"class.std::__1::__compressed_pair.738" }
%"struct.std::__1::__split_buffer.732" = type { %"class.v8::internal::compiler::ReferenceMap"***, %"class.v8::internal::compiler::ReferenceMap"***, %"class.v8::internal::compiler::ReferenceMap"***, %"class.std::__1::__compressed_pair.733" }
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.734", %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.734" = type { %"class.v8::internal::compiler::ReferenceMap"*** }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.v8::internal::RecyclingZoneAllocator.736" }
%"class.v8::internal::RecyclingZoneAllocator.736" = type { %"class.v8::internal::ZoneAllocator.737", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ReferenceMap **>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.737" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ReferenceMap **>::FreeBlock" = type opaque
%"class.std::__1::__compressed_pair.738" = type { %"struct.std::__1::__compressed_pair_elem.24", %"struct.std::__1::__compressed_pair_elem.739" }
%"struct.std::__1::__compressed_pair_elem.739" = type { %"class.v8::internal::RecyclingZoneAllocator.740" }
%"class.v8::internal::RecyclingZoneAllocator.740" = type { %"class.v8::internal::ZoneAllocator.741", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ReferenceMap *>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.741" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ReferenceMap *>::FreeBlock" = type opaque
%"class.v8::internal::ZoneVector.742" = type { %"class.std::__1::vector.743" }
%"class.std::__1::vector.743" = type { %"class.std::__1::__vector_base.744" }
%"class.std::__1::__vector_base.744" = type { i8*, i8*, %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746", %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.746" = type { i8* }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.v8::internal::ZoneAllocator.748" }
%"class.v8::internal::ZoneAllocator.748" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.749" = type { %"class.std::__1::vector.750" }
%"class.std::__1::vector.750" = type { %"class.std::__1::__vector_base.751" }
%"class.std::__1::__vector_base.751" = type { %"class.v8::internal::compiler::DeoptimizationEntry"*, %"class.v8::internal::compiler::DeoptimizationEntry"*, %"class.std::__1::__compressed_pair.767" }
%"class.v8::internal::compiler::DeoptimizationEntry" = type { %"class.v8::internal::compiler::FrameStateDescriptor"*, i8, i8, [6 x i8], %"struct.v8::internal::compiler::FeedbackSource" }
%"class.v8::internal::compiler::FrameStateDescriptor" = type { i32, %"class.v8::internal::BytecodeOffset", %"class.v8::internal::compiler::OutputFrameStateCombine", i64, i64, i64, i64, %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::MaybeHandle", %"class.v8::internal::compiler::FrameStateDescriptor"* }
%"class.v8::internal::compiler::OutputFrameStateCombine" = type { i64 }
%"class.v8::internal::compiler::StateValueList" = type { %"class.v8::internal::ZoneVector.752", %"class.v8::internal::ZoneVector.760" }
%"class.v8::internal::ZoneVector.752" = type { %"class.std::__1::vector.753" }
%"class.std::__1::vector.753" = type { %"class.std::__1::__vector_base.754" }
%"class.std::__1::__vector_base.754" = type { %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.std::__1::__compressed_pair.756" }
%"class.v8::internal::compiler::StateValueDescriptor" = type { i8, %"class.v8::internal::MachineType", %union.anon.755 }
%union.anon.755 = type { i64 }
%"class.std::__1::__compressed_pair.756" = type { %"struct.std::__1::__compressed_pair_elem.757", %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.757" = type { %"class.v8::internal::compiler::StateValueDescriptor"* }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.v8::internal::ZoneAllocator.759" }
%"class.v8::internal::ZoneAllocator.759" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.760" = type { %"class.std::__1::vector.761" }
%"class.std::__1::vector.761" = type { %"class.std::__1::__vector_base.762" }
%"class.std::__1::__vector_base.762" = type { %"class.v8::internal::compiler::StateValueList"**, %"class.v8::internal::compiler::StateValueList"**, %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"class.v8::internal::compiler::StateValueList"** }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"class.v8::internal::ZoneAllocator.766" }
%"class.v8::internal::ZoneAllocator.766" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::MaybeHandle" = type { i64* }
%"struct.v8::internal::compiler::FeedbackSource" = type <{ %"class.v8::internal::Handle.371", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768", %"struct.std::__1::__compressed_pair_elem.769" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.v8::internal::compiler::DeoptimizationEntry"* }
%"struct.std::__1::__compressed_pair_elem.769" = type { %"class.v8::internal::ZoneAllocator.770" }
%"class.v8::internal::ZoneAllocator.770" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::InstructionBlock" = type <{ %"class.v8::internal::ZoneVector.658", %"class.v8::internal::ZoneVector.658", %"class.v8::internal::ZoneVector.664", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", i32, i32, i8, i8, i8, i8, i8, i8, i8, [5 x i8] }>
%"class.v8::internal::ZoneVector.664" = type { %"class.std::__1::vector.665" }
%"class.std::__1::vector.665" = type { %"class.std::__1::__vector_base.666" }
%"class.std::__1::__vector_base.666" = type { %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"**, %"class.std::__1::__compressed_pair.673" }
%"class.v8::internal::compiler::PhiInstruction" = type { i32, %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::ZoneVector.667" }
%"class.std::__1::__compressed_pair.673" = type { %"struct.std::__1::__compressed_pair_elem.674", %"struct.std::__1::__compressed_pair_elem.675" }
%"struct.std::__1::__compressed_pair_elem.674" = type { %"class.v8::internal::compiler::PhiInstruction"** }
%"struct.std::__1::__compressed_pair_elem.675" = type { %"class.v8::internal::ZoneAllocator.676" }
%"class.v8::internal::ZoneAllocator.676" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::UnwindingInfoWriter" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::EhFrameWriter", i8, i8, %"class.v8::internal::ZoneVector.778" }
%"class.v8::internal::EhFrameWriter" = type { i32, i32, i32, %"class.v8::internal::Register", i32, %"class.v8::internal::ZoneVector.771" }
%"class.v8::internal::Register" = type { %"class.v8::internal::RegisterBase" }
%"class.v8::internal::RegisterBase" = type { i32 }
%"class.v8::internal::ZoneVector.771" = type { %"class.std::__1::vector.772" }
%"class.std::__1::vector.772" = type { %"class.std::__1::__vector_base.773" }
%"class.std::__1::__vector_base.773" = type { i8*, i8*, %"class.std::__1::__compressed_pair.774" }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775", %"struct.std::__1::__compressed_pair_elem.776" }
%"struct.std::__1::__compressed_pair_elem.775" = type { i8* }
%"struct.std::__1::__compressed_pair_elem.776" = type { %"class.v8::internal::ZoneAllocator.777" }
%"class.v8::internal::ZoneAllocator.777" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.778" = type { %"class.std::__1::vector.779" }
%"class.std::__1::vector.779" = type { %"class.std::__1::__vector_base.780" }
%"class.std::__1::__vector_base.780" = type { %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"**, %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"**, %"class.std::__1::__compressed_pair.781" }
%"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState" = type <{ %"class.v8::internal::Register", i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782", %"struct.std::__1::__compressed_pair_elem.783" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"** }
%"struct.std::__1::__compressed_pair_elem.783" = type { %"class.v8::internal::ZoneAllocator.784" }
%"class.v8::internal::ZoneAllocator.784" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::OptimizedCompilationInfo" = type { i32, i32, i32, i32, %"class.v8::internal::Handle.385", %"class.v8::internal::Handle.342", %"class.v8::internal::Handle.386", %"class.v8::internal::Handle.387", %"class.v8::internal::BasicBlockProfilerData"*, %"class.std::__1::unique_ptr.408", %"class.v8::internal::BytecodeOffset", %"class.v8::internal::JavaScriptFrame"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::NodeObserver"*, i8, %"class.std::__1::vector.414", i32, i32, %"class.v8::internal::Vector.421", %"class.std::__1::unique_ptr.422", %"class.v8::internal::TickCounter", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.441" }
%"class.v8::internal::Handle.385" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.386" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.387" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::BasicBlockProfilerData" = type <{ %"class.std::__1::vector.388", %"class.std::__1::vector.395", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::vector.395" = type { %"class.std::__1::__vector_base.396" }
%"class.std::__1::__vector_base.396" = type { i32*, i32*, %"class.std::__1::__compressed_pair.397" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.398" }
%"struct.std::__1::__compressed_pair_elem.398" = type { i32* }
%"class.std::__1::unique_ptr.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"struct.v8::internal::wasm::WasmCompilationResult"* }
%"struct.v8::internal::wasm::WasmCompilationResult" = type opaque
%"class.v8::internal::JavaScriptFrame" = type { %"class.v8::internal::CommonFrameWithJSLinkage" }
%"class.v8::internal::CommonFrameWithJSLinkage" = type { %"class.v8::internal::CommonFrame" }
%"class.v8::internal::CommonFrame" = type { %"class.v8::internal::StackFrame" }
%"class.v8::internal::StackFrame" = type { i32 (...)**, %"class.v8::internal::StackFrameIteratorBase"*, %"class.v8::internal::Isolate"*, %"struct.v8::internal::StackFrame::State" }
%"class.v8::internal::StackFrameIteratorBase" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::EntryFrame", %"class.v8::internal::ConstructEntryFrame", %"class.v8::internal::ExitFrame", %"class.v8::internal::WasmFrame", %"class.v8::internal::WasmToJsFrame", %"class.v8::internal::JsToWasmFrame", %"class.v8::internal::WasmDebugBreakFrame", %"class.v8::internal::CWasmEntryFrame", %"class.v8::internal::WasmExitFrame", %"class.v8::internal::WasmCompileLazyFrame", %"class.v8::internal::InterpretedFrame", %"class.v8::internal::BaselineFrame", %"class.v8::internal::OptimizedFrame", %"class.v8::internal::StubFrame", %"class.v8::internal::BuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame", %"class.v8::internal::InternalFrame", %"class.v8::internal::ConstructFrame", %"class.v8::internal::BuiltinFrame", %"class.v8::internal::BuiltinExitFrame", %"class.v8::internal::NativeFrame", %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackHandler"*, i8, [7 x i8] }>
%"class.v8::internal::EntryFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::TypedFrame" = type { %"class.v8::internal::CommonFrame" }
%"class.v8::internal::ConstructEntryFrame" = type { %"class.v8::internal::EntryFrame" }
%"class.v8::internal::ExitFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::WasmFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::WasmToJsFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::JsToWasmFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::WasmDebugBreakFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::CWasmEntryFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::WasmExitFrame" = type { %"class.v8::internal::WasmFrame" }
%"class.v8::internal::WasmCompileLazyFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::InterpretedFrame" = type { %"class.v8::internal::UnoptimizedFrame" }
%"class.v8::internal::UnoptimizedFrame" = type { %"class.v8::internal::JavaScriptFrame" }
%"class.v8::internal::BaselineFrame" = type { %"class.v8::internal::UnoptimizedFrame" }
%"class.v8::internal::OptimizedFrame" = type { %"class.v8::internal::JavaScriptFrame" }
%"class.v8::internal::StubFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::BuiltinContinuationFrame" = type { %"class.v8::internal::InternalFrame" }
%"class.v8::internal::JavaScriptBuiltinContinuationFrame" = type { %"class.v8::internal::TypedFrameWithJSLinkage" }
%"class.v8::internal::TypedFrameWithJSLinkage" = type { %"class.v8::internal::CommonFrameWithJSLinkage" }
%"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame" = type { %"class.v8::internal::JavaScriptBuiltinContinuationFrame" }
%"class.v8::internal::InternalFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::ConstructFrame" = type { %"class.v8::internal::InternalFrame" }
%"class.v8::internal::BuiltinFrame" = type { %"class.v8::internal::TypedFrameWithJSLinkage" }
%"class.v8::internal::BuiltinExitFrame" = type { %"class.v8::internal::ExitFrame" }
%"class.v8::internal::NativeFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::StackHandler" = type { i8 }
%"struct.v8::internal::StackFrame::State" = type { i64, i64, i64*, i64, i64*, i64* }
%"class.std::__1::vector.414" = type { %"class.std::__1::__vector_base.415" }
%"class.std::__1::__vector_base.415" = type { %"struct.v8::internal::OptimizedCompilationInfo::InlinedFunctionHolder"*, %"struct.v8::internal::OptimizedCompilationInfo::InlinedFunctionHolder"*, %"class.std::__1::__compressed_pair.416" }
%"struct.v8::internal::OptimizedCompilationInfo::InlinedFunctionHolder" = type { %"class.v8::internal::Handle.342", %"class.v8::internal::Handle.385", %"struct.v8::internal::InliningPosition" }
%"struct.v8::internal::InliningPosition" = type <{ %"class.v8::internal::SourcePosition", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"struct.v8::internal::OptimizedCompilationInfo::InlinedFunctionHolder"* }
%"class.v8::internal::Vector.421" = type { i8*, i64 }
%"class.std::__1::unique_ptr.422" = type { %"class.std::__1::__compressed_pair.423" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.424" }
%"struct.std::__1::__compressed_pair_elem.424" = type { i8* }
%"class.v8::internal::TickCounter" = type { i64, %"class.v8::internal::LocalHeap"* }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::Label" = type { i32, i32 }
%"class.v8::internal::compiler::RpoNumber" = type { i32 }
%"class.v8::internal::SourcePosition" = type { i64 }
%"class.v8::internal::TurboAssembler" = type { %"class.v8::internal::SharedTurboAssembler.base", [7 x i8] }
%"class.v8::internal::SharedTurboAssembler.base" = type { %"class.v8::internal::TurboAssemblerBase.base" }
%"class.v8::internal::TurboAssemblerBase.base" = type <{ %"class.v8::internal::Assembler", %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.343", i8, i8, i8, i8, i32, i8 }>
%"class.v8::internal::Assembler" = type { %"class.v8::internal::AssemblerBase", %"class.v8::internal::RelocInfoWriter", %"class.std::__1::deque.834", i32, %"class.std::__1::deque.834", %"class.std::__1::map.843", %"class.v8::internal::ConstPool" }
%"class.v8::internal::AssemblerBase" = type { i32 (...)**, %"class.std::__1::unique_ptr.785", i8*, %"class.std::__1::forward_list", i8*, %"class.v8::internal::CodeCommentsWriter", %"class.std::__1::vector.803", %"class.std::__1::vector.524", %"class.std::__1::unordered_map.810", %"struct.v8::internal::AssemblerOptions", i64, i8, i8, %"class.v8::internal::JumpOptimizationInfo"* }
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"class.v8::internal::AssemblerBuffer"* }
%"class.v8::internal::AssemblerBuffer" = type { i32 (...)** }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.791" }
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.792" }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type opaque
%"class.v8::internal::CodeCommentsWriter" = type { i32, %"class.std::__1::vector.796" }
%"class.std::__1::vector.796" = type { %"class.std::__1::__vector_base.797" }
%"class.std::__1::__vector_base.797" = type { %"struct.v8::internal::CodeCommentEntry"*, %"struct.v8::internal::CodeCommentEntry"*, %"class.std::__1::__compressed_pair.798" }
%"struct.v8::internal::CodeCommentEntry" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"struct.std::__1::__compressed_pair_elem.799" = type { %"struct.v8::internal::CodeCommentEntry"* }
%"class.std::__1::vector.803" = type { %"class.std::__1::__vector_base.804" }
%"class.std::__1::__vector_base.804" = type { %"class.v8::internal::Handle.387"*, %"class.v8::internal::Handle.387"*, %"class.std::__1::__compressed_pair.805" }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { %"class.v8::internal::Handle.387"* }
%"class.std::__1::unordered_map.810" = type { %"class.std::__1::__hash_table.811" }
%"class.std::__1::__hash_table.811" = type <{ %"class.std::__1::unique_ptr.812", %"class.std::__1::__compressed_pair.822", %"class.std::__1::__compressed_pair.827", %"class.std::__1::__compressed_pair.830", [4 x i8] }>
%"class.std::__1::unique_ptr.812" = type { %"class.std::__1::__compressed_pair.813" }
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.814", %"struct.std::__1::__compressed_pair_elem.816" }
%"struct.std::__1::__compressed_pair_elem.814" = type { %"struct.std::__1::__hash_node_base.815"** }
%"struct.std::__1::__hash_node_base.815" = type { %"struct.std::__1::__hash_node_base.815"* }
%"struct.std::__1::__compressed_pair_elem.816" = type { %"class.std::__1::__bucket_list_deallocator.817" }
%"class.std::__1::__bucket_list_deallocator.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.822" = type { %"struct.std::__1::__compressed_pair_elem.823" }
%"struct.std::__1::__compressed_pair_elem.823" = type { %"struct.std::__1::__hash_node_base.815" }
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.830" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.v8::internal::AssemblerOptions" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i64, i8, i8, i8, [5 x i8] }>
%"class.v8::internal::JumpOptimizationInfo" = type { i32, i8, %"class.std::__1::vector.395", i64 }
%"class.v8::internal::RelocInfoWriter" = type { i8*, i8* }
%"class.std::__1::deque.834" = type { %"class.std::__1::__deque_base.835" }
%"class.std::__1::__deque_base.835" = type { %"struct.std::__1::__split_buffer.836", i64, %"class.std::__1::__compressed_pair.842" }
%"struct.std::__1::__split_buffer.836" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { i32** }
%"class.std::__1::__compressed_pair.842" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::map.843" = type { %"class.std::__1::__tree.844" }
%"class.std::__1::__tree.844" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.845", %"class.std::__1::__compressed_pair.849" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"class.std::__1::__compressed_pair.849" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.v8::internal::ConstPool" = type { %"class.v8::internal::Assembler"*, %"class.std::__1::multimap" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.854" }
%"class.std::__1::__tree.854" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.855", %"class.std::__1::__compressed_pair.859" }
%"class.std::__1::__compressed_pair.855" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"class.std::__1::__compressed_pair.859" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.v8::internal::compiler::GapResolver" = type <{ %"class.v8::internal::compiler::GapResolver::Assembler"*, i8, [7 x i8] }>
%"class.v8::internal::SafepointTableBuilder" = type { %"class.v8::internal::ZoneChunkList", i32, i8, %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneChunkList" = type { %"class.v8::internal::Zone"*, i64, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* }
%"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk" = type { i32, i32, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* }
%"class.v8::internal::ZoneVector.863" = type { %"class.std::__1::vector.864" }
%"class.std::__1::vector.864" = type { %"class.std::__1::__vector_base.865" }
%"class.std::__1::__vector_base.865" = type { %"struct.v8::internal::compiler::CodeGenerator::HandlerInfo"*, %"struct.v8::internal::compiler::CodeGenerator::HandlerInfo"*, %"class.std::__1::__compressed_pair.866" }
%"struct.v8::internal::compiler::CodeGenerator::HandlerInfo" = type { %"class.v8::internal::Label"*, i32 }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.867", %"struct.std::__1::__compressed_pair_elem.868" }
%"struct.std::__1::__compressed_pair_elem.867" = type { %"struct.v8::internal::compiler::CodeGenerator::HandlerInfo"* }
%"struct.std::__1::__compressed_pair_elem.868" = type { %"class.v8::internal::ZoneAllocator.869" }
%"class.v8::internal::ZoneAllocator.869" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneDeque.870" = type { %"class.std::__1::deque.871" }
%"class.std::__1::deque.871" = type { %"class.std::__1::__deque_base.872" }
%"class.std::__1::__deque_base.872" = type { %"struct.std::__1::__split_buffer.873", i64, %"class.std::__1::__compressed_pair.880" }
%"struct.std::__1::__split_buffer.873" = type { %"class.v8::internal::compiler::DeoptimizationExit"***, %"class.v8::internal::compiler::DeoptimizationExit"***, %"class.v8::internal::compiler::DeoptimizationExit"***, %"class.std::__1::__compressed_pair.875" }
%"class.v8::internal::compiler::DeoptimizationExit" = type <{ i32, [4 x i8], %"class.v8::internal::SourcePosition", %"class.v8::internal::Label", %"class.v8::internal::Label", %"class.v8::internal::BytecodeOffset", i32, i32, i8, i8, [2 x i8], %"class.v8::internal::ZoneVector.874"*, i8, [7 x i8] }>
%"class.v8::internal::ZoneVector.874" = type opaque
%"class.std::__1::__compressed_pair.875" = type { %"struct.std::__1::__compressed_pair_elem.876", %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.876" = type { %"class.v8::internal::compiler::DeoptimizationExit"*** }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.v8::internal::RecyclingZoneAllocator.878" }
%"class.v8::internal::RecyclingZoneAllocator.878" = type { %"class.v8::internal::ZoneAllocator.879", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit **>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.879" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit **>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit **>::FreeBlock"*, i64 }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.24", %"struct.std::__1::__compressed_pair_elem.881" }
%"struct.std::__1::__compressed_pair_elem.881" = type { %"class.v8::internal::RecyclingZoneAllocator.882" }
%"class.v8::internal::RecyclingZoneAllocator.882" = type { %"class.v8::internal::ZoneAllocator.883", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.883" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock"*, i64 }
%"class.v8::internal::ZoneDeque.884" = type { %"class.std::__1::deque.885" }
%"class.std::__1::deque.885" = type { %"class.std::__1::__deque_base.886" }
%"class.std::__1::__deque_base.886" = type { %"struct.std::__1::__split_buffer.887", i64, %"class.std::__1::__compressed_pair.895" }
%"struct.std::__1::__split_buffer.887" = type { %"class.v8::internal::compiler::DeoptimizationLiteral"**, %"class.v8::internal::compiler::DeoptimizationLiteral"**, %"class.v8::internal::compiler::DeoptimizationLiteral"**, %"class.std::__1::__compressed_pair.890" }
%"class.v8::internal::compiler::DeoptimizationLiteral" = type { i32, %"class.v8::internal::Handle.888", double, %"class.v8::internal::StringConstantBase"* }
%"class.v8::internal::Handle.888" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::StringConstantBase" = type { i32, %"class.v8::internal::Handle.889" }
%"class.v8::internal::Handle.889" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.891", %"struct.std::__1::__compressed_pair_elem.892" }
%"struct.std::__1::__compressed_pair_elem.891" = type { %"class.v8::internal::compiler::DeoptimizationLiteral"** }
%"struct.std::__1::__compressed_pair_elem.892" = type { %"class.v8::internal::RecyclingZoneAllocator.893" }
%"class.v8::internal::RecyclingZoneAllocator.893" = type { %"class.v8::internal::ZoneAllocator.894", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral *>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.894" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral *>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral *>::FreeBlock"*, i64 }
%"class.std::__1::__compressed_pair.895" = type { %"struct.std::__1::__compressed_pair_elem.24", %"struct.std::__1::__compressed_pair_elem.896" }
%"struct.std::__1::__compressed_pair_elem.896" = type { %"class.v8::internal::RecyclingZoneAllocator.897" }
%"class.v8::internal::RecyclingZoneAllocator.897" = type { %"class.v8::internal::ZoneAllocator.898", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.898" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock"*, i64 }
%"class.v8::internal::TranslationArrayBuilder" = type { %"class.v8::internal::ZoneVector.771", %"class.v8::internal::ZoneVector.667", %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::CodeGenerator::JumpTable" = type opaque
%"class.v8::internal::compiler::OutOfLineCode" = type { i32 (...)**, %"class.v8::internal::Label", %"class.v8::internal::Label", %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::TurboAssembler"*, %"class.v8::internal::compiler::OutOfLineCode"* }
%"class.v8::base::Optional.899" = type { %"class.v8::base::internal::OptionalBase.900" }
%"class.v8::base::internal::OptionalBase.900" = type { %"struct.v8::base::internal::OptionalStorage.901" }
%"struct.v8::base::internal::OptionalStorage.901" = type { %"struct.v8::base::internal::OptionalStorageBase.902" }
%"struct.v8::base::internal::OptionalStorageBase.902" = type { i8, %union.anon.903 }
%union.anon.903 = type { %"class.v8::internal::compiler::OsrHelper" }
%"class.v8::internal::compiler::OsrHelper" = type { i64, i64 }
%"class.v8::internal::SourcePositionTableBuilder" = type { i32, %"class.v8::internal::ZoneVector.771", %"struct.v8::internal::PositionTableEntry" }
%"struct.v8::internal::PositionTableEntry" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.v8::internal::ZoneVector.904" = type { %"class.std::__1::vector.905" }
%"class.std::__1::vector.905" = type { %"class.std::__1::__vector_base.906" }
%"class.std::__1::__vector_base.906" = type { %"struct.v8::internal::trap_handler::ProtectedInstructionData"*, %"struct.v8::internal::trap_handler::ProtectedInstructionData"*, %"class.std::__1::__compressed_pair.907" }
%"struct.v8::internal::trap_handler::ProtectedInstructionData" = type { i32, i32 }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.908", %"struct.std::__1::__compressed_pair_elem.909" }
%"struct.std::__1::__compressed_pair_elem.908" = type { %"struct.v8::internal::trap_handler::ProtectedInstructionData"* }
%"struct.std::__1::__compressed_pair_elem.909" = type { %"class.v8::internal::ZoneAllocator.910" }
%"class.v8::internal::ZoneAllocator.910" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.667" = type { %"class.std::__1::vector.668" }
%"class.std::__1::vector.668" = type { %"class.std::__1::__vector_base.669" }
%"class.std::__1::__vector_base.669" = type { i32*, i32*, %"class.std::__1::__compressed_pair.670" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.391", %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"class.v8::internal::ZoneAllocator.672" }
%"class.v8::internal::ZoneAllocator.672" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::TurbolizerCodeOffsetsInfo" = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.v8::internal::ZoneVector.911" = type { %"class.std::__1::vector.912" }
%"class.std::__1::vector.912" = type { %"class.std::__1::__vector_base.913" }
%"class.std::__1::__vector_base.913" = type { %"struct.v8::internal::compiler::TurbolizerInstructionStartInfo"*, %"struct.v8::internal::compiler::TurbolizerInstructionStartInfo"*, %"class.std::__1::__compressed_pair.914" }
%"struct.v8::internal::compiler::TurbolizerInstructionStartInfo" = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.914" = type { %"struct.std::__1::__compressed_pair_elem.915", %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.915" = type { %"struct.v8::internal::compiler::TurbolizerInstructionStartInfo"* }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.v8::internal::ZoneAllocator.917" }
%"class.v8::internal::ZoneAllocator.917" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::X64OperandConverter" = type { %"class.v8::internal::compiler::InstructionOperandConverter" }
%"class.v8::internal::compiler::InstructionOperandConverter" = type { %"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::Instruction"* }
%"class.v8::internal::Operand" = type { %"struct.v8::internal::Operand::Data" }
%"struct.v8::internal::Operand::Data" = type { i8, [9 x i8], i8, i8 }
%"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI" = type { %"class.v8::internal::compiler::OutOfLineCode", %"class.v8::internal::Register", %"class.v8::internal::XMMRegister", i32, %"class.v8::internal::compiler::UnwindingInfoWriter"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"* }
%"class.v8::internal::XMMRegister" = type { %"class.v8::internal::RegisterBase.919" }
%"class.v8::internal::RegisterBase.919" = type { i32 }
%"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite" = type { %"class.v8::internal::compiler::OutOfLineCode", %"class.v8::internal::Register", %"class.v8::internal::Operand", %"class.v8::internal::Register", %"class.v8::internal::Register", %"class.v8::internal::Register", i32, i32, %"class.v8::internal::Zone"* }
%"class.v8::internal::SharedTurboAssembler" = type { %"class.v8::internal::TurboAssemblerBase.base", [7 x i8] }
%"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN" = type <{ %"class.v8::internal::compiler::OutOfLineCode", %"class.v8::internal::XMMRegister", [4 x i8] }>
%"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN" = type <{ %"class.v8::internal::compiler::OutOfLineCode", %"class.v8::internal::XMMRegister", [4 x i8] }>
%"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap" = type <{ %"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap", i32, [4 x i8] }>
%"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap" = type { %"class.v8::internal::compiler::OutOfLineCode", %"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::Instruction"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.930" }
%"struct.std::__1::pair.930" = type { i32, %"class.v8::internal::compiler::Constant" }
%"class.std::__1::vector.920" = type { %"class.std::__1::__vector_base.921" }
%"class.std::__1::__vector_base.921" = type { %"struct.std::__1::pair.922"*, %"struct.std::__1::pair.922"*, %"class.std::__1::__compressed_pair.923" }
%"struct.std::__1::pair.922" = type { i32, %"class.v8::internal::Label"* }
%"class.std::__1::__compressed_pair.923" = type { %"struct.std::__1::__compressed_pair_elem.924" }
%"struct.std::__1::__compressed_pair_elem.924" = type { %"struct.std::__1::pair.922"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.v8::internal::compiler::BranchInfo" = type { i32, %"class.v8::internal::Label"*, %"class.v8::internal::Label"*, i8 }
%"class.std::__1::__tree_node.935" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type.936" }
%"struct.std::__1::__value_type.936" = type { %"struct.std::__1::pair.937" }
%"struct.std::__1::pair.937" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__tree_node.938" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.939" }
%"struct.std::__1::__value_type.939" = type { %"struct.std::__1::pair.940" }
%"struct.std::__1::pair.940" = type { %"class.v8::internal::Label"*, %"class.std::__1::vector.388" }

$_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii = comdat any

$_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE = comdat any

$_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm = comdat any

$_ZN2v88internal14TurboAssembler4MoveENS0_8RegisterEl = comdat any

$_ZN2v88internal8compiler13CodeGeneratorD2Ev = comdat any

$_ZN2v88internal8compiler13CodeGeneratorD0Ev = comdat any

$_ZN2v88internal9AssemblerD2Ev = comdat any

$_ZNSt3__112__deque_baseIiNS_9allocatorIiEEED2Ev = comdat any

$_ZN2v88internal9AssemblerD0Ev = comdat any

$_ZN2v88internal13AssemblerBase21AbortedCodeGenerationEv = comdat any

$_ZNSt3__16__treeINS_12__value_typeImiEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPN2v88internal5LabelENS_6vectorIiNS_9allocatorIiEEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE = comdat any

$_ZTVN2v88internal9AssemblerE = comdat any

@.str = private unnamed_addr constant [19 x i8] c"unimplemented code\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"!HasImmediateInput(instr, 0)\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"instr->HasOutput()\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"!instr->HasOutput()\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZN2v88internal24FLAG_deopt_every_n_timesE = external local_unnamed_addr global i32, align 4
@_ZN2v88internal15FLAG_stack_sizeE = external local_unnamed_addr global i32, align 4
@.str.7 = private unnamed_addr constant [65 x i8] c"pop_size <= static_cast<size_t>(std::numeric_limits<int>::max())\00", align 1
@_ZN2v88internal31FLAG_trace_turbo_stack_accessesE = external local_unnamed_addr global i8, align 1
@_ZTVN2v88internal8compiler13CodeGeneratorE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::compiler::CodeGenerator"*)* @_ZN2v88internal8compiler13CodeGeneratorD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::compiler::CodeGenerator"*)* @_ZN2v88internal8compiler13CodeGeneratorD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"*)* @_ZN2v88internal8compiler13CodeGenerator12AssembleMoveEPNS1_18InstructionOperandES4_ to i8*), i8* bitcast (void (%"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"*)* @_ZN2v88internal8compiler13CodeGenerator12AssembleSwapEPNS1_18InstructionOperandES4_ to i8*)] }, align 8
@_ZN2v88internalL3rspE = internal unnamed_addr constant { i32 } { i32 4 }, align 4
@_ZN2v88internalL3rbpE = internal unnamed_addr constant { i32 } { i32 5 }, align 4
@_ZN2v88internalL3rcxE = internal unnamed_addr constant { i32 } { i32 1 }, align 4
@_ZN2v88internal29FLAG_perf_prof_unwinding_infoE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal11CpuFeatures10supported_E = external local_unnamed_addr global i32, align 4
@_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::compiler::OutOfLineCode"*)* @_ZN2v88internal8compiler13OutOfLineCodeD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*)* @_ZN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*)* @_ZN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrap8GenerateEv to i8*)] }, align 8
@_ZTVN2v88internal8compiler12_GLOBAL__N_117WasmOutOfLineTrapE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::compiler::OutOfLineCode"*)* @_ZN2v88internal8compiler13OutOfLineCodeD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap"*)* @_ZN2v88internal8compiler12_GLOBAL__N_117WasmOutOfLineTrapD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap"*)* @_ZN2v88internal8compiler12_GLOBAL__N_117WasmOutOfLineTrap8GenerateEv to i8*)] }, align 8
@_ZN2v88internalL3r10E = internal unnamed_addr constant { i32 } { i32 10 }, align 4
@_ZTVN2v88internal9AssemblerE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::Assembler"*)* @_ZN2v88internal9AssemblerD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::Assembler"*)* @_ZN2v88internal9AssemblerD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::AssemblerBase"*)* @_ZN2v88internal13AssemblerBase21AbortedCodeGenerationEv to i8*)] }, comdat, align 8
@_ZTVN2v88internal8compiler12_GLOBAL__N_126OutOfLineTruncateDoubleToIE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::compiler::OutOfLineCode"*)* @_ZN2v88internal8compiler13OutOfLineCodeD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI"*)* @_ZN2v88internal8compiler12_GLOBAL__N_126OutOfLineTruncateDoubleToID0Ev to i8*), i8* bitcast (void (%"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI"*)* @_ZN2v88internal8compiler12_GLOBAL__N_126OutOfLineTruncateDoubleToI8GenerateEv to i8*)] }, align 8
@_ZTVN2v88internal8compiler12_GLOBAL__N_120OutOfLineRecordWriteE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::compiler::OutOfLineCode"*)* @_ZN2v88internal8compiler13OutOfLineCodeD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"*)* @_ZN2v88internal8compiler12_GLOBAL__N_120OutOfLineRecordWriteD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"*)* @_ZN2v88internal8compiler12_GLOBAL__N_120OutOfLineRecordWrite8GenerateEv to i8*)] }, align 8
@_ZTVN2v88internal8compiler12_GLOBAL__N_123OutOfLineLoadFloat32NaNE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::compiler::OutOfLineCode"*)* @_ZN2v88internal8compiler13OutOfLineCodeD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN"*)* @_ZN2v88internal8compiler12_GLOBAL__N_123OutOfLineLoadFloat32NaND0Ev to i8*), i8* bitcast (void (%"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN"*)* @_ZN2v88internal8compiler12_GLOBAL__N_123OutOfLineLoadFloat32NaN8GenerateEv to i8*)] }, align 8
@_ZTVN2v88internal8compiler12_GLOBAL__N_123OutOfLineLoadFloat64NaNE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::compiler::OutOfLineCode"*)* @_ZN2v88internal8compiler13OutOfLineCodeD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN"*)* @_ZN2v88internal8compiler12_GLOBAL__N_123OutOfLineLoadFloat64NaND0Ev to i8*), i8* bitcast (void (%"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN"*)* @_ZN2v88internal8compiler12_GLOBAL__N_123OutOfLineLoadFloat64NaN8GenerateEv to i8*)] }, align 8
@switch.table._ZN2v88internal8compiler13CodeGenerator18AssembleArchSelectEPNS1_11InstructionENS1_14FlagsConditionE = private unnamed_addr constant [22 x i32] [i32 4, i32 5, i32 12, i32 13, i32 14, i32 15, i32 2, i32 3, i32 6, i32 7, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 5, i32 0, i32 1], align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13CodeGenerator24AssembleDeconstructFrameEv(%"class.v8::internal::compiler::CodeGenerator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6
  %3 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = trunc i64 %9 to i32
  tail call void @_ZN2v88internal8compiler19UnwindingInfoWriter22MarkFrameDeconstructedEi(%"class.v8::internal::compiler::UnwindingInfoWriter"* %2, i32 %10) #11
  %11 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %11, i32 4, i32 5, i32 8) #11
  tail call void @_ZN2v88internal9Assembler4popqENS0_8RegisterE(%"class.v8::internal::Assembler"* %11, i32 5) #11
  ret void
}

declare void @_ZN2v88internal8compiler19UnwindingInfoWriter22MarkFrameDeconstructedEi(%"class.v8::internal::compiler::UnwindingInfoWriter"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN2v88internal9Assembler4popqENS0_8RegisterE(%"class.v8::internal::Assembler"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13CodeGenerator23AssemblePrepareTailCallEv(%"class.v8::internal::compiler::CodeGenerator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 3
  %3 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %3, i64 0, i32 4
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %8, i32 5, i64 17664, i32 131072, i32 8) #11
  %9 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %2, align 8
  br label %10

10:                                               ; preds = %1, %7
  %11 = phi %"class.v8::internal::compiler::FrameAccessState"* [ %3, %1 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %11, i64 0, i32 1
  store i8 0, i8* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13CodeGenerator25AssembleTailCallBeforeGapEPNS1_11InstructionEi(%"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::Instruction"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::ZoneVector.707", align 8
  %5 = alloca %"class.v8::internal::compiler::X64OperandConverter", align 8
  %6 = bitcast %"class.v8::internal::ZoneVector.707"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %8 = bitcast %"class.v8::internal::Zone"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::ZoneVector.707", %"class.v8::internal::ZoneVector.707"* %4, i64 0, i32 0, i32 0, i32 2, i32 1
  %11 = bitcast %"struct.std::__1::__compressed_pair_elem.712"* %10 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #11
  store i64 %9, i64* %11, align 8
  call void @_ZN2v88internal8compiler13CodeGenerator22GetPushCompatibleMovesEPNS1_11InstructionENS_4base5FlagsINS2_12PushTypeFlagEiEEPNS0_10ZoneVectorIPNS1_12MoveOperandsEEE(%"class.v8::internal::compiler::Instruction"* %1, i32 7, %"class.v8::internal::ZoneVector.707"* nonnull %4) #11
  %12 = getelementptr inbounds %"class.v8::internal::ZoneVector.707", %"class.v8::internal::ZoneVector.707"* %4, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::ZoneVector.707", %"class.v8::internal::ZoneVector.707"* %4, i64 0, i32 0, i32 0, i32 1
  %15 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %14, align 8
  %16 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %13, %15
  br i1 %16, label %133, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %15, i64 -1
  %19 = load %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %19, i64 0, i32 1, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = ashr i64 %21, 35
  %23 = trunc i64 %22 to i32
  %24 = add nsw i32 %23, 1
  %25 = icmp eq i32 %24, %2
  br i1 %25, label %26, label %133

26:                                               ; preds = %17
  %27 = bitcast %"class.v8::internal::compiler::X64OperandConverter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #11
  %28 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %5, i64 0, i32 0, i32 0
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %28, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %5, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::Instruction"* %1, %"class.v8::internal::compiler::Instruction"** %29, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %31 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 3
  %32 = getelementptr %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 0
  %33 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %30, i64 0, i32 0, i32 0, i32 0
  br label %35

34:                                               ; preds = %125
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #11
  br label %133

35:                                               ; preds = %26, %125
  %36 = phi %"class.v8::internal::compiler::MoveOperands"** [ %13, %26 ], [ %131, %125 ]
  %37 = load %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %37, i64 0, i32 1, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %37, i64 0, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %31, align 8
  %43 = ashr i64 %39, 35
  %44 = trunc i64 %43 to i32
  %45 = load i32, i32* %32, align 8
  %46 = icmp slt i32 %45, 0
  br i1 %46, label %47, label %56

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %42, i64 0, i32 0
  %49 = load %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::Frame"** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %49, i64 0, i32 3, i32 3
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %49, i64 0, i32 2
  %53 = load i32, i32* %52, align 8
  %54 = sub i32 1, %51
  %55 = sub i32 %54, %53
  br label %77

56:                                               ; preds = %35
  %57 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %42, i64 0, i32 4
  %58 = load i8, i8* %57, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %70, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %42, i64 0, i32 0
  %62 = load %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::Frame"** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %62, i64 0, i32 3, i32 3
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %62, i64 0, i32 2
  %66 = load i32, i32* %65, align 8
  %67 = add i32 %64, -2
  %68 = add i32 %67, %66
  %69 = sub i32 0, %68
  br label %70

70:                                               ; preds = %60, %56
  %71 = phi i32 [ %69, %60 ], [ 1, %56 ]
  %72 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %42, i64 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = add nsw i32 %44, -2
  %75 = add i32 %74, %71
  %76 = sub i32 %75, %73
  br label %77

77:                                               ; preds = %70, %47
  %78 = phi i32 [ %55, %47 ], [ %76, %70 ]
  %79 = icmp sgt i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %77
  %81 = shl nsw i32 %78, 3
  br label %87

82:                                               ; preds = %77
  %83 = icmp eq i32 %78, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %82
  %85 = shl i32 %78, 3
  %86 = sub i32 0, %85
  br label %87

87:                                               ; preds = %84, %80
  %88 = phi i32 [ %86, %84 ], [ %81, %80 ]
  %89 = phi i8 [ 0, %84 ], [ 5, %80 ]
  %90 = zext i32 %88 to i64
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %33, i8 zeroext %89, i32 4, i64 %90, i32 8) #11
  %91 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %42, i64 0, i32 3
  %92 = load i32, i32* %91, align 4
  %93 = add nsw i32 %92, %78
  store i32 %93, i32* %91, align 4
  br label %94

94:                                               ; preds = %87, %82
  %95 = and i64 %41, 7
  %96 = icmp ugt i64 %95, 4
  %97 = and i64 %41, 24
  %98 = icmp eq i64 %97, 8
  %99 = and i1 %96, %98
  br i1 %99, label %100, label %110

100:                                              ; preds = %94
  %101 = lshr i64 %41, 5
  %102 = trunc i64 %101 to i8
  %103 = icmp ult i8 %102, 12
  br i1 %103, label %104, label %124

104:                                              ; preds = %100
  %105 = ashr i64 %41, 35
  %106 = trunc i64 %105 to i32
  %107 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %5, i32 %106, i32 0)
  %108 = extractvalue { i64, i32 } %107, 0
  %109 = extractvalue { i64, i32 } %107, 1
  call void @_ZN2v88internal14TurboAssembler4PushENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %30, i64 %108, i32 %109) #11
  br label %125

110:                                              ; preds = %94
  %111 = icmp eq i64 %97, 0
  %112 = and i1 %96, %111
  br i1 %112, label %113, label %120

113:                                              ; preds = %110
  %114 = lshr i64 %41, 5
  %115 = trunc i64 %114 to i8
  %116 = icmp ult i8 %115, 12
  br i1 %116, label %117, label %124

117:                                              ; preds = %113
  %118 = ashr i64 %41, 35
  %119 = trunc i64 %118 to i32
  call void @_ZN2v88internal14TurboAssembler4PushENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %30, i32 %119) #11
  br label %125

120:                                              ; preds = %110
  %121 = icmp eq i64 %95, 3
  br i1 %121, label %122, label %124

122:                                              ; preds = %120
  %123 = lshr i64 %41, 32
  call void @_ZN2v88internal14TurboAssembler4PushENS0_9ImmediateE(%"class.v8::internal::TurboAssembler"* %30, i64 %123) #11
  br label %125

124:                                              ; preds = %113, %100, %120
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0)) #12
  unreachable

125:                                              ; preds = %117, %122, %104
  %126 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %31, align 8
  %127 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %126, i64 0, i32 3
  %128 = load i32, i32* %127, align 4
  %129 = add nsw i32 %128, 1
  store i32 %129, i32* %127, align 4
  %130 = bitcast %"class.v8::internal::compiler::MoveOperands"* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %130, i8 0, i64 16, i1 false) #11
  %131 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %36, i64 1
  %132 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %131, %15
  br i1 %132, label %34, label %35

133:                                              ; preds = %3, %34, %17
  %134 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 3
  %135 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %134, align 8
  %136 = getelementptr %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 0
  %137 = load i32, i32* %136, align 8
  %138 = icmp slt i32 %137, 0
  br i1 %138, label %139, label %148

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %135, i64 0, i32 0
  %141 = load %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::Frame"** %140, align 8
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %141, i64 0, i32 3, i32 3
  %143 = load i32, i32* %142, align 4
  %144 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %141, i64 0, i32 2
  %145 = load i32, i32* %144, align 8
  %146 = sub i32 1, %143
  %147 = sub i32 %146, %145
  br label %169

148:                                              ; preds = %133
  %149 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %135, i64 0, i32 4
  %150 = load i8, i8* %149, align 8, !range !2
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %162, label %152

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %135, i64 0, i32 0
  %154 = load %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::Frame"** %153, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %154, i64 0, i32 3, i32 3
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %154, i64 0, i32 2
  %158 = load i32, i32* %157, align 8
  %159 = add i32 %156, -2
  %160 = add i32 %159, %158
  %161 = sub i32 0, %160
  br label %162

162:                                              ; preds = %152, %148
  %163 = phi i32 [ %161, %152 ], [ 1, %148 ]
  %164 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %135, i64 0, i32 3
  %165 = load i32, i32* %164, align 4
  %166 = add i32 %2, -2
  %167 = add i32 %166, %163
  %168 = sub i32 %167, %165
  br label %169

169:                                              ; preds = %162, %139
  %170 = phi i32 [ %147, %139 ], [ %168, %162 ]
  %171 = icmp sgt i32 %170, 0
  br i1 %171, label %172, label %179

172:                                              ; preds = %169
  %173 = shl nsw i32 %170, 3
  %174 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %175 = zext i32 %173 to i64
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %174, i8 zeroext 5, i32 4, i64 %175, i32 8) #11
  %176 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %135, i64 0, i32 3
  %177 = load i32, i32* %176, align 4
  %178 = add nsw i32 %177, %170
  store i32 %178, i32* %176, align 4
  br label %179

179:                                              ; preds = %169, %172
  %180 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %12, align 8
  %181 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %180, null
  br i1 %181, label %185, label %182

182:                                              ; preds = %179
  %183 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %180 to i64
  %184 = bitcast %"class.v8::internal::compiler::MoveOperands"*** %14 to i64*
  store i64 %183, i64* %184, align 8
  br label %185

185:                                              ; preds = %179, %182
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN2v88internal8compiler13CodeGenerator22GetPushCompatibleMovesEPNS1_11InstructionENS_4base5FlagsINS2_12PushTypeFlagEiEEPNS0_10ZoneVectorIPNS1_12MoveOperandsEEE(%"class.v8::internal::compiler::Instruction"*, i32, %"class.v8::internal::ZoneVector.707"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN2v88internal14TurboAssembler4PushENS0_7OperandE(%"class.v8::internal::TurboAssembler"*, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::Operand", align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::CodeGenerator"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %6, i64 0, i32 3
  %8 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %7, align 8
  %9 = tail call i32 @_ZNK2v88internal8compiler16FrameAccessState14GetFrameOffsetEi(%"class.v8::internal::compiler::FrameAccessState"* %8, i32 %1) #11
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  %12 = select i1 %11, %"class.v8::internal::Register"* bitcast ({ i32 }* @_ZN2v88internalL3rbpE to %"class.v8::internal::Register"*), %"class.v8::internal::Register"* bitcast ({ i32 }* @_ZN2v88internalL3rspE to %"class.v8::internal::Register"*)
  %13 = getelementptr inbounds %"class.v8::internal::Register", %"class.v8::internal::Register"* %12, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %9, -2
  %16 = add nsw i32 %15, %2
  %17 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %4, i64 0, i32 0, i32 0
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %4, i64 0, i32 0, i32 2
  store i8 1, i8* %18, align 2
  switch i32 %14, label %26 [
    i32 4, label %19
    i32 12, label %19
  ]

19:                                               ; preds = %3, %3
  %20 = trunc i32 %14 to i8
  %21 = and i8 %20, 7
  %22 = or i8 %21, 32
  %23 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %4, i64 0, i32 0, i32 1, i64 1
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %14, 3
  %25 = trunc i32 %24 to i8
  store i8 %25, i8* %17, align 8
  store i8 2, i8* %18, align 2
  br label %26

26:                                               ; preds = %19, %3
  %27 = phi i64 [ 1, %3 ], [ 2, %19 ]
  %28 = phi i8 [ 0, %3 ], [ %25, %19 ]
  %29 = icmp eq i32 %16, 0
  br i1 %29, label %30, label %38

30:                                               ; preds = %26
  switch i32 %14, label %31 [
    i32 13, label %38
    i32 5, label %38
  ]

31:                                               ; preds = %30
  %32 = trunc i32 %14 to i8
  %33 = and i8 %32, 7
  %34 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %4, i64 0, i32 0, i32 1, i64 0
  store i8 %33, i8* %34, align 1
  %35 = lshr i32 %14, 3
  %36 = trunc i32 %35 to i8
  %37 = or i8 %28, %36
  store i8 %37, i8* %17, align 8
  br label %64

38:                                               ; preds = %30, %30, %26
  %39 = sext i32 %16 to i64
  %40 = add nsw i64 %39, 128
  %41 = icmp ult i64 %40, 256
  %42 = trunc i32 %14 to i8
  %43 = and i8 %42, 7
  br i1 %41, label %44, label %54

44:                                               ; preds = %38
  %45 = or i8 %43, 64
  %46 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %4, i64 0, i32 0, i32 1, i64 0
  store i8 %45, i8* %46, align 1
  %47 = lshr i32 %14, 3
  %48 = trunc i32 %47 to i8
  %49 = or i8 %28, %48
  store i8 %49, i8* %17, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %4, i64 0, i32 0, i32 1, i64 %27
  %51 = trunc i32 %16 to i8
  store i8 %51, i8* %50, align 1
  %52 = load i8, i8* %18, align 2
  %53 = add i8 %52, 1
  store i8 %53, i8* %18, align 2
  br label %64

54:                                               ; preds = %38
  %55 = or i8 %43, -128
  %56 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %4, i64 0, i32 0, i32 1, i64 0
  store i8 %55, i8* %56, align 1
  %57 = lshr i32 %14, 3
  %58 = trunc i32 %57 to i8
  %59 = or i8 %28, %58
  store i8 %59, i8* %17, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %4, i64 0, i32 0, i32 1, i64 %27
  %61 = bitcast i8* %60 to i32*
  store i32 %16, i32* %61, align 1
  %62 = load i8, i8* %18, align 2
  %63 = add i8 %62, 4
  store i8 %63, i8* %18, align 2
  br label %64

64:                                               ; preds = %31, %44, %54
  %65 = bitcast %"class.v8::internal::Operand"* %4 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %4, i64 0, i32 0, i32 1, i64 7
  %68 = bitcast i8* %67 to i32*
  %69 = load i32, i32* %68, align 1
  %70 = insertvalue { i64, i32 } undef, i64 %66, 0
  %71 = insertvalue { i64, i32 } %70, i32 %69, 1
  ret { i64, i32 } %71
}

declare void @_ZN2v88internal14TurboAssembler4PushENS0_8RegisterE(%"class.v8::internal::TurboAssembler"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler4PushENS0_9ImmediateE(%"class.v8::internal::TurboAssembler"*, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13CodeGenerator24AssembleTailCallAfterGapEPNS1_11InstructionEi(%"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::Instruction"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %5 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 3
  %6 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %5, align 8
  %7 = getelementptr %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %10, label %19

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %6, i64 0, i32 0
  %12 = load %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::Frame"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %12, i64 0, i32 3, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %12, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = sub i32 1, %14
  %18 = sub i32 %17, %16
  br label %40

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %6, i64 0, i32 4
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %33, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %6, i64 0, i32 0
  %25 = load %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::Frame"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %25, i64 0, i32 3, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %25, i64 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = add i32 %27, -2
  %31 = add i32 %30, %29
  %32 = sub i32 0, %31
  br label %33

33:                                               ; preds = %23, %19
  %34 = phi i32 [ %32, %23 ], [ 1, %19 ]
  %35 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %6, i64 0, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = add i32 %2, -2
  %38 = add i32 %37, %34
  %39 = sub i32 %38, %36
  br label %40

40:                                               ; preds = %33, %10
  %41 = phi i32 [ %18, %10 ], [ %39, %33 ]
  %42 = icmp sgt i32 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %40
  %44 = shl nsw i32 %41, 3
  %45 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %4, i64 0, i32 0, i32 0, i32 0
  %46 = zext i32 %44 to i64
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %45, i8 zeroext 5, i32 4, i64 %46, i32 8) #11
  br label %54

47:                                               ; preds = %40
  %48 = icmp eq i32 %41, 0
  br i1 %48, label %58, label %49

49:                                               ; preds = %47
  %50 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %4, i64 0, i32 0, i32 0, i32 0
  %51 = shl i32 %41, 3
  %52 = sub i32 0, %51
  %53 = zext i32 %52 to i64
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %50, i8 zeroext 0, i32 4, i64 %53, i32 8) #11
  br label %54

54:                                               ; preds = %49, %43
  %55 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %6, i64 0, i32 3
  %56 = load i32, i32* %55, align 4
  %57 = add nsw i32 %56, %41
  store i32 %57, i32* %55, align 4
  br label %58

58:                                               ; preds = %54, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13CodeGenerator30AssembleCodeStartRegisterCheckEv(%"class.v8::internal::compiler::CodeGenerator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  tail call void @_ZN2v88internal14TurboAssembler23ComputeCodeStartAddressENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %2, i32 3) #11
  %3 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %2, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %3, i8 zeroext 59, i32 3, i32 1, i32 8) #11
  tail call void @_ZN2v88internal14TurboAssembler6AssertENS0_9ConditionENS0_11AbortReasonE(%"class.v8::internal::TurboAssembler"* %2, i32 4, i8 zeroext 56) #11
  ret void
}

declare void @_ZN2v88internal14TurboAssembler23ComputeCodeStartAddressENS0_8RegisterE(%"class.v8::internal::TurboAssembler"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler6AssertENS0_9ConditionENS0_11AbortReasonE(%"class.v8::internal::TurboAssembler"*, i32, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13CodeGenerator20BailoutIfDeoptimizedEv(%"class.v8::internal::compiler::CodeGenerator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  tail call void @_ZN2v88internal14TurboAssembler22LoadTaggedPointerFieldENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %2, i32 3, i64 13648128, i32 131072) #11
  %3 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %2, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler9emit_testENS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %3, i64 475904, i32 131072, i64 1, i32 4) #11
  %4 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 2
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 41
  %7 = tail call i64* @_ZN2v88internal8Builtins14builtin_handleEi(%"class.v8::internal::Builtins"* %6, i32 86) #11
  tail call void @_ZN2v88internal14TurboAssembler4JumpENS0_6HandleINS0_4CodeEEENS0_9RelocInfo4ModeENS0_9ConditionE(%"class.v8::internal::TurboAssembler"* %2, i64* %7, i8 signext 1, i32 5) #11
  ret void
}

declare void @_ZN2v88internal14TurboAssembler22LoadTaggedPointerFieldENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler4JumpENS0_6HandleINS0_4CodeEEENS0_9RelocInfo4ModeENS0_9ConditionE(%"class.v8::internal::TurboAssembler"*, i64*, i8 signext, i32) local_unnamed_addr #1

declare i64* @_ZN2v88internal8Builtins14builtin_handleEi(%"class.v8::internal::Builtins"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13CodeGenerator46GenerateSpeculationPoisonFromCodeStartRegisterEv(%"class.v8::internal::compiler::CodeGenerator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  tail call void @_ZN2v88internal14TurboAssembler23ComputeCodeStartAddressENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %2, i32 3) #11
  %3 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %2, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %3, i8 zeroext 51, i32 11, i32 11, i32 4) #11
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %3, i8 zeroext 59, i32 1, i32 3, i32 8) #11
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %3, i32 3, i64 4294967295, i32 8) #11
  tail call void @_ZN2v88internal9Assembler5cmovqENS0_9ConditionENS0_8RegisterES3_(%"class.v8::internal::Assembler"* %3, i32 4, i32 11, i32 3) #11
  ret void
}

declare void @_ZN2v88internal9Assembler5cmovqENS0_9ConditionENS0_8RegisterES3_(%"class.v8::internal::Assembler"*, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13CodeGenerator33AssembleRegisterArgumentPoisoningEv(%"class.v8::internal::compiler::CodeGenerator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %2, i8 zeroext 35, i32 7, i32 11, i32 8) #11
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %2, i8 zeroext 35, i32 6, i32 11, i32 8) #11
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %2, i8 zeroext 35, i32 4, i32 11, i32 8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal8compiler13CodeGenerator23AssembleArchInstructionEPNS1_11InstructionE(%"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  %25 = alloca i64, align 8
  %26 = alloca i64, align 8
  %27 = alloca i64, align 8
  %28 = alloca i64, align 8
  %29 = alloca i64, align 8
  %30 = alloca i64, align 8
  %31 = alloca i64, align 8
  %32 = alloca i64, align 8
  %33 = alloca i64, align 8
  %34 = alloca i64, align 8
  %35 = alloca i64, align 8
  %36 = alloca i64, align 8
  %37 = alloca i64, align 8
  %38 = alloca i64, align 8
  %39 = alloca i64, align 8
  %40 = alloca i64, align 8
  %41 = alloca i64, align 8
  %42 = alloca i64, align 8
  %43 = alloca i64, align 8
  %44 = alloca i64, align 8
  %45 = alloca i64, align 8
  %46 = alloca i64, align 8
  %47 = alloca i64, align 8
  %48 = alloca i64, align 8
  %49 = alloca i64, align 8
  %50 = alloca i64, align 8
  %51 = alloca i64, align 8
  %52 = alloca i64, align 8
  %53 = alloca i64, align 8
  %54 = alloca i64, align 8
  %55 = alloca i64, align 8
  %56 = alloca i64, align 8
  %57 = alloca i64, align 8
  %58 = alloca i64, align 8
  %59 = alloca i64, align 8
  %60 = alloca i64, align 8
  %61 = alloca i64, align 8
  %62 = alloca i64, align 8
  %63 = alloca i64, align 8
  %64 = alloca i64, align 8
  %65 = alloca i64, align 8
  %66 = alloca i64, align 8
  %67 = alloca i64, align 8
  %68 = alloca i64, align 8
  %69 = alloca i64, align 8
  %70 = alloca i64, align 8
  %71 = alloca i64, align 8
  %72 = alloca i64, align 8
  %73 = alloca i64, align 8
  %74 = alloca i64, align 8
  %75 = alloca i64, align 8
  %76 = alloca i64, align 8
  %77 = alloca i64, align 8
  %78 = alloca i64, align 8
  %79 = alloca i64, align 8
  %80 = alloca i64, align 8
  %81 = alloca i64, align 8
  %82 = alloca i64, align 8
  %83 = alloca i64, align 8
  %84 = alloca i64, align 8
  %85 = alloca i64, align 8
  %86 = alloca i64, align 8
  %87 = alloca i64, align 8
  %88 = alloca i64, align 8
  %89 = alloca i64, align 8
  %90 = alloca i64, align 8
  %91 = alloca i64, align 8
  %92 = alloca i64, align 8
  %93 = alloca i64, align 8
  %94 = alloca i64, align 8
  %95 = alloca i64, align 8
  %96 = alloca i64, align 8
  %97 = alloca i64, align 8
  %98 = alloca i64, align 8
  %99 = alloca i64, align 8
  %100 = alloca i64, align 8
  %101 = alloca i64, align 8
  %102 = alloca i64, align 8
  %103 = alloca i64, align 8
  %104 = alloca i64, align 8
  %105 = alloca i64, align 8
  %106 = alloca i64, align 8
  %107 = alloca i64, align 8
  %108 = alloca i64, align 8
  %109 = alloca i64, align 8
  %110 = alloca i64, align 8
  %111 = alloca i64, align 8
  %112 = alloca i64, align 8
  %113 = alloca i64, align 8
  %114 = alloca i64, align 8
  %115 = alloca i64, align 8
  %116 = alloca i64, align 8
  %117 = alloca i64, align 8
  %118 = alloca i64, align 8
  %119 = alloca i64, align 8
  %120 = alloca i64, align 8
  %121 = alloca i64, align 8
  %122 = alloca i64, align 8
  %123 = alloca i64, align 8
  %124 = alloca i64, align 8
  %125 = alloca i64, align 8
  %126 = alloca i64, align 8
  %127 = alloca i64, align 8
  %128 = alloca i64, align 8
  %129 = alloca i64, align 8
  %130 = alloca i64, align 8
  %131 = alloca %"class.v8::internal::Operand", align 8
  %132 = alloca i64, align 8
  %133 = alloca i64, align 8
  %134 = alloca i64, align 8
  %135 = alloca i64, align 8
  %136 = alloca i64, align 8
  %137 = alloca i64, align 8
  %138 = alloca i64, align 8
  %139 = alloca %"class.v8::internal::compiler::Constant", align 8
  %140 = alloca i64, align 8
  %141 = alloca i64, align 8
  %142 = alloca i64, align 8
  %143 = alloca i64, align 8
  %144 = alloca i64, align 8
  %145 = alloca i64, align 8
  %146 = alloca i64, align 8
  %147 = alloca i64, align 8
  %148 = alloca i64, align 8
  %149 = alloca i64, align 8
  %150 = alloca i64, align 8
  %151 = alloca i64, align 8
  %152 = alloca %"class.v8::internal::compiler::Constant", align 8
  %153 = alloca i64, align 8
  %154 = alloca %"class.v8::internal::compiler::X64OperandConverter", align 8
  %155 = alloca %"class.v8::internal::Label", align 4
  %156 = alloca %"struct.v8::internal::Operand::Data", align 8
  %157 = alloca i32, align 4
  %158 = alloca i64, align 8
  %159 = alloca %"class.v8::internal::Operand", align 8
  %160 = alloca i64, align 8
  %161 = alloca i64, align 8
  %162 = alloca i64, align 8
  %163 = alloca i64, align 8
  %164 = alloca i64, align 8
  %165 = alloca i64, align 8
  %166 = alloca i64, align 8
  %167 = alloca i64, align 8
  %168 = alloca i64, align 8
  %169 = alloca i64, align 8
  %170 = alloca i64, align 8
  %171 = alloca i64, align 8
  %172 = alloca i64, align 8
  %173 = alloca i64, align 8
  %174 = alloca i64, align 8
  %175 = alloca i64, align 8
  %176 = alloca i64, align 8
  %177 = alloca i64, align 8
  %178 = alloca i64, align 8
  %179 = alloca i64, align 8
  %180 = alloca i64, align 8
  %181 = alloca i64, align 8
  %182 = alloca i64, align 8
  %183 = alloca i64, align 8
  %184 = alloca i64, align 8
  %185 = alloca i64, align 8
  %186 = alloca i64, align 8
  %187 = alloca i64, align 8
  %188 = alloca %"class.v8::internal::Label", align 4
  %189 = alloca %"class.v8::internal::Label", align 4
  %190 = alloca %"class.v8::internal::Label", align 4
  %191 = alloca %"class.v8::internal::Label", align 4
  %192 = alloca %"class.v8::internal::Label", align 4
  %193 = alloca %"class.v8::internal::Label", align 4
  %194 = alloca %"class.v8::internal::Label", align 4
  %195 = alloca %"class.v8::internal::Label", align 4
  %196 = alloca %"class.v8::internal::Label", align 4
  %197 = alloca %"class.v8::internal::Label", align 4
  %198 = alloca %"class.v8::internal::Label", align 4
  %199 = alloca %"class.v8::internal::Label", align 4
  %200 = alloca %"class.v8::internal::Label", align 4
  %201 = alloca %"class.v8::internal::Label", align 4
  %202 = alloca %"class.v8::internal::Label", align 4
  %203 = alloca i64, align 8
  %204 = alloca i64, align 8
  %205 = alloca i64, align 8
  %206 = alloca i64, align 8
  %207 = alloca i64, align 8
  %208 = alloca i64, align 8
  %209 = alloca i64, align 8
  %210 = alloca i64, align 8
  %211 = alloca i64, align 8
  %212 = alloca i64, align 8
  %213 = alloca i64, align 8
  %214 = alloca i64, align 8
  %215 = alloca i64, align 8
  %216 = alloca i64, align 8
  %217 = alloca i64, align 8
  %218 = alloca i64, align 8
  %219 = alloca i64, align 8
  %220 = alloca i64, align 8
  %221 = alloca i64, align 8
  %222 = alloca [4 x i32], align 16
  %223 = alloca [4 x i32], align 16
  %224 = alloca i64, align 8
  %225 = alloca i64, align 8
  %226 = alloca %"class.v8::internal::Label", align 4
  %227 = alloca %"class.v8::internal::Label", align 4
  %228 = alloca %"class.v8::internal::Label", align 4
  %229 = alloca %"class.v8::internal::Label", align 4
  %230 = alloca %"class.v8::internal::Label", align 4
  %231 = alloca %"class.v8::internal::Label", align 4
  %232 = alloca %"class.v8::internal::Label", align 4
  %233 = alloca %"class.v8::internal::Label", align 4
  %234 = alloca %"class.v8::internal::Label", align 4
  %235 = alloca %"class.v8::internal::Label", align 4
  %236 = alloca %"class.v8::internal::Label", align 4
  %237 = alloca %"class.v8::internal::Label", align 4
  %238 = alloca %"class.v8::internal::Label", align 4
  %239 = alloca %"class.v8::internal::Label", align 4
  %240 = alloca %"class.v8::internal::Label", align 4
  %241 = alloca %"class.v8::internal::Label", align 4
  %242 = alloca %"class.v8::internal::Label", align 4
  %243 = alloca %"class.v8::internal::Label", align 4
  %244 = alloca %"class.v8::internal::Label", align 4
  %245 = alloca %"class.v8::internal::Label", align 4
  %246 = alloca %"class.v8::internal::Label", align 4
  %247 = alloca %"class.v8::internal::Label", align 4
  %248 = alloca %"class.v8::internal::Label", align 4
  %249 = alloca %"class.v8::internal::Label", align 4
  %250 = alloca %"class.v8::internal::Label", align 4
  %251 = alloca %"class.v8::internal::Label", align 4
  %252 = alloca %"class.v8::internal::Label", align 4
  %253 = alloca %"class.v8::internal::Label", align 4
  %254 = alloca %"class.v8::internal::Label", align 4
  %255 = alloca %"class.v8::internal::Label", align 4
  %256 = alloca %"class.v8::internal::Label", align 4
  %257 = alloca %"class.v8::internal::Label", align 4
  %258 = alloca %"class.v8::internal::Label", align 4
  %259 = alloca %"class.v8::internal::Label", align 4
  %260 = alloca %"class.v8::internal::Label", align 4
  %261 = alloca %"class.v8::internal::Label", align 4
  %262 = alloca %"class.v8::internal::Label", align 4
  %263 = alloca %"class.v8::internal::Label", align 4
  %264 = alloca %"class.v8::internal::Label", align 4
  %265 = alloca %"class.v8::internal::Label", align 4
  %266 = alloca %"class.v8::internal::Label", align 4
  %267 = alloca %"class.v8::internal::Label", align 4
  %268 = alloca %"class.v8::internal::Label", align 4
  %269 = alloca %"class.v8::internal::Label", align 4
  %270 = alloca %"class.v8::internal::Label", align 4
  %271 = bitcast %"class.v8::internal::compiler::X64OperandConverter"* %154 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %271) #11
  %272 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0, i32 0
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %272, align 8
  %273 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::Instruction"* %1, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %274 = getelementptr %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 0
  %275 = load i32, i32* %274, align 8
  %276 = and i32 %275, 511
  switch i32 %276, label %23402 [
    i32 3, label %277
    i32 6, label %315
    i32 5, label %332
    i32 2, label %378
    i32 0, label %420
    i32 1, label %460
    i32 4, label %485
    i32 7, label %532
    i32 8, label %539
    i32 9, label %551
    i32 11, label %563
    i32 10, label %575
    i32 12, label %659
    i32 13, label %677
    i32 14, label %678
    i32 18, label %679
    i32 16, label %687
    i32 17, label %697
    i32 19, label %703
    i32 37, label %23401
    i32 20, label %705
    i32 21, label %709
    i32 22, label %715
    i32 23, label %721
    i32 28, label %734
    i32 29, label %782
    i32 24, label %791
    i32 25, label %842
    i32 27, label %920
    i32 142, label %930
    i32 143, label %932
    i32 26, label %934
    i32 73, label %1012
    i32 74, label %1015
    i32 75, label %1018
    i32 76, label %1021
    i32 77, label %1024
    i32 78, label %1027
    i32 79, label %1030
    i32 80, label %1033
    i32 81, label %1036
    i32 82, label %1039
    i32 83, label %1042
    i32 84, label %1045
    i32 85, label %1048
    i32 86, label %1051
    i32 88, label %1054
    i32 87, label %1057
    i32 89, label %1060
    i32 90, label %1063
    i32 91, label %1066
    i32 92, label %1069
    i32 93, label %1072
    i32 95, label %1075
    i32 94, label %1191
    i32 111, label %1307
    i32 110, label %1423
    i32 97, label %1539
    i32 96, label %1655
    i32 101, label %1771
    i32 100, label %1914
    i32 99, label %2057
    i32 98, label %2200
    i32 105, label %2343
    i32 104, label %2486
    i32 103, label %2629
    i32 102, label %2772
    i32 113, label %2915
    i32 112, label %3023
    i32 114, label %3131
    i32 115, label %3161
    i32 117, label %3191
    i32 116, label %3202
    i32 119, label %3213
    i32 118, label %3224
    i32 120, label %3235
    i32 121, label %3260
    i32 122, label %3285
    i32 123, label %3310
    i32 107, label %3335
    i32 106, label %3451
    i32 109, label %3567
    i32 108, label %3683
    i32 125, label %3802
    i32 124, label %3860
    i32 127, label %3918
    i32 126, label %3976
    i32 129, label %4034
    i32 128, label %4092
    i32 131, label %4150
    i32 130, label %4208
    i32 133, label %4266
    i32 132, label %4324
    i32 134, label %4382
    i32 135, label %4420
    i32 136, label %4458
    i32 137, label %4496
    i32 138, label %4534
    i32 139, label %4572
    i32 140, label %4610
    i32 141, label %4616
    i32 144, label %4622
    i32 145, label %4696
    i32 146, label %4755
    i32 147, label %4814
    i32 148, label %4873
    i32 149, label %4939
    i32 150, label %4977
    i32 151, label %5015
    i32 152, label %5053
    i32 155, label %5091
    i32 153, label %5116
    i32 154, label %5154
    i32 156, label %5192
    i32 157, label %5266
    i32 158, label %5325
    i32 159, label %5384
    i32 160, label %5443
    i32 161, label %5510
    i32 166, label %5627
    i32 168, label %5782
    i32 167, label %5987
    i32 169, label %6142
    i32 239, label %6347
    i32 162, label %6347
    i32 240, label %6353
    i32 163, label %6353
    i32 164, label %6359
    i32 165, label %6406
    i32 170, label %6431
    i32 171, label %6469
    i32 172, label %6507
    i32 173, label %6555
    i32 174, label %6669
    i32 175, label %6783
    i32 176, label %6849
    i32 177, label %6915
    i32 178, label %6953
    i32 179, label %6991
    i32 180, label %7029
    i32 181, label %7067
    i32 182, label %7105
    i32 183, label %7143
    i32 184, label %7181
    i32 185, label %7219
    i32 186, label %7259
    i32 187, label %7297
    i32 188, label %7336
    i32 189, label %7375
    i32 191, label %7422
    i32 192, label %7463
    i32 193, label %7522
    i32 194, label %7581
    i32 195, label %7640
    i32 196, label %7711
    i32 197, label %7752
    i32 198, label %7811
    i32 199, label %7870
    i32 200, label %7929
    i32 203, label %7995
    i32 204, label %8059
    i32 201, label %8123
    i32 202, label %8187
    i32 190, label %8251
    i32 205, label %8272
    i32 206, label %8390
    i32 207, label %8508
    i32 208, label %8621
    i32 209, label %8739
    i32 210, label %8818
    i32 211, label %8936
    i32 212, label %9054
    i32 213, label %9158
    i32 214, label %9276
    i32 215, label %9355
    i32 216, label %9516
    i32 217, label %9629
    i32 218, label %9654
    i32 219, label %9679
    i32 220, label %9704
    i32 221, label %9751
    i32 223, label %9852
    i32 222, label %9931
    i32 224, label %10023
    i32 225, label %10102
    i32 226, label %10142
    i32 227, label %10180
    i32 228, label %10227
    i32 229, label %10267
    i32 230, label %10354
    i32 231, label %10440
    i32 232, label %10446
    i32 233, label %10452
    i32 234, label %10683
    i32 235, label %10806
    i32 236, label %10918
    i32 237, label %10959
    i32 238, label %10980
    i32 241, label %11006
    i32 242, label %11025
    i32 243, label %11054
    i32 244, label %11083
    i32 245, label %11112
    i32 246, label %11141
    i32 247, label %11161
    i32 248, label %11181
    i32 249, label %11213
    i32 250, label %11245
    i32 251, label %11277
    i32 252, label %11309
    i32 253, label %11369
    i32 257, label %11429
    i32 258, label %11448
    i32 259, label %11462
    i32 285, label %11481
    i32 343, label %11500
    i32 344, label %11514
    i32 260, label %11528
    i32 261, label %11543
    i32 262, label %11564
    i32 263, label %11646
    i32 264, label %11665
    i32 265, label %11724
    i32 266, label %11778
    i32 267, label %11832
    i32 268, label %11851
    i32 269, label %11870
    i32 270, label %11889
    i32 271, label %11918
    i32 272, label %11947
    i32 273, label %11976
    i32 274, label %12005
    i32 275, label %12073
    i32 276, label %12147
    i32 277, label %12179
    i32 278, label %12211
    i32 279, label %12243
    i32 280, label %12275
    i32 281, label %12339
    i32 282, label %12403
    i32 283, label %12432
    i32 284, label %12461
    i32 256, label %12486
    i32 254, label %12511
    i32 255, label %12540
    i32 286, label %12569
    i32 287, label %12611
    i32 288, label %12639
    i32 289, label %12654
    i32 290, label %12669
    i32 291, label %12688
    i32 292, label %12750
    i32 293, label %12807
    i32 294, label %12836
    i32 295, label %12865
    i32 296, label %12945
    i32 299, label %12974
    i32 297, label %13009
    i32 298, label %13029
    i32 300, label %13049
    i32 301, label %13111
    i32 302, label %13131
    i32 303, label %13151
    i32 304, label %13171
    i32 305, label %13191
    i32 306, label %13210
    i32 307, label %13225
    i32 308, label %13244
    i32 309, label %13259
    i32 310, label %13317
    i32 311, label %13337
    i32 312, label %13396
    i32 313, label %13415
    i32 314, label %13430
    i32 315, label %13466
    i32 316, label %13528
    i32 317, label %13590
    i32 318, label %13619
    i32 319, label %13648
    i32 320, label %13677
    i32 321, label %13706
    i32 322, label %13735
    i32 323, label %13764
    i32 324, label %13799
    i32 325, label %13828
    i32 326, label %13854
    i32 327, label %13965
    i32 328, label %13984
    i32 329, label %13999
    i32 330, label %14061
    i32 331, label %14090
    i32 332, label %14119
    i32 333, label %14157
    i32 334, label %14183
    i32 335, label %14202
    i32 336, label %14221
    i32 341, label %14250
    i32 342, label %14268
    i32 417, label %14282
    i32 418, label %14329
    i32 419, label %14340
    i32 345, label %14351
    i32 346, label %14418
    i32 347, label %14447
    i32 348, label %14466
    i32 349, label %14481
    i32 350, label %14517
    i32 351, label %14579
    i32 352, label %14641
    i32 353, label %14670
    i32 354, label %14699
    i32 355, label %14728
    i32 356, label %14757
    i32 357, label %14786
    i32 358, label %14815
    i32 359, label %14844
    i32 360, label %14873
    i32 361, label %14902
    i32 362, label %14934
    i32 363, label %14963
    i32 364, label %14989
    i32 365, label %15008
    i32 366, label %15023
    i32 367, label %15085
    i32 368, label %15114
    i32 369, label %15143
    i32 370, label %15172
    i32 371, label %15201
    i32 372, label %15230
    i32 373, label %15268
    i32 374, label %15294
    i32 375, label %15323
    i32 376, label %15342
    i32 377, label %15368
    i32 378, label %15388
    i32 379, label %15408
    i32 380, label %15428
    i32 381, label %15448
    i32 382, label %15462
    i32 383, label %15480
    i32 384, label %15499
    i32 390, label %15596
    i32 391, label %15695
    i32 385, label %15794
    i32 386, label %15823
    i32 387, label %15930
    i32 388, label %16037
    i32 389, label %16144
    i32 392, label %16251
    i32 393, label %16280
    i32 394, label %16316
    i32 395, label %16431
    i32 396, label %16547
    i32 397, label %16576
    i32 398, label %16605
    i32 399, label %16634
    i32 400, label %16663
    i32 401, label %16692
    i32 402, label %16721
    i32 403, label %16750
    i32 404, label %16782
    i32 405, label %16811
    i32 406, label %16837
    i32 409, label %16866
    i32 407, label %16980
    i32 408, label %17009
    i32 410, label %17038
    i32 411, label %17067
    i32 412, label %17096
    i32 413, label %17134
    i32 414, label %17160
    i32 415, label %17189
    i32 416, label %17208
    i32 337, label %17227
    i32 338, label %17247
    i32 339, label %17267
    i32 340, label %17287
    i32 421, label %17307
    i32 422, label %17336
    i32 423, label %17365
    i32 420, label %17394
    i32 424, label %17409
    i32 425, label %17434
    i32 426, label %17454
    i32 427, label %17474
    i32 428, label %17896
    i32 429, label %17918
    i32 430, label %17986
    i32 431, label %18056
    i32 432, label %18116
    i32 433, label %18167
    i32 434, label %18218
    i32 435, label %18269
    i32 436, label %18320
    i32 437, label %18371
    i32 438, label %18422
    i32 439, label %18473
    i32 440, label %18538
    i32 441, label %18602
    i32 442, label %18628
    i32 443, label %18661
    i32 444, label %18731
    i32 445, label %18896
    i32 446, label %18969
    i32 447, label %19058
    i32 448, label %19243
    i32 449, label %19316
    i32 450, label %19433
    i32 455, label %19503
    i32 456, label %19557
    i32 457, label %19611
    i32 458, label %19665
    i32 459, label %19719
    i32 460, label %19773
    i32 461, label %19827
    i32 462, label %19881
    i32 451, label %19935
    i32 452, label %20016
    i32 453, label %20082
    i32 454, label %20163
    i32 463, label %20262
    i32 464, label %20346
    i32 465, label %20430
    i32 466, label %20430
    i32 467, label %20430
    i32 468, label %20483
    i32 469, label %20503
    i32 470, label %20535
    i32 471, label %20567
    i32 472, label %20599
    i32 38, label %20631
    i32 39, label %20654
    i32 40, label %20677
    i32 41, label %20700
    i32 42, label %20723
    i32 43, label %20737
    i32 44, label %20753
    i32 45, label %20769
    i32 46, label %20785
    i32 47, label %20801
    i32 48, label %20817
    i32 49, label %20871
    i32 50, label %20925
    i32 51, label %20979
    i32 52, label %21033
    i32 53, label %21087
    i32 54, label %21141
    i32 55, label %21195
    i32 56, label %21249
    i32 57, label %21303
    i32 58, label %21357
    i32 59, label %21411
    i32 60, label %21465
    i32 61, label %21519
    i32 62, label %21573
    i32 63, label %21627
    i32 64, label %21681
    i32 65, label %21735
    i32 66, label %21789
    i32 67, label %21843
    i32 68, label %21897
    i32 69, label %21951
    i32 70, label %22005
    i32 71, label %22059
    i32 72, label %22113
    i32 493, label %22167
    i32 494, label %22190
    i32 495, label %22213
    i32 496, label %22227
    i32 497, label %22241
    i32 498, label %22257
    i32 499, label %22273
    i32 500, label %22289
    i32 473, label %22305
    i32 474, label %22359
    i32 475, label %22413
    i32 476, label %22467
    i32 477, label %22521
    i32 478, label %22575
    i32 479, label %22629
    i32 480, label %22683
    i32 481, label %22737
    i32 482, label %22791
    i32 483, label %22845
    i32 484, label %22899
    i32 485, label %22953
    i32 486, label %23007
    i32 487, label %23061
    i32 488, label %23115
    i32 489, label %23169
    i32 490, label %23227
    i32 491, label %23285
    i32 492, label %23343
    i32 30, label %23401
    i32 31, label %23401
    i32 32, label %23401
    i32 33, label %23401
    i32 34, label %23401
    i32 35, label %23401
    i32 36, label %23401
  ]

277:                                              ; preds = %2
  %278 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %279 = load i32, i32* %278, align 4
  %280 = and i32 %279, 255
  %281 = zext i32 %280 to i64
  %282 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %281, i32 0
  %283 = load i64, i64* %282, align 8
  %284 = and i64 %283, 7
  %285 = icmp eq i64 %284, 3
  br i1 %285, label %286, label %297

286:                                              ; preds = %277
  %287 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %288 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %281
  %289 = bitcast %"class.v8::internal::compiler::Constant"* %152 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %289) #11
  %290 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %287, %"class.v8::internal::compiler::InstructionOperand"* %288) #11
  %291 = bitcast %"class.v8::internal::compiler::Constant"* %152 to i64*
  %292 = extractvalue { i64, i64 } %290, 0
  store i64 %292, i64* %291, align 8
  %293 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %152, i64 0, i32 2
  %294 = extractvalue { i64, i64 } %290, 1
  store i64 %294, i64* %293, align 8
  %295 = call i64* @_ZNK2v88internal8compiler8Constant6ToCodeEv(%"class.v8::internal::compiler::Constant"* nonnull %152) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %289) #11
  %296 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  call void @_ZN2v88internal14TurboAssembler4CallENS0_6HandleINS0_4CodeEEENS0_9RelocInfo4ModeE(%"class.v8::internal::TurboAssembler"* %296, i64* %295, i8 signext 1) #11
  br label %311

297:                                              ; preds = %277
  %298 = ashr i64 %283, 35
  %299 = trunc i64 %298 to i32
  %300 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %301 = bitcast %"class.v8::internal::TurboAssembler"* %300 to void (%"class.v8::internal::TurboAssembler"*, i32, i32)***
  %302 = load void (%"class.v8::internal::TurboAssembler"*, i32, i32)**, void (%"class.v8::internal::TurboAssembler"*, i32, i32)*** %301, align 8
  %303 = getelementptr inbounds void (%"class.v8::internal::TurboAssembler"*, i32, i32)*, void (%"class.v8::internal::TurboAssembler"*, i32, i32)** %302, i64 7
  %304 = load void (%"class.v8::internal::TurboAssembler"*, i32, i32)*, void (%"class.v8::internal::TurboAssembler"*, i32, i32)** %303, align 8
  tail call void %304(%"class.v8::internal::TurboAssembler"* %300, i32 %299, i32 %299) #11
  %305 = load i32, i32* %274, align 8
  %306 = and i32 %305, 134217728
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %309, label %308

308:                                              ; preds = %297
  tail call void @_ZN2v88internal14TurboAssembler13RetpolineCallENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %300, i32 %299) #11
  br label %311

309:                                              ; preds = %297
  %310 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %300, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler4callENS0_8RegisterE(%"class.v8::internal::Assembler"* %310, i32 %299) #11
  br label %311

311:                                              ; preds = %308, %309, %286
  call void @_ZN2v88internal8compiler13CodeGenerator18RecordCallPositionEPNS1_11InstructionE(%"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::Instruction"* %1) #11
  %312 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 3
  %313 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %312, align 8
  %314 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %313, i64 0, i32 3
  store i32 0, i32* %314, align 4
  br label %23402

315:                                              ; preds = %2
  %316 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %317 = load i32, i32* %316, align 4
  %318 = and i32 %317, 255
  %319 = zext i32 %318 to i64
  %320 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %319, i32 0
  %321 = load i64, i64* %320, align 8
  %322 = ashr i64 %321, 35
  %323 = trunc i64 %322 to i32
  %324 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %325 = bitcast %"class.v8::internal::TurboAssembler"* %324 to void (%"class.v8::internal::TurboAssembler"*, i32)***
  %326 = load void (%"class.v8::internal::TurboAssembler"*, i32)**, void (%"class.v8::internal::TurboAssembler"*, i32)*** %325, align 8
  %327 = getelementptr inbounds void (%"class.v8::internal::TurboAssembler"*, i32)*, void (%"class.v8::internal::TurboAssembler"*, i32)** %326, i64 4
  %328 = load void (%"class.v8::internal::TurboAssembler"*, i32)*, void (%"class.v8::internal::TurboAssembler"*, i32)** %327, align 8
  tail call void %328(%"class.v8::internal::TurboAssembler"* %324, i32 %323) #11
  tail call void @_ZN2v88internal8compiler13CodeGenerator18RecordCallPositionEPNS1_11InstructionE(%"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::Instruction"* %1) #11
  %329 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 3
  %330 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %329, align 8
  %331 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %330, i64 0, i32 3
  store i32 0, i32* %331, align 4
  br label %23402

332:                                              ; preds = %2
  %333 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %334 = load i32, i32* %333, align 4
  %335 = and i32 %334, 255
  %336 = zext i32 %335 to i64
  %337 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %336, i32 0
  %338 = load i64, i64* %337, align 8
  %339 = and i64 %338, 7
  %340 = icmp eq i64 %339, 3
  br i1 %340, label %341, label %365

341:                                              ; preds = %332
  %342 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %343 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %336
  %344 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %342, %"class.v8::internal::compiler::InstructionOperand"* %343)
  %345 = extractvalue { i64, i64 } %344, 0
  %346 = trunc i64 %345 to i32
  %347 = lshr i64 %345, 32
  %348 = trunc i64 %347 to i8
  %349 = extractvalue { i64, i64 } %344, 1
  %350 = icmp eq i32 %346, 0
  %351 = shl i64 %349, 32
  %352 = ashr exact i64 %351, 32
  %353 = select i1 %350, i64 %352, i64 %349
  %354 = call i32 @_ZNK2v88internal8compiler13CodeGenerator21DetermineStubCallModeEv(%"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %355 = icmp eq i32 %354, 1
  br i1 %355, label %356, label %358

356:                                              ; preds = %341
  %357 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler9near_callElNS0_9RelocInfo4ModeE(%"class.v8::internal::Assembler"* %357, i64 %353, i8 signext %348) #11
  br label %374

358:                                              ; preds = %341
  %359 = load i32, i32* %274, align 8
  %360 = and i32 %359, 134217728
  %361 = icmp eq i32 %360, 0
  %362 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  br i1 %361, label %364, label %363

363:                                              ; preds = %358
  call void @_ZN2v88internal14TurboAssembler13RetpolineCallEmNS0_9RelocInfo4ModeE(%"class.v8::internal::TurboAssembler"* %362, i64 %353, i8 signext %348) #11
  br label %374

364:                                              ; preds = %358
  call void @_ZN2v88internal14TurboAssembler4CallEmNS0_9RelocInfo4ModeE(%"class.v8::internal::TurboAssembler"* %362, i64 %353, i8 signext %348) #11
  br label %374

365:                                              ; preds = %332
  %366 = ashr i64 %338, 35
  %367 = trunc i64 %366 to i32
  %368 = and i32 %275, 134217728
  %369 = icmp eq i32 %368, 0
  %370 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  br i1 %369, label %372, label %371

371:                                              ; preds = %365
  tail call void @_ZN2v88internal14TurboAssembler13RetpolineCallENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %370, i32 %367) #11
  br label %374

372:                                              ; preds = %365
  %373 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %370, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler4callENS0_8RegisterE(%"class.v8::internal::Assembler"* %373, i32 %367) #11
  br label %374

374:                                              ; preds = %356, %364, %363, %371, %372
  call void @_ZN2v88internal8compiler13CodeGenerator18RecordCallPositionEPNS1_11InstructionE(%"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::Instruction"* %1) #11
  %375 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 3
  %376 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %375, align 8
  %377 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %376, i64 0, i32 3
  store i32 0, i32* %377, align 4
  br label %23402

378:                                              ; preds = %2
  %379 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %380 = load i32, i32* %379, align 4
  %381 = and i32 %380, 255
  %382 = zext i32 %381 to i64
  %383 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %382, i32 0
  %384 = load i64, i64* %383, align 8
  %385 = and i64 %384, 7
  %386 = icmp eq i64 %385, 3
  br i1 %386, label %387, label %405

387:                                              ; preds = %378
  %388 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %389 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %382
  %390 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %388, %"class.v8::internal::compiler::InstructionOperand"* %389)
  %391 = extractvalue { i64, i64 } %390, 0
  %392 = trunc i64 %391 to i32
  %393 = lshr i64 %391, 32
  %394 = trunc i64 %393 to i8
  %395 = extractvalue { i64, i64 } %390, 1
  %396 = icmp eq i32 %392, 0
  %397 = shl i64 %395, 32
  %398 = ashr exact i64 %397, 32
  %399 = select i1 %396, i64 %398, i64 %395
  %400 = call i32 @_ZNK2v88internal8compiler13CodeGenerator21DetermineStubCallModeEv(%"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %401 = icmp eq i32 %400, 1
  %402 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %401, label %403, label %404

403:                                              ; preds = %387
  call void @_ZN2v88internal9Assembler8near_jmpElNS0_9RelocInfo4ModeE(%"class.v8::internal::Assembler"* %402, i64 %399, i8 signext %394) #11
  br label %414

404:                                              ; preds = %387
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_11Immediate64Ei(%"class.v8::internal::Assembler"* %402, i32 10, i64 %399, i8 %394, i32 8) #11
  call void @_ZN2v88internal9Assembler3jmpENS0_8RegisterE(%"class.v8::internal::Assembler"* %402, i32 10) #11
  br label %414

405:                                              ; preds = %378
  %406 = ashr i64 %384, 35
  %407 = trunc i64 %406 to i32
  %408 = and i32 %275, 134217728
  %409 = icmp eq i32 %408, 0
  %410 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  br i1 %409, label %412, label %411

411:                                              ; preds = %405
  tail call void @_ZN2v88internal14TurboAssembler13RetpolineJumpENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %410, i32 %407) #11
  br label %414

412:                                              ; preds = %405
  %413 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %410, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler3jmpENS0_8RegisterE(%"class.v8::internal::Assembler"* %413, i32 %407) #11
  br label %414

414:                                              ; preds = %403, %404, %411, %412
  %415 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 3
  store i8 1, i8* %415, align 1
  %416 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 3
  %417 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %416, align 8
  %418 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %417, i64 0, i32 3
  store i32 0, i32* %418, align 4
  %419 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %416, align 8
  call void @_ZN2v88internal8compiler16FrameAccessState23SetFrameAccessToDefaultEv(%"class.v8::internal::compiler::FrameAccessState"* %419) #11
  br label %23402

420:                                              ; preds = %2
  %421 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %422 = load i32, i32* %421, align 4
  %423 = and i32 %422, 255
  %424 = zext i32 %423 to i64
  %425 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %424, i32 0
  %426 = load i64, i64* %425, align 8
  %427 = and i64 %426, 7
  %428 = icmp eq i64 %427, 3
  br i1 %428, label %429, label %440

429:                                              ; preds = %420
  %430 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %431 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %424
  %432 = bitcast %"class.v8::internal::compiler::Constant"* %139 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %432) #11
  %433 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %430, %"class.v8::internal::compiler::InstructionOperand"* %431) #11
  %434 = bitcast %"class.v8::internal::compiler::Constant"* %139 to i64*
  %435 = extractvalue { i64, i64 } %433, 0
  store i64 %435, i64* %434, align 8
  %436 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %139, i64 0, i32 2
  %437 = extractvalue { i64, i64 } %433, 1
  store i64 %437, i64* %436, align 8
  %438 = call i64* @_ZNK2v88internal8compiler8Constant6ToCodeEv(%"class.v8::internal::compiler::Constant"* nonnull %139) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %432) #11
  %439 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  call void @_ZN2v88internal14TurboAssembler4JumpENS0_6HandleINS0_4CodeEEENS0_9RelocInfo4ModeENS0_9ConditionE(%"class.v8::internal::TurboAssembler"* %439, i64* %438, i8 signext 1, i32 16) #11
  br label %454

440:                                              ; preds = %420
  %441 = ashr i64 %426, 35
  %442 = trunc i64 %441 to i32
  %443 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %444 = bitcast %"class.v8::internal::TurboAssembler"* %443 to void (%"class.v8::internal::TurboAssembler"*, i32, i32)***
  %445 = load void (%"class.v8::internal::TurboAssembler"*, i32, i32)**, void (%"class.v8::internal::TurboAssembler"*, i32, i32)*** %444, align 8
  %446 = getelementptr inbounds void (%"class.v8::internal::TurboAssembler"*, i32, i32)*, void (%"class.v8::internal::TurboAssembler"*, i32, i32)** %445, i64 7
  %447 = load void (%"class.v8::internal::TurboAssembler"*, i32, i32)*, void (%"class.v8::internal::TurboAssembler"*, i32, i32)** %446, align 8
  tail call void %447(%"class.v8::internal::TurboAssembler"* %443, i32 %442, i32 %442) #11
  %448 = load i32, i32* %274, align 8
  %449 = and i32 %448, 134217728
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %452, label %451

451:                                              ; preds = %440
  tail call void @_ZN2v88internal14TurboAssembler13RetpolineJumpENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %443, i32 %442) #11
  br label %454

452:                                              ; preds = %440
  %453 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %443, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler3jmpENS0_8RegisterE(%"class.v8::internal::Assembler"* %453, i32 %442) #11
  br label %454

454:                                              ; preds = %451, %452, %429
  %455 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 3
  store i8 1, i8* %455, align 1
  %456 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 3
  %457 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %456, align 8
  %458 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %457, i64 0, i32 3
  store i32 0, i32* %458, align 4
  %459 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %456, align 8
  call void @_ZN2v88internal8compiler16FrameAccessState23SetFrameAccessToDefaultEv(%"class.v8::internal::compiler::FrameAccessState"* %459) #11
  br label %23402

460:                                              ; preds = %2
  %461 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %462 = load i32, i32* %461, align 4
  %463 = and i32 %462, 255
  %464 = zext i32 %463 to i64
  %465 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %464, i32 0
  %466 = load i64, i64* %465, align 8
  %467 = and i64 %466, 7
  %468 = icmp eq i64 %467, 3
  br i1 %468, label %469, label %470, !prof !3

469:                                              ; preds = %460
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0)) #12
  unreachable

470:                                              ; preds = %460
  %471 = ashr i64 %466, 35
  %472 = trunc i64 %471 to i32
  %473 = and i32 %275, 134217728
  %474 = icmp eq i32 %473, 0
  %475 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  br i1 %474, label %477, label %476

476:                                              ; preds = %470
  tail call void @_ZN2v88internal14TurboAssembler13RetpolineJumpENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %475, i32 %472) #11
  br label %479

477:                                              ; preds = %470
  %478 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %475, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler3jmpENS0_8RegisterE(%"class.v8::internal::Assembler"* %478, i32 %472) #11
  br label %479

479:                                              ; preds = %477, %476
  %480 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 3
  store i8 1, i8* %480, align 1
  %481 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 3
  %482 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %481, align 8
  %483 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %482, i64 0, i32 3
  store i32 0, i32* %483, align 4
  %484 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %481, align 8
  tail call void @_ZN2v88internal8compiler16FrameAccessState23SetFrameAccessToDefaultEv(%"class.v8::internal::compiler::FrameAccessState"* %484) #11
  br label %23402

485:                                              ; preds = %2
  %486 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %487 = load i32, i32* %486, align 4
  %488 = and i32 %487, 255
  %489 = zext i32 %488 to i64
  %490 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %489, i32 0
  %491 = load i64, i64* %490, align 8
  %492 = ashr i64 %491, 35
  %493 = trunc i64 %492 to i32
  %494 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %495 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %131, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %495)
  store i8 0, i8* %495, align 8
  %496 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %131, i64 0, i32 0, i32 2
  store i8 1, i8* %496, align 2
  switch i32 %493, label %497 [
    i32 4, label %502
    i32 12, label %502
  ]

497:                                              ; preds = %485
  %498 = trunc i64 %492 to i8
  %499 = and i8 %498, 7
  %500 = lshr i64 %492, 3
  %501 = trunc i64 %500 to i8
  br label %509

502:                                              ; preds = %485, %485
  %503 = trunc i64 %492 to i8
  %504 = and i8 %503, 7
  %505 = or i8 %504, 32
  %506 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %131, i64 0, i32 0, i32 1, i64 1
  store i8 %505, i8* %506, align 1
  %507 = lshr i64 %492, 3
  %508 = trunc i64 %507 to i8
  store i8 %508, i8* %495, align 8
  store i8 2, i8* %496, align 2
  br label %509

509:                                              ; preds = %497, %502
  %510 = phi i8 [ %501, %497 ], [ %508, %502 ]
  %511 = phi i8 [ %499, %497 ], [ %504, %502 ]
  %512 = phi i64 [ 1, %497 ], [ 2, %502 ]
  %513 = phi i8 [ 0, %497 ], [ %508, %502 ]
  %514 = or i8 %511, 64
  %515 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %131, i64 0, i32 0, i32 1, i64 0
  store i8 %514, i8* %515, align 1
  %516 = or i8 %513, %510
  store i8 %516, i8* %495, align 8
  %517 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %131, i64 0, i32 0, i32 1, i64 %512
  store i8 23, i8* %517, align 1
  %518 = load i8, i8* %496, align 2
  %519 = add i8 %518, 1
  store i8 %519, i8* %496, align 2
  %520 = bitcast %"class.v8::internal::Operand"* %131 to i64*
  %521 = load i64, i64* %520, align 8
  %522 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %131, i64 0, i32 0, i32 1, i64 7
  %523 = bitcast i8* %522 to i32*
  %524 = load i32, i32* %523, align 1
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %495)
  tail call void @_ZN2v88internal14TurboAssembler22LoadTaggedPointerFieldENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %494, i32 1, i64 %521, i32 %524) #11
  %525 = bitcast %"class.v8::internal::TurboAssembler"* %494 to void (%"class.v8::internal::TurboAssembler"*, i32)***
  %526 = load void (%"class.v8::internal::TurboAssembler"*, i32)**, void (%"class.v8::internal::TurboAssembler"*, i32)*** %525, align 8
  %527 = getelementptr inbounds void (%"class.v8::internal::TurboAssembler"*, i32)*, void (%"class.v8::internal::TurboAssembler"*, i32)** %526, i64 5
  %528 = load void (%"class.v8::internal::TurboAssembler"*, i32)*, void (%"class.v8::internal::TurboAssembler"*, i32)** %527, align 8
  tail call void %528(%"class.v8::internal::TurboAssembler"* %494, i32 1) #11
  %529 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 3
  %530 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %529, align 8
  %531 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %530, i64 0, i32 3
  store i32 0, i32* %531, align 4
  tail call void @_ZN2v88internal8compiler13CodeGenerator18RecordCallPositionEPNS1_11InstructionE(%"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::Instruction"* %1) #11
  br label %23402

532:                                              ; preds = %2
  %533 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 3
  %534 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %533, align 8
  %535 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %534, i64 0, i32 1
  store i8 1, i8* %535, align 8
  %536 = load i32, i32* %274, align 8
  %537 = lshr i32 %536, 22
  %538 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  tail call void @_ZN2v88internal14TurboAssembler20PrepareCallCFunctionEi(%"class.v8::internal::TurboAssembler"* %538, i32 %537) #11
  br label %23402

539:                                              ; preds = %2
  %540 = lshr i32 %275, 22
  %541 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 31
  store i32 %540, i32* %541, align 4
  %542 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %543 = tail call i32 @_ZN2v88internal14TurboAssembler15PushCallerSavedENS0_14SaveFPRegsModeENS0_8RegisterES3_S3_(%"class.v8::internal::TurboAssembler"* %542, i32 %540, i32 0, i32 -1, i32 -1) #11
  %544 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 3
  %545 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %544, align 8
  %546 = sdiv i32 %543, 8
  %547 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %545, i64 0, i32 3
  %548 = load i32, i32* %547, align 4
  %549 = add nsw i32 %548, %546
  store i32 %549, i32* %547, align 4
  %550 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 30
  store i8 1, i8* %550, align 8
  br label %23402

551:                                              ; preds = %2
  %552 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %553 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 31
  %554 = load i32, i32* %553, align 4
  %555 = tail call i32 @_ZN2v88internal14TurboAssembler14PopCallerSavedENS0_14SaveFPRegsModeENS0_8RegisterES3_S3_(%"class.v8::internal::TurboAssembler"* %552, i32 %554, i32 0, i32 -1, i32 -1) #11
  %556 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 3
  %557 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %556, align 8
  %558 = sdiv i32 %555, -8
  %559 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %557, i64 0, i32 3
  %560 = load i32, i32* %559, align 4
  %561 = add nsw i32 %560, %558
  store i32 %561, i32* %559, align 4
  %562 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 30
  store i8 0, i8* %562, align 8
  br label %23402

563:                                              ; preds = %2
  %564 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 3
  %565 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %564, align 8
  %566 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %565, i64 0, i32 4
  %567 = load i8, i8* %566, align 8, !range !2
  %568 = icmp eq i8 %567, 0
  br i1 %568, label %572, label %569

569:                                              ; preds = %563
  %570 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %570, i32 5, i64 17664, i32 131072, i32 8) #11
  %571 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %564, align 8
  br label %572

572:                                              ; preds = %563, %569
  %573 = phi %"class.v8::internal::compiler::FrameAccessState"* [ %565, %563 ], [ %571, %569 ]
  %574 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %573, i64 0, i32 1
  store i8 0, i8* %574, align 8
  br label %23402

575:                                              ; preds = %2
  %576 = lshr i32 %275, 22
  %577 = bitcast %"class.v8::internal::Label"* %155 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %577) #11
  %578 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %155, i64 0, i32 0
  store i32 0, i32* %578, align 4
  %579 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %155, i64 0, i32 1
  store i32 0, i32* %579, align 4
  %580 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 4
  %581 = load %"class.v8::internal::compiler::Linkage"*, %"class.v8::internal::compiler::Linkage"** %580, align 8
  %582 = getelementptr inbounds %"class.v8::internal::compiler::Linkage", %"class.v8::internal::compiler::Linkage"* %581, i64 0, i32 0
  %583 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %582, align 8
  %584 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %583, i64 0, i32 0
  %585 = load i32, i32* %584, align 8
  %586 = icmp eq i32 %585, 3
  br i1 %586, label %587, label %602

587:                                              ; preds = %575
  %588 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %589 = getelementptr inbounds %"struct.v8::internal::Operand::Data", %"struct.v8::internal::Operand::Data"* %156, i64 0, i32 0
  store i8 0, i8* %589, align 8
  %590 = getelementptr inbounds %"struct.v8::internal::Operand::Data", %"struct.v8::internal::Operand::Data"* %156, i64 0, i32 3
  store i8 0, i8* %590, align 1
  %591 = getelementptr inbounds %"struct.v8::internal::Operand::Data", %"struct.v8::internal::Operand::Data"* %156, i64 0, i32 1, i64 0
  store i8 5, i8* %591, align 1
  %592 = ptrtoint %"class.v8::internal::Label"* %155 to i64
  %593 = getelementptr inbounds %"struct.v8::internal::Operand::Data", %"struct.v8::internal::Operand::Data"* %156, i64 0, i32 1, i64 1
  %594 = bitcast i8* %593 to i64*
  store i64 %592, i64* %594, align 2
  %595 = getelementptr inbounds %"struct.v8::internal::Operand::Data", %"struct.v8::internal::Operand::Data"* %156, i64 0, i32 2
  store i8 9, i8* %595, align 2
  %596 = bitcast %"struct.v8::internal::Operand::Data"* %156 to i64*
  %597 = load i64, i64* %596, align 8
  %598 = getelementptr inbounds %"struct.v8::internal::Operand::Data", %"struct.v8::internal::Operand::Data"* %156, i64 0, i32 1, i64 7
  %599 = bitcast i8* %598 to i32*
  %600 = load i32, i32* %599, align 8
  call void @_ZN2v88internal9Assembler8emit_leaENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %588, i32 10, i64 %597, i32 %600, i32 8) #11
  call void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %588, i64 15222016, i32 131072, i32 10, i32 8) #11
  %601 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  br label %602

602:                                              ; preds = %587, %575
  %603 = phi %"class.v8::internal::compiler::Instruction"* [ %601, %587 ], [ %1, %575 ]
  %604 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %605 = load i32, i32* %604, align 4
  %606 = and i32 %605, 255
  %607 = zext i32 %606 to i64
  %608 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %607, i32 0
  %609 = load i64, i64* %608, align 8
  %610 = and i64 %609, 7
  %611 = icmp eq i64 %610, 3
  %612 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %603, i64 0, i32 1
  %613 = load i32, i32* %612, align 4
  %614 = and i32 %613, 255
  %615 = zext i32 %614 to i64
  br i1 %611, label %616, label %623

616:                                              ; preds = %602
  %617 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %618 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %603, i64 0, i32 5, i64 %615
  %619 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %617, %"class.v8::internal::compiler::InstructionOperand"* %618) #11
  %620 = extractvalue { i64, i64 } %619, 1
  %621 = call i64 @_ZN2v88internal17ExternalReference14FromRawAddressEm(i64 %620) #11
  %622 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  call void @_ZN2v88internal14TurboAssembler13CallCFunctionENS0_17ExternalReferenceEi(%"class.v8::internal::TurboAssembler"* %622, i64 %621, i32 %576) #11
  br label %629

623:                                              ; preds = %602
  %624 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %603, i64 0, i32 5, i64 %615, i32 0
  %625 = load i64, i64* %624, align 8
  %626 = ashr i64 %625, 35
  %627 = trunc i64 %626 to i32
  %628 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  call void @_ZN2v88internal14TurboAssembler13CallCFunctionENS0_8RegisterEi(%"class.v8::internal::TurboAssembler"* %628, i32 %627, i32 %576) #11
  br label %629

629:                                              ; preds = %623, %616
  %630 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %631 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %630, i64 0, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %631, %"class.v8::internal::Label"* nonnull %155) #11
  %632 = load %"class.v8::internal::compiler::Linkage"*, %"class.v8::internal::compiler::Linkage"** %580, align 8
  %633 = getelementptr inbounds %"class.v8::internal::compiler::Linkage", %"class.v8::internal::compiler::Linkage"* %632, i64 0, i32 0
  %634 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %633, align 8
  %635 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %634, i64 0, i32 0
  %636 = load i32, i32* %635, align 8
  %637 = icmp eq i32 %636, 3
  br i1 %637, label %638, label %641

638:                                              ; preds = %629
  %639 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 3
  %640 = load %"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::ReferenceMap"** %639, align 8
  call void @_ZN2v88internal8compiler13CodeGenerator15RecordSafepointEPNS1_12ReferenceMapE(%"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::ReferenceMap"* %640) #11
  br label %641

641:                                              ; preds = %638, %629
  %642 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 3
  %643 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %642, align 8
  call void @_ZN2v88internal8compiler16FrameAccessState23SetFrameAccessToDefaultEv(%"class.v8::internal::compiler::FrameAccessState"* %643) #11
  %644 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %642, align 8
  %645 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %644, i64 0, i32 3
  store i32 0, i32* %645, align 4
  %646 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 30
  %647 = load i8, i8* %646, align 8, !range !2
  %648 = icmp eq i8 %647, 0
  br i1 %648, label %658, label %649

649:                                              ; preds = %641
  %650 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 31
  %651 = load i32, i32* %650, align 4
  %652 = call i32 @_ZNK2v88internal14TurboAssembler31RequiredStackSizeForCallerSavedENS0_14SaveFPRegsModeENS0_8RegisterES3_S3_(%"class.v8::internal::TurboAssembler"* %630, i32 %651, i32 0, i32 -1, i32 -1) #11
  %653 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %642, align 8
  %654 = sdiv i32 %652, 8
  %655 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %653, i64 0, i32 3
  %656 = load i32, i32* %655, align 4
  %657 = add nsw i32 %656, %654
  store i32 %657, i32* %655, align 4
  br label %658

658:                                              ; preds = %641, %649
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %577) #11
  br label %23402

659:                                              ; preds = %2
  %660 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %661 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %662 = load i32, i32* %661, align 4
  %663 = and i32 %662, 255
  %664 = zext i32 %663 to i64
  %665 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %664
  %666 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %660, %"class.v8::internal::compiler::InstructionOperand"* %665) #11
  %667 = extractvalue { i64, i64 } %666, 1
  %668 = trunc i64 %667 to i32
  %669 = call zeroext i1 @_ZNK2v88internal8compiler13CodeGenerator21IsNextInAssemblyOrderENS1_9RpoNumberE(%"class.v8::internal::compiler::CodeGenerator"* %0, i32 %668) #11
  br i1 %669, label %23402, label %670

670:                                              ; preds = %659
  %671 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %672 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 8
  %673 = load %"class.v8::internal::Label"*, %"class.v8::internal::Label"** %672, align 8
  %674 = shl i64 %667, 32
  %675 = ashr exact i64 %674, 32
  %676 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %673, i64 %675
  call void @_ZN2v88internal9Assembler3jmpEPNS0_5LabelENS2_8DistanceE(%"class.v8::internal::Assembler"* %671, %"class.v8::internal::Label"* %676, i32 1) #11
  br label %23402

677:                                              ; preds = %2
  tail call void @_ZN2v88internal8compiler13CodeGenerator30AssembleArchBinarySearchSwitchEPNS1_11InstructionE(%"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::Instruction"* %1)
  br label %23402

678:                                              ; preds = %2
  tail call void @_ZN2v88internal8compiler13CodeGenerator23AssembleArchTableSwitchEPNS1_11InstructionE(%"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::Instruction"* %1)
  br label %23402

679:                                              ; preds = %2
  %680 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %681 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %682 = load i32, i32* %681, align 4
  %683 = and i32 %682, 255
  %684 = zext i32 %683 to i64
  %685 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %684
  %686 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %680, %"class.v8::internal::compiler::InstructionOperand"* %685) #11
  br label %23402

687:                                              ; preds = %2
  %688 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %689 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 8
  %690 = load i8, i8* %689, align 8, !range !2
  store i8 1, i8* %689, align 8
  %691 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 2
  %692 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %691, align 8
  %693 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %692, i64 0, i32 41
  %694 = tail call i64* @_ZN2v88internal8Builtins14builtin_handleEi(%"class.v8::internal::Builtins"* %693, i32 158) #11
  tail call void @_ZN2v88internal14TurboAssembler4CallENS0_6HandleINS0_4CodeEEENS0_9RelocInfo4ModeE(%"class.v8::internal::TurboAssembler"* %688, i64* %694, i8 signext 1) #11
  store i8 %690, i8* %689, align 8
  %695 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %688, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler4int3Ev(%"class.v8::internal::Assembler"* %695) #11
  %696 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 3
  store i8 1, i8* %696, align 1
  br label %23402

697:                                              ; preds = %2
  %698 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %699 = bitcast %"class.v8::internal::TurboAssembler"* %698 to void (%"class.v8::internal::TurboAssembler"*)***
  %700 = load void (%"class.v8::internal::TurboAssembler"*)**, void (%"class.v8::internal::TurboAssembler"*)*** %699, align 8
  %701 = getelementptr inbounds void (%"class.v8::internal::TurboAssembler"*)*, void (%"class.v8::internal::TurboAssembler"*)** %700, i64 13
  %702 = load void (%"class.v8::internal::TurboAssembler"*)*, void (%"class.v8::internal::TurboAssembler"*)** %701, align 8
  tail call void %702(%"class.v8::internal::TurboAssembler"* %698) #11
  br label %23402

703:                                              ; preds = %2
  %704 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 3
  store i8 1, i8* %704, align 1
  br label %23402

705:                                              ; preds = %2
  %706 = tail call %"class.v8::internal::compiler::DeoptimizationExit"* @_ZN2v88internal8compiler13CodeGenerator16BuildTranslationEPNS1_11InstructionEimmNS1_23OutputFrameStateCombineE(%"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::Instruction"* %1, i32 -1, i64 0, i64 0, i64 -1) #11
  %707 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %708 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationExit", %"class.v8::internal::compiler::DeoptimizationExit"* %706, i64 0, i32 3
  tail call void @_ZN2v88internal9Assembler3jmpEPNS0_5LabelENS2_8DistanceE(%"class.v8::internal::Assembler"* %707, %"class.v8::internal::Label"* %708, i32 1) #11
  br label %23402

709:                                              ; preds = %2
  %710 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %711 = load i32, i32* %710, align 4
  %712 = and i32 %711, 255
  %713 = zext i32 %712 to i64
  %714 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %713
  tail call void @_ZN2v88internal8compiler13CodeGenerator14AssembleReturnEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::InstructionOperand"* %714)
  br label %23402

715:                                              ; preds = %2
  %716 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %717 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %718 = load i64, i64* %717, align 8
  %719 = ashr i64 %718, 35
  %720 = trunc i64 %719 to i32
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %716, i32 %720, i32 5, i32 8) #11
  br label %23402

721:                                              ; preds = %2
  %722 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 3
  %723 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %722, align 8
  %724 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %723, i64 0, i32 4
  %725 = load i8, i8* %724, align 8, !range !2
  %726 = icmp eq i8 %725, 0
  %727 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %728 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %729 = load i64, i64* %728, align 8
  %730 = ashr i64 %729, 35
  %731 = trunc i64 %730 to i32
  br i1 %726, label %733, label %732

732:                                              ; preds = %721
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %727, i32 %731, i64 17664, i32 131072, i32 8) #11
  br label %23402

733:                                              ; preds = %721
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %727, i32 %731, i32 5, i32 8) #11
  br label %23402

734:                                              ; preds = %2
  %735 = bitcast i32* %157 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %735) #11
  %736 = call zeroext i1 @_ZN2v88internal8compiler13CodeGenerator29ShouldApplyOffsetToStackCheckEPNS1_11InstructionEPj(%"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::Instruction"* %1, i32* nonnull %157) #11
  br i1 %736, label %737, label %760

737:                                              ; preds = %734
  %738 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %739 = load i32, i32* %157, align 4
  %740 = sub nsw i32 0, %739
  %741 = icmp eq i32 %739, 0
  br i1 %741, label %751, label %742

742:                                              ; preds = %737
  %743 = sext i32 %740 to i64
  %744 = add nsw i64 %743, 128
  %745 = icmp ult i64 %744, 256
  %746 = and i32 %740, -256
  %747 = select i1 %745, i32 196608, i32 393216
  %748 = select i1 %745, i32 0, i32 %746
  %749 = and i32 %740, 255
  %750 = select i1 %745, i64 2376704, i64 2393088
  br label %751

751:                                              ; preds = %742, %737
  %752 = phi i64 [ 2360320, %737 ], [ %750, %742 ]
  %753 = phi i32 [ 131072, %737 ], [ %747, %742 ]
  %754 = phi i32 [ 0, %737 ], [ %749, %742 ]
  %755 = phi i32 [ 0, %737 ], [ %748, %742 ]
  %756 = or i32 %755, %754
  %757 = zext i32 %756 to i64
  %758 = shl nuw nsw i64 %757, 24
  %759 = or i64 %752, %758
  call void @_ZN2v88internal9Assembler8emit_leaENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %738, i32 10, i64 %759, i32 %753, i32 8) #11
  br label %760

760:                                              ; preds = %751, %734
  %761 = phi i32 [ 10, %751 ], [ 4, %734 ]
  %762 = load i32, i32* %274, align 8
  %763 = and i32 %762, 15872
  %764 = icmp eq i32 %763, 0
  %765 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %764, label %771, label %766

766:                                              ; preds = %760
  %767 = bitcast i64* %105 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %767)
  store i64 0, i64* %105, align 8
  %768 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %105) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %767)
  %769 = extractvalue { i64, i32 } %768, 0
  %770 = extractvalue { i64, i32 } %768, 1
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %765, i8 zeroext 59, i32 %761, i64 %769, i32 %770, i32 8) #11
  br label %781

771:                                              ; preds = %760
  %772 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %773 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %772, i64 0, i32 1
  %774 = load i32, i32* %773, align 4
  %775 = and i32 %774, 255
  %776 = zext i32 %775 to i64
  %777 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %772, i64 0, i32 5, i64 %776, i32 0
  %778 = load i64, i64* %777, align 8
  %779 = ashr i64 %778, 35
  %780 = trunc i64 %779 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %765, i8 zeroext 59, i32 %761, i32 %780, i32 8) #11
  br label %781

781:                                              ; preds = %771, %766
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %735) #11
  br label %23402

782:                                              ; preds = %2
  %783 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %784 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %785 = load i64, i64* %784, align 8
  %786 = ashr i64 %785, 35
  %787 = trunc i64 %786 to i32
  %788 = tail call i32 @_ZN2v88internal8compiler13CodeGenerator19GetStackCheckOffsetEv(%"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %789 = sext i32 %788 to i64
  %790 = shl nsw i64 %789, 1
  tail call void @_ZN2v88internal14TurboAssembler4MoveENS0_8RegisterENS0_3SmiE(%"class.v8::internal::TurboAssembler"* %783, i32 %787, i64 %790) #11
  br label %23402

791:                                              ; preds = %2
  %792 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %793 = load i64, i64* %792, align 8
  %794 = ashr i64 %793, 35
  %795 = trunc i64 %794 to i32
  %796 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %797 = load i32, i32* %796, align 4
  %798 = and i32 %797, 255
  %799 = zext i32 %798 to i64
  %800 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %799, i32 0
  %801 = load i64, i64* %800, align 8
  %802 = ashr i64 %801, 35
  %803 = trunc i64 %802 to i32
  %804 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %805 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %804, align 8
  %806 = tail call i32 @_ZNK2v88internal8compiler13CodeGenerator21DetermineStubCallModeEv(%"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %807 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6
  %808 = ptrtoint %"class.v8::internal::compiler::UnwindingInfoWriter"* %807 to i64
  %809 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %805, i64 0, i32 2
  %810 = load i64, i64* %809, align 8
  %811 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %805, i64 0, i32 3
  %812 = load i64, i64* %811, align 8
  %813 = sub i64 %812, %810
  %814 = icmp ult i64 %813, 88
  br i1 %814, label %815, label %817, !prof !3

815:                                              ; preds = %791
  %816 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %805, i64 88) #11
  br label %819

817:                                              ; preds = %791
  %818 = add i64 %810, 88
  store i64 %818, i64* %809, align 8
  br label %819

819:                                              ; preds = %815, %817
  %820 = phi i64 [ %816, %815 ], [ %810, %817 ]
  %821 = inttoptr i64 %820 to %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI"*
  %822 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI"* %821, i64 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %822, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %823 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI"* %821, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_126OutOfLineTruncateDoubleToIE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %823, align 8
  %824 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI"* %821, i64 0, i32 1, i32 0, i32 0
  store i32 %795, i32* %824, align 8
  %825 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI"* %821, i64 0, i32 2, i32 0, i32 0
  store i32 %803, i32* %825, align 4
  %826 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI"* %821, i64 0, i32 3
  store i32 %806, i32* %826, align 8
  %827 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI"* %821, i64 0, i32 4
  %828 = bitcast %"class.v8::internal::compiler::UnwindingInfoWriter"** %827 to i64*
  store i64 %808, i64* %828, align 8
  %829 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI"* %821, i64 0, i32 5
  %830 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 2
  %831 = bitcast %"class.v8::internal::Isolate"** %830 to i64*
  %832 = load i64, i64* %831, align 8
  %833 = bitcast %"class.v8::internal::Isolate"** %829 to i64*
  store i64 %832, i64* %833, align 8
  %834 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI"* %821, i64 0, i32 6
  %835 = bitcast %"class.v8::internal::Zone"** %804 to i64*
  %836 = load i64, i64* %835, align 8
  %837 = bitcast %"class.v8::internal::Zone"** %834 to i64*
  store i64 %836, i64* %837, align 8
  %838 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  tail call void @_ZN2v88internal14TurboAssembler10Cvttsd2siqENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::TurboAssembler"* %838, i32 %795, i32 %803) #11
  %839 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %838, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %839, i8 zeroext 7, i32 %795, i64 1, i32 8) #11
  %840 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI"* %821, i64 0, i32 0, i32 1
  tail call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %839, i32 0, %"class.v8::internal::Label"* %840, i32 1) #11
  %841 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI"* %821, i64 0, i32 0, i32 2
  tail call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %839, %"class.v8::internal::Label"* %841) #11
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %839, i32 %795, i32 %795, i32 4) #11
  br label %23402

842:                                              ; preds = %2
  %843 = lshr i32 %275, 22
  %844 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %845 = load i32, i32* %844, align 4
  %846 = and i32 %845, 255
  %847 = zext i32 %846 to i64
  %848 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %847, i32 0
  %849 = load i64, i64* %848, align 8
  %850 = ashr i64 %849, 35
  %851 = trunc i64 %850 to i32
  %852 = bitcast i64* %158 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %852) #11
  store i64 0, i64* %158, align 8
  %853 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %158)
  %854 = extractvalue { i64, i32 } %853, 0
  %855 = extractvalue { i64, i32 } %853, 1
  %856 = load i64, i64* %158, align 8
  %857 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %858 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %857, i64 0, i32 1
  %859 = load i32, i32* %858, align 4
  %860 = and i32 %859, 255
  %861 = zext i32 %860 to i64
  %862 = add i64 %856, %861
  %863 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %857, i64 0, i32 5, i64 %862, i32 0
  %864 = load i64, i64* %863, align 8
  %865 = ashr i64 %864, 35
  %866 = trunc i64 %865 to i32
  %867 = lshr i32 %859, 8
  %868 = and i32 %867, 65535
  %869 = add nuw nsw i32 %868, %860
  %870 = zext i32 %869 to i64
  %871 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %857, i64 0, i32 5, i64 %870, i32 0
  %872 = load i64, i64* %871, align 8
  %873 = ashr i64 %872, 35
  %874 = trunc i64 %873 to i32
  %875 = add nuw nsw i64 %870, 1
  %876 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %857, i64 0, i32 5, i64 %875, i32 0
  %877 = load i64, i64* %876, align 8
  %878 = ashr i64 %877, 35
  %879 = trunc i64 %878 to i32
  %880 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %881 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %880, align 8
  %882 = call i32 @_ZNK2v88internal8compiler13CodeGenerator21DetermineStubCallModeEv(%"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %883 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %881, i64 0, i32 2
  %884 = load i64, i64* %883, align 8
  %885 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %881, i64 0, i32 3
  %886 = load i64, i64* %885, align 8
  %887 = sub i64 %886, %884
  %888 = icmp ult i64 %887, 96
  br i1 %888, label %889, label %891, !prof !3

889:                                              ; preds = %842
  %890 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %881, i64 96) #11
  br label %893

891:                                              ; preds = %842
  %892 = add i64 %884, 96
  store i64 %892, i64* %883, align 8
  br label %893

893:                                              ; preds = %889, %891
  %894 = phi i64 [ %890, %889 ], [ %884, %891 ]
  %895 = inttoptr i64 %894 to %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"*
  %896 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"* %895, i64 0, i32 0
  call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %896, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %897 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"* %895, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_120OutOfLineRecordWriteE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %897, align 8
  %898 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"* %895, i64 0, i32 1, i32 0, i32 0
  store i32 %851, i32* %898, align 8
  %899 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"* %895, i64 0, i32 2
  %900 = bitcast %"class.v8::internal::Operand"* %899 to i64*
  store i64 %854, i64* %900, align 4
  %901 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"* %895, i64 0, i32 2, i32 0, i32 1, i64 7
  %902 = bitcast i8* %901 to i32*
  store i32 %855, i32* %902, align 4
  %903 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"* %895, i64 0, i32 3, i32 0, i32 0
  store i32 %866, i32* %903, align 8
  %904 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"* %895, i64 0, i32 4, i32 0, i32 0
  store i32 %874, i32* %904, align 4
  %905 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"* %895, i64 0, i32 5, i32 0, i32 0
  store i32 %879, i32* %905, align 8
  %906 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"* %895, i64 0, i32 6
  store i32 %843, i32* %906, align 4
  %907 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"* %895, i64 0, i32 7
  store i32 %882, i32* %907, align 8
  %908 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"* %895, i64 0, i32 8
  %909 = bitcast %"class.v8::internal::Zone"** %880 to i64*
  %910 = load i64, i64* %909, align 8
  %911 = bitcast %"class.v8::internal::Zone"** %908 to i64*
  store i64 %910, i64* %911, align 8
  %912 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  call void @_ZN2v88internal14TurboAssembler16StoreTaggedFieldENS0_7OperandENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %912, i64 %854, i32 %855, i32 %866) #11
  %913 = icmp ugt i32 %275, 8388607
  br i1 %913, label %914, label %916

914:                                              ; preds = %893
  %915 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"* %895, i64 0, i32 0, i32 2
  call void @_ZN2v88internal14TurboAssembler9JumpIfSmiENS0_8RegisterEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::TurboAssembler"* %912, i32 %866, %"class.v8::internal::Label"* %915, i32 1) #11
  br label %916

916:                                              ; preds = %914, %893
  %917 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"* %895, i64 0, i32 0, i32 1
  call void @_ZN2v88internal14TurboAssembler13CheckPageFlagENS0_8RegisterES2_iNS0_9ConditionEPNS0_5LabelENS4_8DistanceE(%"class.v8::internal::TurboAssembler"* %912, i32 %851, i32 %874, i32 4, i32 5, %"class.v8::internal::Label"* %917, i32 1) #11
  %918 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %912, i64 0, i32 0, i32 0, i32 0
  %919 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"* %895, i64 0, i32 0, i32 2
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %918, %"class.v8::internal::Label"* %919) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %852) #11
  br label %23402

920:                                              ; preds = %2
  %921 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %922 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %923 = load i32, i32* %922, align 4
  %924 = and i32 %923, 255
  %925 = zext i32 %924 to i64
  %926 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %925, i32 0
  %927 = load i64, i64* %926, align 8
  %928 = ashr i64 %927, 35
  %929 = trunc i64 %928 to i32
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %921, i8 zeroext 35, i32 %929, i32 11, i32 8) #11
  br label %23402

930:                                              ; preds = %2
  %931 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler6mfenceEv(%"class.v8::internal::Assembler"* %931) #11
  br label %23402

932:                                              ; preds = %2
  %933 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler6lfenceEv(%"class.v8::internal::Assembler"* %933) #11
  br label %23402

934:                                              ; preds = %2
  %935 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 3
  %936 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %935, align 8
  %937 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %938 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %939 = load i32, i32* %938, align 4
  %940 = and i32 %939, 255
  %941 = zext i32 %940 to i64
  %942 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %941
  %943 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %937, %"class.v8::internal::compiler::InstructionOperand"* %942) #11
  %944 = extractvalue { i64, i64 } %943, 1
  %945 = trunc i64 %944 to i32
  %946 = call i32 @_ZNK2v88internal8compiler16FrameAccessState14GetFrameOffsetEi(%"class.v8::internal::compiler::FrameAccessState"* %936, i32 %945) #11
  %947 = and i32 %946, 1
  %948 = icmp eq i32 %947, 0
  %949 = select i1 %948, %"class.v8::internal::Register"* bitcast ({ i32 }* @_ZN2v88internalL3rbpE to %"class.v8::internal::Register"*), %"class.v8::internal::Register"* bitcast ({ i32 }* @_ZN2v88internalL3rspE to %"class.v8::internal::Register"*)
  %950 = getelementptr inbounds %"class.v8::internal::Register", %"class.v8::internal::Register"* %949, i64 0, i32 0, i32 0
  %951 = load i32, i32* %950, align 4
  %952 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %953 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %954 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %953, i64 0, i32 5, i64 0, i32 0
  %955 = load i64, i64* %954, align 8
  %956 = ashr i64 %955, 35
  %957 = trunc i64 %956 to i32
  %958 = and i32 %946, -2
  %959 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %159, i64 0, i32 0, i32 0
  store i8 0, i8* %959, align 8
  %960 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %159, i64 0, i32 0, i32 2
  store i8 1, i8* %960, align 2
  switch i32 %951, label %968 [
    i32 4, label %961
    i32 12, label %961
  ]

961:                                              ; preds = %934, %934
  %962 = trunc i32 %951 to i8
  %963 = and i8 %962, 7
  %964 = or i8 %963, 32
  %965 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %159, i64 0, i32 0, i32 1, i64 1
  store i8 %964, i8* %965, align 1
  %966 = lshr i32 %951, 3
  %967 = trunc i32 %966 to i8
  store i8 %967, i8* %959, align 8
  store i8 2, i8* %960, align 2
  br label %968

968:                                              ; preds = %961, %934
  %969 = phi i64 [ 1, %934 ], [ 2, %961 ]
  %970 = phi i8 [ 0, %934 ], [ %967, %961 ]
  %971 = icmp eq i32 %958, 0
  br i1 %971, label %972, label %980

972:                                              ; preds = %968
  switch i32 %951, label %973 [
    i32 13, label %980
    i32 5, label %980
  ]

973:                                              ; preds = %972
  %974 = trunc i32 %951 to i8
  %975 = and i8 %974, 7
  %976 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %159, i64 0, i32 0, i32 1, i64 0
  store i8 %975, i8* %976, align 1
  %977 = lshr i32 %951, 3
  %978 = trunc i32 %977 to i8
  %979 = or i8 %970, %978
  store i8 %979, i8* %959, align 8
  br label %1006

980:                                              ; preds = %972, %972, %968
  %981 = sext i32 %958 to i64
  %982 = add nsw i64 %981, 128
  %983 = icmp ult i64 %982, 256
  %984 = trunc i32 %951 to i8
  %985 = and i8 %984, 7
  br i1 %983, label %986, label %996

986:                                              ; preds = %980
  %987 = or i8 %985, 64
  %988 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %159, i64 0, i32 0, i32 1, i64 0
  store i8 %987, i8* %988, align 1
  %989 = lshr i32 %951, 3
  %990 = trunc i32 %989 to i8
  %991 = or i8 %970, %990
  store i8 %991, i8* %959, align 8
  %992 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %159, i64 0, i32 0, i32 1, i64 %969
  %993 = trunc i32 %958 to i8
  store i8 %993, i8* %992, align 1
  %994 = load i8, i8* %960, align 2
  %995 = add i8 %994, 1
  store i8 %995, i8* %960, align 2
  br label %1006

996:                                              ; preds = %980
  %997 = or i8 %985, -128
  %998 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %159, i64 0, i32 0, i32 1, i64 0
  store i8 %997, i8* %998, align 1
  %999 = lshr i32 %951, 3
  %1000 = trunc i32 %999 to i8
  %1001 = or i8 %970, %1000
  store i8 %1001, i8* %959, align 8
  %1002 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %159, i64 0, i32 0, i32 1, i64 %969
  %1003 = bitcast i8* %1002 to i32*
  store i32 %958, i32* %1003, align 1
  %1004 = load i8, i8* %960, align 2
  %1005 = add i8 %1004, 4
  store i8 %1005, i8* %960, align 2
  br label %1006

1006:                                             ; preds = %973, %986, %996
  %1007 = bitcast %"class.v8::internal::Operand"* %159 to i64*
  %1008 = load i64, i64* %1007, align 8
  %1009 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %159, i64 0, i32 0, i32 1, i64 7
  %1010 = bitcast i8* %1009 to i32*
  %1011 = load i32, i32* %1010, align 1
  call void @_ZN2v88internal9Assembler8emit_leaENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %952, i32 %957, i64 %1008, i32 %1011, i32 8) #11
  br label %23402

1012:                                             ; preds = %2
  %1013 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  tail call void @_ZN2v88internal14TurboAssembler20PrepareCallCFunctionEi(%"class.v8::internal::TurboAssembler"* %1013, i32 1) #11
  %1014 = tail call i64 @_ZN2v88internal17ExternalReference21ieee754_acos_functionEv() #11
  tail call void @_ZN2v88internal14TurboAssembler13CallCFunctionENS0_17ExternalReferenceEi(%"class.v8::internal::TurboAssembler"* %1013, i64 %1014, i32 1) #11
  br label %23402

1015:                                             ; preds = %2
  %1016 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  tail call void @_ZN2v88internal14TurboAssembler20PrepareCallCFunctionEi(%"class.v8::internal::TurboAssembler"* %1016, i32 1) #11
  %1017 = tail call i64 @_ZN2v88internal17ExternalReference22ieee754_acosh_functionEv() #11
  tail call void @_ZN2v88internal14TurboAssembler13CallCFunctionENS0_17ExternalReferenceEi(%"class.v8::internal::TurboAssembler"* %1016, i64 %1017, i32 1) #11
  br label %23402

1018:                                             ; preds = %2
  %1019 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  tail call void @_ZN2v88internal14TurboAssembler20PrepareCallCFunctionEi(%"class.v8::internal::TurboAssembler"* %1019, i32 1) #11
  %1020 = tail call i64 @_ZN2v88internal17ExternalReference21ieee754_asin_functionEv() #11
  tail call void @_ZN2v88internal14TurboAssembler13CallCFunctionENS0_17ExternalReferenceEi(%"class.v8::internal::TurboAssembler"* %1019, i64 %1020, i32 1) #11
  br label %23402

1021:                                             ; preds = %2
  %1022 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  tail call void @_ZN2v88internal14TurboAssembler20PrepareCallCFunctionEi(%"class.v8::internal::TurboAssembler"* %1022, i32 1) #11
  %1023 = tail call i64 @_ZN2v88internal17ExternalReference22ieee754_asinh_functionEv() #11
  tail call void @_ZN2v88internal14TurboAssembler13CallCFunctionENS0_17ExternalReferenceEi(%"class.v8::internal::TurboAssembler"* %1022, i64 %1023, i32 1) #11
  br label %23402

1024:                                             ; preds = %2
  %1025 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  tail call void @_ZN2v88internal14TurboAssembler20PrepareCallCFunctionEi(%"class.v8::internal::TurboAssembler"* %1025, i32 1) #11
  %1026 = tail call i64 @_ZN2v88internal17ExternalReference21ieee754_atan_functionEv() #11
  tail call void @_ZN2v88internal14TurboAssembler13CallCFunctionENS0_17ExternalReferenceEi(%"class.v8::internal::TurboAssembler"* %1025, i64 %1026, i32 1) #11
  br label %23402

1027:                                             ; preds = %2
  %1028 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  tail call void @_ZN2v88internal14TurboAssembler20PrepareCallCFunctionEi(%"class.v8::internal::TurboAssembler"* %1028, i32 1) #11
  %1029 = tail call i64 @_ZN2v88internal17ExternalReference22ieee754_atanh_functionEv() #11
  tail call void @_ZN2v88internal14TurboAssembler13CallCFunctionENS0_17ExternalReferenceEi(%"class.v8::internal::TurboAssembler"* %1028, i64 %1029, i32 1) #11
  br label %23402

1030:                                             ; preds = %2
  %1031 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  tail call void @_ZN2v88internal14TurboAssembler20PrepareCallCFunctionEi(%"class.v8::internal::TurboAssembler"* %1031, i32 2) #11
  %1032 = tail call i64 @_ZN2v88internal17ExternalReference22ieee754_atan2_functionEv() #11
  tail call void @_ZN2v88internal14TurboAssembler13CallCFunctionENS0_17ExternalReferenceEi(%"class.v8::internal::TurboAssembler"* %1031, i64 %1032, i32 2) #11
  br label %23402

1033:                                             ; preds = %2
  %1034 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  tail call void @_ZN2v88internal14TurboAssembler20PrepareCallCFunctionEi(%"class.v8::internal::TurboAssembler"* %1034, i32 1) #11
  %1035 = tail call i64 @_ZN2v88internal17ExternalReference21ieee754_cbrt_functionEv() #11
  tail call void @_ZN2v88internal14TurboAssembler13CallCFunctionENS0_17ExternalReferenceEi(%"class.v8::internal::TurboAssembler"* %1034, i64 %1035, i32 1) #11
  br label %23402

1036:                                             ; preds = %2
  %1037 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  tail call void @_ZN2v88internal14TurboAssembler20PrepareCallCFunctionEi(%"class.v8::internal::TurboAssembler"* %1037, i32 1) #11
  %1038 = tail call i64 @_ZN2v88internal17ExternalReference20ieee754_cos_functionEv() #11
  tail call void @_ZN2v88internal14TurboAssembler13CallCFunctionENS0_17ExternalReferenceEi(%"class.v8::internal::TurboAssembler"* %1037, i64 %1038, i32 1) #11
  br label %23402

1039:                                             ; preds = %2
  %1040 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  tail call void @_ZN2v88internal14TurboAssembler20PrepareCallCFunctionEi(%"class.v8::internal::TurboAssembler"* %1040, i32 1) #11
  %1041 = tail call i64 @_ZN2v88internal17ExternalReference21ieee754_cosh_functionEv() #11
  tail call void @_ZN2v88internal14TurboAssembler13CallCFunctionENS0_17ExternalReferenceEi(%"class.v8::internal::TurboAssembler"* %1040, i64 %1041, i32 1) #11
  br label %23402

1042:                                             ; preds = %2
  %1043 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  tail call void @_ZN2v88internal14TurboAssembler20PrepareCallCFunctionEi(%"class.v8::internal::TurboAssembler"* %1043, i32 1) #11
  %1044 = tail call i64 @_ZN2v88internal17ExternalReference20ieee754_exp_functionEv() #11
  tail call void @_ZN2v88internal14TurboAssembler13CallCFunctionENS0_17ExternalReferenceEi(%"class.v8::internal::TurboAssembler"* %1043, i64 %1044, i32 1) #11
  br label %23402

1045:                                             ; preds = %2
  %1046 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  tail call void @_ZN2v88internal14TurboAssembler20PrepareCallCFunctionEi(%"class.v8::internal::TurboAssembler"* %1046, i32 1) #11
  %1047 = tail call i64 @_ZN2v88internal17ExternalReference22ieee754_expm1_functionEv() #11
  tail call void @_ZN2v88internal14TurboAssembler13CallCFunctionENS0_17ExternalReferenceEi(%"class.v8::internal::TurboAssembler"* %1046, i64 %1047, i32 1) #11
  br label %23402

1048:                                             ; preds = %2
  %1049 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  tail call void @_ZN2v88internal14TurboAssembler20PrepareCallCFunctionEi(%"class.v8::internal::TurboAssembler"* %1049, i32 1) #11
  %1050 = tail call i64 @_ZN2v88internal17ExternalReference20ieee754_log_functionEv() #11
  tail call void @_ZN2v88internal14TurboAssembler13CallCFunctionENS0_17ExternalReferenceEi(%"class.v8::internal::TurboAssembler"* %1049, i64 %1050, i32 1) #11
  br label %23402

1051:                                             ; preds = %2
  %1052 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  tail call void @_ZN2v88internal14TurboAssembler20PrepareCallCFunctionEi(%"class.v8::internal::TurboAssembler"* %1052, i32 1) #11
  %1053 = tail call i64 @_ZN2v88internal17ExternalReference22ieee754_log1p_functionEv() #11
  tail call void @_ZN2v88internal14TurboAssembler13CallCFunctionENS0_17ExternalReferenceEi(%"class.v8::internal::TurboAssembler"* %1052, i64 %1053, i32 1) #11
  br label %23402

1054:                                             ; preds = %2
  %1055 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  tail call void @_ZN2v88internal14TurboAssembler20PrepareCallCFunctionEi(%"class.v8::internal::TurboAssembler"* %1055, i32 1) #11
  %1056 = tail call i64 @_ZN2v88internal17ExternalReference21ieee754_log2_functionEv() #11
  tail call void @_ZN2v88internal14TurboAssembler13CallCFunctionENS0_17ExternalReferenceEi(%"class.v8::internal::TurboAssembler"* %1055, i64 %1056, i32 1) #11
  br label %23402

1057:                                             ; preds = %2
  %1058 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  tail call void @_ZN2v88internal14TurboAssembler20PrepareCallCFunctionEi(%"class.v8::internal::TurboAssembler"* %1058, i32 1) #11
  %1059 = tail call i64 @_ZN2v88internal17ExternalReference22ieee754_log10_functionEv() #11
  tail call void @_ZN2v88internal14TurboAssembler13CallCFunctionENS0_17ExternalReferenceEi(%"class.v8::internal::TurboAssembler"* %1058, i64 %1059, i32 1) #11
  br label %23402

1060:                                             ; preds = %2
  %1061 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  tail call void @_ZN2v88internal14TurboAssembler20PrepareCallCFunctionEi(%"class.v8::internal::TurboAssembler"* %1061, i32 2) #11
  %1062 = tail call i64 @_ZN2v88internal17ExternalReference20ieee754_pow_functionEv() #11
  tail call void @_ZN2v88internal14TurboAssembler13CallCFunctionENS0_17ExternalReferenceEi(%"class.v8::internal::TurboAssembler"* %1061, i64 %1062, i32 2) #11
  br label %23402

1063:                                             ; preds = %2
  %1064 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  tail call void @_ZN2v88internal14TurboAssembler20PrepareCallCFunctionEi(%"class.v8::internal::TurboAssembler"* %1064, i32 1) #11
  %1065 = tail call i64 @_ZN2v88internal17ExternalReference20ieee754_sin_functionEv() #11
  tail call void @_ZN2v88internal14TurboAssembler13CallCFunctionENS0_17ExternalReferenceEi(%"class.v8::internal::TurboAssembler"* %1064, i64 %1065, i32 1) #11
  br label %23402

1066:                                             ; preds = %2
  %1067 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  tail call void @_ZN2v88internal14TurboAssembler20PrepareCallCFunctionEi(%"class.v8::internal::TurboAssembler"* %1067, i32 1) #11
  %1068 = tail call i64 @_ZN2v88internal17ExternalReference21ieee754_sinh_functionEv() #11
  tail call void @_ZN2v88internal14TurboAssembler13CallCFunctionENS0_17ExternalReferenceEi(%"class.v8::internal::TurboAssembler"* %1067, i64 %1068, i32 1) #11
  br label %23402

1069:                                             ; preds = %2
  %1070 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  tail call void @_ZN2v88internal14TurboAssembler20PrepareCallCFunctionEi(%"class.v8::internal::TurboAssembler"* %1070, i32 1) #11
  %1071 = tail call i64 @_ZN2v88internal17ExternalReference20ieee754_tan_functionEv() #11
  tail call void @_ZN2v88internal14TurboAssembler13CallCFunctionENS0_17ExternalReferenceEi(%"class.v8::internal::TurboAssembler"* %1070, i64 %1071, i32 1) #11
  br label %23402

1072:                                             ; preds = %2
  %1073 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  tail call void @_ZN2v88internal14TurboAssembler20PrepareCallCFunctionEi(%"class.v8::internal::TurboAssembler"* %1073, i32 1) #11
  %1074 = tail call i64 @_ZN2v88internal17ExternalReference21ieee754_tanh_functionEv() #11
  tail call void @_ZN2v88internal14TurboAssembler13CallCFunctionENS0_17ExternalReferenceEi(%"class.v8::internal::TurboAssembler"* %1073, i64 %1074, i32 1) #11
  br label %23402

1075:                                             ; preds = %2
  %1076 = and i32 %275, 15872
  %1077 = icmp eq i32 %1076, 0
  br i1 %1077, label %1093, label %1078

1078:                                             ; preds = %1075
  %1079 = bitcast i64* %160 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1079) #11
  store i64 1, i64* %160, align 8
  %1080 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %160)
  %1081 = extractvalue { i64, i32 } %1080, 0
  %1082 = extractvalue { i64, i32 } %1080, 1
  %1083 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %1084 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %1085 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1084, i64 0, i32 1
  %1086 = load i32, i32* %1085, align 4
  %1087 = and i32 %1086, 255
  %1088 = zext i32 %1087 to i64
  %1089 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1084, i64 0, i32 5, i64 %1088, i32 0
  %1090 = load i64, i64* %1089, align 8
  %1091 = ashr i64 %1090, 35
  %1092 = trunc i64 %1091 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %1083, i8 zeroext 3, i32 %1092, i64 %1081, i32 %1082, i32 4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1079) #11
  br label %23402

1093:                                             ; preds = %1075
  %1094 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %1095 = load i32, i32* %1094, align 4
  %1096 = and i32 %1095, 255
  %1097 = zext i32 %1096 to i64
  %1098 = add nuw nsw i64 %1097, 1
  %1099 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1098, i32 0
  %1100 = load i64, i64* %1099, align 8
  %1101 = and i64 %1100, 7
  %1102 = icmp eq i64 %1101, 3
  br i1 %1102, label %1103, label %1160

1103:                                             ; preds = %1093
  %1104 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1097, i32 0
  %1105 = load i64, i64* %1104, align 8
  %1106 = and i64 %1105, 7
  %1107 = icmp ugt i64 %1106, 4
  %1108 = and i64 %1105, 24
  %1109 = icmp eq i64 %1108, 0
  %1110 = and i1 %1107, %1109
  br i1 %1110, label %1113, label %1111

1111:                                             ; preds = %1103
  %1112 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %1134

1113:                                             ; preds = %1103
  %1114 = lshr i64 %1105, 5
  %1115 = trunc i64 %1114 to i8
  %1116 = icmp ult i8 %1115, 12
  %1117 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %1116, label %1118, label %1134

1118:                                             ; preds = %1113
  %1119 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %1120 = ashr i64 %1105, 35
  %1121 = trunc i64 %1120 to i32
  %1122 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1098
  %1123 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %1119, %"class.v8::internal::compiler::InstructionOperand"* %1122) #11
  %1124 = extractvalue { i64, i64 } %1123, 0
  %1125 = trunc i64 %1124 to i32
  %1126 = extractvalue { i64, i64 } %1123, 1
  %1127 = icmp eq i32 %1125, 3
  %1128 = and i64 %1124, 1095216660480
  %1129 = icmp eq i64 %1128, 25769803776
  %1130 = select i1 %1129, i64 25769803776, i64 0
  %1131 = and i64 %1126, 4294967295
  %1132 = or i64 %1130, %1131
  %1133 = select i1 %1127, i64 0, i64 %1132
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %1117, i8 zeroext 0, i32 %1121, i64 %1133, i32 4) #11
  br label %23402

1134:                                             ; preds = %1111, %1113
  %1135 = phi %"class.v8::internal::Assembler"* [ %1112, %1111 ], [ %1117, %1113 ]
  %1136 = ashr i64 %1105, 35
  %1137 = trunc i64 %1136 to i32
  %1138 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %1137, i32 0) #11
  %1139 = extractvalue { i64, i32 } %1138, 0
  %1140 = extractvalue { i64, i32 } %1138, 1
  %1141 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %1142 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1141, i64 0, i32 1
  %1143 = load i32, i32* %1142, align 4
  %1144 = and i32 %1143, 255
  %1145 = add nuw nsw i32 %1144, 1
  %1146 = zext i32 %1145 to i64
  %1147 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1141, i64 0, i32 5, i64 %1146
  %1148 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %1149 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %1148, %"class.v8::internal::compiler::InstructionOperand"* %1147) #11
  %1150 = extractvalue { i64, i64 } %1149, 0
  %1151 = trunc i64 %1150 to i32
  %1152 = extractvalue { i64, i64 } %1149, 1
  %1153 = icmp eq i32 %1151, 3
  %1154 = and i64 %1150, 1095216660480
  %1155 = icmp eq i64 %1154, 25769803776
  %1156 = select i1 %1155, i64 25769803776, i64 0
  %1157 = and i64 %1152, 4294967295
  %1158 = or i64 %1156, %1157
  %1159 = select i1 %1153, i64 0, i64 %1158
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %1135, i8 zeroext 0, i64 %1139, i32 %1140, i64 %1159, i32 4) #11
  br label %23402

1160:                                             ; preds = %1093
  %1161 = icmp ugt i64 %1101, 4
  %1162 = and i64 %1100, 24
  %1163 = icmp eq i64 %1162, 0
  %1164 = and i1 %1161, %1163
  br i1 %1164, label %1171, label %1165

1165:                                             ; preds = %1160
  %1166 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %1167 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1097, i32 0
  %1168 = load i64, i64* %1167, align 8
  %1169 = ashr i64 %1168, 35
  %1170 = trunc i64 %1169 to i32
  br label %1183

1171:                                             ; preds = %1160
  %1172 = lshr i64 %1100, 5
  %1173 = trunc i64 %1172 to i8
  %1174 = icmp ult i8 %1173, 12
  %1175 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %1176 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1097, i32 0
  %1177 = load i64, i64* %1176, align 8
  %1178 = ashr i64 %1177, 35
  %1179 = trunc i64 %1178 to i32
  br i1 %1174, label %1180, label %1183

1180:                                             ; preds = %1171
  %1181 = ashr i64 %1100, 35
  %1182 = trunc i64 %1181 to i32
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %1175, i8 zeroext 3, i32 %1179, i32 %1182, i32 4) #11
  br label %23402

1183:                                             ; preds = %1165, %1171
  %1184 = phi i32 [ %1170, %1165 ], [ %1179, %1171 ]
  %1185 = phi %"class.v8::internal::Assembler"* [ %1166, %1165 ], [ %1175, %1171 ]
  %1186 = ashr i64 %1100, 35
  %1187 = trunc i64 %1186 to i32
  %1188 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %1187, i32 0) #11
  %1189 = extractvalue { i64, i32 } %1188, 0
  %1190 = extractvalue { i64, i32 } %1188, 1
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %1185, i8 zeroext 3, i32 %1184, i64 %1189, i32 %1190, i32 4) #11
  br label %23402

1191:                                             ; preds = %2
  %1192 = and i32 %275, 15872
  %1193 = icmp eq i32 %1192, 0
  br i1 %1193, label %1209, label %1194

1194:                                             ; preds = %1191
  %1195 = bitcast i64* %161 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1195) #11
  store i64 1, i64* %161, align 8
  %1196 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %161)
  %1197 = extractvalue { i64, i32 } %1196, 0
  %1198 = extractvalue { i64, i32 } %1196, 1
  %1199 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %1200 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %1201 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1200, i64 0, i32 1
  %1202 = load i32, i32* %1201, align 4
  %1203 = and i32 %1202, 255
  %1204 = zext i32 %1203 to i64
  %1205 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1200, i64 0, i32 5, i64 %1204, i32 0
  %1206 = load i64, i64* %1205, align 8
  %1207 = ashr i64 %1206, 35
  %1208 = trunc i64 %1207 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %1199, i8 zeroext 3, i32 %1208, i64 %1197, i32 %1198, i32 8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1195) #11
  br label %23402

1209:                                             ; preds = %1191
  %1210 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %1211 = load i32, i32* %1210, align 4
  %1212 = and i32 %1211, 255
  %1213 = zext i32 %1212 to i64
  %1214 = add nuw nsw i64 %1213, 1
  %1215 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1214, i32 0
  %1216 = load i64, i64* %1215, align 8
  %1217 = and i64 %1216, 7
  %1218 = icmp eq i64 %1217, 3
  br i1 %1218, label %1219, label %1276

1219:                                             ; preds = %1209
  %1220 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1213, i32 0
  %1221 = load i64, i64* %1220, align 8
  %1222 = and i64 %1221, 7
  %1223 = icmp ugt i64 %1222, 4
  %1224 = and i64 %1221, 24
  %1225 = icmp eq i64 %1224, 0
  %1226 = and i1 %1223, %1225
  br i1 %1226, label %1229, label %1227

1227:                                             ; preds = %1219
  %1228 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %1250

1229:                                             ; preds = %1219
  %1230 = lshr i64 %1221, 5
  %1231 = trunc i64 %1230 to i8
  %1232 = icmp ult i8 %1231, 12
  %1233 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %1232, label %1234, label %1250

1234:                                             ; preds = %1229
  %1235 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %1236 = ashr i64 %1221, 35
  %1237 = trunc i64 %1236 to i32
  %1238 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1214
  %1239 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %1235, %"class.v8::internal::compiler::InstructionOperand"* %1238) #11
  %1240 = extractvalue { i64, i64 } %1239, 0
  %1241 = trunc i64 %1240 to i32
  %1242 = extractvalue { i64, i64 } %1239, 1
  %1243 = icmp eq i32 %1241, 3
  %1244 = and i64 %1240, 1095216660480
  %1245 = icmp eq i64 %1244, 25769803776
  %1246 = select i1 %1245, i64 25769803776, i64 0
  %1247 = and i64 %1242, 4294967295
  %1248 = or i64 %1246, %1247
  %1249 = select i1 %1243, i64 0, i64 %1248
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %1233, i8 zeroext 0, i32 %1237, i64 %1249, i32 8) #11
  br label %23402

1250:                                             ; preds = %1227, %1229
  %1251 = phi %"class.v8::internal::Assembler"* [ %1228, %1227 ], [ %1233, %1229 ]
  %1252 = ashr i64 %1221, 35
  %1253 = trunc i64 %1252 to i32
  %1254 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %1253, i32 0) #11
  %1255 = extractvalue { i64, i32 } %1254, 0
  %1256 = extractvalue { i64, i32 } %1254, 1
  %1257 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %1258 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1257, i64 0, i32 1
  %1259 = load i32, i32* %1258, align 4
  %1260 = and i32 %1259, 255
  %1261 = add nuw nsw i32 %1260, 1
  %1262 = zext i32 %1261 to i64
  %1263 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1257, i64 0, i32 5, i64 %1262
  %1264 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %1265 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %1264, %"class.v8::internal::compiler::InstructionOperand"* %1263) #11
  %1266 = extractvalue { i64, i64 } %1265, 0
  %1267 = trunc i64 %1266 to i32
  %1268 = extractvalue { i64, i64 } %1265, 1
  %1269 = icmp eq i32 %1267, 3
  %1270 = and i64 %1266, 1095216660480
  %1271 = icmp eq i64 %1270, 25769803776
  %1272 = select i1 %1271, i64 25769803776, i64 0
  %1273 = and i64 %1268, 4294967295
  %1274 = or i64 %1272, %1273
  %1275 = select i1 %1269, i64 0, i64 %1274
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %1251, i8 zeroext 0, i64 %1255, i32 %1256, i64 %1275, i32 8) #11
  br label %23402

1276:                                             ; preds = %1209
  %1277 = icmp ugt i64 %1217, 4
  %1278 = and i64 %1216, 24
  %1279 = icmp eq i64 %1278, 0
  %1280 = and i1 %1277, %1279
  br i1 %1280, label %1287, label %1281

1281:                                             ; preds = %1276
  %1282 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %1283 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1213, i32 0
  %1284 = load i64, i64* %1283, align 8
  %1285 = ashr i64 %1284, 35
  %1286 = trunc i64 %1285 to i32
  br label %1299

1287:                                             ; preds = %1276
  %1288 = lshr i64 %1216, 5
  %1289 = trunc i64 %1288 to i8
  %1290 = icmp ult i8 %1289, 12
  %1291 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %1292 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1213, i32 0
  %1293 = load i64, i64* %1292, align 8
  %1294 = ashr i64 %1293, 35
  %1295 = trunc i64 %1294 to i32
  br i1 %1290, label %1296, label %1299

1296:                                             ; preds = %1287
  %1297 = ashr i64 %1216, 35
  %1298 = trunc i64 %1297 to i32
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %1291, i8 zeroext 3, i32 %1295, i32 %1298, i32 8) #11
  br label %23402

1299:                                             ; preds = %1281, %1287
  %1300 = phi i32 [ %1286, %1281 ], [ %1295, %1287 ]
  %1301 = phi %"class.v8::internal::Assembler"* [ %1282, %1281 ], [ %1291, %1287 ]
  %1302 = ashr i64 %1216, 35
  %1303 = trunc i64 %1302 to i32
  %1304 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %1303, i32 0) #11
  %1305 = extractvalue { i64, i32 } %1304, 0
  %1306 = extractvalue { i64, i32 } %1304, 1
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %1301, i8 zeroext 3, i32 %1300, i64 %1305, i32 %1306, i32 8) #11
  br label %23402

1307:                                             ; preds = %2
  %1308 = and i32 %275, 15872
  %1309 = icmp eq i32 %1308, 0
  br i1 %1309, label %1325, label %1310

1310:                                             ; preds = %1307
  %1311 = bitcast i64* %162 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1311) #11
  store i64 1, i64* %162, align 8
  %1312 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %162)
  %1313 = extractvalue { i64, i32 } %1312, 0
  %1314 = extractvalue { i64, i32 } %1312, 1
  %1315 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %1316 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %1317 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1316, i64 0, i32 1
  %1318 = load i32, i32* %1317, align 4
  %1319 = and i32 %1318, 255
  %1320 = zext i32 %1319 to i64
  %1321 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1316, i64 0, i32 5, i64 %1320, i32 0
  %1322 = load i64, i64* %1321, align 8
  %1323 = ashr i64 %1322, 35
  %1324 = trunc i64 %1323 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %1315, i8 zeroext 43, i32 %1324, i64 %1313, i32 %1314, i32 4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1311) #11
  br label %23402

1325:                                             ; preds = %1307
  %1326 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %1327 = load i32, i32* %1326, align 4
  %1328 = and i32 %1327, 255
  %1329 = zext i32 %1328 to i64
  %1330 = add nuw nsw i64 %1329, 1
  %1331 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1330, i32 0
  %1332 = load i64, i64* %1331, align 8
  %1333 = and i64 %1332, 7
  %1334 = icmp eq i64 %1333, 3
  br i1 %1334, label %1335, label %1392

1335:                                             ; preds = %1325
  %1336 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1329, i32 0
  %1337 = load i64, i64* %1336, align 8
  %1338 = and i64 %1337, 7
  %1339 = icmp ugt i64 %1338, 4
  %1340 = and i64 %1337, 24
  %1341 = icmp eq i64 %1340, 0
  %1342 = and i1 %1339, %1341
  br i1 %1342, label %1345, label %1343

1343:                                             ; preds = %1335
  %1344 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %1366

1345:                                             ; preds = %1335
  %1346 = lshr i64 %1337, 5
  %1347 = trunc i64 %1346 to i8
  %1348 = icmp ult i8 %1347, 12
  %1349 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %1348, label %1350, label %1366

1350:                                             ; preds = %1345
  %1351 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %1352 = ashr i64 %1337, 35
  %1353 = trunc i64 %1352 to i32
  %1354 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1330
  %1355 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %1351, %"class.v8::internal::compiler::InstructionOperand"* %1354) #11
  %1356 = extractvalue { i64, i64 } %1355, 0
  %1357 = trunc i64 %1356 to i32
  %1358 = extractvalue { i64, i64 } %1355, 1
  %1359 = icmp eq i32 %1357, 3
  %1360 = and i64 %1356, 1095216660480
  %1361 = icmp eq i64 %1360, 25769803776
  %1362 = select i1 %1361, i64 25769803776, i64 0
  %1363 = and i64 %1358, 4294967295
  %1364 = or i64 %1362, %1363
  %1365 = select i1 %1359, i64 0, i64 %1364
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %1349, i8 zeroext 5, i32 %1353, i64 %1365, i32 4) #11
  br label %23402

1366:                                             ; preds = %1343, %1345
  %1367 = phi %"class.v8::internal::Assembler"* [ %1344, %1343 ], [ %1349, %1345 ]
  %1368 = ashr i64 %1337, 35
  %1369 = trunc i64 %1368 to i32
  %1370 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %1369, i32 0) #11
  %1371 = extractvalue { i64, i32 } %1370, 0
  %1372 = extractvalue { i64, i32 } %1370, 1
  %1373 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %1374 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1373, i64 0, i32 1
  %1375 = load i32, i32* %1374, align 4
  %1376 = and i32 %1375, 255
  %1377 = add nuw nsw i32 %1376, 1
  %1378 = zext i32 %1377 to i64
  %1379 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1373, i64 0, i32 5, i64 %1378
  %1380 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %1381 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %1380, %"class.v8::internal::compiler::InstructionOperand"* %1379) #11
  %1382 = extractvalue { i64, i64 } %1381, 0
  %1383 = trunc i64 %1382 to i32
  %1384 = extractvalue { i64, i64 } %1381, 1
  %1385 = icmp eq i32 %1383, 3
  %1386 = and i64 %1382, 1095216660480
  %1387 = icmp eq i64 %1386, 25769803776
  %1388 = select i1 %1387, i64 25769803776, i64 0
  %1389 = and i64 %1384, 4294967295
  %1390 = or i64 %1388, %1389
  %1391 = select i1 %1385, i64 0, i64 %1390
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %1367, i8 zeroext 5, i64 %1371, i32 %1372, i64 %1391, i32 4) #11
  br label %23402

1392:                                             ; preds = %1325
  %1393 = icmp ugt i64 %1333, 4
  %1394 = and i64 %1332, 24
  %1395 = icmp eq i64 %1394, 0
  %1396 = and i1 %1393, %1395
  br i1 %1396, label %1403, label %1397

1397:                                             ; preds = %1392
  %1398 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %1399 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1329, i32 0
  %1400 = load i64, i64* %1399, align 8
  %1401 = ashr i64 %1400, 35
  %1402 = trunc i64 %1401 to i32
  br label %1415

1403:                                             ; preds = %1392
  %1404 = lshr i64 %1332, 5
  %1405 = trunc i64 %1404 to i8
  %1406 = icmp ult i8 %1405, 12
  %1407 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %1408 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1329, i32 0
  %1409 = load i64, i64* %1408, align 8
  %1410 = ashr i64 %1409, 35
  %1411 = trunc i64 %1410 to i32
  br i1 %1406, label %1412, label %1415

1412:                                             ; preds = %1403
  %1413 = ashr i64 %1332, 35
  %1414 = trunc i64 %1413 to i32
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %1407, i8 zeroext 43, i32 %1411, i32 %1414, i32 4) #11
  br label %23402

1415:                                             ; preds = %1397, %1403
  %1416 = phi i32 [ %1402, %1397 ], [ %1411, %1403 ]
  %1417 = phi %"class.v8::internal::Assembler"* [ %1398, %1397 ], [ %1407, %1403 ]
  %1418 = ashr i64 %1332, 35
  %1419 = trunc i64 %1418 to i32
  %1420 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %1419, i32 0) #11
  %1421 = extractvalue { i64, i32 } %1420, 0
  %1422 = extractvalue { i64, i32 } %1420, 1
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %1417, i8 zeroext 43, i32 %1416, i64 %1421, i32 %1422, i32 4) #11
  br label %23402

1423:                                             ; preds = %2
  %1424 = and i32 %275, 15872
  %1425 = icmp eq i32 %1424, 0
  br i1 %1425, label %1441, label %1426

1426:                                             ; preds = %1423
  %1427 = bitcast i64* %163 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1427) #11
  store i64 1, i64* %163, align 8
  %1428 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %163)
  %1429 = extractvalue { i64, i32 } %1428, 0
  %1430 = extractvalue { i64, i32 } %1428, 1
  %1431 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %1432 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %1433 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1432, i64 0, i32 1
  %1434 = load i32, i32* %1433, align 4
  %1435 = and i32 %1434, 255
  %1436 = zext i32 %1435 to i64
  %1437 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1432, i64 0, i32 5, i64 %1436, i32 0
  %1438 = load i64, i64* %1437, align 8
  %1439 = ashr i64 %1438, 35
  %1440 = trunc i64 %1439 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %1431, i8 zeroext 43, i32 %1440, i64 %1429, i32 %1430, i32 8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1427) #11
  br label %23402

1441:                                             ; preds = %1423
  %1442 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %1443 = load i32, i32* %1442, align 4
  %1444 = and i32 %1443, 255
  %1445 = zext i32 %1444 to i64
  %1446 = add nuw nsw i64 %1445, 1
  %1447 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1446, i32 0
  %1448 = load i64, i64* %1447, align 8
  %1449 = and i64 %1448, 7
  %1450 = icmp eq i64 %1449, 3
  br i1 %1450, label %1451, label %1508

1451:                                             ; preds = %1441
  %1452 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1445, i32 0
  %1453 = load i64, i64* %1452, align 8
  %1454 = and i64 %1453, 7
  %1455 = icmp ugt i64 %1454, 4
  %1456 = and i64 %1453, 24
  %1457 = icmp eq i64 %1456, 0
  %1458 = and i1 %1455, %1457
  br i1 %1458, label %1461, label %1459

1459:                                             ; preds = %1451
  %1460 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %1482

1461:                                             ; preds = %1451
  %1462 = lshr i64 %1453, 5
  %1463 = trunc i64 %1462 to i8
  %1464 = icmp ult i8 %1463, 12
  %1465 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %1464, label %1466, label %1482

1466:                                             ; preds = %1461
  %1467 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %1468 = ashr i64 %1453, 35
  %1469 = trunc i64 %1468 to i32
  %1470 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1446
  %1471 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %1467, %"class.v8::internal::compiler::InstructionOperand"* %1470) #11
  %1472 = extractvalue { i64, i64 } %1471, 0
  %1473 = trunc i64 %1472 to i32
  %1474 = extractvalue { i64, i64 } %1471, 1
  %1475 = icmp eq i32 %1473, 3
  %1476 = and i64 %1472, 1095216660480
  %1477 = icmp eq i64 %1476, 25769803776
  %1478 = select i1 %1477, i64 25769803776, i64 0
  %1479 = and i64 %1474, 4294967295
  %1480 = or i64 %1478, %1479
  %1481 = select i1 %1475, i64 0, i64 %1480
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %1465, i8 zeroext 5, i32 %1469, i64 %1481, i32 8) #11
  br label %23402

1482:                                             ; preds = %1459, %1461
  %1483 = phi %"class.v8::internal::Assembler"* [ %1460, %1459 ], [ %1465, %1461 ]
  %1484 = ashr i64 %1453, 35
  %1485 = trunc i64 %1484 to i32
  %1486 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %1485, i32 0) #11
  %1487 = extractvalue { i64, i32 } %1486, 0
  %1488 = extractvalue { i64, i32 } %1486, 1
  %1489 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %1490 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1489, i64 0, i32 1
  %1491 = load i32, i32* %1490, align 4
  %1492 = and i32 %1491, 255
  %1493 = add nuw nsw i32 %1492, 1
  %1494 = zext i32 %1493 to i64
  %1495 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1489, i64 0, i32 5, i64 %1494
  %1496 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %1497 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %1496, %"class.v8::internal::compiler::InstructionOperand"* %1495) #11
  %1498 = extractvalue { i64, i64 } %1497, 0
  %1499 = trunc i64 %1498 to i32
  %1500 = extractvalue { i64, i64 } %1497, 1
  %1501 = icmp eq i32 %1499, 3
  %1502 = and i64 %1498, 1095216660480
  %1503 = icmp eq i64 %1502, 25769803776
  %1504 = select i1 %1503, i64 25769803776, i64 0
  %1505 = and i64 %1500, 4294967295
  %1506 = or i64 %1504, %1505
  %1507 = select i1 %1501, i64 0, i64 %1506
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %1483, i8 zeroext 5, i64 %1487, i32 %1488, i64 %1507, i32 8) #11
  br label %23402

1508:                                             ; preds = %1441
  %1509 = icmp ugt i64 %1449, 4
  %1510 = and i64 %1448, 24
  %1511 = icmp eq i64 %1510, 0
  %1512 = and i1 %1509, %1511
  br i1 %1512, label %1519, label %1513

1513:                                             ; preds = %1508
  %1514 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %1515 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1445, i32 0
  %1516 = load i64, i64* %1515, align 8
  %1517 = ashr i64 %1516, 35
  %1518 = trunc i64 %1517 to i32
  br label %1531

1519:                                             ; preds = %1508
  %1520 = lshr i64 %1448, 5
  %1521 = trunc i64 %1520 to i8
  %1522 = icmp ult i8 %1521, 12
  %1523 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %1524 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1445, i32 0
  %1525 = load i64, i64* %1524, align 8
  %1526 = ashr i64 %1525, 35
  %1527 = trunc i64 %1526 to i32
  br i1 %1522, label %1528, label %1531

1528:                                             ; preds = %1519
  %1529 = ashr i64 %1448, 35
  %1530 = trunc i64 %1529 to i32
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %1523, i8 zeroext 43, i32 %1527, i32 %1530, i32 8) #11
  br label %23402

1531:                                             ; preds = %1513, %1519
  %1532 = phi i32 [ %1518, %1513 ], [ %1527, %1519 ]
  %1533 = phi %"class.v8::internal::Assembler"* [ %1514, %1513 ], [ %1523, %1519 ]
  %1534 = ashr i64 %1448, 35
  %1535 = trunc i64 %1534 to i32
  %1536 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %1535, i32 0) #11
  %1537 = extractvalue { i64, i32 } %1536, 0
  %1538 = extractvalue { i64, i32 } %1536, 1
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %1533, i8 zeroext 43, i32 %1532, i64 %1537, i32 %1538, i32 8) #11
  br label %23402

1539:                                             ; preds = %2
  %1540 = and i32 %275, 15872
  %1541 = icmp eq i32 %1540, 0
  br i1 %1541, label %1557, label %1542

1542:                                             ; preds = %1539
  %1543 = bitcast i64* %164 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1543) #11
  store i64 1, i64* %164, align 8
  %1544 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %164)
  %1545 = extractvalue { i64, i32 } %1544, 0
  %1546 = extractvalue { i64, i32 } %1544, 1
  %1547 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %1548 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %1549 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1548, i64 0, i32 1
  %1550 = load i32, i32* %1549, align 4
  %1551 = and i32 %1550, 255
  %1552 = zext i32 %1551 to i64
  %1553 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1548, i64 0, i32 5, i64 %1552, i32 0
  %1554 = load i64, i64* %1553, align 8
  %1555 = ashr i64 %1554, 35
  %1556 = trunc i64 %1555 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %1547, i8 zeroext 35, i32 %1556, i64 %1545, i32 %1546, i32 4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1543) #11
  br label %23402

1557:                                             ; preds = %1539
  %1558 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %1559 = load i32, i32* %1558, align 4
  %1560 = and i32 %1559, 255
  %1561 = zext i32 %1560 to i64
  %1562 = add nuw nsw i64 %1561, 1
  %1563 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1562, i32 0
  %1564 = load i64, i64* %1563, align 8
  %1565 = and i64 %1564, 7
  %1566 = icmp eq i64 %1565, 3
  br i1 %1566, label %1567, label %1624

1567:                                             ; preds = %1557
  %1568 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1561, i32 0
  %1569 = load i64, i64* %1568, align 8
  %1570 = and i64 %1569, 7
  %1571 = icmp ugt i64 %1570, 4
  %1572 = and i64 %1569, 24
  %1573 = icmp eq i64 %1572, 0
  %1574 = and i1 %1571, %1573
  br i1 %1574, label %1577, label %1575

1575:                                             ; preds = %1567
  %1576 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %1598

1577:                                             ; preds = %1567
  %1578 = lshr i64 %1569, 5
  %1579 = trunc i64 %1578 to i8
  %1580 = icmp ult i8 %1579, 12
  %1581 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %1580, label %1582, label %1598

1582:                                             ; preds = %1577
  %1583 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %1584 = ashr i64 %1569, 35
  %1585 = trunc i64 %1584 to i32
  %1586 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1562
  %1587 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %1583, %"class.v8::internal::compiler::InstructionOperand"* %1586) #11
  %1588 = extractvalue { i64, i64 } %1587, 0
  %1589 = trunc i64 %1588 to i32
  %1590 = extractvalue { i64, i64 } %1587, 1
  %1591 = icmp eq i32 %1589, 3
  %1592 = and i64 %1588, 1095216660480
  %1593 = icmp eq i64 %1592, 25769803776
  %1594 = select i1 %1593, i64 25769803776, i64 0
  %1595 = and i64 %1590, 4294967295
  %1596 = or i64 %1594, %1595
  %1597 = select i1 %1591, i64 0, i64 %1596
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %1581, i8 zeroext 4, i32 %1585, i64 %1597, i32 4) #11
  br label %23402

1598:                                             ; preds = %1575, %1577
  %1599 = phi %"class.v8::internal::Assembler"* [ %1576, %1575 ], [ %1581, %1577 ]
  %1600 = ashr i64 %1569, 35
  %1601 = trunc i64 %1600 to i32
  %1602 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %1601, i32 0) #11
  %1603 = extractvalue { i64, i32 } %1602, 0
  %1604 = extractvalue { i64, i32 } %1602, 1
  %1605 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %1606 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1605, i64 0, i32 1
  %1607 = load i32, i32* %1606, align 4
  %1608 = and i32 %1607, 255
  %1609 = add nuw nsw i32 %1608, 1
  %1610 = zext i32 %1609 to i64
  %1611 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1605, i64 0, i32 5, i64 %1610
  %1612 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %1613 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %1612, %"class.v8::internal::compiler::InstructionOperand"* %1611) #11
  %1614 = extractvalue { i64, i64 } %1613, 0
  %1615 = trunc i64 %1614 to i32
  %1616 = extractvalue { i64, i64 } %1613, 1
  %1617 = icmp eq i32 %1615, 3
  %1618 = and i64 %1614, 1095216660480
  %1619 = icmp eq i64 %1618, 25769803776
  %1620 = select i1 %1619, i64 25769803776, i64 0
  %1621 = and i64 %1616, 4294967295
  %1622 = or i64 %1620, %1621
  %1623 = select i1 %1617, i64 0, i64 %1622
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %1599, i8 zeroext 4, i64 %1603, i32 %1604, i64 %1623, i32 4) #11
  br label %23402

1624:                                             ; preds = %1557
  %1625 = icmp ugt i64 %1565, 4
  %1626 = and i64 %1564, 24
  %1627 = icmp eq i64 %1626, 0
  %1628 = and i1 %1625, %1627
  br i1 %1628, label %1635, label %1629

1629:                                             ; preds = %1624
  %1630 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %1631 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1561, i32 0
  %1632 = load i64, i64* %1631, align 8
  %1633 = ashr i64 %1632, 35
  %1634 = trunc i64 %1633 to i32
  br label %1647

1635:                                             ; preds = %1624
  %1636 = lshr i64 %1564, 5
  %1637 = trunc i64 %1636 to i8
  %1638 = icmp ult i8 %1637, 12
  %1639 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %1640 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1561, i32 0
  %1641 = load i64, i64* %1640, align 8
  %1642 = ashr i64 %1641, 35
  %1643 = trunc i64 %1642 to i32
  br i1 %1638, label %1644, label %1647

1644:                                             ; preds = %1635
  %1645 = ashr i64 %1564, 35
  %1646 = trunc i64 %1645 to i32
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %1639, i8 zeroext 35, i32 %1643, i32 %1646, i32 4) #11
  br label %23402

1647:                                             ; preds = %1629, %1635
  %1648 = phi i32 [ %1634, %1629 ], [ %1643, %1635 ]
  %1649 = phi %"class.v8::internal::Assembler"* [ %1630, %1629 ], [ %1639, %1635 ]
  %1650 = ashr i64 %1564, 35
  %1651 = trunc i64 %1650 to i32
  %1652 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %1651, i32 0) #11
  %1653 = extractvalue { i64, i32 } %1652, 0
  %1654 = extractvalue { i64, i32 } %1652, 1
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %1649, i8 zeroext 35, i32 %1648, i64 %1653, i32 %1654, i32 4) #11
  br label %23402

1655:                                             ; preds = %2
  %1656 = and i32 %275, 15872
  %1657 = icmp eq i32 %1656, 0
  br i1 %1657, label %1673, label %1658

1658:                                             ; preds = %1655
  %1659 = bitcast i64* %165 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1659) #11
  store i64 1, i64* %165, align 8
  %1660 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %165)
  %1661 = extractvalue { i64, i32 } %1660, 0
  %1662 = extractvalue { i64, i32 } %1660, 1
  %1663 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %1664 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %1665 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1664, i64 0, i32 1
  %1666 = load i32, i32* %1665, align 4
  %1667 = and i32 %1666, 255
  %1668 = zext i32 %1667 to i64
  %1669 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1664, i64 0, i32 5, i64 %1668, i32 0
  %1670 = load i64, i64* %1669, align 8
  %1671 = ashr i64 %1670, 35
  %1672 = trunc i64 %1671 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %1663, i8 zeroext 35, i32 %1672, i64 %1661, i32 %1662, i32 8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1659) #11
  br label %23402

1673:                                             ; preds = %1655
  %1674 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %1675 = load i32, i32* %1674, align 4
  %1676 = and i32 %1675, 255
  %1677 = zext i32 %1676 to i64
  %1678 = add nuw nsw i64 %1677, 1
  %1679 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1678, i32 0
  %1680 = load i64, i64* %1679, align 8
  %1681 = and i64 %1680, 7
  %1682 = icmp eq i64 %1681, 3
  br i1 %1682, label %1683, label %1740

1683:                                             ; preds = %1673
  %1684 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1677, i32 0
  %1685 = load i64, i64* %1684, align 8
  %1686 = and i64 %1685, 7
  %1687 = icmp ugt i64 %1686, 4
  %1688 = and i64 %1685, 24
  %1689 = icmp eq i64 %1688, 0
  %1690 = and i1 %1687, %1689
  br i1 %1690, label %1693, label %1691

1691:                                             ; preds = %1683
  %1692 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %1714

1693:                                             ; preds = %1683
  %1694 = lshr i64 %1685, 5
  %1695 = trunc i64 %1694 to i8
  %1696 = icmp ult i8 %1695, 12
  %1697 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %1696, label %1698, label %1714

1698:                                             ; preds = %1693
  %1699 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %1700 = ashr i64 %1685, 35
  %1701 = trunc i64 %1700 to i32
  %1702 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1678
  %1703 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %1699, %"class.v8::internal::compiler::InstructionOperand"* %1702) #11
  %1704 = extractvalue { i64, i64 } %1703, 0
  %1705 = trunc i64 %1704 to i32
  %1706 = extractvalue { i64, i64 } %1703, 1
  %1707 = icmp eq i32 %1705, 3
  %1708 = and i64 %1704, 1095216660480
  %1709 = icmp eq i64 %1708, 25769803776
  %1710 = select i1 %1709, i64 25769803776, i64 0
  %1711 = and i64 %1706, 4294967295
  %1712 = or i64 %1710, %1711
  %1713 = select i1 %1707, i64 0, i64 %1712
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %1697, i8 zeroext 4, i32 %1701, i64 %1713, i32 8) #11
  br label %23402

1714:                                             ; preds = %1691, %1693
  %1715 = phi %"class.v8::internal::Assembler"* [ %1692, %1691 ], [ %1697, %1693 ]
  %1716 = ashr i64 %1685, 35
  %1717 = trunc i64 %1716 to i32
  %1718 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %1717, i32 0) #11
  %1719 = extractvalue { i64, i32 } %1718, 0
  %1720 = extractvalue { i64, i32 } %1718, 1
  %1721 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %1722 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1721, i64 0, i32 1
  %1723 = load i32, i32* %1722, align 4
  %1724 = and i32 %1723, 255
  %1725 = add nuw nsw i32 %1724, 1
  %1726 = zext i32 %1725 to i64
  %1727 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1721, i64 0, i32 5, i64 %1726
  %1728 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %1729 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %1728, %"class.v8::internal::compiler::InstructionOperand"* %1727) #11
  %1730 = extractvalue { i64, i64 } %1729, 0
  %1731 = trunc i64 %1730 to i32
  %1732 = extractvalue { i64, i64 } %1729, 1
  %1733 = icmp eq i32 %1731, 3
  %1734 = and i64 %1730, 1095216660480
  %1735 = icmp eq i64 %1734, 25769803776
  %1736 = select i1 %1735, i64 25769803776, i64 0
  %1737 = and i64 %1732, 4294967295
  %1738 = or i64 %1736, %1737
  %1739 = select i1 %1733, i64 0, i64 %1738
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %1715, i8 zeroext 4, i64 %1719, i32 %1720, i64 %1739, i32 8) #11
  br label %23402

1740:                                             ; preds = %1673
  %1741 = icmp ugt i64 %1681, 4
  %1742 = and i64 %1680, 24
  %1743 = icmp eq i64 %1742, 0
  %1744 = and i1 %1741, %1743
  br i1 %1744, label %1751, label %1745

1745:                                             ; preds = %1740
  %1746 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %1747 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1677, i32 0
  %1748 = load i64, i64* %1747, align 8
  %1749 = ashr i64 %1748, 35
  %1750 = trunc i64 %1749 to i32
  br label %1763

1751:                                             ; preds = %1740
  %1752 = lshr i64 %1680, 5
  %1753 = trunc i64 %1752 to i8
  %1754 = icmp ult i8 %1753, 12
  %1755 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %1756 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1677, i32 0
  %1757 = load i64, i64* %1756, align 8
  %1758 = ashr i64 %1757, 35
  %1759 = trunc i64 %1758 to i32
  br i1 %1754, label %1760, label %1763

1760:                                             ; preds = %1751
  %1761 = ashr i64 %1680, 35
  %1762 = trunc i64 %1761 to i32
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %1755, i8 zeroext 35, i32 %1759, i32 %1762, i32 8) #11
  br label %23402

1763:                                             ; preds = %1745, %1751
  %1764 = phi i32 [ %1750, %1745 ], [ %1759, %1751 ]
  %1765 = phi %"class.v8::internal::Assembler"* [ %1746, %1745 ], [ %1755, %1751 ]
  %1766 = ashr i64 %1680, 35
  %1767 = trunc i64 %1766 to i32
  %1768 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %1767, i32 0) #11
  %1769 = extractvalue { i64, i32 } %1768, 0
  %1770 = extractvalue { i64, i32 } %1768, 1
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %1765, i8 zeroext 35, i32 %1764, i64 %1769, i32 %1770, i32 8) #11
  br label %23402

1771:                                             ; preds = %2
  %1772 = and i32 %275, 15872
  %1773 = icmp eq i32 %1772, 0
  br i1 %1773, label %1816, label %1774

1774:                                             ; preds = %1771
  %1775 = bitcast i64* %166 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1775) #11
  store i64 0, i64* %166, align 8
  %1776 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %166)
  %1777 = extractvalue { i64, i32 } %1776, 0
  %1778 = extractvalue { i64, i32 } %1776, 1
  %1779 = load i64, i64* %166, align 8
  %1780 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %1781 = load i32, i32* %1780, align 4
  %1782 = and i32 %1781, 255
  %1783 = zext i32 %1782 to i64
  %1784 = add i64 %1779, %1783
  %1785 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1784, i32 0
  %1786 = load i64, i64* %1785, align 8
  %1787 = and i64 %1786, 7
  %1788 = icmp eq i64 %1787, 3
  %1789 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %1790 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %1791 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1790, i64 0, i32 1
  %1792 = load i32, i32* %1791, align 4
  %1793 = and i32 %1792, 255
  %1794 = zext i32 %1793 to i64
  %1795 = add i64 %1779, %1794
  br i1 %1788, label %1796, label %1810

1796:                                             ; preds = %1774
  %1797 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1790, i64 0, i32 5, i64 %1795
  %1798 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %1799 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %1798, %"class.v8::internal::compiler::InstructionOperand"* %1797) #11
  %1800 = extractvalue { i64, i64 } %1799, 0
  %1801 = trunc i64 %1800 to i32
  %1802 = extractvalue { i64, i64 } %1799, 1
  %1803 = icmp eq i32 %1801, 3
  %1804 = and i64 %1800, 1095216660480
  %1805 = icmp eq i64 %1804, 25769803776
  %1806 = select i1 %1805, i64 25769803776, i64 0
  %1807 = and i64 %1802, 4294967295
  %1808 = or i64 %1806, %1807
  %1809 = select i1 %1803, i64 0, i64 %1808
  call void @_ZN2v88internal9Assembler25immediate_arithmetic_op_8EhNS0_7OperandENS0_9ImmediateE(%"class.v8::internal::Assembler"* %1789, i8 zeroext 7, i64 %1777, i32 %1778, i64 %1809) #11
  br label %1815

1810:                                             ; preds = %1774
  %1811 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1790, i64 0, i32 5, i64 %1795, i32 0
  %1812 = load i64, i64* %1811, align 8
  %1813 = ashr i64 %1812, 35
  %1814 = trunc i64 %1813 to i32
  call void @_ZN2v88internal9Assembler15arithmetic_op_8EhNS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %1789, i8 zeroext 56, i32 %1814, i64 %1777, i32 %1778) #11
  br label %1815

1815:                                             ; preds = %1810, %1796
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1775) #11
  br label %23402

1816:                                             ; preds = %1771
  %1817 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %1818 = load i32, i32* %1817, align 4
  %1819 = and i32 %1818, 255
  %1820 = zext i32 %1819 to i64
  %1821 = add nuw nsw i64 %1820, 1
  %1822 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1821, i32 0
  %1823 = load i64, i64* %1822, align 8
  %1824 = and i64 %1823, 7
  %1825 = icmp eq i64 %1824, 3
  br i1 %1825, label %1826, label %1883

1826:                                             ; preds = %1816
  %1827 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1820, i32 0
  %1828 = load i64, i64* %1827, align 8
  %1829 = and i64 %1828, 7
  %1830 = icmp ugt i64 %1829, 4
  %1831 = and i64 %1828, 24
  %1832 = icmp eq i64 %1831, 0
  %1833 = and i1 %1830, %1832
  br i1 %1833, label %1836, label %1834

1834:                                             ; preds = %1826
  %1835 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %1857

1836:                                             ; preds = %1826
  %1837 = lshr i64 %1828, 5
  %1838 = trunc i64 %1837 to i8
  %1839 = icmp ult i8 %1838, 12
  %1840 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %1839, label %1841, label %1857

1841:                                             ; preds = %1836
  %1842 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %1843 = ashr i64 %1828, 35
  %1844 = trunc i64 %1843 to i32
  %1845 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1821
  %1846 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %1842, %"class.v8::internal::compiler::InstructionOperand"* %1845) #11
  %1847 = extractvalue { i64, i64 } %1846, 0
  %1848 = trunc i64 %1847 to i32
  %1849 = extractvalue { i64, i64 } %1846, 1
  %1850 = icmp eq i32 %1848, 3
  %1851 = and i64 %1847, 1095216660480
  %1852 = icmp eq i64 %1851, 25769803776
  %1853 = select i1 %1852, i64 25769803776, i64 0
  %1854 = and i64 %1849, 4294967295
  %1855 = or i64 %1853, %1854
  %1856 = select i1 %1850, i64 0, i64 %1855
  call void @_ZN2v88internal9Assembler25immediate_arithmetic_op_8EhNS0_8RegisterENS0_9ImmediateE(%"class.v8::internal::Assembler"* %1840, i8 zeroext 7, i32 %1844, i64 %1856) #11
  br label %23402

1857:                                             ; preds = %1834, %1836
  %1858 = phi %"class.v8::internal::Assembler"* [ %1835, %1834 ], [ %1840, %1836 ]
  %1859 = ashr i64 %1828, 35
  %1860 = trunc i64 %1859 to i32
  %1861 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %1860, i32 0) #11
  %1862 = extractvalue { i64, i32 } %1861, 0
  %1863 = extractvalue { i64, i32 } %1861, 1
  %1864 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %1865 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1864, i64 0, i32 1
  %1866 = load i32, i32* %1865, align 4
  %1867 = and i32 %1866, 255
  %1868 = add nuw nsw i32 %1867, 1
  %1869 = zext i32 %1868 to i64
  %1870 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1864, i64 0, i32 5, i64 %1869
  %1871 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %1872 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %1871, %"class.v8::internal::compiler::InstructionOperand"* %1870) #11
  %1873 = extractvalue { i64, i64 } %1872, 0
  %1874 = trunc i64 %1873 to i32
  %1875 = extractvalue { i64, i64 } %1872, 1
  %1876 = icmp eq i32 %1874, 3
  %1877 = and i64 %1873, 1095216660480
  %1878 = icmp eq i64 %1877, 25769803776
  %1879 = select i1 %1878, i64 25769803776, i64 0
  %1880 = and i64 %1875, 4294967295
  %1881 = or i64 %1879, %1880
  %1882 = select i1 %1876, i64 0, i64 %1881
  call void @_ZN2v88internal9Assembler25immediate_arithmetic_op_8EhNS0_7OperandENS0_9ImmediateE(%"class.v8::internal::Assembler"* %1858, i8 zeroext 7, i64 %1862, i32 %1863, i64 %1882) #11
  br label %23402

1883:                                             ; preds = %1816
  %1884 = icmp ugt i64 %1824, 4
  %1885 = and i64 %1823, 24
  %1886 = icmp eq i64 %1885, 0
  %1887 = and i1 %1884, %1886
  br i1 %1887, label %1894, label %1888

1888:                                             ; preds = %1883
  %1889 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %1890 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1820, i32 0
  %1891 = load i64, i64* %1890, align 8
  %1892 = ashr i64 %1891, 35
  %1893 = trunc i64 %1892 to i32
  br label %1906

1894:                                             ; preds = %1883
  %1895 = lshr i64 %1823, 5
  %1896 = trunc i64 %1895 to i8
  %1897 = icmp ult i8 %1896, 12
  %1898 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %1899 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1820, i32 0
  %1900 = load i64, i64* %1899, align 8
  %1901 = ashr i64 %1900, 35
  %1902 = trunc i64 %1901 to i32
  br i1 %1897, label %1903, label %1906

1903:                                             ; preds = %1894
  %1904 = ashr i64 %1823, 35
  %1905 = trunc i64 %1904 to i32
  tail call void @_ZN2v88internal9Assembler15arithmetic_op_8EhNS0_8RegisterES2_(%"class.v8::internal::Assembler"* %1898, i8 zeroext 58, i32 %1902, i32 %1905) #11
  br label %23402

1906:                                             ; preds = %1888, %1894
  %1907 = phi i32 [ %1893, %1888 ], [ %1902, %1894 ]
  %1908 = phi %"class.v8::internal::Assembler"* [ %1889, %1888 ], [ %1898, %1894 ]
  %1909 = ashr i64 %1823, 35
  %1910 = trunc i64 %1909 to i32
  %1911 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %1910, i32 0) #11
  %1912 = extractvalue { i64, i32 } %1911, 0
  %1913 = extractvalue { i64, i32 } %1911, 1
  call void @_ZN2v88internal9Assembler15arithmetic_op_8EhNS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %1908, i8 zeroext 58, i32 %1907, i64 %1912, i32 %1913) #11
  br label %23402

1914:                                             ; preds = %2
  %1915 = and i32 %275, 15872
  %1916 = icmp eq i32 %1915, 0
  br i1 %1916, label %1959, label %1917

1917:                                             ; preds = %1914
  %1918 = bitcast i64* %167 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1918) #11
  store i64 0, i64* %167, align 8
  %1919 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %167)
  %1920 = extractvalue { i64, i32 } %1919, 0
  %1921 = extractvalue { i64, i32 } %1919, 1
  %1922 = load i64, i64* %167, align 8
  %1923 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %1924 = load i32, i32* %1923, align 4
  %1925 = and i32 %1924, 255
  %1926 = zext i32 %1925 to i64
  %1927 = add i64 %1922, %1926
  %1928 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1927, i32 0
  %1929 = load i64, i64* %1928, align 8
  %1930 = and i64 %1929, 7
  %1931 = icmp eq i64 %1930, 3
  %1932 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %1933 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %1934 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1933, i64 0, i32 1
  %1935 = load i32, i32* %1934, align 4
  %1936 = and i32 %1935, 255
  %1937 = zext i32 %1936 to i64
  %1938 = add i64 %1922, %1937
  br i1 %1931, label %1939, label %1953

1939:                                             ; preds = %1917
  %1940 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1933, i64 0, i32 5, i64 %1938
  %1941 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %1942 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %1941, %"class.v8::internal::compiler::InstructionOperand"* %1940) #11
  %1943 = extractvalue { i64, i64 } %1942, 0
  %1944 = trunc i64 %1943 to i32
  %1945 = extractvalue { i64, i64 } %1942, 1
  %1946 = icmp eq i32 %1944, 3
  %1947 = and i64 %1943, 1095216660480
  %1948 = icmp eq i64 %1947, 25769803776
  %1949 = select i1 %1948, i64 25769803776, i64 0
  %1950 = and i64 %1945, 4294967295
  %1951 = or i64 %1949, %1950
  %1952 = select i1 %1946, i64 0, i64 %1951
  call void @_ZN2v88internal9Assembler26immediate_arithmetic_op_16EhNS0_7OperandENS0_9ImmediateE(%"class.v8::internal::Assembler"* %1932, i8 zeroext 7, i64 %1920, i32 %1921, i64 %1952) #11
  br label %1958

1953:                                             ; preds = %1917
  %1954 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1933, i64 0, i32 5, i64 %1938, i32 0
  %1955 = load i64, i64* %1954, align 8
  %1956 = ashr i64 %1955, 35
  %1957 = trunc i64 %1956 to i32
  call void @_ZN2v88internal9Assembler16arithmetic_op_16EhNS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %1932, i8 zeroext 57, i32 %1957, i64 %1920, i32 %1921) #11
  br label %1958

1958:                                             ; preds = %1953, %1939
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1918) #11
  br label %23402

1959:                                             ; preds = %1914
  %1960 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %1961 = load i32, i32* %1960, align 4
  %1962 = and i32 %1961, 255
  %1963 = zext i32 %1962 to i64
  %1964 = add nuw nsw i64 %1963, 1
  %1965 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1964, i32 0
  %1966 = load i64, i64* %1965, align 8
  %1967 = and i64 %1966, 7
  %1968 = icmp eq i64 %1967, 3
  br i1 %1968, label %1969, label %2026

1969:                                             ; preds = %1959
  %1970 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1963, i32 0
  %1971 = load i64, i64* %1970, align 8
  %1972 = and i64 %1971, 7
  %1973 = icmp ugt i64 %1972, 4
  %1974 = and i64 %1971, 24
  %1975 = icmp eq i64 %1974, 0
  %1976 = and i1 %1973, %1975
  br i1 %1976, label %1979, label %1977

1977:                                             ; preds = %1969
  %1978 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %2000

1979:                                             ; preds = %1969
  %1980 = lshr i64 %1971, 5
  %1981 = trunc i64 %1980 to i8
  %1982 = icmp ult i8 %1981, 12
  %1983 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %1982, label %1984, label %2000

1984:                                             ; preds = %1979
  %1985 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %1986 = ashr i64 %1971, 35
  %1987 = trunc i64 %1986 to i32
  %1988 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1964
  %1989 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %1985, %"class.v8::internal::compiler::InstructionOperand"* %1988) #11
  %1990 = extractvalue { i64, i64 } %1989, 0
  %1991 = trunc i64 %1990 to i32
  %1992 = extractvalue { i64, i64 } %1989, 1
  %1993 = icmp eq i32 %1991, 3
  %1994 = and i64 %1990, 1095216660480
  %1995 = icmp eq i64 %1994, 25769803776
  %1996 = select i1 %1995, i64 25769803776, i64 0
  %1997 = and i64 %1992, 4294967295
  %1998 = or i64 %1996, %1997
  %1999 = select i1 %1993, i64 0, i64 %1998
  call void @_ZN2v88internal9Assembler26immediate_arithmetic_op_16EhNS0_8RegisterENS0_9ImmediateE(%"class.v8::internal::Assembler"* %1983, i8 zeroext 7, i32 %1987, i64 %1999) #11
  br label %23402

2000:                                             ; preds = %1977, %1979
  %2001 = phi %"class.v8::internal::Assembler"* [ %1978, %1977 ], [ %1983, %1979 ]
  %2002 = ashr i64 %1971, 35
  %2003 = trunc i64 %2002 to i32
  %2004 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %2003, i32 0) #11
  %2005 = extractvalue { i64, i32 } %2004, 0
  %2006 = extractvalue { i64, i32 } %2004, 1
  %2007 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %2008 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2007, i64 0, i32 1
  %2009 = load i32, i32* %2008, align 4
  %2010 = and i32 %2009, 255
  %2011 = add nuw nsw i32 %2010, 1
  %2012 = zext i32 %2011 to i64
  %2013 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2007, i64 0, i32 5, i64 %2012
  %2014 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %2015 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %2014, %"class.v8::internal::compiler::InstructionOperand"* %2013) #11
  %2016 = extractvalue { i64, i64 } %2015, 0
  %2017 = trunc i64 %2016 to i32
  %2018 = extractvalue { i64, i64 } %2015, 1
  %2019 = icmp eq i32 %2017, 3
  %2020 = and i64 %2016, 1095216660480
  %2021 = icmp eq i64 %2020, 25769803776
  %2022 = select i1 %2021, i64 25769803776, i64 0
  %2023 = and i64 %2018, 4294967295
  %2024 = or i64 %2022, %2023
  %2025 = select i1 %2019, i64 0, i64 %2024
  call void @_ZN2v88internal9Assembler26immediate_arithmetic_op_16EhNS0_7OperandENS0_9ImmediateE(%"class.v8::internal::Assembler"* %2001, i8 zeroext 7, i64 %2005, i32 %2006, i64 %2025) #11
  br label %23402

2026:                                             ; preds = %1959
  %2027 = icmp ugt i64 %1967, 4
  %2028 = and i64 %1966, 24
  %2029 = icmp eq i64 %2028, 0
  %2030 = and i1 %2027, %2029
  br i1 %2030, label %2037, label %2031

2031:                                             ; preds = %2026
  %2032 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %2033 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1963, i32 0
  %2034 = load i64, i64* %2033, align 8
  %2035 = ashr i64 %2034, 35
  %2036 = trunc i64 %2035 to i32
  br label %2049

2037:                                             ; preds = %2026
  %2038 = lshr i64 %1966, 5
  %2039 = trunc i64 %2038 to i8
  %2040 = icmp ult i8 %2039, 12
  %2041 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %2042 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %1963, i32 0
  %2043 = load i64, i64* %2042, align 8
  %2044 = ashr i64 %2043, 35
  %2045 = trunc i64 %2044 to i32
  br i1 %2040, label %2046, label %2049

2046:                                             ; preds = %2037
  %2047 = ashr i64 %1966, 35
  %2048 = trunc i64 %2047 to i32
  tail call void @_ZN2v88internal9Assembler16arithmetic_op_16EhNS0_8RegisterES2_(%"class.v8::internal::Assembler"* %2041, i8 zeroext 59, i32 %2045, i32 %2048) #11
  br label %23402

2049:                                             ; preds = %2031, %2037
  %2050 = phi i32 [ %2036, %2031 ], [ %2045, %2037 ]
  %2051 = phi %"class.v8::internal::Assembler"* [ %2032, %2031 ], [ %2041, %2037 ]
  %2052 = ashr i64 %1966, 35
  %2053 = trunc i64 %2052 to i32
  %2054 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %2053, i32 0) #11
  %2055 = extractvalue { i64, i32 } %2054, 0
  %2056 = extractvalue { i64, i32 } %2054, 1
  call void @_ZN2v88internal9Assembler16arithmetic_op_16EhNS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %2051, i8 zeroext 59, i32 %2050, i64 %2055, i32 %2056) #11
  br label %23402

2057:                                             ; preds = %2
  %2058 = and i32 %275, 15872
  %2059 = icmp eq i32 %2058, 0
  br i1 %2059, label %2102, label %2060

2060:                                             ; preds = %2057
  %2061 = bitcast i64* %168 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2061) #11
  store i64 0, i64* %168, align 8
  %2062 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %168)
  %2063 = extractvalue { i64, i32 } %2062, 0
  %2064 = extractvalue { i64, i32 } %2062, 1
  %2065 = load i64, i64* %168, align 8
  %2066 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %2067 = load i32, i32* %2066, align 4
  %2068 = and i32 %2067, 255
  %2069 = zext i32 %2068 to i64
  %2070 = add i64 %2065, %2069
  %2071 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2070, i32 0
  %2072 = load i64, i64* %2071, align 8
  %2073 = and i64 %2072, 7
  %2074 = icmp eq i64 %2073, 3
  %2075 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %2076 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %2077 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2076, i64 0, i32 1
  %2078 = load i32, i32* %2077, align 4
  %2079 = and i32 %2078, 255
  %2080 = zext i32 %2079 to i64
  %2081 = add i64 %2065, %2080
  br i1 %2074, label %2082, label %2096

2082:                                             ; preds = %2060
  %2083 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2076, i64 0, i32 5, i64 %2081
  %2084 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %2085 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %2084, %"class.v8::internal::compiler::InstructionOperand"* %2083) #11
  %2086 = extractvalue { i64, i64 } %2085, 0
  %2087 = trunc i64 %2086 to i32
  %2088 = extractvalue { i64, i64 } %2085, 1
  %2089 = icmp eq i32 %2087, 3
  %2090 = and i64 %2086, 1095216660480
  %2091 = icmp eq i64 %2090, 25769803776
  %2092 = select i1 %2091, i64 25769803776, i64 0
  %2093 = and i64 %2088, 4294967295
  %2094 = or i64 %2092, %2093
  %2095 = select i1 %2089, i64 0, i64 %2094
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %2075, i8 zeroext 7, i64 %2063, i32 %2064, i64 %2095, i32 4) #11
  br label %2101

2096:                                             ; preds = %2060
  %2097 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2076, i64 0, i32 5, i64 %2081, i32 0
  %2098 = load i64, i64* %2097, align 8
  %2099 = ashr i64 %2098, 35
  %2100 = trunc i64 %2099 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %2075, i8 zeroext 57, i32 %2100, i64 %2063, i32 %2064, i32 4) #11
  br label %2101

2101:                                             ; preds = %2096, %2082
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2061) #11
  br label %23402

2102:                                             ; preds = %2057
  %2103 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %2104 = load i32, i32* %2103, align 4
  %2105 = and i32 %2104, 255
  %2106 = zext i32 %2105 to i64
  %2107 = add nuw nsw i64 %2106, 1
  %2108 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2107, i32 0
  %2109 = load i64, i64* %2108, align 8
  %2110 = and i64 %2109, 7
  %2111 = icmp eq i64 %2110, 3
  br i1 %2111, label %2112, label %2169

2112:                                             ; preds = %2102
  %2113 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2106, i32 0
  %2114 = load i64, i64* %2113, align 8
  %2115 = and i64 %2114, 7
  %2116 = icmp ugt i64 %2115, 4
  %2117 = and i64 %2114, 24
  %2118 = icmp eq i64 %2117, 0
  %2119 = and i1 %2116, %2118
  br i1 %2119, label %2122, label %2120

2120:                                             ; preds = %2112
  %2121 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %2143

2122:                                             ; preds = %2112
  %2123 = lshr i64 %2114, 5
  %2124 = trunc i64 %2123 to i8
  %2125 = icmp ult i8 %2124, 12
  %2126 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %2125, label %2127, label %2143

2127:                                             ; preds = %2122
  %2128 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %2129 = ashr i64 %2114, 35
  %2130 = trunc i64 %2129 to i32
  %2131 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2107
  %2132 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %2128, %"class.v8::internal::compiler::InstructionOperand"* %2131) #11
  %2133 = extractvalue { i64, i64 } %2132, 0
  %2134 = trunc i64 %2133 to i32
  %2135 = extractvalue { i64, i64 } %2132, 1
  %2136 = icmp eq i32 %2134, 3
  %2137 = and i64 %2133, 1095216660480
  %2138 = icmp eq i64 %2137, 25769803776
  %2139 = select i1 %2138, i64 25769803776, i64 0
  %2140 = and i64 %2135, 4294967295
  %2141 = or i64 %2139, %2140
  %2142 = select i1 %2136, i64 0, i64 %2141
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %2126, i8 zeroext 7, i32 %2130, i64 %2142, i32 4) #11
  br label %23402

2143:                                             ; preds = %2120, %2122
  %2144 = phi %"class.v8::internal::Assembler"* [ %2121, %2120 ], [ %2126, %2122 ]
  %2145 = ashr i64 %2114, 35
  %2146 = trunc i64 %2145 to i32
  %2147 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %2146, i32 0) #11
  %2148 = extractvalue { i64, i32 } %2147, 0
  %2149 = extractvalue { i64, i32 } %2147, 1
  %2150 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %2151 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2150, i64 0, i32 1
  %2152 = load i32, i32* %2151, align 4
  %2153 = and i32 %2152, 255
  %2154 = add nuw nsw i32 %2153, 1
  %2155 = zext i32 %2154 to i64
  %2156 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2150, i64 0, i32 5, i64 %2155
  %2157 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %2158 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %2157, %"class.v8::internal::compiler::InstructionOperand"* %2156) #11
  %2159 = extractvalue { i64, i64 } %2158, 0
  %2160 = trunc i64 %2159 to i32
  %2161 = extractvalue { i64, i64 } %2158, 1
  %2162 = icmp eq i32 %2160, 3
  %2163 = and i64 %2159, 1095216660480
  %2164 = icmp eq i64 %2163, 25769803776
  %2165 = select i1 %2164, i64 25769803776, i64 0
  %2166 = and i64 %2161, 4294967295
  %2167 = or i64 %2165, %2166
  %2168 = select i1 %2162, i64 0, i64 %2167
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %2144, i8 zeroext 7, i64 %2148, i32 %2149, i64 %2168, i32 4) #11
  br label %23402

2169:                                             ; preds = %2102
  %2170 = icmp ugt i64 %2110, 4
  %2171 = and i64 %2109, 24
  %2172 = icmp eq i64 %2171, 0
  %2173 = and i1 %2170, %2172
  br i1 %2173, label %2180, label %2174

2174:                                             ; preds = %2169
  %2175 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %2176 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2106, i32 0
  %2177 = load i64, i64* %2176, align 8
  %2178 = ashr i64 %2177, 35
  %2179 = trunc i64 %2178 to i32
  br label %2192

2180:                                             ; preds = %2169
  %2181 = lshr i64 %2109, 5
  %2182 = trunc i64 %2181 to i8
  %2183 = icmp ult i8 %2182, 12
  %2184 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %2185 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2106, i32 0
  %2186 = load i64, i64* %2185, align 8
  %2187 = ashr i64 %2186, 35
  %2188 = trunc i64 %2187 to i32
  br i1 %2183, label %2189, label %2192

2189:                                             ; preds = %2180
  %2190 = ashr i64 %2109, 35
  %2191 = trunc i64 %2190 to i32
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %2184, i8 zeroext 59, i32 %2188, i32 %2191, i32 4) #11
  br label %23402

2192:                                             ; preds = %2174, %2180
  %2193 = phi i32 [ %2179, %2174 ], [ %2188, %2180 ]
  %2194 = phi %"class.v8::internal::Assembler"* [ %2175, %2174 ], [ %2184, %2180 ]
  %2195 = ashr i64 %2109, 35
  %2196 = trunc i64 %2195 to i32
  %2197 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %2196, i32 0) #11
  %2198 = extractvalue { i64, i32 } %2197, 0
  %2199 = extractvalue { i64, i32 } %2197, 1
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %2194, i8 zeroext 59, i32 %2193, i64 %2198, i32 %2199, i32 4) #11
  br label %23402

2200:                                             ; preds = %2
  %2201 = and i32 %275, 15872
  %2202 = icmp eq i32 %2201, 0
  br i1 %2202, label %2245, label %2203

2203:                                             ; preds = %2200
  %2204 = bitcast i64* %169 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2204) #11
  store i64 0, i64* %169, align 8
  %2205 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %169)
  %2206 = extractvalue { i64, i32 } %2205, 0
  %2207 = extractvalue { i64, i32 } %2205, 1
  %2208 = load i64, i64* %169, align 8
  %2209 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %2210 = load i32, i32* %2209, align 4
  %2211 = and i32 %2210, 255
  %2212 = zext i32 %2211 to i64
  %2213 = add i64 %2208, %2212
  %2214 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2213, i32 0
  %2215 = load i64, i64* %2214, align 8
  %2216 = and i64 %2215, 7
  %2217 = icmp eq i64 %2216, 3
  %2218 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %2219 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %2220 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2219, i64 0, i32 1
  %2221 = load i32, i32* %2220, align 4
  %2222 = and i32 %2221, 255
  %2223 = zext i32 %2222 to i64
  %2224 = add i64 %2208, %2223
  br i1 %2217, label %2225, label %2239

2225:                                             ; preds = %2203
  %2226 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2219, i64 0, i32 5, i64 %2224
  %2227 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %2228 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %2227, %"class.v8::internal::compiler::InstructionOperand"* %2226) #11
  %2229 = extractvalue { i64, i64 } %2228, 0
  %2230 = trunc i64 %2229 to i32
  %2231 = extractvalue { i64, i64 } %2228, 1
  %2232 = icmp eq i32 %2230, 3
  %2233 = and i64 %2229, 1095216660480
  %2234 = icmp eq i64 %2233, 25769803776
  %2235 = select i1 %2234, i64 25769803776, i64 0
  %2236 = and i64 %2231, 4294967295
  %2237 = or i64 %2235, %2236
  %2238 = select i1 %2232, i64 0, i64 %2237
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %2218, i8 zeroext 7, i64 %2206, i32 %2207, i64 %2238, i32 8) #11
  br label %2244

2239:                                             ; preds = %2203
  %2240 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2219, i64 0, i32 5, i64 %2224, i32 0
  %2241 = load i64, i64* %2240, align 8
  %2242 = ashr i64 %2241, 35
  %2243 = trunc i64 %2242 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %2218, i8 zeroext 57, i32 %2243, i64 %2206, i32 %2207, i32 8) #11
  br label %2244

2244:                                             ; preds = %2239, %2225
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2204) #11
  br label %23402

2245:                                             ; preds = %2200
  %2246 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %2247 = load i32, i32* %2246, align 4
  %2248 = and i32 %2247, 255
  %2249 = zext i32 %2248 to i64
  %2250 = add nuw nsw i64 %2249, 1
  %2251 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2250, i32 0
  %2252 = load i64, i64* %2251, align 8
  %2253 = and i64 %2252, 7
  %2254 = icmp eq i64 %2253, 3
  br i1 %2254, label %2255, label %2312

2255:                                             ; preds = %2245
  %2256 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2249, i32 0
  %2257 = load i64, i64* %2256, align 8
  %2258 = and i64 %2257, 7
  %2259 = icmp ugt i64 %2258, 4
  %2260 = and i64 %2257, 24
  %2261 = icmp eq i64 %2260, 0
  %2262 = and i1 %2259, %2261
  br i1 %2262, label %2265, label %2263

2263:                                             ; preds = %2255
  %2264 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %2286

2265:                                             ; preds = %2255
  %2266 = lshr i64 %2257, 5
  %2267 = trunc i64 %2266 to i8
  %2268 = icmp ult i8 %2267, 12
  %2269 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %2268, label %2270, label %2286

2270:                                             ; preds = %2265
  %2271 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %2272 = ashr i64 %2257, 35
  %2273 = trunc i64 %2272 to i32
  %2274 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2250
  %2275 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %2271, %"class.v8::internal::compiler::InstructionOperand"* %2274) #11
  %2276 = extractvalue { i64, i64 } %2275, 0
  %2277 = trunc i64 %2276 to i32
  %2278 = extractvalue { i64, i64 } %2275, 1
  %2279 = icmp eq i32 %2277, 3
  %2280 = and i64 %2276, 1095216660480
  %2281 = icmp eq i64 %2280, 25769803776
  %2282 = select i1 %2281, i64 25769803776, i64 0
  %2283 = and i64 %2278, 4294967295
  %2284 = or i64 %2282, %2283
  %2285 = select i1 %2279, i64 0, i64 %2284
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %2269, i8 zeroext 7, i32 %2273, i64 %2285, i32 8) #11
  br label %23402

2286:                                             ; preds = %2263, %2265
  %2287 = phi %"class.v8::internal::Assembler"* [ %2264, %2263 ], [ %2269, %2265 ]
  %2288 = ashr i64 %2257, 35
  %2289 = trunc i64 %2288 to i32
  %2290 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %2289, i32 0) #11
  %2291 = extractvalue { i64, i32 } %2290, 0
  %2292 = extractvalue { i64, i32 } %2290, 1
  %2293 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %2294 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2293, i64 0, i32 1
  %2295 = load i32, i32* %2294, align 4
  %2296 = and i32 %2295, 255
  %2297 = add nuw nsw i32 %2296, 1
  %2298 = zext i32 %2297 to i64
  %2299 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2293, i64 0, i32 5, i64 %2298
  %2300 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %2301 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %2300, %"class.v8::internal::compiler::InstructionOperand"* %2299) #11
  %2302 = extractvalue { i64, i64 } %2301, 0
  %2303 = trunc i64 %2302 to i32
  %2304 = extractvalue { i64, i64 } %2301, 1
  %2305 = icmp eq i32 %2303, 3
  %2306 = and i64 %2302, 1095216660480
  %2307 = icmp eq i64 %2306, 25769803776
  %2308 = select i1 %2307, i64 25769803776, i64 0
  %2309 = and i64 %2304, 4294967295
  %2310 = or i64 %2308, %2309
  %2311 = select i1 %2305, i64 0, i64 %2310
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %2287, i8 zeroext 7, i64 %2291, i32 %2292, i64 %2311, i32 8) #11
  br label %23402

2312:                                             ; preds = %2245
  %2313 = icmp ugt i64 %2253, 4
  %2314 = and i64 %2252, 24
  %2315 = icmp eq i64 %2314, 0
  %2316 = and i1 %2313, %2315
  br i1 %2316, label %2323, label %2317

2317:                                             ; preds = %2312
  %2318 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %2319 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2249, i32 0
  %2320 = load i64, i64* %2319, align 8
  %2321 = ashr i64 %2320, 35
  %2322 = trunc i64 %2321 to i32
  br label %2335

2323:                                             ; preds = %2312
  %2324 = lshr i64 %2252, 5
  %2325 = trunc i64 %2324 to i8
  %2326 = icmp ult i8 %2325, 12
  %2327 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %2328 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2249, i32 0
  %2329 = load i64, i64* %2328, align 8
  %2330 = ashr i64 %2329, 35
  %2331 = trunc i64 %2330 to i32
  br i1 %2326, label %2332, label %2335

2332:                                             ; preds = %2323
  %2333 = ashr i64 %2252, 35
  %2334 = trunc i64 %2333 to i32
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %2327, i8 zeroext 59, i32 %2331, i32 %2334, i32 8) #11
  br label %23402

2335:                                             ; preds = %2317, %2323
  %2336 = phi i32 [ %2322, %2317 ], [ %2331, %2323 ]
  %2337 = phi %"class.v8::internal::Assembler"* [ %2318, %2317 ], [ %2327, %2323 ]
  %2338 = ashr i64 %2252, 35
  %2339 = trunc i64 %2338 to i32
  %2340 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %2339, i32 0) #11
  %2341 = extractvalue { i64, i32 } %2340, 0
  %2342 = extractvalue { i64, i32 } %2340, 1
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %2337, i8 zeroext 59, i32 %2336, i64 %2341, i32 %2342, i32 8) #11
  br label %23402

2343:                                             ; preds = %2
  %2344 = and i32 %275, 15872
  %2345 = icmp eq i32 %2344, 0
  br i1 %2345, label %2388, label %2346

2346:                                             ; preds = %2343
  %2347 = bitcast i64* %170 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2347) #11
  store i64 0, i64* %170, align 8
  %2348 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %170)
  %2349 = extractvalue { i64, i32 } %2348, 0
  %2350 = extractvalue { i64, i32 } %2348, 1
  %2351 = load i64, i64* %170, align 8
  %2352 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %2353 = load i32, i32* %2352, align 4
  %2354 = and i32 %2353, 255
  %2355 = zext i32 %2354 to i64
  %2356 = add i64 %2351, %2355
  %2357 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2356, i32 0
  %2358 = load i64, i64* %2357, align 8
  %2359 = and i64 %2358, 7
  %2360 = icmp eq i64 %2359, 3
  %2361 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %2362 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %2363 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2362, i64 0, i32 1
  %2364 = load i32, i32* %2363, align 4
  %2365 = and i32 %2364, 255
  %2366 = zext i32 %2365 to i64
  %2367 = add i64 %2351, %2366
  br i1 %2360, label %2368, label %2382

2368:                                             ; preds = %2346
  %2369 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2362, i64 0, i32 5, i64 %2367
  %2370 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %2371 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %2370, %"class.v8::internal::compiler::InstructionOperand"* %2369) #11
  %2372 = extractvalue { i64, i64 } %2371, 0
  %2373 = trunc i64 %2372 to i32
  %2374 = extractvalue { i64, i64 } %2371, 1
  %2375 = icmp eq i32 %2373, 3
  %2376 = and i64 %2372, 1095216660480
  %2377 = icmp eq i64 %2376, 25769803776
  %2378 = select i1 %2377, i64 25769803776, i64 0
  %2379 = and i64 %2374, 4294967295
  %2380 = or i64 %2378, %2379
  %2381 = select i1 %2375, i64 0, i64 %2380
  call void @_ZN2v88internal9Assembler5testbENS0_7OperandENS0_9ImmediateE(%"class.v8::internal::Assembler"* %2361, i64 %2349, i32 %2350, i64 %2381) #11
  br label %2387

2382:                                             ; preds = %2346
  %2383 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2362, i64 0, i32 5, i64 %2367, i32 0
  %2384 = load i64, i64* %2383, align 8
  %2385 = ashr i64 %2384, 35
  %2386 = trunc i64 %2385 to i32
  call void @_ZN2v88internal9Assembler5testbENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %2361, i64 %2349, i32 %2350, i32 %2386) #11
  br label %2387

2387:                                             ; preds = %2382, %2368
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2347) #11
  br label %23402

2388:                                             ; preds = %2343
  %2389 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %2390 = load i32, i32* %2389, align 4
  %2391 = and i32 %2390, 255
  %2392 = zext i32 %2391 to i64
  %2393 = add nuw nsw i64 %2392, 1
  %2394 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2393, i32 0
  %2395 = load i64, i64* %2394, align 8
  %2396 = and i64 %2395, 7
  %2397 = icmp eq i64 %2396, 3
  br i1 %2397, label %2398, label %2455

2398:                                             ; preds = %2388
  %2399 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2392, i32 0
  %2400 = load i64, i64* %2399, align 8
  %2401 = and i64 %2400, 7
  %2402 = icmp ugt i64 %2401, 4
  %2403 = and i64 %2400, 24
  %2404 = icmp eq i64 %2403, 0
  %2405 = and i1 %2402, %2404
  br i1 %2405, label %2408, label %2406

2406:                                             ; preds = %2398
  %2407 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %2429

2408:                                             ; preds = %2398
  %2409 = lshr i64 %2400, 5
  %2410 = trunc i64 %2409 to i8
  %2411 = icmp ult i8 %2410, 12
  %2412 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %2411, label %2413, label %2429

2413:                                             ; preds = %2408
  %2414 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %2415 = ashr i64 %2400, 35
  %2416 = trunc i64 %2415 to i32
  %2417 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2393
  %2418 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %2414, %"class.v8::internal::compiler::InstructionOperand"* %2417) #11
  %2419 = extractvalue { i64, i64 } %2418, 0
  %2420 = trunc i64 %2419 to i32
  %2421 = extractvalue { i64, i64 } %2418, 1
  %2422 = icmp eq i32 %2420, 3
  %2423 = and i64 %2419, 1095216660480
  %2424 = icmp eq i64 %2423, 25769803776
  %2425 = select i1 %2424, i64 25769803776, i64 0
  %2426 = and i64 %2421, 4294967295
  %2427 = or i64 %2425, %2426
  %2428 = select i1 %2422, i64 0, i64 %2427
  call void @_ZN2v88internal9Assembler5testbENS0_8RegisterENS0_9ImmediateE(%"class.v8::internal::Assembler"* %2412, i32 %2416, i64 %2428) #11
  br label %23402

2429:                                             ; preds = %2406, %2408
  %2430 = phi %"class.v8::internal::Assembler"* [ %2407, %2406 ], [ %2412, %2408 ]
  %2431 = ashr i64 %2400, 35
  %2432 = trunc i64 %2431 to i32
  %2433 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %2432, i32 0) #11
  %2434 = extractvalue { i64, i32 } %2433, 0
  %2435 = extractvalue { i64, i32 } %2433, 1
  %2436 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %2437 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2436, i64 0, i32 1
  %2438 = load i32, i32* %2437, align 4
  %2439 = and i32 %2438, 255
  %2440 = add nuw nsw i32 %2439, 1
  %2441 = zext i32 %2440 to i64
  %2442 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2436, i64 0, i32 5, i64 %2441
  %2443 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %2444 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %2443, %"class.v8::internal::compiler::InstructionOperand"* %2442) #11
  %2445 = extractvalue { i64, i64 } %2444, 0
  %2446 = trunc i64 %2445 to i32
  %2447 = extractvalue { i64, i64 } %2444, 1
  %2448 = icmp eq i32 %2446, 3
  %2449 = and i64 %2445, 1095216660480
  %2450 = icmp eq i64 %2449, 25769803776
  %2451 = select i1 %2450, i64 25769803776, i64 0
  %2452 = and i64 %2447, 4294967295
  %2453 = or i64 %2451, %2452
  %2454 = select i1 %2448, i64 0, i64 %2453
  call void @_ZN2v88internal9Assembler5testbENS0_7OperandENS0_9ImmediateE(%"class.v8::internal::Assembler"* %2430, i64 %2434, i32 %2435, i64 %2454) #11
  br label %23402

2455:                                             ; preds = %2388
  %2456 = icmp ugt i64 %2396, 4
  %2457 = and i64 %2395, 24
  %2458 = icmp eq i64 %2457, 0
  %2459 = and i1 %2456, %2458
  br i1 %2459, label %2466, label %2460

2460:                                             ; preds = %2455
  %2461 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %2462 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2392, i32 0
  %2463 = load i64, i64* %2462, align 8
  %2464 = ashr i64 %2463, 35
  %2465 = trunc i64 %2464 to i32
  br label %2478

2466:                                             ; preds = %2455
  %2467 = lshr i64 %2395, 5
  %2468 = trunc i64 %2467 to i8
  %2469 = icmp ult i8 %2468, 12
  %2470 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %2471 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2392, i32 0
  %2472 = load i64, i64* %2471, align 8
  %2473 = ashr i64 %2472, 35
  %2474 = trunc i64 %2473 to i32
  br i1 %2469, label %2475, label %2478

2475:                                             ; preds = %2466
  %2476 = ashr i64 %2395, 35
  %2477 = trunc i64 %2476 to i32
  tail call void @_ZN2v88internal9Assembler5testbENS0_8RegisterES2_(%"class.v8::internal::Assembler"* %2470, i32 %2474, i32 %2477) #11
  br label %23402

2478:                                             ; preds = %2460, %2466
  %2479 = phi i32 [ %2465, %2460 ], [ %2474, %2466 ]
  %2480 = phi %"class.v8::internal::Assembler"* [ %2461, %2460 ], [ %2470, %2466 ]
  %2481 = ashr i64 %2395, 35
  %2482 = trunc i64 %2481 to i32
  %2483 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %2482, i32 0) #11
  %2484 = extractvalue { i64, i32 } %2483, 0
  %2485 = extractvalue { i64, i32 } %2483, 1
  call void @_ZN2v88internal9Assembler5testbENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %2480, i64 %2484, i32 %2485, i32 %2479) #11
  br label %23402

2486:                                             ; preds = %2
  %2487 = and i32 %275, 15872
  %2488 = icmp eq i32 %2487, 0
  br i1 %2488, label %2531, label %2489

2489:                                             ; preds = %2486
  %2490 = bitcast i64* %171 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2490) #11
  store i64 0, i64* %171, align 8
  %2491 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %171)
  %2492 = extractvalue { i64, i32 } %2491, 0
  %2493 = extractvalue { i64, i32 } %2491, 1
  %2494 = load i64, i64* %171, align 8
  %2495 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %2496 = load i32, i32* %2495, align 4
  %2497 = and i32 %2496, 255
  %2498 = zext i32 %2497 to i64
  %2499 = add i64 %2494, %2498
  %2500 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2499, i32 0
  %2501 = load i64, i64* %2500, align 8
  %2502 = and i64 %2501, 7
  %2503 = icmp eq i64 %2502, 3
  %2504 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %2505 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %2506 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2505, i64 0, i32 1
  %2507 = load i32, i32* %2506, align 4
  %2508 = and i32 %2507, 255
  %2509 = zext i32 %2508 to i64
  %2510 = add i64 %2494, %2509
  br i1 %2503, label %2511, label %2525

2511:                                             ; preds = %2489
  %2512 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2505, i64 0, i32 5, i64 %2510
  %2513 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %2514 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %2513, %"class.v8::internal::compiler::InstructionOperand"* %2512) #11
  %2515 = extractvalue { i64, i64 } %2514, 0
  %2516 = trunc i64 %2515 to i32
  %2517 = extractvalue { i64, i64 } %2514, 1
  %2518 = icmp eq i32 %2516, 3
  %2519 = and i64 %2515, 1095216660480
  %2520 = icmp eq i64 %2519, 25769803776
  %2521 = select i1 %2520, i64 25769803776, i64 0
  %2522 = and i64 %2517, 4294967295
  %2523 = or i64 %2521, %2522
  %2524 = select i1 %2518, i64 0, i64 %2523
  call void @_ZN2v88internal9Assembler5testwENS0_7OperandENS0_9ImmediateE(%"class.v8::internal::Assembler"* %2504, i64 %2492, i32 %2493, i64 %2524) #11
  br label %2530

2525:                                             ; preds = %2489
  %2526 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2505, i64 0, i32 5, i64 %2510, i32 0
  %2527 = load i64, i64* %2526, align 8
  %2528 = ashr i64 %2527, 35
  %2529 = trunc i64 %2528 to i32
  call void @_ZN2v88internal9Assembler5testwENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %2504, i64 %2492, i32 %2493, i32 %2529) #11
  br label %2530

2530:                                             ; preds = %2525, %2511
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2490) #11
  br label %23402

2531:                                             ; preds = %2486
  %2532 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %2533 = load i32, i32* %2532, align 4
  %2534 = and i32 %2533, 255
  %2535 = zext i32 %2534 to i64
  %2536 = add nuw nsw i64 %2535, 1
  %2537 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2536, i32 0
  %2538 = load i64, i64* %2537, align 8
  %2539 = and i64 %2538, 7
  %2540 = icmp eq i64 %2539, 3
  br i1 %2540, label %2541, label %2598

2541:                                             ; preds = %2531
  %2542 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2535, i32 0
  %2543 = load i64, i64* %2542, align 8
  %2544 = and i64 %2543, 7
  %2545 = icmp ugt i64 %2544, 4
  %2546 = and i64 %2543, 24
  %2547 = icmp eq i64 %2546, 0
  %2548 = and i1 %2545, %2547
  br i1 %2548, label %2551, label %2549

2549:                                             ; preds = %2541
  %2550 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %2572

2551:                                             ; preds = %2541
  %2552 = lshr i64 %2543, 5
  %2553 = trunc i64 %2552 to i8
  %2554 = icmp ult i8 %2553, 12
  %2555 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %2554, label %2556, label %2572

2556:                                             ; preds = %2551
  %2557 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %2558 = ashr i64 %2543, 35
  %2559 = trunc i64 %2558 to i32
  %2560 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2536
  %2561 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %2557, %"class.v8::internal::compiler::InstructionOperand"* %2560) #11
  %2562 = extractvalue { i64, i64 } %2561, 0
  %2563 = trunc i64 %2562 to i32
  %2564 = extractvalue { i64, i64 } %2561, 1
  %2565 = icmp eq i32 %2563, 3
  %2566 = and i64 %2562, 1095216660480
  %2567 = icmp eq i64 %2566, 25769803776
  %2568 = select i1 %2567, i64 25769803776, i64 0
  %2569 = and i64 %2564, 4294967295
  %2570 = or i64 %2568, %2569
  %2571 = select i1 %2565, i64 0, i64 %2570
  call void @_ZN2v88internal9Assembler5testwENS0_8RegisterENS0_9ImmediateE(%"class.v8::internal::Assembler"* %2555, i32 %2559, i64 %2571) #11
  br label %23402

2572:                                             ; preds = %2549, %2551
  %2573 = phi %"class.v8::internal::Assembler"* [ %2550, %2549 ], [ %2555, %2551 ]
  %2574 = ashr i64 %2543, 35
  %2575 = trunc i64 %2574 to i32
  %2576 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %2575, i32 0) #11
  %2577 = extractvalue { i64, i32 } %2576, 0
  %2578 = extractvalue { i64, i32 } %2576, 1
  %2579 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %2580 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2579, i64 0, i32 1
  %2581 = load i32, i32* %2580, align 4
  %2582 = and i32 %2581, 255
  %2583 = add nuw nsw i32 %2582, 1
  %2584 = zext i32 %2583 to i64
  %2585 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2579, i64 0, i32 5, i64 %2584
  %2586 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %2587 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %2586, %"class.v8::internal::compiler::InstructionOperand"* %2585) #11
  %2588 = extractvalue { i64, i64 } %2587, 0
  %2589 = trunc i64 %2588 to i32
  %2590 = extractvalue { i64, i64 } %2587, 1
  %2591 = icmp eq i32 %2589, 3
  %2592 = and i64 %2588, 1095216660480
  %2593 = icmp eq i64 %2592, 25769803776
  %2594 = select i1 %2593, i64 25769803776, i64 0
  %2595 = and i64 %2590, 4294967295
  %2596 = or i64 %2594, %2595
  %2597 = select i1 %2591, i64 0, i64 %2596
  call void @_ZN2v88internal9Assembler5testwENS0_7OperandENS0_9ImmediateE(%"class.v8::internal::Assembler"* %2573, i64 %2577, i32 %2578, i64 %2597) #11
  br label %23402

2598:                                             ; preds = %2531
  %2599 = icmp ugt i64 %2539, 4
  %2600 = and i64 %2538, 24
  %2601 = icmp eq i64 %2600, 0
  %2602 = and i1 %2599, %2601
  br i1 %2602, label %2609, label %2603

2603:                                             ; preds = %2598
  %2604 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %2605 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2535, i32 0
  %2606 = load i64, i64* %2605, align 8
  %2607 = ashr i64 %2606, 35
  %2608 = trunc i64 %2607 to i32
  br label %2621

2609:                                             ; preds = %2598
  %2610 = lshr i64 %2538, 5
  %2611 = trunc i64 %2610 to i8
  %2612 = icmp ult i8 %2611, 12
  %2613 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %2614 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2535, i32 0
  %2615 = load i64, i64* %2614, align 8
  %2616 = ashr i64 %2615, 35
  %2617 = trunc i64 %2616 to i32
  br i1 %2612, label %2618, label %2621

2618:                                             ; preds = %2609
  %2619 = ashr i64 %2538, 35
  %2620 = trunc i64 %2619 to i32
  tail call void @_ZN2v88internal9Assembler5testwENS0_8RegisterES2_(%"class.v8::internal::Assembler"* %2613, i32 %2617, i32 %2620) #11
  br label %23402

2621:                                             ; preds = %2603, %2609
  %2622 = phi i32 [ %2608, %2603 ], [ %2617, %2609 ]
  %2623 = phi %"class.v8::internal::Assembler"* [ %2604, %2603 ], [ %2613, %2609 ]
  %2624 = ashr i64 %2538, 35
  %2625 = trunc i64 %2624 to i32
  %2626 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %2625, i32 0) #11
  %2627 = extractvalue { i64, i32 } %2626, 0
  %2628 = extractvalue { i64, i32 } %2626, 1
  call void @_ZN2v88internal9Assembler5testwENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %2623, i64 %2627, i32 %2628, i32 %2622) #11
  br label %23402

2629:                                             ; preds = %2
  %2630 = and i32 %275, 15872
  %2631 = icmp eq i32 %2630, 0
  br i1 %2631, label %2674, label %2632

2632:                                             ; preds = %2629
  %2633 = bitcast i64* %172 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2633) #11
  store i64 0, i64* %172, align 8
  %2634 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %172)
  %2635 = extractvalue { i64, i32 } %2634, 0
  %2636 = extractvalue { i64, i32 } %2634, 1
  %2637 = load i64, i64* %172, align 8
  %2638 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %2639 = load i32, i32* %2638, align 4
  %2640 = and i32 %2639, 255
  %2641 = zext i32 %2640 to i64
  %2642 = add i64 %2637, %2641
  %2643 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2642, i32 0
  %2644 = load i64, i64* %2643, align 8
  %2645 = and i64 %2644, 7
  %2646 = icmp eq i64 %2645, 3
  %2647 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %2648 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %2649 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2648, i64 0, i32 1
  %2650 = load i32, i32* %2649, align 4
  %2651 = and i32 %2650, 255
  %2652 = zext i32 %2651 to i64
  %2653 = add i64 %2637, %2652
  br i1 %2646, label %2654, label %2668

2654:                                             ; preds = %2632
  %2655 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2648, i64 0, i32 5, i64 %2653
  %2656 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %2657 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %2656, %"class.v8::internal::compiler::InstructionOperand"* %2655) #11
  %2658 = extractvalue { i64, i64 } %2657, 0
  %2659 = trunc i64 %2658 to i32
  %2660 = extractvalue { i64, i64 } %2657, 1
  %2661 = icmp eq i32 %2659, 3
  %2662 = and i64 %2658, 1095216660480
  %2663 = icmp eq i64 %2662, 25769803776
  %2664 = select i1 %2663, i64 25769803776, i64 0
  %2665 = and i64 %2660, 4294967295
  %2666 = or i64 %2664, %2665
  %2667 = select i1 %2661, i64 0, i64 %2666
  call void @_ZN2v88internal9Assembler9emit_testENS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %2647, i64 %2635, i32 %2636, i64 %2667, i32 4) #11
  br label %2673

2668:                                             ; preds = %2632
  %2669 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2648, i64 0, i32 5, i64 %2653, i32 0
  %2670 = load i64, i64* %2669, align 8
  %2671 = ashr i64 %2670, 35
  %2672 = trunc i64 %2671 to i32
  call void @_ZN2v88internal9Assembler9emit_testENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %2647, i64 %2635, i32 %2636, i32 %2672, i32 4) #11
  br label %2673

2673:                                             ; preds = %2668, %2654
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2633) #11
  br label %23402

2674:                                             ; preds = %2629
  %2675 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %2676 = load i32, i32* %2675, align 4
  %2677 = and i32 %2676, 255
  %2678 = zext i32 %2677 to i64
  %2679 = add nuw nsw i64 %2678, 1
  %2680 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2679, i32 0
  %2681 = load i64, i64* %2680, align 8
  %2682 = and i64 %2681, 7
  %2683 = icmp eq i64 %2682, 3
  br i1 %2683, label %2684, label %2741

2684:                                             ; preds = %2674
  %2685 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2678, i32 0
  %2686 = load i64, i64* %2685, align 8
  %2687 = and i64 %2686, 7
  %2688 = icmp ugt i64 %2687, 4
  %2689 = and i64 %2686, 24
  %2690 = icmp eq i64 %2689, 0
  %2691 = and i1 %2688, %2690
  br i1 %2691, label %2694, label %2692

2692:                                             ; preds = %2684
  %2693 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %2715

2694:                                             ; preds = %2684
  %2695 = lshr i64 %2686, 5
  %2696 = trunc i64 %2695 to i8
  %2697 = icmp ult i8 %2696, 12
  %2698 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %2697, label %2699, label %2715

2699:                                             ; preds = %2694
  %2700 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %2701 = ashr i64 %2686, 35
  %2702 = trunc i64 %2701 to i32
  %2703 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2679
  %2704 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %2700, %"class.v8::internal::compiler::InstructionOperand"* %2703) #11
  %2705 = extractvalue { i64, i64 } %2704, 0
  %2706 = trunc i64 %2705 to i32
  %2707 = extractvalue { i64, i64 } %2704, 1
  %2708 = icmp eq i32 %2706, 3
  %2709 = and i64 %2705, 1095216660480
  %2710 = icmp eq i64 %2709, 25769803776
  %2711 = select i1 %2710, i64 25769803776, i64 0
  %2712 = and i64 %2707, 4294967295
  %2713 = or i64 %2711, %2712
  %2714 = select i1 %2708, i64 0, i64 %2713
  call void @_ZN2v88internal9Assembler9emit_testENS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %2698, i32 %2702, i64 %2714, i32 4) #11
  br label %23402

2715:                                             ; preds = %2692, %2694
  %2716 = phi %"class.v8::internal::Assembler"* [ %2693, %2692 ], [ %2698, %2694 ]
  %2717 = ashr i64 %2686, 35
  %2718 = trunc i64 %2717 to i32
  %2719 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %2718, i32 0) #11
  %2720 = extractvalue { i64, i32 } %2719, 0
  %2721 = extractvalue { i64, i32 } %2719, 1
  %2722 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %2723 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2722, i64 0, i32 1
  %2724 = load i32, i32* %2723, align 4
  %2725 = and i32 %2724, 255
  %2726 = add nuw nsw i32 %2725, 1
  %2727 = zext i32 %2726 to i64
  %2728 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2722, i64 0, i32 5, i64 %2727
  %2729 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %2730 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %2729, %"class.v8::internal::compiler::InstructionOperand"* %2728) #11
  %2731 = extractvalue { i64, i64 } %2730, 0
  %2732 = trunc i64 %2731 to i32
  %2733 = extractvalue { i64, i64 } %2730, 1
  %2734 = icmp eq i32 %2732, 3
  %2735 = and i64 %2731, 1095216660480
  %2736 = icmp eq i64 %2735, 25769803776
  %2737 = select i1 %2736, i64 25769803776, i64 0
  %2738 = and i64 %2733, 4294967295
  %2739 = or i64 %2737, %2738
  %2740 = select i1 %2734, i64 0, i64 %2739
  call void @_ZN2v88internal9Assembler9emit_testENS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %2716, i64 %2720, i32 %2721, i64 %2740, i32 4) #11
  br label %23402

2741:                                             ; preds = %2674
  %2742 = icmp ugt i64 %2682, 4
  %2743 = and i64 %2681, 24
  %2744 = icmp eq i64 %2743, 0
  %2745 = and i1 %2742, %2744
  br i1 %2745, label %2752, label %2746

2746:                                             ; preds = %2741
  %2747 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %2748 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2678, i32 0
  %2749 = load i64, i64* %2748, align 8
  %2750 = ashr i64 %2749, 35
  %2751 = trunc i64 %2750 to i32
  br label %2764

2752:                                             ; preds = %2741
  %2753 = lshr i64 %2681, 5
  %2754 = trunc i64 %2753 to i8
  %2755 = icmp ult i8 %2754, 12
  %2756 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %2757 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2678, i32 0
  %2758 = load i64, i64* %2757, align 8
  %2759 = ashr i64 %2758, 35
  %2760 = trunc i64 %2759 to i32
  br i1 %2755, label %2761, label %2764

2761:                                             ; preds = %2752
  %2762 = ashr i64 %2681, 35
  %2763 = trunc i64 %2762 to i32
  tail call void @_ZN2v88internal9Assembler9emit_testENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %2756, i32 %2760, i32 %2763, i32 4) #11
  br label %23402

2764:                                             ; preds = %2746, %2752
  %2765 = phi i32 [ %2751, %2746 ], [ %2760, %2752 ]
  %2766 = phi %"class.v8::internal::Assembler"* [ %2747, %2746 ], [ %2756, %2752 ]
  %2767 = ashr i64 %2681, 35
  %2768 = trunc i64 %2767 to i32
  %2769 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %2768, i32 0) #11
  %2770 = extractvalue { i64, i32 } %2769, 0
  %2771 = extractvalue { i64, i32 } %2769, 1
  call void @_ZN2v88internal9Assembler9emit_testENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %2766, i64 %2770, i32 %2771, i32 %2765, i32 4) #11
  br label %23402

2772:                                             ; preds = %2
  %2773 = and i32 %275, 15872
  %2774 = icmp eq i32 %2773, 0
  br i1 %2774, label %2817, label %2775

2775:                                             ; preds = %2772
  %2776 = bitcast i64* %173 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2776) #11
  store i64 0, i64* %173, align 8
  %2777 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %173)
  %2778 = extractvalue { i64, i32 } %2777, 0
  %2779 = extractvalue { i64, i32 } %2777, 1
  %2780 = load i64, i64* %173, align 8
  %2781 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %2782 = load i32, i32* %2781, align 4
  %2783 = and i32 %2782, 255
  %2784 = zext i32 %2783 to i64
  %2785 = add i64 %2780, %2784
  %2786 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2785, i32 0
  %2787 = load i64, i64* %2786, align 8
  %2788 = and i64 %2787, 7
  %2789 = icmp eq i64 %2788, 3
  %2790 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %2791 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %2792 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2791, i64 0, i32 1
  %2793 = load i32, i32* %2792, align 4
  %2794 = and i32 %2793, 255
  %2795 = zext i32 %2794 to i64
  %2796 = add i64 %2780, %2795
  br i1 %2789, label %2797, label %2811

2797:                                             ; preds = %2775
  %2798 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2791, i64 0, i32 5, i64 %2796
  %2799 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %2800 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %2799, %"class.v8::internal::compiler::InstructionOperand"* %2798) #11
  %2801 = extractvalue { i64, i64 } %2800, 0
  %2802 = trunc i64 %2801 to i32
  %2803 = extractvalue { i64, i64 } %2800, 1
  %2804 = icmp eq i32 %2802, 3
  %2805 = and i64 %2801, 1095216660480
  %2806 = icmp eq i64 %2805, 25769803776
  %2807 = select i1 %2806, i64 25769803776, i64 0
  %2808 = and i64 %2803, 4294967295
  %2809 = or i64 %2807, %2808
  %2810 = select i1 %2804, i64 0, i64 %2809
  call void @_ZN2v88internal9Assembler9emit_testENS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %2790, i64 %2778, i32 %2779, i64 %2810, i32 8) #11
  br label %2816

2811:                                             ; preds = %2775
  %2812 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2791, i64 0, i32 5, i64 %2796, i32 0
  %2813 = load i64, i64* %2812, align 8
  %2814 = ashr i64 %2813, 35
  %2815 = trunc i64 %2814 to i32
  call void @_ZN2v88internal9Assembler9emit_testENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %2790, i64 %2778, i32 %2779, i32 %2815, i32 8) #11
  br label %2816

2816:                                             ; preds = %2811, %2797
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2776) #11
  br label %23402

2817:                                             ; preds = %2772
  %2818 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %2819 = load i32, i32* %2818, align 4
  %2820 = and i32 %2819, 255
  %2821 = zext i32 %2820 to i64
  %2822 = add nuw nsw i64 %2821, 1
  %2823 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2822, i32 0
  %2824 = load i64, i64* %2823, align 8
  %2825 = and i64 %2824, 7
  %2826 = icmp eq i64 %2825, 3
  br i1 %2826, label %2827, label %2884

2827:                                             ; preds = %2817
  %2828 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2821, i32 0
  %2829 = load i64, i64* %2828, align 8
  %2830 = and i64 %2829, 7
  %2831 = icmp ugt i64 %2830, 4
  %2832 = and i64 %2829, 24
  %2833 = icmp eq i64 %2832, 0
  %2834 = and i1 %2831, %2833
  br i1 %2834, label %2837, label %2835

2835:                                             ; preds = %2827
  %2836 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %2858

2837:                                             ; preds = %2827
  %2838 = lshr i64 %2829, 5
  %2839 = trunc i64 %2838 to i8
  %2840 = icmp ult i8 %2839, 12
  %2841 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %2840, label %2842, label %2858

2842:                                             ; preds = %2837
  %2843 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %2844 = ashr i64 %2829, 35
  %2845 = trunc i64 %2844 to i32
  %2846 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2822
  %2847 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %2843, %"class.v8::internal::compiler::InstructionOperand"* %2846) #11
  %2848 = extractvalue { i64, i64 } %2847, 0
  %2849 = trunc i64 %2848 to i32
  %2850 = extractvalue { i64, i64 } %2847, 1
  %2851 = icmp eq i32 %2849, 3
  %2852 = and i64 %2848, 1095216660480
  %2853 = icmp eq i64 %2852, 25769803776
  %2854 = select i1 %2853, i64 25769803776, i64 0
  %2855 = and i64 %2850, 4294967295
  %2856 = or i64 %2854, %2855
  %2857 = select i1 %2851, i64 0, i64 %2856
  call void @_ZN2v88internal9Assembler9emit_testENS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %2841, i32 %2845, i64 %2857, i32 8) #11
  br label %23402

2858:                                             ; preds = %2835, %2837
  %2859 = phi %"class.v8::internal::Assembler"* [ %2836, %2835 ], [ %2841, %2837 ]
  %2860 = ashr i64 %2829, 35
  %2861 = trunc i64 %2860 to i32
  %2862 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %2861, i32 0) #11
  %2863 = extractvalue { i64, i32 } %2862, 0
  %2864 = extractvalue { i64, i32 } %2862, 1
  %2865 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %2866 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2865, i64 0, i32 1
  %2867 = load i32, i32* %2866, align 4
  %2868 = and i32 %2867, 255
  %2869 = add nuw nsw i32 %2868, 1
  %2870 = zext i32 %2869 to i64
  %2871 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2865, i64 0, i32 5, i64 %2870
  %2872 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %2873 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %2872, %"class.v8::internal::compiler::InstructionOperand"* %2871) #11
  %2874 = extractvalue { i64, i64 } %2873, 0
  %2875 = trunc i64 %2874 to i32
  %2876 = extractvalue { i64, i64 } %2873, 1
  %2877 = icmp eq i32 %2875, 3
  %2878 = and i64 %2874, 1095216660480
  %2879 = icmp eq i64 %2878, 25769803776
  %2880 = select i1 %2879, i64 25769803776, i64 0
  %2881 = and i64 %2876, 4294967295
  %2882 = or i64 %2880, %2881
  %2883 = select i1 %2877, i64 0, i64 %2882
  call void @_ZN2v88internal9Assembler9emit_testENS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %2859, i64 %2863, i32 %2864, i64 %2883, i32 8) #11
  br label %23402

2884:                                             ; preds = %2817
  %2885 = icmp ugt i64 %2825, 4
  %2886 = and i64 %2824, 24
  %2887 = icmp eq i64 %2886, 0
  %2888 = and i1 %2885, %2887
  br i1 %2888, label %2895, label %2889

2889:                                             ; preds = %2884
  %2890 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %2891 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2821, i32 0
  %2892 = load i64, i64* %2891, align 8
  %2893 = ashr i64 %2892, 35
  %2894 = trunc i64 %2893 to i32
  br label %2907

2895:                                             ; preds = %2884
  %2896 = lshr i64 %2824, 5
  %2897 = trunc i64 %2896 to i8
  %2898 = icmp ult i8 %2897, 12
  %2899 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %2900 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2821, i32 0
  %2901 = load i64, i64* %2900, align 8
  %2902 = ashr i64 %2901, 35
  %2903 = trunc i64 %2902 to i32
  br i1 %2898, label %2904, label %2907

2904:                                             ; preds = %2895
  %2905 = ashr i64 %2824, 35
  %2906 = trunc i64 %2905 to i32
  tail call void @_ZN2v88internal9Assembler9emit_testENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %2899, i32 %2903, i32 %2906, i32 8) #11
  br label %23402

2907:                                             ; preds = %2889, %2895
  %2908 = phi i32 [ %2894, %2889 ], [ %2903, %2895 ]
  %2909 = phi %"class.v8::internal::Assembler"* [ %2890, %2889 ], [ %2899, %2895 ]
  %2910 = ashr i64 %2824, 35
  %2911 = trunc i64 %2910 to i32
  %2912 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %2911, i32 0) #11
  %2913 = extractvalue { i64, i32 } %2912, 0
  %2914 = extractvalue { i64, i32 } %2912, 1
  call void @_ZN2v88internal9Assembler9emit_testENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %2909, i64 %2913, i32 %2914, i32 %2908, i32 8) #11
  br label %23402

2915:                                             ; preds = %2
  %2916 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %2917 = load i32, i32* %2916, align 4
  %2918 = and i32 %2917, 255
  %2919 = zext i32 %2918 to i64
  %2920 = add nuw nsw i64 %2919, 1
  %2921 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2920, i32 0
  %2922 = load i64, i64* %2921, align 8
  %2923 = and i64 %2922, 7
  %2924 = icmp eq i64 %2923, 3
  br i1 %2924, label %2925, label %2992

2925:                                             ; preds = %2915
  %2926 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2919, i32 0
  %2927 = load i64, i64* %2926, align 8
  %2928 = and i64 %2927, 7
  %2929 = icmp ugt i64 %2928, 4
  %2930 = and i64 %2927, 24
  %2931 = icmp eq i64 %2930, 0
  %2932 = and i1 %2929, %2931
  br i1 %2932, label %2940, label %2933

2933:                                             ; preds = %2925
  %2934 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %2935 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %2936 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %2937 = load i64, i64* %2936, align 8
  %2938 = ashr i64 %2937, 35
  %2939 = trunc i64 %2938 to i32
  br label %2965

2940:                                             ; preds = %2925
  %2941 = lshr i64 %2927, 5
  %2942 = trunc i64 %2941 to i8
  %2943 = icmp ult i8 %2942, 12
  %2944 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %2945 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %2946 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %2947 = load i64, i64* %2946, align 8
  %2948 = ashr i64 %2947, 35
  %2949 = trunc i64 %2948 to i32
  br i1 %2943, label %2950, label %2965

2950:                                             ; preds = %2940
  %2951 = ashr i64 %2927, 35
  %2952 = trunc i64 %2951 to i32
  %2953 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %2920
  %2954 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %2945, %"class.v8::internal::compiler::InstructionOperand"* %2953) #11
  %2955 = extractvalue { i64, i64 } %2954, 0
  %2956 = trunc i64 %2955 to i32
  %2957 = extractvalue { i64, i64 } %2954, 1
  %2958 = icmp eq i32 %2956, 3
  %2959 = and i64 %2955, 1095216660480
  %2960 = icmp eq i64 %2959, 25769803776
  %2961 = select i1 %2960, i64 25769803776, i64 0
  %2962 = and i64 %2957, 4294967295
  %2963 = or i64 %2961, %2962
  %2964 = select i1 %2958, i64 0, i64 %2963
  call void @_ZN2v88internal9Assembler9emit_imulENS0_8RegisterES2_NS0_9ImmediateEi(%"class.v8::internal::Assembler"* %2944, i32 %2949, i32 %2952, i64 %2964, i32 4) #11
  br label %23402

2965:                                             ; preds = %2933, %2940
  %2966 = phi i32 [ %2939, %2933 ], [ %2949, %2940 ]
  %2967 = phi %"class.v8::internal::compiler::InstructionOperandConverter"* [ %2935, %2933 ], [ %2945, %2940 ]
  %2968 = phi %"class.v8::internal::Assembler"* [ %2934, %2933 ], [ %2944, %2940 ]
  %2969 = ashr i64 %2927, 35
  %2970 = trunc i64 %2969 to i32
  %2971 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %2970, i32 0) #11
  %2972 = extractvalue { i64, i32 } %2971, 0
  %2973 = extractvalue { i64, i32 } %2971, 1
  %2974 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %2975 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2974, i64 0, i32 1
  %2976 = load i32, i32* %2975, align 4
  %2977 = and i32 %2976, 255
  %2978 = add nuw nsw i32 %2977, 1
  %2979 = zext i32 %2978 to i64
  %2980 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %2974, i64 0, i32 5, i64 %2979
  %2981 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %2967, %"class.v8::internal::compiler::InstructionOperand"* %2980) #11
  %2982 = extractvalue { i64, i64 } %2981, 0
  %2983 = trunc i64 %2982 to i32
  %2984 = extractvalue { i64, i64 } %2981, 1
  %2985 = icmp eq i32 %2983, 3
  %2986 = and i64 %2982, 1095216660480
  %2987 = icmp eq i64 %2986, 25769803776
  %2988 = select i1 %2987, i64 25769803776, i64 0
  %2989 = and i64 %2984, 4294967295
  %2990 = or i64 %2988, %2989
  %2991 = select i1 %2985, i64 0, i64 %2990
  call void @_ZN2v88internal9Assembler9emit_imulENS0_8RegisterENS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %2968, i32 %2966, i64 %2972, i32 %2973, i64 %2991, i32 4) #11
  br label %23402

2992:                                             ; preds = %2915
  %2993 = icmp ugt i64 %2923, 4
  %2994 = and i64 %2922, 24
  %2995 = icmp eq i64 %2994, 0
  %2996 = and i1 %2993, %2995
  br i1 %2996, label %3003, label %2997

2997:                                             ; preds = %2992
  %2998 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %2999 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %3000 = load i64, i64* %2999, align 8
  %3001 = ashr i64 %3000, 35
  %3002 = trunc i64 %3001 to i32
  br label %3015

3003:                                             ; preds = %2992
  %3004 = lshr i64 %2922, 5
  %3005 = trunc i64 %3004 to i8
  %3006 = icmp ult i8 %3005, 12
  %3007 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %3008 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %3009 = load i64, i64* %3008, align 8
  %3010 = ashr i64 %3009, 35
  %3011 = trunc i64 %3010 to i32
  br i1 %3006, label %3012, label %3015

3012:                                             ; preds = %3003
  %3013 = ashr i64 %2922, 35
  %3014 = trunc i64 %3013 to i32
  tail call void @_ZN2v88internal9Assembler9emit_imulENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %3007, i32 %3011, i32 %3014, i32 4) #11
  br label %23402

3015:                                             ; preds = %2997, %3003
  %3016 = phi i32 [ %3002, %2997 ], [ %3011, %3003 ]
  %3017 = phi %"class.v8::internal::Assembler"* [ %2998, %2997 ], [ %3007, %3003 ]
  %3018 = ashr i64 %2922, 35
  %3019 = trunc i64 %3018 to i32
  %3020 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %3019, i32 0) #11
  %3021 = extractvalue { i64, i32 } %3020, 0
  %3022 = extractvalue { i64, i32 } %3020, 1
  call void @_ZN2v88internal9Assembler9emit_imulENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %3017, i32 %3016, i64 %3021, i32 %3022, i32 4) #11
  br label %23402

3023:                                             ; preds = %2
  %3024 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %3025 = load i32, i32* %3024, align 4
  %3026 = and i32 %3025, 255
  %3027 = zext i32 %3026 to i64
  %3028 = add nuw nsw i64 %3027, 1
  %3029 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3028, i32 0
  %3030 = load i64, i64* %3029, align 8
  %3031 = and i64 %3030, 7
  %3032 = icmp eq i64 %3031, 3
  br i1 %3032, label %3033, label %3100

3033:                                             ; preds = %3023
  %3034 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3027, i32 0
  %3035 = load i64, i64* %3034, align 8
  %3036 = and i64 %3035, 7
  %3037 = icmp ugt i64 %3036, 4
  %3038 = and i64 %3035, 24
  %3039 = icmp eq i64 %3038, 0
  %3040 = and i1 %3037, %3039
  br i1 %3040, label %3048, label %3041

3041:                                             ; preds = %3033
  %3042 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %3043 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %3044 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %3045 = load i64, i64* %3044, align 8
  %3046 = ashr i64 %3045, 35
  %3047 = trunc i64 %3046 to i32
  br label %3073

3048:                                             ; preds = %3033
  %3049 = lshr i64 %3035, 5
  %3050 = trunc i64 %3049 to i8
  %3051 = icmp ult i8 %3050, 12
  %3052 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %3053 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %3054 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %3055 = load i64, i64* %3054, align 8
  %3056 = ashr i64 %3055, 35
  %3057 = trunc i64 %3056 to i32
  br i1 %3051, label %3058, label %3073

3058:                                             ; preds = %3048
  %3059 = ashr i64 %3035, 35
  %3060 = trunc i64 %3059 to i32
  %3061 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3028
  %3062 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %3053, %"class.v8::internal::compiler::InstructionOperand"* %3061) #11
  %3063 = extractvalue { i64, i64 } %3062, 0
  %3064 = trunc i64 %3063 to i32
  %3065 = extractvalue { i64, i64 } %3062, 1
  %3066 = icmp eq i32 %3064, 3
  %3067 = and i64 %3063, 1095216660480
  %3068 = icmp eq i64 %3067, 25769803776
  %3069 = select i1 %3068, i64 25769803776, i64 0
  %3070 = and i64 %3065, 4294967295
  %3071 = or i64 %3069, %3070
  %3072 = select i1 %3066, i64 0, i64 %3071
  call void @_ZN2v88internal9Assembler9emit_imulENS0_8RegisterES2_NS0_9ImmediateEi(%"class.v8::internal::Assembler"* %3052, i32 %3057, i32 %3060, i64 %3072, i32 8) #11
  br label %23402

3073:                                             ; preds = %3041, %3048
  %3074 = phi i32 [ %3047, %3041 ], [ %3057, %3048 ]
  %3075 = phi %"class.v8::internal::compiler::InstructionOperandConverter"* [ %3043, %3041 ], [ %3053, %3048 ]
  %3076 = phi %"class.v8::internal::Assembler"* [ %3042, %3041 ], [ %3052, %3048 ]
  %3077 = ashr i64 %3035, 35
  %3078 = trunc i64 %3077 to i32
  %3079 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %3078, i32 0) #11
  %3080 = extractvalue { i64, i32 } %3079, 0
  %3081 = extractvalue { i64, i32 } %3079, 1
  %3082 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %3083 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %3082, i64 0, i32 1
  %3084 = load i32, i32* %3083, align 4
  %3085 = and i32 %3084, 255
  %3086 = add nuw nsw i32 %3085, 1
  %3087 = zext i32 %3086 to i64
  %3088 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %3082, i64 0, i32 5, i64 %3087
  %3089 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %3075, %"class.v8::internal::compiler::InstructionOperand"* %3088) #11
  %3090 = extractvalue { i64, i64 } %3089, 0
  %3091 = trunc i64 %3090 to i32
  %3092 = extractvalue { i64, i64 } %3089, 1
  %3093 = icmp eq i32 %3091, 3
  %3094 = and i64 %3090, 1095216660480
  %3095 = icmp eq i64 %3094, 25769803776
  %3096 = select i1 %3095, i64 25769803776, i64 0
  %3097 = and i64 %3092, 4294967295
  %3098 = or i64 %3096, %3097
  %3099 = select i1 %3093, i64 0, i64 %3098
  call void @_ZN2v88internal9Assembler9emit_imulENS0_8RegisterENS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %3076, i32 %3074, i64 %3080, i32 %3081, i64 %3099, i32 8) #11
  br label %23402

3100:                                             ; preds = %3023
  %3101 = icmp ugt i64 %3031, 4
  %3102 = and i64 %3030, 24
  %3103 = icmp eq i64 %3102, 0
  %3104 = and i1 %3101, %3103
  br i1 %3104, label %3111, label %3105

3105:                                             ; preds = %3100
  %3106 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %3107 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %3108 = load i64, i64* %3107, align 8
  %3109 = ashr i64 %3108, 35
  %3110 = trunc i64 %3109 to i32
  br label %3123

3111:                                             ; preds = %3100
  %3112 = lshr i64 %3030, 5
  %3113 = trunc i64 %3112 to i8
  %3114 = icmp ult i8 %3113, 12
  %3115 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %3116 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %3117 = load i64, i64* %3116, align 8
  %3118 = ashr i64 %3117, 35
  %3119 = trunc i64 %3118 to i32
  br i1 %3114, label %3120, label %3123

3120:                                             ; preds = %3111
  %3121 = ashr i64 %3030, 35
  %3122 = trunc i64 %3121 to i32
  tail call void @_ZN2v88internal9Assembler9emit_imulENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %3115, i32 %3119, i32 %3122, i32 8) #11
  br label %23402

3123:                                             ; preds = %3105, %3111
  %3124 = phi i32 [ %3110, %3105 ], [ %3119, %3111 ]
  %3125 = phi %"class.v8::internal::Assembler"* [ %3106, %3105 ], [ %3115, %3111 ]
  %3126 = ashr i64 %3030, 35
  %3127 = trunc i64 %3126 to i32
  %3128 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %3127, i32 0) #11
  %3129 = extractvalue { i64, i32 } %3128, 0
  %3130 = extractvalue { i64, i32 } %3128, 1
  call void @_ZN2v88internal9Assembler9emit_imulENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %3125, i32 %3124, i64 %3129, i32 %3130, i32 8) #11
  br label %23402

3131:                                             ; preds = %2
  %3132 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %3133 = load i32, i32* %3132, align 4
  %3134 = and i32 %3133, 255
  %3135 = add nuw nsw i32 %3134, 1
  %3136 = zext i32 %3135 to i64
  %3137 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3136, i32 0
  %3138 = load i64, i64* %3137, align 8
  %3139 = and i64 %3138, 7
  %3140 = icmp ugt i64 %3139, 4
  %3141 = and i64 %3138, 24
  %3142 = icmp eq i64 %3141, 0
  %3143 = and i1 %3140, %3142
  br i1 %3143, label %3146, label %3144

3144:                                             ; preds = %3131
  %3145 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %3154

3146:                                             ; preds = %3131
  %3147 = lshr i64 %3138, 5
  %3148 = trunc i64 %3147 to i8
  %3149 = icmp ult i8 %3148, 12
  %3150 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %3149, label %3151, label %3154

3151:                                             ; preds = %3146
  %3152 = ashr i64 %3138, 35
  %3153 = trunc i64 %3152 to i32
  tail call void @_ZN2v88internal9Assembler9emit_imulENS0_8RegisterEi(%"class.v8::internal::Assembler"* %3150, i32 %3153, i32 4) #11
  br label %23402

3154:                                             ; preds = %3144, %3146
  %3155 = phi %"class.v8::internal::Assembler"* [ %3145, %3144 ], [ %3150, %3146 ]
  %3156 = ashr i64 %3138, 35
  %3157 = trunc i64 %3156 to i32
  %3158 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %3157, i32 0) #11
  %3159 = extractvalue { i64, i32 } %3158, 0
  %3160 = extractvalue { i64, i32 } %3158, 1
  call void @_ZN2v88internal9Assembler9emit_imulENS0_7OperandEi(%"class.v8::internal::Assembler"* %3155, i64 %3159, i32 %3160, i32 4) #11
  br label %23402

3161:                                             ; preds = %2
  %3162 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %3163 = load i32, i32* %3162, align 4
  %3164 = and i32 %3163, 255
  %3165 = add nuw nsw i32 %3164, 1
  %3166 = zext i32 %3165 to i64
  %3167 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3166, i32 0
  %3168 = load i64, i64* %3167, align 8
  %3169 = and i64 %3168, 7
  %3170 = icmp ugt i64 %3169, 4
  %3171 = and i64 %3168, 24
  %3172 = icmp eq i64 %3171, 0
  %3173 = and i1 %3170, %3172
  br i1 %3173, label %3176, label %3174

3174:                                             ; preds = %3161
  %3175 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %3184

3176:                                             ; preds = %3161
  %3177 = lshr i64 %3168, 5
  %3178 = trunc i64 %3177 to i8
  %3179 = icmp ult i8 %3178, 12
  %3180 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %3179, label %3181, label %3184

3181:                                             ; preds = %3176
  %3182 = ashr i64 %3168, 35
  %3183 = trunc i64 %3182 to i32
  tail call void @_ZN2v88internal9Assembler4mullENS0_8RegisterE(%"class.v8::internal::Assembler"* %3180, i32 %3183) #11
  br label %23402

3184:                                             ; preds = %3174, %3176
  %3185 = phi %"class.v8::internal::Assembler"* [ %3175, %3174 ], [ %3180, %3176 ]
  %3186 = ashr i64 %3168, 35
  %3187 = trunc i64 %3186 to i32
  %3188 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %3187, i32 0) #11
  %3189 = extractvalue { i64, i32 } %3188, 0
  %3190 = extractvalue { i64, i32 } %3188, 1
  call void @_ZN2v88internal9Assembler4mullENS0_7OperandE(%"class.v8::internal::Assembler"* %3185, i64 %3189, i32 %3190) #11
  br label %23402

3191:                                             ; preds = %2
  %3192 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler3cdqEv(%"class.v8::internal::Assembler"* %3192) #11
  %3193 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %3194 = load i32, i32* %3193, align 4
  %3195 = and i32 %3194, 255
  %3196 = add nuw nsw i32 %3195, 1
  %3197 = zext i32 %3196 to i64
  %3198 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3197, i32 0
  %3199 = load i64, i64* %3198, align 8
  %3200 = ashr i64 %3199, 35
  %3201 = trunc i64 %3200 to i32
  tail call void @_ZN2v88internal9Assembler9emit_idivENS0_8RegisterEi(%"class.v8::internal::Assembler"* %3192, i32 %3201, i32 4) #11
  br label %23402

3202:                                             ; preds = %2
  %3203 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler3cqoEv(%"class.v8::internal::Assembler"* %3203) #11
  %3204 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %3205 = load i32, i32* %3204, align 4
  %3206 = and i32 %3205, 255
  %3207 = add nuw nsw i32 %3206, 1
  %3208 = zext i32 %3207 to i64
  %3209 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3208, i32 0
  %3210 = load i64, i64* %3209, align 8
  %3211 = ashr i64 %3210, 35
  %3212 = trunc i64 %3211 to i32
  tail call void @_ZN2v88internal9Assembler9emit_idivENS0_8RegisterEi(%"class.v8::internal::Assembler"* %3203, i32 %3212, i32 8) #11
  br label %23402

3213:                                             ; preds = %2
  %3214 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %3214, i8 zeroext 51, i32 2, i32 2, i32 4) #11
  %3215 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %3216 = load i32, i32* %3215, align 4
  %3217 = and i32 %3216, 255
  %3218 = add nuw nsw i32 %3217, 1
  %3219 = zext i32 %3218 to i64
  %3220 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3219, i32 0
  %3221 = load i64, i64* %3220, align 8
  %3222 = ashr i64 %3221, 35
  %3223 = trunc i64 %3222 to i32
  tail call void @_ZN2v88internal9Assembler8emit_divENS0_8RegisterEi(%"class.v8::internal::Assembler"* %3214, i32 %3223, i32 4) #11
  br label %23402

3224:                                             ; preds = %2
  %3225 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %3225, i8 zeroext 51, i32 2, i32 2, i32 4) #11
  %3226 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %3227 = load i32, i32* %3226, align 4
  %3228 = and i32 %3227, 255
  %3229 = add nuw nsw i32 %3228, 1
  %3230 = zext i32 %3229 to i64
  %3231 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3230, i32 0
  %3232 = load i64, i64* %3231, align 8
  %3233 = ashr i64 %3232, 35
  %3234 = trunc i64 %3233 to i32
  tail call void @_ZN2v88internal9Assembler8emit_divENS0_8RegisterEi(%"class.v8::internal::Assembler"* %3225, i32 %3234, i32 8) #11
  br label %23402

3235:                                             ; preds = %2
  %3236 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %3237 = load i64, i64* %3236, align 8
  %3238 = and i64 %3237, 7
  %3239 = icmp ugt i64 %3238, 4
  %3240 = and i64 %3237, 24
  %3241 = icmp eq i64 %3240, 0
  %3242 = and i1 %3239, %3241
  br i1 %3242, label %3245, label %3243

3243:                                             ; preds = %3235
  %3244 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %3253

3245:                                             ; preds = %3235
  %3246 = lshr i64 %3237, 5
  %3247 = trunc i64 %3246 to i8
  %3248 = icmp ult i8 %3247, 12
  %3249 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %3248, label %3250, label %3253

3250:                                             ; preds = %3245
  %3251 = ashr i64 %3237, 35
  %3252 = trunc i64 %3251 to i32
  tail call void @_ZN2v88internal9Assembler8emit_notENS0_8RegisterEi(%"class.v8::internal::Assembler"* %3249, i32 %3252, i32 8) #11
  br label %23402

3253:                                             ; preds = %3243, %3245
  %3254 = phi %"class.v8::internal::Assembler"* [ %3244, %3243 ], [ %3249, %3245 ]
  %3255 = ashr i64 %3237, 35
  %3256 = trunc i64 %3255 to i32
  %3257 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %3256, i32 0) #11
  %3258 = extractvalue { i64, i32 } %3257, 0
  %3259 = extractvalue { i64, i32 } %3257, 1
  call void @_ZN2v88internal9Assembler8emit_notENS0_7OperandEi(%"class.v8::internal::Assembler"* %3254, i64 %3258, i32 %3259, i32 8) #11
  br label %23402

3260:                                             ; preds = %2
  %3261 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %3262 = load i64, i64* %3261, align 8
  %3263 = and i64 %3262, 7
  %3264 = icmp ugt i64 %3263, 4
  %3265 = and i64 %3262, 24
  %3266 = icmp eq i64 %3265, 0
  %3267 = and i1 %3264, %3266
  br i1 %3267, label %3270, label %3268

3268:                                             ; preds = %3260
  %3269 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %3278

3270:                                             ; preds = %3260
  %3271 = lshr i64 %3262, 5
  %3272 = trunc i64 %3271 to i8
  %3273 = icmp ult i8 %3272, 12
  %3274 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %3273, label %3275, label %3278

3275:                                             ; preds = %3270
  %3276 = ashr i64 %3262, 35
  %3277 = trunc i64 %3276 to i32
  tail call void @_ZN2v88internal9Assembler8emit_notENS0_8RegisterEi(%"class.v8::internal::Assembler"* %3274, i32 %3277, i32 4) #11
  br label %23402

3278:                                             ; preds = %3268, %3270
  %3279 = phi %"class.v8::internal::Assembler"* [ %3269, %3268 ], [ %3274, %3270 ]
  %3280 = ashr i64 %3262, 35
  %3281 = trunc i64 %3280 to i32
  %3282 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %3281, i32 0) #11
  %3283 = extractvalue { i64, i32 } %3282, 0
  %3284 = extractvalue { i64, i32 } %3282, 1
  call void @_ZN2v88internal9Assembler8emit_notENS0_7OperandEi(%"class.v8::internal::Assembler"* %3279, i64 %3283, i32 %3284, i32 4) #11
  br label %23402

3285:                                             ; preds = %2
  %3286 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %3287 = load i64, i64* %3286, align 8
  %3288 = and i64 %3287, 7
  %3289 = icmp ugt i64 %3288, 4
  %3290 = and i64 %3287, 24
  %3291 = icmp eq i64 %3290, 0
  %3292 = and i1 %3289, %3291
  br i1 %3292, label %3295, label %3293

3293:                                             ; preds = %3285
  %3294 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %3303

3295:                                             ; preds = %3285
  %3296 = lshr i64 %3287, 5
  %3297 = trunc i64 %3296 to i8
  %3298 = icmp ult i8 %3297, 12
  %3299 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %3298, label %3300, label %3303

3300:                                             ; preds = %3295
  %3301 = ashr i64 %3287, 35
  %3302 = trunc i64 %3301 to i32
  tail call void @_ZN2v88internal9Assembler4negqENS0_8RegisterE(%"class.v8::internal::Assembler"* %3299, i32 %3302) #11
  br label %23402

3303:                                             ; preds = %3293, %3295
  %3304 = phi %"class.v8::internal::Assembler"* [ %3294, %3293 ], [ %3299, %3295 ]
  %3305 = ashr i64 %3287, 35
  %3306 = trunc i64 %3305 to i32
  %3307 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %3306, i32 0) #11
  %3308 = extractvalue { i64, i32 } %3307, 0
  %3309 = extractvalue { i64, i32 } %3307, 1
  call void @_ZN2v88internal9Assembler4negqENS0_7OperandE(%"class.v8::internal::Assembler"* %3304, i64 %3308, i32 %3309) #11
  br label %23402

3310:                                             ; preds = %2
  %3311 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %3312 = load i64, i64* %3311, align 8
  %3313 = and i64 %3312, 7
  %3314 = icmp ugt i64 %3313, 4
  %3315 = and i64 %3312, 24
  %3316 = icmp eq i64 %3315, 0
  %3317 = and i1 %3314, %3316
  br i1 %3317, label %3320, label %3318

3318:                                             ; preds = %3310
  %3319 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %3328

3320:                                             ; preds = %3310
  %3321 = lshr i64 %3312, 5
  %3322 = trunc i64 %3321 to i8
  %3323 = icmp ult i8 %3322, 12
  %3324 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %3323, label %3325, label %3328

3325:                                             ; preds = %3320
  %3326 = ashr i64 %3312, 35
  %3327 = trunc i64 %3326 to i32
  tail call void @_ZN2v88internal9Assembler4neglENS0_8RegisterE(%"class.v8::internal::Assembler"* %3324, i32 %3327) #11
  br label %23402

3328:                                             ; preds = %3318, %3320
  %3329 = phi %"class.v8::internal::Assembler"* [ %3319, %3318 ], [ %3324, %3320 ]
  %3330 = ashr i64 %3312, 35
  %3331 = trunc i64 %3330 to i32
  %3332 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %3331, i32 0) #11
  %3333 = extractvalue { i64, i32 } %3332, 0
  %3334 = extractvalue { i64, i32 } %3332, 1
  call void @_ZN2v88internal9Assembler4neglENS0_7OperandE(%"class.v8::internal::Assembler"* %3329, i64 %3333, i32 %3334) #11
  br label %23402

3335:                                             ; preds = %2
  %3336 = and i32 %275, 15872
  %3337 = icmp eq i32 %3336, 0
  br i1 %3337, label %3353, label %3338

3338:                                             ; preds = %3335
  %3339 = bitcast i64* %174 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3339) #11
  store i64 1, i64* %174, align 8
  %3340 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %174)
  %3341 = extractvalue { i64, i32 } %3340, 0
  %3342 = extractvalue { i64, i32 } %3340, 1
  %3343 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %3344 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %3345 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %3344, i64 0, i32 1
  %3346 = load i32, i32* %3345, align 4
  %3347 = and i32 %3346, 255
  %3348 = zext i32 %3347 to i64
  %3349 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %3344, i64 0, i32 5, i64 %3348, i32 0
  %3350 = load i64, i64* %3349, align 8
  %3351 = ashr i64 %3350, 35
  %3352 = trunc i64 %3351 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %3343, i8 zeroext 11, i32 %3352, i64 %3341, i32 %3342, i32 4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3339) #11
  br label %23402

3353:                                             ; preds = %3335
  %3354 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %3355 = load i32, i32* %3354, align 4
  %3356 = and i32 %3355, 255
  %3357 = zext i32 %3356 to i64
  %3358 = add nuw nsw i64 %3357, 1
  %3359 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3358, i32 0
  %3360 = load i64, i64* %3359, align 8
  %3361 = and i64 %3360, 7
  %3362 = icmp eq i64 %3361, 3
  br i1 %3362, label %3363, label %3420

3363:                                             ; preds = %3353
  %3364 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3357, i32 0
  %3365 = load i64, i64* %3364, align 8
  %3366 = and i64 %3365, 7
  %3367 = icmp ugt i64 %3366, 4
  %3368 = and i64 %3365, 24
  %3369 = icmp eq i64 %3368, 0
  %3370 = and i1 %3367, %3369
  br i1 %3370, label %3373, label %3371

3371:                                             ; preds = %3363
  %3372 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %3394

3373:                                             ; preds = %3363
  %3374 = lshr i64 %3365, 5
  %3375 = trunc i64 %3374 to i8
  %3376 = icmp ult i8 %3375, 12
  %3377 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %3376, label %3378, label %3394

3378:                                             ; preds = %3373
  %3379 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %3380 = ashr i64 %3365, 35
  %3381 = trunc i64 %3380 to i32
  %3382 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3358
  %3383 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %3379, %"class.v8::internal::compiler::InstructionOperand"* %3382) #11
  %3384 = extractvalue { i64, i64 } %3383, 0
  %3385 = trunc i64 %3384 to i32
  %3386 = extractvalue { i64, i64 } %3383, 1
  %3387 = icmp eq i32 %3385, 3
  %3388 = and i64 %3384, 1095216660480
  %3389 = icmp eq i64 %3388, 25769803776
  %3390 = select i1 %3389, i64 25769803776, i64 0
  %3391 = and i64 %3386, 4294967295
  %3392 = or i64 %3390, %3391
  %3393 = select i1 %3387, i64 0, i64 %3392
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %3377, i8 zeroext 1, i32 %3381, i64 %3393, i32 4) #11
  br label %23402

3394:                                             ; preds = %3371, %3373
  %3395 = phi %"class.v8::internal::Assembler"* [ %3372, %3371 ], [ %3377, %3373 ]
  %3396 = ashr i64 %3365, 35
  %3397 = trunc i64 %3396 to i32
  %3398 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %3397, i32 0) #11
  %3399 = extractvalue { i64, i32 } %3398, 0
  %3400 = extractvalue { i64, i32 } %3398, 1
  %3401 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %3402 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %3401, i64 0, i32 1
  %3403 = load i32, i32* %3402, align 4
  %3404 = and i32 %3403, 255
  %3405 = add nuw nsw i32 %3404, 1
  %3406 = zext i32 %3405 to i64
  %3407 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %3401, i64 0, i32 5, i64 %3406
  %3408 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %3409 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %3408, %"class.v8::internal::compiler::InstructionOperand"* %3407) #11
  %3410 = extractvalue { i64, i64 } %3409, 0
  %3411 = trunc i64 %3410 to i32
  %3412 = extractvalue { i64, i64 } %3409, 1
  %3413 = icmp eq i32 %3411, 3
  %3414 = and i64 %3410, 1095216660480
  %3415 = icmp eq i64 %3414, 25769803776
  %3416 = select i1 %3415, i64 25769803776, i64 0
  %3417 = and i64 %3412, 4294967295
  %3418 = or i64 %3416, %3417
  %3419 = select i1 %3413, i64 0, i64 %3418
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %3395, i8 zeroext 1, i64 %3399, i32 %3400, i64 %3419, i32 4) #11
  br label %23402

3420:                                             ; preds = %3353
  %3421 = icmp ugt i64 %3361, 4
  %3422 = and i64 %3360, 24
  %3423 = icmp eq i64 %3422, 0
  %3424 = and i1 %3421, %3423
  br i1 %3424, label %3431, label %3425

3425:                                             ; preds = %3420
  %3426 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %3427 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3357, i32 0
  %3428 = load i64, i64* %3427, align 8
  %3429 = ashr i64 %3428, 35
  %3430 = trunc i64 %3429 to i32
  br label %3443

3431:                                             ; preds = %3420
  %3432 = lshr i64 %3360, 5
  %3433 = trunc i64 %3432 to i8
  %3434 = icmp ult i8 %3433, 12
  %3435 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %3436 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3357, i32 0
  %3437 = load i64, i64* %3436, align 8
  %3438 = ashr i64 %3437, 35
  %3439 = trunc i64 %3438 to i32
  br i1 %3434, label %3440, label %3443

3440:                                             ; preds = %3431
  %3441 = ashr i64 %3360, 35
  %3442 = trunc i64 %3441 to i32
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %3435, i8 zeroext 11, i32 %3439, i32 %3442, i32 4) #11
  br label %23402

3443:                                             ; preds = %3425, %3431
  %3444 = phi i32 [ %3430, %3425 ], [ %3439, %3431 ]
  %3445 = phi %"class.v8::internal::Assembler"* [ %3426, %3425 ], [ %3435, %3431 ]
  %3446 = ashr i64 %3360, 35
  %3447 = trunc i64 %3446 to i32
  %3448 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %3447, i32 0) #11
  %3449 = extractvalue { i64, i32 } %3448, 0
  %3450 = extractvalue { i64, i32 } %3448, 1
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %3445, i8 zeroext 11, i32 %3444, i64 %3449, i32 %3450, i32 4) #11
  br label %23402

3451:                                             ; preds = %2
  %3452 = and i32 %275, 15872
  %3453 = icmp eq i32 %3452, 0
  br i1 %3453, label %3469, label %3454

3454:                                             ; preds = %3451
  %3455 = bitcast i64* %175 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3455) #11
  store i64 1, i64* %175, align 8
  %3456 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %175)
  %3457 = extractvalue { i64, i32 } %3456, 0
  %3458 = extractvalue { i64, i32 } %3456, 1
  %3459 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %3460 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %3461 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %3460, i64 0, i32 1
  %3462 = load i32, i32* %3461, align 4
  %3463 = and i32 %3462, 255
  %3464 = zext i32 %3463 to i64
  %3465 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %3460, i64 0, i32 5, i64 %3464, i32 0
  %3466 = load i64, i64* %3465, align 8
  %3467 = ashr i64 %3466, 35
  %3468 = trunc i64 %3467 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %3459, i8 zeroext 11, i32 %3468, i64 %3457, i32 %3458, i32 8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3455) #11
  br label %23402

3469:                                             ; preds = %3451
  %3470 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %3471 = load i32, i32* %3470, align 4
  %3472 = and i32 %3471, 255
  %3473 = zext i32 %3472 to i64
  %3474 = add nuw nsw i64 %3473, 1
  %3475 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3474, i32 0
  %3476 = load i64, i64* %3475, align 8
  %3477 = and i64 %3476, 7
  %3478 = icmp eq i64 %3477, 3
  br i1 %3478, label %3479, label %3536

3479:                                             ; preds = %3469
  %3480 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3473, i32 0
  %3481 = load i64, i64* %3480, align 8
  %3482 = and i64 %3481, 7
  %3483 = icmp ugt i64 %3482, 4
  %3484 = and i64 %3481, 24
  %3485 = icmp eq i64 %3484, 0
  %3486 = and i1 %3483, %3485
  br i1 %3486, label %3489, label %3487

3487:                                             ; preds = %3479
  %3488 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %3510

3489:                                             ; preds = %3479
  %3490 = lshr i64 %3481, 5
  %3491 = trunc i64 %3490 to i8
  %3492 = icmp ult i8 %3491, 12
  %3493 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %3492, label %3494, label %3510

3494:                                             ; preds = %3489
  %3495 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %3496 = ashr i64 %3481, 35
  %3497 = trunc i64 %3496 to i32
  %3498 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3474
  %3499 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %3495, %"class.v8::internal::compiler::InstructionOperand"* %3498) #11
  %3500 = extractvalue { i64, i64 } %3499, 0
  %3501 = trunc i64 %3500 to i32
  %3502 = extractvalue { i64, i64 } %3499, 1
  %3503 = icmp eq i32 %3501, 3
  %3504 = and i64 %3500, 1095216660480
  %3505 = icmp eq i64 %3504, 25769803776
  %3506 = select i1 %3505, i64 25769803776, i64 0
  %3507 = and i64 %3502, 4294967295
  %3508 = or i64 %3506, %3507
  %3509 = select i1 %3503, i64 0, i64 %3508
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %3493, i8 zeroext 1, i32 %3497, i64 %3509, i32 8) #11
  br label %23402

3510:                                             ; preds = %3487, %3489
  %3511 = phi %"class.v8::internal::Assembler"* [ %3488, %3487 ], [ %3493, %3489 ]
  %3512 = ashr i64 %3481, 35
  %3513 = trunc i64 %3512 to i32
  %3514 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %3513, i32 0) #11
  %3515 = extractvalue { i64, i32 } %3514, 0
  %3516 = extractvalue { i64, i32 } %3514, 1
  %3517 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %3518 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %3517, i64 0, i32 1
  %3519 = load i32, i32* %3518, align 4
  %3520 = and i32 %3519, 255
  %3521 = add nuw nsw i32 %3520, 1
  %3522 = zext i32 %3521 to i64
  %3523 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %3517, i64 0, i32 5, i64 %3522
  %3524 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %3525 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %3524, %"class.v8::internal::compiler::InstructionOperand"* %3523) #11
  %3526 = extractvalue { i64, i64 } %3525, 0
  %3527 = trunc i64 %3526 to i32
  %3528 = extractvalue { i64, i64 } %3525, 1
  %3529 = icmp eq i32 %3527, 3
  %3530 = and i64 %3526, 1095216660480
  %3531 = icmp eq i64 %3530, 25769803776
  %3532 = select i1 %3531, i64 25769803776, i64 0
  %3533 = and i64 %3528, 4294967295
  %3534 = or i64 %3532, %3533
  %3535 = select i1 %3529, i64 0, i64 %3534
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %3511, i8 zeroext 1, i64 %3515, i32 %3516, i64 %3535, i32 8) #11
  br label %23402

3536:                                             ; preds = %3469
  %3537 = icmp ugt i64 %3477, 4
  %3538 = and i64 %3476, 24
  %3539 = icmp eq i64 %3538, 0
  %3540 = and i1 %3537, %3539
  br i1 %3540, label %3547, label %3541

3541:                                             ; preds = %3536
  %3542 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %3543 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3473, i32 0
  %3544 = load i64, i64* %3543, align 8
  %3545 = ashr i64 %3544, 35
  %3546 = trunc i64 %3545 to i32
  br label %3559

3547:                                             ; preds = %3536
  %3548 = lshr i64 %3476, 5
  %3549 = trunc i64 %3548 to i8
  %3550 = icmp ult i8 %3549, 12
  %3551 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %3552 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3473, i32 0
  %3553 = load i64, i64* %3552, align 8
  %3554 = ashr i64 %3553, 35
  %3555 = trunc i64 %3554 to i32
  br i1 %3550, label %3556, label %3559

3556:                                             ; preds = %3547
  %3557 = ashr i64 %3476, 35
  %3558 = trunc i64 %3557 to i32
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %3551, i8 zeroext 11, i32 %3555, i32 %3558, i32 8) #11
  br label %23402

3559:                                             ; preds = %3541, %3547
  %3560 = phi i32 [ %3546, %3541 ], [ %3555, %3547 ]
  %3561 = phi %"class.v8::internal::Assembler"* [ %3542, %3541 ], [ %3551, %3547 ]
  %3562 = ashr i64 %3476, 35
  %3563 = trunc i64 %3562 to i32
  %3564 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %3563, i32 0) #11
  %3565 = extractvalue { i64, i32 } %3564, 0
  %3566 = extractvalue { i64, i32 } %3564, 1
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %3561, i8 zeroext 11, i32 %3560, i64 %3565, i32 %3566, i32 8) #11
  br label %23402

3567:                                             ; preds = %2
  %3568 = and i32 %275, 15872
  %3569 = icmp eq i32 %3568, 0
  br i1 %3569, label %3585, label %3570

3570:                                             ; preds = %3567
  %3571 = bitcast i64* %176 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3571) #11
  store i64 1, i64* %176, align 8
  %3572 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %176)
  %3573 = extractvalue { i64, i32 } %3572, 0
  %3574 = extractvalue { i64, i32 } %3572, 1
  %3575 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %3576 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %3577 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %3576, i64 0, i32 1
  %3578 = load i32, i32* %3577, align 4
  %3579 = and i32 %3578, 255
  %3580 = zext i32 %3579 to i64
  %3581 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %3576, i64 0, i32 5, i64 %3580, i32 0
  %3582 = load i64, i64* %3581, align 8
  %3583 = ashr i64 %3582, 35
  %3584 = trunc i64 %3583 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %3575, i8 zeroext 51, i32 %3584, i64 %3573, i32 %3574, i32 4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3571) #11
  br label %23402

3585:                                             ; preds = %3567
  %3586 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %3587 = load i32, i32* %3586, align 4
  %3588 = and i32 %3587, 255
  %3589 = zext i32 %3588 to i64
  %3590 = add nuw nsw i64 %3589, 1
  %3591 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3590, i32 0
  %3592 = load i64, i64* %3591, align 8
  %3593 = and i64 %3592, 7
  %3594 = icmp eq i64 %3593, 3
  br i1 %3594, label %3595, label %3652

3595:                                             ; preds = %3585
  %3596 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3589, i32 0
  %3597 = load i64, i64* %3596, align 8
  %3598 = and i64 %3597, 7
  %3599 = icmp ugt i64 %3598, 4
  %3600 = and i64 %3597, 24
  %3601 = icmp eq i64 %3600, 0
  %3602 = and i1 %3599, %3601
  br i1 %3602, label %3605, label %3603

3603:                                             ; preds = %3595
  %3604 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %3626

3605:                                             ; preds = %3595
  %3606 = lshr i64 %3597, 5
  %3607 = trunc i64 %3606 to i8
  %3608 = icmp ult i8 %3607, 12
  %3609 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %3608, label %3610, label %3626

3610:                                             ; preds = %3605
  %3611 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %3612 = ashr i64 %3597, 35
  %3613 = trunc i64 %3612 to i32
  %3614 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3590
  %3615 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %3611, %"class.v8::internal::compiler::InstructionOperand"* %3614) #11
  %3616 = extractvalue { i64, i64 } %3615, 0
  %3617 = trunc i64 %3616 to i32
  %3618 = extractvalue { i64, i64 } %3615, 1
  %3619 = icmp eq i32 %3617, 3
  %3620 = and i64 %3616, 1095216660480
  %3621 = icmp eq i64 %3620, 25769803776
  %3622 = select i1 %3621, i64 25769803776, i64 0
  %3623 = and i64 %3618, 4294967295
  %3624 = or i64 %3622, %3623
  %3625 = select i1 %3619, i64 0, i64 %3624
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %3609, i8 zeroext 6, i32 %3613, i64 %3625, i32 4) #11
  br label %23402

3626:                                             ; preds = %3603, %3605
  %3627 = phi %"class.v8::internal::Assembler"* [ %3604, %3603 ], [ %3609, %3605 ]
  %3628 = ashr i64 %3597, 35
  %3629 = trunc i64 %3628 to i32
  %3630 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %3629, i32 0) #11
  %3631 = extractvalue { i64, i32 } %3630, 0
  %3632 = extractvalue { i64, i32 } %3630, 1
  %3633 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %3634 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %3633, i64 0, i32 1
  %3635 = load i32, i32* %3634, align 4
  %3636 = and i32 %3635, 255
  %3637 = add nuw nsw i32 %3636, 1
  %3638 = zext i32 %3637 to i64
  %3639 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %3633, i64 0, i32 5, i64 %3638
  %3640 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %3641 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %3640, %"class.v8::internal::compiler::InstructionOperand"* %3639) #11
  %3642 = extractvalue { i64, i64 } %3641, 0
  %3643 = trunc i64 %3642 to i32
  %3644 = extractvalue { i64, i64 } %3641, 1
  %3645 = icmp eq i32 %3643, 3
  %3646 = and i64 %3642, 1095216660480
  %3647 = icmp eq i64 %3646, 25769803776
  %3648 = select i1 %3647, i64 25769803776, i64 0
  %3649 = and i64 %3644, 4294967295
  %3650 = or i64 %3648, %3649
  %3651 = select i1 %3645, i64 0, i64 %3650
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %3627, i8 zeroext 6, i64 %3631, i32 %3632, i64 %3651, i32 4) #11
  br label %23402

3652:                                             ; preds = %3585
  %3653 = icmp ugt i64 %3593, 4
  %3654 = and i64 %3592, 24
  %3655 = icmp eq i64 %3654, 0
  %3656 = and i1 %3653, %3655
  br i1 %3656, label %3663, label %3657

3657:                                             ; preds = %3652
  %3658 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %3659 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3589, i32 0
  %3660 = load i64, i64* %3659, align 8
  %3661 = ashr i64 %3660, 35
  %3662 = trunc i64 %3661 to i32
  br label %3675

3663:                                             ; preds = %3652
  %3664 = lshr i64 %3592, 5
  %3665 = trunc i64 %3664 to i8
  %3666 = icmp ult i8 %3665, 12
  %3667 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %3668 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3589, i32 0
  %3669 = load i64, i64* %3668, align 8
  %3670 = ashr i64 %3669, 35
  %3671 = trunc i64 %3670 to i32
  br i1 %3666, label %3672, label %3675

3672:                                             ; preds = %3663
  %3673 = ashr i64 %3592, 35
  %3674 = trunc i64 %3673 to i32
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %3667, i8 zeroext 51, i32 %3671, i32 %3674, i32 4) #11
  br label %23402

3675:                                             ; preds = %3657, %3663
  %3676 = phi i32 [ %3662, %3657 ], [ %3671, %3663 ]
  %3677 = phi %"class.v8::internal::Assembler"* [ %3658, %3657 ], [ %3667, %3663 ]
  %3678 = ashr i64 %3592, 35
  %3679 = trunc i64 %3678 to i32
  %3680 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %3679, i32 0) #11
  %3681 = extractvalue { i64, i32 } %3680, 0
  %3682 = extractvalue { i64, i32 } %3680, 1
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %3677, i8 zeroext 51, i32 %3676, i64 %3681, i32 %3682, i32 4) #11
  br label %23402

3683:                                             ; preds = %2
  %3684 = and i32 %275, 15872
  %3685 = icmp eq i32 %3684, 0
  br i1 %3685, label %3701, label %3686

3686:                                             ; preds = %3683
  %3687 = bitcast i64* %177 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3687) #11
  store i64 1, i64* %177, align 8
  %3688 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %177)
  %3689 = extractvalue { i64, i32 } %3688, 0
  %3690 = extractvalue { i64, i32 } %3688, 1
  %3691 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %3692 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %3693 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %3692, i64 0, i32 1
  %3694 = load i32, i32* %3693, align 4
  %3695 = and i32 %3694, 255
  %3696 = zext i32 %3695 to i64
  %3697 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %3692, i64 0, i32 5, i64 %3696, i32 0
  %3698 = load i64, i64* %3697, align 8
  %3699 = ashr i64 %3698, 35
  %3700 = trunc i64 %3699 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %3691, i8 zeroext 51, i32 %3700, i64 %3689, i32 %3690, i32 8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3687) #11
  br label %23402

3701:                                             ; preds = %3683
  %3702 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %3703 = load i32, i32* %3702, align 4
  %3704 = and i32 %3703, 255
  %3705 = zext i32 %3704 to i64
  %3706 = add nuw nsw i64 %3705, 1
  %3707 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3706, i32 0
  %3708 = load i64, i64* %3707, align 8
  %3709 = and i64 %3708, 7
  %3710 = icmp eq i64 %3709, 3
  br i1 %3710, label %3711, label %3768

3711:                                             ; preds = %3701
  %3712 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3705, i32 0
  %3713 = load i64, i64* %3712, align 8
  %3714 = and i64 %3713, 7
  %3715 = icmp ugt i64 %3714, 4
  %3716 = and i64 %3713, 24
  %3717 = icmp eq i64 %3716, 0
  %3718 = and i1 %3715, %3717
  br i1 %3718, label %3721, label %3719

3719:                                             ; preds = %3711
  %3720 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %3742

3721:                                             ; preds = %3711
  %3722 = lshr i64 %3713, 5
  %3723 = trunc i64 %3722 to i8
  %3724 = icmp ult i8 %3723, 12
  %3725 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %3724, label %3726, label %3742

3726:                                             ; preds = %3721
  %3727 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %3728 = ashr i64 %3713, 35
  %3729 = trunc i64 %3728 to i32
  %3730 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3706
  %3731 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %3727, %"class.v8::internal::compiler::InstructionOperand"* %3730) #11
  %3732 = extractvalue { i64, i64 } %3731, 0
  %3733 = trunc i64 %3732 to i32
  %3734 = extractvalue { i64, i64 } %3731, 1
  %3735 = icmp eq i32 %3733, 3
  %3736 = and i64 %3732, 1095216660480
  %3737 = icmp eq i64 %3736, 25769803776
  %3738 = select i1 %3737, i64 25769803776, i64 0
  %3739 = and i64 %3734, 4294967295
  %3740 = or i64 %3738, %3739
  %3741 = select i1 %3735, i64 0, i64 %3740
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %3725, i8 zeroext 6, i32 %3729, i64 %3741, i32 8) #11
  br label %23402

3742:                                             ; preds = %3719, %3721
  %3743 = phi %"class.v8::internal::Assembler"* [ %3720, %3719 ], [ %3725, %3721 ]
  %3744 = ashr i64 %3713, 35
  %3745 = trunc i64 %3744 to i32
  %3746 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %3745, i32 0) #11
  %3747 = extractvalue { i64, i32 } %3746, 0
  %3748 = extractvalue { i64, i32 } %3746, 1
  %3749 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %3750 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %3749, i64 0, i32 1
  %3751 = load i32, i32* %3750, align 4
  %3752 = and i32 %3751, 255
  %3753 = add nuw nsw i32 %3752, 1
  %3754 = zext i32 %3753 to i64
  %3755 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %3749, i64 0, i32 5, i64 %3754
  %3756 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %3757 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %3756, %"class.v8::internal::compiler::InstructionOperand"* %3755) #11
  %3758 = extractvalue { i64, i64 } %3757, 0
  %3759 = trunc i64 %3758 to i32
  %3760 = extractvalue { i64, i64 } %3757, 1
  %3761 = icmp eq i32 %3759, 3
  %3762 = and i64 %3758, 1095216660480
  %3763 = icmp eq i64 %3762, 25769803776
  %3764 = select i1 %3763, i64 25769803776, i64 0
  %3765 = and i64 %3760, 4294967295
  %3766 = or i64 %3764, %3765
  %3767 = select i1 %3761, i64 0, i64 %3766
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %3743, i8 zeroext 6, i64 %3747, i32 %3748, i64 %3767, i32 8) #11
  br label %23402

3768:                                             ; preds = %3701
  %3769 = icmp ugt i64 %3709, 4
  %3770 = and i64 %3708, 24
  %3771 = icmp eq i64 %3770, 0
  %3772 = and i1 %3769, %3771
  br i1 %3772, label %3779, label %3773

3773:                                             ; preds = %3768
  %3774 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %3775 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3705, i32 0
  %3776 = load i64, i64* %3775, align 8
  %3777 = ashr i64 %3776, 35
  %3778 = trunc i64 %3777 to i32
  br label %3794

3779:                                             ; preds = %3768
  %3780 = lshr i64 %3708, 5
  %3781 = trunc i64 %3780 to i8
  %3782 = icmp ult i8 %3781, 12
  %3783 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %3784 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3705, i32 0
  %3785 = load i64, i64* %3784, align 8
  %3786 = ashr i64 %3785, 35
  %3787 = trunc i64 %3786 to i32
  br i1 %3782, label %3788, label %3794

3788:                                             ; preds = %3779
  %3789 = ashr i64 %3708, 35
  %3790 = trunc i64 %3789 to i32
  %3791 = icmp eq i32 %3787, %3790
  br i1 %3791, label %3792, label %3793

3792:                                             ; preds = %3788
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %3783, i8 zeroext 51, i32 %3787, i32 %3787, i32 4) #11
  br label %23402

3793:                                             ; preds = %3788
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %3783, i8 zeroext 51, i32 %3787, i32 %3790, i32 8) #11
  br label %23402

3794:                                             ; preds = %3773, %3779
  %3795 = phi i32 [ %3778, %3773 ], [ %3787, %3779 ]
  %3796 = phi %"class.v8::internal::Assembler"* [ %3774, %3773 ], [ %3783, %3779 ]
  %3797 = ashr i64 %3708, 35
  %3798 = trunc i64 %3797 to i32
  %3799 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %3798, i32 0) #11
  %3800 = extractvalue { i64, i32 } %3799, 0
  %3801 = extractvalue { i64, i32 } %3799, 1
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %3796, i8 zeroext 51, i32 %3795, i64 %3800, i32 %3801, i32 8) #11
  br label %23402

3802:                                             ; preds = %2
  %3803 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %3804 = load i32, i32* %3803, align 4
  %3805 = and i32 %3804, 255
  %3806 = add nuw nsw i32 %3805, 1
  %3807 = zext i32 %3806 to i64
  %3808 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3807, i32 0
  %3809 = load i64, i64* %3808, align 8
  %3810 = and i64 %3809, 7
  %3811 = icmp eq i64 %3810, 3
  %3812 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %3813 = load i64, i64* %3812, align 8
  %3814 = and i64 %3813, 7
  %3815 = icmp ugt i64 %3814, 4
  %3816 = and i64 %3813, 24
  %3817 = icmp eq i64 %3816, 0
  %3818 = and i1 %3815, %3817
  br i1 %3818, label %3819, label %3823

3819:                                             ; preds = %3802
  %3820 = lshr i64 %3813, 5
  %3821 = trunc i64 %3820 to i8
  %3822 = icmp ult i8 %3821, 12
  br label %3823

3823:                                             ; preds = %3802, %3819
  %3824 = phi i1 [ false, %3802 ], [ %3822, %3819 ]
  %3825 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %3811, label %3826, label %3852

3826:                                             ; preds = %3823
  br i1 %3824, label %3827, label %3835

3827:                                             ; preds = %3826
  %3828 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %3829 = ashr i64 %3813, 35
  %3830 = trunc i64 %3829 to i32
  %3831 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3807
  %3832 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %3828, %"class.v8::internal::compiler::InstructionOperand"* %3831) #11
  %3833 = extractvalue { i64, i64 } %3832, 1
  %3834 = and i64 %3833, 31
  call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %3825, i32 %3830, i64 %3834, i32 4, i32 4) #11
  br label %23402

3835:                                             ; preds = %3826
  %3836 = ashr i64 %3813, 35
  %3837 = trunc i64 %3836 to i32
  %3838 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %3837, i32 0) #11
  %3839 = extractvalue { i64, i32 } %3838, 0
  %3840 = extractvalue { i64, i32 } %3838, 1
  %3841 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %3842 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %3843 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %3842, i64 0, i32 1
  %3844 = load i32, i32* %3843, align 4
  %3845 = and i32 %3844, 255
  %3846 = add nuw nsw i32 %3845, 1
  %3847 = zext i32 %3846 to i64
  %3848 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %3842, i64 0, i32 5, i64 %3847
  %3849 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %3841, %"class.v8::internal::compiler::InstructionOperand"* %3848) #11
  %3850 = extractvalue { i64, i64 } %3849, 1
  %3851 = and i64 %3850, 31
  call void @_ZN2v88internal9Assembler5shiftENS0_7OperandENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %3825, i64 %3839, i32 %3840, i64 %3851, i32 4, i32 4) #11
  br label %23402

3852:                                             ; preds = %3823
  %3853 = ashr i64 %3813, 35
  %3854 = trunc i64 %3853 to i32
  br i1 %3824, label %3855, label %3856

3855:                                             ; preds = %3852
  tail call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterEii(%"class.v8::internal::Assembler"* %3825, i32 %3854, i32 4, i32 4) #11
  br label %23402

3856:                                             ; preds = %3852
  %3857 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %3854, i32 0) #11
  %3858 = extractvalue { i64, i32 } %3857, 0
  %3859 = extractvalue { i64, i32 } %3857, 1
  call void @_ZN2v88internal9Assembler5shiftENS0_7OperandEii(%"class.v8::internal::Assembler"* %3825, i64 %3858, i32 %3859, i32 4, i32 4) #11
  br label %23402

3860:                                             ; preds = %2
  %3861 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %3862 = load i32, i32* %3861, align 4
  %3863 = and i32 %3862, 255
  %3864 = add nuw nsw i32 %3863, 1
  %3865 = zext i32 %3864 to i64
  %3866 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3865, i32 0
  %3867 = load i64, i64* %3866, align 8
  %3868 = and i64 %3867, 7
  %3869 = icmp eq i64 %3868, 3
  %3870 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %3871 = load i64, i64* %3870, align 8
  %3872 = and i64 %3871, 7
  %3873 = icmp ugt i64 %3872, 4
  %3874 = and i64 %3871, 24
  %3875 = icmp eq i64 %3874, 0
  %3876 = and i1 %3873, %3875
  br i1 %3876, label %3877, label %3881

3877:                                             ; preds = %3860
  %3878 = lshr i64 %3871, 5
  %3879 = trunc i64 %3878 to i8
  %3880 = icmp ult i8 %3879, 12
  br label %3881

3881:                                             ; preds = %3860, %3877
  %3882 = phi i1 [ false, %3860 ], [ %3880, %3877 ]
  %3883 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %3869, label %3884, label %3910

3884:                                             ; preds = %3881
  br i1 %3882, label %3885, label %3893

3885:                                             ; preds = %3884
  %3886 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %3887 = ashr i64 %3871, 35
  %3888 = trunc i64 %3887 to i32
  %3889 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3865
  %3890 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %3886, %"class.v8::internal::compiler::InstructionOperand"* %3889) #11
  %3891 = extractvalue { i64, i64 } %3890, 1
  %3892 = and i64 %3891, 63
  call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %3883, i32 %3888, i64 %3892, i32 4, i32 8) #11
  br label %23402

3893:                                             ; preds = %3884
  %3894 = ashr i64 %3871, 35
  %3895 = trunc i64 %3894 to i32
  %3896 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %3895, i32 0) #11
  %3897 = extractvalue { i64, i32 } %3896, 0
  %3898 = extractvalue { i64, i32 } %3896, 1
  %3899 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %3900 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %3901 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %3900, i64 0, i32 1
  %3902 = load i32, i32* %3901, align 4
  %3903 = and i32 %3902, 255
  %3904 = add nuw nsw i32 %3903, 1
  %3905 = zext i32 %3904 to i64
  %3906 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %3900, i64 0, i32 5, i64 %3905
  %3907 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %3899, %"class.v8::internal::compiler::InstructionOperand"* %3906) #11
  %3908 = extractvalue { i64, i64 } %3907, 1
  %3909 = and i64 %3908, 63
  call void @_ZN2v88internal9Assembler5shiftENS0_7OperandENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %3883, i64 %3897, i32 %3898, i64 %3909, i32 4, i32 8) #11
  br label %23402

3910:                                             ; preds = %3881
  %3911 = ashr i64 %3871, 35
  %3912 = trunc i64 %3911 to i32
  br i1 %3882, label %3913, label %3914

3913:                                             ; preds = %3910
  tail call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterEii(%"class.v8::internal::Assembler"* %3883, i32 %3912, i32 4, i32 8) #11
  br label %23402

3914:                                             ; preds = %3910
  %3915 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %3912, i32 0) #11
  %3916 = extractvalue { i64, i32 } %3915, 0
  %3917 = extractvalue { i64, i32 } %3915, 1
  call void @_ZN2v88internal9Assembler5shiftENS0_7OperandEii(%"class.v8::internal::Assembler"* %3883, i64 %3916, i32 %3917, i32 4, i32 8) #11
  br label %23402

3918:                                             ; preds = %2
  %3919 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %3920 = load i32, i32* %3919, align 4
  %3921 = and i32 %3920, 255
  %3922 = add nuw nsw i32 %3921, 1
  %3923 = zext i32 %3922 to i64
  %3924 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3923, i32 0
  %3925 = load i64, i64* %3924, align 8
  %3926 = and i64 %3925, 7
  %3927 = icmp eq i64 %3926, 3
  %3928 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %3929 = load i64, i64* %3928, align 8
  %3930 = and i64 %3929, 7
  %3931 = icmp ugt i64 %3930, 4
  %3932 = and i64 %3929, 24
  %3933 = icmp eq i64 %3932, 0
  %3934 = and i1 %3931, %3933
  br i1 %3934, label %3935, label %3939

3935:                                             ; preds = %3918
  %3936 = lshr i64 %3929, 5
  %3937 = trunc i64 %3936 to i8
  %3938 = icmp ult i8 %3937, 12
  br label %3939

3939:                                             ; preds = %3918, %3935
  %3940 = phi i1 [ false, %3918 ], [ %3938, %3935 ]
  %3941 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %3927, label %3942, label %3968

3942:                                             ; preds = %3939
  br i1 %3940, label %3943, label %3951

3943:                                             ; preds = %3942
  %3944 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %3945 = ashr i64 %3929, 35
  %3946 = trunc i64 %3945 to i32
  %3947 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3923
  %3948 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %3944, %"class.v8::internal::compiler::InstructionOperand"* %3947) #11
  %3949 = extractvalue { i64, i64 } %3948, 1
  %3950 = and i64 %3949, 31
  call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %3941, i32 %3946, i64 %3950, i32 5, i32 4) #11
  br label %23402

3951:                                             ; preds = %3942
  %3952 = ashr i64 %3929, 35
  %3953 = trunc i64 %3952 to i32
  %3954 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %3953, i32 0) #11
  %3955 = extractvalue { i64, i32 } %3954, 0
  %3956 = extractvalue { i64, i32 } %3954, 1
  %3957 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %3958 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %3959 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %3958, i64 0, i32 1
  %3960 = load i32, i32* %3959, align 4
  %3961 = and i32 %3960, 255
  %3962 = add nuw nsw i32 %3961, 1
  %3963 = zext i32 %3962 to i64
  %3964 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %3958, i64 0, i32 5, i64 %3963
  %3965 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %3957, %"class.v8::internal::compiler::InstructionOperand"* %3964) #11
  %3966 = extractvalue { i64, i64 } %3965, 1
  %3967 = and i64 %3966, 31
  call void @_ZN2v88internal9Assembler5shiftENS0_7OperandENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %3941, i64 %3955, i32 %3956, i64 %3967, i32 5, i32 4) #11
  br label %23402

3968:                                             ; preds = %3939
  %3969 = ashr i64 %3929, 35
  %3970 = trunc i64 %3969 to i32
  br i1 %3940, label %3971, label %3972

3971:                                             ; preds = %3968
  tail call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterEii(%"class.v8::internal::Assembler"* %3941, i32 %3970, i32 5, i32 4) #11
  br label %23402

3972:                                             ; preds = %3968
  %3973 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %3970, i32 0) #11
  %3974 = extractvalue { i64, i32 } %3973, 0
  %3975 = extractvalue { i64, i32 } %3973, 1
  call void @_ZN2v88internal9Assembler5shiftENS0_7OperandEii(%"class.v8::internal::Assembler"* %3941, i64 %3974, i32 %3975, i32 5, i32 4) #11
  br label %23402

3976:                                             ; preds = %2
  %3977 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %3978 = load i32, i32* %3977, align 4
  %3979 = and i32 %3978, 255
  %3980 = add nuw nsw i32 %3979, 1
  %3981 = zext i32 %3980 to i64
  %3982 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3981, i32 0
  %3983 = load i64, i64* %3982, align 8
  %3984 = and i64 %3983, 7
  %3985 = icmp eq i64 %3984, 3
  %3986 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %3987 = load i64, i64* %3986, align 8
  %3988 = and i64 %3987, 7
  %3989 = icmp ugt i64 %3988, 4
  %3990 = and i64 %3987, 24
  %3991 = icmp eq i64 %3990, 0
  %3992 = and i1 %3989, %3991
  br i1 %3992, label %3993, label %3997

3993:                                             ; preds = %3976
  %3994 = lshr i64 %3987, 5
  %3995 = trunc i64 %3994 to i8
  %3996 = icmp ult i8 %3995, 12
  br label %3997

3997:                                             ; preds = %3976, %3993
  %3998 = phi i1 [ false, %3976 ], [ %3996, %3993 ]
  %3999 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %3985, label %4000, label %4026

4000:                                             ; preds = %3997
  br i1 %3998, label %4001, label %4009

4001:                                             ; preds = %4000
  %4002 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %4003 = ashr i64 %3987, 35
  %4004 = trunc i64 %4003 to i32
  %4005 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %3981
  %4006 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %4002, %"class.v8::internal::compiler::InstructionOperand"* %4005) #11
  %4007 = extractvalue { i64, i64 } %4006, 1
  %4008 = and i64 %4007, 63
  call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %3999, i32 %4004, i64 %4008, i32 5, i32 8) #11
  br label %23402

4009:                                             ; preds = %4000
  %4010 = ashr i64 %3987, 35
  %4011 = trunc i64 %4010 to i32
  %4012 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %4011, i32 0) #11
  %4013 = extractvalue { i64, i32 } %4012, 0
  %4014 = extractvalue { i64, i32 } %4012, 1
  %4015 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %4016 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %4017 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %4016, i64 0, i32 1
  %4018 = load i32, i32* %4017, align 4
  %4019 = and i32 %4018, 255
  %4020 = add nuw nsw i32 %4019, 1
  %4021 = zext i32 %4020 to i64
  %4022 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %4016, i64 0, i32 5, i64 %4021
  %4023 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %4015, %"class.v8::internal::compiler::InstructionOperand"* %4022) #11
  %4024 = extractvalue { i64, i64 } %4023, 1
  %4025 = and i64 %4024, 63
  call void @_ZN2v88internal9Assembler5shiftENS0_7OperandENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %3999, i64 %4013, i32 %4014, i64 %4025, i32 5, i32 8) #11
  br label %23402

4026:                                             ; preds = %3997
  %4027 = ashr i64 %3987, 35
  %4028 = trunc i64 %4027 to i32
  br i1 %3998, label %4029, label %4030

4029:                                             ; preds = %4026
  tail call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterEii(%"class.v8::internal::Assembler"* %3999, i32 %4028, i32 5, i32 8) #11
  br label %23402

4030:                                             ; preds = %4026
  %4031 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %4028, i32 0) #11
  %4032 = extractvalue { i64, i32 } %4031, 0
  %4033 = extractvalue { i64, i32 } %4031, 1
  call void @_ZN2v88internal9Assembler5shiftENS0_7OperandEii(%"class.v8::internal::Assembler"* %3999, i64 %4032, i32 %4033, i32 5, i32 8) #11
  br label %23402

4034:                                             ; preds = %2
  %4035 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %4036 = load i32, i32* %4035, align 4
  %4037 = and i32 %4036, 255
  %4038 = add nuw nsw i32 %4037, 1
  %4039 = zext i32 %4038 to i64
  %4040 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4039, i32 0
  %4041 = load i64, i64* %4040, align 8
  %4042 = and i64 %4041, 7
  %4043 = icmp eq i64 %4042, 3
  %4044 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %4045 = load i64, i64* %4044, align 8
  %4046 = and i64 %4045, 7
  %4047 = icmp ugt i64 %4046, 4
  %4048 = and i64 %4045, 24
  %4049 = icmp eq i64 %4048, 0
  %4050 = and i1 %4047, %4049
  br i1 %4050, label %4051, label %4055

4051:                                             ; preds = %4034
  %4052 = lshr i64 %4045, 5
  %4053 = trunc i64 %4052 to i8
  %4054 = icmp ult i8 %4053, 12
  br label %4055

4055:                                             ; preds = %4034, %4051
  %4056 = phi i1 [ false, %4034 ], [ %4054, %4051 ]
  %4057 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %4043, label %4058, label %4084

4058:                                             ; preds = %4055
  br i1 %4056, label %4059, label %4067

4059:                                             ; preds = %4058
  %4060 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %4061 = ashr i64 %4045, 35
  %4062 = trunc i64 %4061 to i32
  %4063 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4039
  %4064 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %4060, %"class.v8::internal::compiler::InstructionOperand"* %4063) #11
  %4065 = extractvalue { i64, i64 } %4064, 1
  %4066 = and i64 %4065, 31
  call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %4057, i32 %4062, i64 %4066, i32 7, i32 4) #11
  br label %23402

4067:                                             ; preds = %4058
  %4068 = ashr i64 %4045, 35
  %4069 = trunc i64 %4068 to i32
  %4070 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %4069, i32 0) #11
  %4071 = extractvalue { i64, i32 } %4070, 0
  %4072 = extractvalue { i64, i32 } %4070, 1
  %4073 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %4074 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %4075 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %4074, i64 0, i32 1
  %4076 = load i32, i32* %4075, align 4
  %4077 = and i32 %4076, 255
  %4078 = add nuw nsw i32 %4077, 1
  %4079 = zext i32 %4078 to i64
  %4080 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %4074, i64 0, i32 5, i64 %4079
  %4081 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %4073, %"class.v8::internal::compiler::InstructionOperand"* %4080) #11
  %4082 = extractvalue { i64, i64 } %4081, 1
  %4083 = and i64 %4082, 31
  call void @_ZN2v88internal9Assembler5shiftENS0_7OperandENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %4057, i64 %4071, i32 %4072, i64 %4083, i32 7, i32 4) #11
  br label %23402

4084:                                             ; preds = %4055
  %4085 = ashr i64 %4045, 35
  %4086 = trunc i64 %4085 to i32
  br i1 %4056, label %4087, label %4088

4087:                                             ; preds = %4084
  tail call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterEii(%"class.v8::internal::Assembler"* %4057, i32 %4086, i32 7, i32 4) #11
  br label %23402

4088:                                             ; preds = %4084
  %4089 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %4086, i32 0) #11
  %4090 = extractvalue { i64, i32 } %4089, 0
  %4091 = extractvalue { i64, i32 } %4089, 1
  call void @_ZN2v88internal9Assembler5shiftENS0_7OperandEii(%"class.v8::internal::Assembler"* %4057, i64 %4090, i32 %4091, i32 7, i32 4) #11
  br label %23402

4092:                                             ; preds = %2
  %4093 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %4094 = load i32, i32* %4093, align 4
  %4095 = and i32 %4094, 255
  %4096 = add nuw nsw i32 %4095, 1
  %4097 = zext i32 %4096 to i64
  %4098 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4097, i32 0
  %4099 = load i64, i64* %4098, align 8
  %4100 = and i64 %4099, 7
  %4101 = icmp eq i64 %4100, 3
  %4102 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %4103 = load i64, i64* %4102, align 8
  %4104 = and i64 %4103, 7
  %4105 = icmp ugt i64 %4104, 4
  %4106 = and i64 %4103, 24
  %4107 = icmp eq i64 %4106, 0
  %4108 = and i1 %4105, %4107
  br i1 %4108, label %4109, label %4113

4109:                                             ; preds = %4092
  %4110 = lshr i64 %4103, 5
  %4111 = trunc i64 %4110 to i8
  %4112 = icmp ult i8 %4111, 12
  br label %4113

4113:                                             ; preds = %4092, %4109
  %4114 = phi i1 [ false, %4092 ], [ %4112, %4109 ]
  %4115 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %4101, label %4116, label %4142

4116:                                             ; preds = %4113
  br i1 %4114, label %4117, label %4125

4117:                                             ; preds = %4116
  %4118 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %4119 = ashr i64 %4103, 35
  %4120 = trunc i64 %4119 to i32
  %4121 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4097
  %4122 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %4118, %"class.v8::internal::compiler::InstructionOperand"* %4121) #11
  %4123 = extractvalue { i64, i64 } %4122, 1
  %4124 = and i64 %4123, 63
  call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %4115, i32 %4120, i64 %4124, i32 7, i32 8) #11
  br label %23402

4125:                                             ; preds = %4116
  %4126 = ashr i64 %4103, 35
  %4127 = trunc i64 %4126 to i32
  %4128 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %4127, i32 0) #11
  %4129 = extractvalue { i64, i32 } %4128, 0
  %4130 = extractvalue { i64, i32 } %4128, 1
  %4131 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %4132 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %4133 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %4132, i64 0, i32 1
  %4134 = load i32, i32* %4133, align 4
  %4135 = and i32 %4134, 255
  %4136 = add nuw nsw i32 %4135, 1
  %4137 = zext i32 %4136 to i64
  %4138 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %4132, i64 0, i32 5, i64 %4137
  %4139 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %4131, %"class.v8::internal::compiler::InstructionOperand"* %4138) #11
  %4140 = extractvalue { i64, i64 } %4139, 1
  %4141 = and i64 %4140, 63
  call void @_ZN2v88internal9Assembler5shiftENS0_7OperandENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %4115, i64 %4129, i32 %4130, i64 %4141, i32 7, i32 8) #11
  br label %23402

4142:                                             ; preds = %4113
  %4143 = ashr i64 %4103, 35
  %4144 = trunc i64 %4143 to i32
  br i1 %4114, label %4145, label %4146

4145:                                             ; preds = %4142
  tail call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterEii(%"class.v8::internal::Assembler"* %4115, i32 %4144, i32 7, i32 8) #11
  br label %23402

4146:                                             ; preds = %4142
  %4147 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %4144, i32 0) #11
  %4148 = extractvalue { i64, i32 } %4147, 0
  %4149 = extractvalue { i64, i32 } %4147, 1
  call void @_ZN2v88internal9Assembler5shiftENS0_7OperandEii(%"class.v8::internal::Assembler"* %4115, i64 %4148, i32 %4149, i32 7, i32 8) #11
  br label %23402

4150:                                             ; preds = %2
  %4151 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %4152 = load i32, i32* %4151, align 4
  %4153 = and i32 %4152, 255
  %4154 = add nuw nsw i32 %4153, 1
  %4155 = zext i32 %4154 to i64
  %4156 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4155, i32 0
  %4157 = load i64, i64* %4156, align 8
  %4158 = and i64 %4157, 7
  %4159 = icmp eq i64 %4158, 3
  %4160 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %4161 = load i64, i64* %4160, align 8
  %4162 = and i64 %4161, 7
  %4163 = icmp ugt i64 %4162, 4
  %4164 = and i64 %4161, 24
  %4165 = icmp eq i64 %4164, 0
  %4166 = and i1 %4163, %4165
  br i1 %4166, label %4167, label %4171

4167:                                             ; preds = %4150
  %4168 = lshr i64 %4161, 5
  %4169 = trunc i64 %4168 to i8
  %4170 = icmp ult i8 %4169, 12
  br label %4171

4171:                                             ; preds = %4150, %4167
  %4172 = phi i1 [ false, %4150 ], [ %4170, %4167 ]
  %4173 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %4159, label %4174, label %4200

4174:                                             ; preds = %4171
  br i1 %4172, label %4175, label %4183

4175:                                             ; preds = %4174
  %4176 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %4177 = ashr i64 %4161, 35
  %4178 = trunc i64 %4177 to i32
  %4179 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4155
  %4180 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %4176, %"class.v8::internal::compiler::InstructionOperand"* %4179) #11
  %4181 = extractvalue { i64, i64 } %4180, 1
  %4182 = and i64 %4181, 31
  call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %4173, i32 %4178, i64 %4182, i32 0, i32 4) #11
  br label %23402

4183:                                             ; preds = %4174
  %4184 = ashr i64 %4161, 35
  %4185 = trunc i64 %4184 to i32
  %4186 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %4185, i32 0) #11
  %4187 = extractvalue { i64, i32 } %4186, 0
  %4188 = extractvalue { i64, i32 } %4186, 1
  %4189 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %4190 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %4191 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %4190, i64 0, i32 1
  %4192 = load i32, i32* %4191, align 4
  %4193 = and i32 %4192, 255
  %4194 = add nuw nsw i32 %4193, 1
  %4195 = zext i32 %4194 to i64
  %4196 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %4190, i64 0, i32 5, i64 %4195
  %4197 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %4189, %"class.v8::internal::compiler::InstructionOperand"* %4196) #11
  %4198 = extractvalue { i64, i64 } %4197, 1
  %4199 = and i64 %4198, 31
  call void @_ZN2v88internal9Assembler5shiftENS0_7OperandENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %4173, i64 %4187, i32 %4188, i64 %4199, i32 0, i32 4) #11
  br label %23402

4200:                                             ; preds = %4171
  %4201 = ashr i64 %4161, 35
  %4202 = trunc i64 %4201 to i32
  br i1 %4172, label %4203, label %4204

4203:                                             ; preds = %4200
  tail call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterEii(%"class.v8::internal::Assembler"* %4173, i32 %4202, i32 0, i32 4) #11
  br label %23402

4204:                                             ; preds = %4200
  %4205 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %4202, i32 0) #11
  %4206 = extractvalue { i64, i32 } %4205, 0
  %4207 = extractvalue { i64, i32 } %4205, 1
  call void @_ZN2v88internal9Assembler5shiftENS0_7OperandEii(%"class.v8::internal::Assembler"* %4173, i64 %4206, i32 %4207, i32 0, i32 4) #11
  br label %23402

4208:                                             ; preds = %2
  %4209 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %4210 = load i32, i32* %4209, align 4
  %4211 = and i32 %4210, 255
  %4212 = add nuw nsw i32 %4211, 1
  %4213 = zext i32 %4212 to i64
  %4214 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4213, i32 0
  %4215 = load i64, i64* %4214, align 8
  %4216 = and i64 %4215, 7
  %4217 = icmp eq i64 %4216, 3
  %4218 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %4219 = load i64, i64* %4218, align 8
  %4220 = and i64 %4219, 7
  %4221 = icmp ugt i64 %4220, 4
  %4222 = and i64 %4219, 24
  %4223 = icmp eq i64 %4222, 0
  %4224 = and i1 %4221, %4223
  br i1 %4224, label %4225, label %4229

4225:                                             ; preds = %4208
  %4226 = lshr i64 %4219, 5
  %4227 = trunc i64 %4226 to i8
  %4228 = icmp ult i8 %4227, 12
  br label %4229

4229:                                             ; preds = %4208, %4225
  %4230 = phi i1 [ false, %4208 ], [ %4228, %4225 ]
  %4231 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %4217, label %4232, label %4258

4232:                                             ; preds = %4229
  br i1 %4230, label %4233, label %4241

4233:                                             ; preds = %4232
  %4234 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %4235 = ashr i64 %4219, 35
  %4236 = trunc i64 %4235 to i32
  %4237 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4213
  %4238 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %4234, %"class.v8::internal::compiler::InstructionOperand"* %4237) #11
  %4239 = extractvalue { i64, i64 } %4238, 1
  %4240 = and i64 %4239, 63
  call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %4231, i32 %4236, i64 %4240, i32 0, i32 8) #11
  br label %23402

4241:                                             ; preds = %4232
  %4242 = ashr i64 %4219, 35
  %4243 = trunc i64 %4242 to i32
  %4244 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %4243, i32 0) #11
  %4245 = extractvalue { i64, i32 } %4244, 0
  %4246 = extractvalue { i64, i32 } %4244, 1
  %4247 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %4248 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %4249 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %4248, i64 0, i32 1
  %4250 = load i32, i32* %4249, align 4
  %4251 = and i32 %4250, 255
  %4252 = add nuw nsw i32 %4251, 1
  %4253 = zext i32 %4252 to i64
  %4254 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %4248, i64 0, i32 5, i64 %4253
  %4255 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %4247, %"class.v8::internal::compiler::InstructionOperand"* %4254) #11
  %4256 = extractvalue { i64, i64 } %4255, 1
  %4257 = and i64 %4256, 63
  call void @_ZN2v88internal9Assembler5shiftENS0_7OperandENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %4231, i64 %4245, i32 %4246, i64 %4257, i32 0, i32 8) #11
  br label %23402

4258:                                             ; preds = %4229
  %4259 = ashr i64 %4219, 35
  %4260 = trunc i64 %4259 to i32
  br i1 %4230, label %4261, label %4262

4261:                                             ; preds = %4258
  tail call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterEii(%"class.v8::internal::Assembler"* %4231, i32 %4260, i32 0, i32 8) #11
  br label %23402

4262:                                             ; preds = %4258
  %4263 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %4260, i32 0) #11
  %4264 = extractvalue { i64, i32 } %4263, 0
  %4265 = extractvalue { i64, i32 } %4263, 1
  call void @_ZN2v88internal9Assembler5shiftENS0_7OperandEii(%"class.v8::internal::Assembler"* %4231, i64 %4264, i32 %4265, i32 0, i32 8) #11
  br label %23402

4266:                                             ; preds = %2
  %4267 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %4268 = load i32, i32* %4267, align 4
  %4269 = and i32 %4268, 255
  %4270 = add nuw nsw i32 %4269, 1
  %4271 = zext i32 %4270 to i64
  %4272 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4271, i32 0
  %4273 = load i64, i64* %4272, align 8
  %4274 = and i64 %4273, 7
  %4275 = icmp eq i64 %4274, 3
  %4276 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %4277 = load i64, i64* %4276, align 8
  %4278 = and i64 %4277, 7
  %4279 = icmp ugt i64 %4278, 4
  %4280 = and i64 %4277, 24
  %4281 = icmp eq i64 %4280, 0
  %4282 = and i1 %4279, %4281
  br i1 %4282, label %4283, label %4287

4283:                                             ; preds = %4266
  %4284 = lshr i64 %4277, 5
  %4285 = trunc i64 %4284 to i8
  %4286 = icmp ult i8 %4285, 12
  br label %4287

4287:                                             ; preds = %4266, %4283
  %4288 = phi i1 [ false, %4266 ], [ %4286, %4283 ]
  %4289 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %4275, label %4290, label %4316

4290:                                             ; preds = %4287
  br i1 %4288, label %4291, label %4299

4291:                                             ; preds = %4290
  %4292 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %4293 = ashr i64 %4277, 35
  %4294 = trunc i64 %4293 to i32
  %4295 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4271
  %4296 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %4292, %"class.v8::internal::compiler::InstructionOperand"* %4295) #11
  %4297 = extractvalue { i64, i64 } %4296, 1
  %4298 = and i64 %4297, 31
  call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %4289, i32 %4294, i64 %4298, i32 1, i32 4) #11
  br label %23402

4299:                                             ; preds = %4290
  %4300 = ashr i64 %4277, 35
  %4301 = trunc i64 %4300 to i32
  %4302 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %4301, i32 0) #11
  %4303 = extractvalue { i64, i32 } %4302, 0
  %4304 = extractvalue { i64, i32 } %4302, 1
  %4305 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %4306 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %4307 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %4306, i64 0, i32 1
  %4308 = load i32, i32* %4307, align 4
  %4309 = and i32 %4308, 255
  %4310 = add nuw nsw i32 %4309, 1
  %4311 = zext i32 %4310 to i64
  %4312 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %4306, i64 0, i32 5, i64 %4311
  %4313 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %4305, %"class.v8::internal::compiler::InstructionOperand"* %4312) #11
  %4314 = extractvalue { i64, i64 } %4313, 1
  %4315 = and i64 %4314, 31
  call void @_ZN2v88internal9Assembler5shiftENS0_7OperandENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %4289, i64 %4303, i32 %4304, i64 %4315, i32 1, i32 4) #11
  br label %23402

4316:                                             ; preds = %4287
  %4317 = ashr i64 %4277, 35
  %4318 = trunc i64 %4317 to i32
  br i1 %4288, label %4319, label %4320

4319:                                             ; preds = %4316
  tail call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterEii(%"class.v8::internal::Assembler"* %4289, i32 %4318, i32 1, i32 4) #11
  br label %23402

4320:                                             ; preds = %4316
  %4321 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %4318, i32 0) #11
  %4322 = extractvalue { i64, i32 } %4321, 0
  %4323 = extractvalue { i64, i32 } %4321, 1
  call void @_ZN2v88internal9Assembler5shiftENS0_7OperandEii(%"class.v8::internal::Assembler"* %4289, i64 %4322, i32 %4323, i32 1, i32 4) #11
  br label %23402

4324:                                             ; preds = %2
  %4325 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %4326 = load i32, i32* %4325, align 4
  %4327 = and i32 %4326, 255
  %4328 = add nuw nsw i32 %4327, 1
  %4329 = zext i32 %4328 to i64
  %4330 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4329, i32 0
  %4331 = load i64, i64* %4330, align 8
  %4332 = and i64 %4331, 7
  %4333 = icmp eq i64 %4332, 3
  %4334 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %4335 = load i64, i64* %4334, align 8
  %4336 = and i64 %4335, 7
  %4337 = icmp ugt i64 %4336, 4
  %4338 = and i64 %4335, 24
  %4339 = icmp eq i64 %4338, 0
  %4340 = and i1 %4337, %4339
  br i1 %4340, label %4341, label %4345

4341:                                             ; preds = %4324
  %4342 = lshr i64 %4335, 5
  %4343 = trunc i64 %4342 to i8
  %4344 = icmp ult i8 %4343, 12
  br label %4345

4345:                                             ; preds = %4324, %4341
  %4346 = phi i1 [ false, %4324 ], [ %4344, %4341 ]
  %4347 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %4333, label %4348, label %4374

4348:                                             ; preds = %4345
  br i1 %4346, label %4349, label %4357

4349:                                             ; preds = %4348
  %4350 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %4351 = ashr i64 %4335, 35
  %4352 = trunc i64 %4351 to i32
  %4353 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4329
  %4354 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %4350, %"class.v8::internal::compiler::InstructionOperand"* %4353) #11
  %4355 = extractvalue { i64, i64 } %4354, 1
  %4356 = and i64 %4355, 63
  call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %4347, i32 %4352, i64 %4356, i32 1, i32 8) #11
  br label %23402

4357:                                             ; preds = %4348
  %4358 = ashr i64 %4335, 35
  %4359 = trunc i64 %4358 to i32
  %4360 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %4359, i32 0) #11
  %4361 = extractvalue { i64, i32 } %4360, 0
  %4362 = extractvalue { i64, i32 } %4360, 1
  %4363 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %4364 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %4365 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %4364, i64 0, i32 1
  %4366 = load i32, i32* %4365, align 4
  %4367 = and i32 %4366, 255
  %4368 = add nuw nsw i32 %4367, 1
  %4369 = zext i32 %4368 to i64
  %4370 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %4364, i64 0, i32 5, i64 %4369
  %4371 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %4363, %"class.v8::internal::compiler::InstructionOperand"* %4370) #11
  %4372 = extractvalue { i64, i64 } %4371, 1
  %4373 = and i64 %4372, 63
  call void @_ZN2v88internal9Assembler5shiftENS0_7OperandENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %4347, i64 %4361, i32 %4362, i64 %4373, i32 1, i32 8) #11
  br label %23402

4374:                                             ; preds = %4345
  %4375 = ashr i64 %4335, 35
  %4376 = trunc i64 %4375 to i32
  br i1 %4346, label %4377, label %4378

4377:                                             ; preds = %4374
  tail call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterEii(%"class.v8::internal::Assembler"* %4347, i32 %4376, i32 1, i32 8) #11
  br label %23402

4378:                                             ; preds = %4374
  %4379 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %4376, i32 0) #11
  %4380 = extractvalue { i64, i32 } %4379, 0
  %4381 = extractvalue { i64, i32 } %4379, 1
  call void @_ZN2v88internal9Assembler5shiftENS0_7OperandEii(%"class.v8::internal::Assembler"* %4347, i64 %4380, i32 %4381, i32 1, i32 8) #11
  br label %23402

4382:                                             ; preds = %2
  %4383 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %4384 = load i32, i32* %4383, align 4
  %4385 = and i32 %4384, 255
  %4386 = zext i32 %4385 to i64
  %4387 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4386, i32 0
  %4388 = load i64, i64* %4387, align 8
  %4389 = and i64 %4388, 7
  %4390 = icmp ugt i64 %4389, 4
  %4391 = and i64 %4388, 24
  %4392 = icmp eq i64 %4391, 0
  %4393 = and i1 %4390, %4392
  br i1 %4393, label %4400, label %4394

4394:                                             ; preds = %4382
  %4395 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %4396 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %4397 = load i64, i64* %4396, align 8
  %4398 = ashr i64 %4397, 35
  %4399 = trunc i64 %4398 to i32
  br label %4412

4400:                                             ; preds = %4382
  %4401 = lshr i64 %4388, 5
  %4402 = trunc i64 %4401 to i8
  %4403 = icmp ult i8 %4402, 12
  %4404 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %4405 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %4406 = load i64, i64* %4405, align 8
  %4407 = ashr i64 %4406, 35
  %4408 = trunc i64 %4407 to i32
  br i1 %4403, label %4409, label %4412

4409:                                             ; preds = %4400
  %4410 = ashr i64 %4388, 35
  %4411 = trunc i64 %4410 to i32
  tail call void @_ZN2v88internal14TurboAssembler6LzcntqENS0_8RegisterES2_(%"class.v8::internal::TurboAssembler"* %4404, i32 %4408, i32 %4411) #11
  br label %23402

4412:                                             ; preds = %4394, %4400
  %4413 = phi i32 [ %4399, %4394 ], [ %4408, %4400 ]
  %4414 = phi %"class.v8::internal::TurboAssembler"* [ %4395, %4394 ], [ %4404, %4400 ]
  %4415 = ashr i64 %4388, 35
  %4416 = trunc i64 %4415 to i32
  %4417 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %4416, i32 0) #11
  %4418 = extractvalue { i64, i32 } %4417, 0
  %4419 = extractvalue { i64, i32 } %4417, 1
  call void @_ZN2v88internal14TurboAssembler6LzcntqENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %4414, i32 %4413, i64 %4418, i32 %4419) #11
  br label %23402

4420:                                             ; preds = %2
  %4421 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %4422 = load i32, i32* %4421, align 4
  %4423 = and i32 %4422, 255
  %4424 = zext i32 %4423 to i64
  %4425 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4424, i32 0
  %4426 = load i64, i64* %4425, align 8
  %4427 = and i64 %4426, 7
  %4428 = icmp ugt i64 %4427, 4
  %4429 = and i64 %4426, 24
  %4430 = icmp eq i64 %4429, 0
  %4431 = and i1 %4428, %4430
  br i1 %4431, label %4438, label %4432

4432:                                             ; preds = %4420
  %4433 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %4434 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %4435 = load i64, i64* %4434, align 8
  %4436 = ashr i64 %4435, 35
  %4437 = trunc i64 %4436 to i32
  br label %4450

4438:                                             ; preds = %4420
  %4439 = lshr i64 %4426, 5
  %4440 = trunc i64 %4439 to i8
  %4441 = icmp ult i8 %4440, 12
  %4442 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %4443 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %4444 = load i64, i64* %4443, align 8
  %4445 = ashr i64 %4444, 35
  %4446 = trunc i64 %4445 to i32
  br i1 %4441, label %4447, label %4450

4447:                                             ; preds = %4438
  %4448 = ashr i64 %4426, 35
  %4449 = trunc i64 %4448 to i32
  tail call void @_ZN2v88internal14TurboAssembler6LzcntlENS0_8RegisterES2_(%"class.v8::internal::TurboAssembler"* %4442, i32 %4446, i32 %4449) #11
  br label %23402

4450:                                             ; preds = %4432, %4438
  %4451 = phi i32 [ %4437, %4432 ], [ %4446, %4438 ]
  %4452 = phi %"class.v8::internal::TurboAssembler"* [ %4433, %4432 ], [ %4442, %4438 ]
  %4453 = ashr i64 %4426, 35
  %4454 = trunc i64 %4453 to i32
  %4455 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %4454, i32 0) #11
  %4456 = extractvalue { i64, i32 } %4455, 0
  %4457 = extractvalue { i64, i32 } %4455, 1
  call void @_ZN2v88internal14TurboAssembler6LzcntlENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %4452, i32 %4451, i64 %4456, i32 %4457) #11
  br label %23402

4458:                                             ; preds = %2
  %4459 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %4460 = load i32, i32* %4459, align 4
  %4461 = and i32 %4460, 255
  %4462 = zext i32 %4461 to i64
  %4463 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4462, i32 0
  %4464 = load i64, i64* %4463, align 8
  %4465 = and i64 %4464, 7
  %4466 = icmp ugt i64 %4465, 4
  %4467 = and i64 %4464, 24
  %4468 = icmp eq i64 %4467, 0
  %4469 = and i1 %4466, %4468
  br i1 %4469, label %4476, label %4470

4470:                                             ; preds = %4458
  %4471 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %4472 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %4473 = load i64, i64* %4472, align 8
  %4474 = ashr i64 %4473, 35
  %4475 = trunc i64 %4474 to i32
  br label %4488

4476:                                             ; preds = %4458
  %4477 = lshr i64 %4464, 5
  %4478 = trunc i64 %4477 to i8
  %4479 = icmp ult i8 %4478, 12
  %4480 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %4481 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %4482 = load i64, i64* %4481, align 8
  %4483 = ashr i64 %4482, 35
  %4484 = trunc i64 %4483 to i32
  br i1 %4479, label %4485, label %4488

4485:                                             ; preds = %4476
  %4486 = ashr i64 %4464, 35
  %4487 = trunc i64 %4486 to i32
  tail call void @_ZN2v88internal14TurboAssembler6TzcntqENS0_8RegisterES2_(%"class.v8::internal::TurboAssembler"* %4480, i32 %4484, i32 %4487) #11
  br label %23402

4488:                                             ; preds = %4470, %4476
  %4489 = phi i32 [ %4475, %4470 ], [ %4484, %4476 ]
  %4490 = phi %"class.v8::internal::TurboAssembler"* [ %4471, %4470 ], [ %4480, %4476 ]
  %4491 = ashr i64 %4464, 35
  %4492 = trunc i64 %4491 to i32
  %4493 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %4492, i32 0) #11
  %4494 = extractvalue { i64, i32 } %4493, 0
  %4495 = extractvalue { i64, i32 } %4493, 1
  call void @_ZN2v88internal14TurboAssembler6TzcntqENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %4490, i32 %4489, i64 %4494, i32 %4495) #11
  br label %23402

4496:                                             ; preds = %2
  %4497 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %4498 = load i32, i32* %4497, align 4
  %4499 = and i32 %4498, 255
  %4500 = zext i32 %4499 to i64
  %4501 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4500, i32 0
  %4502 = load i64, i64* %4501, align 8
  %4503 = and i64 %4502, 7
  %4504 = icmp ugt i64 %4503, 4
  %4505 = and i64 %4502, 24
  %4506 = icmp eq i64 %4505, 0
  %4507 = and i1 %4504, %4506
  br i1 %4507, label %4514, label %4508

4508:                                             ; preds = %4496
  %4509 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %4510 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %4511 = load i64, i64* %4510, align 8
  %4512 = ashr i64 %4511, 35
  %4513 = trunc i64 %4512 to i32
  br label %4526

4514:                                             ; preds = %4496
  %4515 = lshr i64 %4502, 5
  %4516 = trunc i64 %4515 to i8
  %4517 = icmp ult i8 %4516, 12
  %4518 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %4519 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %4520 = load i64, i64* %4519, align 8
  %4521 = ashr i64 %4520, 35
  %4522 = trunc i64 %4521 to i32
  br i1 %4517, label %4523, label %4526

4523:                                             ; preds = %4514
  %4524 = ashr i64 %4502, 35
  %4525 = trunc i64 %4524 to i32
  tail call void @_ZN2v88internal14TurboAssembler6TzcntlENS0_8RegisterES2_(%"class.v8::internal::TurboAssembler"* %4518, i32 %4522, i32 %4525) #11
  br label %23402

4526:                                             ; preds = %4508, %4514
  %4527 = phi i32 [ %4513, %4508 ], [ %4522, %4514 ]
  %4528 = phi %"class.v8::internal::TurboAssembler"* [ %4509, %4508 ], [ %4518, %4514 ]
  %4529 = ashr i64 %4502, 35
  %4530 = trunc i64 %4529 to i32
  %4531 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %4530, i32 0) #11
  %4532 = extractvalue { i64, i32 } %4531, 0
  %4533 = extractvalue { i64, i32 } %4531, 1
  call void @_ZN2v88internal14TurboAssembler6TzcntlENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %4528, i32 %4527, i64 %4532, i32 %4533) #11
  br label %23402

4534:                                             ; preds = %2
  %4535 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %4536 = load i32, i32* %4535, align 4
  %4537 = and i32 %4536, 255
  %4538 = zext i32 %4537 to i64
  %4539 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4538, i32 0
  %4540 = load i64, i64* %4539, align 8
  %4541 = and i64 %4540, 7
  %4542 = icmp ugt i64 %4541, 4
  %4543 = and i64 %4540, 24
  %4544 = icmp eq i64 %4543, 0
  %4545 = and i1 %4542, %4544
  br i1 %4545, label %4552, label %4546

4546:                                             ; preds = %4534
  %4547 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %4548 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %4549 = load i64, i64* %4548, align 8
  %4550 = ashr i64 %4549, 35
  %4551 = trunc i64 %4550 to i32
  br label %4564

4552:                                             ; preds = %4534
  %4553 = lshr i64 %4540, 5
  %4554 = trunc i64 %4553 to i8
  %4555 = icmp ult i8 %4554, 12
  %4556 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %4557 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %4558 = load i64, i64* %4557, align 8
  %4559 = ashr i64 %4558, 35
  %4560 = trunc i64 %4559 to i32
  br i1 %4555, label %4561, label %4564

4561:                                             ; preds = %4552
  %4562 = ashr i64 %4540, 35
  %4563 = trunc i64 %4562 to i32
  tail call void @_ZN2v88internal14TurboAssembler7PopcntqENS0_8RegisterES2_(%"class.v8::internal::TurboAssembler"* %4556, i32 %4560, i32 %4563) #11
  br label %23402

4564:                                             ; preds = %4546, %4552
  %4565 = phi i32 [ %4551, %4546 ], [ %4560, %4552 ]
  %4566 = phi %"class.v8::internal::TurboAssembler"* [ %4547, %4546 ], [ %4556, %4552 ]
  %4567 = ashr i64 %4540, 35
  %4568 = trunc i64 %4567 to i32
  %4569 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %4568, i32 0) #11
  %4570 = extractvalue { i64, i32 } %4569, 0
  %4571 = extractvalue { i64, i32 } %4569, 1
  call void @_ZN2v88internal14TurboAssembler7PopcntqENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %4566, i32 %4565, i64 %4570, i32 %4571) #11
  br label %23402

4572:                                             ; preds = %2
  %4573 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %4574 = load i32, i32* %4573, align 4
  %4575 = and i32 %4574, 255
  %4576 = zext i32 %4575 to i64
  %4577 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4576, i32 0
  %4578 = load i64, i64* %4577, align 8
  %4579 = and i64 %4578, 7
  %4580 = icmp ugt i64 %4579, 4
  %4581 = and i64 %4578, 24
  %4582 = icmp eq i64 %4581, 0
  %4583 = and i1 %4580, %4582
  br i1 %4583, label %4590, label %4584

4584:                                             ; preds = %4572
  %4585 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %4586 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %4587 = load i64, i64* %4586, align 8
  %4588 = ashr i64 %4587, 35
  %4589 = trunc i64 %4588 to i32
  br label %4602

4590:                                             ; preds = %4572
  %4591 = lshr i64 %4578, 5
  %4592 = trunc i64 %4591 to i8
  %4593 = icmp ult i8 %4592, 12
  %4594 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %4595 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %4596 = load i64, i64* %4595, align 8
  %4597 = ashr i64 %4596, 35
  %4598 = trunc i64 %4597 to i32
  br i1 %4593, label %4599, label %4602

4599:                                             ; preds = %4590
  %4600 = ashr i64 %4578, 35
  %4601 = trunc i64 %4600 to i32
  tail call void @_ZN2v88internal14TurboAssembler7PopcntlENS0_8RegisterES2_(%"class.v8::internal::TurboAssembler"* %4594, i32 %4598, i32 %4601) #11
  br label %23402

4602:                                             ; preds = %4584, %4590
  %4603 = phi i32 [ %4589, %4584 ], [ %4598, %4590 ]
  %4604 = phi %"class.v8::internal::TurboAssembler"* [ %4585, %4584 ], [ %4594, %4590 ]
  %4605 = ashr i64 %4578, 35
  %4606 = trunc i64 %4605 to i32
  %4607 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %4606, i32 0) #11
  %4608 = extractvalue { i64, i32 } %4607, 0
  %4609 = extractvalue { i64, i32 } %4607, 1
  call void @_ZN2v88internal14TurboAssembler7PopcntlENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %4604, i32 %4603, i64 %4608, i32 %4609) #11
  br label %23402

4610:                                             ; preds = %2
  %4611 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %4612 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %4613 = load i64, i64* %4612, align 8
  %4614 = ashr i64 %4613, 35
  %4615 = trunc i64 %4614 to i32
  tail call void @_ZN2v88internal9Assembler6bswapqENS0_8RegisterE(%"class.v8::internal::Assembler"* %4611, i32 %4615) #11
  br label %23402

4616:                                             ; preds = %2
  %4617 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %4618 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %4619 = load i64, i64* %4618, align 8
  %4620 = ashr i64 %4619, 35
  %4621 = trunc i64 %4620 to i32
  tail call void @_ZN2v88internal9Assembler6bswaplENS0_8RegisterE(%"class.v8::internal::Assembler"* %4617, i32 %4621) #11
  br label %23402

4622:                                             ; preds = %2
  %4623 = and i32 %275, 15872
  %4624 = icmp eq i32 %4623, 0
  br i1 %4624, label %4646, label %4625

4625:                                             ; preds = %4622
  %4626 = bitcast i64* %178 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4626) #11
  store i64 1, i64* %178, align 8
  %4627 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %178)
  %4628 = extractvalue { i64, i32 } %4627, 0
  %4629 = extractvalue { i64, i32 } %4627, 1
  %4630 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %4631 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %4630, i64 0, i32 1
  %4632 = load i32, i32* %4631, align 4
  %4633 = and i32 %4632, 255
  %4634 = zext i32 %4633 to i64
  %4635 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %4630, i64 0, i32 5, i64 %4634, i32 0
  %4636 = load i64, i64* %4635, align 8
  %4637 = ashr i64 %4636, 35
  %4638 = trunc i64 %4637 to i32
  %4639 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %4640 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %4641 = and i32 %4640, 32
  %4642 = icmp eq i32 %4641, 0
  br i1 %4642, label %4644, label %4643

4643:                                             ; preds = %4625
  call void @_ZN2v88internal9Assembler8vucomissENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %4639, i32 %4638, i64 %4628, i32 %4629) #11
  br label %4645

4644:                                             ; preds = %4625
  call void @_ZN2v88internal9Assembler7ucomissENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %4639, i32 %4638, i64 %4628, i32 %4629) #11
  br label %4645

4645:                                             ; preds = %4643, %4644
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4626) #11
  br label %23402

4646:                                             ; preds = %4622
  %4647 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %4648 = load i32, i32* %4647, align 4
  %4649 = and i32 %4648, 255
  %4650 = add nuw nsw i32 %4649, 1
  %4651 = zext i32 %4650 to i64
  %4652 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4651, i32 0
  %4653 = load i64, i64* %4652, align 8
  %4654 = and i64 %4653, 7
  %4655 = icmp ugt i64 %4654, 4
  %4656 = and i64 %4653, 24
  %4657 = icmp eq i64 %4656, 0
  %4658 = and i1 %4655, %4657
  br i1 %4658, label %4665, label %4659

4659:                                             ; preds = %4646
  %4660 = zext i32 %4649 to i64
  %4661 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4660, i32 0
  %4662 = load i64, i64* %4661, align 8
  %4663 = ashr i64 %4662, 35
  %4664 = trunc i64 %4663 to i32
  br label %4683

4665:                                             ; preds = %4646
  %4666 = lshr i64 %4653, 5
  %4667 = trunc i64 %4666 to i8
  %4668 = icmp ugt i8 %4667, 11
  %4669 = zext i32 %4649 to i64
  %4670 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4669, i32 0
  %4671 = load i64, i64* %4670, align 8
  %4672 = ashr i64 %4671, 35
  %4673 = trunc i64 %4672 to i32
  br i1 %4668, label %4674, label %4683

4674:                                             ; preds = %4665
  %4675 = ashr i64 %4653, 35
  %4676 = trunc i64 %4675 to i32
  %4677 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %4678 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %4679 = and i32 %4678, 32
  %4680 = icmp eq i32 %4679, 0
  br i1 %4680, label %4682, label %4681

4681:                                             ; preds = %4674
  tail call void @_ZN2v88internal9Assembler8vucomissENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %4677, i32 %4673, i32 %4676) #11
  br label %23402

4682:                                             ; preds = %4674
  tail call void @_ZN2v88internal9Assembler7ucomissENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %4677, i32 %4673, i32 %4676) #11
  br label %23402

4683:                                             ; preds = %4659, %4665
  %4684 = phi i32 [ %4664, %4659 ], [ %4673, %4665 ]
  %4685 = ashr i64 %4653, 35
  %4686 = trunc i64 %4685 to i32
  %4687 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %4686, i32 0) #11
  %4688 = extractvalue { i64, i32 } %4687, 0
  %4689 = extractvalue { i64, i32 } %4687, 1
  %4690 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %4691 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %4692 = and i32 %4691, 32
  %4693 = icmp eq i32 %4692, 0
  br i1 %4693, label %4695, label %4694

4694:                                             ; preds = %4683
  call void @_ZN2v88internal9Assembler8vucomissENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %4690, i32 %4684, i64 %4688, i32 %4689) #11
  br label %23402

4695:                                             ; preds = %4683
  call void @_ZN2v88internal9Assembler7ucomissENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %4690, i32 %4684, i64 %4688, i32 %4689) #11
  br label %23402

4696:                                             ; preds = %2
  %4697 = and i32 %275, 15872
  %4698 = icmp eq i32 %4697, 0
  br i1 %4698, label %4714, label %4699

4699:                                             ; preds = %4696
  %4700 = bitcast i64* %179 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4700) #11
  store i64 1, i64* %179, align 8
  %4701 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %179)
  %4702 = extractvalue { i64, i32 } %4701, 0
  %4703 = extractvalue { i64, i32 } %4701, 1
  %4704 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %4705 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %4706 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %4705, i64 0, i32 1
  %4707 = load i32, i32* %4706, align 4
  %4708 = and i32 %4707, 255
  %4709 = zext i32 %4708 to i64
  %4710 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %4705, i64 0, i32 5, i64 %4709, i32 0
  %4711 = load i64, i64* %4710, align 8
  %4712 = ashr i64 %4711, 35
  %4713 = trunc i64 %4712 to i32
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %4704, i32 %4713, i64 %4702, i32 %4703, i8 zeroext -13, i8 zeroext 15, i8 zeroext 88) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4700) #11
  br label %23402

4714:                                             ; preds = %4696
  %4715 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %4716 = load i32, i32* %4715, align 4
  %4717 = and i32 %4716, 255
  %4718 = add nuw nsw i32 %4717, 1
  %4719 = zext i32 %4718 to i64
  %4720 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4719, i32 0
  %4721 = load i64, i64* %4720, align 8
  %4722 = and i64 %4721, 7
  %4723 = icmp ugt i64 %4722, 4
  %4724 = and i64 %4721, 24
  %4725 = icmp eq i64 %4724, 0
  %4726 = and i1 %4723, %4725
  br i1 %4726, label %4734, label %4727

4727:                                             ; preds = %4714
  %4728 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %4729 = zext i32 %4717 to i64
  %4730 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4729, i32 0
  %4731 = load i64, i64* %4730, align 8
  %4732 = ashr i64 %4731, 35
  %4733 = trunc i64 %4732 to i32
  br label %4747

4734:                                             ; preds = %4714
  %4735 = lshr i64 %4721, 5
  %4736 = trunc i64 %4735 to i8
  %4737 = icmp ugt i8 %4736, 11
  %4738 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %4739 = zext i32 %4717 to i64
  %4740 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4739, i32 0
  %4741 = load i64, i64* %4740, align 8
  %4742 = ashr i64 %4741, 35
  %4743 = trunc i64 %4742 to i32
  br i1 %4737, label %4744, label %4747

4744:                                             ; preds = %4734
  %4745 = ashr i64 %4721, 35
  %4746 = trunc i64 %4745 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %4738, i32 %4743, i32 %4746, i8 zeroext -13, i8 zeroext 15, i8 zeroext 88) #11
  br label %23402

4747:                                             ; preds = %4727, %4734
  %4748 = phi i32 [ %4733, %4727 ], [ %4743, %4734 ]
  %4749 = phi %"class.v8::internal::Assembler"* [ %4728, %4727 ], [ %4738, %4734 ]
  %4750 = ashr i64 %4721, 35
  %4751 = trunc i64 %4750 to i32
  %4752 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %4751, i32 0) #11
  %4753 = extractvalue { i64, i32 } %4752, 0
  %4754 = extractvalue { i64, i32 } %4752, 1
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %4749, i32 %4748, i64 %4753, i32 %4754, i8 zeroext -13, i8 zeroext 15, i8 zeroext 88) #11
  br label %23402

4755:                                             ; preds = %2
  %4756 = and i32 %275, 15872
  %4757 = icmp eq i32 %4756, 0
  br i1 %4757, label %4773, label %4758

4758:                                             ; preds = %4755
  %4759 = bitcast i64* %180 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4759) #11
  store i64 1, i64* %180, align 8
  %4760 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %180)
  %4761 = extractvalue { i64, i32 } %4760, 0
  %4762 = extractvalue { i64, i32 } %4760, 1
  %4763 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %4764 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %4765 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %4764, i64 0, i32 1
  %4766 = load i32, i32* %4765, align 4
  %4767 = and i32 %4766, 255
  %4768 = zext i32 %4767 to i64
  %4769 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %4764, i64 0, i32 5, i64 %4768, i32 0
  %4770 = load i64, i64* %4769, align 8
  %4771 = ashr i64 %4770, 35
  %4772 = trunc i64 %4771 to i32
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %4763, i32 %4772, i64 %4761, i32 %4762, i8 zeroext -13, i8 zeroext 15, i8 zeroext 92) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4759) #11
  br label %23402

4773:                                             ; preds = %4755
  %4774 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %4775 = load i32, i32* %4774, align 4
  %4776 = and i32 %4775, 255
  %4777 = add nuw nsw i32 %4776, 1
  %4778 = zext i32 %4777 to i64
  %4779 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4778, i32 0
  %4780 = load i64, i64* %4779, align 8
  %4781 = and i64 %4780, 7
  %4782 = icmp ugt i64 %4781, 4
  %4783 = and i64 %4780, 24
  %4784 = icmp eq i64 %4783, 0
  %4785 = and i1 %4782, %4784
  br i1 %4785, label %4793, label %4786

4786:                                             ; preds = %4773
  %4787 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %4788 = zext i32 %4776 to i64
  %4789 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4788, i32 0
  %4790 = load i64, i64* %4789, align 8
  %4791 = ashr i64 %4790, 35
  %4792 = trunc i64 %4791 to i32
  br label %4806

4793:                                             ; preds = %4773
  %4794 = lshr i64 %4780, 5
  %4795 = trunc i64 %4794 to i8
  %4796 = icmp ugt i8 %4795, 11
  %4797 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %4798 = zext i32 %4776 to i64
  %4799 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4798, i32 0
  %4800 = load i64, i64* %4799, align 8
  %4801 = ashr i64 %4800, 35
  %4802 = trunc i64 %4801 to i32
  br i1 %4796, label %4803, label %4806

4803:                                             ; preds = %4793
  %4804 = ashr i64 %4780, 35
  %4805 = trunc i64 %4804 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %4797, i32 %4802, i32 %4805, i8 zeroext -13, i8 zeroext 15, i8 zeroext 92) #11
  br label %23402

4806:                                             ; preds = %4786, %4793
  %4807 = phi i32 [ %4792, %4786 ], [ %4802, %4793 ]
  %4808 = phi %"class.v8::internal::Assembler"* [ %4787, %4786 ], [ %4797, %4793 ]
  %4809 = ashr i64 %4780, 35
  %4810 = trunc i64 %4809 to i32
  %4811 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %4810, i32 0) #11
  %4812 = extractvalue { i64, i32 } %4811, 0
  %4813 = extractvalue { i64, i32 } %4811, 1
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %4808, i32 %4807, i64 %4812, i32 %4813, i8 zeroext -13, i8 zeroext 15, i8 zeroext 92) #11
  br label %23402

4814:                                             ; preds = %2
  %4815 = and i32 %275, 15872
  %4816 = icmp eq i32 %4815, 0
  br i1 %4816, label %4832, label %4817

4817:                                             ; preds = %4814
  %4818 = bitcast i64* %181 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4818) #11
  store i64 1, i64* %181, align 8
  %4819 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %181)
  %4820 = extractvalue { i64, i32 } %4819, 0
  %4821 = extractvalue { i64, i32 } %4819, 1
  %4822 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %4823 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %4824 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %4823, i64 0, i32 1
  %4825 = load i32, i32* %4824, align 4
  %4826 = and i32 %4825, 255
  %4827 = zext i32 %4826 to i64
  %4828 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %4823, i64 0, i32 5, i64 %4827, i32 0
  %4829 = load i64, i64* %4828, align 8
  %4830 = ashr i64 %4829, 35
  %4831 = trunc i64 %4830 to i32
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %4822, i32 %4831, i64 %4820, i32 %4821, i8 zeroext -13, i8 zeroext 15, i8 zeroext 89) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4818) #11
  br label %23402

4832:                                             ; preds = %4814
  %4833 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %4834 = load i32, i32* %4833, align 4
  %4835 = and i32 %4834, 255
  %4836 = add nuw nsw i32 %4835, 1
  %4837 = zext i32 %4836 to i64
  %4838 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4837, i32 0
  %4839 = load i64, i64* %4838, align 8
  %4840 = and i64 %4839, 7
  %4841 = icmp ugt i64 %4840, 4
  %4842 = and i64 %4839, 24
  %4843 = icmp eq i64 %4842, 0
  %4844 = and i1 %4841, %4843
  br i1 %4844, label %4852, label %4845

4845:                                             ; preds = %4832
  %4846 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %4847 = zext i32 %4835 to i64
  %4848 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4847, i32 0
  %4849 = load i64, i64* %4848, align 8
  %4850 = ashr i64 %4849, 35
  %4851 = trunc i64 %4850 to i32
  br label %4865

4852:                                             ; preds = %4832
  %4853 = lshr i64 %4839, 5
  %4854 = trunc i64 %4853 to i8
  %4855 = icmp ugt i8 %4854, 11
  %4856 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %4857 = zext i32 %4835 to i64
  %4858 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4857, i32 0
  %4859 = load i64, i64* %4858, align 8
  %4860 = ashr i64 %4859, 35
  %4861 = trunc i64 %4860 to i32
  br i1 %4855, label %4862, label %4865

4862:                                             ; preds = %4852
  %4863 = ashr i64 %4839, 35
  %4864 = trunc i64 %4863 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %4856, i32 %4861, i32 %4864, i8 zeroext -13, i8 zeroext 15, i8 zeroext 89) #11
  br label %23402

4865:                                             ; preds = %4845, %4852
  %4866 = phi i32 [ %4851, %4845 ], [ %4861, %4852 ]
  %4867 = phi %"class.v8::internal::Assembler"* [ %4846, %4845 ], [ %4856, %4852 ]
  %4868 = ashr i64 %4839, 35
  %4869 = trunc i64 %4868 to i32
  %4870 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %4869, i32 0) #11
  %4871 = extractvalue { i64, i32 } %4870, 0
  %4872 = extractvalue { i64, i32 } %4870, 1
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %4867, i32 %4866, i64 %4871, i32 %4872, i8 zeroext -13, i8 zeroext 15, i8 zeroext 89) #11
  br label %23402

4873:                                             ; preds = %2
  %4874 = and i32 %275, 15872
  %4875 = icmp eq i32 %4874, 0
  br i1 %4875, label %4891, label %4876

4876:                                             ; preds = %4873
  %4877 = bitcast i64* %182 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4877) #11
  store i64 1, i64* %182, align 8
  %4878 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %182)
  %4879 = extractvalue { i64, i32 } %4878, 0
  %4880 = extractvalue { i64, i32 } %4878, 1
  %4881 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %4882 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %4883 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %4882, i64 0, i32 1
  %4884 = load i32, i32* %4883, align 4
  %4885 = and i32 %4884, 255
  %4886 = zext i32 %4885 to i64
  %4887 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %4882, i64 0, i32 5, i64 %4886, i32 0
  %4888 = load i64, i64* %4887, align 8
  %4889 = ashr i64 %4888, 35
  %4890 = trunc i64 %4889 to i32
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %4881, i32 %4890, i64 %4879, i32 %4880, i8 zeroext -13, i8 zeroext 15, i8 zeroext 94) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4877) #11
  br label %4932

4891:                                             ; preds = %4873
  %4892 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %4893 = load i32, i32* %4892, align 4
  %4894 = and i32 %4893, 255
  %4895 = add nuw nsw i32 %4894, 1
  %4896 = zext i32 %4895 to i64
  %4897 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4896, i32 0
  %4898 = load i64, i64* %4897, align 8
  %4899 = and i64 %4898, 7
  %4900 = icmp ugt i64 %4899, 4
  %4901 = and i64 %4898, 24
  %4902 = icmp eq i64 %4901, 0
  %4903 = and i1 %4900, %4902
  br i1 %4903, label %4911, label %4904

4904:                                             ; preds = %4891
  %4905 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %4906 = zext i32 %4894 to i64
  %4907 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4906, i32 0
  %4908 = load i64, i64* %4907, align 8
  %4909 = ashr i64 %4908, 35
  %4910 = trunc i64 %4909 to i32
  br label %4924

4911:                                             ; preds = %4891
  %4912 = lshr i64 %4898, 5
  %4913 = trunc i64 %4912 to i8
  %4914 = icmp ugt i8 %4913, 11
  %4915 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %4916 = zext i32 %4894 to i64
  %4917 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4916, i32 0
  %4918 = load i64, i64* %4917, align 8
  %4919 = ashr i64 %4918, 35
  %4920 = trunc i64 %4919 to i32
  br i1 %4914, label %4921, label %4924

4921:                                             ; preds = %4911
  %4922 = ashr i64 %4898, 35
  %4923 = trunc i64 %4922 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %4915, i32 %4920, i32 %4923, i8 zeroext -13, i8 zeroext 15, i8 zeroext 94) #11
  br label %4932

4924:                                             ; preds = %4904, %4911
  %4925 = phi i32 [ %4910, %4904 ], [ %4920, %4911 ]
  %4926 = phi %"class.v8::internal::Assembler"* [ %4905, %4904 ], [ %4915, %4911 ]
  %4927 = ashr i64 %4898, 35
  %4928 = trunc i64 %4927 to i32
  %4929 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %4928, i32 0) #11
  %4930 = extractvalue { i64, i32 } %4929, 0
  %4931 = extractvalue { i64, i32 } %4929, 1
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %4926, i32 %4925, i64 %4930, i32 %4931, i8 zeroext -13, i8 zeroext 15, i8 zeroext 94) #11
  br label %4932

4932:                                             ; preds = %4921, %4924, %4876
  %4933 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %4934 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %4935 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %4934, i64 0, i32 5, i64 0, i32 0
  %4936 = load i64, i64* %4935, align 8
  %4937 = ashr i64 %4936, 35
  %4938 = trunc i64 %4937 to i32
  call void @_ZN2v88internal9Assembler6movapsENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %4933, i32 %4938, i32 %4938) #11
  br label %23402

4939:                                             ; preds = %2
  %4940 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %4941 = load i32, i32* %4940, align 4
  %4942 = and i32 %4941, 255
  %4943 = lshr i32 %4941, 8
  %4944 = and i32 %4943, 65535
  %4945 = add nuw nsw i32 %4944, %4942
  %4946 = zext i32 %4945 to i64
  %4947 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4946, i32 0
  %4948 = load i64, i64* %4947, align 8
  %4949 = ashr i64 %4948, 35
  %4950 = trunc i64 %4949 to i32
  %4951 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %4952 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %4953 = and i32 %4952, 32
  %4954 = icmp eq i32 %4953, 0
  br i1 %4954, label %4956, label %4955

4955:                                             ; preds = %4939
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %4951, i8 zeroext 118, i32 %4950, i32 %4950, i32 %4950, i32 1, i32 1, i32 0, i32 5) #11
  br label %4957

4956:                                             ; preds = %4939
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %4951, i32 %4950, i32 %4950, i8 zeroext 102, i8 zeroext 15, i8 zeroext 118) #11
  br label %4957

4957:                                             ; preds = %4955, %4956
  %4958 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %4959 = and i32 %4958, 32
  %4960 = icmp eq i32 %4959, 0
  br i1 %4960, label %4962, label %4961

4961:                                             ; preds = %4957
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %4951, i8 zeroext 115, i32 2, i32 %4950, i32 %4950, i32 1, i32 1, i32 0, i32 5) #11
  br label %4963

4962:                                             ; preds = %4957
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %4951, i32 2, i32 %4950, i8 zeroext 102, i8 zeroext 15, i8 zeroext 115) #11
  br label %4963

4963:                                             ; preds = %4961, %4962
  %4964 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %4965 = load i8*, i8** %4964, align 8
  %4966 = getelementptr inbounds i8, i8* %4965, i64 1
  store i8* %4966, i8** %4964, align 8
  store i8 33, i8* %4965, align 1
  %4967 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %4968 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %4967, i64 0, i32 5, i64 0, i32 0
  %4969 = load i64, i64* %4968, align 8
  %4970 = ashr i64 %4969, 35
  %4971 = trunc i64 %4970 to i32
  %4972 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %4973 = and i32 %4972, 32
  %4974 = icmp eq i32 %4973, 0
  br i1 %4974, label %4976, label %4975

4975:                                             ; preds = %4963
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %4951, i8 zeroext 84, i32 %4971, i32 %4971, i32 %4950) #11
  br label %23402

4976:                                             ; preds = %4963
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %4951, i32 %4971, i32 %4950, i8 zeroext 15, i8 zeroext 84) #11
  br label %23402

4977:                                             ; preds = %2
  %4978 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %4979 = load i32, i32* %4978, align 4
  %4980 = and i32 %4979, 255
  %4981 = lshr i32 %4979, 8
  %4982 = and i32 %4981, 65535
  %4983 = add nuw nsw i32 %4982, %4980
  %4984 = zext i32 %4983 to i64
  %4985 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %4984, i32 0
  %4986 = load i64, i64* %4985, align 8
  %4987 = ashr i64 %4986, 35
  %4988 = trunc i64 %4987 to i32
  %4989 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %4990 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %4991 = and i32 %4990, 32
  %4992 = icmp eq i32 %4991, 0
  br i1 %4992, label %4994, label %4993

4993:                                             ; preds = %4977
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %4989, i8 zeroext 118, i32 %4988, i32 %4988, i32 %4988, i32 1, i32 1, i32 0, i32 5) #11
  br label %4995

4994:                                             ; preds = %4977
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %4989, i32 %4988, i32 %4988, i8 zeroext 102, i8 zeroext 15, i8 zeroext 118) #11
  br label %4995

4995:                                             ; preds = %4993, %4994
  %4996 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %4997 = and i32 %4996, 32
  %4998 = icmp eq i32 %4997, 0
  br i1 %4998, label %5000, label %4999

4999:                                             ; preds = %4995
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %4989, i8 zeroext 115, i32 6, i32 %4988, i32 %4988, i32 1, i32 1, i32 0, i32 5) #11
  br label %5001

5000:                                             ; preds = %4995
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %4989, i32 6, i32 %4988, i8 zeroext 102, i8 zeroext 15, i8 zeroext 115) #11
  br label %5001

5001:                                             ; preds = %4999, %5000
  %5002 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %5003 = load i8*, i8** %5002, align 8
  %5004 = getelementptr inbounds i8, i8* %5003, i64 1
  store i8* %5004, i8** %5002, align 8
  store i8 31, i8* %5003, align 1
  %5005 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %5006 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %5005, i64 0, i32 5, i64 0, i32 0
  %5007 = load i64, i64* %5006, align 8
  %5008 = ashr i64 %5007, 35
  %5009 = trunc i64 %5008 to i32
  %5010 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %5011 = and i32 %5010, 32
  %5012 = icmp eq i32 %5011, 0
  br i1 %5012, label %5014, label %5013

5013:                                             ; preds = %5001
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %4989, i8 zeroext 87, i32 %5009, i32 %5009, i32 %4988) #11
  br label %23402

5014:                                             ; preds = %5001
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %4989, i32 %5009, i32 %4988, i8 zeroext 15, i8 zeroext 87) #11
  br label %23402

5015:                                             ; preds = %2
  %5016 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %5017 = load i32, i32* %5016, align 4
  %5018 = and i32 %5017, 255
  %5019 = zext i32 %5018 to i64
  %5020 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5019, i32 0
  %5021 = load i64, i64* %5020, align 8
  %5022 = and i64 %5021, 7
  %5023 = icmp ugt i64 %5022, 4
  %5024 = and i64 %5021, 24
  %5025 = icmp eq i64 %5024, 0
  %5026 = and i1 %5023, %5025
  br i1 %5026, label %5033, label %5027

5027:                                             ; preds = %5015
  %5028 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %5029 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %5030 = load i64, i64* %5029, align 8
  %5031 = ashr i64 %5030, 35
  %5032 = trunc i64 %5031 to i32
  br label %5045

5033:                                             ; preds = %5015
  %5034 = lshr i64 %5021, 5
  %5035 = trunc i64 %5034 to i8
  %5036 = icmp ugt i8 %5035, 11
  %5037 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %5038 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %5039 = load i64, i64* %5038, align 8
  %5040 = ashr i64 %5039, 35
  %5041 = trunc i64 %5040 to i32
  br i1 %5036, label %5042, label %5045

5042:                                             ; preds = %5033
  %5043 = ashr i64 %5021, 35
  %5044 = trunc i64 %5043 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %5037, i32 %5041, i32 %5044, i8 zeroext -13, i8 zeroext 15, i8 zeroext 81) #11
  br label %23402

5045:                                             ; preds = %5027, %5033
  %5046 = phi i32 [ %5032, %5027 ], [ %5041, %5033 ]
  %5047 = phi %"class.v8::internal::Assembler"* [ %5028, %5027 ], [ %5037, %5033 ]
  %5048 = ashr i64 %5021, 35
  %5049 = trunc i64 %5048 to i32
  %5050 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %5049, i32 0) #11
  %5051 = extractvalue { i64, i32 } %5050, 0
  %5052 = extractvalue { i64, i32 } %5050, 1
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %5047, i32 %5046, i64 %5051, i32 %5052, i8 zeroext -13, i8 zeroext 15, i8 zeroext 81) #11
  br label %23402

5053:                                             ; preds = %2
  %5054 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %5055 = load i32, i32* %5054, align 4
  %5056 = and i32 %5055, 255
  %5057 = zext i32 %5056 to i64
  %5058 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5057, i32 0
  %5059 = load i64, i64* %5058, align 8
  %5060 = and i64 %5059, 7
  %5061 = icmp ugt i64 %5060, 4
  %5062 = and i64 %5059, 24
  %5063 = icmp eq i64 %5062, 0
  %5064 = and i1 %5061, %5063
  br i1 %5064, label %5071, label %5065

5065:                                             ; preds = %5053
  %5066 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %5067 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %5068 = load i64, i64* %5067, align 8
  %5069 = ashr i64 %5068, 35
  %5070 = trunc i64 %5069 to i32
  br label %5083

5071:                                             ; preds = %5053
  %5072 = lshr i64 %5059, 5
  %5073 = trunc i64 %5072 to i8
  %5074 = icmp ugt i8 %5073, 11
  %5075 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %5076 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %5077 = load i64, i64* %5076, align 8
  %5078 = ashr i64 %5077, 35
  %5079 = trunc i64 %5078 to i32
  br i1 %5074, label %5080, label %5083

5080:                                             ; preds = %5071
  %5081 = ashr i64 %5059, 35
  %5082 = trunc i64 %5081 to i32
  tail call void @_ZN2v88internal14TurboAssembler8Cvtss2sdENS0_11XMMRegisterES2_(%"class.v8::internal::TurboAssembler"* %5075, i32 %5079, i32 %5082) #11
  br label %23402

5083:                                             ; preds = %5065, %5071
  %5084 = phi i32 [ %5070, %5065 ], [ %5079, %5071 ]
  %5085 = phi %"class.v8::internal::TurboAssembler"* [ %5066, %5065 ], [ %5075, %5071 ]
  %5086 = ashr i64 %5059, 35
  %5087 = trunc i64 %5086 to i32
  %5088 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %5087, i32 0) #11
  %5089 = extractvalue { i64, i32 } %5088, 0
  %5090 = extractvalue { i64, i32 } %5088, 1
  call void @_ZN2v88internal14TurboAssembler8Cvtss2sdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %5085, i32 %5084, i64 %5089, i32 %5090) #11
  br label %23402

5091:                                             ; preds = %2
  %5092 = lshr i32 %275, 22
  %5093 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %5094 = load i64, i64* %5093, align 8
  %5095 = ashr i64 %5094, 35
  %5096 = trunc i64 %5095 to i32
  %5097 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %5098 = load i32, i32* %5097, align 4
  %5099 = and i32 %5098, 255
  %5100 = zext i32 %5099 to i64
  %5101 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5100, i32 0
  %5102 = load i64, i64* %5101, align 8
  %5103 = ashr i64 %5102, 35
  %5104 = trunc i64 %5103 to i32
  %5105 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %5106 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %5107 = and i32 %5106, 32
  %5108 = icmp eq i32 %5107, 0
  br i1 %5108, label %5115, label %5109

5109:                                             ; preds = %5091
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %5105, i8 zeroext 10, i32 %5096, i32 %5096, i32 %5104, i32 1, i32 3, i32 0, i32 5) #11
  %5110 = trunc i32 %5092 to i8
  %5111 = or i8 %5110, 8
  %5112 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %5113 = load i8*, i8** %5112, align 8
  %5114 = getelementptr inbounds i8, i8* %5113, i64 1
  store i8* %5114, i8** %5112, align 8
  store i8 %5111, i8* %5113, align 1
  br label %23402

5115:                                             ; preds = %5091
  tail call void @_ZN2v88internal9Assembler7roundssENS0_11XMMRegisterES2_NS0_12RoundingModeE(%"class.v8::internal::Assembler"* %5105, i32 %5096, i32 %5104, i32 %5092) #11
  br label %23402

5116:                                             ; preds = %2
  %5117 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %5118 = load i32, i32* %5117, align 4
  %5119 = and i32 %5118, 255
  %5120 = zext i32 %5119 to i64
  %5121 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5120, i32 0
  %5122 = load i64, i64* %5121, align 8
  %5123 = and i64 %5122, 7
  %5124 = icmp ugt i64 %5123, 4
  %5125 = and i64 %5122, 24
  %5126 = icmp eq i64 %5125, 0
  %5127 = and i1 %5124, %5126
  br i1 %5127, label %5134, label %5128

5128:                                             ; preds = %5116
  %5129 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %5130 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %5131 = load i64, i64* %5130, align 8
  %5132 = ashr i64 %5131, 35
  %5133 = trunc i64 %5132 to i32
  br label %5146

5134:                                             ; preds = %5116
  %5135 = lshr i64 %5122, 5
  %5136 = trunc i64 %5135 to i8
  %5137 = icmp ugt i8 %5136, 11
  %5138 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %5139 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %5140 = load i64, i64* %5139, align 8
  %5141 = ashr i64 %5140, 35
  %5142 = trunc i64 %5141 to i32
  br i1 %5137, label %5143, label %5146

5143:                                             ; preds = %5134
  %5144 = ashr i64 %5122, 35
  %5145 = trunc i64 %5144 to i32
  tail call void @_ZN2v88internal14TurboAssembler9Cvttss2siENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::TurboAssembler"* %5138, i32 %5142, i32 %5145) #11
  br label %23402

5146:                                             ; preds = %5128, %5134
  %5147 = phi i32 [ %5133, %5128 ], [ %5142, %5134 ]
  %5148 = phi %"class.v8::internal::TurboAssembler"* [ %5129, %5128 ], [ %5138, %5134 ]
  %5149 = ashr i64 %5122, 35
  %5150 = trunc i64 %5149 to i32
  %5151 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %5150, i32 0) #11
  %5152 = extractvalue { i64, i32 } %5151, 0
  %5153 = extractvalue { i64, i32 } %5151, 1
  call void @_ZN2v88internal14TurboAssembler9Cvttss2siENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %5148, i32 %5147, i64 %5152, i32 %5153) #11
  br label %23402

5154:                                             ; preds = %2
  %5155 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %5156 = load i32, i32* %5155, align 4
  %5157 = and i32 %5156, 255
  %5158 = zext i32 %5157 to i64
  %5159 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5158, i32 0
  %5160 = load i64, i64* %5159, align 8
  %5161 = and i64 %5160, 7
  %5162 = icmp ugt i64 %5161, 4
  %5163 = and i64 %5160, 24
  %5164 = icmp eq i64 %5163, 0
  %5165 = and i1 %5162, %5164
  br i1 %5165, label %5172, label %5166

5166:                                             ; preds = %5154
  %5167 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %5168 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %5169 = load i64, i64* %5168, align 8
  %5170 = ashr i64 %5169, 35
  %5171 = trunc i64 %5170 to i32
  br label %5184

5172:                                             ; preds = %5154
  %5173 = lshr i64 %5160, 5
  %5174 = trunc i64 %5173 to i8
  %5175 = icmp ugt i8 %5174, 11
  %5176 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %5177 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %5178 = load i64, i64* %5177, align 8
  %5179 = ashr i64 %5178, 35
  %5180 = trunc i64 %5179 to i32
  br i1 %5175, label %5181, label %5184

5181:                                             ; preds = %5172
  %5182 = ashr i64 %5160, 35
  %5183 = trunc i64 %5182 to i32
  tail call void @_ZN2v88internal14TurboAssembler10Cvttss2siqENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::TurboAssembler"* %5176, i32 %5180, i32 %5183) #11
  br label %23402

5184:                                             ; preds = %5166, %5172
  %5185 = phi i32 [ %5171, %5166 ], [ %5180, %5172 ]
  %5186 = phi %"class.v8::internal::TurboAssembler"* [ %5167, %5166 ], [ %5176, %5172 ]
  %5187 = ashr i64 %5160, 35
  %5188 = trunc i64 %5187 to i32
  %5189 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %5188, i32 0) #11
  %5190 = extractvalue { i64, i32 } %5189, 0
  %5191 = extractvalue { i64, i32 } %5189, 1
  call void @_ZN2v88internal14TurboAssembler10Cvttss2siqENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %5186, i32 %5185, i64 %5190, i32 %5191) #11
  br label %23402

5192:                                             ; preds = %2
  %5193 = and i32 %275, 15872
  %5194 = icmp eq i32 %5193, 0
  br i1 %5194, label %5216, label %5195

5195:                                             ; preds = %5192
  %5196 = bitcast i64* %183 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5196) #11
  store i64 1, i64* %183, align 8
  %5197 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %183)
  %5198 = extractvalue { i64, i32 } %5197, 0
  %5199 = extractvalue { i64, i32 } %5197, 1
  %5200 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %5201 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %5200, i64 0, i32 1
  %5202 = load i32, i32* %5201, align 4
  %5203 = and i32 %5202, 255
  %5204 = zext i32 %5203 to i64
  %5205 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %5200, i64 0, i32 5, i64 %5204, i32 0
  %5206 = load i64, i64* %5205, align 8
  %5207 = ashr i64 %5206, 35
  %5208 = trunc i64 %5207 to i32
  %5209 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %5210 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %5211 = and i32 %5210, 32
  %5212 = icmp eq i32 %5211, 0
  br i1 %5212, label %5214, label %5213

5213:                                             ; preds = %5195
  call void @_ZN2v88internal9Assembler3vpdEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"* %5209, i8 zeroext 46, i32 %5208, i32 0, i64 %5198, i32 %5199) #11
  br label %5215

5214:                                             ; preds = %5195
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %5209, i32 %5208, i64 %5198, i32 %5199, i8 zeroext 102, i8 zeroext 15, i8 zeroext 46) #11
  br label %5215

5215:                                             ; preds = %5213, %5214
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5196) #11
  br label %23402

5216:                                             ; preds = %5192
  %5217 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %5218 = load i32, i32* %5217, align 4
  %5219 = and i32 %5218, 255
  %5220 = add nuw nsw i32 %5219, 1
  %5221 = zext i32 %5220 to i64
  %5222 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5221, i32 0
  %5223 = load i64, i64* %5222, align 8
  %5224 = and i64 %5223, 7
  %5225 = icmp ugt i64 %5224, 4
  %5226 = and i64 %5223, 24
  %5227 = icmp eq i64 %5226, 0
  %5228 = and i1 %5225, %5227
  br i1 %5228, label %5235, label %5229

5229:                                             ; preds = %5216
  %5230 = zext i32 %5219 to i64
  %5231 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5230, i32 0
  %5232 = load i64, i64* %5231, align 8
  %5233 = ashr i64 %5232, 35
  %5234 = trunc i64 %5233 to i32
  br label %5253

5235:                                             ; preds = %5216
  %5236 = lshr i64 %5223, 5
  %5237 = trunc i64 %5236 to i8
  %5238 = icmp ugt i8 %5237, 11
  %5239 = zext i32 %5219 to i64
  %5240 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5239, i32 0
  %5241 = load i64, i64* %5240, align 8
  %5242 = ashr i64 %5241, 35
  %5243 = trunc i64 %5242 to i32
  br i1 %5238, label %5244, label %5253

5244:                                             ; preds = %5235
  %5245 = ashr i64 %5223, 35
  %5246 = trunc i64 %5245 to i32
  %5247 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %5248 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %5249 = and i32 %5248, 32
  %5250 = icmp eq i32 %5249, 0
  br i1 %5250, label %5252, label %5251

5251:                                             ; preds = %5244
  tail call void @_ZN2v88internal9Assembler3vpdEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %5247, i8 zeroext 46, i32 %5243, i32 0, i32 %5246) #11
  br label %23402

5252:                                             ; preds = %5244
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %5247, i32 %5243, i32 %5246, i8 zeroext 102, i8 zeroext 15, i8 zeroext 46) #11
  br label %23402

5253:                                             ; preds = %5229, %5235
  %5254 = phi i32 [ %5234, %5229 ], [ %5243, %5235 ]
  %5255 = ashr i64 %5223, 35
  %5256 = trunc i64 %5255 to i32
  %5257 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %5256, i32 0) #11
  %5258 = extractvalue { i64, i32 } %5257, 0
  %5259 = extractvalue { i64, i32 } %5257, 1
  %5260 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %5261 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %5262 = and i32 %5261, 32
  %5263 = icmp eq i32 %5262, 0
  br i1 %5263, label %5265, label %5264

5264:                                             ; preds = %5253
  call void @_ZN2v88internal9Assembler3vpdEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"* %5260, i8 zeroext 46, i32 %5254, i32 0, i64 %5258, i32 %5259) #11
  br label %23402

5265:                                             ; preds = %5253
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %5260, i32 %5254, i64 %5258, i32 %5259, i8 zeroext 102, i8 zeroext 15, i8 zeroext 46) #11
  br label %23402

5266:                                             ; preds = %2
  %5267 = and i32 %275, 15872
  %5268 = icmp eq i32 %5267, 0
  br i1 %5268, label %5284, label %5269

5269:                                             ; preds = %5266
  %5270 = bitcast i64* %184 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5270) #11
  store i64 1, i64* %184, align 8
  %5271 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %184)
  %5272 = extractvalue { i64, i32 } %5271, 0
  %5273 = extractvalue { i64, i32 } %5271, 1
  %5274 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %5275 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %5276 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %5275, i64 0, i32 1
  %5277 = load i32, i32* %5276, align 4
  %5278 = and i32 %5277, 255
  %5279 = zext i32 %5278 to i64
  %5280 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %5275, i64 0, i32 5, i64 %5279, i32 0
  %5281 = load i64, i64* %5280, align 8
  %5282 = ashr i64 %5281, 35
  %5283 = trunc i64 %5282 to i32
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %5274, i32 %5283, i64 %5272, i32 %5273, i8 zeroext -14, i8 zeroext 15, i8 zeroext 88) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5270) #11
  br label %23402

5284:                                             ; preds = %5266
  %5285 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %5286 = load i32, i32* %5285, align 4
  %5287 = and i32 %5286, 255
  %5288 = add nuw nsw i32 %5287, 1
  %5289 = zext i32 %5288 to i64
  %5290 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5289, i32 0
  %5291 = load i64, i64* %5290, align 8
  %5292 = and i64 %5291, 7
  %5293 = icmp ugt i64 %5292, 4
  %5294 = and i64 %5291, 24
  %5295 = icmp eq i64 %5294, 0
  %5296 = and i1 %5293, %5295
  br i1 %5296, label %5304, label %5297

5297:                                             ; preds = %5284
  %5298 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %5299 = zext i32 %5287 to i64
  %5300 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5299, i32 0
  %5301 = load i64, i64* %5300, align 8
  %5302 = ashr i64 %5301, 35
  %5303 = trunc i64 %5302 to i32
  br label %5317

5304:                                             ; preds = %5284
  %5305 = lshr i64 %5291, 5
  %5306 = trunc i64 %5305 to i8
  %5307 = icmp ugt i8 %5306, 11
  %5308 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %5309 = zext i32 %5287 to i64
  %5310 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5309, i32 0
  %5311 = load i64, i64* %5310, align 8
  %5312 = ashr i64 %5311, 35
  %5313 = trunc i64 %5312 to i32
  br i1 %5307, label %5314, label %5317

5314:                                             ; preds = %5304
  %5315 = ashr i64 %5291, 35
  %5316 = trunc i64 %5315 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %5308, i32 %5313, i32 %5316, i8 zeroext -14, i8 zeroext 15, i8 zeroext 88) #11
  br label %23402

5317:                                             ; preds = %5297, %5304
  %5318 = phi i32 [ %5303, %5297 ], [ %5313, %5304 ]
  %5319 = phi %"class.v8::internal::Assembler"* [ %5298, %5297 ], [ %5308, %5304 ]
  %5320 = ashr i64 %5291, 35
  %5321 = trunc i64 %5320 to i32
  %5322 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %5321, i32 0) #11
  %5323 = extractvalue { i64, i32 } %5322, 0
  %5324 = extractvalue { i64, i32 } %5322, 1
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %5319, i32 %5318, i64 %5323, i32 %5324, i8 zeroext -14, i8 zeroext 15, i8 zeroext 88) #11
  br label %23402

5325:                                             ; preds = %2
  %5326 = and i32 %275, 15872
  %5327 = icmp eq i32 %5326, 0
  br i1 %5327, label %5343, label %5328

5328:                                             ; preds = %5325
  %5329 = bitcast i64* %185 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5329) #11
  store i64 1, i64* %185, align 8
  %5330 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %185)
  %5331 = extractvalue { i64, i32 } %5330, 0
  %5332 = extractvalue { i64, i32 } %5330, 1
  %5333 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %5334 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %5335 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %5334, i64 0, i32 1
  %5336 = load i32, i32* %5335, align 4
  %5337 = and i32 %5336, 255
  %5338 = zext i32 %5337 to i64
  %5339 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %5334, i64 0, i32 5, i64 %5338, i32 0
  %5340 = load i64, i64* %5339, align 8
  %5341 = ashr i64 %5340, 35
  %5342 = trunc i64 %5341 to i32
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %5333, i32 %5342, i64 %5331, i32 %5332, i8 zeroext -14, i8 zeroext 15, i8 zeroext 92) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5329) #11
  br label %23402

5343:                                             ; preds = %5325
  %5344 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %5345 = load i32, i32* %5344, align 4
  %5346 = and i32 %5345, 255
  %5347 = add nuw nsw i32 %5346, 1
  %5348 = zext i32 %5347 to i64
  %5349 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5348, i32 0
  %5350 = load i64, i64* %5349, align 8
  %5351 = and i64 %5350, 7
  %5352 = icmp ugt i64 %5351, 4
  %5353 = and i64 %5350, 24
  %5354 = icmp eq i64 %5353, 0
  %5355 = and i1 %5352, %5354
  br i1 %5355, label %5363, label %5356

5356:                                             ; preds = %5343
  %5357 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %5358 = zext i32 %5346 to i64
  %5359 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5358, i32 0
  %5360 = load i64, i64* %5359, align 8
  %5361 = ashr i64 %5360, 35
  %5362 = trunc i64 %5361 to i32
  br label %5376

5363:                                             ; preds = %5343
  %5364 = lshr i64 %5350, 5
  %5365 = trunc i64 %5364 to i8
  %5366 = icmp ugt i8 %5365, 11
  %5367 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %5368 = zext i32 %5346 to i64
  %5369 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5368, i32 0
  %5370 = load i64, i64* %5369, align 8
  %5371 = ashr i64 %5370, 35
  %5372 = trunc i64 %5371 to i32
  br i1 %5366, label %5373, label %5376

5373:                                             ; preds = %5363
  %5374 = ashr i64 %5350, 35
  %5375 = trunc i64 %5374 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %5367, i32 %5372, i32 %5375, i8 zeroext -14, i8 zeroext 15, i8 zeroext 92) #11
  br label %23402

5376:                                             ; preds = %5356, %5363
  %5377 = phi i32 [ %5362, %5356 ], [ %5372, %5363 ]
  %5378 = phi %"class.v8::internal::Assembler"* [ %5357, %5356 ], [ %5367, %5363 ]
  %5379 = ashr i64 %5350, 35
  %5380 = trunc i64 %5379 to i32
  %5381 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %5380, i32 0) #11
  %5382 = extractvalue { i64, i32 } %5381, 0
  %5383 = extractvalue { i64, i32 } %5381, 1
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %5378, i32 %5377, i64 %5382, i32 %5383, i8 zeroext -14, i8 zeroext 15, i8 zeroext 92) #11
  br label %23402

5384:                                             ; preds = %2
  %5385 = and i32 %275, 15872
  %5386 = icmp eq i32 %5385, 0
  br i1 %5386, label %5402, label %5387

5387:                                             ; preds = %5384
  %5388 = bitcast i64* %186 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5388) #11
  store i64 1, i64* %186, align 8
  %5389 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %186)
  %5390 = extractvalue { i64, i32 } %5389, 0
  %5391 = extractvalue { i64, i32 } %5389, 1
  %5392 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %5393 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %5394 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %5393, i64 0, i32 1
  %5395 = load i32, i32* %5394, align 4
  %5396 = and i32 %5395, 255
  %5397 = zext i32 %5396 to i64
  %5398 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %5393, i64 0, i32 5, i64 %5397, i32 0
  %5399 = load i64, i64* %5398, align 8
  %5400 = ashr i64 %5399, 35
  %5401 = trunc i64 %5400 to i32
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %5392, i32 %5401, i64 %5390, i32 %5391, i8 zeroext -14, i8 zeroext 15, i8 zeroext 89) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5388) #11
  br label %23402

5402:                                             ; preds = %5384
  %5403 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %5404 = load i32, i32* %5403, align 4
  %5405 = and i32 %5404, 255
  %5406 = add nuw nsw i32 %5405, 1
  %5407 = zext i32 %5406 to i64
  %5408 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5407, i32 0
  %5409 = load i64, i64* %5408, align 8
  %5410 = and i64 %5409, 7
  %5411 = icmp ugt i64 %5410, 4
  %5412 = and i64 %5409, 24
  %5413 = icmp eq i64 %5412, 0
  %5414 = and i1 %5411, %5413
  br i1 %5414, label %5422, label %5415

5415:                                             ; preds = %5402
  %5416 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %5417 = zext i32 %5405 to i64
  %5418 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5417, i32 0
  %5419 = load i64, i64* %5418, align 8
  %5420 = ashr i64 %5419, 35
  %5421 = trunc i64 %5420 to i32
  br label %5435

5422:                                             ; preds = %5402
  %5423 = lshr i64 %5409, 5
  %5424 = trunc i64 %5423 to i8
  %5425 = icmp ugt i8 %5424, 11
  %5426 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %5427 = zext i32 %5405 to i64
  %5428 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5427, i32 0
  %5429 = load i64, i64* %5428, align 8
  %5430 = ashr i64 %5429, 35
  %5431 = trunc i64 %5430 to i32
  br i1 %5425, label %5432, label %5435

5432:                                             ; preds = %5422
  %5433 = ashr i64 %5409, 35
  %5434 = trunc i64 %5433 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %5426, i32 %5431, i32 %5434, i8 zeroext -14, i8 zeroext 15, i8 zeroext 89) #11
  br label %23402

5435:                                             ; preds = %5415, %5422
  %5436 = phi i32 [ %5421, %5415 ], [ %5431, %5422 ]
  %5437 = phi %"class.v8::internal::Assembler"* [ %5416, %5415 ], [ %5426, %5422 ]
  %5438 = ashr i64 %5409, 35
  %5439 = trunc i64 %5438 to i32
  %5440 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %5439, i32 0) #11
  %5441 = extractvalue { i64, i32 } %5440, 0
  %5442 = extractvalue { i64, i32 } %5440, 1
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %5437, i32 %5436, i64 %5441, i32 %5442, i8 zeroext -14, i8 zeroext 15, i8 zeroext 89) #11
  br label %23402

5443:                                             ; preds = %2
  %5444 = and i32 %275, 15872
  %5445 = icmp eq i32 %5444, 0
  br i1 %5445, label %5461, label %5446

5446:                                             ; preds = %5443
  %5447 = bitcast i64* %187 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5447) #11
  store i64 1, i64* %187, align 8
  %5448 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %187)
  %5449 = extractvalue { i64, i32 } %5448, 0
  %5450 = extractvalue { i64, i32 } %5448, 1
  %5451 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %5452 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %5453 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %5452, i64 0, i32 1
  %5454 = load i32, i32* %5453, align 4
  %5455 = and i32 %5454, 255
  %5456 = zext i32 %5455 to i64
  %5457 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %5452, i64 0, i32 5, i64 %5456, i32 0
  %5458 = load i64, i64* %5457, align 8
  %5459 = ashr i64 %5458, 35
  %5460 = trunc i64 %5459 to i32
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %5451, i32 %5460, i64 %5449, i32 %5450, i8 zeroext -14, i8 zeroext 15, i8 zeroext 94) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5447) #11
  br label %5502

5461:                                             ; preds = %5443
  %5462 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %5463 = load i32, i32* %5462, align 4
  %5464 = and i32 %5463, 255
  %5465 = add nuw nsw i32 %5464, 1
  %5466 = zext i32 %5465 to i64
  %5467 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5466, i32 0
  %5468 = load i64, i64* %5467, align 8
  %5469 = and i64 %5468, 7
  %5470 = icmp ugt i64 %5469, 4
  %5471 = and i64 %5468, 24
  %5472 = icmp eq i64 %5471, 0
  %5473 = and i1 %5470, %5472
  br i1 %5473, label %5481, label %5474

5474:                                             ; preds = %5461
  %5475 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %5476 = zext i32 %5464 to i64
  %5477 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5476, i32 0
  %5478 = load i64, i64* %5477, align 8
  %5479 = ashr i64 %5478, 35
  %5480 = trunc i64 %5479 to i32
  br label %5494

5481:                                             ; preds = %5461
  %5482 = lshr i64 %5468, 5
  %5483 = trunc i64 %5482 to i8
  %5484 = icmp ugt i8 %5483, 11
  %5485 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %5486 = zext i32 %5464 to i64
  %5487 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5486, i32 0
  %5488 = load i64, i64* %5487, align 8
  %5489 = ashr i64 %5488, 35
  %5490 = trunc i64 %5489 to i32
  br i1 %5484, label %5491, label %5494

5491:                                             ; preds = %5481
  %5492 = ashr i64 %5468, 35
  %5493 = trunc i64 %5492 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %5485, i32 %5490, i32 %5493, i8 zeroext -14, i8 zeroext 15, i8 zeroext 94) #11
  br label %5502

5494:                                             ; preds = %5474, %5481
  %5495 = phi i32 [ %5480, %5474 ], [ %5490, %5481 ]
  %5496 = phi %"class.v8::internal::Assembler"* [ %5475, %5474 ], [ %5485, %5481 ]
  %5497 = ashr i64 %5468, 35
  %5498 = trunc i64 %5497 to i32
  %5499 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %5498, i32 0) #11
  %5500 = extractvalue { i64, i32 } %5499, 0
  %5501 = extractvalue { i64, i32 } %5499, 1
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %5496, i32 %5495, i64 %5500, i32 %5501, i8 zeroext -14, i8 zeroext 15, i8 zeroext 94) #11
  br label %5502

5502:                                             ; preds = %5491, %5494, %5446
  %5503 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %5504 = bitcast %"class.v8::internal::TurboAssembler"* %5503 to %"class.v8::internal::SharedTurboAssembler"*
  %5505 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %5506 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %5505, i64 0, i32 5, i64 0, i32 0
  %5507 = load i64, i64* %5506, align 8
  %5508 = ashr i64 %5507, 35
  %5509 = trunc i64 %5508 to i32
  call void @_ZN2v88internal20SharedTurboAssembler6MovapdENS0_11XMMRegisterES2_(%"class.v8::internal::SharedTurboAssembler"* %5504, i32 %5509, i32 %5509) #11
  br label %23402

5510:                                             ; preds = %2
  %5511 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %5511, i8 zeroext 5, i32 4, i64 8, i32 8) #11
  %5512 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %5513 = bitcast i8** %5512 to i64*
  %5514 = load i64, i64* %5513, align 8
  %5515 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %5516 = bitcast i8** %5515 to i64*
  %5517 = load i64, i64* %5516, align 8
  %5518 = sub i64 %5514, %5517
  %5519 = trunc i64 %5518 to i32
  %5520 = load i8, i8* @_ZN2v88internal29FLAG_perf_prof_unwinding_infoE, align 1, !range !2
  %5521 = icmp eq i8 %5520, 0
  br i1 %5521, label %5531, label %5522

5522:                                             ; preds = %5510
  %5523 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 2
  %5524 = load i8, i8* %5523, align 8, !range !2
  %5525 = icmp eq i8 %5524, 0
  br i1 %5525, label %5526, label %5531

5526:                                             ; preds = %5522
  %5527 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 1
  tail call void @_ZN2v88internal13EhFrameWriter15AdvanceLocationEi(%"class.v8::internal::EhFrameWriter"* %5527, i32 %5519) #11
  %5528 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 1, i32 4
  %5529 = load i32, i32* %5528, align 8
  %5530 = add nsw i32 %5529, 8
  tail call void @_ZN2v88internal13EhFrameWriter20SetBaseAddressOffsetEi(%"class.v8::internal::EhFrameWriter"* %5527, i32 %5530) #11
  br label %5531

5531:                                             ; preds = %5510, %5522, %5526
  %5532 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %5533 = load i32, i32* %5532, align 4
  %5534 = and i32 %5533, 255
  %5535 = add nuw nsw i32 %5534, 1
  %5536 = zext i32 %5535 to i64
  %5537 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5536, i32 0
  %5538 = load i64, i64* %5537, align 8
  %5539 = ashr i64 %5538, 35
  %5540 = trunc i64 %5539 to i32
  %5541 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %5542 = and i32 %5541, 32
  %5543 = icmp eq i32 %5542, 0
  br i1 %5543, label %5545, label %5544

5544:                                             ; preds = %5531
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %5511, i8 zeroext 17, i32 %5540, i32 0, i64 2360320, i32 131072, i32 3, i32 1, i32 0, i32 5) #11
  br label %5546

5545:                                             ; preds = %5531
  tail call void @_ZN2v88internal9Assembler5movsdENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %5511, i64 2360320, i32 131072, i32 %5540) #11
  br label %5546

5546:                                             ; preds = %5544, %5545
  tail call void @_ZN2v88internal9Assembler5fld_dENS0_7OperandE(%"class.v8::internal::Assembler"* %5511, i64 2360320, i32 131072) #11
  %5547 = load i32, i32* %5532, align 4
  %5548 = and i32 %5547, 255
  %5549 = zext i32 %5548 to i64
  %5550 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5549, i32 0
  %5551 = load i64, i64* %5550, align 8
  %5552 = ashr i64 %5551, 35
  %5553 = trunc i64 %5552 to i32
  %5554 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %5555 = and i32 %5554, 32
  %5556 = icmp eq i32 %5555, 0
  br i1 %5556, label %5558, label %5557

5557:                                             ; preds = %5546
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %5511, i8 zeroext 17, i32 %5553, i32 0, i64 2360320, i32 131072, i32 3, i32 1, i32 0, i32 5) #11
  br label %5559

5558:                                             ; preds = %5546
  tail call void @_ZN2v88internal9Assembler5movsdENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %5511, i64 2360320, i32 131072, i32 %5553) #11
  br label %5559

5559:                                             ; preds = %5557, %5558
  tail call void @_ZN2v88internal9Assembler5fld_dENS0_7OperandE(%"class.v8::internal::Assembler"* %5511, i64 2360320, i32 131072) #11
  %5560 = bitcast %"class.v8::internal::Label"* %188 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5560) #11
  %5561 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %188, i64 0, i32 0
  store i32 0, i32* %5561, align 4
  %5562 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %188, i64 0, i32 1
  store i32 0, i32* %5562, align 4
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %5511, %"class.v8::internal::Label"* nonnull %188) #11
  call void @_ZN2v88internal9Assembler5fpremEv(%"class.v8::internal::Assembler"* %5511) #11
  call void @_ZN2v88internal9Assembler9fnstsw_axEv(%"class.v8::internal::Assembler"* %5511) #11
  %5563 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %5564 = and i32 %5563, 16
  %5565 = icmp eq i32 %5564, 0
  br i1 %5565, label %5567, label %5566

5566:                                             ; preds = %5559
  call void @_ZN2v88internal9Assembler4sahfEv(%"class.v8::internal::Assembler"* %5511) #11
  br label %5599

5567:                                             ; preds = %5559
  call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %5511, i32 0, i64 8, i32 5, i32 4) #11
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %5511, i8 zeroext 4, i32 0, i64 255, i32 4) #11
  call void @_ZN2v88internal9Assembler5pushqENS0_8RegisterE(%"class.v8::internal::Assembler"* %5511, i32 0) #11
  %5568 = load i64, i64* %5513, align 8
  %5569 = load i64, i64* %5516, align 8
  %5570 = sub i64 %5568, %5569
  %5571 = trunc i64 %5570 to i32
  %5572 = load i8, i8* @_ZN2v88internal29FLAG_perf_prof_unwinding_infoE, align 1, !range !2
  %5573 = icmp eq i8 %5572, 0
  br i1 %5573, label %5583, label %5574

5574:                                             ; preds = %5567
  %5575 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 2
  %5576 = load i8, i8* %5575, align 8, !range !2
  %5577 = icmp eq i8 %5576, 0
  br i1 %5577, label %5578, label %5583

5578:                                             ; preds = %5574
  %5579 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 1
  call void @_ZN2v88internal13EhFrameWriter15AdvanceLocationEi(%"class.v8::internal::EhFrameWriter"* %5579, i32 %5571) #11
  %5580 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 1, i32 4
  %5581 = load i32, i32* %5580, align 8
  %5582 = add nsw i32 %5581, 8
  call void @_ZN2v88internal13EhFrameWriter20SetBaseAddressOffsetEi(%"class.v8::internal::EhFrameWriter"* %5579, i32 %5582) #11
  br label %5583

5583:                                             ; preds = %5567, %5574, %5578
  call void @_ZN2v88internal9Assembler5popfqEv(%"class.v8::internal::Assembler"* %5511) #11
  %5584 = load i64, i64* %5513, align 8
  %5585 = load i64, i64* %5516, align 8
  %5586 = sub i64 %5584, %5585
  %5587 = trunc i64 %5586 to i32
  %5588 = load i8, i8* @_ZN2v88internal29FLAG_perf_prof_unwinding_infoE, align 1, !range !2
  %5589 = icmp eq i8 %5588, 0
  br i1 %5589, label %5599, label %5590

5590:                                             ; preds = %5583
  %5591 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 2
  %5592 = load i8, i8* %5591, align 8, !range !2
  %5593 = icmp eq i8 %5592, 0
  br i1 %5593, label %5594, label %5599

5594:                                             ; preds = %5590
  %5595 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 1
  call void @_ZN2v88internal13EhFrameWriter15AdvanceLocationEi(%"class.v8::internal::EhFrameWriter"* %5595, i32 %5587) #11
  %5596 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 1, i32 4
  %5597 = load i32, i32* %5596, align 8
  %5598 = add nsw i32 %5597, -8
  call void @_ZN2v88internal13EhFrameWriter20SetBaseAddressOffsetEi(%"class.v8::internal::EhFrameWriter"* %5595, i32 %5598) #11
  br label %5599

5599:                                             ; preds = %5594, %5590, %5583, %5566
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %5511, i32 10, %"class.v8::internal::Label"* nonnull %188, i32 1) #11
  call void @_ZN2v88internal9Assembler4fstpEi(%"class.v8::internal::Assembler"* %5511, i32 1) #11
  call void @_ZN2v88internal9Assembler6fstp_dENS0_7OperandE(%"class.v8::internal::Assembler"* %5511, i64 2360320, i32 131072) #11
  %5600 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %5601 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %5600, i64 0, i32 5, i64 0, i32 0
  %5602 = load i64, i64* %5601, align 8
  %5603 = ashr i64 %5602, 35
  %5604 = trunc i64 %5603 to i32
  %5605 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %5606 = and i32 %5605, 32
  %5607 = icmp eq i32 %5606, 0
  br i1 %5607, label %5609, label %5608

5608:                                             ; preds = %5599
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %5511, i8 zeroext 16, i32 %5604, i32 0, i64 2360320, i32 131072, i32 3, i32 1, i32 0, i32 5) #11
  br label %5610

5609:                                             ; preds = %5599
  call void @_ZN2v88internal9Assembler5movsdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %5511, i32 %5604, i64 2360320, i32 131072) #11
  br label %5610

5610:                                             ; preds = %5608, %5609
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %5511, i8 zeroext 0, i32 4, i64 8, i32 8) #11
  %5611 = load i64, i64* %5513, align 8
  %5612 = load i64, i64* %5516, align 8
  %5613 = sub i64 %5611, %5612
  %5614 = trunc i64 %5613 to i32
  %5615 = load i8, i8* @_ZN2v88internal29FLAG_perf_prof_unwinding_infoE, align 1, !range !2
  %5616 = icmp eq i8 %5615, 0
  br i1 %5616, label %5626, label %5617

5617:                                             ; preds = %5610
  %5618 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 2
  %5619 = load i8, i8* %5618, align 8, !range !2
  %5620 = icmp eq i8 %5619, 0
  br i1 %5620, label %5621, label %5626

5621:                                             ; preds = %5617
  %5622 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 1
  call void @_ZN2v88internal13EhFrameWriter15AdvanceLocationEi(%"class.v8::internal::EhFrameWriter"* %5622, i32 %5614) #11
  %5623 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 1, i32 4
  %5624 = load i32, i32* %5623, align 8
  %5625 = add nsw i32 %5624, -8
  call void @_ZN2v88internal13EhFrameWriter20SetBaseAddressOffsetEi(%"class.v8::internal::EhFrameWriter"* %5622, i32 %5625) #11
  br label %5626

5626:                                             ; preds = %5610, %5617, %5621
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5560) #11
  br label %23402

5627:                                             ; preds = %2
  %5628 = bitcast %"class.v8::internal::Label"* %189 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5628) #11
  %5629 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %189, i64 0, i32 0
  store i32 0, i32* %5629, align 4
  %5630 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %189, i64 0, i32 1
  store i32 0, i32* %5630, align 4
  %5631 = bitcast %"class.v8::internal::Label"* %190 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5631) #11
  %5632 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %190, i64 0, i32 0
  store i32 0, i32* %5632, align 4
  %5633 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %190, i64 0, i32 1
  store i32 0, i32* %5633, align 4
  %5634 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %5635 = load i32, i32* %5634, align 4
  %5636 = and i32 %5635, 255
  %5637 = add nuw nsw i32 %5636, 1
  %5638 = zext i32 %5637 to i64
  %5639 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5638, i32 0
  %5640 = load i64, i64* %5639, align 8
  %5641 = and i64 %5640, 7
  %5642 = icmp ugt i64 %5641, 4
  %5643 = and i64 %5640, 24
  %5644 = icmp eq i64 %5643, 0
  %5645 = and i1 %5642, %5644
  br i1 %5645, label %5653, label %5646

5646:                                             ; preds = %5627
  %5647 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %5648 = zext i32 %5636 to i64
  %5649 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5648, i32 0
  %5650 = load i64, i64* %5649, align 8
  %5651 = ashr i64 %5650, 35
  %5652 = trunc i64 %5651 to i32
  br label %5672

5653:                                             ; preds = %5627
  %5654 = lshr i64 %5640, 5
  %5655 = trunc i64 %5654 to i8
  %5656 = icmp ugt i8 %5655, 11
  %5657 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %5658 = zext i32 %5636 to i64
  %5659 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5658, i32 0
  %5660 = load i64, i64* %5659, align 8
  %5661 = ashr i64 %5660, 35
  %5662 = trunc i64 %5661 to i32
  br i1 %5656, label %5663, label %5672

5663:                                             ; preds = %5653
  %5664 = ashr i64 %5640, 35
  %5665 = trunc i64 %5664 to i32
  %5666 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %5657, i64 0, i32 0, i32 0, i32 0
  %5667 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %5668 = and i32 %5667, 32
  %5669 = icmp eq i32 %5668, 0
  br i1 %5669, label %5671, label %5670

5670:                                             ; preds = %5663
  tail call void @_ZN2v88internal9Assembler8vucomissENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %5666, i32 %5662, i32 %5665) #11
  br label %5686

5671:                                             ; preds = %5663
  tail call void @_ZN2v88internal9Assembler7ucomissENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %5666, i32 %5662, i32 %5665) #11
  br label %5686

5672:                                             ; preds = %5646, %5653
  %5673 = phi i32 [ %5652, %5646 ], [ %5662, %5653 ]
  %5674 = phi %"class.v8::internal::TurboAssembler"* [ %5647, %5646 ], [ %5657, %5653 ]
  %5675 = ashr i64 %5640, 35
  %5676 = trunc i64 %5675 to i32
  %5677 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %5676, i32 0) #11
  %5678 = extractvalue { i64, i32 } %5677, 0
  %5679 = extractvalue { i64, i32 } %5677, 1
  %5680 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %5681 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %5682 = and i32 %5681, 32
  %5683 = icmp eq i32 %5682, 0
  br i1 %5683, label %5685, label %5684

5684:                                             ; preds = %5672
  call void @_ZN2v88internal9Assembler8vucomissENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %5680, i32 %5673, i64 %5678, i32 %5679) #11
  br label %5686

5685:                                             ; preds = %5672
  call void @_ZN2v88internal9Assembler7ucomissENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %5680, i32 %5673, i64 %5678, i32 %5679) #11
  br label %5686

5686:                                             ; preds = %5685, %5684, %5671, %5670
  %5687 = phi %"class.v8::internal::TurboAssembler"* [ %5674, %5685 ], [ %5674, %5684 ], [ %5657, %5671 ], [ %5657, %5670 ]
  %5688 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %5689 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %5688, align 8
  %5690 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %5691 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %5690, i64 0, i32 5, i64 0, i32 0
  %5692 = load i64, i64* %5691, align 8
  %5693 = ashr i64 %5692, 35
  %5694 = trunc i64 %5693 to i32
  %5695 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %5689, i64 0, i32 2
  %5696 = load i64, i64* %5695, align 8
  %5697 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %5689, i64 0, i32 3
  %5698 = load i64, i64* %5697, align 8
  %5699 = sub i64 %5698, %5696
  %5700 = icmp ult i64 %5699, 56
  br i1 %5700, label %5701, label %5703, !prof !3

5701:                                             ; preds = %5686
  %5702 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %5689, i64 56) #11
  br label %5705

5703:                                             ; preds = %5686
  %5704 = add i64 %5696, 56
  store i64 %5704, i64* %5695, align 8
  br label %5705

5705:                                             ; preds = %5701, %5703
  %5706 = phi i64 [ %5702, %5701 ], [ %5696, %5703 ]
  %5707 = inttoptr i64 %5706 to %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN"*
  %5708 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN"* %5707, i64 0, i32 0
  call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %5708, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %5709 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN"* %5707, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_123OutOfLineLoadFloat32NaNE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5709, align 8
  %5710 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN"* %5707, i64 0, i32 1, i32 0, i32 0
  store i32 %5694, i32* %5710, align 8
  %5711 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %5687, i64 0, i32 0, i32 0, i32 0
  %5712 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN"* %5707, i64 0, i32 0, i32 1
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %5711, i32 10, %"class.v8::internal::Label"* %5712, i32 1) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %5711, i32 7, %"class.v8::internal::Label"* nonnull %190, i32 0) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %5711, i32 2, %"class.v8::internal::Label"* nonnull %189, i32 0) #11
  %5713 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %5714 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %5713, i64 0, i32 1
  %5715 = load i32, i32* %5714, align 4
  %5716 = and i32 %5715, 255
  %5717 = zext i32 %5716 to i64
  %5718 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %5713, i64 0, i32 5, i64 %5717, i32 0
  %5719 = load i64, i64* %5718, align 8
  %5720 = ashr i64 %5719, 35
  %5721 = trunc i64 %5720 to i32
  %5722 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %5723 = and i32 %5722, 32
  %5724 = icmp eq i32 %5723, 0
  br i1 %5724, label %5726, label %5725

5725:                                             ; preds = %5705
  call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %5711, i8 zeroext 80, i32 10, i32 0, i32 %5721) #11
  br label %5727

5726:                                             ; preds = %5705
  call void @_ZN2v88internal9Assembler8movmskpsENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %5711, i32 10, i32 %5721) #11
  br label %5727

5727:                                             ; preds = %5725, %5726
  call void @_ZN2v88internal9Assembler9emit_testENS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %5711, i32 10, i64 1, i32 4) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %5711, i32 4, %"class.v8::internal::Label"* nonnull %190, i32 0) #11
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %5711, %"class.v8::internal::Label"* nonnull %189) #11
  %5728 = load i32, i32* %5634, align 4
  %5729 = and i32 %5728, 255
  %5730 = add nuw nsw i32 %5729, 1
  %5731 = zext i32 %5730 to i64
  %5732 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5731, i32 0
  %5733 = load i64, i64* %5732, align 8
  %5734 = and i64 %5733, 7
  %5735 = icmp ugt i64 %5734, 4
  %5736 = and i64 %5733, 24
  %5737 = icmp eq i64 %5736, 0
  %5738 = and i1 %5735, %5737
  br i1 %5738, label %5739, label %5743

5739:                                             ; preds = %5727
  %5740 = lshr i64 %5733, 5
  %5741 = trunc i64 %5740 to i8
  %5742 = icmp ugt i8 %5741, 11
  br label %5743

5743:                                             ; preds = %5727, %5739
  %5744 = phi i1 [ false, %5727 ], [ %5742, %5739 ]
  %5745 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %5746 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %5745, i64 0, i32 1
  %5747 = load i32, i32* %5746, align 4
  %5748 = and i32 %5747, 255
  %5749 = zext i32 %5748 to i64
  %5750 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %5745, i64 0, i32 5, i64 %5749, i32 0
  %5751 = load i64, i64* %5750, align 8
  %5752 = ashr i64 %5751, 35
  %5753 = trunc i64 %5752 to i32
  br i1 %5744, label %5754, label %5765

5754:                                             ; preds = %5743
  %5755 = add nuw nsw i64 %5749, 1
  %5756 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %5745, i64 0, i32 5, i64 %5755, i32 0
  %5757 = load i64, i64* %5756, align 8
  %5758 = ashr i64 %5757, 35
  %5759 = trunc i64 %5758 to i32
  %5760 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %5761 = and i32 %5760, 32
  %5762 = icmp eq i32 %5761, 0
  br i1 %5762, label %5764, label %5763

5763:                                             ; preds = %5754
  call void @_ZN2v88internal9Assembler3vssEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %5711, i8 zeroext 16, i32 %5753, i32 %5753, i32 %5759) #11
  br label %5780

5764:                                             ; preds = %5754
  call void @_ZN2v88internal9Assembler5movssENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %5711, i32 %5753, i32 %5759) #11
  br label %5780

5765:                                             ; preds = %5743
  %5766 = add nuw nsw i32 %5748, 1
  %5767 = zext i32 %5766 to i64
  %5768 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %5745, i64 0, i32 5, i64 %5767, i32 0
  %5769 = load i64, i64* %5768, align 8
  %5770 = ashr i64 %5769, 35
  %5771 = trunc i64 %5770 to i32
  %5772 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %5771, i32 0) #11
  %5773 = extractvalue { i64, i32 } %5772, 0
  %5774 = extractvalue { i64, i32 } %5772, 1
  %5775 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %5776 = and i32 %5775, 32
  %5777 = icmp eq i32 %5776, 0
  br i1 %5777, label %5779, label %5778

5778:                                             ; preds = %5765
  call void @_ZN2v88internal9Assembler3vssEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"* %5711, i8 zeroext 16, i32 %5753, i32 0, i64 %5773, i32 %5774) #11
  br label %5780

5779:                                             ; preds = %5765
  call void @_ZN2v88internal9Assembler5movssENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %5711, i32 %5753, i64 %5773, i32 %5774) #11
  br label %5780

5780:                                             ; preds = %5779, %5778, %5764, %5763
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %5711, %"class.v8::internal::Label"* nonnull %190) #11
  %5781 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN"* %5707, i64 0, i32 0, i32 2
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %5711, %"class.v8::internal::Label"* %5781) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5631) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5628) #11
  br label %23402

5782:                                             ; preds = %2
  %5783 = bitcast %"class.v8::internal::Label"* %191 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5783) #11
  %5784 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %191, i64 0, i32 0
  store i32 0, i32* %5784, align 4
  %5785 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %191, i64 0, i32 1
  store i32 0, i32* %5785, align 4
  %5786 = bitcast %"class.v8::internal::Label"* %192 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5786) #11
  %5787 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %192, i64 0, i32 0
  store i32 0, i32* %5787, align 4
  %5788 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %192, i64 0, i32 1
  store i32 0, i32* %5788, align 4
  %5789 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %5790 = load i32, i32* %5789, align 4
  %5791 = and i32 %5790, 255
  %5792 = add nuw nsw i32 %5791, 1
  %5793 = zext i32 %5792 to i64
  %5794 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5793, i32 0
  %5795 = load i64, i64* %5794, align 8
  %5796 = and i64 %5795, 7
  %5797 = icmp ugt i64 %5796, 4
  %5798 = and i64 %5795, 24
  %5799 = icmp eq i64 %5798, 0
  %5800 = and i1 %5797, %5799
  br i1 %5800, label %5808, label %5801

5801:                                             ; preds = %5782
  %5802 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %5803 = zext i32 %5791 to i64
  %5804 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5803, i32 0
  %5805 = load i64, i64* %5804, align 8
  %5806 = ashr i64 %5805, 35
  %5807 = trunc i64 %5806 to i32
  br label %5827

5808:                                             ; preds = %5782
  %5809 = lshr i64 %5795, 5
  %5810 = trunc i64 %5809 to i8
  %5811 = icmp ugt i8 %5810, 11
  %5812 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %5813 = zext i32 %5791 to i64
  %5814 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5813, i32 0
  %5815 = load i64, i64* %5814, align 8
  %5816 = ashr i64 %5815, 35
  %5817 = trunc i64 %5816 to i32
  br i1 %5811, label %5818, label %5827

5818:                                             ; preds = %5808
  %5819 = ashr i64 %5795, 35
  %5820 = trunc i64 %5819 to i32
  %5821 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %5812, i64 0, i32 0, i32 0, i32 0
  %5822 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %5823 = and i32 %5822, 32
  %5824 = icmp eq i32 %5823, 0
  br i1 %5824, label %5826, label %5825

5825:                                             ; preds = %5818
  tail call void @_ZN2v88internal9Assembler8vucomissENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %5821, i32 %5817, i32 %5820) #11
  br label %5841

5826:                                             ; preds = %5818
  tail call void @_ZN2v88internal9Assembler7ucomissENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %5821, i32 %5817, i32 %5820) #11
  br label %5841

5827:                                             ; preds = %5801, %5808
  %5828 = phi i32 [ %5807, %5801 ], [ %5817, %5808 ]
  %5829 = phi %"class.v8::internal::TurboAssembler"* [ %5802, %5801 ], [ %5812, %5808 ]
  %5830 = ashr i64 %5795, 35
  %5831 = trunc i64 %5830 to i32
  %5832 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %5831, i32 0) #11
  %5833 = extractvalue { i64, i32 } %5832, 0
  %5834 = extractvalue { i64, i32 } %5832, 1
  %5835 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %5836 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %5837 = and i32 %5836, 32
  %5838 = icmp eq i32 %5837, 0
  br i1 %5838, label %5840, label %5839

5839:                                             ; preds = %5827
  call void @_ZN2v88internal9Assembler8vucomissENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %5835, i32 %5828, i64 %5833, i32 %5834) #11
  br label %5841

5840:                                             ; preds = %5827
  call void @_ZN2v88internal9Assembler7ucomissENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %5835, i32 %5828, i64 %5833, i32 %5834) #11
  br label %5841

5841:                                             ; preds = %5840, %5839, %5826, %5825
  %5842 = phi %"class.v8::internal::TurboAssembler"* [ %5829, %5840 ], [ %5829, %5839 ], [ %5812, %5826 ], [ %5812, %5825 ]
  %5843 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %5844 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %5843, align 8
  %5845 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %5846 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %5845, i64 0, i32 5, i64 0, i32 0
  %5847 = load i64, i64* %5846, align 8
  %5848 = ashr i64 %5847, 35
  %5849 = trunc i64 %5848 to i32
  %5850 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %5844, i64 0, i32 2
  %5851 = load i64, i64* %5850, align 8
  %5852 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %5844, i64 0, i32 3
  %5853 = load i64, i64* %5852, align 8
  %5854 = sub i64 %5853, %5851
  %5855 = icmp ult i64 %5854, 56
  br i1 %5855, label %5856, label %5858, !prof !3

5856:                                             ; preds = %5841
  %5857 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %5844, i64 56) #11
  br label %5860

5858:                                             ; preds = %5841
  %5859 = add i64 %5851, 56
  store i64 %5859, i64* %5850, align 8
  br label %5860

5860:                                             ; preds = %5856, %5858
  %5861 = phi i64 [ %5857, %5856 ], [ %5851, %5858 ]
  %5862 = inttoptr i64 %5861 to %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN"*
  %5863 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN"* %5862, i64 0, i32 0
  call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %5863, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %5864 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN"* %5862, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_123OutOfLineLoadFloat32NaNE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5864, align 8
  %5865 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN"* %5862, i64 0, i32 1, i32 0, i32 0
  store i32 %5849, i32* %5865, align 8
  %5866 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %5842, i64 0, i32 0, i32 0, i32 0
  %5867 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN"* %5862, i64 0, i32 0, i32 1
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %5866, i32 10, %"class.v8::internal::Label"* %5867, i32 1) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %5866, i32 2, %"class.v8::internal::Label"* nonnull %192, i32 0) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %5866, i32 7, %"class.v8::internal::Label"* nonnull %191, i32 0) #11
  %5868 = load i32, i32* %5789, align 4
  %5869 = and i32 %5868, 255
  %5870 = add nuw nsw i32 %5869, 1
  %5871 = zext i32 %5870 to i64
  %5872 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5871, i32 0
  %5873 = load i64, i64* %5872, align 8
  %5874 = and i64 %5873, 7
  %5875 = icmp ugt i64 %5874, 4
  %5876 = and i64 %5873, 24
  %5877 = icmp eq i64 %5876, 0
  %5878 = and i1 %5875, %5877
  br i1 %5878, label %5881, label %5879

5879:                                             ; preds = %5860
  %5880 = bitcast %"class.v8::internal::TurboAssembler"* %5842 to %"class.v8::internal::SharedTurboAssembler"*
  br label %5902

5881:                                             ; preds = %5860
  %5882 = lshr i64 %5873, 5
  %5883 = trunc i64 %5882 to i8
  %5884 = icmp ugt i8 %5883, 11
  %5885 = bitcast %"class.v8::internal::TurboAssembler"* %5842 to %"class.v8::internal::SharedTurboAssembler"*
  br i1 %5884, label %5886, label %5902

5886:                                             ; preds = %5881
  %5887 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %5888 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %5887, i64 0, i32 1
  %5889 = load i32, i32* %5888, align 4
  %5890 = and i32 %5889, 255
  %5891 = add nuw nsw i32 %5890, 1
  %5892 = zext i32 %5891 to i64
  %5893 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %5887, i64 0, i32 5, i64 %5892, i32 0
  %5894 = load i64, i64* %5893, align 8
  %5895 = ashr i64 %5894, 35
  %5896 = trunc i64 %5895 to i32
  %5897 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %5898 = and i32 %5897, 32
  %5899 = icmp eq i32 %5898, 0
  br i1 %5899, label %5901, label %5900

5900:                                             ; preds = %5886
  call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %5866, i8 zeroext 80, i32 10, i32 0, i32 %5896) #11
  br label %5929

5901:                                             ; preds = %5886
  call void @_ZN2v88internal9Assembler8movmskpsENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %5866, i32 10, i32 %5896) #11
  br label %5929

5902:                                             ; preds = %5879, %5881
  %5903 = phi %"class.v8::internal::SharedTurboAssembler"* [ %5880, %5879 ], [ %5885, %5881 ]
  %5904 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %5905 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %5904, i64 0, i32 1
  %5906 = load i32, i32* %5905, align 4
  %5907 = and i32 %5906, 255
  %5908 = add nuw nsw i32 %5907, 1
  %5909 = zext i32 %5908 to i64
  %5910 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %5904, i64 0, i32 5, i64 %5909, i32 0
  %5911 = load i64, i64* %5910, align 8
  %5912 = ashr i64 %5911, 35
  %5913 = trunc i64 %5912 to i32
  %5914 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %5913, i32 0) #11
  %5915 = extractvalue { i64, i32 } %5914, 0
  %5916 = extractvalue { i64, i32 } %5914, 1
  %5917 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %5903, i64 0, i32 0, i32 0
  %5918 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %5919 = and i32 %5918, 32
  %5920 = icmp eq i32 %5919, 0
  br i1 %5920, label %5922, label %5921

5921:                                             ; preds = %5902
  call void @_ZN2v88internal9Assembler3vssEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"* %5917, i8 zeroext 16, i32 15, i32 0, i64 %5915, i32 %5916) #11
  br label %5923

5922:                                             ; preds = %5902
  call void @_ZN2v88internal9Assembler5movssENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %5917, i32 15, i64 %5915, i32 %5916) #11
  br label %5923

5923:                                             ; preds = %5921, %5922
  %5924 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %5925 = and i32 %5924, 32
  %5926 = icmp eq i32 %5925, 0
  br i1 %5926, label %5928, label %5927

5927:                                             ; preds = %5923
  call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %5917, i8 zeroext 80, i32 10, i32 0, i32 15) #11
  br label %5929

5928:                                             ; preds = %5923
  call void @_ZN2v88internal9Assembler8movmskpsENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %5917, i32 10, i32 15) #11
  br label %5929

5929:                                             ; preds = %5928, %5927, %5901, %5900
  %5930 = phi %"class.v8::internal::SharedTurboAssembler"* [ %5885, %5900 ], [ %5885, %5901 ], [ %5903, %5927 ], [ %5903, %5928 ]
  call void @_ZN2v88internal9Assembler9emit_testENS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %5866, i32 10, i64 1, i32 4) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %5866, i32 4, %"class.v8::internal::Label"* nonnull %192, i32 0) #11
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %5866, %"class.v8::internal::Label"* nonnull %191) #11
  %5931 = load i32, i32* %5789, align 4
  %5932 = and i32 %5931, 255
  %5933 = add nuw nsw i32 %5932, 1
  %5934 = zext i32 %5933 to i64
  %5935 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5934, i32 0
  %5936 = load i64, i64* %5935, align 8
  %5937 = and i64 %5936, 7
  %5938 = icmp ugt i64 %5937, 4
  %5939 = and i64 %5936, 24
  %5940 = icmp eq i64 %5939, 0
  %5941 = and i1 %5938, %5940
  br i1 %5941, label %5942, label %5946

5942:                                             ; preds = %5929
  %5943 = lshr i64 %5936, 5
  %5944 = trunc i64 %5943 to i8
  %5945 = icmp ugt i8 %5944, 11
  br label %5946

5946:                                             ; preds = %5929, %5942
  %5947 = phi i1 [ false, %5929 ], [ %5945, %5942 ]
  %5948 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %5949 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %5948, i64 0, i32 1
  %5950 = load i32, i32* %5949, align 4
  %5951 = and i32 %5950, 255
  %5952 = zext i32 %5951 to i64
  %5953 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %5948, i64 0, i32 5, i64 %5952, i32 0
  %5954 = load i64, i64* %5953, align 8
  %5955 = ashr i64 %5954, 35
  %5956 = trunc i64 %5955 to i32
  br i1 %5947, label %5957, label %5969

5957:                                             ; preds = %5946
  %5958 = add nuw nsw i64 %5952, 1
  %5959 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %5948, i64 0, i32 5, i64 %5958, i32 0
  %5960 = load i64, i64* %5959, align 8
  %5961 = ashr i64 %5960, 35
  %5962 = trunc i64 %5961 to i32
  %5963 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %5930, i64 0, i32 0, i32 0
  %5964 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %5965 = and i32 %5964, 32
  %5966 = icmp eq i32 %5965, 0
  br i1 %5966, label %5968, label %5967

5967:                                             ; preds = %5957
  call void @_ZN2v88internal9Assembler3vssEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %5963, i8 zeroext 16, i32 %5956, i32 %5956, i32 %5962) #11
  br label %5985

5968:                                             ; preds = %5957
  call void @_ZN2v88internal9Assembler5movssENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %5963, i32 %5956, i32 %5962) #11
  br label %5985

5969:                                             ; preds = %5946
  %5970 = add nuw nsw i32 %5951, 1
  %5971 = zext i32 %5970 to i64
  %5972 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %5948, i64 0, i32 5, i64 %5971, i32 0
  %5973 = load i64, i64* %5972, align 8
  %5974 = ashr i64 %5973, 35
  %5975 = trunc i64 %5974 to i32
  %5976 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %5975, i32 0) #11
  %5977 = extractvalue { i64, i32 } %5976, 0
  %5978 = extractvalue { i64, i32 } %5976, 1
  %5979 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %5930, i64 0, i32 0, i32 0
  %5980 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %5981 = and i32 %5980, 32
  %5982 = icmp eq i32 %5981, 0
  br i1 %5982, label %5984, label %5983

5983:                                             ; preds = %5969
  call void @_ZN2v88internal9Assembler3vssEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"* %5979, i8 zeroext 16, i32 %5956, i32 0, i64 %5977, i32 %5978) #11
  br label %5985

5984:                                             ; preds = %5969
  call void @_ZN2v88internal9Assembler5movssENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %5979, i32 %5956, i64 %5977, i32 %5978) #11
  br label %5985

5985:                                             ; preds = %5984, %5983, %5968, %5967
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %5866, %"class.v8::internal::Label"* nonnull %192) #11
  %5986 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN"* %5862, i64 0, i32 0, i32 2
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %5866, %"class.v8::internal::Label"* %5986) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5786) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5783) #11
  br label %23402

5987:                                             ; preds = %2
  %5988 = bitcast %"class.v8::internal::Label"* %193 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5988) #11
  %5989 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %193, i64 0, i32 0
  store i32 0, i32* %5989, align 4
  %5990 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %193, i64 0, i32 1
  store i32 0, i32* %5990, align 4
  %5991 = bitcast %"class.v8::internal::Label"* %194 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5991) #11
  %5992 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %194, i64 0, i32 0
  store i32 0, i32* %5992, align 4
  %5993 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %194, i64 0, i32 1
  store i32 0, i32* %5993, align 4
  %5994 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %5995 = load i32, i32* %5994, align 4
  %5996 = and i32 %5995, 255
  %5997 = add nuw nsw i32 %5996, 1
  %5998 = zext i32 %5997 to i64
  %5999 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %5998, i32 0
  %6000 = load i64, i64* %5999, align 8
  %6001 = and i64 %6000, 7
  %6002 = icmp ugt i64 %6001, 4
  %6003 = and i64 %6000, 24
  %6004 = icmp eq i64 %6003, 0
  %6005 = and i1 %6002, %6004
  br i1 %6005, label %6013, label %6006

6006:                                             ; preds = %5987
  %6007 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %6008 = zext i32 %5996 to i64
  %6009 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %6008, i32 0
  %6010 = load i64, i64* %6009, align 8
  %6011 = ashr i64 %6010, 35
  %6012 = trunc i64 %6011 to i32
  br label %6032

6013:                                             ; preds = %5987
  %6014 = lshr i64 %6000, 5
  %6015 = trunc i64 %6014 to i8
  %6016 = icmp ugt i8 %6015, 11
  %6017 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %6018 = zext i32 %5996 to i64
  %6019 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %6018, i32 0
  %6020 = load i64, i64* %6019, align 8
  %6021 = ashr i64 %6020, 35
  %6022 = trunc i64 %6021 to i32
  br i1 %6016, label %6023, label %6032

6023:                                             ; preds = %6013
  %6024 = ashr i64 %6000, 35
  %6025 = trunc i64 %6024 to i32
  %6026 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %6017, i64 0, i32 0, i32 0, i32 0
  %6027 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %6028 = and i32 %6027, 32
  %6029 = icmp eq i32 %6028, 0
  br i1 %6029, label %6031, label %6030

6030:                                             ; preds = %6023
  tail call void @_ZN2v88internal9Assembler3vpdEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %6026, i8 zeroext 46, i32 %6022, i32 0, i32 %6025) #11
  br label %6046

6031:                                             ; preds = %6023
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %6026, i32 %6022, i32 %6025, i8 zeroext 102, i8 zeroext 15, i8 zeroext 46) #11
  br label %6046

6032:                                             ; preds = %6006, %6013
  %6033 = phi i32 [ %6012, %6006 ], [ %6022, %6013 ]
  %6034 = phi %"class.v8::internal::TurboAssembler"* [ %6007, %6006 ], [ %6017, %6013 ]
  %6035 = ashr i64 %6000, 35
  %6036 = trunc i64 %6035 to i32
  %6037 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %6036, i32 0) #11
  %6038 = extractvalue { i64, i32 } %6037, 0
  %6039 = extractvalue { i64, i32 } %6037, 1
  %6040 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %6041 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %6042 = and i32 %6041, 32
  %6043 = icmp eq i32 %6042, 0
  br i1 %6043, label %6045, label %6044

6044:                                             ; preds = %6032
  call void @_ZN2v88internal9Assembler3vpdEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"* %6040, i8 zeroext 46, i32 %6033, i32 0, i64 %6038, i32 %6039) #11
  br label %6046

6045:                                             ; preds = %6032
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %6040, i32 %6033, i64 %6038, i32 %6039, i8 zeroext 102, i8 zeroext 15, i8 zeroext 46) #11
  br label %6046

6046:                                             ; preds = %6045, %6044, %6031, %6030
  %6047 = phi %"class.v8::internal::TurboAssembler"* [ %6034, %6045 ], [ %6034, %6044 ], [ %6017, %6031 ], [ %6017, %6030 ]
  %6048 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %6049 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %6048, align 8
  %6050 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %6051 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6050, i64 0, i32 5, i64 0, i32 0
  %6052 = load i64, i64* %6051, align 8
  %6053 = ashr i64 %6052, 35
  %6054 = trunc i64 %6053 to i32
  %6055 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6049, i64 0, i32 2
  %6056 = load i64, i64* %6055, align 8
  %6057 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6049, i64 0, i32 3
  %6058 = load i64, i64* %6057, align 8
  %6059 = sub i64 %6058, %6056
  %6060 = icmp ult i64 %6059, 56
  br i1 %6060, label %6061, label %6063, !prof !3

6061:                                             ; preds = %6046
  %6062 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %6049, i64 56) #11
  br label %6065

6063:                                             ; preds = %6046
  %6064 = add i64 %6056, 56
  store i64 %6064, i64* %6055, align 8
  br label %6065

6065:                                             ; preds = %6061, %6063
  %6066 = phi i64 [ %6062, %6061 ], [ %6056, %6063 ]
  %6067 = inttoptr i64 %6066 to %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN"*
  %6068 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN"* %6067, i64 0, i32 0
  call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %6068, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %6069 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN"* %6067, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_123OutOfLineLoadFloat64NaNE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6069, align 8
  %6070 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN"* %6067, i64 0, i32 1, i32 0, i32 0
  store i32 %6054, i32* %6070, align 8
  %6071 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %6047, i64 0, i32 0, i32 0, i32 0
  %6072 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN"* %6067, i64 0, i32 0, i32 1
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %6071, i32 10, %"class.v8::internal::Label"* %6072, i32 1) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %6071, i32 7, %"class.v8::internal::Label"* nonnull %194, i32 0) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %6071, i32 2, %"class.v8::internal::Label"* nonnull %193, i32 0) #11
  %6073 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %6074 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6073, i64 0, i32 1
  %6075 = load i32, i32* %6074, align 4
  %6076 = and i32 %6075, 255
  %6077 = zext i32 %6076 to i64
  %6078 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6073, i64 0, i32 5, i64 %6077, i32 0
  %6079 = load i64, i64* %6078, align 8
  %6080 = ashr i64 %6079, 35
  %6081 = trunc i64 %6080 to i32
  %6082 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %6083 = and i32 %6082, 32
  %6084 = icmp eq i32 %6083, 0
  br i1 %6084, label %6086, label %6085

6085:                                             ; preds = %6065
  call void @_ZN2v88internal9Assembler3vpdEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %6071, i8 zeroext 80, i32 10, i32 0, i32 %6081) #11
  br label %6087

6086:                                             ; preds = %6065
  call void @_ZN2v88internal9Assembler8movmskpdENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %6071, i32 10, i32 %6081) #11
  br label %6087

6087:                                             ; preds = %6085, %6086
  call void @_ZN2v88internal9Assembler9emit_testENS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %6071, i32 10, i64 1, i32 4) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %6071, i32 4, %"class.v8::internal::Label"* nonnull %194, i32 0) #11
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %6071, %"class.v8::internal::Label"* nonnull %193) #11
  %6088 = load i32, i32* %5994, align 4
  %6089 = and i32 %6088, 255
  %6090 = add nuw nsw i32 %6089, 1
  %6091 = zext i32 %6090 to i64
  %6092 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %6091, i32 0
  %6093 = load i64, i64* %6092, align 8
  %6094 = and i64 %6093, 7
  %6095 = icmp ugt i64 %6094, 4
  %6096 = and i64 %6093, 24
  %6097 = icmp eq i64 %6096, 0
  %6098 = and i1 %6095, %6097
  br i1 %6098, label %6099, label %6103

6099:                                             ; preds = %6087
  %6100 = lshr i64 %6093, 5
  %6101 = trunc i64 %6100 to i8
  %6102 = icmp ugt i8 %6101, 11
  br label %6103

6103:                                             ; preds = %6087, %6099
  %6104 = phi i1 [ false, %6087 ], [ %6102, %6099 ]
  %6105 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %6106 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6105, i64 0, i32 1
  %6107 = load i32, i32* %6106, align 4
  %6108 = and i32 %6107, 255
  %6109 = zext i32 %6108 to i64
  %6110 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6105, i64 0, i32 5, i64 %6109, i32 0
  %6111 = load i64, i64* %6110, align 8
  %6112 = ashr i64 %6111, 35
  %6113 = trunc i64 %6112 to i32
  br i1 %6104, label %6114, label %6125

6114:                                             ; preds = %6103
  %6115 = add nuw nsw i64 %6109, 1
  %6116 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6105, i64 0, i32 5, i64 %6115, i32 0
  %6117 = load i64, i64* %6116, align 8
  %6118 = ashr i64 %6117, 35
  %6119 = trunc i64 %6118 to i32
  %6120 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %6121 = and i32 %6120, 32
  %6122 = icmp eq i32 %6121, 0
  br i1 %6122, label %6124, label %6123

6123:                                             ; preds = %6114
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %6071, i8 zeroext 16, i32 %6113, i32 %6113, i32 %6119, i32 3, i32 1, i32 0, i32 5) #11
  br label %6140

6124:                                             ; preds = %6114
  call void @_ZN2v88internal9Assembler5movsdENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %6071, i32 %6113, i32 %6119) #11
  br label %6140

6125:                                             ; preds = %6103
  %6126 = add nuw nsw i32 %6108, 1
  %6127 = zext i32 %6126 to i64
  %6128 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6105, i64 0, i32 5, i64 %6127, i32 0
  %6129 = load i64, i64* %6128, align 8
  %6130 = ashr i64 %6129, 35
  %6131 = trunc i64 %6130 to i32
  %6132 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %6131, i32 0) #11
  %6133 = extractvalue { i64, i32 } %6132, 0
  %6134 = extractvalue { i64, i32 } %6132, 1
  %6135 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %6136 = and i32 %6135, 32
  %6137 = icmp eq i32 %6136, 0
  br i1 %6137, label %6139, label %6138

6138:                                             ; preds = %6125
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %6071, i8 zeroext 16, i32 %6113, i32 0, i64 %6133, i32 %6134, i32 3, i32 1, i32 0, i32 5) #11
  br label %6140

6139:                                             ; preds = %6125
  call void @_ZN2v88internal9Assembler5movsdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %6071, i32 %6113, i64 %6133, i32 %6134) #11
  br label %6140

6140:                                             ; preds = %6139, %6138, %6124, %6123
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %6071, %"class.v8::internal::Label"* nonnull %194) #11
  %6141 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN"* %6067, i64 0, i32 0, i32 2
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %6071, %"class.v8::internal::Label"* %6141) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5991) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5988) #11
  br label %23402

6142:                                             ; preds = %2
  %6143 = bitcast %"class.v8::internal::Label"* %195 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6143) #11
  %6144 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %195, i64 0, i32 0
  store i32 0, i32* %6144, align 4
  %6145 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %195, i64 0, i32 1
  store i32 0, i32* %6145, align 4
  %6146 = bitcast %"class.v8::internal::Label"* %196 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6146) #11
  %6147 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %196, i64 0, i32 0
  store i32 0, i32* %6147, align 4
  %6148 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %196, i64 0, i32 1
  store i32 0, i32* %6148, align 4
  %6149 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %6150 = load i32, i32* %6149, align 4
  %6151 = and i32 %6150, 255
  %6152 = add nuw nsw i32 %6151, 1
  %6153 = zext i32 %6152 to i64
  %6154 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %6153, i32 0
  %6155 = load i64, i64* %6154, align 8
  %6156 = and i64 %6155, 7
  %6157 = icmp ugt i64 %6156, 4
  %6158 = and i64 %6155, 24
  %6159 = icmp eq i64 %6158, 0
  %6160 = and i1 %6157, %6159
  br i1 %6160, label %6168, label %6161

6161:                                             ; preds = %6142
  %6162 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %6163 = zext i32 %6151 to i64
  %6164 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %6163, i32 0
  %6165 = load i64, i64* %6164, align 8
  %6166 = ashr i64 %6165, 35
  %6167 = trunc i64 %6166 to i32
  br label %6187

6168:                                             ; preds = %6142
  %6169 = lshr i64 %6155, 5
  %6170 = trunc i64 %6169 to i8
  %6171 = icmp ugt i8 %6170, 11
  %6172 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %6173 = zext i32 %6151 to i64
  %6174 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %6173, i32 0
  %6175 = load i64, i64* %6174, align 8
  %6176 = ashr i64 %6175, 35
  %6177 = trunc i64 %6176 to i32
  br i1 %6171, label %6178, label %6187

6178:                                             ; preds = %6168
  %6179 = ashr i64 %6155, 35
  %6180 = trunc i64 %6179 to i32
  %6181 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %6172, i64 0, i32 0, i32 0, i32 0
  %6182 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %6183 = and i32 %6182, 32
  %6184 = icmp eq i32 %6183, 0
  br i1 %6184, label %6186, label %6185

6185:                                             ; preds = %6178
  tail call void @_ZN2v88internal9Assembler3vpdEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %6181, i8 zeroext 46, i32 %6177, i32 0, i32 %6180) #11
  br label %6201

6186:                                             ; preds = %6178
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %6181, i32 %6177, i32 %6180, i8 zeroext 102, i8 zeroext 15, i8 zeroext 46) #11
  br label %6201

6187:                                             ; preds = %6161, %6168
  %6188 = phi i32 [ %6167, %6161 ], [ %6177, %6168 ]
  %6189 = phi %"class.v8::internal::TurboAssembler"* [ %6162, %6161 ], [ %6172, %6168 ]
  %6190 = ashr i64 %6155, 35
  %6191 = trunc i64 %6190 to i32
  %6192 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %6191, i32 0) #11
  %6193 = extractvalue { i64, i32 } %6192, 0
  %6194 = extractvalue { i64, i32 } %6192, 1
  %6195 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %6196 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %6197 = and i32 %6196, 32
  %6198 = icmp eq i32 %6197, 0
  br i1 %6198, label %6200, label %6199

6199:                                             ; preds = %6187
  call void @_ZN2v88internal9Assembler3vpdEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"* %6195, i8 zeroext 46, i32 %6188, i32 0, i64 %6193, i32 %6194) #11
  br label %6201

6200:                                             ; preds = %6187
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %6195, i32 %6188, i64 %6193, i32 %6194, i8 zeroext 102, i8 zeroext 15, i8 zeroext 46) #11
  br label %6201

6201:                                             ; preds = %6200, %6199, %6186, %6185
  %6202 = phi %"class.v8::internal::TurboAssembler"* [ %6189, %6200 ], [ %6189, %6199 ], [ %6172, %6186 ], [ %6172, %6185 ]
  %6203 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %6204 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %6203, align 8
  %6205 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %6206 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6205, i64 0, i32 5, i64 0, i32 0
  %6207 = load i64, i64* %6206, align 8
  %6208 = ashr i64 %6207, 35
  %6209 = trunc i64 %6208 to i32
  %6210 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6204, i64 0, i32 2
  %6211 = load i64, i64* %6210, align 8
  %6212 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6204, i64 0, i32 3
  %6213 = load i64, i64* %6212, align 8
  %6214 = sub i64 %6213, %6211
  %6215 = icmp ult i64 %6214, 56
  br i1 %6215, label %6216, label %6218, !prof !3

6216:                                             ; preds = %6201
  %6217 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %6204, i64 56) #11
  br label %6220

6218:                                             ; preds = %6201
  %6219 = add i64 %6211, 56
  store i64 %6219, i64* %6210, align 8
  br label %6220

6220:                                             ; preds = %6216, %6218
  %6221 = phi i64 [ %6217, %6216 ], [ %6211, %6218 ]
  %6222 = inttoptr i64 %6221 to %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN"*
  %6223 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN"* %6222, i64 0, i32 0
  call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %6223, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %6224 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN"* %6222, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_123OutOfLineLoadFloat64NaNE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6224, align 8
  %6225 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN"* %6222, i64 0, i32 1, i32 0, i32 0
  store i32 %6209, i32* %6225, align 8
  %6226 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %6202, i64 0, i32 0, i32 0, i32 0
  %6227 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN"* %6222, i64 0, i32 0, i32 1
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %6226, i32 10, %"class.v8::internal::Label"* %6227, i32 1) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %6226, i32 2, %"class.v8::internal::Label"* nonnull %196, i32 0) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %6226, i32 7, %"class.v8::internal::Label"* nonnull %195, i32 0) #11
  %6228 = load i32, i32* %6149, align 4
  %6229 = and i32 %6228, 255
  %6230 = add nuw nsw i32 %6229, 1
  %6231 = zext i32 %6230 to i64
  %6232 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %6231, i32 0
  %6233 = load i64, i64* %6232, align 8
  %6234 = and i64 %6233, 7
  %6235 = icmp ugt i64 %6234, 4
  %6236 = and i64 %6233, 24
  %6237 = icmp eq i64 %6236, 0
  %6238 = and i1 %6235, %6237
  br i1 %6238, label %6241, label %6239

6239:                                             ; preds = %6220
  %6240 = bitcast %"class.v8::internal::TurboAssembler"* %6202 to %"class.v8::internal::SharedTurboAssembler"*
  br label %6262

6241:                                             ; preds = %6220
  %6242 = lshr i64 %6233, 5
  %6243 = trunc i64 %6242 to i8
  %6244 = icmp ugt i8 %6243, 11
  %6245 = bitcast %"class.v8::internal::TurboAssembler"* %6202 to %"class.v8::internal::SharedTurboAssembler"*
  br i1 %6244, label %6246, label %6262

6246:                                             ; preds = %6241
  %6247 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %6248 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6247, i64 0, i32 1
  %6249 = load i32, i32* %6248, align 4
  %6250 = and i32 %6249, 255
  %6251 = add nuw nsw i32 %6250, 1
  %6252 = zext i32 %6251 to i64
  %6253 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6247, i64 0, i32 5, i64 %6252, i32 0
  %6254 = load i64, i64* %6253, align 8
  %6255 = ashr i64 %6254, 35
  %6256 = trunc i64 %6255 to i32
  %6257 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %6258 = and i32 %6257, 32
  %6259 = icmp eq i32 %6258, 0
  br i1 %6259, label %6261, label %6260

6260:                                             ; preds = %6246
  call void @_ZN2v88internal9Assembler3vpdEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %6226, i8 zeroext 80, i32 10, i32 0, i32 %6256) #11
  br label %6289

6261:                                             ; preds = %6246
  call void @_ZN2v88internal9Assembler8movmskpdENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %6226, i32 10, i32 %6256) #11
  br label %6289

6262:                                             ; preds = %6239, %6241
  %6263 = phi %"class.v8::internal::SharedTurboAssembler"* [ %6240, %6239 ], [ %6245, %6241 ]
  %6264 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %6265 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6264, i64 0, i32 1
  %6266 = load i32, i32* %6265, align 4
  %6267 = and i32 %6266, 255
  %6268 = add nuw nsw i32 %6267, 1
  %6269 = zext i32 %6268 to i64
  %6270 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6264, i64 0, i32 5, i64 %6269, i32 0
  %6271 = load i64, i64* %6270, align 8
  %6272 = ashr i64 %6271, 35
  %6273 = trunc i64 %6272 to i32
  %6274 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %6273, i32 0) #11
  %6275 = extractvalue { i64, i32 } %6274, 0
  %6276 = extractvalue { i64, i32 } %6274, 1
  %6277 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %6263, i64 0, i32 0, i32 0
  %6278 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %6279 = and i32 %6278, 32
  %6280 = icmp eq i32 %6279, 0
  br i1 %6280, label %6282, label %6281

6281:                                             ; preds = %6262
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %6277, i8 zeroext 16, i32 15, i32 0, i64 %6275, i32 %6276, i32 3, i32 1, i32 0, i32 5) #11
  br label %6283

6282:                                             ; preds = %6262
  call void @_ZN2v88internal9Assembler5movsdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %6277, i32 15, i64 %6275, i32 %6276) #11
  br label %6283

6283:                                             ; preds = %6281, %6282
  %6284 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %6285 = and i32 %6284, 32
  %6286 = icmp eq i32 %6285, 0
  br i1 %6286, label %6288, label %6287

6287:                                             ; preds = %6283
  call void @_ZN2v88internal9Assembler3vpdEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %6277, i8 zeroext 80, i32 10, i32 0, i32 15) #11
  br label %6289

6288:                                             ; preds = %6283
  call void @_ZN2v88internal9Assembler8movmskpdENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %6277, i32 10, i32 15) #11
  br label %6289

6289:                                             ; preds = %6288, %6287, %6261, %6260
  %6290 = phi %"class.v8::internal::SharedTurboAssembler"* [ %6245, %6260 ], [ %6245, %6261 ], [ %6263, %6287 ], [ %6263, %6288 ]
  call void @_ZN2v88internal9Assembler9emit_testENS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %6226, i32 10, i64 1, i32 4) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %6226, i32 4, %"class.v8::internal::Label"* nonnull %196, i32 0) #11
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %6226, %"class.v8::internal::Label"* nonnull %195) #11
  %6291 = load i32, i32* %6149, align 4
  %6292 = and i32 %6291, 255
  %6293 = add nuw nsw i32 %6292, 1
  %6294 = zext i32 %6293 to i64
  %6295 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %6294, i32 0
  %6296 = load i64, i64* %6295, align 8
  %6297 = and i64 %6296, 7
  %6298 = icmp ugt i64 %6297, 4
  %6299 = and i64 %6296, 24
  %6300 = icmp eq i64 %6299, 0
  %6301 = and i1 %6298, %6300
  br i1 %6301, label %6302, label %6306

6302:                                             ; preds = %6289
  %6303 = lshr i64 %6296, 5
  %6304 = trunc i64 %6303 to i8
  %6305 = icmp ugt i8 %6304, 11
  br label %6306

6306:                                             ; preds = %6289, %6302
  %6307 = phi i1 [ false, %6289 ], [ %6305, %6302 ]
  %6308 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %6309 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6308, i64 0, i32 1
  %6310 = load i32, i32* %6309, align 4
  %6311 = and i32 %6310, 255
  %6312 = zext i32 %6311 to i64
  %6313 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6308, i64 0, i32 5, i64 %6312, i32 0
  %6314 = load i64, i64* %6313, align 8
  %6315 = ashr i64 %6314, 35
  %6316 = trunc i64 %6315 to i32
  br i1 %6307, label %6317, label %6329

6317:                                             ; preds = %6306
  %6318 = add nuw nsw i64 %6312, 1
  %6319 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6308, i64 0, i32 5, i64 %6318, i32 0
  %6320 = load i64, i64* %6319, align 8
  %6321 = ashr i64 %6320, 35
  %6322 = trunc i64 %6321 to i32
  %6323 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %6290, i64 0, i32 0, i32 0
  %6324 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %6325 = and i32 %6324, 32
  %6326 = icmp eq i32 %6325, 0
  br i1 %6326, label %6328, label %6327

6327:                                             ; preds = %6317
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %6323, i8 zeroext 16, i32 %6316, i32 %6316, i32 %6322, i32 3, i32 1, i32 0, i32 5) #11
  br label %6345

6328:                                             ; preds = %6317
  call void @_ZN2v88internal9Assembler5movsdENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %6323, i32 %6316, i32 %6322) #11
  br label %6345

6329:                                             ; preds = %6306
  %6330 = add nuw nsw i32 %6311, 1
  %6331 = zext i32 %6330 to i64
  %6332 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6308, i64 0, i32 5, i64 %6331, i32 0
  %6333 = load i64, i64* %6332, align 8
  %6334 = ashr i64 %6333, 35
  %6335 = trunc i64 %6334 to i32
  %6336 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %6335, i32 0) #11
  %6337 = extractvalue { i64, i32 } %6336, 0
  %6338 = extractvalue { i64, i32 } %6336, 1
  %6339 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %6290, i64 0, i32 0, i32 0
  %6340 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %6341 = and i32 %6340, 32
  %6342 = icmp eq i32 %6341, 0
  br i1 %6342, label %6344, label %6343

6343:                                             ; preds = %6329
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %6339, i8 zeroext 16, i32 %6316, i32 0, i64 %6337, i32 %6338, i32 3, i32 1, i32 0, i32 5) #11
  br label %6345

6344:                                             ; preds = %6329
  call void @_ZN2v88internal9Assembler5movsdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %6339, i32 %6316, i64 %6337, i32 %6338) #11
  br label %6345

6345:                                             ; preds = %6344, %6343, %6328, %6327
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %6226, %"class.v8::internal::Label"* nonnull %196) #11
  %6346 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN"* %6222, i64 0, i32 0, i32 2
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %6226, %"class.v8::internal::Label"* %6346) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6146) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6143) #11
  br label %23402

6347:                                             ; preds = %2, %2
  %6348 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %6349 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %6350 = load i64, i64* %6349, align 8
  %6351 = ashr i64 %6350, 35
  %6352 = trunc i64 %6351 to i32
  tail call void @_ZN2v88internal14TurboAssembler5AbspdENS0_11XMMRegisterE(%"class.v8::internal::TurboAssembler"* %6348, i32 %6352) #11
  br label %23402

6353:                                             ; preds = %2, %2
  %6354 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %6355 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %6356 = load i64, i64* %6355, align 8
  %6357 = ashr i64 %6356, 35
  %6358 = trunc i64 %6357 to i32
  tail call void @_ZN2v88internal14TurboAssembler5NegpdENS0_11XMMRegisterE(%"class.v8::internal::TurboAssembler"* %6354, i32 %6358) #11
  br label %23402

6359:                                             ; preds = %2
  %6360 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %6361 = load i32, i32* %6360, align 4
  %6362 = and i32 %6361, 255
  %6363 = zext i32 %6362 to i64
  %6364 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %6363, i32 0
  %6365 = load i64, i64* %6364, align 8
  %6366 = and i64 %6365, 7
  %6367 = icmp ugt i64 %6366, 4
  %6368 = and i64 %6365, 24
  %6369 = icmp eq i64 %6368, 0
  %6370 = and i1 %6367, %6369
  br i1 %6370, label %6376, label %6371

6371:                                             ; preds = %6359
  %6372 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %6373 = load i64, i64* %6372, align 8
  %6374 = ashr i64 %6373, 35
  %6375 = trunc i64 %6374 to i32
  br label %6393

6376:                                             ; preds = %6359
  %6377 = lshr i64 %6365, 5
  %6378 = trunc i64 %6377 to i8
  %6379 = icmp ugt i8 %6378, 11
  %6380 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %6381 = load i64, i64* %6380, align 8
  %6382 = ashr i64 %6381, 35
  %6383 = trunc i64 %6382 to i32
  br i1 %6379, label %6384, label %6393

6384:                                             ; preds = %6376
  %6385 = ashr i64 %6365, 35
  %6386 = trunc i64 %6385 to i32
  %6387 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %6388 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %6389 = and i32 %6388, 32
  %6390 = icmp eq i32 %6389, 0
  br i1 %6390, label %6392, label %6391

6391:                                             ; preds = %6384
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %6387, i8 zeroext 81, i32 %6383, i32 %6383, i32 %6386, i32 3, i32 1, i32 0, i32 5) #11
  br label %23402

6392:                                             ; preds = %6384
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %6387, i32 %6383, i32 %6386, i8 zeroext -14, i8 zeroext 15, i8 zeroext 81) #11
  br label %23402

6393:                                             ; preds = %6371, %6376
  %6394 = phi i32 [ %6375, %6371 ], [ %6383, %6376 ]
  %6395 = ashr i64 %6365, 35
  %6396 = trunc i64 %6395 to i32
  %6397 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %6396, i32 0) #11
  %6398 = extractvalue { i64, i32 } %6397, 0
  %6399 = extractvalue { i64, i32 } %6397, 1
  %6400 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %6401 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %6402 = and i32 %6401, 32
  %6403 = icmp eq i32 %6402, 0
  br i1 %6403, label %6405, label %6404

6404:                                             ; preds = %6393
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %6400, i8 zeroext 81, i32 %6394, i32 %6394, i64 %6398, i32 %6399, i32 3, i32 1, i32 0, i32 5) #11
  br label %23402

6405:                                             ; preds = %6393
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %6400, i32 %6394, i64 %6398, i32 %6399, i8 zeroext -14, i8 zeroext 15, i8 zeroext 81) #11
  br label %23402

6406:                                             ; preds = %2
  %6407 = lshr i32 %275, 22
  %6408 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %6409 = load i64, i64* %6408, align 8
  %6410 = ashr i64 %6409, 35
  %6411 = trunc i64 %6410 to i32
  %6412 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %6413 = load i32, i32* %6412, align 4
  %6414 = and i32 %6413, 255
  %6415 = zext i32 %6414 to i64
  %6416 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %6415, i32 0
  %6417 = load i64, i64* %6416, align 8
  %6418 = ashr i64 %6417, 35
  %6419 = trunc i64 %6418 to i32
  %6420 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %6421 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %6422 = and i32 %6421, 32
  %6423 = icmp eq i32 %6422, 0
  br i1 %6423, label %6430, label %6424

6424:                                             ; preds = %6406
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %6420, i8 zeroext 11, i32 %6411, i32 %6411, i32 %6419, i32 1, i32 3, i32 0, i32 5) #11
  %6425 = trunc i32 %6407 to i8
  %6426 = or i8 %6425, 8
  %6427 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %6428 = load i8*, i8** %6427, align 8
  %6429 = getelementptr inbounds i8, i8* %6428, i64 1
  store i8* %6429, i8** %6427, align 8
  store i8 %6426, i8* %6428, align 1
  br label %23402

6430:                                             ; preds = %6406
  tail call void @_ZN2v88internal9Assembler7roundsdENS0_11XMMRegisterES2_NS0_12RoundingModeE(%"class.v8::internal::Assembler"* %6420, i32 %6411, i32 %6419, i32 %6407) #11
  br label %23402

6431:                                             ; preds = %2
  %6432 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %6433 = load i32, i32* %6432, align 4
  %6434 = and i32 %6433, 255
  %6435 = zext i32 %6434 to i64
  %6436 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %6435, i32 0
  %6437 = load i64, i64* %6436, align 8
  %6438 = and i64 %6437, 7
  %6439 = icmp ugt i64 %6438, 4
  %6440 = and i64 %6437, 24
  %6441 = icmp eq i64 %6440, 0
  %6442 = and i1 %6439, %6441
  br i1 %6442, label %6449, label %6443

6443:                                             ; preds = %6431
  %6444 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %6445 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %6446 = load i64, i64* %6445, align 8
  %6447 = ashr i64 %6446, 35
  %6448 = trunc i64 %6447 to i32
  br label %6461

6449:                                             ; preds = %6431
  %6450 = lshr i64 %6437, 5
  %6451 = trunc i64 %6450 to i8
  %6452 = icmp ugt i8 %6451, 11
  %6453 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %6454 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %6455 = load i64, i64* %6454, align 8
  %6456 = ashr i64 %6455, 35
  %6457 = trunc i64 %6456 to i32
  br i1 %6452, label %6458, label %6461

6458:                                             ; preds = %6449
  %6459 = ashr i64 %6437, 35
  %6460 = trunc i64 %6459 to i32
  tail call void @_ZN2v88internal14TurboAssembler8Cvtsd2ssENS0_11XMMRegisterES2_(%"class.v8::internal::TurboAssembler"* %6453, i32 %6457, i32 %6460) #11
  br label %23402

6461:                                             ; preds = %6443, %6449
  %6462 = phi i32 [ %6448, %6443 ], [ %6457, %6449 ]
  %6463 = phi %"class.v8::internal::TurboAssembler"* [ %6444, %6443 ], [ %6453, %6449 ]
  %6464 = ashr i64 %6437, 35
  %6465 = trunc i64 %6464 to i32
  %6466 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %6465, i32 0) #11
  %6467 = extractvalue { i64, i32 } %6466, 0
  %6468 = extractvalue { i64, i32 } %6466, 1
  call void @_ZN2v88internal14TurboAssembler8Cvtsd2ssENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %6463, i32 %6462, i64 %6467, i32 %6468) #11
  br label %23402

6469:                                             ; preds = %2
  %6470 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %6471 = load i32, i32* %6470, align 4
  %6472 = and i32 %6471, 255
  %6473 = zext i32 %6472 to i64
  %6474 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %6473, i32 0
  %6475 = load i64, i64* %6474, align 8
  %6476 = and i64 %6475, 7
  %6477 = icmp ugt i64 %6476, 4
  %6478 = and i64 %6475, 24
  %6479 = icmp eq i64 %6478, 0
  %6480 = and i1 %6477, %6479
  br i1 %6480, label %6487, label %6481

6481:                                             ; preds = %6469
  %6482 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %6483 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %6484 = load i64, i64* %6483, align 8
  %6485 = ashr i64 %6484, 35
  %6486 = trunc i64 %6485 to i32
  br label %6499

6487:                                             ; preds = %6469
  %6488 = lshr i64 %6475, 5
  %6489 = trunc i64 %6488 to i8
  %6490 = icmp ugt i8 %6489, 11
  %6491 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %6492 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %6493 = load i64, i64* %6492, align 8
  %6494 = ashr i64 %6493, 35
  %6495 = trunc i64 %6494 to i32
  br i1 %6490, label %6496, label %6499

6496:                                             ; preds = %6487
  %6497 = ashr i64 %6475, 35
  %6498 = trunc i64 %6497 to i32
  tail call void @_ZN2v88internal14TurboAssembler9Cvttsd2siENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::TurboAssembler"* %6491, i32 %6495, i32 %6498) #11
  br label %23402

6499:                                             ; preds = %6481, %6487
  %6500 = phi i32 [ %6486, %6481 ], [ %6495, %6487 ]
  %6501 = phi %"class.v8::internal::TurboAssembler"* [ %6482, %6481 ], [ %6491, %6487 ]
  %6502 = ashr i64 %6475, 35
  %6503 = trunc i64 %6502 to i32
  %6504 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %6503, i32 0) #11
  %6505 = extractvalue { i64, i32 } %6504, 0
  %6506 = extractvalue { i64, i32 } %6504, 1
  call void @_ZN2v88internal14TurboAssembler9Cvttsd2siENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %6501, i32 %6500, i64 %6505, i32 %6506) #11
  br label %23402

6507:                                             ; preds = %2
  %6508 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %6509 = load i32, i32* %6508, align 4
  %6510 = and i32 %6509, 255
  %6511 = zext i32 %6510 to i64
  %6512 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %6511, i32 0
  %6513 = load i64, i64* %6512, align 8
  %6514 = and i64 %6513, 7
  %6515 = icmp ugt i64 %6514, 4
  %6516 = and i64 %6513, 24
  %6517 = icmp eq i64 %6516, 0
  %6518 = and i1 %6515, %6517
  br i1 %6518, label %6525, label %6519

6519:                                             ; preds = %6507
  %6520 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %6521 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %6522 = load i64, i64* %6521, align 8
  %6523 = ashr i64 %6522, 35
  %6524 = trunc i64 %6523 to i32
  br label %6537

6525:                                             ; preds = %6507
  %6526 = lshr i64 %6513, 5
  %6527 = trunc i64 %6526 to i8
  %6528 = icmp ugt i8 %6527, 11
  %6529 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %6530 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %6531 = load i64, i64* %6530, align 8
  %6532 = ashr i64 %6531, 35
  %6533 = trunc i64 %6532 to i32
  br i1 %6528, label %6534, label %6537

6534:                                             ; preds = %6525
  %6535 = ashr i64 %6513, 35
  %6536 = trunc i64 %6535 to i32
  tail call void @_ZN2v88internal14TurboAssembler10Cvttsd2siqENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::TurboAssembler"* %6529, i32 %6533, i32 %6536) #11
  br label %6545

6537:                                             ; preds = %6519, %6525
  %6538 = phi i32 [ %6524, %6519 ], [ %6533, %6525 ]
  %6539 = phi %"class.v8::internal::TurboAssembler"* [ %6520, %6519 ], [ %6529, %6525 ]
  %6540 = ashr i64 %6513, 35
  %6541 = trunc i64 %6540 to i32
  %6542 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %6541, i32 0) #11
  %6543 = extractvalue { i64, i32 } %6542, 0
  %6544 = extractvalue { i64, i32 } %6542, 1
  call void @_ZN2v88internal14TurboAssembler10Cvttsd2siqENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %6539, i32 %6538, i64 %6543, i32 %6544) #11
  br label %6545

6545:                                             ; preds = %6537, %6534
  %6546 = phi %"class.v8::internal::TurboAssembler"* [ %6539, %6537 ], [ %6529, %6534 ]
  %6547 = load i32, i32* %274, align 8
  %6548 = icmp ult i32 %6547, 4194304
  br i1 %6548, label %23402, label %6549

6549:                                             ; preds = %6545
  %6550 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %6551 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6550, i64 0, i32 5, i64 0, i32 0
  %6552 = load i64, i64* %6551, align 8
  %6553 = ashr i64 %6552, 35
  %6554 = trunc i64 %6553 to i32
  call void @_ZN2v88internal14TurboAssembler18AssertZeroExtendedENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %6546, i32 %6554) #11
  br label %23402

6555:                                             ; preds = %2
  %6556 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %6557 = load i32, i32* %6556, align 4
  %6558 = and i32 %6557, 255
  %6559 = zext i32 %6558 to i64
  %6560 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %6559, i32 0
  %6561 = load i64, i64* %6560, align 8
  %6562 = and i64 %6561, 7
  %6563 = icmp ugt i64 %6562, 4
  %6564 = and i64 %6561, 24
  %6565 = icmp eq i64 %6564, 0
  %6566 = and i1 %6563, %6565
  br i1 %6566, label %6573, label %6567

6567:                                             ; preds = %6555
  %6568 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %6569 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %6570 = load i64, i64* %6569, align 8
  %6571 = ashr i64 %6570, 35
  %6572 = trunc i64 %6571 to i32
  br label %6585

6573:                                             ; preds = %6555
  %6574 = lshr i64 %6561, 5
  %6575 = trunc i64 %6574 to i8
  %6576 = icmp ugt i8 %6575, 11
  %6577 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %6578 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %6579 = load i64, i64* %6578, align 8
  %6580 = ashr i64 %6579, 35
  %6581 = trunc i64 %6580 to i32
  br i1 %6576, label %6582, label %6585

6582:                                             ; preds = %6573
  %6583 = ashr i64 %6561, 35
  %6584 = trunc i64 %6583 to i32
  tail call void @_ZN2v88internal14TurboAssembler10Cvttss2siqENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::TurboAssembler"* %6577, i32 %6581, i32 %6584) #11
  br label %6593

6585:                                             ; preds = %6567, %6573
  %6586 = phi i32 [ %6572, %6567 ], [ %6581, %6573 ]
  %6587 = phi %"class.v8::internal::TurboAssembler"* [ %6568, %6567 ], [ %6577, %6573 ]
  %6588 = ashr i64 %6561, 35
  %6589 = trunc i64 %6588 to i32
  %6590 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %6589, i32 0) #11
  %6591 = extractvalue { i64, i32 } %6590, 0
  %6592 = extractvalue { i64, i32 } %6590, 1
  call void @_ZN2v88internal14TurboAssembler10Cvttss2siqENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %6587, i32 %6586, i64 %6591, i32 %6592) #11
  br label %6593

6593:                                             ; preds = %6585, %6582
  %6594 = phi %"class.v8::internal::TurboAssembler"* [ %6587, %6585 ], [ %6577, %6582 ]
  %6595 = load i32, i32* %6556, align 4
  %6596 = and i32 %6595, 254
  %6597 = icmp eq i32 %6596, 0
  br i1 %6597, label %23402, label %6598

6598:                                             ; preds = %6593
  %6599 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %6600 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6599, i64 0, i32 5, i64 1, i32 0
  %6601 = load i64, i64* %6600, align 8
  %6602 = ashr i64 %6601, 35
  %6603 = trunc i64 %6602 to i32
  %6604 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %6594, i64 0, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %6604, i8 zeroext 51, i32 %6603, i32 %6603, i32 4) #11
  call void @_ZN2v88internal9Assembler4movbENS0_8RegisterENS0_9ImmediateE(%"class.v8::internal::Assembler"* %6604, i32 %6603, i64 1) #11
  %6605 = bitcast %"class.v8::internal::Label"* %197 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6605) #11
  %6606 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %197, i64 0, i32 0
  store i32 0, i32* %6606, align 4
  %6607 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %197, i64 0, i32 1
  store i32 0, i32* %6607, align 4
  %6608 = bitcast %"class.v8::internal::Label"* %198 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6608) #11
  %6609 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %198, i64 0, i32 0
  store i32 0, i32* %6609, align 4
  %6610 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %198, i64 0, i32 1
  store i32 0, i32* %6610, align 4
  call void @_ZN2v88internal14TurboAssembler4MoveENS0_11XMMRegisterEj(%"class.v8::internal::TurboAssembler"* %6594, i32 15, i32 -553648128) #11
  %6611 = load i32, i32* %6556, align 4
  %6612 = and i32 %6611, 255
  %6613 = zext i32 %6612 to i64
  %6614 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %6613, i32 0
  %6615 = load i64, i64* %6614, align 8
  %6616 = and i64 %6615, 7
  %6617 = icmp ugt i64 %6616, 4
  %6618 = and i64 %6615, 24
  %6619 = icmp eq i64 %6618, 0
  %6620 = and i1 %6617, %6619
  br i1 %6620, label %6621, label %6640

6621:                                             ; preds = %6598
  %6622 = lshr i64 %6615, 5
  %6623 = trunc i64 %6622 to i8
  %6624 = icmp ugt i8 %6623, 11
  br i1 %6624, label %6625, label %6640

6625:                                             ; preds = %6621
  %6626 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %6627 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6626, i64 0, i32 1
  %6628 = load i32, i32* %6627, align 4
  %6629 = and i32 %6628, 255
  %6630 = zext i32 %6629 to i64
  %6631 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6626, i64 0, i32 5, i64 %6630, i32 0
  %6632 = load i64, i64* %6631, align 8
  %6633 = ashr i64 %6632, 35
  %6634 = trunc i64 %6633 to i32
  %6635 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %6636 = and i32 %6635, 32
  %6637 = icmp eq i32 %6636, 0
  br i1 %6637, label %6639, label %6638

6638:                                             ; preds = %6625
  call void @_ZN2v88internal9Assembler8vucomissENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %6604, i32 15, i32 %6634) #11
  br label %6658

6639:                                             ; preds = %6625
  call void @_ZN2v88internal9Assembler7ucomissENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %6604, i32 15, i32 %6634) #11
  br label %6658

6640:                                             ; preds = %6598, %6621
  %6641 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %6642 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6641, i64 0, i32 1
  %6643 = load i32, i32* %6642, align 4
  %6644 = and i32 %6643, 255
  %6645 = zext i32 %6644 to i64
  %6646 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6641, i64 0, i32 5, i64 %6645, i32 0
  %6647 = load i64, i64* %6646, align 8
  %6648 = ashr i64 %6647, 35
  %6649 = trunc i64 %6648 to i32
  %6650 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %6649, i32 0) #11
  %6651 = extractvalue { i64, i32 } %6650, 0
  %6652 = extractvalue { i64, i32 } %6650, 1
  %6653 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %6654 = and i32 %6653, 32
  %6655 = icmp eq i32 %6654, 0
  br i1 %6655, label %6657, label %6656

6656:                                             ; preds = %6640
  call void @_ZN2v88internal9Assembler8vucomissENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %6604, i32 15, i64 %6651, i32 %6652) #11
  br label %6658

6657:                                             ; preds = %6640
  call void @_ZN2v88internal9Assembler7ucomissENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %6604, i32 15, i64 %6651, i32 %6652) #11
  br label %6658

6658:                                             ; preds = %6657, %6656, %6639, %6638
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %6604, i32 10, %"class.v8::internal::Label"* nonnull %198, i32 0) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %6604, i32 4, %"class.v8::internal::Label"* nonnull %197, i32 0) #11
  %6659 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %6660 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6659, i64 0, i32 5, i64 0, i32 0
  %6661 = load i64, i64* %6660, align 8
  %6662 = ashr i64 %6661, 35
  %6663 = trunc i64 %6662 to i32
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %6604, i8 zeroext 7, i32 %6663, i64 1, i32 8) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %6604, i32 1, %"class.v8::internal::Label"* nonnull %197, i32 0) #11
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %6604, %"class.v8::internal::Label"* nonnull %198) #11
  %6664 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %6665 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6664, i64 0, i32 5, i64 1, i32 0
  %6666 = load i64, i64* %6665, align 8
  %6667 = ashr i64 %6666, 35
  %6668 = trunc i64 %6667 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %6604, i8 zeroext 51, i32 %6668, i32 %6668, i32 4) #11
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %6604, %"class.v8::internal::Label"* nonnull %197) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6608) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6605) #11
  br label %23402

6669:                                             ; preds = %2
  %6670 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %6671 = load i32, i32* %6670, align 4
  %6672 = and i32 %6671, 255
  %6673 = zext i32 %6672 to i64
  %6674 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %6673, i32 0
  %6675 = load i64, i64* %6674, align 8
  %6676 = and i64 %6675, 7
  %6677 = icmp ugt i64 %6676, 4
  %6678 = and i64 %6675, 24
  %6679 = icmp eq i64 %6678, 0
  %6680 = and i1 %6677, %6679
  br i1 %6680, label %6687, label %6681

6681:                                             ; preds = %6669
  %6682 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %6683 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %6684 = load i64, i64* %6683, align 8
  %6685 = ashr i64 %6684, 35
  %6686 = trunc i64 %6685 to i32
  br label %6699

6687:                                             ; preds = %6669
  %6688 = lshr i64 %6675, 5
  %6689 = trunc i64 %6688 to i8
  %6690 = icmp ugt i8 %6689, 11
  %6691 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %6692 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %6693 = load i64, i64* %6692, align 8
  %6694 = ashr i64 %6693, 35
  %6695 = trunc i64 %6694 to i32
  br i1 %6690, label %6696, label %6699

6696:                                             ; preds = %6687
  %6697 = ashr i64 %6675, 35
  %6698 = trunc i64 %6697 to i32
  tail call void @_ZN2v88internal14TurboAssembler10Cvttsd2siqENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::TurboAssembler"* %6691, i32 %6695, i32 %6698) #11
  br label %6707

6699:                                             ; preds = %6681, %6687
  %6700 = phi i32 [ %6686, %6681 ], [ %6695, %6687 ]
  %6701 = phi %"class.v8::internal::TurboAssembler"* [ %6682, %6681 ], [ %6691, %6687 ]
  %6702 = ashr i64 %6675, 35
  %6703 = trunc i64 %6702 to i32
  %6704 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %6703, i32 0) #11
  %6705 = extractvalue { i64, i32 } %6704, 0
  %6706 = extractvalue { i64, i32 } %6704, 1
  call void @_ZN2v88internal14TurboAssembler10Cvttsd2siqENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %6701, i32 %6700, i64 %6705, i32 %6706) #11
  br label %6707

6707:                                             ; preds = %6699, %6696
  %6708 = phi %"class.v8::internal::TurboAssembler"* [ %6701, %6699 ], [ %6691, %6696 ]
  %6709 = load i32, i32* %6670, align 4
  %6710 = and i32 %6709, 254
  %6711 = icmp eq i32 %6710, 0
  br i1 %6711, label %23402, label %6712

6712:                                             ; preds = %6707
  %6713 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %6714 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6713, i64 0, i32 5, i64 1, i32 0
  %6715 = load i64, i64* %6714, align 8
  %6716 = ashr i64 %6715, 35
  %6717 = trunc i64 %6716 to i32
  %6718 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %6708, i64 0, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %6718, i8 zeroext 51, i32 %6717, i32 %6717, i32 4) #11
  call void @_ZN2v88internal9Assembler4movbENS0_8RegisterENS0_9ImmediateE(%"class.v8::internal::Assembler"* %6718, i32 %6717, i64 1) #11
  %6719 = bitcast %"class.v8::internal::Label"* %199 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6719) #11
  %6720 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %199, i64 0, i32 0
  store i32 0, i32* %6720, align 4
  %6721 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %199, i64 0, i32 1
  store i32 0, i32* %6721, align 4
  %6722 = bitcast %"class.v8::internal::Label"* %200 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6722) #11
  %6723 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %200, i64 0, i32 0
  store i32 0, i32* %6723, align 4
  %6724 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %200, i64 0, i32 1
  store i32 0, i32* %6724, align 4
  call void @_ZN2v88internal14TurboAssembler4MoveENS0_11XMMRegisterEm(%"class.v8::internal::TurboAssembler"* %6708, i32 15, i64 -4332462841530417152) #11
  %6725 = load i32, i32* %6670, align 4
  %6726 = and i32 %6725, 255
  %6727 = zext i32 %6726 to i64
  %6728 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %6727, i32 0
  %6729 = load i64, i64* %6728, align 8
  %6730 = and i64 %6729, 7
  %6731 = icmp ugt i64 %6730, 4
  %6732 = and i64 %6729, 24
  %6733 = icmp eq i64 %6732, 0
  %6734 = and i1 %6731, %6733
  br i1 %6734, label %6735, label %6754

6735:                                             ; preds = %6712
  %6736 = lshr i64 %6729, 5
  %6737 = trunc i64 %6736 to i8
  %6738 = icmp ugt i8 %6737, 11
  br i1 %6738, label %6739, label %6754

6739:                                             ; preds = %6735
  %6740 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %6741 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6740, i64 0, i32 1
  %6742 = load i32, i32* %6741, align 4
  %6743 = and i32 %6742, 255
  %6744 = zext i32 %6743 to i64
  %6745 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6740, i64 0, i32 5, i64 %6744, i32 0
  %6746 = load i64, i64* %6745, align 8
  %6747 = ashr i64 %6746, 35
  %6748 = trunc i64 %6747 to i32
  %6749 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %6750 = and i32 %6749, 32
  %6751 = icmp eq i32 %6750, 0
  br i1 %6751, label %6753, label %6752

6752:                                             ; preds = %6739
  call void @_ZN2v88internal9Assembler3vpdEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %6718, i8 zeroext 46, i32 15, i32 0, i32 %6748) #11
  br label %6772

6753:                                             ; preds = %6739
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %6718, i32 15, i32 %6748, i8 zeroext 102, i8 zeroext 15, i8 zeroext 46) #11
  br label %6772

6754:                                             ; preds = %6712, %6735
  %6755 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %6756 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6755, i64 0, i32 1
  %6757 = load i32, i32* %6756, align 4
  %6758 = and i32 %6757, 255
  %6759 = zext i32 %6758 to i64
  %6760 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6755, i64 0, i32 5, i64 %6759, i32 0
  %6761 = load i64, i64* %6760, align 8
  %6762 = ashr i64 %6761, 35
  %6763 = trunc i64 %6762 to i32
  %6764 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %6763, i32 0) #11
  %6765 = extractvalue { i64, i32 } %6764, 0
  %6766 = extractvalue { i64, i32 } %6764, 1
  %6767 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %6768 = and i32 %6767, 32
  %6769 = icmp eq i32 %6768, 0
  br i1 %6769, label %6771, label %6770

6770:                                             ; preds = %6754
  call void @_ZN2v88internal9Assembler3vpdEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"* %6718, i8 zeroext 46, i32 15, i32 0, i64 %6765, i32 %6766) #11
  br label %6772

6771:                                             ; preds = %6754
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %6718, i32 15, i64 %6765, i32 %6766, i8 zeroext 102, i8 zeroext 15, i8 zeroext 46) #11
  br label %6772

6772:                                             ; preds = %6771, %6770, %6753, %6752
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %6718, i32 10, %"class.v8::internal::Label"* nonnull %200, i32 0) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %6718, i32 4, %"class.v8::internal::Label"* nonnull %199, i32 0) #11
  %6773 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %6774 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6773, i64 0, i32 5, i64 0, i32 0
  %6775 = load i64, i64* %6774, align 8
  %6776 = ashr i64 %6775, 35
  %6777 = trunc i64 %6776 to i32
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %6718, i8 zeroext 7, i32 %6777, i64 1, i32 8) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %6718, i32 1, %"class.v8::internal::Label"* nonnull %199, i32 0) #11
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %6718, %"class.v8::internal::Label"* nonnull %200) #11
  %6778 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %6779 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6778, i64 0, i32 5, i64 1, i32 0
  %6780 = load i64, i64* %6779, align 8
  %6781 = ashr i64 %6780, 35
  %6782 = trunc i64 %6781 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %6718, i8 zeroext 51, i32 %6782, i32 %6782, i32 4) #11
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %6718, %"class.v8::internal::Label"* nonnull %199) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6722) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6719) #11
  br label %23402

6783:                                             ; preds = %2
  %6784 = bitcast %"class.v8::internal::Label"* %201 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6784) #11
  %6785 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %201, i64 0, i32 0
  store i32 0, i32* %6785, align 4
  %6786 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %201, i64 0, i32 1
  store i32 0, i32* %6786, align 4
  %6787 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %6788 = load i32, i32* %6787, align 4
  %6789 = and i32 %6788, 254
  %6790 = icmp eq i32 %6789, 0
  br i1 %6790, label %6798, label %6791

6791:                                             ; preds = %6783
  %6792 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 1, i32 0
  %6793 = load i64, i64* %6792, align 8
  %6794 = ashr i64 %6793, 35
  %6795 = trunc i64 %6794 to i32
  %6796 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %6796, i8 zeroext 51, i32 %6795, i32 %6795, i32 4) #11
  %6797 = load i32, i32* %6787, align 4
  br label %6798

6798:                                             ; preds = %6783, %6791
  %6799 = phi i32 [ %6788, %6783 ], [ %6797, %6791 ]
  %6800 = and i32 %6799, 255
  %6801 = zext i32 %6800 to i64
  %6802 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %6801, i32 0
  %6803 = load i64, i64* %6802, align 8
  %6804 = and i64 %6803, 7
  %6805 = icmp ugt i64 %6804, 4
  %6806 = and i64 %6803, 24
  %6807 = icmp eq i64 %6806, 0
  %6808 = and i1 %6805, %6807
  br i1 %6808, label %6815, label %6809

6809:                                             ; preds = %6798
  %6810 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %6811 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %6812 = load i64, i64* %6811, align 8
  %6813 = ashr i64 %6812, 35
  %6814 = trunc i64 %6813 to i32
  br label %6827

6815:                                             ; preds = %6798
  %6816 = lshr i64 %6803, 5
  %6817 = trunc i64 %6816 to i8
  %6818 = icmp ugt i8 %6817, 11
  %6819 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %6820 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %6821 = load i64, i64* %6820, align 8
  %6822 = ashr i64 %6821, 35
  %6823 = trunc i64 %6822 to i32
  br i1 %6818, label %6824, label %6827

6824:                                             ; preds = %6815
  %6825 = ashr i64 %6803, 35
  %6826 = trunc i64 %6825 to i32
  call void @_ZN2v88internal14TurboAssembler10Cvttss2uiqENS0_8RegisterENS0_11XMMRegisterEPNS0_5LabelE(%"class.v8::internal::TurboAssembler"* %6819, i32 %6823, i32 %6826, %"class.v8::internal::Label"* nonnull %201) #11
  br label %6835

6827:                                             ; preds = %6809, %6815
  %6828 = phi i32 [ %6814, %6809 ], [ %6823, %6815 ]
  %6829 = phi %"class.v8::internal::TurboAssembler"* [ %6810, %6809 ], [ %6819, %6815 ]
  %6830 = ashr i64 %6803, 35
  %6831 = trunc i64 %6830 to i32
  %6832 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %6831, i32 0) #11
  %6833 = extractvalue { i64, i32 } %6832, 0
  %6834 = extractvalue { i64, i32 } %6832, 1
  call void @_ZN2v88internal14TurboAssembler10Cvttss2uiqENS0_8RegisterENS0_7OperandEPNS0_5LabelE(%"class.v8::internal::TurboAssembler"* %6829, i32 %6828, i64 %6833, i32 %6834, %"class.v8::internal::Label"* nonnull %201) #11
  br label %6835

6835:                                             ; preds = %6827, %6824
  %6836 = phi %"class.v8::internal::TurboAssembler"* [ %6829, %6827 ], [ %6819, %6824 ]
  %6837 = load i32, i32* %6787, align 4
  %6838 = and i32 %6837, 254
  %6839 = icmp eq i32 %6838, 0
  br i1 %6839, label %6847, label %6840

6840:                                             ; preds = %6835
  %6841 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %6842 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6841, i64 0, i32 5, i64 1, i32 0
  %6843 = load i64, i64* %6842, align 8
  %6844 = ashr i64 %6843, 35
  %6845 = trunc i64 %6844 to i32
  %6846 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %6836, i64 0, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %6846, i8 zeroext 51, i32 %6845, i32 %6845, i32 4) #11
  call void @_ZN2v88internal9Assembler4movbENS0_8RegisterENS0_9ImmediateE(%"class.v8::internal::Assembler"* %6846, i32 %6845, i64 1) #11
  br label %6847

6847:                                             ; preds = %6835, %6840
  %6848 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %6836, i64 0, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %6848, %"class.v8::internal::Label"* nonnull %201) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6784) #11
  br label %23402

6849:                                             ; preds = %2
  %6850 = bitcast %"class.v8::internal::Label"* %202 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6850) #11
  %6851 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %202, i64 0, i32 0
  store i32 0, i32* %6851, align 4
  %6852 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %202, i64 0, i32 1
  store i32 0, i32* %6852, align 4
  %6853 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %6854 = load i32, i32* %6853, align 4
  %6855 = and i32 %6854, 254
  %6856 = icmp eq i32 %6855, 0
  br i1 %6856, label %6864, label %6857

6857:                                             ; preds = %6849
  %6858 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 1, i32 0
  %6859 = load i64, i64* %6858, align 8
  %6860 = ashr i64 %6859, 35
  %6861 = trunc i64 %6860 to i32
  %6862 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %6862, i8 zeroext 51, i32 %6861, i32 %6861, i32 4) #11
  %6863 = load i32, i32* %6853, align 4
  br label %6864

6864:                                             ; preds = %6849, %6857
  %6865 = phi i32 [ %6854, %6849 ], [ %6863, %6857 ]
  %6866 = and i32 %6865, 255
  %6867 = zext i32 %6866 to i64
  %6868 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %6867, i32 0
  %6869 = load i64, i64* %6868, align 8
  %6870 = and i64 %6869, 7
  %6871 = icmp ugt i64 %6870, 4
  %6872 = and i64 %6869, 24
  %6873 = icmp eq i64 %6872, 0
  %6874 = and i1 %6871, %6873
  br i1 %6874, label %6881, label %6875

6875:                                             ; preds = %6864
  %6876 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %6877 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %6878 = load i64, i64* %6877, align 8
  %6879 = ashr i64 %6878, 35
  %6880 = trunc i64 %6879 to i32
  br label %6893

6881:                                             ; preds = %6864
  %6882 = lshr i64 %6869, 5
  %6883 = trunc i64 %6882 to i8
  %6884 = icmp ugt i8 %6883, 11
  %6885 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %6886 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %6887 = load i64, i64* %6886, align 8
  %6888 = ashr i64 %6887, 35
  %6889 = trunc i64 %6888 to i32
  br i1 %6884, label %6890, label %6893

6890:                                             ; preds = %6881
  %6891 = ashr i64 %6869, 35
  %6892 = trunc i64 %6891 to i32
  call void @_ZN2v88internal14TurboAssembler10Cvttsd2uiqENS0_8RegisterENS0_11XMMRegisterEPNS0_5LabelE(%"class.v8::internal::TurboAssembler"* %6885, i32 %6889, i32 %6892, %"class.v8::internal::Label"* nonnull %202) #11
  br label %6901

6893:                                             ; preds = %6875, %6881
  %6894 = phi i32 [ %6880, %6875 ], [ %6889, %6881 ]
  %6895 = phi %"class.v8::internal::TurboAssembler"* [ %6876, %6875 ], [ %6885, %6881 ]
  %6896 = ashr i64 %6869, 35
  %6897 = trunc i64 %6896 to i32
  %6898 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %6897, i32 0) #11
  %6899 = extractvalue { i64, i32 } %6898, 0
  %6900 = extractvalue { i64, i32 } %6898, 1
  call void @_ZN2v88internal14TurboAssembler10Cvttsd2uiqENS0_8RegisterENS0_7OperandEPNS0_5LabelE(%"class.v8::internal::TurboAssembler"* %6895, i32 %6894, i64 %6899, i32 %6900, %"class.v8::internal::Label"* nonnull %202) #11
  br label %6901

6901:                                             ; preds = %6893, %6890
  %6902 = phi %"class.v8::internal::TurboAssembler"* [ %6895, %6893 ], [ %6885, %6890 ]
  %6903 = load i32, i32* %6853, align 4
  %6904 = and i32 %6903, 254
  %6905 = icmp eq i32 %6904, 0
  br i1 %6905, label %6913, label %6906

6906:                                             ; preds = %6901
  %6907 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %6908 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6907, i64 0, i32 5, i64 1, i32 0
  %6909 = load i64, i64* %6908, align 8
  %6910 = ashr i64 %6909, 35
  %6911 = trunc i64 %6910 to i32
  %6912 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %6902, i64 0, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %6912, i8 zeroext 51, i32 %6911, i32 %6911, i32 4) #11
  call void @_ZN2v88internal9Assembler4movbENS0_8RegisterENS0_9ImmediateE(%"class.v8::internal::Assembler"* %6912, i32 %6911, i64 1) #11
  br label %6913

6913:                                             ; preds = %6901, %6906
  %6914 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %6902, i64 0, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %6914, %"class.v8::internal::Label"* nonnull %202) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6850) #11
  br label %23402

6915:                                             ; preds = %2
  %6916 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %6917 = load i32, i32* %6916, align 4
  %6918 = and i32 %6917, 255
  %6919 = zext i32 %6918 to i64
  %6920 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %6919, i32 0
  %6921 = load i64, i64* %6920, align 8
  %6922 = and i64 %6921, 7
  %6923 = icmp ugt i64 %6922, 4
  %6924 = and i64 %6921, 24
  %6925 = icmp eq i64 %6924, 0
  %6926 = and i1 %6923, %6925
  br i1 %6926, label %6933, label %6927

6927:                                             ; preds = %6915
  %6928 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %6929 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %6930 = load i64, i64* %6929, align 8
  %6931 = ashr i64 %6930, 35
  %6932 = trunc i64 %6931 to i32
  br label %6945

6933:                                             ; preds = %6915
  %6934 = lshr i64 %6921, 5
  %6935 = trunc i64 %6934 to i8
  %6936 = icmp ult i8 %6935, 12
  %6937 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %6938 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %6939 = load i64, i64* %6938, align 8
  %6940 = ashr i64 %6939, 35
  %6941 = trunc i64 %6940 to i32
  br i1 %6936, label %6942, label %6945

6942:                                             ; preds = %6933
  %6943 = ashr i64 %6921, 35
  %6944 = trunc i64 %6943 to i32
  tail call void @_ZN2v88internal14TurboAssembler9Cvtlsi2sdENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %6937, i32 %6941, i32 %6944) #11
  br label %23402

6945:                                             ; preds = %6927, %6933
  %6946 = phi i32 [ %6932, %6927 ], [ %6941, %6933 ]
  %6947 = phi %"class.v8::internal::TurboAssembler"* [ %6928, %6927 ], [ %6937, %6933 ]
  %6948 = ashr i64 %6921, 35
  %6949 = trunc i64 %6948 to i32
  %6950 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %6949, i32 0) #11
  %6951 = extractvalue { i64, i32 } %6950, 0
  %6952 = extractvalue { i64, i32 } %6950, 1
  call void @_ZN2v88internal14TurboAssembler9Cvtlsi2sdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %6947, i32 %6946, i64 %6951, i32 %6952) #11
  br label %23402

6953:                                             ; preds = %2
  %6954 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %6955 = load i32, i32* %6954, align 4
  %6956 = and i32 %6955, 255
  %6957 = zext i32 %6956 to i64
  %6958 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %6957, i32 0
  %6959 = load i64, i64* %6958, align 8
  %6960 = and i64 %6959, 7
  %6961 = icmp ugt i64 %6960, 4
  %6962 = and i64 %6959, 24
  %6963 = icmp eq i64 %6962, 0
  %6964 = and i1 %6961, %6963
  br i1 %6964, label %6971, label %6965

6965:                                             ; preds = %6953
  %6966 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %6967 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %6968 = load i64, i64* %6967, align 8
  %6969 = ashr i64 %6968, 35
  %6970 = trunc i64 %6969 to i32
  br label %6983

6971:                                             ; preds = %6953
  %6972 = lshr i64 %6959, 5
  %6973 = trunc i64 %6972 to i8
  %6974 = icmp ult i8 %6973, 12
  %6975 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %6976 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %6977 = load i64, i64* %6976, align 8
  %6978 = ashr i64 %6977, 35
  %6979 = trunc i64 %6978 to i32
  br i1 %6974, label %6980, label %6983

6980:                                             ; preds = %6971
  %6981 = ashr i64 %6959, 35
  %6982 = trunc i64 %6981 to i32
  tail call void @_ZN2v88internal14TurboAssembler9Cvtlsi2ssENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %6975, i32 %6979, i32 %6982) #11
  br label %23402

6983:                                             ; preds = %6965, %6971
  %6984 = phi i32 [ %6970, %6965 ], [ %6979, %6971 ]
  %6985 = phi %"class.v8::internal::TurboAssembler"* [ %6966, %6965 ], [ %6975, %6971 ]
  %6986 = ashr i64 %6959, 35
  %6987 = trunc i64 %6986 to i32
  %6988 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %6987, i32 0) #11
  %6989 = extractvalue { i64, i32 } %6988, 0
  %6990 = extractvalue { i64, i32 } %6988, 1
  call void @_ZN2v88internal14TurboAssembler9Cvtlsi2ssENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %6985, i32 %6984, i64 %6989, i32 %6990) #11
  br label %23402

6991:                                             ; preds = %2
  %6992 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %6993 = load i32, i32* %6992, align 4
  %6994 = and i32 %6993, 255
  %6995 = zext i32 %6994 to i64
  %6996 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %6995, i32 0
  %6997 = load i64, i64* %6996, align 8
  %6998 = and i64 %6997, 7
  %6999 = icmp ugt i64 %6998, 4
  %7000 = and i64 %6997, 24
  %7001 = icmp eq i64 %7000, 0
  %7002 = and i1 %6999, %7001
  br i1 %7002, label %7009, label %7003

7003:                                             ; preds = %6991
  %7004 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %7005 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7006 = load i64, i64* %7005, align 8
  %7007 = ashr i64 %7006, 35
  %7008 = trunc i64 %7007 to i32
  br label %7021

7009:                                             ; preds = %6991
  %7010 = lshr i64 %6997, 5
  %7011 = trunc i64 %7010 to i8
  %7012 = icmp ult i8 %7011, 12
  %7013 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %7014 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7015 = load i64, i64* %7014, align 8
  %7016 = ashr i64 %7015, 35
  %7017 = trunc i64 %7016 to i32
  br i1 %7012, label %7018, label %7021

7018:                                             ; preds = %7009
  %7019 = ashr i64 %6997, 35
  %7020 = trunc i64 %7019 to i32
  tail call void @_ZN2v88internal14TurboAssembler9Cvtqsi2ssENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %7013, i32 %7017, i32 %7020) #11
  br label %23402

7021:                                             ; preds = %7003, %7009
  %7022 = phi i32 [ %7008, %7003 ], [ %7017, %7009 ]
  %7023 = phi %"class.v8::internal::TurboAssembler"* [ %7004, %7003 ], [ %7013, %7009 ]
  %7024 = ashr i64 %6997, 35
  %7025 = trunc i64 %7024 to i32
  %7026 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %7025, i32 0) #11
  %7027 = extractvalue { i64, i32 } %7026, 0
  %7028 = extractvalue { i64, i32 } %7026, 1
  call void @_ZN2v88internal14TurboAssembler9Cvtqsi2ssENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %7023, i32 %7022, i64 %7027, i32 %7028) #11
  br label %23402

7029:                                             ; preds = %2
  %7030 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %7031 = load i32, i32* %7030, align 4
  %7032 = and i32 %7031, 255
  %7033 = zext i32 %7032 to i64
  %7034 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7033, i32 0
  %7035 = load i64, i64* %7034, align 8
  %7036 = and i64 %7035, 7
  %7037 = icmp ugt i64 %7036, 4
  %7038 = and i64 %7035, 24
  %7039 = icmp eq i64 %7038, 0
  %7040 = and i1 %7037, %7039
  br i1 %7040, label %7047, label %7041

7041:                                             ; preds = %7029
  %7042 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %7043 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7044 = load i64, i64* %7043, align 8
  %7045 = ashr i64 %7044, 35
  %7046 = trunc i64 %7045 to i32
  br label %7059

7047:                                             ; preds = %7029
  %7048 = lshr i64 %7035, 5
  %7049 = trunc i64 %7048 to i8
  %7050 = icmp ult i8 %7049, 12
  %7051 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %7052 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7053 = load i64, i64* %7052, align 8
  %7054 = ashr i64 %7053, 35
  %7055 = trunc i64 %7054 to i32
  br i1 %7050, label %7056, label %7059

7056:                                             ; preds = %7047
  %7057 = ashr i64 %7035, 35
  %7058 = trunc i64 %7057 to i32
  tail call void @_ZN2v88internal14TurboAssembler9Cvtqsi2sdENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %7051, i32 %7055, i32 %7058) #11
  br label %23402

7059:                                             ; preds = %7041, %7047
  %7060 = phi i32 [ %7046, %7041 ], [ %7055, %7047 ]
  %7061 = phi %"class.v8::internal::TurboAssembler"* [ %7042, %7041 ], [ %7051, %7047 ]
  %7062 = ashr i64 %7035, 35
  %7063 = trunc i64 %7062 to i32
  %7064 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %7063, i32 0) #11
  %7065 = extractvalue { i64, i32 } %7064, 0
  %7066 = extractvalue { i64, i32 } %7064, 1
  call void @_ZN2v88internal14TurboAssembler9Cvtqsi2sdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %7061, i32 %7060, i64 %7065, i32 %7066) #11
  br label %23402

7067:                                             ; preds = %2
  %7068 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %7069 = load i32, i32* %7068, align 4
  %7070 = and i32 %7069, 255
  %7071 = zext i32 %7070 to i64
  %7072 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7071, i32 0
  %7073 = load i64, i64* %7072, align 8
  %7074 = and i64 %7073, 7
  %7075 = icmp ugt i64 %7074, 4
  %7076 = and i64 %7073, 24
  %7077 = icmp eq i64 %7076, 0
  %7078 = and i1 %7075, %7077
  br i1 %7078, label %7085, label %7079

7079:                                             ; preds = %7067
  %7080 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %7081 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7082 = load i64, i64* %7081, align 8
  %7083 = ashr i64 %7082, 35
  %7084 = trunc i64 %7083 to i32
  br label %7097

7085:                                             ; preds = %7067
  %7086 = lshr i64 %7073, 5
  %7087 = trunc i64 %7086 to i8
  %7088 = icmp ult i8 %7087, 12
  %7089 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %7090 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7091 = load i64, i64* %7090, align 8
  %7092 = ashr i64 %7091, 35
  %7093 = trunc i64 %7092 to i32
  br i1 %7088, label %7094, label %7097

7094:                                             ; preds = %7085
  %7095 = ashr i64 %7073, 35
  %7096 = trunc i64 %7095 to i32
  tail call void @_ZN2v88internal14TurboAssembler9Cvtqui2ssENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %7089, i32 %7093, i32 %7096) #11
  br label %23402

7097:                                             ; preds = %7079, %7085
  %7098 = phi i32 [ %7084, %7079 ], [ %7093, %7085 ]
  %7099 = phi %"class.v8::internal::TurboAssembler"* [ %7080, %7079 ], [ %7089, %7085 ]
  %7100 = ashr i64 %7073, 35
  %7101 = trunc i64 %7100 to i32
  %7102 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %7101, i32 0) #11
  %7103 = extractvalue { i64, i32 } %7102, 0
  %7104 = extractvalue { i64, i32 } %7102, 1
  call void @_ZN2v88internal14TurboAssembler9Cvtqui2ssENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %7099, i32 %7098, i64 %7103, i32 %7104) #11
  br label %23402

7105:                                             ; preds = %2
  %7106 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %7107 = load i32, i32* %7106, align 4
  %7108 = and i32 %7107, 255
  %7109 = zext i32 %7108 to i64
  %7110 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7109, i32 0
  %7111 = load i64, i64* %7110, align 8
  %7112 = and i64 %7111, 7
  %7113 = icmp ugt i64 %7112, 4
  %7114 = and i64 %7111, 24
  %7115 = icmp eq i64 %7114, 0
  %7116 = and i1 %7113, %7115
  br i1 %7116, label %7123, label %7117

7117:                                             ; preds = %7105
  %7118 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %7119 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7120 = load i64, i64* %7119, align 8
  %7121 = ashr i64 %7120, 35
  %7122 = trunc i64 %7121 to i32
  br label %7135

7123:                                             ; preds = %7105
  %7124 = lshr i64 %7111, 5
  %7125 = trunc i64 %7124 to i8
  %7126 = icmp ult i8 %7125, 12
  %7127 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %7128 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7129 = load i64, i64* %7128, align 8
  %7130 = ashr i64 %7129, 35
  %7131 = trunc i64 %7130 to i32
  br i1 %7126, label %7132, label %7135

7132:                                             ; preds = %7123
  %7133 = ashr i64 %7111, 35
  %7134 = trunc i64 %7133 to i32
  tail call void @_ZN2v88internal14TurboAssembler9Cvtqui2sdENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %7127, i32 %7131, i32 %7134) #11
  br label %23402

7135:                                             ; preds = %7117, %7123
  %7136 = phi i32 [ %7122, %7117 ], [ %7131, %7123 ]
  %7137 = phi %"class.v8::internal::TurboAssembler"* [ %7118, %7117 ], [ %7127, %7123 ]
  %7138 = ashr i64 %7111, 35
  %7139 = trunc i64 %7138 to i32
  %7140 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %7139, i32 0) #11
  %7141 = extractvalue { i64, i32 } %7140, 0
  %7142 = extractvalue { i64, i32 } %7140, 1
  call void @_ZN2v88internal14TurboAssembler9Cvtqui2sdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %7137, i32 %7136, i64 %7141, i32 %7142) #11
  br label %23402

7143:                                             ; preds = %2
  %7144 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %7145 = load i32, i32* %7144, align 4
  %7146 = and i32 %7145, 255
  %7147 = zext i32 %7146 to i64
  %7148 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7147, i32 0
  %7149 = load i64, i64* %7148, align 8
  %7150 = and i64 %7149, 7
  %7151 = icmp ugt i64 %7150, 4
  %7152 = and i64 %7149, 24
  %7153 = icmp eq i64 %7152, 0
  %7154 = and i1 %7151, %7153
  br i1 %7154, label %7161, label %7155

7155:                                             ; preds = %7143
  %7156 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %7157 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7158 = load i64, i64* %7157, align 8
  %7159 = ashr i64 %7158, 35
  %7160 = trunc i64 %7159 to i32
  br label %7173

7161:                                             ; preds = %7143
  %7162 = lshr i64 %7149, 5
  %7163 = trunc i64 %7162 to i8
  %7164 = icmp ult i8 %7163, 12
  %7165 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %7166 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7167 = load i64, i64* %7166, align 8
  %7168 = ashr i64 %7167, 35
  %7169 = trunc i64 %7168 to i32
  br i1 %7164, label %7170, label %7173

7170:                                             ; preds = %7161
  %7171 = ashr i64 %7149, 35
  %7172 = trunc i64 %7171 to i32
  tail call void @_ZN2v88internal14TurboAssembler9Cvtlui2sdENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %7165, i32 %7169, i32 %7172) #11
  br label %23402

7173:                                             ; preds = %7155, %7161
  %7174 = phi i32 [ %7160, %7155 ], [ %7169, %7161 ]
  %7175 = phi %"class.v8::internal::TurboAssembler"* [ %7156, %7155 ], [ %7165, %7161 ]
  %7176 = ashr i64 %7149, 35
  %7177 = trunc i64 %7176 to i32
  %7178 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %7177, i32 0) #11
  %7179 = extractvalue { i64, i32 } %7178, 0
  %7180 = extractvalue { i64, i32 } %7178, 1
  call void @_ZN2v88internal14TurboAssembler9Cvtlui2sdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %7175, i32 %7174, i64 %7179, i32 %7180) #11
  br label %23402

7181:                                             ; preds = %2
  %7182 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %7183 = load i32, i32* %7182, align 4
  %7184 = and i32 %7183, 255
  %7185 = zext i32 %7184 to i64
  %7186 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7185, i32 0
  %7187 = load i64, i64* %7186, align 8
  %7188 = and i64 %7187, 7
  %7189 = icmp ugt i64 %7188, 4
  %7190 = and i64 %7187, 24
  %7191 = icmp eq i64 %7190, 0
  %7192 = and i1 %7189, %7191
  br i1 %7192, label %7199, label %7193

7193:                                             ; preds = %7181
  %7194 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %7195 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7196 = load i64, i64* %7195, align 8
  %7197 = ashr i64 %7196, 35
  %7198 = trunc i64 %7197 to i32
  br label %7211

7199:                                             ; preds = %7181
  %7200 = lshr i64 %7187, 5
  %7201 = trunc i64 %7200 to i8
  %7202 = icmp ult i8 %7201, 12
  %7203 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %7204 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7205 = load i64, i64* %7204, align 8
  %7206 = ashr i64 %7205, 35
  %7207 = trunc i64 %7206 to i32
  br i1 %7202, label %7208, label %7211

7208:                                             ; preds = %7199
  %7209 = ashr i64 %7187, 35
  %7210 = trunc i64 %7209 to i32
  tail call void @_ZN2v88internal14TurboAssembler9Cvtlui2ssENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %7203, i32 %7207, i32 %7210) #11
  br label %23402

7211:                                             ; preds = %7193, %7199
  %7212 = phi i32 [ %7198, %7193 ], [ %7207, %7199 ]
  %7213 = phi %"class.v8::internal::TurboAssembler"* [ %7194, %7193 ], [ %7203, %7199 ]
  %7214 = ashr i64 %7187, 35
  %7215 = trunc i64 %7214 to i32
  %7216 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %7215, i32 0) #11
  %7217 = extractvalue { i64, i32 } %7216, 0
  %7218 = extractvalue { i64, i32 } %7216, 1
  call void @_ZN2v88internal14TurboAssembler9Cvtlui2ssENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %7213, i32 %7212, i64 %7217, i32 %7218) #11
  br label %23402

7219:                                             ; preds = %2
  %7220 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %7221 = load i32, i32* %7220, align 4
  %7222 = and i32 %7221, 255
  %7223 = zext i32 %7222 to i64
  %7224 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7223, i32 0
  %7225 = load i64, i64* %7224, align 8
  %7226 = and i64 %7225, 7
  %7227 = icmp ugt i64 %7226, 4
  %7228 = and i64 %7225, 24
  %7229 = icmp eq i64 %7228, 8
  %7230 = and i1 %7227, %7229
  br i1 %7230, label %7231, label %7246

7231:                                             ; preds = %7219
  %7232 = lshr i64 %7225, 5
  %7233 = trunc i64 %7232 to i8
  %7234 = icmp ugt i8 %7233, 11
  br i1 %7234, label %7235, label %7246

7235:                                             ; preds = %7231
  %7236 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %7237 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7238 = load i64, i64* %7237, align 8
  %7239 = ashr i64 %7238, 35
  %7240 = trunc i64 %7239 to i32
  %7241 = ashr i64 %7225, 35
  %7242 = trunc i64 %7241 to i32
  %7243 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %7242, i32 0) #11
  %7244 = extractvalue { i64, i32 } %7243, 0
  %7245 = extractvalue { i64, i32 } %7243, 1
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %7236, i32 %7240, i64 %7244, i32 %7245, i32 4) #11
  br label %23402

7246:                                             ; preds = %7219, %7231
  %7247 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7248 = load i64, i64* %7247, align 8
  %7249 = ashr i64 %7248, 35
  %7250 = trunc i64 %7249 to i32
  %7251 = ashr i64 %7225, 35
  %7252 = trunc i64 %7251 to i32
  %7253 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %7254 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %7255 = and i32 %7254, 32
  %7256 = icmp eq i32 %7255, 0
  br i1 %7256, label %7258, label %7257

7257:                                             ; preds = %7246
  tail call void @_ZN2v88internal9Assembler5vmovdENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %7253, i32 %7250, i32 %7252) #11
  br label %23402

7258:                                             ; preds = %7246
  tail call void @_ZN2v88internal9Assembler4movdENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %7253, i32 %7250, i32 %7252) #11
  br label %23402

7259:                                             ; preds = %2
  %7260 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %7261 = load i32, i32* %7260, align 4
  %7262 = and i32 %7261, 255
  %7263 = zext i32 %7262 to i64
  %7264 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7263, i32 0
  %7265 = load i64, i64* %7264, align 8
  %7266 = and i64 %7265, 7
  %7267 = icmp ugt i64 %7266, 4
  %7268 = and i64 %7265, 24
  %7269 = icmp eq i64 %7268, 8
  %7270 = and i1 %7267, %7269
  br i1 %7270, label %7273, label %7271

7271:                                             ; preds = %7259
  %7272 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  br label %7289

7273:                                             ; preds = %7259
  %7274 = lshr i64 %7265, 5
  %7275 = trunc i64 %7274 to i8
  %7276 = icmp ugt i8 %7275, 11
  %7277 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  br i1 %7276, label %7278, label %7289

7278:                                             ; preds = %7273
  %7279 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %7277, i64 0, i32 0, i32 0, i32 0
  %7280 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7281 = load i64, i64* %7280, align 8
  %7282 = ashr i64 %7281, 35
  %7283 = trunc i64 %7282 to i32
  %7284 = ashr i64 %7265, 35
  %7285 = trunc i64 %7284 to i32
  %7286 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %7285, i32 4) #11
  %7287 = extractvalue { i64, i32 } %7286, 0
  %7288 = extractvalue { i64, i32 } %7286, 1
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %7279, i32 %7283, i64 %7287, i32 %7288, i32 4) #11
  br label %23402

7289:                                             ; preds = %7271, %7273
  %7290 = phi %"class.v8::internal::TurboAssembler"* [ %7272, %7271 ], [ %7277, %7273 ]
  %7291 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7292 = load i64, i64* %7291, align 8
  %7293 = ashr i64 %7292, 35
  %7294 = trunc i64 %7293 to i32
  %7295 = ashr i64 %7265, 35
  %7296 = trunc i64 %7295 to i32
  tail call void @_ZN2v88internal14TurboAssembler6PextrdENS0_8RegisterENS0_11XMMRegisterEh(%"class.v8::internal::TurboAssembler"* %7290, i32 %7294, i32 %7296, i8 zeroext 1) #11
  br label %23402

7297:                                             ; preds = %2
  %7298 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %7299 = load i32, i32* %7298, align 4
  %7300 = and i32 %7299, 255
  %7301 = add nuw nsw i32 %7300, 1
  %7302 = zext i32 %7301 to i64
  %7303 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7302, i32 0
  %7304 = load i64, i64* %7303, align 8
  %7305 = and i64 %7304, 7
  %7306 = icmp ugt i64 %7305, 4
  %7307 = and i64 %7304, 24
  %7308 = icmp eq i64 %7307, 0
  %7309 = and i1 %7306, %7308
  br i1 %7309, label %7316, label %7310

7310:                                             ; preds = %7297
  %7311 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %7312 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7313 = load i64, i64* %7312, align 8
  %7314 = ashr i64 %7313, 35
  %7315 = trunc i64 %7314 to i32
  br label %7328

7316:                                             ; preds = %7297
  %7317 = lshr i64 %7304, 5
  %7318 = trunc i64 %7317 to i8
  %7319 = icmp ult i8 %7318, 12
  %7320 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %7321 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7322 = load i64, i64* %7321, align 8
  %7323 = ashr i64 %7322, 35
  %7324 = trunc i64 %7323 to i32
  br i1 %7319, label %7325, label %7328

7325:                                             ; preds = %7316
  %7326 = ashr i64 %7304, 35
  %7327 = trunc i64 %7326 to i32
  tail call void @_ZN2v88internal14TurboAssembler6PinsrdENS0_11XMMRegisterENS0_8RegisterEh(%"class.v8::internal::TurboAssembler"* %7320, i32 %7324, i32 %7327, i8 zeroext 0) #11
  br label %23402

7328:                                             ; preds = %7310, %7316
  %7329 = phi i32 [ %7315, %7310 ], [ %7324, %7316 ]
  %7330 = phi %"class.v8::internal::TurboAssembler"* [ %7311, %7310 ], [ %7320, %7316 ]
  %7331 = ashr i64 %7304, 35
  %7332 = trunc i64 %7331 to i32
  %7333 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %7332, i32 0) #11
  %7334 = extractvalue { i64, i32 } %7333, 0
  %7335 = extractvalue { i64, i32 } %7333, 1
  call void @_ZN2v88internal14TurboAssembler6PinsrdENS0_11XMMRegisterENS0_7OperandEh(%"class.v8::internal::TurboAssembler"* %7330, i32 %7329, i64 %7334, i32 %7335, i8 zeroext 0) #11
  br label %23402

7336:                                             ; preds = %2
  %7337 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %7338 = load i32, i32* %7337, align 4
  %7339 = and i32 %7338, 255
  %7340 = add nuw nsw i32 %7339, 1
  %7341 = zext i32 %7340 to i64
  %7342 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7341, i32 0
  %7343 = load i64, i64* %7342, align 8
  %7344 = and i64 %7343, 7
  %7345 = icmp ugt i64 %7344, 4
  %7346 = and i64 %7343, 24
  %7347 = icmp eq i64 %7346, 0
  %7348 = and i1 %7345, %7347
  br i1 %7348, label %7355, label %7349

7349:                                             ; preds = %7336
  %7350 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %7351 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7352 = load i64, i64* %7351, align 8
  %7353 = ashr i64 %7352, 35
  %7354 = trunc i64 %7353 to i32
  br label %7367

7355:                                             ; preds = %7336
  %7356 = lshr i64 %7343, 5
  %7357 = trunc i64 %7356 to i8
  %7358 = icmp ult i8 %7357, 12
  %7359 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %7360 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7361 = load i64, i64* %7360, align 8
  %7362 = ashr i64 %7361, 35
  %7363 = trunc i64 %7362 to i32
  br i1 %7358, label %7364, label %7367

7364:                                             ; preds = %7355
  %7365 = ashr i64 %7343, 35
  %7366 = trunc i64 %7365 to i32
  tail call void @_ZN2v88internal14TurboAssembler6PinsrdENS0_11XMMRegisterENS0_8RegisterEh(%"class.v8::internal::TurboAssembler"* %7359, i32 %7363, i32 %7366, i8 zeroext 1) #11
  br label %23402

7367:                                             ; preds = %7349, %7355
  %7368 = phi i32 [ %7354, %7349 ], [ %7363, %7355 ]
  %7369 = phi %"class.v8::internal::TurboAssembler"* [ %7350, %7349 ], [ %7359, %7355 ]
  %7370 = ashr i64 %7343, 35
  %7371 = trunc i64 %7370 to i32
  %7372 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %7371, i32 0) #11
  %7373 = extractvalue { i64, i32 } %7372, 0
  %7374 = extractvalue { i64, i32 } %7372, 1
  call void @_ZN2v88internal14TurboAssembler6PinsrdENS0_11XMMRegisterENS0_7OperandEh(%"class.v8::internal::TurboAssembler"* %7369, i32 %7368, i64 %7373, i32 %7374, i8 zeroext 1) #11
  br label %23402

7375:                                             ; preds = %2
  %7376 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %7377 = load i32, i32* %7376, align 4
  %7378 = and i32 %7377, 255
  %7379 = zext i32 %7378 to i64
  %7380 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7379, i32 0
  %7381 = load i64, i64* %7380, align 8
  %7382 = and i64 %7381, 7
  %7383 = icmp ugt i64 %7382, 4
  %7384 = and i64 %7381, 24
  %7385 = icmp eq i64 %7384, 0
  %7386 = and i1 %7383, %7385
  br i1 %7386, label %7392, label %7387

7387:                                             ; preds = %7375
  %7388 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7389 = load i64, i64* %7388, align 8
  %7390 = ashr i64 %7389, 35
  %7391 = trunc i64 %7390 to i32
  br label %7409

7392:                                             ; preds = %7375
  %7393 = lshr i64 %7381, 5
  %7394 = trunc i64 %7393 to i8
  %7395 = icmp ult i8 %7394, 12
  %7396 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7397 = load i64, i64* %7396, align 8
  %7398 = ashr i64 %7397, 35
  %7399 = trunc i64 %7398 to i32
  br i1 %7395, label %7400, label %7409

7400:                                             ; preds = %7392
  %7401 = ashr i64 %7381, 35
  %7402 = trunc i64 %7401 to i32
  %7403 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %7404 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %7405 = and i32 %7404, 32
  %7406 = icmp eq i32 %7405, 0
  br i1 %7406, label %7408, label %7407

7407:                                             ; preds = %7400
  tail call void @_ZN2v88internal9Assembler5vmovdENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::Assembler"* %7403, i32 %7399, i32 %7402) #11
  br label %23402

7408:                                             ; preds = %7400
  tail call void @_ZN2v88internal9Assembler4movdENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::Assembler"* %7403, i32 %7399, i32 %7402) #11
  br label %23402

7409:                                             ; preds = %7387, %7392
  %7410 = phi i32 [ %7391, %7387 ], [ %7399, %7392 ]
  %7411 = ashr i64 %7381, 35
  %7412 = trunc i64 %7411 to i32
  %7413 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %7412, i32 0) #11
  %7414 = extractvalue { i64, i32 } %7413, 0
  %7415 = extractvalue { i64, i32 } %7413, 1
  %7416 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %7417 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %7418 = and i32 %7417, 32
  %7419 = icmp eq i32 %7418, 0
  br i1 %7419, label %7421, label %7420

7420:                                             ; preds = %7409
  call void @_ZN2v88internal9Assembler5vmovdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %7416, i32 %7410, i64 %7414, i32 %7415) #11
  br label %23402

7421:                                             ; preds = %7409
  call void @_ZN2v88internal9Assembler4movdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %7416, i32 %7410, i64 %7414, i32 %7415) #11
  br label %23402

7422:                                             ; preds = %2
  %7423 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %7424 = load i32, i32* %7423, align 4
  %7425 = and i32 %7424, 255
  %7426 = add nuw nsw i32 %7425, 1
  %7427 = zext i32 %7426 to i64
  %7428 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7427, i32 0
  %7429 = load i64, i64* %7428, align 8
  %7430 = and i64 %7429, 7
  %7431 = icmp ugt i64 %7430, 4
  %7432 = and i64 %7429, 24
  %7433 = icmp eq i64 %7432, 0
  %7434 = and i1 %7431, %7433
  br i1 %7434, label %7442, label %7435

7435:                                             ; preds = %7422
  %7436 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %7437 = zext i32 %7425 to i64
  %7438 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7437, i32 0
  %7439 = load i64, i64* %7438, align 8
  %7440 = ashr i64 %7439, 35
  %7441 = trunc i64 %7440 to i32
  br label %7455

7442:                                             ; preds = %7422
  %7443 = lshr i64 %7429, 5
  %7444 = trunc i64 %7443 to i8
  %7445 = icmp ugt i8 %7444, 11
  %7446 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %7447 = zext i32 %7425 to i64
  %7448 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7447, i32 0
  %7449 = load i64, i64* %7448, align 8
  %7450 = ashr i64 %7449, 35
  %7451 = trunc i64 %7450 to i32
  br i1 %7445, label %7452, label %7455

7452:                                             ; preds = %7442
  %7453 = ashr i64 %7429, 35
  %7454 = trunc i64 %7453 to i32
  tail call void @_ZN2v88internal9Assembler8vucomissENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %7446, i32 %7451, i32 %7454) #11
  br label %23402

7455:                                             ; preds = %7435, %7442
  %7456 = phi i32 [ %7441, %7435 ], [ %7451, %7442 ]
  %7457 = phi %"class.v8::internal::Assembler"* [ %7436, %7435 ], [ %7446, %7442 ]
  %7458 = ashr i64 %7429, 35
  %7459 = trunc i64 %7458 to i32
  %7460 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %7459, i32 0) #11
  %7461 = extractvalue { i64, i32 } %7460, 0
  %7462 = extractvalue { i64, i32 } %7460, 1
  call void @_ZN2v88internal9Assembler8vucomissENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %7457, i32 %7456, i64 %7461, i32 %7462) #11
  br label %23402

7463:                                             ; preds = %2
  %7464 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %7465 = and i32 %275, 15872
  %7466 = icmp eq i32 %7465, 0
  br i1 %7466, label %7486, label %7467

7467:                                             ; preds = %7463
  %7468 = bitcast i64* %203 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7468) #11
  store i64 1, i64* %203, align 8
  %7469 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %203)
  %7470 = extractvalue { i64, i32 } %7469, 0
  %7471 = extractvalue { i64, i32 } %7469, 1
  %7472 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %7464, i64 0, i32 0, i32 0, i32 0
  %7473 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %7474 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %7473, i64 0, i32 5, i64 0, i32 0
  %7475 = load i64, i64* %7474, align 8
  %7476 = ashr i64 %7475, 35
  %7477 = trunc i64 %7476 to i32
  %7478 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %7473, i64 0, i32 1
  %7479 = load i32, i32* %7478, align 4
  %7480 = and i32 %7479, 255
  %7481 = zext i32 %7480 to i64
  %7482 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %7473, i64 0, i32 5, i64 %7481, i32 0
  %7483 = load i64, i64* %7482, align 8
  %7484 = ashr i64 %7483, 35
  %7485 = trunc i64 %7484 to i32
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %7472, i8 zeroext 88, i32 %7477, i32 %7485, i64 %7470, i32 %7471, i32 2, i32 1, i32 0, i32 5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7468) #11
  br label %23402

7486:                                             ; preds = %7463
  %7487 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %7488 = load i32, i32* %7487, align 4
  %7489 = and i32 %7488, 255
  %7490 = add nuw nsw i32 %7489, 1
  %7491 = zext i32 %7490 to i64
  %7492 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7491, i32 0
  %7493 = load i64, i64* %7492, align 8
  %7494 = and i64 %7493, 7
  %7495 = icmp ugt i64 %7494, 4
  %7496 = and i64 %7493, 24
  %7497 = icmp eq i64 %7496, 0
  %7498 = and i1 %7495, %7497
  br i1 %7498, label %7499, label %7503

7499:                                             ; preds = %7486
  %7500 = lshr i64 %7493, 5
  %7501 = trunc i64 %7500 to i8
  %7502 = icmp ugt i8 %7501, 11
  br label %7503

7503:                                             ; preds = %7486, %7499
  %7504 = phi i1 [ false, %7486 ], [ %7502, %7499 ]
  %7505 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %7464, i64 0, i32 0, i32 0, i32 0
  %7506 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7507 = load i64, i64* %7506, align 8
  %7508 = ashr i64 %7507, 35
  %7509 = trunc i64 %7508 to i32
  %7510 = zext i32 %7489 to i64
  %7511 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7510, i32 0
  %7512 = load i64, i64* %7511, align 8
  %7513 = ashr i64 %7512, 35
  %7514 = trunc i64 %7513 to i32
  %7515 = ashr i64 %7493, 35
  %7516 = trunc i64 %7515 to i32
  br i1 %7504, label %7517, label %7518

7517:                                             ; preds = %7503
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %7505, i8 zeroext 88, i32 %7509, i32 %7514, i32 %7516, i32 2, i32 1, i32 0, i32 5) #11
  br label %23402

7518:                                             ; preds = %7503
  %7519 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %7516, i32 0) #11
  %7520 = extractvalue { i64, i32 } %7519, 0
  %7521 = extractvalue { i64, i32 } %7519, 1
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %7505, i8 zeroext 88, i32 %7509, i32 %7514, i64 %7520, i32 %7521, i32 2, i32 1, i32 0, i32 5) #11
  br label %23402

7522:                                             ; preds = %2
  %7523 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %7524 = and i32 %275, 15872
  %7525 = icmp eq i32 %7524, 0
  br i1 %7525, label %7545, label %7526

7526:                                             ; preds = %7522
  %7527 = bitcast i64* %204 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7527) #11
  store i64 1, i64* %204, align 8
  %7528 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %204)
  %7529 = extractvalue { i64, i32 } %7528, 0
  %7530 = extractvalue { i64, i32 } %7528, 1
  %7531 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %7523, i64 0, i32 0, i32 0, i32 0
  %7532 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %7533 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %7532, i64 0, i32 5, i64 0, i32 0
  %7534 = load i64, i64* %7533, align 8
  %7535 = ashr i64 %7534, 35
  %7536 = trunc i64 %7535 to i32
  %7537 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %7532, i64 0, i32 1
  %7538 = load i32, i32* %7537, align 4
  %7539 = and i32 %7538, 255
  %7540 = zext i32 %7539 to i64
  %7541 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %7532, i64 0, i32 5, i64 %7540, i32 0
  %7542 = load i64, i64* %7541, align 8
  %7543 = ashr i64 %7542, 35
  %7544 = trunc i64 %7543 to i32
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %7531, i8 zeroext 92, i32 %7536, i32 %7544, i64 %7529, i32 %7530, i32 2, i32 1, i32 0, i32 5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7527) #11
  br label %23402

7545:                                             ; preds = %7522
  %7546 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %7547 = load i32, i32* %7546, align 4
  %7548 = and i32 %7547, 255
  %7549 = add nuw nsw i32 %7548, 1
  %7550 = zext i32 %7549 to i64
  %7551 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7550, i32 0
  %7552 = load i64, i64* %7551, align 8
  %7553 = and i64 %7552, 7
  %7554 = icmp ugt i64 %7553, 4
  %7555 = and i64 %7552, 24
  %7556 = icmp eq i64 %7555, 0
  %7557 = and i1 %7554, %7556
  br i1 %7557, label %7558, label %7562

7558:                                             ; preds = %7545
  %7559 = lshr i64 %7552, 5
  %7560 = trunc i64 %7559 to i8
  %7561 = icmp ugt i8 %7560, 11
  br label %7562

7562:                                             ; preds = %7545, %7558
  %7563 = phi i1 [ false, %7545 ], [ %7561, %7558 ]
  %7564 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %7523, i64 0, i32 0, i32 0, i32 0
  %7565 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7566 = load i64, i64* %7565, align 8
  %7567 = ashr i64 %7566, 35
  %7568 = trunc i64 %7567 to i32
  %7569 = zext i32 %7548 to i64
  %7570 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7569, i32 0
  %7571 = load i64, i64* %7570, align 8
  %7572 = ashr i64 %7571, 35
  %7573 = trunc i64 %7572 to i32
  %7574 = ashr i64 %7552, 35
  %7575 = trunc i64 %7574 to i32
  br i1 %7563, label %7576, label %7577

7576:                                             ; preds = %7562
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %7564, i8 zeroext 92, i32 %7568, i32 %7573, i32 %7575, i32 2, i32 1, i32 0, i32 5) #11
  br label %23402

7577:                                             ; preds = %7562
  %7578 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %7575, i32 0) #11
  %7579 = extractvalue { i64, i32 } %7578, 0
  %7580 = extractvalue { i64, i32 } %7578, 1
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %7564, i8 zeroext 92, i32 %7568, i32 %7573, i64 %7579, i32 %7580, i32 2, i32 1, i32 0, i32 5) #11
  br label %23402

7581:                                             ; preds = %2
  %7582 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %7583 = and i32 %275, 15872
  %7584 = icmp eq i32 %7583, 0
  br i1 %7584, label %7604, label %7585

7585:                                             ; preds = %7581
  %7586 = bitcast i64* %205 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7586) #11
  store i64 1, i64* %205, align 8
  %7587 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %205)
  %7588 = extractvalue { i64, i32 } %7587, 0
  %7589 = extractvalue { i64, i32 } %7587, 1
  %7590 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %7582, i64 0, i32 0, i32 0, i32 0
  %7591 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %7592 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %7591, i64 0, i32 5, i64 0, i32 0
  %7593 = load i64, i64* %7592, align 8
  %7594 = ashr i64 %7593, 35
  %7595 = trunc i64 %7594 to i32
  %7596 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %7591, i64 0, i32 1
  %7597 = load i32, i32* %7596, align 4
  %7598 = and i32 %7597, 255
  %7599 = zext i32 %7598 to i64
  %7600 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %7591, i64 0, i32 5, i64 %7599, i32 0
  %7601 = load i64, i64* %7600, align 8
  %7602 = ashr i64 %7601, 35
  %7603 = trunc i64 %7602 to i32
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %7590, i8 zeroext 89, i32 %7595, i32 %7603, i64 %7588, i32 %7589, i32 2, i32 1, i32 0, i32 5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7586) #11
  br label %23402

7604:                                             ; preds = %7581
  %7605 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %7606 = load i32, i32* %7605, align 4
  %7607 = and i32 %7606, 255
  %7608 = add nuw nsw i32 %7607, 1
  %7609 = zext i32 %7608 to i64
  %7610 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7609, i32 0
  %7611 = load i64, i64* %7610, align 8
  %7612 = and i64 %7611, 7
  %7613 = icmp ugt i64 %7612, 4
  %7614 = and i64 %7611, 24
  %7615 = icmp eq i64 %7614, 0
  %7616 = and i1 %7613, %7615
  br i1 %7616, label %7617, label %7621

7617:                                             ; preds = %7604
  %7618 = lshr i64 %7611, 5
  %7619 = trunc i64 %7618 to i8
  %7620 = icmp ugt i8 %7619, 11
  br label %7621

7621:                                             ; preds = %7604, %7617
  %7622 = phi i1 [ false, %7604 ], [ %7620, %7617 ]
  %7623 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %7582, i64 0, i32 0, i32 0, i32 0
  %7624 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7625 = load i64, i64* %7624, align 8
  %7626 = ashr i64 %7625, 35
  %7627 = trunc i64 %7626 to i32
  %7628 = zext i32 %7607 to i64
  %7629 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7628, i32 0
  %7630 = load i64, i64* %7629, align 8
  %7631 = ashr i64 %7630, 35
  %7632 = trunc i64 %7631 to i32
  %7633 = ashr i64 %7611, 35
  %7634 = trunc i64 %7633 to i32
  br i1 %7622, label %7635, label %7636

7635:                                             ; preds = %7621
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %7623, i8 zeroext 89, i32 %7627, i32 %7632, i32 %7634, i32 2, i32 1, i32 0, i32 5) #11
  br label %23402

7636:                                             ; preds = %7621
  %7637 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %7634, i32 0) #11
  %7638 = extractvalue { i64, i32 } %7637, 0
  %7639 = extractvalue { i64, i32 } %7637, 1
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %7623, i8 zeroext 89, i32 %7627, i32 %7632, i64 %7638, i32 %7639, i32 2, i32 1, i32 0, i32 5) #11
  br label %23402

7640:                                             ; preds = %2
  %7641 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %7642 = and i32 %275, 15872
  %7643 = icmp eq i32 %7642, 0
  br i1 %7643, label %7663, label %7644

7644:                                             ; preds = %7640
  %7645 = bitcast i64* %206 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7645) #11
  store i64 1, i64* %206, align 8
  %7646 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %206)
  %7647 = extractvalue { i64, i32 } %7646, 0
  %7648 = extractvalue { i64, i32 } %7646, 1
  %7649 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %7641, i64 0, i32 0, i32 0, i32 0
  %7650 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %7651 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %7650, i64 0, i32 5, i64 0, i32 0
  %7652 = load i64, i64* %7651, align 8
  %7653 = ashr i64 %7652, 35
  %7654 = trunc i64 %7653 to i32
  %7655 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %7650, i64 0, i32 1
  %7656 = load i32, i32* %7655, align 4
  %7657 = and i32 %7656, 255
  %7658 = zext i32 %7657 to i64
  %7659 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %7650, i64 0, i32 5, i64 %7658, i32 0
  %7660 = load i64, i64* %7659, align 8
  %7661 = ashr i64 %7660, 35
  %7662 = trunc i64 %7661 to i32
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %7649, i8 zeroext 94, i32 %7654, i32 %7662, i64 %7647, i32 %7648, i32 2, i32 1, i32 0, i32 5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7645) #11
  br label %7699

7663:                                             ; preds = %7640
  %7664 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %7665 = load i32, i32* %7664, align 4
  %7666 = and i32 %7665, 255
  %7667 = add nuw nsw i32 %7666, 1
  %7668 = zext i32 %7667 to i64
  %7669 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7668, i32 0
  %7670 = load i64, i64* %7669, align 8
  %7671 = and i64 %7670, 7
  %7672 = icmp ugt i64 %7671, 4
  %7673 = and i64 %7670, 24
  %7674 = icmp eq i64 %7673, 0
  %7675 = and i1 %7672, %7674
  br i1 %7675, label %7676, label %7680

7676:                                             ; preds = %7663
  %7677 = lshr i64 %7670, 5
  %7678 = trunc i64 %7677 to i8
  %7679 = icmp ugt i8 %7678, 11
  br label %7680

7680:                                             ; preds = %7663, %7676
  %7681 = phi i1 [ false, %7663 ], [ %7679, %7676 ]
  %7682 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %7641, i64 0, i32 0, i32 0, i32 0
  %7683 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7684 = load i64, i64* %7683, align 8
  %7685 = ashr i64 %7684, 35
  %7686 = trunc i64 %7685 to i32
  %7687 = zext i32 %7666 to i64
  %7688 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7687, i32 0
  %7689 = load i64, i64* %7688, align 8
  %7690 = ashr i64 %7689, 35
  %7691 = trunc i64 %7690 to i32
  %7692 = ashr i64 %7670, 35
  %7693 = trunc i64 %7692 to i32
  br i1 %7681, label %7694, label %7695

7694:                                             ; preds = %7680
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %7682, i8 zeroext 94, i32 %7686, i32 %7691, i32 %7693, i32 2, i32 1, i32 0, i32 5) #11
  br label %7699

7695:                                             ; preds = %7680
  %7696 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %7693, i32 0) #11
  %7697 = extractvalue { i64, i32 } %7696, 0
  %7698 = extractvalue { i64, i32 } %7696, 1
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %7682, i8 zeroext 94, i32 %7686, i32 %7691, i64 %7697, i32 %7698, i32 2, i32 1, i32 0, i32 5) #11
  br label %7699

7699:                                             ; preds = %7694, %7695, %7644
  %7700 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %7701 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %7700, i64 0, i32 5, i64 0, i32 0
  %7702 = load i64, i64* %7701, align 8
  %7703 = ashr i64 %7702, 35
  %7704 = trunc i64 %7703 to i32
  %7705 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %7641, i64 0, i32 0, i32 0, i32 0
  %7706 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %7707 = and i32 %7706, 32
  %7708 = icmp eq i32 %7707, 0
  br i1 %7708, label %7710, label %7709

7709:                                             ; preds = %7699
  call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %7705, i8 zeroext 40, i32 %7704, i32 0, i32 %7704) #11
  br label %23402

7710:                                             ; preds = %7699
  call void @_ZN2v88internal9Assembler6movapsENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %7705, i32 %7704, i32 %7704) #11
  br label %23402

7711:                                             ; preds = %2
  %7712 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %7713 = load i32, i32* %7712, align 4
  %7714 = and i32 %7713, 255
  %7715 = add nuw nsw i32 %7714, 1
  %7716 = zext i32 %7715 to i64
  %7717 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7716, i32 0
  %7718 = load i64, i64* %7717, align 8
  %7719 = and i64 %7718, 7
  %7720 = icmp ugt i64 %7719, 4
  %7721 = and i64 %7718, 24
  %7722 = icmp eq i64 %7721, 0
  %7723 = and i1 %7720, %7722
  br i1 %7723, label %7731, label %7724

7724:                                             ; preds = %7711
  %7725 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %7726 = zext i32 %7714 to i64
  %7727 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7726, i32 0
  %7728 = load i64, i64* %7727, align 8
  %7729 = ashr i64 %7728, 35
  %7730 = trunc i64 %7729 to i32
  br label %7744

7731:                                             ; preds = %7711
  %7732 = lshr i64 %7718, 5
  %7733 = trunc i64 %7732 to i8
  %7734 = icmp ugt i8 %7733, 11
  %7735 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %7736 = zext i32 %7714 to i64
  %7737 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7736, i32 0
  %7738 = load i64, i64* %7737, align 8
  %7739 = ashr i64 %7738, 35
  %7740 = trunc i64 %7739 to i32
  br i1 %7734, label %7741, label %7744

7741:                                             ; preds = %7731
  %7742 = ashr i64 %7718, 35
  %7743 = trunc i64 %7742 to i32
  tail call void @_ZN2v88internal9Assembler3vpdEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %7735, i8 zeroext 46, i32 %7740, i32 0, i32 %7743) #11
  br label %23402

7744:                                             ; preds = %7724, %7731
  %7745 = phi i32 [ %7730, %7724 ], [ %7740, %7731 ]
  %7746 = phi %"class.v8::internal::Assembler"* [ %7725, %7724 ], [ %7735, %7731 ]
  %7747 = ashr i64 %7718, 35
  %7748 = trunc i64 %7747 to i32
  %7749 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %7748, i32 0) #11
  %7750 = extractvalue { i64, i32 } %7749, 0
  %7751 = extractvalue { i64, i32 } %7749, 1
  call void @_ZN2v88internal9Assembler3vpdEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"* %7746, i8 zeroext 46, i32 %7745, i32 0, i64 %7750, i32 %7751) #11
  br label %23402

7752:                                             ; preds = %2
  %7753 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %7754 = and i32 %275, 15872
  %7755 = icmp eq i32 %7754, 0
  br i1 %7755, label %7775, label %7756

7756:                                             ; preds = %7752
  %7757 = bitcast i64* %207 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7757) #11
  store i64 1, i64* %207, align 8
  %7758 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %207)
  %7759 = extractvalue { i64, i32 } %7758, 0
  %7760 = extractvalue { i64, i32 } %7758, 1
  %7761 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %7753, i64 0, i32 0, i32 0, i32 0
  %7762 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %7763 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %7762, i64 0, i32 5, i64 0, i32 0
  %7764 = load i64, i64* %7763, align 8
  %7765 = ashr i64 %7764, 35
  %7766 = trunc i64 %7765 to i32
  %7767 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %7762, i64 0, i32 1
  %7768 = load i32, i32* %7767, align 4
  %7769 = and i32 %7768, 255
  %7770 = zext i32 %7769 to i64
  %7771 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %7762, i64 0, i32 5, i64 %7770, i32 0
  %7772 = load i64, i64* %7771, align 8
  %7773 = ashr i64 %7772, 35
  %7774 = trunc i64 %7773 to i32
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %7761, i8 zeroext 88, i32 %7766, i32 %7774, i64 %7759, i32 %7760, i32 3, i32 1, i32 0, i32 5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7757) #11
  br label %23402

7775:                                             ; preds = %7752
  %7776 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %7777 = load i32, i32* %7776, align 4
  %7778 = and i32 %7777, 255
  %7779 = add nuw nsw i32 %7778, 1
  %7780 = zext i32 %7779 to i64
  %7781 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7780, i32 0
  %7782 = load i64, i64* %7781, align 8
  %7783 = and i64 %7782, 7
  %7784 = icmp ugt i64 %7783, 4
  %7785 = and i64 %7782, 24
  %7786 = icmp eq i64 %7785, 0
  %7787 = and i1 %7784, %7786
  br i1 %7787, label %7788, label %7792

7788:                                             ; preds = %7775
  %7789 = lshr i64 %7782, 5
  %7790 = trunc i64 %7789 to i8
  %7791 = icmp ugt i8 %7790, 11
  br label %7792

7792:                                             ; preds = %7775, %7788
  %7793 = phi i1 [ false, %7775 ], [ %7791, %7788 ]
  %7794 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %7753, i64 0, i32 0, i32 0, i32 0
  %7795 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7796 = load i64, i64* %7795, align 8
  %7797 = ashr i64 %7796, 35
  %7798 = trunc i64 %7797 to i32
  %7799 = zext i32 %7778 to i64
  %7800 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7799, i32 0
  %7801 = load i64, i64* %7800, align 8
  %7802 = ashr i64 %7801, 35
  %7803 = trunc i64 %7802 to i32
  %7804 = ashr i64 %7782, 35
  %7805 = trunc i64 %7804 to i32
  br i1 %7793, label %7806, label %7807

7806:                                             ; preds = %7792
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %7794, i8 zeroext 88, i32 %7798, i32 %7803, i32 %7805, i32 3, i32 1, i32 0, i32 5) #11
  br label %23402

7807:                                             ; preds = %7792
  %7808 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %7805, i32 0) #11
  %7809 = extractvalue { i64, i32 } %7808, 0
  %7810 = extractvalue { i64, i32 } %7808, 1
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %7794, i8 zeroext 88, i32 %7798, i32 %7803, i64 %7809, i32 %7810, i32 3, i32 1, i32 0, i32 5) #11
  br label %23402

7811:                                             ; preds = %2
  %7812 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %7813 = and i32 %275, 15872
  %7814 = icmp eq i32 %7813, 0
  br i1 %7814, label %7834, label %7815

7815:                                             ; preds = %7811
  %7816 = bitcast i64* %208 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7816) #11
  store i64 1, i64* %208, align 8
  %7817 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %208)
  %7818 = extractvalue { i64, i32 } %7817, 0
  %7819 = extractvalue { i64, i32 } %7817, 1
  %7820 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %7812, i64 0, i32 0, i32 0, i32 0
  %7821 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %7822 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %7821, i64 0, i32 5, i64 0, i32 0
  %7823 = load i64, i64* %7822, align 8
  %7824 = ashr i64 %7823, 35
  %7825 = trunc i64 %7824 to i32
  %7826 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %7821, i64 0, i32 1
  %7827 = load i32, i32* %7826, align 4
  %7828 = and i32 %7827, 255
  %7829 = zext i32 %7828 to i64
  %7830 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %7821, i64 0, i32 5, i64 %7829, i32 0
  %7831 = load i64, i64* %7830, align 8
  %7832 = ashr i64 %7831, 35
  %7833 = trunc i64 %7832 to i32
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %7820, i8 zeroext 92, i32 %7825, i32 %7833, i64 %7818, i32 %7819, i32 3, i32 1, i32 0, i32 5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7816) #11
  br label %23402

7834:                                             ; preds = %7811
  %7835 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %7836 = load i32, i32* %7835, align 4
  %7837 = and i32 %7836, 255
  %7838 = add nuw nsw i32 %7837, 1
  %7839 = zext i32 %7838 to i64
  %7840 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7839, i32 0
  %7841 = load i64, i64* %7840, align 8
  %7842 = and i64 %7841, 7
  %7843 = icmp ugt i64 %7842, 4
  %7844 = and i64 %7841, 24
  %7845 = icmp eq i64 %7844, 0
  %7846 = and i1 %7843, %7845
  br i1 %7846, label %7847, label %7851

7847:                                             ; preds = %7834
  %7848 = lshr i64 %7841, 5
  %7849 = trunc i64 %7848 to i8
  %7850 = icmp ugt i8 %7849, 11
  br label %7851

7851:                                             ; preds = %7834, %7847
  %7852 = phi i1 [ false, %7834 ], [ %7850, %7847 ]
  %7853 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %7812, i64 0, i32 0, i32 0, i32 0
  %7854 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7855 = load i64, i64* %7854, align 8
  %7856 = ashr i64 %7855, 35
  %7857 = trunc i64 %7856 to i32
  %7858 = zext i32 %7837 to i64
  %7859 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7858, i32 0
  %7860 = load i64, i64* %7859, align 8
  %7861 = ashr i64 %7860, 35
  %7862 = trunc i64 %7861 to i32
  %7863 = ashr i64 %7841, 35
  %7864 = trunc i64 %7863 to i32
  br i1 %7852, label %7865, label %7866

7865:                                             ; preds = %7851
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %7853, i8 zeroext 92, i32 %7857, i32 %7862, i32 %7864, i32 3, i32 1, i32 0, i32 5) #11
  br label %23402

7866:                                             ; preds = %7851
  %7867 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %7864, i32 0) #11
  %7868 = extractvalue { i64, i32 } %7867, 0
  %7869 = extractvalue { i64, i32 } %7867, 1
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %7853, i8 zeroext 92, i32 %7857, i32 %7862, i64 %7868, i32 %7869, i32 3, i32 1, i32 0, i32 5) #11
  br label %23402

7870:                                             ; preds = %2
  %7871 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %7872 = and i32 %275, 15872
  %7873 = icmp eq i32 %7872, 0
  br i1 %7873, label %7893, label %7874

7874:                                             ; preds = %7870
  %7875 = bitcast i64* %209 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7875) #11
  store i64 1, i64* %209, align 8
  %7876 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %209)
  %7877 = extractvalue { i64, i32 } %7876, 0
  %7878 = extractvalue { i64, i32 } %7876, 1
  %7879 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %7871, i64 0, i32 0, i32 0, i32 0
  %7880 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %7881 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %7880, i64 0, i32 5, i64 0, i32 0
  %7882 = load i64, i64* %7881, align 8
  %7883 = ashr i64 %7882, 35
  %7884 = trunc i64 %7883 to i32
  %7885 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %7880, i64 0, i32 1
  %7886 = load i32, i32* %7885, align 4
  %7887 = and i32 %7886, 255
  %7888 = zext i32 %7887 to i64
  %7889 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %7880, i64 0, i32 5, i64 %7888, i32 0
  %7890 = load i64, i64* %7889, align 8
  %7891 = ashr i64 %7890, 35
  %7892 = trunc i64 %7891 to i32
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %7879, i8 zeroext 89, i32 %7884, i32 %7892, i64 %7877, i32 %7878, i32 3, i32 1, i32 0, i32 5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7875) #11
  br label %23402

7893:                                             ; preds = %7870
  %7894 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %7895 = load i32, i32* %7894, align 4
  %7896 = and i32 %7895, 255
  %7897 = add nuw nsw i32 %7896, 1
  %7898 = zext i32 %7897 to i64
  %7899 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7898, i32 0
  %7900 = load i64, i64* %7899, align 8
  %7901 = and i64 %7900, 7
  %7902 = icmp ugt i64 %7901, 4
  %7903 = and i64 %7900, 24
  %7904 = icmp eq i64 %7903, 0
  %7905 = and i1 %7902, %7904
  br i1 %7905, label %7906, label %7910

7906:                                             ; preds = %7893
  %7907 = lshr i64 %7900, 5
  %7908 = trunc i64 %7907 to i8
  %7909 = icmp ugt i8 %7908, 11
  br label %7910

7910:                                             ; preds = %7893, %7906
  %7911 = phi i1 [ false, %7893 ], [ %7909, %7906 ]
  %7912 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %7871, i64 0, i32 0, i32 0, i32 0
  %7913 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7914 = load i64, i64* %7913, align 8
  %7915 = ashr i64 %7914, 35
  %7916 = trunc i64 %7915 to i32
  %7917 = zext i32 %7896 to i64
  %7918 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7917, i32 0
  %7919 = load i64, i64* %7918, align 8
  %7920 = ashr i64 %7919, 35
  %7921 = trunc i64 %7920 to i32
  %7922 = ashr i64 %7900, 35
  %7923 = trunc i64 %7922 to i32
  br i1 %7911, label %7924, label %7925

7924:                                             ; preds = %7910
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %7912, i8 zeroext 89, i32 %7916, i32 %7921, i32 %7923, i32 3, i32 1, i32 0, i32 5) #11
  br label %23402

7925:                                             ; preds = %7910
  %7926 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %7923, i32 0) #11
  %7927 = extractvalue { i64, i32 } %7926, 0
  %7928 = extractvalue { i64, i32 } %7926, 1
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %7912, i8 zeroext 89, i32 %7916, i32 %7921, i64 %7927, i32 %7928, i32 3, i32 1, i32 0, i32 5) #11
  br label %23402

7929:                                             ; preds = %2
  %7930 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %7931 = and i32 %275, 15872
  %7932 = icmp eq i32 %7931, 0
  br i1 %7932, label %7952, label %7933

7933:                                             ; preds = %7929
  %7934 = bitcast i64* %210 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7934) #11
  store i64 1, i64* %210, align 8
  %7935 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %210)
  %7936 = extractvalue { i64, i32 } %7935, 0
  %7937 = extractvalue { i64, i32 } %7935, 1
  %7938 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %7930, i64 0, i32 0, i32 0, i32 0
  %7939 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %7940 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %7939, i64 0, i32 5, i64 0, i32 0
  %7941 = load i64, i64* %7940, align 8
  %7942 = ashr i64 %7941, 35
  %7943 = trunc i64 %7942 to i32
  %7944 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %7939, i64 0, i32 1
  %7945 = load i32, i32* %7944, align 4
  %7946 = and i32 %7945, 255
  %7947 = zext i32 %7946 to i64
  %7948 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %7939, i64 0, i32 5, i64 %7947, i32 0
  %7949 = load i64, i64* %7948, align 8
  %7950 = ashr i64 %7949, 35
  %7951 = trunc i64 %7950 to i32
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %7938, i8 zeroext 94, i32 %7943, i32 %7951, i64 %7936, i32 %7937, i32 3, i32 1, i32 0, i32 5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7934) #11
  br label %7988

7952:                                             ; preds = %7929
  %7953 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %7954 = load i32, i32* %7953, align 4
  %7955 = and i32 %7954, 255
  %7956 = add nuw nsw i32 %7955, 1
  %7957 = zext i32 %7956 to i64
  %7958 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7957, i32 0
  %7959 = load i64, i64* %7958, align 8
  %7960 = and i64 %7959, 7
  %7961 = icmp ugt i64 %7960, 4
  %7962 = and i64 %7959, 24
  %7963 = icmp eq i64 %7962, 0
  %7964 = and i1 %7961, %7963
  br i1 %7964, label %7965, label %7969

7965:                                             ; preds = %7952
  %7966 = lshr i64 %7959, 5
  %7967 = trunc i64 %7966 to i8
  %7968 = icmp ugt i8 %7967, 11
  br label %7969

7969:                                             ; preds = %7952, %7965
  %7970 = phi i1 [ false, %7952 ], [ %7968, %7965 ]
  %7971 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %7930, i64 0, i32 0, i32 0, i32 0
  %7972 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %7973 = load i64, i64* %7972, align 8
  %7974 = ashr i64 %7973, 35
  %7975 = trunc i64 %7974 to i32
  %7976 = zext i32 %7955 to i64
  %7977 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %7976, i32 0
  %7978 = load i64, i64* %7977, align 8
  %7979 = ashr i64 %7978, 35
  %7980 = trunc i64 %7979 to i32
  %7981 = ashr i64 %7959, 35
  %7982 = trunc i64 %7981 to i32
  br i1 %7970, label %7983, label %7984

7983:                                             ; preds = %7969
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %7971, i8 zeroext 94, i32 %7975, i32 %7980, i32 %7982, i32 3, i32 1, i32 0, i32 5) #11
  br label %7988

7984:                                             ; preds = %7969
  %7985 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %7982, i32 0) #11
  %7986 = extractvalue { i64, i32 } %7985, 0
  %7987 = extractvalue { i64, i32 } %7985, 1
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %7971, i8 zeroext 94, i32 %7975, i32 %7980, i64 %7986, i32 %7987, i32 3, i32 1, i32 0, i32 5) #11
  br label %7988

7988:                                             ; preds = %7983, %7984, %7933
  %7989 = bitcast %"class.v8::internal::TurboAssembler"* %7930 to %"class.v8::internal::SharedTurboAssembler"*
  %7990 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %7991 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %7990, i64 0, i32 5, i64 0, i32 0
  %7992 = load i64, i64* %7991, align 8
  %7993 = ashr i64 %7992, 35
  %7994 = trunc i64 %7993 to i32
  call void @_ZN2v88internal20SharedTurboAssembler6MovapdENS0_11XMMRegisterES2_(%"class.v8::internal::SharedTurboAssembler"* %7989, i32 %7994, i32 %7994) #11
  br label %23402

7995:                                             ; preds = %2
  %7996 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %7997 = load i32, i32* %7996, align 4
  %7998 = and i32 %7997, 255
  %7999 = lshr i32 %7997, 8
  %8000 = and i32 %7999, 65535
  %8001 = add nuw nsw i32 %8000, %7998
  %8002 = zext i32 %8001 to i64
  %8003 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %8002, i32 0
  %8004 = load i64, i64* %8003, align 8
  %8005 = ashr i64 %8004, 35
  %8006 = trunc i64 %8005 to i32
  %8007 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %8007, i8 zeroext 118, i32 %8006, i32 %8006, i32 %8006, i32 1, i32 1, i32 0, i32 5) #11
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %8007, i8 zeroext 115, i32 2, i32 %8006, i32 %8006, i32 1, i32 1, i32 0, i32 5) #11
  %8008 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %8009 = load i8*, i8** %8008, align 8
  %8010 = getelementptr inbounds i8, i8* %8009, i64 1
  store i8* %8010, i8** %8008, align 8
  store i8 33, i8* %8009, align 1
  %8011 = load i32, i32* %7996, align 4
  %8012 = and i32 %8011, 255
  %8013 = zext i32 %8012 to i64
  %8014 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %8013, i32 0
  %8015 = load i64, i64* %8014, align 8
  %8016 = and i64 %8015, 7
  %8017 = icmp ugt i64 %8016, 4
  %8018 = and i64 %8015, 24
  %8019 = icmp eq i64 %8018, 0
  %8020 = and i1 %8017, %8019
  br i1 %8020, label %8027, label %8021

8021:                                             ; preds = %7995
  %8022 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8023 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8022, i64 0, i32 5, i64 0, i32 0
  %8024 = load i64, i64* %8023, align 8
  %8025 = ashr i64 %8024, 35
  %8026 = trunc i64 %8025 to i32
  br label %8045

8027:                                             ; preds = %7995
  %8028 = lshr i64 %8015, 5
  %8029 = trunc i64 %8028 to i8
  %8030 = icmp ugt i8 %8029, 11
  %8031 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8032 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8031, i64 0, i32 5, i64 0, i32 0
  %8033 = load i64, i64* %8032, align 8
  %8034 = ashr i64 %8033, 35
  %8035 = trunc i64 %8034 to i32
  br i1 %8030, label %8036, label %8045

8036:                                             ; preds = %8027
  %8037 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8031, i64 0, i32 1
  %8038 = load i32, i32* %8037, align 4
  %8039 = and i32 %8038, 255
  %8040 = zext i32 %8039 to i64
  %8041 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8031, i64 0, i32 5, i64 %8040, i32 0
  %8042 = load i64, i64* %8041, align 8
  %8043 = ashr i64 %8042, 35
  %8044 = trunc i64 %8043 to i32
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %8007, i8 zeroext 84, i32 %8035, i32 %8006, i32 %8044) #11
  br label %23402

8045:                                             ; preds = %8021, %8027
  %8046 = phi %"class.v8::internal::compiler::Instruction"* [ %8022, %8021 ], [ %8031, %8027 ]
  %8047 = phi i32 [ %8026, %8021 ], [ %8035, %8027 ]
  %8048 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8046, i64 0, i32 1
  %8049 = load i32, i32* %8048, align 4
  %8050 = and i32 %8049, 255
  %8051 = zext i32 %8050 to i64
  %8052 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8046, i64 0, i32 5, i64 %8051, i32 0
  %8053 = load i64, i64* %8052, align 8
  %8054 = ashr i64 %8053, 35
  %8055 = trunc i64 %8054 to i32
  %8056 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %8055, i32 0) #11
  %8057 = extractvalue { i64, i32 } %8056, 0
  %8058 = extractvalue { i64, i32 } %8056, 1
  call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"* %8007, i8 zeroext 84, i32 %8047, i32 %8006, i64 %8057, i32 %8058) #11
  br label %23402

8059:                                             ; preds = %2
  %8060 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %8061 = load i32, i32* %8060, align 4
  %8062 = and i32 %8061, 255
  %8063 = lshr i32 %8061, 8
  %8064 = and i32 %8063, 65535
  %8065 = add nuw nsw i32 %8064, %8062
  %8066 = zext i32 %8065 to i64
  %8067 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %8066, i32 0
  %8068 = load i64, i64* %8067, align 8
  %8069 = ashr i64 %8068, 35
  %8070 = trunc i64 %8069 to i32
  %8071 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %8071, i8 zeroext 118, i32 %8070, i32 %8070, i32 %8070, i32 1, i32 1, i32 0, i32 5) #11
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %8071, i8 zeroext 115, i32 6, i32 %8070, i32 %8070, i32 1, i32 1, i32 0, i32 5) #11
  %8072 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %8073 = load i8*, i8** %8072, align 8
  %8074 = getelementptr inbounds i8, i8* %8073, i64 1
  store i8* %8074, i8** %8072, align 8
  store i8 31, i8* %8073, align 1
  %8075 = load i32, i32* %8060, align 4
  %8076 = and i32 %8075, 255
  %8077 = zext i32 %8076 to i64
  %8078 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %8077, i32 0
  %8079 = load i64, i64* %8078, align 8
  %8080 = and i64 %8079, 7
  %8081 = icmp ugt i64 %8080, 4
  %8082 = and i64 %8079, 24
  %8083 = icmp eq i64 %8082, 0
  %8084 = and i1 %8081, %8083
  br i1 %8084, label %8091, label %8085

8085:                                             ; preds = %8059
  %8086 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8087 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8086, i64 0, i32 5, i64 0, i32 0
  %8088 = load i64, i64* %8087, align 8
  %8089 = ashr i64 %8088, 35
  %8090 = trunc i64 %8089 to i32
  br label %8109

8091:                                             ; preds = %8059
  %8092 = lshr i64 %8079, 5
  %8093 = trunc i64 %8092 to i8
  %8094 = icmp ugt i8 %8093, 11
  %8095 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8096 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8095, i64 0, i32 5, i64 0, i32 0
  %8097 = load i64, i64* %8096, align 8
  %8098 = ashr i64 %8097, 35
  %8099 = trunc i64 %8098 to i32
  br i1 %8094, label %8100, label %8109

8100:                                             ; preds = %8091
  %8101 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8095, i64 0, i32 1
  %8102 = load i32, i32* %8101, align 4
  %8103 = and i32 %8102, 255
  %8104 = zext i32 %8103 to i64
  %8105 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8095, i64 0, i32 5, i64 %8104, i32 0
  %8106 = load i64, i64* %8105, align 8
  %8107 = ashr i64 %8106, 35
  %8108 = trunc i64 %8107 to i32
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %8071, i8 zeroext 87, i32 %8099, i32 %8070, i32 %8108) #11
  br label %23402

8109:                                             ; preds = %8085, %8091
  %8110 = phi %"class.v8::internal::compiler::Instruction"* [ %8086, %8085 ], [ %8095, %8091 ]
  %8111 = phi i32 [ %8090, %8085 ], [ %8099, %8091 ]
  %8112 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8110, i64 0, i32 1
  %8113 = load i32, i32* %8112, align 4
  %8114 = and i32 %8113, 255
  %8115 = zext i32 %8114 to i64
  %8116 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8110, i64 0, i32 5, i64 %8115, i32 0
  %8117 = load i64, i64* %8116, align 8
  %8118 = ashr i64 %8117, 35
  %8119 = trunc i64 %8118 to i32
  %8120 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %8119, i32 0) #11
  %8121 = extractvalue { i64, i32 } %8120, 0
  %8122 = extractvalue { i64, i32 } %8120, 1
  call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"* %8071, i8 zeroext 87, i32 %8111, i32 %8070, i64 %8121, i32 %8122) #11
  br label %23402

8123:                                             ; preds = %2
  %8124 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %8125 = load i32, i32* %8124, align 4
  %8126 = and i32 %8125, 255
  %8127 = lshr i32 %8125, 8
  %8128 = and i32 %8127, 65535
  %8129 = add nuw nsw i32 %8128, %8126
  %8130 = zext i32 %8129 to i64
  %8131 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %8130, i32 0
  %8132 = load i64, i64* %8131, align 8
  %8133 = ashr i64 %8132, 35
  %8134 = trunc i64 %8133 to i32
  %8135 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %8135, i8 zeroext 118, i32 %8134, i32 %8134, i32 %8134, i32 1, i32 1, i32 0, i32 5) #11
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %8135, i8 zeroext 115, i32 2, i32 %8134, i32 %8134, i32 1, i32 1, i32 0, i32 5) #11
  %8136 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %8137 = load i8*, i8** %8136, align 8
  %8138 = getelementptr inbounds i8, i8* %8137, i64 1
  store i8* %8138, i8** %8136, align 8
  store i8 1, i8* %8137, align 1
  %8139 = load i32, i32* %8124, align 4
  %8140 = and i32 %8139, 255
  %8141 = zext i32 %8140 to i64
  %8142 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %8141, i32 0
  %8143 = load i64, i64* %8142, align 8
  %8144 = and i64 %8143, 7
  %8145 = icmp ugt i64 %8144, 4
  %8146 = and i64 %8143, 24
  %8147 = icmp eq i64 %8146, 0
  %8148 = and i1 %8145, %8147
  br i1 %8148, label %8155, label %8149

8149:                                             ; preds = %8123
  %8150 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8151 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8150, i64 0, i32 5, i64 0, i32 0
  %8152 = load i64, i64* %8151, align 8
  %8153 = ashr i64 %8152, 35
  %8154 = trunc i64 %8153 to i32
  br label %8173

8155:                                             ; preds = %8123
  %8156 = lshr i64 %8143, 5
  %8157 = trunc i64 %8156 to i8
  %8158 = icmp ugt i8 %8157, 11
  %8159 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8160 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8159, i64 0, i32 5, i64 0, i32 0
  %8161 = load i64, i64* %8160, align 8
  %8162 = ashr i64 %8161, 35
  %8163 = trunc i64 %8162 to i32
  br i1 %8158, label %8164, label %8173

8164:                                             ; preds = %8155
  %8165 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8159, i64 0, i32 1
  %8166 = load i32, i32* %8165, align 4
  %8167 = and i32 %8166, 255
  %8168 = zext i32 %8167 to i64
  %8169 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8159, i64 0, i32 5, i64 %8168, i32 0
  %8170 = load i64, i64* %8169, align 8
  %8171 = ashr i64 %8170, 35
  %8172 = trunc i64 %8171 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %8135, i8 zeroext 84, i32 %8163, i32 %8134, i32 %8172, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

8173:                                             ; preds = %8149, %8155
  %8174 = phi %"class.v8::internal::compiler::Instruction"* [ %8150, %8149 ], [ %8159, %8155 ]
  %8175 = phi i32 [ %8154, %8149 ], [ %8163, %8155 ]
  %8176 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8174, i64 0, i32 1
  %8177 = load i32, i32* %8176, align 4
  %8178 = and i32 %8177, 255
  %8179 = zext i32 %8178 to i64
  %8180 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8174, i64 0, i32 5, i64 %8179, i32 0
  %8181 = load i64, i64* %8180, align 8
  %8182 = ashr i64 %8181, 35
  %8183 = trunc i64 %8182 to i32
  %8184 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %8183, i32 0) #11
  %8185 = extractvalue { i64, i32 } %8184, 0
  %8186 = extractvalue { i64, i32 } %8184, 1
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %8135, i8 zeroext 84, i32 %8175, i32 %8134, i64 %8185, i32 %8186, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

8187:                                             ; preds = %2
  %8188 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %8189 = load i32, i32* %8188, align 4
  %8190 = and i32 %8189, 255
  %8191 = lshr i32 %8189, 8
  %8192 = and i32 %8191, 65535
  %8193 = add nuw nsw i32 %8192, %8190
  %8194 = zext i32 %8193 to i64
  %8195 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %8194, i32 0
  %8196 = load i64, i64* %8195, align 8
  %8197 = ashr i64 %8196, 35
  %8198 = trunc i64 %8197 to i32
  %8199 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %8199, i8 zeroext 118, i32 %8198, i32 %8198, i32 %8198, i32 1, i32 1, i32 0, i32 5) #11
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %8199, i8 zeroext 115, i32 6, i32 %8198, i32 %8198, i32 1, i32 1, i32 0, i32 5) #11
  %8200 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %8201 = load i8*, i8** %8200, align 8
  %8202 = getelementptr inbounds i8, i8* %8201, i64 1
  store i8* %8202, i8** %8200, align 8
  store i8 63, i8* %8201, align 1
  %8203 = load i32, i32* %8188, align 4
  %8204 = and i32 %8203, 255
  %8205 = zext i32 %8204 to i64
  %8206 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %8205, i32 0
  %8207 = load i64, i64* %8206, align 8
  %8208 = and i64 %8207, 7
  %8209 = icmp ugt i64 %8208, 4
  %8210 = and i64 %8207, 24
  %8211 = icmp eq i64 %8210, 0
  %8212 = and i1 %8209, %8211
  br i1 %8212, label %8219, label %8213

8213:                                             ; preds = %8187
  %8214 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8215 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8214, i64 0, i32 5, i64 0, i32 0
  %8216 = load i64, i64* %8215, align 8
  %8217 = ashr i64 %8216, 35
  %8218 = trunc i64 %8217 to i32
  br label %8237

8219:                                             ; preds = %8187
  %8220 = lshr i64 %8207, 5
  %8221 = trunc i64 %8220 to i8
  %8222 = icmp ugt i8 %8221, 11
  %8223 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8224 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8223, i64 0, i32 5, i64 0, i32 0
  %8225 = load i64, i64* %8224, align 8
  %8226 = ashr i64 %8225, 35
  %8227 = trunc i64 %8226 to i32
  br i1 %8222, label %8228, label %8237

8228:                                             ; preds = %8219
  %8229 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8223, i64 0, i32 1
  %8230 = load i32, i32* %8229, align 4
  %8231 = and i32 %8230, 255
  %8232 = zext i32 %8231 to i64
  %8233 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8223, i64 0, i32 5, i64 %8232, i32 0
  %8234 = load i64, i64* %8233, align 8
  %8235 = ashr i64 %8234, 35
  %8236 = trunc i64 %8235 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %8199, i8 zeroext 87, i32 %8227, i32 %8198, i32 %8236, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

8237:                                             ; preds = %8213, %8219
  %8238 = phi %"class.v8::internal::compiler::Instruction"* [ %8214, %8213 ], [ %8223, %8219 ]
  %8239 = phi i32 [ %8218, %8213 ], [ %8227, %8219 ]
  %8240 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8238, i64 0, i32 1
  %8241 = load i32, i32* %8240, align 4
  %8242 = and i32 %8241, 255
  %8243 = zext i32 %8242 to i64
  %8244 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8238, i64 0, i32 5, i64 %8243, i32 0
  %8245 = load i64, i64* %8244, align 8
  %8246 = ashr i64 %8245, 35
  %8247 = trunc i64 %8246 to i32
  %8248 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %8247, i32 0) #11
  %8249 = extractvalue { i64, i32 } %8248, 0
  %8250 = extractvalue { i64, i32 } %8248, 1
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %8199, i8 zeroext 87, i32 %8239, i32 %8198, i64 %8249, i32 %8250, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

8251:                                             ; preds = %2
  %8252 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %8253 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %8254 = and i32 %8253, 32
  %8255 = icmp eq i32 %8254, 0
  br i1 %8255, label %8257, label %8256

8256:                                             ; preds = %8251
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %8252, i8 zeroext 87, i32 15, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %8258

8257:                                             ; preds = %8251
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %8252, i32 15, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 87) #11
  br label %8258

8258:                                             ; preds = %8256, %8257
  %8259 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %8260 = load i32, i32* %8259, align 4
  %8261 = and i32 %8260, 255
  %8262 = zext i32 %8261 to i64
  %8263 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %8262, i32 0
  %8264 = load i64, i64* %8263, align 8
  %8265 = ashr i64 %8264, 35
  %8266 = trunc i64 %8265 to i32
  %8267 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %8268 = and i32 %8267, 32
  %8269 = icmp eq i32 %8268, 0
  br i1 %8269, label %8271, label %8270

8270:                                             ; preds = %8258
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %8252, i8 zeroext 92, i32 %8266, i32 %8266, i32 15, i32 3, i32 1, i32 0, i32 5) #11
  br label %23402

8271:                                             ; preds = %8258
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %8252, i32 %8266, i32 15, i8 zeroext -14, i8 zeroext 15, i8 zeroext 92) #11
  br label %23402

8272:                                             ; preds = %2
  %8273 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %8274 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %8273, align 8
  %8275 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %8276 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %8277 = bitcast i8** %8276 to i64*
  %8278 = load i64, i64* %8277, align 8
  %8279 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %8280 = bitcast i8** %8279 to i64*
  %8281 = load i64, i64* %8280, align 8
  %8282 = sub i64 %8278, %8281
  %8283 = trunc i64 %8282 to i32
  %8284 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %8285 = and i32 %275, -1073741824
  %8286 = icmp eq i32 %8285, 1073741824
  br i1 %8286, label %8287, label %8308

8287:                                             ; preds = %8272
  %8288 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %8274, i64 0, i32 2
  %8289 = load i64, i64* %8288, align 8
  %8290 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %8274, i64 0, i32 3
  %8291 = load i64, i64* %8290, align 8
  %8292 = sub i64 %8291, %8289
  %8293 = icmp ult i64 %8292, 72
  br i1 %8293, label %8294, label %8296, !prof !3

8294:                                             ; preds = %8287
  %8295 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %8274, i64 72) #11
  br label %8298

8296:                                             ; preds = %8287
  %8297 = add i64 %8289, 72
  store i64 %8297, i64* %8288, align 8
  br label %8298

8298:                                             ; preds = %8296, %8294
  %8299 = phi i64 [ %8295, %8294 ], [ %8289, %8296 ]
  %8300 = inttoptr i64 %8299 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %8301 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8300, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %8301, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %8302 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8300, i64 0, i32 0, i32 0, i32 0
  %8303 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8300, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %8303, align 8
  %8304 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8300, i64 0, i32 0, i32 2
  %8305 = bitcast %"class.v8::internal::compiler::Instruction"** %8304 to i64*
  store i64 %8284, i64* %8305, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8302, align 8
  %8306 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8300, i64 0, i32 1
  store i32 %8283, i32* %8306, align 8
  %8307 = load i32, i32* %274, align 8
  br label %8308

8308:                                             ; preds = %8272, %8298
  %8309 = phi i32 [ %275, %8272 ], [ %8307, %8298 ]
  %8310 = and i32 %8309, 15872
  %8311 = icmp eq i32 %8310, 0
  br i1 %8311, label %8323, label %8312

8312:                                             ; preds = %8308
  %8313 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %8275, i64 0, i32 0, i32 0, i32 0
  %8314 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8315 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8314, i64 0, i32 5, i64 0, i32 0
  %8316 = load i64, i64* %8315, align 8
  %8317 = ashr i64 %8316, 35
  %8318 = trunc i64 %8317 to i32
  %8319 = bitcast i64* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8319)
  store i64 0, i64* %24, align 8
  %8320 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8319)
  %8321 = extractvalue { i64, i32 } %8320, 0
  %8322 = extractvalue { i64, i32 } %8320, 1
  call void @_ZN2v88internal9Assembler7movsxblENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %8313, i32 %8318, i64 %8321, i32 %8322) #11
  br label %8376

8323:                                             ; preds = %8308
  %8324 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %8325 = load i32, i32* %8324, align 4
  %8326 = and i32 %8325, 255
  %8327 = zext i32 %8326 to i64
  %8328 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %8327, i32 0
  %8329 = load i64, i64* %8328, align 8
  %8330 = and i64 %8329, 7
  %8331 = icmp ugt i64 %8330, 4
  %8332 = and i64 %8329, 24
  %8333 = icmp eq i64 %8332, 0
  %8334 = and i1 %8331, %8333
  br i1 %8334, label %8342, label %8335

8335:                                             ; preds = %8323
  %8336 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %8275, i64 0, i32 0, i32 0, i32 0
  %8337 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8338 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8337, i64 0, i32 5, i64 0, i32 0
  %8339 = load i64, i64* %8338, align 8
  %8340 = ashr i64 %8339, 35
  %8341 = trunc i64 %8340 to i32
  br label %8361

8342:                                             ; preds = %8323
  %8343 = lshr i64 %8329, 5
  %8344 = trunc i64 %8343 to i8
  %8345 = icmp ult i8 %8344, 12
  %8346 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %8275, i64 0, i32 0, i32 0, i32 0
  %8347 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8348 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8347, i64 0, i32 5, i64 0, i32 0
  %8349 = load i64, i64* %8348, align 8
  %8350 = ashr i64 %8349, 35
  %8351 = trunc i64 %8350 to i32
  br i1 %8345, label %8352, label %8361

8352:                                             ; preds = %8342
  %8353 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8347, i64 0, i32 1
  %8354 = load i32, i32* %8353, align 4
  %8355 = and i32 %8354, 255
  %8356 = zext i32 %8355 to i64
  %8357 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8347, i64 0, i32 5, i64 %8356, i32 0
  %8358 = load i64, i64* %8357, align 8
  %8359 = ashr i64 %8358, 35
  %8360 = trunc i64 %8359 to i32
  tail call void @_ZN2v88internal9Assembler7movsxblENS0_8RegisterES2_(%"class.v8::internal::Assembler"* %8346, i32 %8351, i32 %8360) #11
  br label %8376

8361:                                             ; preds = %8335, %8342
  %8362 = phi i32 [ %8341, %8335 ], [ %8351, %8342 ]
  %8363 = phi %"class.v8::internal::compiler::Instruction"* [ %8337, %8335 ], [ %8347, %8342 ]
  %8364 = phi %"class.v8::internal::Assembler"* [ %8336, %8335 ], [ %8346, %8342 ]
  %8365 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8363, i64 0, i32 1
  %8366 = load i32, i32* %8365, align 4
  %8367 = and i32 %8366, 255
  %8368 = zext i32 %8367 to i64
  %8369 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8363, i64 0, i32 5, i64 %8368, i32 0
  %8370 = load i64, i64* %8369, align 8
  %8371 = ashr i64 %8370, 35
  %8372 = trunc i64 %8371 to i32
  %8373 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %8372, i32 0) #11
  %8374 = extractvalue { i64, i32 } %8373, 0
  %8375 = extractvalue { i64, i32 } %8373, 1
  call void @_ZN2v88internal9Assembler7movsxblENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %8364, i32 %8362, i64 %8374, i32 %8375) #11
  br label %8376

8376:                                             ; preds = %8352, %8361, %8312
  %8377 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8378 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8377, i64 0, i32 5, i64 0, i32 0
  %8379 = load i64, i64* %8378, align 8
  %8380 = ashr i64 %8379, 35
  %8381 = trunc i64 %8380 to i32
  call void @_ZN2v88internal14TurboAssembler18AssertZeroExtendedENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %8275, i32 %8381) #11
  %8382 = icmp eq i32 %8285, -2147483648
  br i1 %8382, label %8383, label %23402

8383:                                             ; preds = %8376
  %8384 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8385 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8384, i64 0, i32 5, i64 0, i32 0
  %8386 = load i64, i64* %8385, align 8
  %8387 = ashr i64 %8386, 35
  %8388 = trunc i64 %8387 to i32
  %8389 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %8389, i8 zeroext 35, i32 %8388, i32 11, i32 8) #11
  br label %23402

8390:                                             ; preds = %2
  %8391 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %8392 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %8391, align 8
  %8393 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %8394 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %8395 = bitcast i8** %8394 to i64*
  %8396 = load i64, i64* %8395, align 8
  %8397 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %8398 = bitcast i8** %8397 to i64*
  %8399 = load i64, i64* %8398, align 8
  %8400 = sub i64 %8396, %8399
  %8401 = trunc i64 %8400 to i32
  %8402 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %8403 = and i32 %275, -1073741824
  %8404 = icmp eq i32 %8403, 1073741824
  br i1 %8404, label %8405, label %8426

8405:                                             ; preds = %8390
  %8406 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %8392, i64 0, i32 2
  %8407 = load i64, i64* %8406, align 8
  %8408 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %8392, i64 0, i32 3
  %8409 = load i64, i64* %8408, align 8
  %8410 = sub i64 %8409, %8407
  %8411 = icmp ult i64 %8410, 72
  br i1 %8411, label %8412, label %8414, !prof !3

8412:                                             ; preds = %8405
  %8413 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %8392, i64 72) #11
  br label %8416

8414:                                             ; preds = %8405
  %8415 = add i64 %8407, 72
  store i64 %8415, i64* %8406, align 8
  br label %8416

8416:                                             ; preds = %8414, %8412
  %8417 = phi i64 [ %8413, %8412 ], [ %8407, %8414 ]
  %8418 = inttoptr i64 %8417 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %8419 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8418, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %8419, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %8420 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8418, i64 0, i32 0, i32 0, i32 0
  %8421 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8418, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %8421, align 8
  %8422 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8418, i64 0, i32 0, i32 2
  %8423 = bitcast %"class.v8::internal::compiler::Instruction"** %8422 to i64*
  store i64 %8402, i64* %8423, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8420, align 8
  %8424 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8418, i64 0, i32 1
  store i32 %8401, i32* %8424, align 8
  %8425 = load i32, i32* %274, align 8
  br label %8426

8426:                                             ; preds = %8390, %8416
  %8427 = phi i32 [ %275, %8390 ], [ %8425, %8416 ]
  %8428 = and i32 %8427, 15872
  %8429 = icmp eq i32 %8428, 0
  br i1 %8429, label %8441, label %8430

8430:                                             ; preds = %8426
  %8431 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %8393, i64 0, i32 0, i32 0, i32 0
  %8432 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8433 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8432, i64 0, i32 5, i64 0, i32 0
  %8434 = load i64, i64* %8433, align 8
  %8435 = ashr i64 %8434, 35
  %8436 = trunc i64 %8435 to i32
  %8437 = bitcast i64* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8437)
  store i64 0, i64* %23, align 8
  %8438 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8437)
  %8439 = extractvalue { i64, i32 } %8438, 0
  %8440 = extractvalue { i64, i32 } %8438, 1
  call void @_ZN2v88internal9Assembler11emit_movzxbENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %8431, i32 %8436, i64 %8439, i32 %8440, i32 4) #11
  br label %8494

8441:                                             ; preds = %8426
  %8442 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %8443 = load i32, i32* %8442, align 4
  %8444 = and i32 %8443, 255
  %8445 = zext i32 %8444 to i64
  %8446 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %8445, i32 0
  %8447 = load i64, i64* %8446, align 8
  %8448 = and i64 %8447, 7
  %8449 = icmp ugt i64 %8448, 4
  %8450 = and i64 %8447, 24
  %8451 = icmp eq i64 %8450, 0
  %8452 = and i1 %8449, %8451
  br i1 %8452, label %8460, label %8453

8453:                                             ; preds = %8441
  %8454 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %8393, i64 0, i32 0, i32 0, i32 0
  %8455 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8456 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8455, i64 0, i32 5, i64 0, i32 0
  %8457 = load i64, i64* %8456, align 8
  %8458 = ashr i64 %8457, 35
  %8459 = trunc i64 %8458 to i32
  br label %8479

8460:                                             ; preds = %8441
  %8461 = lshr i64 %8447, 5
  %8462 = trunc i64 %8461 to i8
  %8463 = icmp ult i8 %8462, 12
  %8464 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %8393, i64 0, i32 0, i32 0, i32 0
  %8465 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8466 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8465, i64 0, i32 5, i64 0, i32 0
  %8467 = load i64, i64* %8466, align 8
  %8468 = ashr i64 %8467, 35
  %8469 = trunc i64 %8468 to i32
  br i1 %8463, label %8470, label %8479

8470:                                             ; preds = %8460
  %8471 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8465, i64 0, i32 1
  %8472 = load i32, i32* %8471, align 4
  %8473 = and i32 %8472, 255
  %8474 = zext i32 %8473 to i64
  %8475 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8465, i64 0, i32 5, i64 %8474, i32 0
  %8476 = load i64, i64* %8475, align 8
  %8477 = ashr i64 %8476, 35
  %8478 = trunc i64 %8477 to i32
  tail call void @_ZN2v88internal9Assembler11emit_movzxbENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %8464, i32 %8469, i32 %8478, i32 4) #11
  br label %8494

8479:                                             ; preds = %8453, %8460
  %8480 = phi i32 [ %8459, %8453 ], [ %8469, %8460 ]
  %8481 = phi %"class.v8::internal::compiler::Instruction"* [ %8455, %8453 ], [ %8465, %8460 ]
  %8482 = phi %"class.v8::internal::Assembler"* [ %8454, %8453 ], [ %8464, %8460 ]
  %8483 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8481, i64 0, i32 1
  %8484 = load i32, i32* %8483, align 4
  %8485 = and i32 %8484, 255
  %8486 = zext i32 %8485 to i64
  %8487 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8481, i64 0, i32 5, i64 %8486, i32 0
  %8488 = load i64, i64* %8487, align 8
  %8489 = ashr i64 %8488, 35
  %8490 = trunc i64 %8489 to i32
  %8491 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %8490, i32 0) #11
  %8492 = extractvalue { i64, i32 } %8491, 0
  %8493 = extractvalue { i64, i32 } %8491, 1
  call void @_ZN2v88internal9Assembler11emit_movzxbENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %8482, i32 %8480, i64 %8492, i32 %8493, i32 4) #11
  br label %8494

8494:                                             ; preds = %8470, %8479, %8430
  %8495 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8496 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8495, i64 0, i32 5, i64 0, i32 0
  %8497 = load i64, i64* %8496, align 8
  %8498 = ashr i64 %8497, 35
  %8499 = trunc i64 %8498 to i32
  call void @_ZN2v88internal14TurboAssembler18AssertZeroExtendedENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %8393, i32 %8499) #11
  %8500 = icmp eq i32 %8403, -2147483648
  br i1 %8500, label %8501, label %23402

8501:                                             ; preds = %8494
  %8502 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8503 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8502, i64 0, i32 5, i64 0, i32 0
  %8504 = load i64, i64* %8503, align 8
  %8505 = ashr i64 %8504, 35
  %8506 = trunc i64 %8505 to i32
  %8507 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %8507, i8 zeroext 35, i32 %8506, i32 11, i32 8) #11
  br label %23402

8508:                                             ; preds = %2
  %8509 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %8510 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %8509, align 8
  %8511 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %8512 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %8513 = bitcast i8** %8512 to i64*
  %8514 = load i64, i64* %8513, align 8
  %8515 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %8516 = bitcast i8** %8515 to i64*
  %8517 = load i64, i64* %8516, align 8
  %8518 = sub i64 %8514, %8517
  %8519 = trunc i64 %8518 to i32
  %8520 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %8521 = and i32 %275, -1073741824
  %8522 = icmp eq i32 %8521, 1073741824
  br i1 %8522, label %8523, label %8544

8523:                                             ; preds = %8508
  %8524 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %8510, i64 0, i32 2
  %8525 = load i64, i64* %8524, align 8
  %8526 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %8510, i64 0, i32 3
  %8527 = load i64, i64* %8526, align 8
  %8528 = sub i64 %8527, %8525
  %8529 = icmp ult i64 %8528, 72
  br i1 %8529, label %8530, label %8532, !prof !3

8530:                                             ; preds = %8523
  %8531 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %8510, i64 72) #11
  br label %8534

8532:                                             ; preds = %8523
  %8533 = add i64 %8525, 72
  store i64 %8533, i64* %8524, align 8
  br label %8534

8534:                                             ; preds = %8532, %8530
  %8535 = phi i64 [ %8531, %8530 ], [ %8525, %8532 ]
  %8536 = inttoptr i64 %8535 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %8537 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8536, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %8537, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %8538 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8536, i64 0, i32 0, i32 0, i32 0
  %8539 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8536, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %8539, align 8
  %8540 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8536, i64 0, i32 0, i32 2
  %8541 = bitcast %"class.v8::internal::compiler::Instruction"** %8540 to i64*
  store i64 %8520, i64* %8541, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8538, align 8
  %8542 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8536, i64 0, i32 1
  store i32 %8519, i32* %8542, align 8
  %8543 = load i32, i32* %274, align 8
  br label %8544

8544:                                             ; preds = %8508, %8534
  %8545 = phi i32 [ %275, %8508 ], [ %8543, %8534 ]
  %8546 = and i32 %8545, 15872
  %8547 = icmp eq i32 %8546, 0
  br i1 %8547, label %8559, label %8548

8548:                                             ; preds = %8544
  %8549 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %8511, i64 0, i32 0, i32 0, i32 0
  %8550 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8551 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8550, i64 0, i32 5, i64 0, i32 0
  %8552 = load i64, i64* %8551, align 8
  %8553 = ashr i64 %8552, 35
  %8554 = trunc i64 %8553 to i32
  %8555 = bitcast i64* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8555)
  store i64 0, i64* %22, align 8
  %8556 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8555)
  %8557 = extractvalue { i64, i32 } %8556, 0
  %8558 = extractvalue { i64, i32 } %8556, 1
  call void @_ZN2v88internal9Assembler7movsxbqENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %8549, i32 %8554, i64 %8557, i32 %8558) #11
  br label %8612

8559:                                             ; preds = %8544
  %8560 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %8561 = load i32, i32* %8560, align 4
  %8562 = and i32 %8561, 255
  %8563 = zext i32 %8562 to i64
  %8564 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %8563, i32 0
  %8565 = load i64, i64* %8564, align 8
  %8566 = and i64 %8565, 7
  %8567 = icmp ugt i64 %8566, 4
  %8568 = and i64 %8565, 24
  %8569 = icmp eq i64 %8568, 0
  %8570 = and i1 %8567, %8569
  br i1 %8570, label %8578, label %8571

8571:                                             ; preds = %8559
  %8572 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %8511, i64 0, i32 0, i32 0, i32 0
  %8573 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8574 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8573, i64 0, i32 5, i64 0, i32 0
  %8575 = load i64, i64* %8574, align 8
  %8576 = ashr i64 %8575, 35
  %8577 = trunc i64 %8576 to i32
  br label %8597

8578:                                             ; preds = %8559
  %8579 = lshr i64 %8565, 5
  %8580 = trunc i64 %8579 to i8
  %8581 = icmp ult i8 %8580, 12
  %8582 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %8511, i64 0, i32 0, i32 0, i32 0
  %8583 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8584 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8583, i64 0, i32 5, i64 0, i32 0
  %8585 = load i64, i64* %8584, align 8
  %8586 = ashr i64 %8585, 35
  %8587 = trunc i64 %8586 to i32
  br i1 %8581, label %8588, label %8597

8588:                                             ; preds = %8578
  %8589 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8583, i64 0, i32 1
  %8590 = load i32, i32* %8589, align 4
  %8591 = and i32 %8590, 255
  %8592 = zext i32 %8591 to i64
  %8593 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8583, i64 0, i32 5, i64 %8592, i32 0
  %8594 = load i64, i64* %8593, align 8
  %8595 = ashr i64 %8594, 35
  %8596 = trunc i64 %8595 to i32
  tail call void @_ZN2v88internal9Assembler7movsxbqENS0_8RegisterES2_(%"class.v8::internal::Assembler"* %8582, i32 %8587, i32 %8596) #11
  br label %8612

8597:                                             ; preds = %8571, %8578
  %8598 = phi i32 [ %8577, %8571 ], [ %8587, %8578 ]
  %8599 = phi %"class.v8::internal::compiler::Instruction"* [ %8573, %8571 ], [ %8583, %8578 ]
  %8600 = phi %"class.v8::internal::Assembler"* [ %8572, %8571 ], [ %8582, %8578 ]
  %8601 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8599, i64 0, i32 1
  %8602 = load i32, i32* %8601, align 4
  %8603 = and i32 %8602, 255
  %8604 = zext i32 %8603 to i64
  %8605 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8599, i64 0, i32 5, i64 %8604, i32 0
  %8606 = load i64, i64* %8605, align 8
  %8607 = ashr i64 %8606, 35
  %8608 = trunc i64 %8607 to i32
  %8609 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %8608, i32 0) #11
  %8610 = extractvalue { i64, i32 } %8609, 0
  %8611 = extractvalue { i64, i32 } %8609, 1
  call void @_ZN2v88internal9Assembler7movsxbqENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %8600, i32 %8598, i64 %8610, i32 %8611) #11
  br label %8612

8612:                                             ; preds = %8588, %8597, %8548
  %8613 = icmp eq i32 %8521, -2147483648
  br i1 %8613, label %8614, label %23402

8614:                                             ; preds = %8612
  %8615 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8616 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8615, i64 0, i32 5, i64 0, i32 0
  %8617 = load i64, i64* %8616, align 8
  %8618 = ashr i64 %8617, 35
  %8619 = trunc i64 %8618 to i32
  %8620 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %8620, i8 zeroext 35, i32 %8619, i32 11, i32 8) #11
  br label %23402

8621:                                             ; preds = %2
  %8622 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %8623 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %8622, align 8
  %8624 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %8625 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %8626 = bitcast i8** %8625 to i64*
  %8627 = load i64, i64* %8626, align 8
  %8628 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %8629 = bitcast i8** %8628 to i64*
  %8630 = load i64, i64* %8629, align 8
  %8631 = sub i64 %8627, %8630
  %8632 = trunc i64 %8631 to i32
  %8633 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %8634 = and i32 %275, -1073741824
  %8635 = icmp eq i32 %8634, 1073741824
  br i1 %8635, label %8636, label %8657

8636:                                             ; preds = %8621
  %8637 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %8623, i64 0, i32 2
  %8638 = load i64, i64* %8637, align 8
  %8639 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %8623, i64 0, i32 3
  %8640 = load i64, i64* %8639, align 8
  %8641 = sub i64 %8640, %8638
  %8642 = icmp ult i64 %8641, 72
  br i1 %8642, label %8643, label %8645, !prof !3

8643:                                             ; preds = %8636
  %8644 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %8623, i64 72) #11
  br label %8647

8645:                                             ; preds = %8636
  %8646 = add i64 %8638, 72
  store i64 %8646, i64* %8637, align 8
  br label %8647

8647:                                             ; preds = %8645, %8643
  %8648 = phi i64 [ %8644, %8643 ], [ %8638, %8645 ]
  %8649 = inttoptr i64 %8648 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %8650 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8649, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %8650, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %8651 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8649, i64 0, i32 0, i32 0, i32 0
  %8652 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8649, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %8652, align 8
  %8653 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8649, i64 0, i32 0, i32 2
  %8654 = bitcast %"class.v8::internal::compiler::Instruction"** %8653 to i64*
  store i64 %8633, i64* %8654, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8651, align 8
  %8655 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8649, i64 0, i32 1
  store i32 %8632, i32* %8655, align 8
  %8656 = load i32, i32* %274, align 8
  br label %8657

8657:                                             ; preds = %8621, %8647
  %8658 = phi i32 [ %275, %8621 ], [ %8656, %8647 ]
  %8659 = and i32 %8658, 15872
  %8660 = icmp eq i32 %8659, 0
  br i1 %8660, label %8672, label %8661

8661:                                             ; preds = %8657
  %8662 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %8624, i64 0, i32 0, i32 0, i32 0
  %8663 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8664 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8663, i64 0, i32 5, i64 0, i32 0
  %8665 = load i64, i64* %8664, align 8
  %8666 = ashr i64 %8665, 35
  %8667 = trunc i64 %8666 to i32
  %8668 = bitcast i64* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8668)
  store i64 0, i64* %21, align 8
  %8669 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %21) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8668)
  %8670 = extractvalue { i64, i32 } %8669, 0
  %8671 = extractvalue { i64, i32 } %8669, 1
  call void @_ZN2v88internal9Assembler11emit_movzxbENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %8662, i32 %8667, i64 %8670, i32 %8671, i32 8) #11
  br label %8725

8672:                                             ; preds = %8657
  %8673 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %8674 = load i32, i32* %8673, align 4
  %8675 = and i32 %8674, 255
  %8676 = zext i32 %8675 to i64
  %8677 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %8676, i32 0
  %8678 = load i64, i64* %8677, align 8
  %8679 = and i64 %8678, 7
  %8680 = icmp ugt i64 %8679, 4
  %8681 = and i64 %8678, 24
  %8682 = icmp eq i64 %8681, 0
  %8683 = and i1 %8680, %8682
  br i1 %8683, label %8691, label %8684

8684:                                             ; preds = %8672
  %8685 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %8624, i64 0, i32 0, i32 0, i32 0
  %8686 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8687 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8686, i64 0, i32 5, i64 0, i32 0
  %8688 = load i64, i64* %8687, align 8
  %8689 = ashr i64 %8688, 35
  %8690 = trunc i64 %8689 to i32
  br label %8710

8691:                                             ; preds = %8672
  %8692 = lshr i64 %8678, 5
  %8693 = trunc i64 %8692 to i8
  %8694 = icmp ult i8 %8693, 12
  %8695 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %8624, i64 0, i32 0, i32 0, i32 0
  %8696 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8697 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8696, i64 0, i32 5, i64 0, i32 0
  %8698 = load i64, i64* %8697, align 8
  %8699 = ashr i64 %8698, 35
  %8700 = trunc i64 %8699 to i32
  br i1 %8694, label %8701, label %8710

8701:                                             ; preds = %8691
  %8702 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8696, i64 0, i32 1
  %8703 = load i32, i32* %8702, align 4
  %8704 = and i32 %8703, 255
  %8705 = zext i32 %8704 to i64
  %8706 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8696, i64 0, i32 5, i64 %8705, i32 0
  %8707 = load i64, i64* %8706, align 8
  %8708 = ashr i64 %8707, 35
  %8709 = trunc i64 %8708 to i32
  tail call void @_ZN2v88internal9Assembler11emit_movzxbENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %8695, i32 %8700, i32 %8709, i32 8) #11
  br label %8725

8710:                                             ; preds = %8684, %8691
  %8711 = phi i32 [ %8690, %8684 ], [ %8700, %8691 ]
  %8712 = phi %"class.v8::internal::compiler::Instruction"* [ %8686, %8684 ], [ %8696, %8691 ]
  %8713 = phi %"class.v8::internal::Assembler"* [ %8685, %8684 ], [ %8695, %8691 ]
  %8714 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8712, i64 0, i32 1
  %8715 = load i32, i32* %8714, align 4
  %8716 = and i32 %8715, 255
  %8717 = zext i32 %8716 to i64
  %8718 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8712, i64 0, i32 5, i64 %8717, i32 0
  %8719 = load i64, i64* %8718, align 8
  %8720 = ashr i64 %8719, 35
  %8721 = trunc i64 %8720 to i32
  %8722 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %8721, i32 0) #11
  %8723 = extractvalue { i64, i32 } %8722, 0
  %8724 = extractvalue { i64, i32 } %8722, 1
  call void @_ZN2v88internal9Assembler11emit_movzxbENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %8713, i32 %8711, i64 %8723, i32 %8724, i32 8) #11
  br label %8725

8725:                                             ; preds = %8701, %8710, %8661
  %8726 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8727 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8726, i64 0, i32 5, i64 0, i32 0
  %8728 = load i64, i64* %8727, align 8
  %8729 = ashr i64 %8728, 35
  %8730 = trunc i64 %8729 to i32
  call void @_ZN2v88internal14TurboAssembler18AssertZeroExtendedENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %8624, i32 %8730) #11
  %8731 = icmp eq i32 %8634, -2147483648
  br i1 %8731, label %8732, label %23402

8732:                                             ; preds = %8725
  %8733 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8734 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8733, i64 0, i32 5, i64 0, i32 0
  %8735 = load i64, i64* %8734, align 8
  %8736 = ashr i64 %8735, 35
  %8737 = trunc i64 %8736 to i32
  %8738 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %8738, i8 zeroext 35, i32 %8737, i32 11, i32 8) #11
  br label %23402

8739:                                             ; preds = %2
  %8740 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %8741 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %8740, align 8
  %8742 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %8743 = bitcast i8** %8742 to i64*
  %8744 = load i64, i64* %8743, align 8
  %8745 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %8746 = bitcast i8** %8745 to i64*
  %8747 = load i64, i64* %8746, align 8
  %8748 = sub i64 %8744, %8747
  %8749 = trunc i64 %8748 to i32
  %8750 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %8751 = and i32 %275, -1073741824
  %8752 = icmp eq i32 %8751, 1073741824
  br i1 %8752, label %8753, label %8773

8753:                                             ; preds = %8739
  %8754 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %8741, i64 0, i32 2
  %8755 = load i64, i64* %8754, align 8
  %8756 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %8741, i64 0, i32 3
  %8757 = load i64, i64* %8756, align 8
  %8758 = sub i64 %8757, %8755
  %8759 = icmp ult i64 %8758, 72
  br i1 %8759, label %8760, label %8762, !prof !3

8760:                                             ; preds = %8753
  %8761 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %8741, i64 72) #11
  br label %8764

8762:                                             ; preds = %8753
  %8763 = add i64 %8755, 72
  store i64 %8763, i64* %8754, align 8
  br label %8764

8764:                                             ; preds = %8762, %8760
  %8765 = phi i64 [ %8761, %8760 ], [ %8755, %8762 ]
  %8766 = inttoptr i64 %8765 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %8767 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8766, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %8767, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %8768 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8766, i64 0, i32 0, i32 0, i32 0
  %8769 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8766, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %8769, align 8
  %8770 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8766, i64 0, i32 0, i32 2
  %8771 = bitcast %"class.v8::internal::compiler::Instruction"** %8770 to i64*
  store i64 %8750, i64* %8771, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8768, align 8
  %8772 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8766, i64 0, i32 1
  store i32 %8749, i32* %8772, align 8
  br label %8773

8773:                                             ; preds = %8739, %8764
  %8774 = bitcast i64* %211 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8774) #11
  store i64 0, i64* %211, align 8
  %8775 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %211)
  %8776 = extractvalue { i64, i32 } %8775, 0
  %8777 = extractvalue { i64, i32 } %8775, 1
  %8778 = load i64, i64* %211, align 8
  %8779 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %8780 = load i32, i32* %8779, align 4
  %8781 = and i32 %8780, 255
  %8782 = zext i32 %8781 to i64
  %8783 = add i64 %8778, %8782
  %8784 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %8783, i32 0
  %8785 = load i64, i64* %8784, align 8
  %8786 = and i64 %8785, 7
  %8787 = icmp eq i64 %8786, 3
  %8788 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %8789 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8790 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8789, i64 0, i32 1
  %8791 = load i32, i32* %8790, align 4
  %8792 = and i32 %8791, 255
  %8793 = zext i32 %8792 to i64
  %8794 = add i64 %8778, %8793
  br i1 %8787, label %8795, label %8804

8795:                                             ; preds = %8773
  %8796 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %8797 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8789, i64 0, i32 5, i64 %8794
  %8798 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %8796, %"class.v8::internal::compiler::InstructionOperand"* %8797) #11
  %8799 = extractvalue { i64, i64 } %8798, 1
  %8800 = trunc i64 %8799 to i32
  %8801 = shl i32 %8800, 24
  %8802 = ashr exact i32 %8801, 24
  %8803 = zext i32 %8802 to i64
  call void @_ZN2v88internal9Assembler4movbENS0_7OperandENS0_9ImmediateE(%"class.v8::internal::Assembler"* %8788, i64 %8776, i32 %8777, i64 %8803) #11
  br label %8809

8804:                                             ; preds = %8773
  %8805 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8789, i64 0, i32 5, i64 %8794, i32 0
  %8806 = load i64, i64* %8805, align 8
  %8807 = ashr i64 %8806, 35
  %8808 = trunc i64 %8807 to i32
  call void @_ZN2v88internal9Assembler4movbENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %8788, i64 %8776, i32 %8777, i32 %8808) #11
  br label %8809

8809:                                             ; preds = %8804, %8795
  %8810 = icmp eq i32 %8751, -2147483648
  br i1 %8810, label %8811, label %8817

8811:                                             ; preds = %8809
  %8812 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8813 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8812, i64 0, i32 5, i64 0, i32 0
  %8814 = load i64, i64* %8813, align 8
  %8815 = ashr i64 %8814, 35
  %8816 = trunc i64 %8815 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %8788, i8 zeroext 35, i32 %8816, i32 11, i32 8) #11
  br label %8817

8817:                                             ; preds = %8809, %8811
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8774) #11
  br label %23402

8818:                                             ; preds = %2
  %8819 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %8820 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %8819, align 8
  %8821 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %8822 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %8823 = bitcast i8** %8822 to i64*
  %8824 = load i64, i64* %8823, align 8
  %8825 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %8826 = bitcast i8** %8825 to i64*
  %8827 = load i64, i64* %8826, align 8
  %8828 = sub i64 %8824, %8827
  %8829 = trunc i64 %8828 to i32
  %8830 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %8831 = and i32 %275, -1073741824
  %8832 = icmp eq i32 %8831, 1073741824
  br i1 %8832, label %8833, label %8854

8833:                                             ; preds = %8818
  %8834 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %8820, i64 0, i32 2
  %8835 = load i64, i64* %8834, align 8
  %8836 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %8820, i64 0, i32 3
  %8837 = load i64, i64* %8836, align 8
  %8838 = sub i64 %8837, %8835
  %8839 = icmp ult i64 %8838, 72
  br i1 %8839, label %8840, label %8842, !prof !3

8840:                                             ; preds = %8833
  %8841 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %8820, i64 72) #11
  br label %8844

8842:                                             ; preds = %8833
  %8843 = add i64 %8835, 72
  store i64 %8843, i64* %8834, align 8
  br label %8844

8844:                                             ; preds = %8842, %8840
  %8845 = phi i64 [ %8841, %8840 ], [ %8835, %8842 ]
  %8846 = inttoptr i64 %8845 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %8847 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8846, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %8847, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %8848 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8846, i64 0, i32 0, i32 0, i32 0
  %8849 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8846, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %8849, align 8
  %8850 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8846, i64 0, i32 0, i32 2
  %8851 = bitcast %"class.v8::internal::compiler::Instruction"** %8850 to i64*
  store i64 %8830, i64* %8851, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8848, align 8
  %8852 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8846, i64 0, i32 1
  store i32 %8829, i32* %8852, align 8
  %8853 = load i32, i32* %274, align 8
  br label %8854

8854:                                             ; preds = %8818, %8844
  %8855 = phi i32 [ %275, %8818 ], [ %8853, %8844 ]
  %8856 = and i32 %8855, 15872
  %8857 = icmp eq i32 %8856, 0
  br i1 %8857, label %8869, label %8858

8858:                                             ; preds = %8854
  %8859 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %8821, i64 0, i32 0, i32 0, i32 0
  %8860 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8861 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8860, i64 0, i32 5, i64 0, i32 0
  %8862 = load i64, i64* %8861, align 8
  %8863 = ashr i64 %8862, 35
  %8864 = trunc i64 %8863 to i32
  %8865 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8865)
  store i64 0, i64* %20, align 8
  %8866 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8865)
  %8867 = extractvalue { i64, i32 } %8866, 0
  %8868 = extractvalue { i64, i32 } %8866, 1
  call void @_ZN2v88internal9Assembler7movsxwlENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %8859, i32 %8864, i64 %8867, i32 %8868) #11
  br label %8922

8869:                                             ; preds = %8854
  %8870 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %8871 = load i32, i32* %8870, align 4
  %8872 = and i32 %8871, 255
  %8873 = zext i32 %8872 to i64
  %8874 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %8873, i32 0
  %8875 = load i64, i64* %8874, align 8
  %8876 = and i64 %8875, 7
  %8877 = icmp ugt i64 %8876, 4
  %8878 = and i64 %8875, 24
  %8879 = icmp eq i64 %8878, 0
  %8880 = and i1 %8877, %8879
  br i1 %8880, label %8888, label %8881

8881:                                             ; preds = %8869
  %8882 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %8821, i64 0, i32 0, i32 0, i32 0
  %8883 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8884 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8883, i64 0, i32 5, i64 0, i32 0
  %8885 = load i64, i64* %8884, align 8
  %8886 = ashr i64 %8885, 35
  %8887 = trunc i64 %8886 to i32
  br label %8907

8888:                                             ; preds = %8869
  %8889 = lshr i64 %8875, 5
  %8890 = trunc i64 %8889 to i8
  %8891 = icmp ult i8 %8890, 12
  %8892 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %8821, i64 0, i32 0, i32 0, i32 0
  %8893 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8894 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8893, i64 0, i32 5, i64 0, i32 0
  %8895 = load i64, i64* %8894, align 8
  %8896 = ashr i64 %8895, 35
  %8897 = trunc i64 %8896 to i32
  br i1 %8891, label %8898, label %8907

8898:                                             ; preds = %8888
  %8899 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8893, i64 0, i32 1
  %8900 = load i32, i32* %8899, align 4
  %8901 = and i32 %8900, 255
  %8902 = zext i32 %8901 to i64
  %8903 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8893, i64 0, i32 5, i64 %8902, i32 0
  %8904 = load i64, i64* %8903, align 8
  %8905 = ashr i64 %8904, 35
  %8906 = trunc i64 %8905 to i32
  tail call void @_ZN2v88internal9Assembler7movsxwlENS0_8RegisterES2_(%"class.v8::internal::Assembler"* %8892, i32 %8897, i32 %8906) #11
  br label %8922

8907:                                             ; preds = %8881, %8888
  %8908 = phi i32 [ %8887, %8881 ], [ %8897, %8888 ]
  %8909 = phi %"class.v8::internal::compiler::Instruction"* [ %8883, %8881 ], [ %8893, %8888 ]
  %8910 = phi %"class.v8::internal::Assembler"* [ %8882, %8881 ], [ %8892, %8888 ]
  %8911 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8909, i64 0, i32 1
  %8912 = load i32, i32* %8911, align 4
  %8913 = and i32 %8912, 255
  %8914 = zext i32 %8913 to i64
  %8915 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8909, i64 0, i32 5, i64 %8914, i32 0
  %8916 = load i64, i64* %8915, align 8
  %8917 = ashr i64 %8916, 35
  %8918 = trunc i64 %8917 to i32
  %8919 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %8918, i32 0) #11
  %8920 = extractvalue { i64, i32 } %8919, 0
  %8921 = extractvalue { i64, i32 } %8919, 1
  call void @_ZN2v88internal9Assembler7movsxwlENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %8910, i32 %8908, i64 %8920, i32 %8921) #11
  br label %8922

8922:                                             ; preds = %8898, %8907, %8858
  %8923 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8924 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8923, i64 0, i32 5, i64 0, i32 0
  %8925 = load i64, i64* %8924, align 8
  %8926 = ashr i64 %8925, 35
  %8927 = trunc i64 %8926 to i32
  call void @_ZN2v88internal14TurboAssembler18AssertZeroExtendedENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %8821, i32 %8927) #11
  %8928 = icmp eq i32 %8831, -2147483648
  br i1 %8928, label %8929, label %23402

8929:                                             ; preds = %8922
  %8930 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8931 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8930, i64 0, i32 5, i64 0, i32 0
  %8932 = load i64, i64* %8931, align 8
  %8933 = ashr i64 %8932, 35
  %8934 = trunc i64 %8933 to i32
  %8935 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %8935, i8 zeroext 35, i32 %8934, i32 11, i32 8) #11
  br label %23402

8936:                                             ; preds = %2
  %8937 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %8938 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %8937, align 8
  %8939 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %8940 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %8941 = bitcast i8** %8940 to i64*
  %8942 = load i64, i64* %8941, align 8
  %8943 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %8944 = bitcast i8** %8943 to i64*
  %8945 = load i64, i64* %8944, align 8
  %8946 = sub i64 %8942, %8945
  %8947 = trunc i64 %8946 to i32
  %8948 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %8949 = and i32 %275, -1073741824
  %8950 = icmp eq i32 %8949, 1073741824
  br i1 %8950, label %8951, label %8972

8951:                                             ; preds = %8936
  %8952 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %8938, i64 0, i32 2
  %8953 = load i64, i64* %8952, align 8
  %8954 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %8938, i64 0, i32 3
  %8955 = load i64, i64* %8954, align 8
  %8956 = sub i64 %8955, %8953
  %8957 = icmp ult i64 %8956, 72
  br i1 %8957, label %8958, label %8960, !prof !3

8958:                                             ; preds = %8951
  %8959 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %8938, i64 72) #11
  br label %8962

8960:                                             ; preds = %8951
  %8961 = add i64 %8953, 72
  store i64 %8961, i64* %8952, align 8
  br label %8962

8962:                                             ; preds = %8960, %8958
  %8963 = phi i64 [ %8959, %8958 ], [ %8953, %8960 ]
  %8964 = inttoptr i64 %8963 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %8965 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8964, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %8965, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %8966 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8964, i64 0, i32 0, i32 0, i32 0
  %8967 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8964, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %8967, align 8
  %8968 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8964, i64 0, i32 0, i32 2
  %8969 = bitcast %"class.v8::internal::compiler::Instruction"** %8968 to i64*
  store i64 %8948, i64* %8969, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8966, align 8
  %8970 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %8964, i64 0, i32 1
  store i32 %8947, i32* %8970, align 8
  %8971 = load i32, i32* %274, align 8
  br label %8972

8972:                                             ; preds = %8936, %8962
  %8973 = phi i32 [ %275, %8936 ], [ %8971, %8962 ]
  %8974 = and i32 %8973, 15872
  %8975 = icmp eq i32 %8974, 0
  br i1 %8975, label %8987, label %8976

8976:                                             ; preds = %8972
  %8977 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %8939, i64 0, i32 0, i32 0, i32 0
  %8978 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %8979 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8978, i64 0, i32 5, i64 0, i32 0
  %8980 = load i64, i64* %8979, align 8
  %8981 = ashr i64 %8980, 35
  %8982 = trunc i64 %8981 to i32
  %8983 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8983)
  store i64 0, i64* %19, align 8
  %8984 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8983)
  %8985 = extractvalue { i64, i32 } %8984, 0
  %8986 = extractvalue { i64, i32 } %8984, 1
  call void @_ZN2v88internal9Assembler11emit_movzxwENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %8977, i32 %8982, i64 %8985, i32 %8986, i32 4) #11
  br label %9040

8987:                                             ; preds = %8972
  %8988 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %8989 = load i32, i32* %8988, align 4
  %8990 = and i32 %8989, 255
  %8991 = zext i32 %8990 to i64
  %8992 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %8991, i32 0
  %8993 = load i64, i64* %8992, align 8
  %8994 = and i64 %8993, 7
  %8995 = icmp ugt i64 %8994, 4
  %8996 = and i64 %8993, 24
  %8997 = icmp eq i64 %8996, 0
  %8998 = and i1 %8995, %8997
  br i1 %8998, label %9006, label %8999

8999:                                             ; preds = %8987
  %9000 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %8939, i64 0, i32 0, i32 0, i32 0
  %9001 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9002 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9001, i64 0, i32 5, i64 0, i32 0
  %9003 = load i64, i64* %9002, align 8
  %9004 = ashr i64 %9003, 35
  %9005 = trunc i64 %9004 to i32
  br label %9025

9006:                                             ; preds = %8987
  %9007 = lshr i64 %8993, 5
  %9008 = trunc i64 %9007 to i8
  %9009 = icmp ult i8 %9008, 12
  %9010 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %8939, i64 0, i32 0, i32 0, i32 0
  %9011 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9012 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9011, i64 0, i32 5, i64 0, i32 0
  %9013 = load i64, i64* %9012, align 8
  %9014 = ashr i64 %9013, 35
  %9015 = trunc i64 %9014 to i32
  br i1 %9009, label %9016, label %9025

9016:                                             ; preds = %9006
  %9017 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9011, i64 0, i32 1
  %9018 = load i32, i32* %9017, align 4
  %9019 = and i32 %9018, 255
  %9020 = zext i32 %9019 to i64
  %9021 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9011, i64 0, i32 5, i64 %9020, i32 0
  %9022 = load i64, i64* %9021, align 8
  %9023 = ashr i64 %9022, 35
  %9024 = trunc i64 %9023 to i32
  tail call void @_ZN2v88internal9Assembler11emit_movzxwENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %9010, i32 %9015, i32 %9024, i32 4) #11
  br label %9040

9025:                                             ; preds = %8999, %9006
  %9026 = phi i32 [ %9005, %8999 ], [ %9015, %9006 ]
  %9027 = phi %"class.v8::internal::compiler::Instruction"* [ %9001, %8999 ], [ %9011, %9006 ]
  %9028 = phi %"class.v8::internal::Assembler"* [ %9000, %8999 ], [ %9010, %9006 ]
  %9029 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9027, i64 0, i32 1
  %9030 = load i32, i32* %9029, align 4
  %9031 = and i32 %9030, 255
  %9032 = zext i32 %9031 to i64
  %9033 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9027, i64 0, i32 5, i64 %9032, i32 0
  %9034 = load i64, i64* %9033, align 8
  %9035 = ashr i64 %9034, 35
  %9036 = trunc i64 %9035 to i32
  %9037 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %9036, i32 0) #11
  %9038 = extractvalue { i64, i32 } %9037, 0
  %9039 = extractvalue { i64, i32 } %9037, 1
  call void @_ZN2v88internal9Assembler11emit_movzxwENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %9028, i32 %9026, i64 %9038, i32 %9039, i32 4) #11
  br label %9040

9040:                                             ; preds = %9016, %9025, %8976
  %9041 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9042 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9041, i64 0, i32 5, i64 0, i32 0
  %9043 = load i64, i64* %9042, align 8
  %9044 = ashr i64 %9043, 35
  %9045 = trunc i64 %9044 to i32
  call void @_ZN2v88internal14TurboAssembler18AssertZeroExtendedENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %8939, i32 %9045) #11
  %9046 = icmp eq i32 %8949, -2147483648
  br i1 %9046, label %9047, label %23402

9047:                                             ; preds = %9040
  %9048 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9049 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9048, i64 0, i32 5, i64 0, i32 0
  %9050 = load i64, i64* %9049, align 8
  %9051 = ashr i64 %9050, 35
  %9052 = trunc i64 %9051 to i32
  %9053 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %9053, i8 zeroext 35, i32 %9052, i32 11, i32 8) #11
  br label %23402

9054:                                             ; preds = %2
  %9055 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %9056 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %9055, align 8
  %9057 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %9058 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %9059 = bitcast i8** %9058 to i64*
  %9060 = load i64, i64* %9059, align 8
  %9061 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %9062 = bitcast i8** %9061 to i64*
  %9063 = load i64, i64* %9062, align 8
  %9064 = sub i64 %9060, %9063
  %9065 = trunc i64 %9064 to i32
  %9066 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %9067 = and i32 %275, -1073741824
  %9068 = icmp eq i32 %9067, 1073741824
  br i1 %9068, label %9069, label %9090

9069:                                             ; preds = %9054
  %9070 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9056, i64 0, i32 2
  %9071 = load i64, i64* %9070, align 8
  %9072 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9056, i64 0, i32 3
  %9073 = load i64, i64* %9072, align 8
  %9074 = sub i64 %9073, %9071
  %9075 = icmp ult i64 %9074, 72
  br i1 %9075, label %9076, label %9078, !prof !3

9076:                                             ; preds = %9069
  %9077 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %9056, i64 72) #11
  br label %9080

9078:                                             ; preds = %9069
  %9079 = add i64 %9071, 72
  store i64 %9079, i64* %9070, align 8
  br label %9080

9080:                                             ; preds = %9078, %9076
  %9081 = phi i64 [ %9077, %9076 ], [ %9071, %9078 ]
  %9082 = inttoptr i64 %9081 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %9083 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9082, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %9083, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %9084 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9082, i64 0, i32 0, i32 0, i32 0
  %9085 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9082, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %9085, align 8
  %9086 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9082, i64 0, i32 0, i32 2
  %9087 = bitcast %"class.v8::internal::compiler::Instruction"** %9086 to i64*
  store i64 %9066, i64* %9087, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9084, align 8
  %9088 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9082, i64 0, i32 1
  store i32 %9065, i32* %9088, align 8
  %9089 = load i32, i32* %274, align 8
  br label %9090

9090:                                             ; preds = %9054, %9080
  %9091 = phi i32 [ %275, %9054 ], [ %9089, %9080 ]
  %9092 = and i32 %9091, 15872
  %9093 = icmp eq i32 %9092, 0
  br i1 %9093, label %9105, label %9094

9094:                                             ; preds = %9090
  %9095 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %9057, i64 0, i32 0, i32 0, i32 0
  %9096 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9097 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9096, i64 0, i32 5, i64 0, i32 0
  %9098 = load i64, i64* %9097, align 8
  %9099 = ashr i64 %9098, 35
  %9100 = trunc i64 %9099 to i32
  %9101 = bitcast i64* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9101)
  store i64 0, i64* %18, align 8
  %9102 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9101)
  %9103 = extractvalue { i64, i32 } %9102, 0
  %9104 = extractvalue { i64, i32 } %9102, 1
  call void @_ZN2v88internal9Assembler7movsxwqENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %9095, i32 %9100, i64 %9103, i32 %9104) #11
  br label %23402

9105:                                             ; preds = %9090
  %9106 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %9107 = load i32, i32* %9106, align 4
  %9108 = and i32 %9107, 255
  %9109 = zext i32 %9108 to i64
  %9110 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %9109, i32 0
  %9111 = load i64, i64* %9110, align 8
  %9112 = and i64 %9111, 7
  %9113 = icmp ugt i64 %9112, 4
  %9114 = and i64 %9111, 24
  %9115 = icmp eq i64 %9114, 0
  %9116 = and i1 %9113, %9115
  br i1 %9116, label %9124, label %9117

9117:                                             ; preds = %9105
  %9118 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %9057, i64 0, i32 0, i32 0, i32 0
  %9119 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9120 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9119, i64 0, i32 5, i64 0, i32 0
  %9121 = load i64, i64* %9120, align 8
  %9122 = ashr i64 %9121, 35
  %9123 = trunc i64 %9122 to i32
  br label %9143

9124:                                             ; preds = %9105
  %9125 = lshr i64 %9111, 5
  %9126 = trunc i64 %9125 to i8
  %9127 = icmp ult i8 %9126, 12
  %9128 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %9057, i64 0, i32 0, i32 0, i32 0
  %9129 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9130 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9129, i64 0, i32 5, i64 0, i32 0
  %9131 = load i64, i64* %9130, align 8
  %9132 = ashr i64 %9131, 35
  %9133 = trunc i64 %9132 to i32
  br i1 %9127, label %9134, label %9143

9134:                                             ; preds = %9124
  %9135 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9129, i64 0, i32 1
  %9136 = load i32, i32* %9135, align 4
  %9137 = and i32 %9136, 255
  %9138 = zext i32 %9137 to i64
  %9139 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9129, i64 0, i32 5, i64 %9138, i32 0
  %9140 = load i64, i64* %9139, align 8
  %9141 = ashr i64 %9140, 35
  %9142 = trunc i64 %9141 to i32
  tail call void @_ZN2v88internal9Assembler7movsxwqENS0_8RegisterES2_(%"class.v8::internal::Assembler"* %9128, i32 %9133, i32 %9142) #11
  br label %23402

9143:                                             ; preds = %9117, %9124
  %9144 = phi i32 [ %9123, %9117 ], [ %9133, %9124 ]
  %9145 = phi %"class.v8::internal::compiler::Instruction"* [ %9119, %9117 ], [ %9129, %9124 ]
  %9146 = phi %"class.v8::internal::Assembler"* [ %9118, %9117 ], [ %9128, %9124 ]
  %9147 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9145, i64 0, i32 1
  %9148 = load i32, i32* %9147, align 4
  %9149 = and i32 %9148, 255
  %9150 = zext i32 %9149 to i64
  %9151 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9145, i64 0, i32 5, i64 %9150, i32 0
  %9152 = load i64, i64* %9151, align 8
  %9153 = ashr i64 %9152, 35
  %9154 = trunc i64 %9153 to i32
  %9155 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %9154, i32 0) #11
  %9156 = extractvalue { i64, i32 } %9155, 0
  %9157 = extractvalue { i64, i32 } %9155, 1
  call void @_ZN2v88internal9Assembler7movsxwqENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %9146, i32 %9144, i64 %9156, i32 %9157) #11
  br label %23402

9158:                                             ; preds = %2
  %9159 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %9160 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %9159, align 8
  %9161 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %9162 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %9163 = bitcast i8** %9162 to i64*
  %9164 = load i64, i64* %9163, align 8
  %9165 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %9166 = bitcast i8** %9165 to i64*
  %9167 = load i64, i64* %9166, align 8
  %9168 = sub i64 %9164, %9167
  %9169 = trunc i64 %9168 to i32
  %9170 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %9171 = and i32 %275, -1073741824
  %9172 = icmp eq i32 %9171, 1073741824
  br i1 %9172, label %9173, label %9194

9173:                                             ; preds = %9158
  %9174 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9160, i64 0, i32 2
  %9175 = load i64, i64* %9174, align 8
  %9176 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9160, i64 0, i32 3
  %9177 = load i64, i64* %9176, align 8
  %9178 = sub i64 %9177, %9175
  %9179 = icmp ult i64 %9178, 72
  br i1 %9179, label %9180, label %9182, !prof !3

9180:                                             ; preds = %9173
  %9181 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %9160, i64 72) #11
  br label %9184

9182:                                             ; preds = %9173
  %9183 = add i64 %9175, 72
  store i64 %9183, i64* %9174, align 8
  br label %9184

9184:                                             ; preds = %9182, %9180
  %9185 = phi i64 [ %9181, %9180 ], [ %9175, %9182 ]
  %9186 = inttoptr i64 %9185 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %9187 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9186, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %9187, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %9188 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9186, i64 0, i32 0, i32 0, i32 0
  %9189 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9186, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %9189, align 8
  %9190 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9186, i64 0, i32 0, i32 2
  %9191 = bitcast %"class.v8::internal::compiler::Instruction"** %9190 to i64*
  store i64 %9170, i64* %9191, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9188, align 8
  %9192 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9186, i64 0, i32 1
  store i32 %9169, i32* %9192, align 8
  %9193 = load i32, i32* %274, align 8
  br label %9194

9194:                                             ; preds = %9158, %9184
  %9195 = phi i32 [ %275, %9158 ], [ %9193, %9184 ]
  %9196 = and i32 %9195, 15872
  %9197 = icmp eq i32 %9196, 0
  br i1 %9197, label %9209, label %9198

9198:                                             ; preds = %9194
  %9199 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %9161, i64 0, i32 0, i32 0, i32 0
  %9200 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9201 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9200, i64 0, i32 5, i64 0, i32 0
  %9202 = load i64, i64* %9201, align 8
  %9203 = ashr i64 %9202, 35
  %9204 = trunc i64 %9203 to i32
  %9205 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9205)
  store i64 0, i64* %17, align 8
  %9206 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9205)
  %9207 = extractvalue { i64, i32 } %9206, 0
  %9208 = extractvalue { i64, i32 } %9206, 1
  call void @_ZN2v88internal9Assembler11emit_movzxwENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %9199, i32 %9204, i64 %9207, i32 %9208, i32 8) #11
  br label %9262

9209:                                             ; preds = %9194
  %9210 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %9211 = load i32, i32* %9210, align 4
  %9212 = and i32 %9211, 255
  %9213 = zext i32 %9212 to i64
  %9214 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %9213, i32 0
  %9215 = load i64, i64* %9214, align 8
  %9216 = and i64 %9215, 7
  %9217 = icmp ugt i64 %9216, 4
  %9218 = and i64 %9215, 24
  %9219 = icmp eq i64 %9218, 0
  %9220 = and i1 %9217, %9219
  br i1 %9220, label %9228, label %9221

9221:                                             ; preds = %9209
  %9222 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %9161, i64 0, i32 0, i32 0, i32 0
  %9223 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9224 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9223, i64 0, i32 5, i64 0, i32 0
  %9225 = load i64, i64* %9224, align 8
  %9226 = ashr i64 %9225, 35
  %9227 = trunc i64 %9226 to i32
  br label %9247

9228:                                             ; preds = %9209
  %9229 = lshr i64 %9215, 5
  %9230 = trunc i64 %9229 to i8
  %9231 = icmp ult i8 %9230, 12
  %9232 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %9161, i64 0, i32 0, i32 0, i32 0
  %9233 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9234 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9233, i64 0, i32 5, i64 0, i32 0
  %9235 = load i64, i64* %9234, align 8
  %9236 = ashr i64 %9235, 35
  %9237 = trunc i64 %9236 to i32
  br i1 %9231, label %9238, label %9247

9238:                                             ; preds = %9228
  %9239 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9233, i64 0, i32 1
  %9240 = load i32, i32* %9239, align 4
  %9241 = and i32 %9240, 255
  %9242 = zext i32 %9241 to i64
  %9243 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9233, i64 0, i32 5, i64 %9242, i32 0
  %9244 = load i64, i64* %9243, align 8
  %9245 = ashr i64 %9244, 35
  %9246 = trunc i64 %9245 to i32
  tail call void @_ZN2v88internal9Assembler11emit_movzxwENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %9232, i32 %9237, i32 %9246, i32 8) #11
  br label %9262

9247:                                             ; preds = %9221, %9228
  %9248 = phi i32 [ %9227, %9221 ], [ %9237, %9228 ]
  %9249 = phi %"class.v8::internal::compiler::Instruction"* [ %9223, %9221 ], [ %9233, %9228 ]
  %9250 = phi %"class.v8::internal::Assembler"* [ %9222, %9221 ], [ %9232, %9228 ]
  %9251 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9249, i64 0, i32 1
  %9252 = load i32, i32* %9251, align 4
  %9253 = and i32 %9252, 255
  %9254 = zext i32 %9253 to i64
  %9255 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9249, i64 0, i32 5, i64 %9254, i32 0
  %9256 = load i64, i64* %9255, align 8
  %9257 = ashr i64 %9256, 35
  %9258 = trunc i64 %9257 to i32
  %9259 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %9258, i32 0) #11
  %9260 = extractvalue { i64, i32 } %9259, 0
  %9261 = extractvalue { i64, i32 } %9259, 1
  call void @_ZN2v88internal9Assembler11emit_movzxwENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %9250, i32 %9248, i64 %9260, i32 %9261, i32 8) #11
  br label %9262

9262:                                             ; preds = %9238, %9247, %9198
  %9263 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9264 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9263, i64 0, i32 5, i64 0, i32 0
  %9265 = load i64, i64* %9264, align 8
  %9266 = ashr i64 %9265, 35
  %9267 = trunc i64 %9266 to i32
  call void @_ZN2v88internal14TurboAssembler18AssertZeroExtendedENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %9161, i32 %9267) #11
  %9268 = icmp eq i32 %9171, -2147483648
  br i1 %9268, label %9269, label %23402

9269:                                             ; preds = %9262
  %9270 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9271 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9270, i64 0, i32 5, i64 0, i32 0
  %9272 = load i64, i64* %9271, align 8
  %9273 = ashr i64 %9272, 35
  %9274 = trunc i64 %9273 to i32
  %9275 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %9275, i8 zeroext 35, i32 %9274, i32 11, i32 8) #11
  br label %23402

9276:                                             ; preds = %2
  %9277 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %9278 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %9277, align 8
  %9279 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %9280 = bitcast i8** %9279 to i64*
  %9281 = load i64, i64* %9280, align 8
  %9282 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %9283 = bitcast i8** %9282 to i64*
  %9284 = load i64, i64* %9283, align 8
  %9285 = sub i64 %9281, %9284
  %9286 = trunc i64 %9285 to i32
  %9287 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %9288 = and i32 %275, -1073741824
  %9289 = icmp eq i32 %9288, 1073741824
  br i1 %9289, label %9290, label %9310

9290:                                             ; preds = %9276
  %9291 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9278, i64 0, i32 2
  %9292 = load i64, i64* %9291, align 8
  %9293 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9278, i64 0, i32 3
  %9294 = load i64, i64* %9293, align 8
  %9295 = sub i64 %9294, %9292
  %9296 = icmp ult i64 %9295, 72
  br i1 %9296, label %9297, label %9299, !prof !3

9297:                                             ; preds = %9290
  %9298 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %9278, i64 72) #11
  br label %9301

9299:                                             ; preds = %9290
  %9300 = add i64 %9292, 72
  store i64 %9300, i64* %9291, align 8
  br label %9301

9301:                                             ; preds = %9299, %9297
  %9302 = phi i64 [ %9298, %9297 ], [ %9292, %9299 ]
  %9303 = inttoptr i64 %9302 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %9304 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9303, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %9304, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %9305 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9303, i64 0, i32 0, i32 0, i32 0
  %9306 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9303, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %9306, align 8
  %9307 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9303, i64 0, i32 0, i32 2
  %9308 = bitcast %"class.v8::internal::compiler::Instruction"** %9307 to i64*
  store i64 %9287, i64* %9308, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9305, align 8
  %9309 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9303, i64 0, i32 1
  store i32 %9286, i32* %9309, align 8
  br label %9310

9310:                                             ; preds = %9276, %9301
  %9311 = bitcast i64* %212 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9311) #11
  store i64 0, i64* %212, align 8
  %9312 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %212)
  %9313 = extractvalue { i64, i32 } %9312, 0
  %9314 = extractvalue { i64, i32 } %9312, 1
  %9315 = load i64, i64* %212, align 8
  %9316 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %9317 = load i32, i32* %9316, align 4
  %9318 = and i32 %9317, 255
  %9319 = zext i32 %9318 to i64
  %9320 = add i64 %9315, %9319
  %9321 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %9320, i32 0
  %9322 = load i64, i64* %9321, align 8
  %9323 = and i64 %9322, 7
  %9324 = icmp eq i64 %9323, 3
  %9325 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %9326 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9327 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9326, i64 0, i32 1
  %9328 = load i32, i32* %9327, align 4
  %9329 = and i32 %9328, 255
  %9330 = zext i32 %9329 to i64
  %9331 = add i64 %9315, %9330
  br i1 %9324, label %9332, label %9341

9332:                                             ; preds = %9310
  %9333 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %9334 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9326, i64 0, i32 5, i64 %9331
  %9335 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %9333, %"class.v8::internal::compiler::InstructionOperand"* %9334) #11
  %9336 = extractvalue { i64, i64 } %9335, 1
  %9337 = trunc i64 %9336 to i32
  %9338 = shl i32 %9337, 16
  %9339 = ashr exact i32 %9338, 16
  %9340 = zext i32 %9339 to i64
  call void @_ZN2v88internal9Assembler4movwENS0_7OperandENS0_9ImmediateE(%"class.v8::internal::Assembler"* %9325, i64 %9313, i32 %9314, i64 %9340) #11
  br label %9346

9341:                                             ; preds = %9310
  %9342 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9326, i64 0, i32 5, i64 %9331, i32 0
  %9343 = load i64, i64* %9342, align 8
  %9344 = ashr i64 %9343, 35
  %9345 = trunc i64 %9344 to i32
  call void @_ZN2v88internal9Assembler4movwENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %9325, i64 %9313, i32 %9314, i32 %9345) #11
  br label %9346

9346:                                             ; preds = %9341, %9332
  %9347 = icmp eq i32 %9288, -2147483648
  br i1 %9347, label %9348, label %9354

9348:                                             ; preds = %9346
  %9349 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9350 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9349, i64 0, i32 5, i64 0, i32 0
  %9351 = load i64, i64* %9350, align 8
  %9352 = ashr i64 %9351, 35
  %9353 = trunc i64 %9352 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %9325, i8 zeroext 35, i32 %9353, i32 11, i32 8) #11
  br label %9354

9354:                                             ; preds = %9346, %9348
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9311) #11
  br label %23402

9355:                                             ; preds = %2
  %9356 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %9357 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %9356, align 8
  %9358 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %9359 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %9360 = bitcast i8** %9359 to i64*
  %9361 = load i64, i64* %9360, align 8
  %9362 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %9363 = bitcast i8** %9362 to i64*
  %9364 = load i64, i64* %9363, align 8
  %9365 = sub i64 %9361, %9364
  %9366 = trunc i64 %9365 to i32
  %9367 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %9368 = and i32 %275, -1073741824
  %9369 = icmp eq i32 %9368, 1073741824
  br i1 %9369, label %9370, label %9390

9370:                                             ; preds = %9355
  %9371 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9357, i64 0, i32 2
  %9372 = load i64, i64* %9371, align 8
  %9373 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9357, i64 0, i32 3
  %9374 = load i64, i64* %9373, align 8
  %9375 = sub i64 %9374, %9372
  %9376 = icmp ult i64 %9375, 72
  br i1 %9376, label %9377, label %9379, !prof !3

9377:                                             ; preds = %9370
  %9378 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %9357, i64 72) #11
  br label %9381

9379:                                             ; preds = %9370
  %9380 = add i64 %9372, 72
  store i64 %9380, i64* %9371, align 8
  br label %9381

9381:                                             ; preds = %9379, %9377
  %9382 = phi i64 [ %9378, %9377 ], [ %9372, %9379 ]
  %9383 = inttoptr i64 %9382 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %9384 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9383, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %9384, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %9385 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9383, i64 0, i32 0, i32 0, i32 0
  %9386 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9383, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %9386, align 8
  %9387 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9383, i64 0, i32 0, i32 2
  %9388 = bitcast %"class.v8::internal::compiler::Instruction"** %9387 to i64*
  store i64 %9367, i64* %9388, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9385, align 8
  %9389 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9383, i64 0, i32 1
  store i32 %9366, i32* %9389, align 8
  br label %9390

9390:                                             ; preds = %9355, %9381
  %9391 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %9392 = load i32, i32* %9391, align 4
  %9393 = and i32 %9392, 255
  %9394 = icmp eq i32 %9393, 0
  br i1 %9394, label %9466, label %9395

9395:                                             ; preds = %9390
  %9396 = load i32, i32* %274, align 8
  %9397 = and i32 %9396, 15872
  %9398 = icmp eq i32 %9397, 0
  br i1 %9398, label %9410, label %9399

9399:                                             ; preds = %9395
  %9400 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %9358, i64 0, i32 0, i32 0, i32 0
  %9401 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9402 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9401, i64 0, i32 5, i64 0, i32 0
  %9403 = load i64, i64* %9402, align 8
  %9404 = ashr i64 %9403, 35
  %9405 = trunc i64 %9404 to i32
  %9406 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9406)
  store i64 0, i64* %16, align 8
  %9407 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9406)
  %9408 = extractvalue { i64, i32 } %9407, 0
  %9409 = extractvalue { i64, i32 } %9407, 1
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %9400, i32 %9405, i64 %9408, i32 %9409, i32 4) #11
  br label %9460

9410:                                             ; preds = %9395
  %9411 = zext i32 %9393 to i64
  %9412 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %9411, i32 0
  %9413 = load i64, i64* %9412, align 8
  %9414 = and i64 %9413, 7
  %9415 = icmp ugt i64 %9414, 4
  %9416 = and i64 %9413, 24
  %9417 = icmp eq i64 %9416, 0
  %9418 = and i1 %9415, %9417
  br i1 %9418, label %9426, label %9419

9419:                                             ; preds = %9410
  %9420 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %9358, i64 0, i32 0, i32 0, i32 0
  %9421 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9422 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9421, i64 0, i32 5, i64 0, i32 0
  %9423 = load i64, i64* %9422, align 8
  %9424 = ashr i64 %9423, 35
  %9425 = trunc i64 %9424 to i32
  br label %9445

9426:                                             ; preds = %9410
  %9427 = lshr i64 %9413, 5
  %9428 = trunc i64 %9427 to i8
  %9429 = icmp ult i8 %9428, 12
  %9430 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %9358, i64 0, i32 0, i32 0, i32 0
  %9431 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9432 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9431, i64 0, i32 5, i64 0, i32 0
  %9433 = load i64, i64* %9432, align 8
  %9434 = ashr i64 %9433, 35
  %9435 = trunc i64 %9434 to i32
  br i1 %9429, label %9436, label %9445

9436:                                             ; preds = %9426
  %9437 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9431, i64 0, i32 1
  %9438 = load i32, i32* %9437, align 4
  %9439 = and i32 %9438, 255
  %9440 = zext i32 %9439 to i64
  %9441 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9431, i64 0, i32 5, i64 %9440, i32 0
  %9442 = load i64, i64* %9441, align 8
  %9443 = ashr i64 %9442, 35
  %9444 = trunc i64 %9443 to i32
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %9430, i32 %9435, i32 %9444, i32 4) #11
  br label %9460

9445:                                             ; preds = %9419, %9426
  %9446 = phi i32 [ %9425, %9419 ], [ %9435, %9426 ]
  %9447 = phi %"class.v8::internal::compiler::Instruction"* [ %9421, %9419 ], [ %9431, %9426 ]
  %9448 = phi %"class.v8::internal::Assembler"* [ %9420, %9419 ], [ %9430, %9426 ]
  %9449 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9447, i64 0, i32 1
  %9450 = load i32, i32* %9449, align 4
  %9451 = and i32 %9450, 255
  %9452 = zext i32 %9451 to i64
  %9453 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9447, i64 0, i32 5, i64 %9452, i32 0
  %9454 = load i64, i64* %9453, align 8
  %9455 = ashr i64 %9454, 35
  %9456 = trunc i64 %9455 to i32
  %9457 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %9456, i32 0) #11
  %9458 = extractvalue { i64, i32 } %9457, 0
  %9459 = extractvalue { i64, i32 } %9457, 1
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %9448, i32 %9446, i64 %9458, i32 %9459, i32 4) #11
  br label %9460

9460:                                             ; preds = %9436, %9445, %9399
  %9461 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9462 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9461, i64 0, i32 5, i64 0, i32 0
  %9463 = load i64, i64* %9462, align 8
  %9464 = ashr i64 %9463, 35
  %9465 = trunc i64 %9464 to i32
  call void @_ZN2v88internal14TurboAssembler18AssertZeroExtendedENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %9358, i32 %9465) #11
  br label %9507

9466:                                             ; preds = %9390
  %9467 = bitcast i64* %213 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9467) #11
  store i64 0, i64* %213, align 8
  %9468 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %213)
  %9469 = extractvalue { i64, i32 } %9468, 0
  %9470 = extractvalue { i64, i32 } %9468, 1
  %9471 = load i64, i64* %213, align 8
  %9472 = load i32, i32* %9391, align 4
  %9473 = and i32 %9472, 255
  %9474 = zext i32 %9473 to i64
  %9475 = add i64 %9471, %9474
  %9476 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %9475, i32 0
  %9477 = load i64, i64* %9476, align 8
  %9478 = and i64 %9477, 7
  %9479 = icmp eq i64 %9478, 3
  %9480 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %9358, i64 0, i32 0, i32 0, i32 0
  %9481 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9482 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9481, i64 0, i32 1
  %9483 = load i32, i32* %9482, align 4
  %9484 = and i32 %9483, 255
  %9485 = zext i32 %9484 to i64
  %9486 = add i64 %9471, %9485
  br i1 %9479, label %9487, label %9501

9487:                                             ; preds = %9466
  %9488 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9481, i64 0, i32 5, i64 %9486
  %9489 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %9490 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %9489, %"class.v8::internal::compiler::InstructionOperand"* %9488) #11
  %9491 = extractvalue { i64, i64 } %9490, 0
  %9492 = trunc i64 %9491 to i32
  %9493 = extractvalue { i64, i64 } %9490, 1
  %9494 = icmp eq i32 %9492, 3
  %9495 = and i64 %9491, 1095216660480
  %9496 = icmp eq i64 %9495, 25769803776
  %9497 = select i1 %9496, i64 25769803776, i64 0
  %9498 = and i64 %9493, 4294967295
  %9499 = or i64 %9497, %9498
  %9500 = select i1 %9494, i64 0, i64 %9499
  call void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %9480, i64 %9469, i32 %9470, i64 %9500, i32 4) #11
  br label %9506

9501:                                             ; preds = %9466
  %9502 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9481, i64 0, i32 5, i64 %9486, i32 0
  %9503 = load i64, i64* %9502, align 8
  %9504 = ashr i64 %9503, 35
  %9505 = trunc i64 %9504 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %9480, i64 %9469, i32 %9470, i32 %9505, i32 4) #11
  br label %9506

9506:                                             ; preds = %9501, %9487
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9467) #11
  br label %9507

9507:                                             ; preds = %9506, %9460
  %9508 = icmp eq i32 %9368, -2147483648
  br i1 %9508, label %9509, label %23402

9509:                                             ; preds = %9507
  %9510 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9511 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9510, i64 0, i32 5, i64 0, i32 0
  %9512 = load i64, i64* %9511, align 8
  %9513 = ashr i64 %9512, 35
  %9514 = trunc i64 %9513 to i32
  %9515 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %9515, i8 zeroext 35, i32 %9514, i32 11, i32 8) #11
  br label %23402

9516:                                             ; preds = %2
  %9517 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %9518 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %9517, align 8
  %9519 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %9520 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %9521 = bitcast i8** %9520 to i64*
  %9522 = load i64, i64* %9521, align 8
  %9523 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %9524 = bitcast i8** %9523 to i64*
  %9525 = load i64, i64* %9524, align 8
  %9526 = sub i64 %9522, %9525
  %9527 = trunc i64 %9526 to i32
  %9528 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %9529 = and i32 %275, -1073741824
  %9530 = icmp eq i32 %9529, 1073741824
  br i1 %9530, label %9531, label %9552

9531:                                             ; preds = %9516
  %9532 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9518, i64 0, i32 2
  %9533 = load i64, i64* %9532, align 8
  %9534 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9518, i64 0, i32 3
  %9535 = load i64, i64* %9534, align 8
  %9536 = sub i64 %9535, %9533
  %9537 = icmp ult i64 %9536, 72
  br i1 %9537, label %9538, label %9540, !prof !3

9538:                                             ; preds = %9531
  %9539 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %9518, i64 72) #11
  br label %9542

9540:                                             ; preds = %9531
  %9541 = add i64 %9533, 72
  store i64 %9541, i64* %9532, align 8
  br label %9542

9542:                                             ; preds = %9540, %9538
  %9543 = phi i64 [ %9539, %9538 ], [ %9533, %9540 ]
  %9544 = inttoptr i64 %9543 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %9545 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9544, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %9545, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %9546 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9544, i64 0, i32 0, i32 0, i32 0
  %9547 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9544, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %9547, align 8
  %9548 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9544, i64 0, i32 0, i32 2
  %9549 = bitcast %"class.v8::internal::compiler::Instruction"** %9548 to i64*
  store i64 %9528, i64* %9549, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9546, align 8
  %9550 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9544, i64 0, i32 1
  store i32 %9527, i32* %9550, align 8
  %9551 = load i32, i32* %274, align 8
  br label %9552

9552:                                             ; preds = %9516, %9542
  %9553 = phi i32 [ %275, %9516 ], [ %9551, %9542 ]
  %9554 = and i32 %9553, 15872
  %9555 = icmp eq i32 %9554, 0
  br i1 %9555, label %9567, label %9556

9556:                                             ; preds = %9552
  %9557 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %9519, i64 0, i32 0, i32 0, i32 0
  %9558 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9559 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9558, i64 0, i32 5, i64 0, i32 0
  %9560 = load i64, i64* %9559, align 8
  %9561 = ashr i64 %9560, 35
  %9562 = trunc i64 %9561 to i32
  %9563 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9563)
  store i64 0, i64* %15, align 8
  %9564 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9563)
  %9565 = extractvalue { i64, i32 } %9564, 0
  %9566 = extractvalue { i64, i32 } %9564, 1
  call void @_ZN2v88internal9Assembler7movsxlqENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %9557, i32 %9562, i64 %9565, i32 %9566) #11
  br label %9620

9567:                                             ; preds = %9552
  %9568 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %9569 = load i32, i32* %9568, align 4
  %9570 = and i32 %9569, 255
  %9571 = zext i32 %9570 to i64
  %9572 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %9571, i32 0
  %9573 = load i64, i64* %9572, align 8
  %9574 = and i64 %9573, 7
  %9575 = icmp ugt i64 %9574, 4
  %9576 = and i64 %9573, 24
  %9577 = icmp eq i64 %9576, 0
  %9578 = and i1 %9575, %9577
  br i1 %9578, label %9586, label %9579

9579:                                             ; preds = %9567
  %9580 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %9519, i64 0, i32 0, i32 0, i32 0
  %9581 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9582 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9581, i64 0, i32 5, i64 0, i32 0
  %9583 = load i64, i64* %9582, align 8
  %9584 = ashr i64 %9583, 35
  %9585 = trunc i64 %9584 to i32
  br label %9605

9586:                                             ; preds = %9567
  %9587 = lshr i64 %9573, 5
  %9588 = trunc i64 %9587 to i8
  %9589 = icmp ult i8 %9588, 12
  %9590 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %9519, i64 0, i32 0, i32 0, i32 0
  %9591 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9592 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9591, i64 0, i32 5, i64 0, i32 0
  %9593 = load i64, i64* %9592, align 8
  %9594 = ashr i64 %9593, 35
  %9595 = trunc i64 %9594 to i32
  br i1 %9589, label %9596, label %9605

9596:                                             ; preds = %9586
  %9597 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9591, i64 0, i32 1
  %9598 = load i32, i32* %9597, align 4
  %9599 = and i32 %9598, 255
  %9600 = zext i32 %9599 to i64
  %9601 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9591, i64 0, i32 5, i64 %9600, i32 0
  %9602 = load i64, i64* %9601, align 8
  %9603 = ashr i64 %9602, 35
  %9604 = trunc i64 %9603 to i32
  tail call void @_ZN2v88internal9Assembler7movsxlqENS0_8RegisterES2_(%"class.v8::internal::Assembler"* %9590, i32 %9595, i32 %9604) #11
  br label %9620

9605:                                             ; preds = %9579, %9586
  %9606 = phi i32 [ %9585, %9579 ], [ %9595, %9586 ]
  %9607 = phi %"class.v8::internal::compiler::Instruction"* [ %9581, %9579 ], [ %9591, %9586 ]
  %9608 = phi %"class.v8::internal::Assembler"* [ %9580, %9579 ], [ %9590, %9586 ]
  %9609 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9607, i64 0, i32 1
  %9610 = load i32, i32* %9609, align 4
  %9611 = and i32 %9610, 255
  %9612 = zext i32 %9611 to i64
  %9613 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9607, i64 0, i32 5, i64 %9612, i32 0
  %9614 = load i64, i64* %9613, align 8
  %9615 = ashr i64 %9614, 35
  %9616 = trunc i64 %9615 to i32
  %9617 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %9616, i32 0) #11
  %9618 = extractvalue { i64, i32 } %9617, 0
  %9619 = extractvalue { i64, i32 } %9617, 1
  call void @_ZN2v88internal9Assembler7movsxlqENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %9608, i32 %9606, i64 %9618, i32 %9619) #11
  br label %9620

9620:                                             ; preds = %9596, %9605, %9556
  %9621 = icmp eq i32 %9529, -2147483648
  br i1 %9621, label %9622, label %23402

9622:                                             ; preds = %9620
  %9623 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9624 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9623, i64 0, i32 5, i64 0, i32 0
  %9625 = load i64, i64* %9624, align 8
  %9626 = ashr i64 %9625, 35
  %9627 = trunc i64 %9626 to i32
  %9628 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %9628, i8 zeroext 35, i32 %9627, i32 11, i32 8) #11
  br label %23402

9629:                                             ; preds = %2
  %9630 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %9631 = load i32, i32* %9630, align 4
  %9632 = and i32 %9631, 255
  %9633 = icmp eq i32 %9632, 0
  br i1 %9633, label %9634, label %9635, !prof !3

9634:                                             ; preds = %9629
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

9635:                                             ; preds = %9629
  %9636 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %9637 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %9638 = load i64, i64* %9637, align 8
  %9639 = ashr i64 %9638, 35
  %9640 = trunc i64 %9639 to i32
  %9641 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9641)
  store i64 0, i64* %14, align 8
  %9642 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9641)
  %9643 = extractvalue { i64, i32 } %9642, 0
  %9644 = extractvalue { i64, i32 } %9642, 1
  call void @_ZN2v88internal14TurboAssembler22DecompressTaggedSignedENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %9636, i32 %9640, i64 %9643, i32 %9644) #11
  %9645 = and i32 %275, -1073741824
  %9646 = icmp eq i32 %9645, -2147483648
  br i1 %9646, label %9647, label %23402

9647:                                             ; preds = %9635
  %9648 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9649 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9648, i64 0, i32 5, i64 0, i32 0
  %9650 = load i64, i64* %9649, align 8
  %9651 = ashr i64 %9650, 35
  %9652 = trunc i64 %9651 to i32
  %9653 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %9653, i8 zeroext 35, i32 %9652, i32 11, i32 8) #11
  br label %23402

9654:                                             ; preds = %2
  %9655 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %9656 = load i32, i32* %9655, align 4
  %9657 = and i32 %9656, 255
  %9658 = icmp eq i32 %9657, 0
  br i1 %9658, label %9659, label %9660, !prof !3

9659:                                             ; preds = %9654
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

9660:                                             ; preds = %9654
  %9661 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %9662 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %9663 = load i64, i64* %9662, align 8
  %9664 = ashr i64 %9663, 35
  %9665 = trunc i64 %9664 to i32
  %9666 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9666)
  store i64 0, i64* %13, align 8
  %9667 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9666)
  %9668 = extractvalue { i64, i32 } %9667, 0
  %9669 = extractvalue { i64, i32 } %9667, 1
  call void @_ZN2v88internal14TurboAssembler23DecompressTaggedPointerENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %9661, i32 %9665, i64 %9668, i32 %9669) #11
  %9670 = and i32 %275, -1073741824
  %9671 = icmp eq i32 %9670, -2147483648
  br i1 %9671, label %9672, label %23402

9672:                                             ; preds = %9660
  %9673 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9674 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9673, i64 0, i32 5, i64 0, i32 0
  %9675 = load i64, i64* %9674, align 8
  %9676 = ashr i64 %9675, 35
  %9677 = trunc i64 %9676 to i32
  %9678 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %9678, i8 zeroext 35, i32 %9677, i32 11, i32 8) #11
  br label %23402

9679:                                             ; preds = %2
  %9680 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %9681 = load i32, i32* %9680, align 4
  %9682 = and i32 %9681, 255
  %9683 = icmp eq i32 %9682, 0
  br i1 %9683, label %9684, label %9685, !prof !3

9684:                                             ; preds = %9679
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

9685:                                             ; preds = %9679
  %9686 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %9687 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %9688 = load i64, i64* %9687, align 8
  %9689 = ashr i64 %9688, 35
  %9690 = trunc i64 %9689 to i32
  %9691 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9691)
  store i64 0, i64* %12, align 8
  %9692 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9691)
  %9693 = extractvalue { i64, i32 } %9692, 0
  %9694 = extractvalue { i64, i32 } %9692, 1
  call void @_ZN2v88internal14TurboAssembler19DecompressAnyTaggedENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %9686, i32 %9690, i64 %9693, i32 %9694) #11
  %9695 = and i32 %275, -1073741824
  %9696 = icmp eq i32 %9695, -2147483648
  br i1 %9696, label %9697, label %23402

9697:                                             ; preds = %9685
  %9698 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9699 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9698, i64 0, i32 5, i64 0, i32 0
  %9700 = load i64, i64* %9699, align 8
  %9701 = ashr i64 %9700, 35
  %9702 = trunc i64 %9701 to i32
  %9703 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %9703, i8 zeroext 35, i32 %9702, i32 11, i32 8) #11
  br label %23402

9704:                                             ; preds = %2
  %9705 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %9706 = load i32, i32* %9705, align 4
  %9707 = and i32 %9706, 255
  %9708 = icmp eq i32 %9707, 0
  br i1 %9708, label %9710, label %9709, !prof !4

9709:                                             ; preds = %9704
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable

9710:                                             ; preds = %9704
  %9711 = bitcast i64* %214 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9711) #11
  store i64 0, i64* %214, align 8
  %9712 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %214)
  %9713 = extractvalue { i64, i32 } %9712, 0
  %9714 = extractvalue { i64, i32 } %9712, 1
  %9715 = load i64, i64* %214, align 8
  %9716 = load i32, i32* %9705, align 4
  %9717 = and i32 %9716, 255
  %9718 = zext i32 %9717 to i64
  %9719 = add i64 %9715, %9718
  %9720 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %9719, i32 0
  %9721 = load i64, i64* %9720, align 8
  %9722 = and i64 %9721, 7
  %9723 = icmp eq i64 %9722, 3
  %9724 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %9725 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9726 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9725, i64 0, i32 1
  %9727 = load i32, i32* %9726, align 4
  %9728 = and i32 %9727, 255
  %9729 = zext i32 %9728 to i64
  %9730 = add i64 %9715, %9729
  br i1 %9723, label %9731, label %9745

9731:                                             ; preds = %9710
  %9732 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9725, i64 0, i32 5, i64 %9730
  %9733 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %9734 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %9733, %"class.v8::internal::compiler::InstructionOperand"* %9732) #11
  %9735 = extractvalue { i64, i64 } %9734, 0
  %9736 = trunc i64 %9735 to i32
  %9737 = extractvalue { i64, i64 } %9734, 1
  %9738 = icmp eq i32 %9736, 3
  %9739 = and i64 %9735, 1095216660480
  %9740 = icmp eq i64 %9739, 25769803776
  %9741 = select i1 %9740, i64 25769803776, i64 0
  %9742 = and i64 %9737, 4294967295
  %9743 = or i64 %9741, %9742
  %9744 = select i1 %9738, i64 0, i64 %9743
  call void @_ZN2v88internal14TurboAssembler16StoreTaggedFieldENS0_7OperandENS0_9ImmediateE(%"class.v8::internal::TurboAssembler"* %9724, i64 %9713, i32 %9714, i64 %9744) #11
  br label %9750

9745:                                             ; preds = %9710
  %9746 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9725, i64 0, i32 5, i64 %9730, i32 0
  %9747 = load i64, i64* %9746, align 8
  %9748 = ashr i64 %9747, 35
  %9749 = trunc i64 %9748 to i32
  call void @_ZN2v88internal14TurboAssembler16StoreTaggedFieldENS0_7OperandENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %9724, i64 %9713, i32 %9714, i32 %9749) #11
  br label %9750

9750:                                             ; preds = %9745, %9731
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9711) #11
  br label %23402

9751:                                             ; preds = %2
  %9752 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %9753 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %9752, align 8
  %9754 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %9755 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %9756 = bitcast i8** %9755 to i64*
  %9757 = load i64, i64* %9756, align 8
  %9758 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %9759 = bitcast i8** %9758 to i64*
  %9760 = load i64, i64* %9759, align 8
  %9761 = sub i64 %9757, %9760
  %9762 = trunc i64 %9761 to i32
  %9763 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %9764 = and i32 %275, -1073741824
  %9765 = icmp eq i32 %9764, 1073741824
  br i1 %9765, label %9766, label %9786

9766:                                             ; preds = %9751
  %9767 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9753, i64 0, i32 2
  %9768 = load i64, i64* %9767, align 8
  %9769 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9753, i64 0, i32 3
  %9770 = load i64, i64* %9769, align 8
  %9771 = sub i64 %9770, %9768
  %9772 = icmp ult i64 %9771, 72
  br i1 %9772, label %9773, label %9775, !prof !3

9773:                                             ; preds = %9766
  %9774 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %9753, i64 72) #11
  br label %9777

9775:                                             ; preds = %9766
  %9776 = add i64 %9768, 72
  store i64 %9776, i64* %9767, align 8
  br label %9777

9777:                                             ; preds = %9775, %9773
  %9778 = phi i64 [ %9774, %9773 ], [ %9768, %9775 ]
  %9779 = inttoptr i64 %9778 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %9780 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9779, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %9780, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %9781 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9779, i64 0, i32 0, i32 0, i32 0
  %9782 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9779, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %9782, align 8
  %9783 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9779, i64 0, i32 0, i32 2
  %9784 = bitcast %"class.v8::internal::compiler::Instruction"** %9783 to i64*
  store i64 %9763, i64* %9784, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9781, align 8
  %9785 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9779, i64 0, i32 1
  store i32 %9762, i32* %9785, align 8
  br label %9786

9786:                                             ; preds = %9751, %9777
  %9787 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %9788 = load i32, i32* %9787, align 4
  %9789 = and i32 %9788, 255
  %9790 = icmp eq i32 %9789, 0
  br i1 %9790, label %9802, label %9791

9791:                                             ; preds = %9786
  %9792 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %9754, i64 0, i32 0, i32 0, i32 0
  %9793 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9794 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9793, i64 0, i32 5, i64 0, i32 0
  %9795 = load i64, i64* %9794, align 8
  %9796 = ashr i64 %9795, 35
  %9797 = trunc i64 %9796 to i32
  %9798 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9798)
  store i64 0, i64* %11, align 8
  %9799 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9798)
  %9800 = extractvalue { i64, i32 } %9799, 0
  %9801 = extractvalue { i64, i32 } %9799, 1
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %9792, i32 %9797, i64 %9800, i32 %9801, i32 8) #11
  br label %9843

9802:                                             ; preds = %9786
  %9803 = bitcast i64* %215 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9803) #11
  store i64 0, i64* %215, align 8
  %9804 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %215)
  %9805 = extractvalue { i64, i32 } %9804, 0
  %9806 = extractvalue { i64, i32 } %9804, 1
  %9807 = load i64, i64* %215, align 8
  %9808 = load i32, i32* %9787, align 4
  %9809 = and i32 %9808, 255
  %9810 = zext i32 %9809 to i64
  %9811 = add i64 %9807, %9810
  %9812 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %9811, i32 0
  %9813 = load i64, i64* %9812, align 8
  %9814 = and i64 %9813, 7
  %9815 = icmp eq i64 %9814, 3
  %9816 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %9754, i64 0, i32 0, i32 0, i32 0
  %9817 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9818 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9817, i64 0, i32 1
  %9819 = load i32, i32* %9818, align 4
  %9820 = and i32 %9819, 255
  %9821 = zext i32 %9820 to i64
  %9822 = add i64 %9807, %9821
  br i1 %9815, label %9823, label %9837

9823:                                             ; preds = %9802
  %9824 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9817, i64 0, i32 5, i64 %9822
  %9825 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %9826 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %9825, %"class.v8::internal::compiler::InstructionOperand"* %9824) #11
  %9827 = extractvalue { i64, i64 } %9826, 0
  %9828 = trunc i64 %9827 to i32
  %9829 = extractvalue { i64, i64 } %9826, 1
  %9830 = icmp eq i32 %9828, 3
  %9831 = and i64 %9827, 1095216660480
  %9832 = icmp eq i64 %9831, 25769803776
  %9833 = select i1 %9832, i64 25769803776, i64 0
  %9834 = and i64 %9829, 4294967295
  %9835 = or i64 %9833, %9834
  %9836 = select i1 %9830, i64 0, i64 %9835
  call void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %9816, i64 %9805, i32 %9806, i64 %9836, i32 8) #11
  br label %9842

9837:                                             ; preds = %9802
  %9838 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9817, i64 0, i32 5, i64 %9822, i32 0
  %9839 = load i64, i64* %9838, align 8
  %9840 = ashr i64 %9839, 35
  %9841 = trunc i64 %9840 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %9816, i64 %9805, i32 %9806, i32 %9841, i32 8) #11
  br label %9842

9842:                                             ; preds = %9837, %9823
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9803) #11
  br label %9843

9843:                                             ; preds = %9842, %9791
  %9844 = icmp eq i32 %9764, -2147483648
  br i1 %9844, label %9845, label %23402

9845:                                             ; preds = %9843
  %9846 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9847 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9846, i64 0, i32 5, i64 0, i32 0
  %9848 = load i64, i64* %9847, align 8
  %9849 = ashr i64 %9848, 35
  %9850 = trunc i64 %9849 to i32
  %9851 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %9851, i8 zeroext 35, i32 %9850, i32 11, i32 8) #11
  br label %23402

9852:                                             ; preds = %2
  %9853 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %9854 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %9853, align 8
  %9855 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %9856 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %9857 = bitcast i8** %9856 to i64*
  %9858 = load i64, i64* %9857, align 8
  %9859 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %9860 = bitcast i8** %9859 to i64*
  %9861 = load i64, i64* %9860, align 8
  %9862 = sub i64 %9858, %9861
  %9863 = trunc i64 %9862 to i32
  %9864 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %9865 = and i32 %275, -1073741824
  %9866 = icmp eq i32 %9865, 1073741824
  br i1 %9866, label %9867, label %9887

9867:                                             ; preds = %9852
  %9868 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9854, i64 0, i32 2
  %9869 = load i64, i64* %9868, align 8
  %9870 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9854, i64 0, i32 3
  %9871 = load i64, i64* %9870, align 8
  %9872 = sub i64 %9871, %9869
  %9873 = icmp ult i64 %9872, 72
  br i1 %9873, label %9874, label %9876, !prof !3

9874:                                             ; preds = %9867
  %9875 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %9854, i64 72) #11
  br label %9878

9876:                                             ; preds = %9867
  %9877 = add i64 %9869, 72
  store i64 %9877, i64* %9868, align 8
  br label %9878

9878:                                             ; preds = %9876, %9874
  %9879 = phi i64 [ %9875, %9874 ], [ %9869, %9876 ]
  %9880 = inttoptr i64 %9879 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %9881 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9880, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %9881, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %9882 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9880, i64 0, i32 0, i32 0, i32 0
  %9883 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9880, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %9883, align 8
  %9884 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9880, i64 0, i32 0, i32 2
  %9885 = bitcast %"class.v8::internal::compiler::Instruction"** %9884 to i64*
  store i64 %9864, i64* %9885, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9882, align 8
  %9886 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9880, i64 0, i32 1
  store i32 %9863, i32* %9886, align 8
  br label %9887

9887:                                             ; preds = %9852, %9878
  %9888 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %9889 = load i32, i32* %9888, align 4
  %9890 = and i32 %9889, 255
  %9891 = icmp eq i32 %9890, 0
  br i1 %9891, label %9908, label %9892

9892:                                             ; preds = %9887
  %9893 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9894 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9893, i64 0, i32 5, i64 0, i32 0
  %9895 = load i64, i64* %9894, align 8
  %9896 = ashr i64 %9895, 35
  %9897 = trunc i64 %9896 to i32
  %9898 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9898)
  store i64 0, i64* %10, align 8
  %9899 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9898)
  %9900 = extractvalue { i64, i32 } %9899, 0
  %9901 = extractvalue { i64, i32 } %9899, 1
  %9902 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %9855, i64 0, i32 0, i32 0, i32 0
  %9903 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %9904 = and i32 %9903, 32
  %9905 = icmp eq i32 %9904, 0
  br i1 %9905, label %9907, label %9906

9906:                                             ; preds = %9892
  call void @_ZN2v88internal9Assembler3vssEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"* %9902, i8 zeroext 16, i32 %9897, i32 0, i64 %9900, i32 %9901) #11
  br label %23402

9907:                                             ; preds = %9892
  call void @_ZN2v88internal9Assembler5movssENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %9902, i32 %9897, i64 %9900, i32 %9901) #11
  br label %23402

9908:                                             ; preds = %9887
  %9909 = bitcast i64* %216 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9909) #11
  store i64 0, i64* %216, align 8
  %9910 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %216)
  %9911 = extractvalue { i64, i32 } %9910, 0
  %9912 = extractvalue { i64, i32 } %9910, 1
  %9913 = load i64, i64* %216, align 8
  %9914 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9915 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9914, i64 0, i32 1
  %9916 = load i32, i32* %9915, align 4
  %9917 = and i32 %9916, 255
  %9918 = zext i32 %9917 to i64
  %9919 = add i64 %9913, %9918
  %9920 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9914, i64 0, i32 5, i64 %9919, i32 0
  %9921 = load i64, i64* %9920, align 8
  %9922 = ashr i64 %9921, 35
  %9923 = trunc i64 %9922 to i32
  %9924 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %9855, i64 0, i32 0, i32 0, i32 0
  %9925 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %9926 = and i32 %9925, 32
  %9927 = icmp eq i32 %9926, 0
  br i1 %9927, label %9929, label %9928

9928:                                             ; preds = %9908
  call void @_ZN2v88internal9Assembler3vssEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"* %9924, i8 zeroext 17, i32 %9923, i32 0, i64 %9911, i32 %9912) #11
  br label %9930

9929:                                             ; preds = %9908
  call void @_ZN2v88internal9Assembler5movssENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %9924, i64 %9911, i32 %9912, i32 %9923) #11
  br label %9930

9930:                                             ; preds = %9928, %9929
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9909) #11
  br label %23402

9931:                                             ; preds = %2
  %9932 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %9933 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %9932, align 8
  %9934 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %9935 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %9936 = bitcast i8** %9935 to i64*
  %9937 = load i64, i64* %9936, align 8
  %9938 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %9939 = bitcast i8** %9938 to i64*
  %9940 = load i64, i64* %9939, align 8
  %9941 = sub i64 %9937, %9940
  %9942 = trunc i64 %9941 to i32
  %9943 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %9944 = and i32 %275, -1073741824
  %9945 = icmp eq i32 %9944, 1073741824
  br i1 %9945, label %9946, label %9966

9946:                                             ; preds = %9931
  %9947 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9933, i64 0, i32 2
  %9948 = load i64, i64* %9947, align 8
  %9949 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9933, i64 0, i32 3
  %9950 = load i64, i64* %9949, align 8
  %9951 = sub i64 %9950, %9948
  %9952 = icmp ult i64 %9951, 72
  br i1 %9952, label %9953, label %9955, !prof !3

9953:                                             ; preds = %9946
  %9954 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %9933, i64 72) #11
  br label %9957

9955:                                             ; preds = %9946
  %9956 = add i64 %9948, 72
  store i64 %9956, i64* %9947, align 8
  br label %9957

9957:                                             ; preds = %9955, %9953
  %9958 = phi i64 [ %9954, %9953 ], [ %9948, %9955 ]
  %9959 = inttoptr i64 %9958 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %9960 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9959, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %9960, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %9961 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9959, i64 0, i32 0, i32 0, i32 0
  %9962 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9959, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %9962, align 8
  %9963 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9959, i64 0, i32 0, i32 2
  %9964 = bitcast %"class.v8::internal::compiler::Instruction"** %9963 to i64*
  store i64 %9943, i64* %9964, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9961, align 8
  %9965 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %9959, i64 0, i32 1
  store i32 %9942, i32* %9965, align 8
  br label %9966

9966:                                             ; preds = %9931, %9957
  %9967 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %9968 = load i32, i32* %9967, align 4
  %9969 = and i32 %9968, 255
  %9970 = icmp eq i32 %9969, 0
  br i1 %9970, label %10000, label %9971

9971:                                             ; preds = %9966
  %9972 = icmp eq i32 %9944, -2147483648
  br i1 %9972, label %9973, label %9984

9973:                                             ; preds = %9971
  %9974 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %9934, i64 0, i32 0, i32 0, i32 0
  %9975 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9975)
  store i64 0, i64* %9, align 8
  %9976 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9975)
  %9977 = extractvalue { i64, i32 } %9976, 0
  %9978 = extractvalue { i64, i32 } %9976, 1
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %9974, i32 10, i64 %9977, i32 %9978, i32 8) #11
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %9974, i8 zeroext 35, i32 10, i32 11, i32 8) #11
  %9979 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9980 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9979, i64 0, i32 5, i64 0, i32 0
  %9981 = load i64, i64* %9980, align 8
  %9982 = ashr i64 %9981, 35
  %9983 = trunc i64 %9982 to i32
  call void @_ZN2v88internal14TurboAssembler4MovqENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %9934, i32 %9983, i32 10) #11
  br label %23402

9984:                                             ; preds = %9971
  %9985 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %9986 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %9985, i64 0, i32 5, i64 0, i32 0
  %9987 = load i64, i64* %9986, align 8
  %9988 = ashr i64 %9987, 35
  %9989 = trunc i64 %9988 to i32
  %9990 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9990)
  store i64 0, i64* %8, align 8
  %9991 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9990)
  %9992 = extractvalue { i64, i32 } %9991, 0
  %9993 = extractvalue { i64, i32 } %9991, 1
  %9994 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %9934, i64 0, i32 0, i32 0, i32 0
  %9995 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %9996 = and i32 %9995, 32
  %9997 = icmp eq i32 %9996, 0
  br i1 %9997, label %9999, label %9998

9998:                                             ; preds = %9984
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %9994, i8 zeroext 16, i32 %9989, i32 0, i64 %9992, i32 %9993, i32 3, i32 1, i32 0, i32 5) #11
  br label %23402

9999:                                             ; preds = %9984
  call void @_ZN2v88internal9Assembler5movsdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %9994, i32 %9989, i64 %9992, i32 %9993) #11
  br label %23402

10000:                                            ; preds = %9966
  %10001 = bitcast i64* %217 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10001) #11
  store i64 0, i64* %217, align 8
  %10002 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %217)
  %10003 = extractvalue { i64, i32 } %10002, 0
  %10004 = extractvalue { i64, i32 } %10002, 1
  %10005 = load i64, i64* %217, align 8
  %10006 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %10007 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %10006, i64 0, i32 1
  %10008 = load i32, i32* %10007, align 4
  %10009 = and i32 %10008, 255
  %10010 = zext i32 %10009 to i64
  %10011 = add i64 %10005, %10010
  %10012 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %10006, i64 0, i32 5, i64 %10011, i32 0
  %10013 = load i64, i64* %10012, align 8
  %10014 = ashr i64 %10013, 35
  %10015 = trunc i64 %10014 to i32
  %10016 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %9934, i64 0, i32 0, i32 0, i32 0
  %10017 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %10018 = and i32 %10017, 32
  %10019 = icmp eq i32 %10018, 0
  br i1 %10019, label %10021, label %10020

10020:                                            ; preds = %10000
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %10016, i8 zeroext 17, i32 %10015, i32 0, i64 %10003, i32 %10004, i32 3, i32 1, i32 0, i32 5) #11
  br label %10022

10021:                                            ; preds = %10000
  call void @_ZN2v88internal9Assembler5movsdENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %10016, i64 %10003, i32 %10004, i32 %10015) #11
  br label %10022

10022:                                            ; preds = %10020, %10021
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10001) #11
  br label %23402

10023:                                            ; preds = %2
  %10024 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %10025 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %10024, align 8
  %10026 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %10027 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %10028 = bitcast i8** %10027 to i64*
  %10029 = load i64, i64* %10028, align 8
  %10030 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %10031 = bitcast i8** %10030 to i64*
  %10032 = load i64, i64* %10031, align 8
  %10033 = sub i64 %10029, %10032
  %10034 = trunc i64 %10033 to i32
  %10035 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %10036 = and i32 %275, -1073741824
  %10037 = icmp eq i32 %10036, 1073741824
  br i1 %10037, label %10038, label %10058

10038:                                            ; preds = %10023
  %10039 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %10025, i64 0, i32 2
  %10040 = load i64, i64* %10039, align 8
  %10041 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %10025, i64 0, i32 3
  %10042 = load i64, i64* %10041, align 8
  %10043 = sub i64 %10042, %10040
  %10044 = icmp ult i64 %10043, 72
  br i1 %10044, label %10045, label %10047, !prof !3

10045:                                            ; preds = %10038
  %10046 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %10025, i64 72) #11
  br label %10049

10047:                                            ; preds = %10038
  %10048 = add i64 %10040, 72
  store i64 %10048, i64* %10039, align 8
  br label %10049

10049:                                            ; preds = %10047, %10045
  %10050 = phi i64 [ %10046, %10045 ], [ %10040, %10047 ]
  %10051 = inttoptr i64 %10050 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %10052 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %10051, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %10052, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %10053 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %10051, i64 0, i32 0, i32 0, i32 0
  %10054 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %10051, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %10054, align 8
  %10055 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %10051, i64 0, i32 0, i32 2
  %10056 = bitcast %"class.v8::internal::compiler::Instruction"** %10055 to i64*
  store i64 %10035, i64* %10056, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10053, align 8
  %10057 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %10051, i64 0, i32 1
  store i32 %10034, i32* %10057, align 8
  br label %10058

10058:                                            ; preds = %10023, %10049
  %10059 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %10060 = load i32, i32* %10059, align 4
  %10061 = and i32 %10060, 255
  %10062 = icmp eq i32 %10061, 0
  br i1 %10062, label %10079, label %10063

10063:                                            ; preds = %10058
  %10064 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %10065 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %10064, i64 0, i32 5, i64 0, i32 0
  %10066 = load i64, i64* %10065, align 8
  %10067 = ashr i64 %10066, 35
  %10068 = trunc i64 %10067 to i32
  %10069 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10069)
  store i64 0, i64* %7, align 8
  %10070 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10069)
  %10071 = extractvalue { i64, i32 } %10070, 0
  %10072 = extractvalue { i64, i32 } %10070, 1
  %10073 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %10074 = and i32 %10073, 32
  %10075 = icmp eq i32 %10074, 0
  %10076 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %10026, i64 0, i32 0, i32 0, i32 0
  br i1 %10075, label %10078, label %10077

10077:                                            ; preds = %10063
  call void @_ZN2v88internal9Assembler7vmovdquENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %10076, i32 %10068, i64 %10071, i32 %10072) #11
  br label %23402

10078:                                            ; preds = %10063
  call void @_ZN2v88internal9Assembler6movupsENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %10076, i32 %10068, i64 %10071, i32 %10072) #11
  br label %23402

10079:                                            ; preds = %10058
  %10080 = bitcast i64* %218 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10080) #11
  store i64 0, i64* %218, align 8
  %10081 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %218)
  %10082 = extractvalue { i64, i32 } %10081, 0
  %10083 = extractvalue { i64, i32 } %10081, 1
  %10084 = load i64, i64* %218, align 8
  %10085 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %10086 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %10085, i64 0, i32 1
  %10087 = load i32, i32* %10086, align 4
  %10088 = and i32 %10087, 255
  %10089 = zext i32 %10088 to i64
  %10090 = add i64 %10084, %10089
  %10091 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %10085, i64 0, i32 5, i64 %10090, i32 0
  %10092 = load i64, i64* %10091, align 8
  %10093 = ashr i64 %10092, 35
  %10094 = trunc i64 %10093 to i32
  %10095 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %10096 = and i32 %10095, 32
  %10097 = icmp eq i32 %10096, 0
  %10098 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %10026, i64 0, i32 0, i32 0, i32 0
  br i1 %10097, label %10100, label %10099

10099:                                            ; preds = %10079
  call void @_ZN2v88internal9Assembler7vmovdquENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %10098, i64 %10082, i32 %10083, i32 %10094) #11
  br label %10101

10100:                                            ; preds = %10079
  call void @_ZN2v88internal9Assembler6movupsENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %10098, i64 %10082, i32 %10083, i32 %10094) #11
  br label %10101

10101:                                            ; preds = %10099, %10100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10080) #11
  br label %23402

10102:                                            ; preds = %2
  %10103 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %10104 = load i32, i32* %10103, align 4
  %10105 = and i32 %10104, 255
  %10106 = zext i32 %10105 to i64
  %10107 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %10106, i32 0
  %10108 = load i64, i64* %10107, align 8
  %10109 = and i64 %10108, 7
  %10110 = icmp ugt i64 %10109, 4
  %10111 = and i64 %10108, 24
  %10112 = icmp eq i64 %10111, 8
  %10113 = and i1 %10110, %10112
  br i1 %10113, label %10114, label %10129

10114:                                            ; preds = %10102
  %10115 = lshr i64 %10108, 5
  %10116 = trunc i64 %10115 to i8
  %10117 = icmp ugt i8 %10116, 11
  br i1 %10117, label %10118, label %10129

10118:                                            ; preds = %10114
  %10119 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %10120 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %10121 = load i64, i64* %10120, align 8
  %10122 = ashr i64 %10121, 35
  %10123 = trunc i64 %10122 to i32
  %10124 = ashr i64 %10108, 35
  %10125 = trunc i64 %10124 to i32
  %10126 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %10125, i32 0) #11
  %10127 = extractvalue { i64, i32 } %10126, 0
  %10128 = extractvalue { i64, i32 } %10126, 1
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %10119, i32 %10123, i64 %10127, i32 %10128, i32 4) #11
  br label %23402

10129:                                            ; preds = %10102, %10114
  %10130 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %10131 = load i64, i64* %10130, align 8
  %10132 = ashr i64 %10131, 35
  %10133 = trunc i64 %10132 to i32
  %10134 = ashr i64 %10108, 35
  %10135 = trunc i64 %10134 to i32
  %10136 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %10137 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %10138 = and i32 %10137, 32
  %10139 = icmp eq i32 %10138, 0
  br i1 %10139, label %10141, label %10140

10140:                                            ; preds = %10129
  tail call void @_ZN2v88internal9Assembler5vmovdENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %10136, i32 %10133, i32 %10135) #11
  br label %23402

10141:                                            ; preds = %10129
  tail call void @_ZN2v88internal9Assembler4movdENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %10136, i32 %10133, i32 %10135) #11
  br label %23402

10142:                                            ; preds = %2
  %10143 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %10144 = load i32, i32* %10143, align 4
  %10145 = and i32 %10144, 255
  %10146 = zext i32 %10145 to i64
  %10147 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %10146, i32 0
  %10148 = load i64, i64* %10147, align 8
  %10149 = and i64 %10148, 7
  %10150 = icmp ugt i64 %10149, 4
  %10151 = and i64 %10148, 24
  %10152 = icmp eq i64 %10151, 8
  %10153 = and i1 %10150, %10152
  br i1 %10153, label %10156, label %10154

10154:                                            ; preds = %10142
  %10155 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  br label %10172

10156:                                            ; preds = %10142
  %10157 = lshr i64 %10148, 5
  %10158 = trunc i64 %10157 to i8
  %10159 = icmp ugt i8 %10158, 11
  %10160 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  br i1 %10159, label %10161, label %10172

10161:                                            ; preds = %10156
  %10162 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %10160, i64 0, i32 0, i32 0, i32 0
  %10163 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %10164 = load i64, i64* %10163, align 8
  %10165 = ashr i64 %10164, 35
  %10166 = trunc i64 %10165 to i32
  %10167 = ashr i64 %10148, 35
  %10168 = trunc i64 %10167 to i32
  %10169 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %10168, i32 0) #11
  %10170 = extractvalue { i64, i32 } %10169, 0
  %10171 = extractvalue { i64, i32 } %10169, 1
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %10162, i32 %10166, i64 %10170, i32 %10171, i32 8) #11
  br label %23402

10172:                                            ; preds = %10154, %10156
  %10173 = phi %"class.v8::internal::TurboAssembler"* [ %10155, %10154 ], [ %10160, %10156 ]
  %10174 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %10175 = load i64, i64* %10174, align 8
  %10176 = ashr i64 %10175, 35
  %10177 = trunc i64 %10176 to i32
  %10178 = ashr i64 %10148, 35
  %10179 = trunc i64 %10178 to i32
  tail call void @_ZN2v88internal14TurboAssembler4MovqENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::TurboAssembler"* %10173, i32 %10177, i32 %10179) #11
  br label %23402

10180:                                            ; preds = %2
  %10181 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %10182 = load i32, i32* %10181, align 4
  %10183 = and i32 %10182, 255
  %10184 = zext i32 %10183 to i64
  %10185 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %10184, i32 0
  %10186 = load i64, i64* %10185, align 8
  %10187 = and i64 %10186, 7
  %10188 = icmp ugt i64 %10187, 4
  %10189 = and i64 %10186, 24
  %10190 = icmp eq i64 %10189, 0
  %10191 = and i1 %10188, %10190
  br i1 %10191, label %10197, label %10192

10192:                                            ; preds = %10180
  %10193 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %10194 = load i64, i64* %10193, align 8
  %10195 = ashr i64 %10194, 35
  %10196 = trunc i64 %10195 to i32
  br label %10214

10197:                                            ; preds = %10180
  %10198 = lshr i64 %10186, 5
  %10199 = trunc i64 %10198 to i8
  %10200 = icmp ult i8 %10199, 12
  %10201 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %10202 = load i64, i64* %10201, align 8
  %10203 = ashr i64 %10202, 35
  %10204 = trunc i64 %10203 to i32
  br i1 %10200, label %10205, label %10214

10205:                                            ; preds = %10197
  %10206 = ashr i64 %10186, 35
  %10207 = trunc i64 %10206 to i32
  %10208 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %10209 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %10210 = and i32 %10209, 32
  %10211 = icmp eq i32 %10210, 0
  br i1 %10211, label %10213, label %10212

10212:                                            ; preds = %10205
  tail call void @_ZN2v88internal9Assembler5vmovdENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::Assembler"* %10208, i32 %10204, i32 %10207) #11
  br label %23402

10213:                                            ; preds = %10205
  tail call void @_ZN2v88internal9Assembler4movdENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::Assembler"* %10208, i32 %10204, i32 %10207) #11
  br label %23402

10214:                                            ; preds = %10192, %10197
  %10215 = phi i32 [ %10196, %10192 ], [ %10204, %10197 ]
  %10216 = ashr i64 %10186, 35
  %10217 = trunc i64 %10216 to i32
  %10218 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %10217, i32 0) #11
  %10219 = extractvalue { i64, i32 } %10218, 0
  %10220 = extractvalue { i64, i32 } %10218, 1
  %10221 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %10222 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %10223 = and i32 %10222, 32
  %10224 = icmp eq i32 %10223, 0
  br i1 %10224, label %10226, label %10225

10225:                                            ; preds = %10214
  call void @_ZN2v88internal9Assembler3vssEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"* %10221, i8 zeroext 16, i32 %10215, i32 0, i64 %10219, i32 %10220) #11
  br label %23402

10226:                                            ; preds = %10214
  call void @_ZN2v88internal9Assembler5movssENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %10221, i32 %10215, i64 %10219, i32 %10220) #11
  br label %23402

10227:                                            ; preds = %2
  %10228 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %10229 = load i32, i32* %10228, align 4
  %10230 = and i32 %10229, 255
  %10231 = zext i32 %10230 to i64
  %10232 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %10231, i32 0
  %10233 = load i64, i64* %10232, align 8
  %10234 = and i64 %10233, 7
  %10235 = icmp ugt i64 %10234, 4
  %10236 = and i64 %10233, 24
  %10237 = icmp eq i64 %10236, 0
  %10238 = and i1 %10235, %10237
  br i1 %10238, label %10239, label %10251

10239:                                            ; preds = %10227
  %10240 = lshr i64 %10233, 5
  %10241 = trunc i64 %10240 to i8
  %10242 = icmp ult i8 %10241, 12
  br i1 %10242, label %10243, label %10251

10243:                                            ; preds = %10239
  %10244 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %10245 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %10246 = load i64, i64* %10245, align 8
  %10247 = ashr i64 %10246, 35
  %10248 = trunc i64 %10247 to i32
  %10249 = ashr i64 %10233, 35
  %10250 = trunc i64 %10249 to i32
  tail call void @_ZN2v88internal14TurboAssembler4MovqENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %10244, i32 %10248, i32 %10250) #11
  br label %23402

10251:                                            ; preds = %10227, %10239
  %10252 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %10253 = load i64, i64* %10252, align 8
  %10254 = ashr i64 %10253, 35
  %10255 = trunc i64 %10254 to i32
  %10256 = ashr i64 %10233, 35
  %10257 = trunc i64 %10256 to i32
  %10258 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %10257, i32 0) #11
  %10259 = extractvalue { i64, i32 } %10258, 0
  %10260 = extractvalue { i64, i32 } %10258, 1
  %10261 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %10262 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %10263 = and i32 %10262, 32
  %10264 = icmp eq i32 %10263, 0
  br i1 %10264, label %10266, label %10265

10265:                                            ; preds = %10251
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %10261, i8 zeroext 16, i32 %10255, i32 0, i64 %10259, i32 %10260, i32 3, i32 1, i32 0, i32 5) #11
  br label %23402

10266:                                            ; preds = %10251
  call void @_ZN2v88internal9Assembler5movsdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %10261, i32 %10255, i64 %10259, i32 %10260) #11
  br label %23402

10267:                                            ; preds = %2
  %10268 = lshr i32 %275, 9
  %10269 = and i32 %10268, 31
  %10270 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %10271 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %10272 = load i32, i32* %10271, align 4
  %10273 = and i32 %10272, 255
  %10274 = zext i32 %10273 to i64
  %10275 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %10274, i32 0
  %10276 = load i64, i64* %10275, align 8
  %10277 = ashr i64 %10276, 35
  %10278 = trunc i64 %10277 to i32
  %10279 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %10280 = load i64, i64* %10279, align 8
  %10281 = ashr i64 %10280, 35
  %10282 = trunc i64 %10281 to i32
  %10283 = icmp eq i32 %10278, %10282
  br i1 %10283, label %10284, label %10328

10284:                                            ; preds = %10267
  switch i32 %10269, label %10319 [
    i32 2, label %10285
    i32 3, label %10305
    i32 12, label %10315
    i32 13, label %10317
  ]

10285:                                            ; preds = %10284
  %10286 = add nuw nsw i64 %10274, 1
  %10287 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %10286
  %10288 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %10270, %"class.v8::internal::compiler::InstructionOperand"* %10287) #11
  %10289 = extractvalue { i64, i64 } %10288, 1
  %10290 = trunc i64 %10289 to i32
  %10291 = icmp sgt i32 %10290, 0
  %10292 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %10293 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %10294 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %10293, i64 0, i32 5, i64 0, i32 0
  %10295 = load i64, i64* %10294, align 8
  %10296 = ashr i64 %10295, 35
  %10297 = trunc i64 %10296 to i32
  br i1 %10291, label %10298, label %10300

10298:                                            ; preds = %10285
  %10299 = and i64 %10289, 4294967295
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %10292, i8 zeroext 0, i32 %10297, i64 %10299, i32 4) #11
  br label %10347

10300:                                            ; preds = %10285
  %10301 = icmp eq i32 %10290, -2147483648
  %10302 = sub i64 0, %10289
  %10303 = and i64 %10302, 4294967295
  %10304 = select i1 %10301, i64 2147483648, i64 %10303
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %10292, i8 zeroext 5, i32 %10297, i64 %10304, i32 4) #11
  br label %10347

10305:                                            ; preds = %10284
  %10306 = add nuw nsw i64 %10274, 1
  %10307 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %10306, i32 0
  %10308 = load i64, i64* %10307, align 8
  %10309 = ashr i64 %10308, 35
  %10310 = trunc i64 %10309 to i32
  %10311 = icmp eq i32 %10310, %10278
  %10312 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %10311, label %10313, label %10314

10313:                                            ; preds = %10305
  tail call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %10312, i32 %10278, i64 1, i32 4, i32 4) #11
  br label %10347

10314:                                            ; preds = %10305
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %10312, i8 zeroext 3, i32 %10278, i32 %10310, i32 4) #11
  br label %10347

10315:                                            ; preds = %10284
  %10316 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %10316, i32 %10278, i64 1, i32 4, i32 4) #11
  br label %10347

10317:                                            ; preds = %10284
  %10318 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %10318, i32 %10278, i64 2, i32 4, i32 4) #11
  br label %10347

10319:                                            ; preds = %10284
  %10320 = icmp eq i32 %10269, 14
  %10321 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %10320, label %10322, label %10323

10322:                                            ; preds = %10319
  tail call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %10321, i32 %10278, i64 3, i32 4, i32 4) #11
  br label %10347

10323:                                            ; preds = %10319
  %10324 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10324)
  store i64 0, i64* %4, align 8
  %10325 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10324)
  %10326 = extractvalue { i64, i32 } %10325, 0
  %10327 = extractvalue { i64, i32 } %10325, 1
  call void @_ZN2v88internal9Assembler8emit_leaENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %10321, i32 %10278, i64 %10326, i32 %10327, i32 4) #11
  br label %10347

10328:                                            ; preds = %10267
  %10329 = icmp eq i32 %10269, 3
  br i1 %10329, label %10332, label %10330

10330:                                            ; preds = %10328
  %10331 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %10341

10332:                                            ; preds = %10328
  %10333 = add nuw nsw i64 %10274, 1
  %10334 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %10333, i32 0
  %10335 = load i64, i64* %10334, align 8
  %10336 = ashr i64 %10335, 35
  %10337 = trunc i64 %10336 to i32
  %10338 = icmp eq i32 %10337, %10282
  %10339 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %10338, label %10340, label %10341

10340:                                            ; preds = %10332
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %10339, i8 zeroext 3, i32 %10282, i32 %10278, i32 4) #11
  br label %10347

10341:                                            ; preds = %10330, %10332
  %10342 = phi %"class.v8::internal::Assembler"* [ %10331, %10330 ], [ %10339, %10332 ]
  %10343 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10343)
  store i64 0, i64* %3, align 8
  %10344 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10343)
  %10345 = extractvalue { i64, i32 } %10344, 0
  %10346 = extractvalue { i64, i32 } %10344, 1
  call void @_ZN2v88internal9Assembler8emit_leaENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %10342, i32 %10282, i64 %10345, i32 %10346, i32 4) #11
  br label %10347

10347:                                            ; preds = %10298, %10300, %10340, %10341, %10315, %10322, %10323, %10317, %10313, %10314
  %10348 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %10349 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %10350 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %10349, i64 0, i32 5, i64 0, i32 0
  %10351 = load i64, i64* %10350, align 8
  %10352 = ashr i64 %10351, 35
  %10353 = trunc i64 %10352 to i32
  call void @_ZN2v88internal14TurboAssembler18AssertZeroExtendedENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %10348, i32 %10353) #11
  br label %23402

10354:                                            ; preds = %2
  %10355 = lshr i32 %275, 9
  %10356 = and i32 %10355, 31
  %10357 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %10358 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %10359 = load i32, i32* %10358, align 4
  %10360 = and i32 %10359, 255
  %10361 = zext i32 %10360 to i64
  %10362 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %10361, i32 0
  %10363 = load i64, i64* %10362, align 8
  %10364 = ashr i64 %10363, 35
  %10365 = trunc i64 %10364 to i32
  %10366 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %10367 = load i64, i64* %10366, align 8
  %10368 = ashr i64 %10367, 35
  %10369 = trunc i64 %10368 to i32
  %10370 = icmp eq i32 %10365, %10369
  br i1 %10370, label %10371, label %10421

10371:                                            ; preds = %10354
  switch i32 %10356, label %10412 [
    i32 2, label %10372
    i32 3, label %10398
    i32 12, label %10408
    i32 13, label %10410
  ]

10372:                                            ; preds = %10371
  %10373 = add nuw nsw i64 %10361, 1
  %10374 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %10373
  %10375 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %10357, %"class.v8::internal::compiler::InstructionOperand"* %10374) #11
  %10376 = extractvalue { i64, i64 } %10375, 1
  %10377 = trunc i64 %10376 to i32
  %10378 = icmp sgt i32 %10377, 0
  br i1 %10378, label %10379, label %10387

10379:                                            ; preds = %10372
  %10380 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %10381 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %10382 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %10381, i64 0, i32 5, i64 0, i32 0
  %10383 = load i64, i64* %10382, align 8
  %10384 = ashr i64 %10383, 35
  %10385 = trunc i64 %10384 to i32
  %10386 = and i64 %10376, 4294967295
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %10380, i8 zeroext 0, i32 %10385, i64 %10386, i32 8) #11
  br label %23402

10387:                                            ; preds = %10372
  %10388 = icmp slt i32 %10377, 0
  br i1 %10388, label %10389, label %23402

10389:                                            ; preds = %10387
  %10390 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %10391 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %10392 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %10391, i64 0, i32 5, i64 0, i32 0
  %10393 = load i64, i64* %10392, align 8
  %10394 = ashr i64 %10393, 35
  %10395 = trunc i64 %10394 to i32
  %10396 = sub i64 0, %10376
  %10397 = and i64 %10396, 4294967295
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %10390, i8 zeroext 5, i32 %10395, i64 %10397, i32 8) #11
  br label %23402

10398:                                            ; preds = %10371
  %10399 = add nuw nsw i64 %10361, 1
  %10400 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %10399, i32 0
  %10401 = load i64, i64* %10400, align 8
  %10402 = ashr i64 %10401, 35
  %10403 = trunc i64 %10402 to i32
  %10404 = icmp eq i32 %10403, %10365
  %10405 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %10404, label %10406, label %10407

10406:                                            ; preds = %10398
  tail call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %10405, i32 %10365, i64 1, i32 4, i32 8) #11
  br label %23402

10407:                                            ; preds = %10398
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %10405, i8 zeroext 3, i32 %10365, i32 %10403, i32 8) #11
  br label %23402

10408:                                            ; preds = %10371
  %10409 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %10409, i32 %10365, i64 1, i32 4, i32 8) #11
  br label %23402

10410:                                            ; preds = %10371
  %10411 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %10411, i32 %10365, i64 2, i32 4, i32 8) #11
  br label %23402

10412:                                            ; preds = %10371
  %10413 = icmp eq i32 %10356, 14
  %10414 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %10413, label %10415, label %10416

10415:                                            ; preds = %10412
  tail call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %10414, i32 %10365, i64 3, i32 4, i32 8) #11
  br label %23402

10416:                                            ; preds = %10412
  %10417 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10417)
  store i64 0, i64* %5, align 8
  %10418 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10417)
  %10419 = extractvalue { i64, i32 } %10418, 0
  %10420 = extractvalue { i64, i32 } %10418, 1
  call void @_ZN2v88internal9Assembler8emit_leaENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %10414, i32 %10365, i64 %10419, i32 %10420, i32 8) #11
  br label %23402

10421:                                            ; preds = %10354
  %10422 = icmp eq i32 %10356, 3
  br i1 %10422, label %10425, label %10423

10423:                                            ; preds = %10421
  %10424 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %10434

10425:                                            ; preds = %10421
  %10426 = add nuw nsw i64 %10361, 1
  %10427 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %10426, i32 0
  %10428 = load i64, i64* %10427, align 8
  %10429 = ashr i64 %10428, 35
  %10430 = trunc i64 %10429 to i32
  %10431 = icmp eq i32 %10430, %10369
  %10432 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %10431, label %10433, label %10434

10433:                                            ; preds = %10425
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %10432, i8 zeroext 3, i32 %10369, i32 %10365, i32 8) #11
  br label %23402

10434:                                            ; preds = %10423, %10425
  %10435 = phi %"class.v8::internal::Assembler"* [ %10424, %10423 ], [ %10432, %10425 ]
  %10436 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10436)
  store i64 0, i64* %6, align 8
  %10437 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10436)
  %10438 = extractvalue { i64, i32 } %10437, 0
  %10439 = extractvalue { i64, i32 } %10437, 1
  call void @_ZN2v88internal9Assembler8emit_leaENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %10435, i32 %10369, i64 %10438, i32 %10439, i32 8) #11
  br label %23402

10440:                                            ; preds = %2
  %10441 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %10442 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %10443 = load i64, i64* %10442, align 8
  %10444 = ashr i64 %10443, 35
  %10445 = trunc i64 %10444 to i32
  tail call void @_ZN2v88internal9Assembler8emit_decENS0_8RegisterEi(%"class.v8::internal::Assembler"* %10441, i32 %10445, i32 4) #11
  br label %23402

10446:                                            ; preds = %2
  %10447 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %10448 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %10449 = load i64, i64* %10448, align 8
  %10450 = ashr i64 %10449, 35
  %10451 = trunc i64 %10450 to i32
  tail call void @_ZN2v88internal9Assembler8emit_incENS0_8RegisterEi(%"class.v8::internal::Assembler"* %10447, i32 %10451, i32 4) #11
  br label %23402

10452:                                            ; preds = %2
  %10453 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %10454 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %10455 = load i32, i32* %10454, align 4
  %10456 = and i32 %10455, 255
  %10457 = zext i32 %10456 to i64
  %10458 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %10457
  %10459 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %10453, %"class.v8::internal::compiler::InstructionOperand"* %10458) #11
  %10460 = extractvalue { i64, i64 } %10459, 1
  %10461 = trunc i64 %10460 to i32
  %10462 = sdiv i32 %10461, 8
  %10463 = load i32, i32* %10454, align 4
  %10464 = and i32 %10463, 255
  %10465 = add nuw nsw i32 %10464, 1
  %10466 = zext i32 %10465 to i64
  %10467 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %10466, i32 0
  %10468 = load i64, i64* %10467, align 8
  %10469 = and i64 %10468, 7
  %10470 = icmp eq i64 %10469, 3
  br i1 %10470, label %10471, label %10498

10471:                                            ; preds = %10452
  %10472 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %10473 = add nsw i32 %10461, -8
  %10474 = icmp eq i32 %10473, 0
  br i1 %10474, label %10478, label %10475

10475:                                            ; preds = %10471
  %10476 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %10472, i64 0, i32 0, i32 0, i32 0
  %10477 = zext i32 %10473 to i64
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %10476, i8 zeroext 5, i32 4, i64 %10477, i32 8) #11
  br label %10478

10478:                                            ; preds = %10471, %10475
  %10479 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %10472, i64 0, i32 0, i32 0, i32 0
  %10480 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %10481 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %10480, i64 0, i32 1
  %10482 = load i32, i32* %10481, align 4
  %10483 = and i32 %10482, 255
  %10484 = add nuw nsw i32 %10483, 1
  %10485 = zext i32 %10484 to i64
  %10486 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %10480, i64 0, i32 5, i64 %10485
  %10487 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %10453, %"class.v8::internal::compiler::InstructionOperand"* %10486) #11
  %10488 = extractvalue { i64, i64 } %10487, 0
  %10489 = trunc i64 %10488 to i32
  %10490 = extractvalue { i64, i64 } %10487, 1
  %10491 = icmp eq i32 %10489, 3
  %10492 = and i64 %10488, 1095216660480
  %10493 = icmp eq i64 %10492, 25769803776
  %10494 = select i1 %10493, i64 25769803776, i64 0
  %10495 = and i64 %10490, 4294967295
  %10496 = or i64 %10494, %10495
  %10497 = select i1 %10491, i64 0, i64 %10496
  call void @_ZN2v88internal9Assembler5pushqENS0_9ImmediateE(%"class.v8::internal::Assembler"* %10479, i64 %10497) #11
  br label %10658

10498:                                            ; preds = %10452
  %10499 = load i32, i32* %274, align 8
  %10500 = and i32 %10499, 15872
  %10501 = icmp eq i32 %10500, 0
  br i1 %10501, label %10515, label %10502

10502:                                            ; preds = %10498
  %10503 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %10504 = add nsw i32 %10461, -8
  %10505 = icmp eq i32 %10504, 0
  br i1 %10505, label %10509, label %10506

10506:                                            ; preds = %10502
  %10507 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %10503, i64 0, i32 0, i32 0, i32 0
  %10508 = zext i32 %10504 to i64
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %10507, i8 zeroext 5, i32 4, i64 %10508, i32 8) #11
  br label %10509

10509:                                            ; preds = %10502, %10506
  %10510 = bitcast i64* %219 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10510) #11
  store i64 1, i64* %219, align 8
  %10511 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %219)
  %10512 = extractvalue { i64, i32 } %10511, 0
  %10513 = extractvalue { i64, i32 } %10511, 1
  %10514 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %10503, i64 0, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler5pushqENS0_7OperandE(%"class.v8::internal::Assembler"* %10514, i64 %10512, i32 %10513) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10510) #11
  br label %10658

10515:                                            ; preds = %10498
  %10516 = icmp ugt i64 %10469, 4
  %10517 = and i64 %10468, 24
  %10518 = icmp eq i64 %10517, 0
  %10519 = and i1 %10516, %10518
  br i1 %10519, label %10520, label %10595

10520:                                            ; preds = %10515
  %10521 = lshr i64 %10468, 5
  %10522 = trunc i64 %10521 to i8
  %10523 = icmp ult i8 %10522, 12
  br i1 %10523, label %10524, label %10543

10524:                                            ; preds = %10520
  %10525 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %10526 = add nsw i32 %10461, -8
  %10527 = icmp eq i32 %10526, 0
  br i1 %10527, label %10531, label %10528

10528:                                            ; preds = %10524
  %10529 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %10525, i64 0, i32 0, i32 0, i32 0
  %10530 = zext i32 %10526 to i64
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %10529, i8 zeroext 5, i32 4, i64 %10530, i32 8) #11
  br label %10531

10531:                                            ; preds = %10524, %10528
  %10532 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %10525, i64 0, i32 0, i32 0, i32 0
  %10533 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %10534 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %10533, i64 0, i32 1
  %10535 = load i32, i32* %10534, align 4
  %10536 = and i32 %10535, 255
  %10537 = add nuw nsw i32 %10536, 1
  %10538 = zext i32 %10537 to i64
  %10539 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %10533, i64 0, i32 5, i64 %10538, i32 0
  %10540 = load i64, i64* %10539, align 8
  %10541 = ashr i64 %10540, 35
  %10542 = trunc i64 %10541 to i32
  call void @_ZN2v88internal9Assembler5pushqENS0_8RegisterE(%"class.v8::internal::Assembler"* %10532, i32 %10542) #11
  br label %10658

10543:                                            ; preds = %10520
  %10544 = and i64 %10468, 8160
  %10545 = or i64 %10544, 32
  %10546 = icmp eq i64 %10545, 416
  br i1 %10546, label %10547, label %10570

10547:                                            ; preds = %10543
  %10548 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %10549 = icmp eq i32 %10461, 0
  br i1 %10549, label %10553, label %10550

10550:                                            ; preds = %10547
  %10551 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %10548, i64 0, i32 0, i32 0, i32 0
  %10552 = and i64 %10460, 4294967295
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %10551, i8 zeroext 5, i32 4, i64 %10552, i32 8) #11
  br label %10553

10553:                                            ; preds = %10547, %10550
  %10554 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %10555 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %10554, i64 0, i32 1
  %10556 = load i32, i32* %10555, align 4
  %10557 = and i32 %10556, 255
  %10558 = add nuw nsw i32 %10557, 1
  %10559 = zext i32 %10558 to i64
  %10560 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %10554, i64 0, i32 5, i64 %10559, i32 0
  %10561 = load i64, i64* %10560, align 8
  %10562 = ashr i64 %10561, 35
  %10563 = trunc i64 %10562 to i32
  %10564 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %10548, i64 0, i32 0, i32 0, i32 0
  %10565 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %10566 = and i32 %10565, 32
  %10567 = icmp eq i32 %10566, 0
  br i1 %10567, label %10569, label %10568

10568:                                            ; preds = %10553
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %10564, i8 zeroext 17, i32 %10563, i32 0, i64 2360320, i32 131072, i32 3, i32 1, i32 0, i32 5) #11
  br label %10658

10569:                                            ; preds = %10553
  call void @_ZN2v88internal9Assembler5movsdENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %10564, i64 2360320, i32 131072, i32 %10563) #11
  br label %10658

10570:                                            ; preds = %10543
  %10571 = icmp eq i64 %10544, 448
  br i1 %10571, label %10572, label %10628

10572:                                            ; preds = %10570
  %10573 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %10574 = icmp eq i32 %10461, 0
  br i1 %10574, label %10578, label %10575

10575:                                            ; preds = %10572
  %10576 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %10573, i64 0, i32 0, i32 0, i32 0
  %10577 = and i64 %10460, 4294967295
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %10576, i8 zeroext 5, i32 4, i64 %10577, i32 8) #11
  br label %10578

10578:                                            ; preds = %10572, %10575
  %10579 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %10580 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %10579, i64 0, i32 1
  %10581 = load i32, i32* %10580, align 4
  %10582 = and i32 %10581, 255
  %10583 = add nuw nsw i32 %10582, 1
  %10584 = zext i32 %10583 to i64
  %10585 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %10579, i64 0, i32 5, i64 %10584, i32 0
  %10586 = load i64, i64* %10585, align 8
  %10587 = ashr i64 %10586, 35
  %10588 = trunc i64 %10587 to i32
  %10589 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %10573, i64 0, i32 0, i32 0, i32 0
  %10590 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %10591 = and i32 %10590, 32
  %10592 = icmp eq i32 %10591, 0
  br i1 %10592, label %10594, label %10593

10593:                                            ; preds = %10578
  call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"* %10589, i8 zeroext 17, i32 %10588, i32 0, i64 2360320, i32 131072) #11
  br label %10658

10594:                                            ; preds = %10578
  call void @_ZN2v88internal9Assembler6movupsENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %10589, i64 2360320, i32 131072, i32 %10588) #11
  br label %10658

10595:                                            ; preds = %10515
  %10596 = icmp eq i64 %10517, 8
  %10597 = and i1 %10516, %10596
  br i1 %10597, label %10598, label %10628

10598:                                            ; preds = %10595
  %10599 = lshr i64 %10468, 5
  %10600 = trunc i64 %10599 to i8
  %10601 = icmp ult i8 %10600, 12
  %10602 = and i64 %10468, 8128
  %10603 = or i64 %10602, 32
  %10604 = icmp eq i64 %10603, 416
  %10605 = or i1 %10604, %10601
  br i1 %10605, label %10606, label %10628

10606:                                            ; preds = %10598
  %10607 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %10608 = add nsw i32 %10461, -8
  %10609 = icmp eq i32 %10608, 0
  br i1 %10609, label %10613, label %10610

10610:                                            ; preds = %10606
  %10611 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %10607, i64 0, i32 0, i32 0, i32 0
  %10612 = zext i32 %10608 to i64
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %10611, i8 zeroext 5, i32 4, i64 %10612, i32 8) #11
  br label %10613

10613:                                            ; preds = %10606, %10610
  %10614 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %10607, i64 0, i32 0, i32 0, i32 0
  %10615 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %10616 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %10615, i64 0, i32 1
  %10617 = load i32, i32* %10616, align 4
  %10618 = and i32 %10617, 255
  %10619 = add nuw nsw i32 %10618, 1
  %10620 = zext i32 %10619 to i64
  %10621 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %10615, i64 0, i32 5, i64 %10620, i32 0
  %10622 = load i64, i64* %10621, align 8
  %10623 = ashr i64 %10622, 35
  %10624 = trunc i64 %10623 to i32
  %10625 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %10624, i32 0) #11
  %10626 = extractvalue { i64, i32 } %10625, 0
  %10627 = extractvalue { i64, i32 } %10625, 1
  call void @_ZN2v88internal9Assembler5pushqENS0_7OperandE(%"class.v8::internal::Assembler"* %10614, i64 %10626, i32 %10627) #11
  br label %10658

10628:                                            ; preds = %10598, %10570, %10595
  %10629 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %10630 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %10629, i64 0, i32 1
  %10631 = load i32, i32* %10630, align 4
  %10632 = and i32 %10631, 255
  %10633 = add nuw nsw i32 %10632, 1
  %10634 = zext i32 %10633 to i64
  %10635 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %10629, i64 0, i32 5, i64 %10634, i32 0
  %10636 = load i64, i64* %10635, align 8
  %10637 = ashr i64 %10636, 35
  %10638 = trunc i64 %10637 to i32
  %10639 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %10638, i32 0) #11
  %10640 = extractvalue { i64, i32 } %10639, 0
  %10641 = extractvalue { i64, i32 } %10639, 1
  %10642 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %10643 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %10644 = and i32 %10643, 32
  %10645 = icmp eq i32 %10644, 0
  br i1 %10645, label %10647, label %10646

10646:                                            ; preds = %10628
  call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"* %10642, i8 zeroext 16, i32 15, i32 0, i64 %10640, i32 %10641) #11
  br label %10648

10647:                                            ; preds = %10628
  call void @_ZN2v88internal9Assembler6movupsENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %10642, i32 15, i64 %10640, i32 %10641) #11
  br label %10648

10648:                                            ; preds = %10646, %10647
  %10649 = icmp eq i32 %10461, 0
  br i1 %10649, label %10652, label %10650

10650:                                            ; preds = %10648
  %10651 = and i64 %10460, 4294967295
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %10642, i8 zeroext 5, i32 4, i64 %10651, i32 8) #11
  br label %10652

10652:                                            ; preds = %10648, %10650
  %10653 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %10654 = and i32 %10653, 32
  %10655 = icmp eq i32 %10654, 0
  br i1 %10655, label %10657, label %10656

10656:                                            ; preds = %10652
  call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"* %10642, i8 zeroext 17, i32 15, i32 0, i64 2360320, i32 131072) #11
  br label %10658

10657:                                            ; preds = %10652
  call void @_ZN2v88internal9Assembler6movupsENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %10642, i64 2360320, i32 131072, i32 15) #11
  br label %10658

10658:                                            ; preds = %10657, %10656, %10594, %10593, %10569, %10568, %10531, %10613, %10509, %10478
  %10659 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 3
  %10660 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %10659, align 8
  %10661 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %10660, i64 0, i32 3
  %10662 = load i32, i32* %10661, align 4
  %10663 = add nsw i32 %10662, %10462
  store i32 %10663, i32* %10661, align 4
  %10664 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %10665 = bitcast i8** %10664 to i64*
  %10666 = load i64, i64* %10665, align 8
  %10667 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %10668 = bitcast i8** %10667 to i64*
  %10669 = load i64, i64* %10668, align 8
  %10670 = sub i64 %10666, %10669
  %10671 = trunc i64 %10670 to i32
  %10672 = load i8, i8* @_ZN2v88internal29FLAG_perf_prof_unwinding_infoE, align 1, !range !2
  %10673 = icmp eq i8 %10672, 0
  br i1 %10673, label %23402, label %10674

10674:                                            ; preds = %10658
  %10675 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 2
  %10676 = load i8, i8* %10675, align 8, !range !2
  %10677 = icmp eq i8 %10676, 0
  br i1 %10677, label %10678, label %23402

10678:                                            ; preds = %10674
  %10679 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 1
  call void @_ZN2v88internal13EhFrameWriter15AdvanceLocationEi(%"class.v8::internal::EhFrameWriter"* %10679, i32 %10671) #11
  %10680 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 1, i32 4
  %10681 = load i32, i32* %10680, align 8
  %10682 = add nsw i32 %10681, %10461
  call void @_ZN2v88internal13EhFrameWriter20SetBaseAddressOffsetEi(%"class.v8::internal::EhFrameWriter"* %10679, i32 %10682) #11
  br label %23402

10683:                                            ; preds = %2
  %10684 = lshr i32 %275, 22
  %10685 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %10686 = load i32, i32* %10685, align 4
  %10687 = and i32 %10686, 255
  %10688 = zext i32 %10687 to i64
  %10689 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %10688, i32 0
  %10690 = load i64, i64* %10689, align 8
  %10691 = and i64 %10690, 7
  %10692 = icmp eq i64 %10691, 3
  br i1 %10692, label %10693, label %10725

10693:                                            ; preds = %10683
  %10694 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %10695 = icmp eq i32 %10684, 0
  br i1 %10695, label %10702, label %10696

10696:                                            ; preds = %10693
  %10697 = shl nuw nsw i32 %10684, 3
  %10698 = icmp ult i32 %275, 67108864
  br i1 %10698, label %10702, label %10699

10699:                                            ; preds = %10696
  %10700 = lshr i32 %275, 27
  %10701 = shl nuw nsw i32 %10700, 8
  br label %10702

10702:                                            ; preds = %10696, %10693, %10699
  %10703 = phi i64 [ 2393088, %10699 ], [ 2360320, %10693 ], [ 2376704, %10696 ]
  %10704 = phi i32 [ 393216, %10699 ], [ 131072, %10693 ], [ 196608, %10696 ]
  %10705 = phi i32 [ %10697, %10699 ], [ 0, %10693 ], [ %10697, %10696 ]
  %10706 = phi i32 [ %10701, %10699 ], [ 0, %10693 ], [ 0, %10696 ]
  %10707 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %10688
  %10708 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %10709 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %10708, %"class.v8::internal::compiler::InstructionOperand"* %10707) #11
  %10710 = extractvalue { i64, i64 } %10709, 0
  %10711 = trunc i64 %10710 to i32
  %10712 = extractvalue { i64, i64 } %10709, 1
  %10713 = icmp eq i32 %10711, 3
  %10714 = and i64 %10710, 1095216660480
  %10715 = icmp eq i64 %10714, 25769803776
  %10716 = select i1 %10715, i64 25769803776, i64 0
  %10717 = and i64 %10712, 4294967295
  %10718 = or i64 %10716, %10717
  %10719 = select i1 %10713, i64 0, i64 %10718
  %10720 = and i32 %10705, 248
  %10721 = or i32 %10706, %10720
  %10722 = zext i32 %10721 to i64
  %10723 = shl nuw nsw i64 %10722, 24
  %10724 = or i64 %10703, %10723
  call void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %10694, i64 %10724, i32 %10704, i64 %10719, i32 8) #11
  br label %23402

10725:                                            ; preds = %10683
  %10726 = icmp ugt i64 %10691, 4
  %10727 = and i64 %10690, 24
  %10728 = icmp eq i64 %10727, 0
  %10729 = and i1 %10726, %10728
  br i1 %10729, label %10730, label %10785

10730:                                            ; preds = %10725
  %10731 = lshr i64 %10690, 5
  %10732 = trunc i64 %10731 to i8
  %10733 = icmp ugt i8 %10732, 11
  br i1 %10733, label %10734, label %10785

10734:                                            ; preds = %10730
  %10735 = icmp eq i8 %10732, 13
  %10736 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %10737 = shl nuw nsw i32 %10684, 3
  %10738 = icmp eq i32 %10684, 0
  br i1 %10735, label %10739, label %10762

10739:                                            ; preds = %10734
  br i1 %10738, label %10745, label %10740

10740:                                            ; preds = %10739
  %10741 = icmp ult i32 %275, 67108864
  br i1 %10741, label %10745, label %10742

10742:                                            ; preds = %10740
  %10743 = lshr i32 %275, 27
  %10744 = shl nuw nsw i32 %10743, 8
  br label %10745

10745:                                            ; preds = %10740, %10739, %10742
  %10746 = phi i64 [ 2393088, %10742 ], [ 2360320, %10739 ], [ 2376704, %10740 ]
  %10747 = phi i32 [ 393216, %10742 ], [ 131072, %10739 ], [ 196608, %10740 ]
  %10748 = phi i32 [ %10744, %10742 ], [ 0, %10739 ], [ 0, %10740 ]
  %10749 = ashr i64 %10690, 35
  %10750 = trunc i64 %10749 to i32
  %10751 = and i32 %10737, 248
  %10752 = or i32 %10748, %10751
  %10753 = zext i32 %10752 to i64
  %10754 = shl nuw nsw i64 %10753, 24
  %10755 = or i64 %10746, %10754
  %10756 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %10736, i64 0, i32 0, i32 0, i32 0
  %10757 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %10758 = and i32 %10757, 32
  %10759 = icmp eq i32 %10758, 0
  br i1 %10759, label %10761, label %10760

10760:                                            ; preds = %10745
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %10756, i8 zeroext 17, i32 %10750, i32 0, i64 %10755, i32 %10747, i32 3, i32 1, i32 0, i32 5) #11
  br label %23402

10761:                                            ; preds = %10745
  tail call void @_ZN2v88internal9Assembler5movsdENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %10756, i64 %10755, i32 %10747, i32 %10750) #11
  br label %23402

10762:                                            ; preds = %10734
  br i1 %10738, label %10768, label %10763

10763:                                            ; preds = %10762
  %10764 = icmp ult i32 %275, 67108864
  br i1 %10764, label %10768, label %10765

10765:                                            ; preds = %10763
  %10766 = lshr i32 %275, 27
  %10767 = shl nuw nsw i32 %10766, 8
  br label %10768

10768:                                            ; preds = %10763, %10762, %10765
  %10769 = phi i64 [ 2393088, %10765 ], [ 2360320, %10762 ], [ 2376704, %10763 ]
  %10770 = phi i32 [ 393216, %10765 ], [ 131072, %10762 ], [ 196608, %10763 ]
  %10771 = phi i32 [ %10767, %10765 ], [ 0, %10762 ], [ 0, %10763 ]
  %10772 = ashr i64 %10690, 35
  %10773 = trunc i64 %10772 to i32
  %10774 = and i32 %10737, 248
  %10775 = or i32 %10771, %10774
  %10776 = zext i32 %10775 to i64
  %10777 = shl nuw nsw i64 %10776, 24
  %10778 = or i64 %10769, %10777
  %10779 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %10736, i64 0, i32 0, i32 0, i32 0
  %10780 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %10781 = and i32 %10780, 32
  %10782 = icmp eq i32 %10781, 0
  br i1 %10782, label %10784, label %10783

10783:                                            ; preds = %10768
  tail call void @_ZN2v88internal9Assembler3vssEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"* %10779, i8 zeroext 17, i32 %10773, i32 0, i64 %10778, i32 %10770) #11
  br label %23402

10784:                                            ; preds = %10768
  tail call void @_ZN2v88internal9Assembler5movssENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %10779, i64 %10778, i32 %10770, i32 %10773) #11
  br label %23402

10785:                                            ; preds = %10725, %10730
  %10786 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %10787 = icmp eq i32 %10684, 0
  br i1 %10787, label %10794, label %10788

10788:                                            ; preds = %10785
  %10789 = shl nuw nsw i32 %10684, 3
  %10790 = icmp ult i32 %275, 67108864
  br i1 %10790, label %10794, label %10791

10791:                                            ; preds = %10788
  %10792 = lshr i32 %275, 27
  %10793 = shl nuw nsw i32 %10792, 8
  br label %10794

10794:                                            ; preds = %10788, %10785, %10791
  %10795 = phi i64 [ 2393088, %10791 ], [ 2360320, %10785 ], [ 2376704, %10788 ]
  %10796 = phi i32 [ 393216, %10791 ], [ 131072, %10785 ], [ 196608, %10788 ]
  %10797 = phi i32 [ %10789, %10791 ], [ 0, %10785 ], [ %10789, %10788 ]
  %10798 = phi i32 [ %10793, %10791 ], [ 0, %10785 ], [ 0, %10788 ]
  %10799 = ashr i64 %10690, 35
  %10800 = trunc i64 %10799 to i32
  %10801 = and i32 %10797, 248
  %10802 = or i32 %10798, %10801
  %10803 = zext i32 %10802 to i64
  %10804 = shl nuw nsw i64 %10803, 24
  %10805 = or i64 %10795, %10804
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %10786, i64 %10805, i32 %10796, i32 %10800, i32 8) #11
  br label %23402

10806:                                            ; preds = %2
  %10807 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %10808 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %10809 = load i32, i32* %10808, align 4
  %10810 = and i32 %10809, 255
  %10811 = zext i32 %10810 to i64
  %10812 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %10811
  %10813 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %10807, %"class.v8::internal::compiler::InstructionOperand"* %10812) #11
  %10814 = extractvalue { i64, i64 } %10813, 1
  %10815 = trunc i64 %10814 to i32
  %10816 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 3
  %10817 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %10816, align 8
  %10818 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %10817, i64 0, i32 0
  %10819 = load %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::Frame"** %10818, align 8
  %10820 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %10819, i64 0, i32 3, i32 3
  %10821 = load i32, i32* %10820, align 4
  %10822 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %10819, i64 0, i32 2
  %10823 = load i32, i32* %10822, align 8
  %10824 = sub i32 %10821, %10815
  %10825 = add i32 %10824, %10823
  %10826 = shl i32 %10825, 3
  %10827 = sub i32 8, %10826
  %10828 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %10829 = load i64, i64* %10828, align 8
  %10830 = and i64 %10829, 7
  %10831 = icmp ugt i64 %10830, 4
  %10832 = and i64 %10829, 24
  %10833 = icmp eq i64 %10832, 0
  %10834 = and i1 %10831, %10833
  br i1 %10834, label %10835, label %10899

10835:                                            ; preds = %10806
  %10836 = lshr i64 %10829, 5
  %10837 = trunc i64 %10836 to i8
  %10838 = icmp ugt i8 %10837, 11
  br i1 %10838, label %10839, label %10899

10839:                                            ; preds = %10835
  %10840 = icmp eq i8 %10837, 13
  br i1 %10840, label %10841, label %10865

10841:                                            ; preds = %10839
  %10842 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %10843 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %10842, i64 0, i32 5, i64 0, i32 0
  %10844 = load i64, i64* %10843, align 8
  %10845 = ashr i64 %10844, 35
  %10846 = trunc i64 %10845 to i32
  %10847 = sext i32 %10827 to i64
  %10848 = add nsw i64 %10847, 128
  %10849 = icmp ult i64 %10848, 256
  %10850 = and i32 %10827, -256
  %10851 = select i1 %10849, i64 17664, i64 34048
  %10852 = select i1 %10849, i32 131072, i32 327680
  %10853 = select i1 %10849, i32 0, i32 %10850
  %10854 = and i32 %10827, 248
  %10855 = or i32 %10853, %10854
  %10856 = zext i32 %10855 to i64
  %10857 = shl nuw nsw i64 %10856, 16
  %10858 = or i64 %10857, %10851
  %10859 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %10860 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %10861 = and i32 %10860, 32
  %10862 = icmp eq i32 %10861, 0
  br i1 %10862, label %10864, label %10863

10863:                                            ; preds = %10841
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %10859, i8 zeroext 16, i32 %10846, i32 0, i64 %10858, i32 %10852, i32 3, i32 1, i32 0, i32 5) #11
  br label %23402

10864:                                            ; preds = %10841
  call void @_ZN2v88internal9Assembler5movsdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %10859, i32 %10846, i64 %10858, i32 %10852) #11
  br label %23402

10865:                                            ; preds = %10839
  %10866 = icmp eq i8 %10837, 12
  %10867 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %10868 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %10869 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %10868, i64 0, i32 5, i64 0, i32 0
  %10870 = load i64, i64* %10869, align 8
  %10871 = ashr i64 %10870, 35
  %10872 = trunc i64 %10871 to i32
  %10873 = sext i32 %10827 to i64
  %10874 = add nsw i64 %10873, 128
  %10875 = icmp ult i64 %10874, 256
  %10876 = and i32 %10827, -256
  %10877 = select i1 %10875, i64 17664, i64 34048
  %10878 = select i1 %10875, i32 131072, i32 327680
  %10879 = select i1 %10875, i32 0, i32 %10876
  %10880 = and i32 %10827, 248
  %10881 = or i32 %10879, %10880
  %10882 = zext i32 %10881 to i64
  %10883 = shl nuw nsw i64 %10882, 16
  %10884 = or i64 %10883, %10877
  br i1 %10866, label %10885, label %10892

10885:                                            ; preds = %10865
  %10886 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %10867, i64 0, i32 0, i32 0, i32 0
  %10887 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %10888 = and i32 %10887, 32
  %10889 = icmp eq i32 %10888, 0
  br i1 %10889, label %10891, label %10890

10890:                                            ; preds = %10885
  call void @_ZN2v88internal9Assembler3vssEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"* %10886, i8 zeroext 16, i32 %10872, i32 0, i64 %10884, i32 %10878) #11
  br label %23402

10891:                                            ; preds = %10885
  call void @_ZN2v88internal9Assembler5movssENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %10886, i32 %10872, i64 %10884, i32 %10878) #11
  br label %23402

10892:                                            ; preds = %10865
  %10893 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %10894 = and i32 %10893, 32
  %10895 = icmp eq i32 %10894, 0
  %10896 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %10867, i64 0, i32 0, i32 0, i32 0
  br i1 %10895, label %10898, label %10897

10897:                                            ; preds = %10892
  call void @_ZN2v88internal9Assembler7vmovdquENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %10896, i32 %10872, i64 %10884, i32 %10878) #11
  br label %23402

10898:                                            ; preds = %10892
  call void @_ZN2v88internal9Assembler6movupsENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %10896, i32 %10872, i64 %10884, i32 %10878) #11
  br label %23402

10899:                                            ; preds = %10806, %10835
  %10900 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %10901 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %10902 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %10901, i64 0, i32 5, i64 0, i32 0
  %10903 = load i64, i64* %10902, align 8
  %10904 = ashr i64 %10903, 35
  %10905 = trunc i64 %10904 to i32
  %10906 = sext i32 %10827 to i64
  %10907 = add nsw i64 %10906, 128
  %10908 = icmp ult i64 %10907, 256
  %10909 = and i32 %10827, -256
  %10910 = select i1 %10908, i64 17664, i64 34048
  %10911 = select i1 %10908, i32 131072, i32 327680
  %10912 = select i1 %10908, i32 0, i32 %10909
  %10913 = and i32 %10827, 248
  %10914 = or i32 %10912, %10913
  %10915 = zext i32 %10914 to i64
  %10916 = shl nuw nsw i64 %10915, 16
  %10917 = or i64 %10916, %10910
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %10900, i32 %10905, i64 %10917, i32 %10911, i32 8) #11
  br label %23402

10918:                                            ; preds = %2
  %10919 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %10920 = load i64, i64* %10919, align 8
  %10921 = ashr i64 %10920, 35
  %10922 = trunc i64 %10921 to i32
  %10923 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %10924 = load i32, i32* %10923, align 4
  %10925 = and i32 %10924, 255
  %10926 = zext i32 %10925 to i64
  %10927 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %10926, i32 0
  %10928 = load i64, i64* %10927, align 8
  %10929 = and i64 %10928, 7
  %10930 = icmp ugt i64 %10929, 4
  %10931 = and i64 %10928, 24
  %10932 = icmp eq i64 %10931, 0
  %10933 = and i1 %10930, %10932
  br i1 %10933, label %10934, label %10947

10934:                                            ; preds = %10918
  %10935 = lshr i64 %10928, 5
  %10936 = trunc i64 %10935 to i8
  %10937 = icmp ugt i8 %10936, 11
  br i1 %10937, label %10938, label %10947

10938:                                            ; preds = %10934
  %10939 = ashr i64 %10928, 35
  %10940 = trunc i64 %10939 to i32
  %10941 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %10942 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %10943 = and i32 %10942, 32
  %10944 = icmp eq i32 %10943, 0
  br i1 %10944, label %10946, label %10945

10945:                                            ; preds = %10938
  tail call void @_ZN2v88internal9Assembler8vmovddupENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %10941, i32 %10922, i32 %10940) #11
  br label %23402

10946:                                            ; preds = %10938
  tail call void @_ZN2v88internal9Assembler7movddupENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %10941, i32 %10922, i32 %10940) #11
  br label %23402

10947:                                            ; preds = %10918, %10934
  %10948 = ashr i64 %10928, 35
  %10949 = trunc i64 %10948 to i32
  %10950 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %10949, i32 0) #11
  %10951 = extractvalue { i64, i32 } %10950, 0
  %10952 = extractvalue { i64, i32 } %10950, 1
  %10953 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %10954 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %10955 = and i32 %10954, 32
  %10956 = icmp eq i32 %10955, 0
  br i1 %10956, label %10958, label %10957

10957:                                            ; preds = %10947
  call void @_ZN2v88internal9Assembler8vmovddupENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %10953, i32 %10922, i64 %10951, i32 %10952) #11
  br label %23402

10958:                                            ; preds = %10947
  call void @_ZN2v88internal9Assembler7movddupENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %10953, i32 %10922, i64 %10951, i32 %10952) #11
  br label %23402

10959:                                            ; preds = %2
  %10960 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %10961 = bitcast %"class.v8::internal::TurboAssembler"* %10960 to %"class.v8::internal::SharedTurboAssembler"*
  %10962 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %10963 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %10964 = load i64, i64* %10963, align 8
  %10965 = ashr i64 %10964, 35
  %10966 = trunc i64 %10965 to i32
  %10967 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %10968 = load i32, i32* %10967, align 4
  %10969 = and i32 %10968, 255
  %10970 = zext i32 %10969 to i64
  %10971 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %10970, i32 0
  %10972 = load i64, i64* %10971, align 8
  %10973 = ashr i64 %10972, 35
  %10974 = trunc i64 %10973 to i32
  %10975 = add nuw nsw i64 %10970, 1
  %10976 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %10975
  %10977 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %10962, %"class.v8::internal::compiler::InstructionOperand"* %10976) #11
  %10978 = extractvalue { i64, i64 } %10977, 1
  %10979 = trunc i64 %10978 to i8
  call void @_ZN2v88internal20SharedTurboAssembler16F64x2ExtractLaneENS0_11XMMRegisterES2_h(%"class.v8::internal::SharedTurboAssembler"* %10961, i32 %10966, i32 %10974, i8 zeroext %10979) #11
  br label %23402

10980:                                            ; preds = %2
  %10981 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %10982 = bitcast %"class.v8::internal::TurboAssembler"* %10981 to %"class.v8::internal::SharedTurboAssembler"*
  %10983 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %10984 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %10985 = load i64, i64* %10984, align 8
  %10986 = ashr i64 %10985, 35
  %10987 = trunc i64 %10986 to i32
  %10988 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %10989 = load i32, i32* %10988, align 4
  %10990 = and i32 %10989, 255
  %10991 = zext i32 %10990 to i64
  %10992 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %10991, i32 0
  %10993 = load i64, i64* %10992, align 8
  %10994 = ashr i64 %10993, 35
  %10995 = trunc i64 %10994 to i32
  %10996 = add nuw nsw i64 %10991, 2
  %10997 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %10996, i32 0
  %10998 = load i64, i64* %10997, align 8
  %10999 = ashr i64 %10998, 35
  %11000 = trunc i64 %10999 to i32
  %11001 = add nuw nsw i64 %10991, 1
  %11002 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11001
  %11003 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %10983, %"class.v8::internal::compiler::InstructionOperand"* %11002) #11
  %11004 = extractvalue { i64, i64 } %11003, 1
  %11005 = trunc i64 %11004 to i8
  call void @_ZN2v88internal20SharedTurboAssembler16F64x2ReplaceLaneENS0_11XMMRegisterES2_S2_h(%"class.v8::internal::SharedTurboAssembler"* %10982, i32 %10987, i32 %10995, i32 %11000, i8 zeroext %11005) #11
  br label %23402

11006:                                            ; preds = %2
  %11007 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11008 = load i64, i64* %11007, align 8
  %11009 = ashr i64 %11008, 35
  %11010 = trunc i64 %11009 to i32
  %11011 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11012 = load i32, i32* %11011, align 4
  %11013 = and i32 %11012, 255
  %11014 = zext i32 %11013 to i64
  %11015 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11014, i32 0
  %11016 = load i64, i64* %11015, align 8
  %11017 = ashr i64 %11016, 35
  %11018 = trunc i64 %11017 to i32
  %11019 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %11020 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11021 = and i32 %11020, 32
  %11022 = icmp eq i32 %11021, 0
  br i1 %11022, label %11024, label %11023

11023:                                            ; preds = %11006
  tail call void @_ZN2v88internal9Assembler3vpdEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %11019, i8 zeroext 81, i32 %11010, i32 0, i32 %11018) #11
  br label %23402

11024:                                            ; preds = %11006
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %11019, i32 %11010, i32 %11018, i8 zeroext 102, i8 zeroext 15, i8 zeroext 81) #11
  br label %23402

11025:                                            ; preds = %2
  %11026 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11027 = and i32 %11026, 32
  %11028 = icmp eq i32 %11027, 0
  %11029 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %11030 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11031 = load i64, i64* %11030, align 8
  %11032 = ashr i64 %11031, 35
  %11033 = trunc i64 %11032 to i32
  %11034 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11035 = load i32, i32* %11034, align 4
  %11036 = and i32 %11035, 255
  %11037 = zext i32 %11036 to i64
  br i1 %11028, label %11048, label %11038

11038:                                            ; preds = %11025
  %11039 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11037, i32 0
  %11040 = load i64, i64* %11039, align 8
  %11041 = ashr i64 %11040, 35
  %11042 = trunc i64 %11041 to i32
  %11043 = add nuw nsw i64 %11037, 1
  %11044 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11043, i32 0
  %11045 = load i64, i64* %11044, align 8
  %11046 = ashr i64 %11045, 35
  %11047 = trunc i64 %11046 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %11029, i8 zeroext 88, i32 %11033, i32 %11042, i32 %11047, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

11048:                                            ; preds = %11025
  %11049 = add nuw nsw i64 %11037, 1
  %11050 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11049, i32 0
  %11051 = load i64, i64* %11050, align 8
  %11052 = ashr i64 %11051, 35
  %11053 = trunc i64 %11052 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %11029, i32 %11033, i32 %11053, i8 zeroext 102, i8 zeroext 15, i8 zeroext 88) #11
  br label %23402

11054:                                            ; preds = %2
  %11055 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11056 = and i32 %11055, 32
  %11057 = icmp eq i32 %11056, 0
  %11058 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %11059 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11060 = load i64, i64* %11059, align 8
  %11061 = ashr i64 %11060, 35
  %11062 = trunc i64 %11061 to i32
  %11063 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11064 = load i32, i32* %11063, align 4
  %11065 = and i32 %11064, 255
  %11066 = zext i32 %11065 to i64
  br i1 %11057, label %11077, label %11067

11067:                                            ; preds = %11054
  %11068 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11066, i32 0
  %11069 = load i64, i64* %11068, align 8
  %11070 = ashr i64 %11069, 35
  %11071 = trunc i64 %11070 to i32
  %11072 = add nuw nsw i64 %11066, 1
  %11073 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11072, i32 0
  %11074 = load i64, i64* %11073, align 8
  %11075 = ashr i64 %11074, 35
  %11076 = trunc i64 %11075 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %11058, i8 zeroext 92, i32 %11062, i32 %11071, i32 %11076, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

11077:                                            ; preds = %11054
  %11078 = add nuw nsw i64 %11066, 1
  %11079 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11078, i32 0
  %11080 = load i64, i64* %11079, align 8
  %11081 = ashr i64 %11080, 35
  %11082 = trunc i64 %11081 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %11058, i32 %11062, i32 %11082, i8 zeroext 102, i8 zeroext 15, i8 zeroext 92) #11
  br label %23402

11083:                                            ; preds = %2
  %11084 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11085 = and i32 %11084, 32
  %11086 = icmp eq i32 %11085, 0
  %11087 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %11088 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11089 = load i64, i64* %11088, align 8
  %11090 = ashr i64 %11089, 35
  %11091 = trunc i64 %11090 to i32
  %11092 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11093 = load i32, i32* %11092, align 4
  %11094 = and i32 %11093, 255
  %11095 = zext i32 %11094 to i64
  br i1 %11086, label %11106, label %11096

11096:                                            ; preds = %11083
  %11097 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11095, i32 0
  %11098 = load i64, i64* %11097, align 8
  %11099 = ashr i64 %11098, 35
  %11100 = trunc i64 %11099 to i32
  %11101 = add nuw nsw i64 %11095, 1
  %11102 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11101, i32 0
  %11103 = load i64, i64* %11102, align 8
  %11104 = ashr i64 %11103, 35
  %11105 = trunc i64 %11104 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %11087, i8 zeroext 89, i32 %11091, i32 %11100, i32 %11105, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

11106:                                            ; preds = %11083
  %11107 = add nuw nsw i64 %11095, 1
  %11108 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11107, i32 0
  %11109 = load i64, i64* %11108, align 8
  %11110 = ashr i64 %11109, 35
  %11111 = trunc i64 %11110 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %11087, i32 %11091, i32 %11111, i8 zeroext 102, i8 zeroext 15, i8 zeroext 89) #11
  br label %23402

11112:                                            ; preds = %2
  %11113 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11114 = and i32 %11113, 32
  %11115 = icmp eq i32 %11114, 0
  %11116 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %11117 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11118 = load i64, i64* %11117, align 8
  %11119 = ashr i64 %11118, 35
  %11120 = trunc i64 %11119 to i32
  %11121 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11122 = load i32, i32* %11121, align 4
  %11123 = and i32 %11122, 255
  %11124 = zext i32 %11123 to i64
  br i1 %11115, label %11135, label %11125

11125:                                            ; preds = %11112
  %11126 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11124, i32 0
  %11127 = load i64, i64* %11126, align 8
  %11128 = ashr i64 %11127, 35
  %11129 = trunc i64 %11128 to i32
  %11130 = add nuw nsw i64 %11124, 1
  %11131 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11130, i32 0
  %11132 = load i64, i64* %11131, align 8
  %11133 = ashr i64 %11132, 35
  %11134 = trunc i64 %11133 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %11116, i8 zeroext 94, i32 %11120, i32 %11129, i32 %11134, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

11135:                                            ; preds = %11112
  %11136 = add nuw nsw i64 %11124, 1
  %11137 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11136, i32 0
  %11138 = load i64, i64* %11137, align 8
  %11139 = ashr i64 %11138, 35
  %11140 = trunc i64 %11139 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %11116, i32 %11120, i32 %11140, i8 zeroext 102, i8 zeroext 15, i8 zeroext 94) #11
  br label %23402

11141:                                            ; preds = %2
  %11142 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %11143 = bitcast %"class.v8::internal::TurboAssembler"* %11142 to %"class.v8::internal::SharedTurboAssembler"*
  %11144 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11145 = load i64, i64* %11144, align 8
  %11146 = ashr i64 %11145, 35
  %11147 = trunc i64 %11146 to i32
  %11148 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11149 = load i32, i32* %11148, align 4
  %11150 = and i32 %11149, 255
  %11151 = zext i32 %11150 to i64
  %11152 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11151, i32 0
  %11153 = load i64, i64* %11152, align 8
  %11154 = ashr i64 %11153, 35
  %11155 = trunc i64 %11154 to i32
  %11156 = add nuw nsw i64 %11151, 1
  %11157 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11156, i32 0
  %11158 = load i64, i64* %11157, align 8
  %11159 = ashr i64 %11158, 35
  %11160 = trunc i64 %11159 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler8F64x2MinENS0_11XMMRegisterES2_S2_S2_(%"class.v8::internal::SharedTurboAssembler"* %11143, i32 %11147, i32 %11155, i32 %11160, i32 15) #11
  br label %23402

11161:                                            ; preds = %2
  %11162 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %11163 = bitcast %"class.v8::internal::TurboAssembler"* %11162 to %"class.v8::internal::SharedTurboAssembler"*
  %11164 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11165 = load i64, i64* %11164, align 8
  %11166 = ashr i64 %11165, 35
  %11167 = trunc i64 %11166 to i32
  %11168 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11169 = load i32, i32* %11168, align 4
  %11170 = and i32 %11169, 255
  %11171 = zext i32 %11170 to i64
  %11172 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11171, i32 0
  %11173 = load i64, i64* %11172, align 8
  %11174 = ashr i64 %11173, 35
  %11175 = trunc i64 %11174 to i32
  %11176 = add nuw nsw i64 %11171, 1
  %11177 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11176, i32 0
  %11178 = load i64, i64* %11177, align 8
  %11179 = ashr i64 %11178, 35
  %11180 = trunc i64 %11179 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler8F64x2MaxENS0_11XMMRegisterES2_S2_S2_(%"class.v8::internal::SharedTurboAssembler"* %11163, i32 %11167, i32 %11175, i32 %11180, i32 15) #11
  br label %23402

11181:                                            ; preds = %2
  %11182 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11183 = and i32 %11182, 32
  %11184 = icmp eq i32 %11183, 0
  %11185 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %11186 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11187 = load i64, i64* %11186, align 8
  %11188 = ashr i64 %11187, 35
  %11189 = trunc i64 %11188 to i32
  %11190 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11191 = load i32, i32* %11190, align 4
  %11192 = and i32 %11191, 255
  %11193 = zext i32 %11192 to i64
  br i1 %11184, label %11207, label %11194

11194:                                            ; preds = %11181
  %11195 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11193, i32 0
  %11196 = load i64, i64* %11195, align 8
  %11197 = ashr i64 %11196, 35
  %11198 = trunc i64 %11197 to i32
  %11199 = add nuw nsw i64 %11193, 1
  %11200 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11199, i32 0
  %11201 = load i64, i64* %11200, align 8
  %11202 = ashr i64 %11201, 35
  %11203 = trunc i64 %11202 to i32
  tail call void @_ZN2v88internal9Assembler3vpdEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %11185, i8 zeroext -62, i32 %11189, i32 %11198, i32 %11203) #11
  %11204 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %11205 = load i8*, i8** %11204, align 8
  %11206 = getelementptr inbounds i8, i8* %11205, i64 1
  store i8* %11206, i8** %11204, align 8
  store i8 0, i8* %11205, align 1
  br label %23402

11207:                                            ; preds = %11181
  %11208 = add nuw nsw i64 %11193, 1
  %11209 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11208, i32 0
  %11210 = load i64, i64* %11209, align 8
  %11211 = ashr i64 %11210, 35
  %11212 = trunc i64 %11211 to i32
  tail call void @_ZN2v88internal9Assembler5cmppdENS0_11XMMRegisterES2_a(%"class.v8::internal::Assembler"* %11185, i32 %11189, i32 %11212, i8 signext 0) #11
  br label %23402

11213:                                            ; preds = %2
  %11214 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11215 = and i32 %11214, 32
  %11216 = icmp eq i32 %11215, 0
  %11217 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %11218 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11219 = load i64, i64* %11218, align 8
  %11220 = ashr i64 %11219, 35
  %11221 = trunc i64 %11220 to i32
  %11222 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11223 = load i32, i32* %11222, align 4
  %11224 = and i32 %11223, 255
  %11225 = zext i32 %11224 to i64
  br i1 %11216, label %11239, label %11226

11226:                                            ; preds = %11213
  %11227 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11225, i32 0
  %11228 = load i64, i64* %11227, align 8
  %11229 = ashr i64 %11228, 35
  %11230 = trunc i64 %11229 to i32
  %11231 = add nuw nsw i64 %11225, 1
  %11232 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11231, i32 0
  %11233 = load i64, i64* %11232, align 8
  %11234 = ashr i64 %11233, 35
  %11235 = trunc i64 %11234 to i32
  tail call void @_ZN2v88internal9Assembler3vpdEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %11217, i8 zeroext -62, i32 %11221, i32 %11230, i32 %11235) #11
  %11236 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %11237 = load i8*, i8** %11236, align 8
  %11238 = getelementptr inbounds i8, i8* %11237, i64 1
  store i8* %11238, i8** %11236, align 8
  store i8 4, i8* %11237, align 1
  br label %23402

11239:                                            ; preds = %11213
  %11240 = add nuw nsw i64 %11225, 1
  %11241 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11240, i32 0
  %11242 = load i64, i64* %11241, align 8
  %11243 = ashr i64 %11242, 35
  %11244 = trunc i64 %11243 to i32
  tail call void @_ZN2v88internal9Assembler5cmppdENS0_11XMMRegisterES2_a(%"class.v8::internal::Assembler"* %11217, i32 %11221, i32 %11244, i8 signext 4) #11
  br label %23402

11245:                                            ; preds = %2
  %11246 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11247 = and i32 %11246, 32
  %11248 = icmp eq i32 %11247, 0
  %11249 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %11250 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11251 = load i64, i64* %11250, align 8
  %11252 = ashr i64 %11251, 35
  %11253 = trunc i64 %11252 to i32
  %11254 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11255 = load i32, i32* %11254, align 4
  %11256 = and i32 %11255, 255
  %11257 = zext i32 %11256 to i64
  br i1 %11248, label %11271, label %11258

11258:                                            ; preds = %11245
  %11259 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11257, i32 0
  %11260 = load i64, i64* %11259, align 8
  %11261 = ashr i64 %11260, 35
  %11262 = trunc i64 %11261 to i32
  %11263 = add nuw nsw i64 %11257, 1
  %11264 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11263, i32 0
  %11265 = load i64, i64* %11264, align 8
  %11266 = ashr i64 %11265, 35
  %11267 = trunc i64 %11266 to i32
  tail call void @_ZN2v88internal9Assembler3vpdEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %11249, i8 zeroext -62, i32 %11253, i32 %11262, i32 %11267) #11
  %11268 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %11269 = load i8*, i8** %11268, align 8
  %11270 = getelementptr inbounds i8, i8* %11269, i64 1
  store i8* %11270, i8** %11268, align 8
  store i8 1, i8* %11269, align 1
  br label %23402

11271:                                            ; preds = %11245
  %11272 = add nuw nsw i64 %11257, 1
  %11273 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11272, i32 0
  %11274 = load i64, i64* %11273, align 8
  %11275 = ashr i64 %11274, 35
  %11276 = trunc i64 %11275 to i32
  tail call void @_ZN2v88internal9Assembler5cmppdENS0_11XMMRegisterES2_a(%"class.v8::internal::Assembler"* %11249, i32 %11253, i32 %11276, i8 signext 1) #11
  br label %23402

11277:                                            ; preds = %2
  %11278 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11279 = and i32 %11278, 32
  %11280 = icmp eq i32 %11279, 0
  %11281 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %11282 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11283 = load i64, i64* %11282, align 8
  %11284 = ashr i64 %11283, 35
  %11285 = trunc i64 %11284 to i32
  %11286 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11287 = load i32, i32* %11286, align 4
  %11288 = and i32 %11287, 255
  %11289 = zext i32 %11288 to i64
  br i1 %11280, label %11303, label %11290

11290:                                            ; preds = %11277
  %11291 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11289, i32 0
  %11292 = load i64, i64* %11291, align 8
  %11293 = ashr i64 %11292, 35
  %11294 = trunc i64 %11293 to i32
  %11295 = add nuw nsw i64 %11289, 1
  %11296 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11295, i32 0
  %11297 = load i64, i64* %11296, align 8
  %11298 = ashr i64 %11297, 35
  %11299 = trunc i64 %11298 to i32
  tail call void @_ZN2v88internal9Assembler3vpdEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %11281, i8 zeroext -62, i32 %11285, i32 %11294, i32 %11299) #11
  %11300 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %11301 = load i8*, i8** %11300, align 8
  %11302 = getelementptr inbounds i8, i8* %11301, i64 1
  store i8* %11302, i8** %11300, align 8
  store i8 2, i8* %11301, align 1
  br label %23402

11303:                                            ; preds = %11277
  %11304 = add nuw nsw i64 %11289, 1
  %11305 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11304, i32 0
  %11306 = load i64, i64* %11305, align 8
  %11307 = ashr i64 %11306, 35
  %11308 = trunc i64 %11307 to i32
  tail call void @_ZN2v88internal9Assembler5cmppdENS0_11XMMRegisterES2_a(%"class.v8::internal::Assembler"* %11281, i32 %11285, i32 %11308, i8 signext 2) #11
  br label %23402

11309:                                            ; preds = %2
  %11310 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11311 = trunc i32 %11310 to i8
  %11312 = icmp slt i8 %11311, 0
  %11313 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  br i1 %11312, label %11314, label %11334

11314:                                            ; preds = %11309
  %11315 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %11313, i64 0, i32 0, i32 0, i32 0
  %11316 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11317 = load i64, i64* %11316, align 8
  %11318 = ashr i64 %11317, 35
  %11319 = trunc i64 %11318 to i32
  %11320 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11321 = load i32, i32* %11320, align 4
  %11322 = and i32 %11321, 255
  %11323 = zext i32 %11322 to i64
  %11324 = add nuw nsw i64 %11323, 1
  %11325 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11324, i32 0
  %11326 = load i64, i64* %11325, align 8
  %11327 = ashr i64 %11326, 35
  %11328 = trunc i64 %11327 to i32
  %11329 = add nuw nsw i64 %11323, 2
  %11330 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11329, i32 0
  %11331 = load i64, i64* %11330, align 8
  %11332 = ashr i64 %11331, 35
  %11333 = trunc i64 %11332 to i32
  tail call void @_ZN2v88internal9Assembler9fma_instrEhNS0_11XMMRegisterES2_S2_NS1_12VectorLengthENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWE(%"class.v8::internal::Assembler"* %11315, i8 zeroext -72, i32 %11319, i32 %11328, i32 %11333, i32 0, i32 1, i32 2, i32 128) #11
  br label %23402

11334:                                            ; preds = %11309
  %11335 = bitcast %"class.v8::internal::TurboAssembler"* %11313 to %"class.v8::internal::SharedTurboAssembler"*
  %11336 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11337 = load i32, i32* %11336, align 4
  %11338 = and i32 %11337, 255
  %11339 = add nuw nsw i32 %11338, 2
  %11340 = zext i32 %11339 to i64
  %11341 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11340, i32 0
  %11342 = load i64, i64* %11341, align 8
  %11343 = ashr i64 %11342, 35
  %11344 = trunc i64 %11343 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler6MovapdENS0_11XMMRegisterES2_(%"class.v8::internal::SharedTurboAssembler"* %11335, i32 15, i32 %11344) #11
  %11345 = load i32, i32* %11336, align 4
  %11346 = and i32 %11345, 255
  %11347 = add nuw nsw i32 %11346, 1
  %11348 = zext i32 %11347 to i64
  %11349 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11348, i32 0
  %11350 = load i64, i64* %11349, align 8
  %11351 = ashr i64 %11350, 35
  %11352 = trunc i64 %11351 to i32
  %11353 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %11313, i64 0, i32 0, i32 0, i32 0
  %11354 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11355 = and i32 %11354, 32
  %11356 = icmp eq i32 %11355, 0
  br i1 %11356, label %11358, label %11357

11357:                                            ; preds = %11334
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %11353, i8 zeroext 89, i32 15, i32 15, i32 %11352, i32 1, i32 1, i32 0, i32 5) #11
  br label %11359

11358:                                            ; preds = %11334
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %11353, i32 15, i32 %11352, i8 zeroext 102, i8 zeroext 15, i8 zeroext 89) #11
  br label %11359

11359:                                            ; preds = %11357, %11358
  %11360 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11361 = load i64, i64* %11360, align 8
  %11362 = ashr i64 %11361, 35
  %11363 = trunc i64 %11362 to i32
  %11364 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11365 = and i32 %11364, 32
  %11366 = icmp eq i32 %11365, 0
  br i1 %11366, label %11368, label %11367

11367:                                            ; preds = %11359
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %11353, i8 zeroext 88, i32 %11363, i32 %11363, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

11368:                                            ; preds = %11359
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %11353, i32 %11363, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 88) #11
  br label %23402

11369:                                            ; preds = %2
  %11370 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11371 = trunc i32 %11370 to i8
  %11372 = icmp slt i8 %11371, 0
  %11373 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  br i1 %11372, label %11374, label %11394

11374:                                            ; preds = %11369
  %11375 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %11373, i64 0, i32 0, i32 0, i32 0
  %11376 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11377 = load i64, i64* %11376, align 8
  %11378 = ashr i64 %11377, 35
  %11379 = trunc i64 %11378 to i32
  %11380 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11381 = load i32, i32* %11380, align 4
  %11382 = and i32 %11381, 255
  %11383 = zext i32 %11382 to i64
  %11384 = add nuw nsw i64 %11383, 1
  %11385 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11384, i32 0
  %11386 = load i64, i64* %11385, align 8
  %11387 = ashr i64 %11386, 35
  %11388 = trunc i64 %11387 to i32
  %11389 = add nuw nsw i64 %11383, 2
  %11390 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11389, i32 0
  %11391 = load i64, i64* %11390, align 8
  %11392 = ashr i64 %11391, 35
  %11393 = trunc i64 %11392 to i32
  tail call void @_ZN2v88internal9Assembler9fma_instrEhNS0_11XMMRegisterES2_S2_NS1_12VectorLengthENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWE(%"class.v8::internal::Assembler"* %11375, i8 zeroext -68, i32 %11379, i32 %11388, i32 %11393, i32 0, i32 1, i32 2, i32 128) #11
  br label %23402

11394:                                            ; preds = %11369
  %11395 = bitcast %"class.v8::internal::TurboAssembler"* %11373 to %"class.v8::internal::SharedTurboAssembler"*
  %11396 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11397 = load i32, i32* %11396, align 4
  %11398 = and i32 %11397, 255
  %11399 = add nuw nsw i32 %11398, 2
  %11400 = zext i32 %11399 to i64
  %11401 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11400, i32 0
  %11402 = load i64, i64* %11401, align 8
  %11403 = ashr i64 %11402, 35
  %11404 = trunc i64 %11403 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler6MovapdENS0_11XMMRegisterES2_(%"class.v8::internal::SharedTurboAssembler"* %11395, i32 15, i32 %11404) #11
  %11405 = load i32, i32* %11396, align 4
  %11406 = and i32 %11405, 255
  %11407 = add nuw nsw i32 %11406, 1
  %11408 = zext i32 %11407 to i64
  %11409 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11408, i32 0
  %11410 = load i64, i64* %11409, align 8
  %11411 = ashr i64 %11410, 35
  %11412 = trunc i64 %11411 to i32
  %11413 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %11373, i64 0, i32 0, i32 0, i32 0
  %11414 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11415 = and i32 %11414, 32
  %11416 = icmp eq i32 %11415, 0
  br i1 %11416, label %11418, label %11417

11417:                                            ; preds = %11394
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %11413, i8 zeroext 89, i32 15, i32 15, i32 %11412, i32 1, i32 1, i32 0, i32 5) #11
  br label %11419

11418:                                            ; preds = %11394
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %11413, i32 15, i32 %11412, i8 zeroext 102, i8 zeroext 15, i8 zeroext 89) #11
  br label %11419

11419:                                            ; preds = %11417, %11418
  %11420 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11421 = load i64, i64* %11420, align 8
  %11422 = ashr i64 %11421, 35
  %11423 = trunc i64 %11422 to i32
  %11424 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11425 = and i32 %11424, 32
  %11426 = icmp eq i32 %11425, 0
  br i1 %11426, label %11428, label %11427

11427:                                            ; preds = %11419
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %11413, i8 zeroext 92, i32 %11423, i32 %11423, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

11428:                                            ; preds = %11419
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %11413, i32 %11423, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 92) #11
  br label %23402

11429:                                            ; preds = %2
  %11430 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11431 = load i64, i64* %11430, align 8
  %11432 = ashr i64 %11431, 35
  %11433 = trunc i64 %11432 to i32
  %11434 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11435 = load i32, i32* %11434, align 4
  %11436 = and i32 %11435, 255
  %11437 = zext i32 %11436 to i64
  %11438 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11437, i32 0
  %11439 = load i64, i64* %11438, align 8
  %11440 = ashr i64 %11439, 35
  %11441 = trunc i64 %11440 to i32
  %11442 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %11443 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11444 = and i32 %11443, 32
  %11445 = icmp eq i32 %11444, 0
  br i1 %11445, label %11447, label %11446

11446:                                            ; preds = %11429
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %11442, i8 zeroext -26, i32 %11433, i32 0, i32 %11441, i32 2, i32 1, i32 0, i32 5) #11
  br label %23402

11447:                                            ; preds = %11429
  tail call void @_ZN2v88internal9Assembler8cvtdq2pdENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %11442, i32 %11433, i32 %11441) #11
  br label %23402

11448:                                            ; preds = %2
  %11449 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %11450 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11451 = load i64, i64* %11450, align 8
  %11452 = ashr i64 %11451, 35
  %11453 = trunc i64 %11452 to i32
  %11454 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11455 = load i32, i32* %11454, align 4
  %11456 = and i32 %11455, 255
  %11457 = zext i32 %11456 to i64
  %11458 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11457, i32 0
  %11459 = load i64, i64* %11458, align 8
  %11460 = ashr i64 %11459, 35
  %11461 = trunc i64 %11460 to i32
  tail call void @_ZN2v88internal14TurboAssembler21F64x2ConvertLowI32x4UENS0_11XMMRegisterES2_(%"class.v8::internal::TurboAssembler"* %11449, i32 %11453, i32 %11461) #11
  br label %23402

11462:                                            ; preds = %2
  %11463 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11464 = load i64, i64* %11463, align 8
  %11465 = ashr i64 %11464, 35
  %11466 = trunc i64 %11465 to i32
  %11467 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11468 = load i32, i32* %11467, align 4
  %11469 = and i32 %11468, 255
  %11470 = zext i32 %11469 to i64
  %11471 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11470, i32 0
  %11472 = load i64, i64* %11471, align 8
  %11473 = ashr i64 %11472, 35
  %11474 = trunc i64 %11473 to i32
  %11475 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %11476 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11477 = and i32 %11476, 32
  %11478 = icmp eq i32 %11477, 0
  br i1 %11478, label %11480, label %11479

11479:                                            ; preds = %11462
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %11475, i8 zeroext 90, i32 %11466, i32 0, i32 %11474) #11
  br label %23402

11480:                                            ; preds = %11462
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %11475, i32 %11466, i32 %11474, i8 zeroext 15, i8 zeroext 90) #11
  br label %23402

11481:                                            ; preds = %2
  %11482 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11483 = load i64, i64* %11482, align 8
  %11484 = ashr i64 %11483, 35
  %11485 = trunc i64 %11484 to i32
  %11486 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11487 = load i32, i32* %11486, align 4
  %11488 = and i32 %11487, 255
  %11489 = zext i32 %11488 to i64
  %11490 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11489, i32 0
  %11491 = load i64, i64* %11490, align 8
  %11492 = ashr i64 %11491, 35
  %11493 = trunc i64 %11492 to i32
  %11494 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %11495 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11496 = and i32 %11495, 32
  %11497 = icmp eq i32 %11496, 0
  br i1 %11497, label %11499, label %11498

11498:                                            ; preds = %11481
  tail call void @_ZN2v88internal9Assembler3vpdEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %11494, i8 zeroext 90, i32 %11485, i32 0, i32 %11493) #11
  br label %23402

11499:                                            ; preds = %11481
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %11494, i32 %11485, i32 %11493, i8 zeroext 102, i8 zeroext 15, i8 zeroext 90) #11
  br label %23402

11500:                                            ; preds = %2
  %11501 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %11502 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11503 = load i64, i64* %11502, align 8
  %11504 = ashr i64 %11503, 35
  %11505 = trunc i64 %11504 to i32
  %11506 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11507 = load i32, i32* %11506, align 4
  %11508 = and i32 %11507, 255
  %11509 = zext i32 %11508 to i64
  %11510 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11509, i32 0
  %11511 = load i64, i64* %11510, align 8
  %11512 = ashr i64 %11511, 35
  %11513 = trunc i64 %11512 to i32
  tail call void @_ZN2v88internal14TurboAssembler23I32x4TruncSatF64x2SZeroENS0_11XMMRegisterES2_(%"class.v8::internal::TurboAssembler"* %11501, i32 %11505, i32 %11513) #11
  br label %23402

11514:                                            ; preds = %2
  %11515 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %11516 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11517 = load i64, i64* %11516, align 8
  %11518 = ashr i64 %11517, 35
  %11519 = trunc i64 %11518 to i32
  %11520 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11521 = load i32, i32* %11520, align 4
  %11522 = and i32 %11521, 255
  %11523 = zext i32 %11522 to i64
  %11524 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11523, i32 0
  %11525 = load i64, i64* %11524, align 8
  %11526 = ashr i64 %11525, 35
  %11527 = trunc i64 %11526 to i32
  tail call void @_ZN2v88internal14TurboAssembler23I32x4TruncSatF64x2UZeroENS0_11XMMRegisterES2_(%"class.v8::internal::TurboAssembler"* %11515, i32 %11519, i32 %11527) #11
  br label %23402

11528:                                            ; preds = %2
  %11529 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %11530 = bitcast %"class.v8::internal::TurboAssembler"* %11529 to %"class.v8::internal::SharedTurboAssembler"*
  %11531 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11532 = load i64, i64* %11531, align 8
  %11533 = ashr i64 %11532, 35
  %11534 = trunc i64 %11533 to i32
  %11535 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11536 = load i32, i32* %11535, align 4
  %11537 = and i32 %11536, 255
  %11538 = zext i32 %11537 to i64
  %11539 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11538, i32 0
  %11540 = load i64, i64* %11539, align 8
  %11541 = ashr i64 %11540, 35
  %11542 = trunc i64 %11541 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler10F32x4SplatENS0_11XMMRegisterES2_(%"class.v8::internal::SharedTurboAssembler"* %11530, i32 %11534, i32 %11542) #11
  br label %23402

11543:                                            ; preds = %2
  %11544 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %11545 = bitcast %"class.v8::internal::TurboAssembler"* %11544 to %"class.v8::internal::SharedTurboAssembler"*
  %11546 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %11547 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11548 = load i64, i64* %11547, align 8
  %11549 = ashr i64 %11548, 35
  %11550 = trunc i64 %11549 to i32
  %11551 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11552 = load i32, i32* %11551, align 4
  %11553 = and i32 %11552, 255
  %11554 = zext i32 %11553 to i64
  %11555 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11554, i32 0
  %11556 = load i64, i64* %11555, align 8
  %11557 = ashr i64 %11556, 35
  %11558 = trunc i64 %11557 to i32
  %11559 = add nuw nsw i64 %11554, 1
  %11560 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11559
  %11561 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %11546, %"class.v8::internal::compiler::InstructionOperand"* %11560) #11
  %11562 = extractvalue { i64, i64 } %11561, 1
  %11563 = trunc i64 %11562 to i8
  call void @_ZN2v88internal20SharedTurboAssembler16F32x4ExtractLaneENS0_11XMMRegisterES2_h(%"class.v8::internal::SharedTurboAssembler"* %11545, i32 %11550, i32 %11558, i8 zeroext %11563) #11
  br label %23402

11564:                                            ; preds = %2
  %11565 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %11566 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11567 = load i32, i32* %11566, align 4
  %11568 = and i32 %11567, 255
  %11569 = add nuw nsw i32 %11568, 1
  %11570 = zext i32 %11569 to i64
  %11571 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11570
  %11572 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %11565, %"class.v8::internal::compiler::InstructionOperand"* %11571) #11
  %11573 = extractvalue { i64, i64 } %11572, 1
  %11574 = trunc i64 %11573 to i8
  %11575 = shl i8 %11574, 4
  %11576 = and i8 %11575, 48
  %11577 = load i32, i32* %11566, align 4
  %11578 = and i32 %11577, 255
  %11579 = add nuw nsw i32 %11578, 2
  %11580 = zext i32 %11579 to i64
  %11581 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11580, i32 0
  %11582 = load i64, i64* %11581, align 8
  %11583 = and i64 %11582, 7
  %11584 = icmp ugt i64 %11583, 4
  %11585 = and i64 %11582, 24
  %11586 = icmp eq i64 %11585, 0
  %11587 = and i1 %11584, %11586
  br i1 %11587, label %11594, label %11588

11588:                                            ; preds = %11564
  %11589 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %11590 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %11589, i64 0, i32 5, i64 0, i32 0
  %11591 = load i64, i64* %11590, align 8
  %11592 = ashr i64 %11591, 35
  %11593 = trunc i64 %11592 to i32
  br label %11622

11594:                                            ; preds = %11564
  %11595 = lshr i64 %11582, 5
  %11596 = trunc i64 %11595 to i8
  %11597 = icmp ugt i8 %11596, 11
  %11598 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %11599 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %11598, i64 0, i32 5, i64 0, i32 0
  %11600 = load i64, i64* %11599, align 8
  %11601 = ashr i64 %11600, 35
  %11602 = trunc i64 %11601 to i32
  br i1 %11597, label %11603, label %11622

11603:                                            ; preds = %11594
  %11604 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %11598, i64 0, i32 1
  %11605 = load i32, i32* %11604, align 4
  %11606 = and i32 %11605, 255
  %11607 = add nuw nsw i32 %11606, 2
  %11608 = zext i32 %11607 to i64
  %11609 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %11598, i64 0, i32 5, i64 %11608, i32 0
  %11610 = load i64, i64* %11609, align 8
  %11611 = ashr i64 %11610, 35
  %11612 = trunc i64 %11611 to i32
  %11613 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %11614 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11615 = and i32 %11614, 32
  %11616 = icmp eq i32 %11615, 0
  br i1 %11616, label %11621, label %11617

11617:                                            ; preds = %11603
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %11613, i8 zeroext 33, i32 %11602, i32 %11602, i32 %11612, i32 1, i32 3, i32 0, i32 5) #11
  %11618 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %11619 = load i8*, i8** %11618, align 8
  %11620 = getelementptr inbounds i8, i8* %11619, i64 1
  store i8* %11620, i8** %11618, align 8
  store i8 %11576, i8* %11619, align 1
  br label %23402

11621:                                            ; preds = %11603
  call void @_ZN2v88internal9Assembler8insertpsENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %11613, i32 %11602, i32 %11612, i8 zeroext %11576) #11
  br label %23402

11622:                                            ; preds = %11588, %11594
  %11623 = phi %"class.v8::internal::compiler::Instruction"* [ %11589, %11588 ], [ %11598, %11594 ]
  %11624 = phi i32 [ %11593, %11588 ], [ %11602, %11594 ]
  %11625 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %11623, i64 0, i32 1
  %11626 = load i32, i32* %11625, align 4
  %11627 = and i32 %11626, 255
  %11628 = add nuw nsw i32 %11627, 2
  %11629 = zext i32 %11628 to i64
  %11630 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %11623, i64 0, i32 5, i64 %11629, i32 0
  %11631 = load i64, i64* %11630, align 8
  %11632 = ashr i64 %11631, 35
  %11633 = trunc i64 %11632 to i32
  %11634 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %11633, i32 0) #11
  %11635 = extractvalue { i64, i32 } %11634, 0
  %11636 = extractvalue { i64, i32 } %11634, 1
  %11637 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %11638 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11639 = and i32 %11638, 32
  %11640 = icmp eq i32 %11639, 0
  br i1 %11640, label %11645, label %11641

11641:                                            ; preds = %11622
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %11637, i8 zeroext 33, i32 %11624, i32 %11624, i64 %11635, i32 %11636, i32 1, i32 3, i32 0, i32 5) #11
  %11642 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %11643 = load i8*, i8** %11642, align 8
  %11644 = getelementptr inbounds i8, i8* %11643, i64 1
  store i8* %11644, i8** %11642, align 8
  store i8 %11576, i8* %11643, align 1
  br label %23402

11645:                                            ; preds = %11622
  call void @_ZN2v88internal9Assembler8insertpsENS0_11XMMRegisterENS0_7OperandEh(%"class.v8::internal::Assembler"* %11637, i32 %11624, i64 %11635, i32 %11636, i8 zeroext %11576) #11
  br label %23402

11646:                                            ; preds = %2
  %11647 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11648 = load i64, i64* %11647, align 8
  %11649 = ashr i64 %11648, 35
  %11650 = trunc i64 %11649 to i32
  %11651 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11652 = load i32, i32* %11651, align 4
  %11653 = and i32 %11652, 255
  %11654 = zext i32 %11653 to i64
  %11655 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11654, i32 0
  %11656 = load i64, i64* %11655, align 8
  %11657 = ashr i64 %11656, 35
  %11658 = trunc i64 %11657 to i32
  %11659 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %11660 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11661 = and i32 %11660, 32
  %11662 = icmp eq i32 %11661, 0
  br i1 %11662, label %11664, label %11663

11663:                                            ; preds = %11646
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %11659, i8 zeroext 91, i32 %11650, i32 0, i32 %11658) #11
  br label %23402

11664:                                            ; preds = %11646
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %11659, i32 %11650, i32 %11658, i8 zeroext 15, i8 zeroext 91) #11
  br label %23402

11665:                                            ; preds = %2
  %11666 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11667 = load i64, i64* %11666, align 8
  %11668 = ashr i64 %11667, 35
  %11669 = trunc i64 %11668 to i32
  %11670 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %11671 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11672 = and i32 %11671, 32
  %11673 = icmp eq i32 %11672, 0
  br i1 %11673, label %11675, label %11674

11674:                                            ; preds = %11665
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %11670, i8 zeroext -17, i32 15, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %11676

11675:                                            ; preds = %11665
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %11670, i32 15, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -17) #11
  br label %11676

11676:                                            ; preds = %11674, %11675
  %11677 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11678 = and i32 %11677, 32
  %11679 = icmp eq i32 %11678, 0
  br i1 %11679, label %11684, label %11680

11680:                                            ; preds = %11676
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %11670, i8 zeroext 14, i32 15, i32 15, i32 %11669, i32 1, i32 3, i32 0, i32 5) #11
  %11681 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %11682 = load i8*, i8** %11681, align 8
  %11683 = getelementptr inbounds i8, i8* %11682, i64 1
  store i8* %11683, i8** %11681, align 8
  store i8 85, i8* %11682, align 1
  br label %11685

11684:                                            ; preds = %11676
  tail call void @_ZN2v88internal9Assembler7pblendwENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %11670, i32 15, i32 %11669, i8 zeroext 85) #11
  br label %11685

11685:                                            ; preds = %11680, %11684
  %11686 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11687 = and i32 %11686, 32
  %11688 = icmp eq i32 %11687, 0
  br i1 %11688, label %11690, label %11689

11689:                                            ; preds = %11685
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %11670, i8 zeroext -6, i32 %11669, i32 %11669, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %11691

11690:                                            ; preds = %11685
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %11670, i32 %11669, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -6) #11
  br label %11691

11691:                                            ; preds = %11689, %11690
  %11692 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11693 = and i32 %11692, 32
  %11694 = icmp eq i32 %11693, 0
  br i1 %11694, label %11696, label %11695

11695:                                            ; preds = %11691
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %11670, i8 zeroext 91, i32 15, i32 0, i32 15) #11
  br label %11697

11696:                                            ; preds = %11691
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %11670, i32 15, i32 15, i8 zeroext 15, i8 zeroext 91) #11
  br label %11697

11697:                                            ; preds = %11695, %11696
  %11698 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11699 = and i32 %11698, 32
  %11700 = icmp eq i32 %11699, 0
  br i1 %11700, label %11702, label %11701

11701:                                            ; preds = %11697
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %11670, i8 zeroext 114, i32 2, i32 %11669, i32 %11669, i32 1, i32 1, i32 0, i32 5) #11
  br label %11703

11702:                                            ; preds = %11697
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %11670, i32 2, i32 %11669, i8 zeroext 102, i8 zeroext 15, i8 zeroext 114) #11
  br label %11703

11703:                                            ; preds = %11701, %11702
  %11704 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %11705 = load i8*, i8** %11704, align 8
  %11706 = getelementptr inbounds i8, i8* %11705, i64 1
  store i8* %11706, i8** %11704, align 8
  store i8 1, i8* %11705, align 1
  %11707 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11708 = and i32 %11707, 32
  %11709 = icmp eq i32 %11708, 0
  br i1 %11709, label %11711, label %11710

11710:                                            ; preds = %11703
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %11670, i8 zeroext 91, i32 %11669, i32 0, i32 %11669) #11
  br label %11712

11711:                                            ; preds = %11703
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %11670, i32 %11669, i32 %11669, i8 zeroext 15, i8 zeroext 91) #11
  br label %11712

11712:                                            ; preds = %11710, %11711
  %11713 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11714 = and i32 %11713, 32
  %11715 = icmp eq i32 %11714, 0
  br i1 %11715, label %11717, label %11716

11716:                                            ; preds = %11712
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %11670, i8 zeroext 88, i32 %11669, i32 %11669, i32 %11669) #11
  br label %11718

11717:                                            ; preds = %11712
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %11670, i32 %11669, i32 %11669, i8 zeroext 15, i8 zeroext 88) #11
  br label %11718

11718:                                            ; preds = %11716, %11717
  %11719 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11720 = and i32 %11719, 32
  %11721 = icmp eq i32 %11720, 0
  br i1 %11721, label %11723, label %11722

11722:                                            ; preds = %11718
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %11670, i8 zeroext 88, i32 %11669, i32 %11669, i32 15) #11
  br label %23402

11723:                                            ; preds = %11718
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %11670, i32 %11669, i32 15, i8 zeroext 15, i8 zeroext 88) #11
  br label %23402

11724:                                            ; preds = %2
  %11725 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11726 = load i64, i64* %11725, align 8
  %11727 = ashr i64 %11726, 35
  %11728 = trunc i64 %11727 to i32
  %11729 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11730 = load i32, i32* %11729, align 4
  %11731 = and i32 %11730, 255
  %11732 = zext i32 %11731 to i64
  %11733 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11732, i32 0
  %11734 = load i64, i64* %11733, align 8
  %11735 = ashr i64 %11734, 35
  %11736 = trunc i64 %11735 to i32
  %11737 = icmp eq i32 %11728, %11736
  %11738 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %11739 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11740 = and i32 %11739, 32
  %11741 = icmp eq i32 %11740, 0
  br i1 %11737, label %11742, label %11760

11742:                                            ; preds = %11724
  br i1 %11741, label %11744, label %11743

11743:                                            ; preds = %11742
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %11738, i8 zeroext 118, i32 15, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %11745

11744:                                            ; preds = %11742
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %11738, i32 15, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 118) #11
  br label %11745

11745:                                            ; preds = %11743, %11744
  %11746 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11747 = and i32 %11746, 32
  %11748 = icmp eq i32 %11747, 0
  br i1 %11748, label %11750, label %11749

11749:                                            ; preds = %11745
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %11738, i8 zeroext 114, i32 2, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %11751

11750:                                            ; preds = %11745
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %11738, i32 2, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 114) #11
  br label %11751

11751:                                            ; preds = %11749, %11750
  %11752 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %11753 = load i8*, i8** %11752, align 8
  %11754 = getelementptr inbounds i8, i8* %11753, i64 1
  store i8* %11754, i8** %11752, align 8
  store i8 1, i8* %11753, align 1
  %11755 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11756 = and i32 %11755, 32
  %11757 = icmp eq i32 %11756, 0
  br i1 %11757, label %11759, label %11758

11758:                                            ; preds = %11751
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %11738, i8 zeroext 84, i32 %11728, i32 %11728, i32 15) #11
  br label %23402

11759:                                            ; preds = %11751
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %11738, i32 %11728, i32 15, i8 zeroext 15, i8 zeroext 84) #11
  br label %23402

11760:                                            ; preds = %11724
  br i1 %11741, label %11762, label %11761

11761:                                            ; preds = %11760
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %11738, i8 zeroext 118, i32 %11728, i32 %11728, i32 %11728, i32 1, i32 1, i32 0, i32 5) #11
  br label %11763

11762:                                            ; preds = %11760
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %11738, i32 %11728, i32 %11728, i8 zeroext 102, i8 zeroext 15, i8 zeroext 118) #11
  br label %11763

11763:                                            ; preds = %11761, %11762
  %11764 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11765 = and i32 %11764, 32
  %11766 = icmp eq i32 %11765, 0
  br i1 %11766, label %11768, label %11767

11767:                                            ; preds = %11763
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %11738, i8 zeroext 114, i32 2, i32 %11728, i32 %11728, i32 1, i32 1, i32 0, i32 5) #11
  br label %11769

11768:                                            ; preds = %11763
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %11738, i32 2, i32 %11728, i8 zeroext 102, i8 zeroext 15, i8 zeroext 114) #11
  br label %11769

11769:                                            ; preds = %11767, %11768
  %11770 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %11771 = load i8*, i8** %11770, align 8
  %11772 = getelementptr inbounds i8, i8* %11771, i64 1
  store i8* %11772, i8** %11770, align 8
  store i8 1, i8* %11771, align 1
  %11773 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11774 = and i32 %11773, 32
  %11775 = icmp eq i32 %11774, 0
  br i1 %11775, label %11777, label %11776

11776:                                            ; preds = %11769
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %11738, i8 zeroext 84, i32 %11728, i32 %11728, i32 %11736) #11
  br label %23402

11777:                                            ; preds = %11769
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %11738, i32 %11728, i32 %11736, i8 zeroext 15, i8 zeroext 84) #11
  br label %23402

11778:                                            ; preds = %2
  %11779 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11780 = load i64, i64* %11779, align 8
  %11781 = ashr i64 %11780, 35
  %11782 = trunc i64 %11781 to i32
  %11783 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11784 = load i32, i32* %11783, align 4
  %11785 = and i32 %11784, 255
  %11786 = zext i32 %11785 to i64
  %11787 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11786, i32 0
  %11788 = load i64, i64* %11787, align 8
  %11789 = ashr i64 %11788, 35
  %11790 = trunc i64 %11789 to i32
  %11791 = icmp eq i32 %11782, %11790
  %11792 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %11793 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11794 = and i32 %11793, 32
  %11795 = icmp eq i32 %11794, 0
  br i1 %11791, label %11796, label %11814

11796:                                            ; preds = %11778
  br i1 %11795, label %11798, label %11797

11797:                                            ; preds = %11796
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %11792, i8 zeroext 118, i32 15, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %11799

11798:                                            ; preds = %11796
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %11792, i32 15, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 118) #11
  br label %11799

11799:                                            ; preds = %11797, %11798
  %11800 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11801 = and i32 %11800, 32
  %11802 = icmp eq i32 %11801, 0
  br i1 %11802, label %11804, label %11803

11803:                                            ; preds = %11799
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %11792, i8 zeroext 114, i32 6, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %11805

11804:                                            ; preds = %11799
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %11792, i32 6, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 114) #11
  br label %11805

11805:                                            ; preds = %11803, %11804
  %11806 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %11807 = load i8*, i8** %11806, align 8
  %11808 = getelementptr inbounds i8, i8* %11807, i64 1
  store i8* %11808, i8** %11806, align 8
  store i8 31, i8* %11807, align 1
  %11809 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11810 = and i32 %11809, 32
  %11811 = icmp eq i32 %11810, 0
  br i1 %11811, label %11813, label %11812

11812:                                            ; preds = %11805
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %11792, i8 zeroext 87, i32 %11782, i32 %11782, i32 15) #11
  br label %23402

11813:                                            ; preds = %11805
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %11792, i32 %11782, i32 15, i8 zeroext 15, i8 zeroext 87) #11
  br label %23402

11814:                                            ; preds = %11778
  br i1 %11795, label %11816, label %11815

11815:                                            ; preds = %11814
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %11792, i8 zeroext 118, i32 %11782, i32 %11782, i32 %11782, i32 1, i32 1, i32 0, i32 5) #11
  br label %11817

11816:                                            ; preds = %11814
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %11792, i32 %11782, i32 %11782, i8 zeroext 102, i8 zeroext 15, i8 zeroext 118) #11
  br label %11817

11817:                                            ; preds = %11815, %11816
  %11818 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11819 = and i32 %11818, 32
  %11820 = icmp eq i32 %11819, 0
  br i1 %11820, label %11822, label %11821

11821:                                            ; preds = %11817
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %11792, i8 zeroext 114, i32 6, i32 %11782, i32 %11782, i32 1, i32 1, i32 0, i32 5) #11
  br label %11823

11822:                                            ; preds = %11817
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %11792, i32 6, i32 %11782, i8 zeroext 102, i8 zeroext 15, i8 zeroext 114) #11
  br label %11823

11823:                                            ; preds = %11821, %11822
  %11824 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %11825 = load i8*, i8** %11824, align 8
  %11826 = getelementptr inbounds i8, i8* %11825, i64 1
  store i8* %11826, i8** %11824, align 8
  store i8 31, i8* %11825, align 1
  %11827 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11828 = and i32 %11827, 32
  %11829 = icmp eq i32 %11828, 0
  br i1 %11829, label %11831, label %11830

11830:                                            ; preds = %11823
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %11792, i8 zeroext 87, i32 %11782, i32 %11782, i32 %11790) #11
  br label %23402

11831:                                            ; preds = %11823
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %11792, i32 %11782, i32 %11790, i8 zeroext 15, i8 zeroext 87) #11
  br label %23402

11832:                                            ; preds = %2
  %11833 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11834 = load i64, i64* %11833, align 8
  %11835 = ashr i64 %11834, 35
  %11836 = trunc i64 %11835 to i32
  %11837 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11838 = load i32, i32* %11837, align 4
  %11839 = and i32 %11838, 255
  %11840 = zext i32 %11839 to i64
  %11841 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11840, i32 0
  %11842 = load i64, i64* %11841, align 8
  %11843 = ashr i64 %11842, 35
  %11844 = trunc i64 %11843 to i32
  %11845 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %11846 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11847 = and i32 %11846, 32
  %11848 = icmp eq i32 %11847, 0
  br i1 %11848, label %11850, label %11849

11849:                                            ; preds = %11832
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %11845, i8 zeroext 81, i32 %11836, i32 0, i32 %11844) #11
  br label %23402

11850:                                            ; preds = %11832
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %11845, i32 %11836, i32 %11844, i8 zeroext 15, i8 zeroext 81) #11
  br label %23402

11851:                                            ; preds = %2
  %11852 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11853 = load i64, i64* %11852, align 8
  %11854 = ashr i64 %11853, 35
  %11855 = trunc i64 %11854 to i32
  %11856 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11857 = load i32, i32* %11856, align 4
  %11858 = and i32 %11857, 255
  %11859 = zext i32 %11858 to i64
  %11860 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11859, i32 0
  %11861 = load i64, i64* %11860, align 8
  %11862 = ashr i64 %11861, 35
  %11863 = trunc i64 %11862 to i32
  %11864 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %11865 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11866 = and i32 %11865, 32
  %11867 = icmp eq i32 %11866, 0
  br i1 %11867, label %11869, label %11868

11868:                                            ; preds = %11851
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %11864, i8 zeroext 83, i32 %11855, i32 0, i32 %11863) #11
  br label %23402

11869:                                            ; preds = %11851
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %11864, i32 %11855, i32 %11863, i8 zeroext 15, i8 zeroext 83) #11
  br label %23402

11870:                                            ; preds = %2
  %11871 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11872 = load i64, i64* %11871, align 8
  %11873 = ashr i64 %11872, 35
  %11874 = trunc i64 %11873 to i32
  %11875 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11876 = load i32, i32* %11875, align 4
  %11877 = and i32 %11876, 255
  %11878 = zext i32 %11877 to i64
  %11879 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11878, i32 0
  %11880 = load i64, i64* %11879, align 8
  %11881 = ashr i64 %11880, 35
  %11882 = trunc i64 %11881 to i32
  %11883 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %11884 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11885 = and i32 %11884, 32
  %11886 = icmp eq i32 %11885, 0
  br i1 %11886, label %11888, label %11887

11887:                                            ; preds = %11870
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %11883, i8 zeroext 82, i32 %11874, i32 0, i32 %11882) #11
  br label %23402

11888:                                            ; preds = %11870
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %11883, i32 %11874, i32 %11882, i8 zeroext 15, i8 zeroext 82) #11
  br label %23402

11889:                                            ; preds = %2
  %11890 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11891 = and i32 %11890, 32
  %11892 = icmp eq i32 %11891, 0
  %11893 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %11894 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11895 = load i64, i64* %11894, align 8
  %11896 = ashr i64 %11895, 35
  %11897 = trunc i64 %11896 to i32
  %11898 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11899 = load i32, i32* %11898, align 4
  %11900 = and i32 %11899, 255
  %11901 = zext i32 %11900 to i64
  br i1 %11892, label %11912, label %11902

11902:                                            ; preds = %11889
  %11903 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11901, i32 0
  %11904 = load i64, i64* %11903, align 8
  %11905 = ashr i64 %11904, 35
  %11906 = trunc i64 %11905 to i32
  %11907 = add nuw nsw i64 %11901, 1
  %11908 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11907, i32 0
  %11909 = load i64, i64* %11908, align 8
  %11910 = ashr i64 %11909, 35
  %11911 = trunc i64 %11910 to i32
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %11893, i8 zeroext 88, i32 %11897, i32 %11906, i32 %11911) #11
  br label %23402

11912:                                            ; preds = %11889
  %11913 = add nuw nsw i64 %11901, 1
  %11914 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11913, i32 0
  %11915 = load i64, i64* %11914, align 8
  %11916 = ashr i64 %11915, 35
  %11917 = trunc i64 %11916 to i32
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %11893, i32 %11897, i32 %11917, i8 zeroext 15, i8 zeroext 88) #11
  br label %23402

11918:                                            ; preds = %2
  %11919 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11920 = and i32 %11919, 32
  %11921 = icmp eq i32 %11920, 0
  %11922 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %11923 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11924 = load i64, i64* %11923, align 8
  %11925 = ashr i64 %11924, 35
  %11926 = trunc i64 %11925 to i32
  %11927 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11928 = load i32, i32* %11927, align 4
  %11929 = and i32 %11928, 255
  %11930 = zext i32 %11929 to i64
  br i1 %11921, label %11941, label %11931

11931:                                            ; preds = %11918
  %11932 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11930, i32 0
  %11933 = load i64, i64* %11932, align 8
  %11934 = ashr i64 %11933, 35
  %11935 = trunc i64 %11934 to i32
  %11936 = add nuw nsw i64 %11930, 1
  %11937 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11936, i32 0
  %11938 = load i64, i64* %11937, align 8
  %11939 = ashr i64 %11938, 35
  %11940 = trunc i64 %11939 to i32
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %11922, i8 zeroext 92, i32 %11926, i32 %11935, i32 %11940) #11
  br label %23402

11941:                                            ; preds = %11918
  %11942 = add nuw nsw i64 %11930, 1
  %11943 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11942, i32 0
  %11944 = load i64, i64* %11943, align 8
  %11945 = ashr i64 %11944, 35
  %11946 = trunc i64 %11945 to i32
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %11922, i32 %11926, i32 %11946, i8 zeroext 15, i8 zeroext 92) #11
  br label %23402

11947:                                            ; preds = %2
  %11948 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11949 = and i32 %11948, 32
  %11950 = icmp eq i32 %11949, 0
  %11951 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %11952 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11953 = load i64, i64* %11952, align 8
  %11954 = ashr i64 %11953, 35
  %11955 = trunc i64 %11954 to i32
  %11956 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11957 = load i32, i32* %11956, align 4
  %11958 = and i32 %11957, 255
  %11959 = zext i32 %11958 to i64
  br i1 %11950, label %11970, label %11960

11960:                                            ; preds = %11947
  %11961 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11959, i32 0
  %11962 = load i64, i64* %11961, align 8
  %11963 = ashr i64 %11962, 35
  %11964 = trunc i64 %11963 to i32
  %11965 = add nuw nsw i64 %11959, 1
  %11966 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11965, i32 0
  %11967 = load i64, i64* %11966, align 8
  %11968 = ashr i64 %11967, 35
  %11969 = trunc i64 %11968 to i32
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %11951, i8 zeroext 89, i32 %11955, i32 %11964, i32 %11969) #11
  br label %23402

11970:                                            ; preds = %11947
  %11971 = add nuw nsw i64 %11959, 1
  %11972 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11971, i32 0
  %11973 = load i64, i64* %11972, align 8
  %11974 = ashr i64 %11973, 35
  %11975 = trunc i64 %11974 to i32
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %11951, i32 %11955, i32 %11975, i8 zeroext 15, i8 zeroext 89) #11
  br label %23402

11976:                                            ; preds = %2
  %11977 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %11978 = and i32 %11977, 32
  %11979 = icmp eq i32 %11978, 0
  %11980 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %11981 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %11982 = load i64, i64* %11981, align 8
  %11983 = ashr i64 %11982, 35
  %11984 = trunc i64 %11983 to i32
  %11985 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %11986 = load i32, i32* %11985, align 4
  %11987 = and i32 %11986, 255
  %11988 = zext i32 %11987 to i64
  br i1 %11979, label %11999, label %11989

11989:                                            ; preds = %11976
  %11990 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11988, i32 0
  %11991 = load i64, i64* %11990, align 8
  %11992 = ashr i64 %11991, 35
  %11993 = trunc i64 %11992 to i32
  %11994 = add nuw nsw i64 %11988, 1
  %11995 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %11994, i32 0
  %11996 = load i64, i64* %11995, align 8
  %11997 = ashr i64 %11996, 35
  %11998 = trunc i64 %11997 to i32
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %11980, i8 zeroext 94, i32 %11984, i32 %11993, i32 %11998) #11
  br label %23402

11999:                                            ; preds = %11976
  %12000 = add nuw nsw i64 %11988, 1
  %12001 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12000, i32 0
  %12002 = load i64, i64* %12001, align 8
  %12003 = ashr i64 %12002, 35
  %12004 = trunc i64 %12003 to i32
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %11980, i32 %11984, i32 %12004, i8 zeroext 15, i8 zeroext 94) #11
  br label %23402

12005:                                            ; preds = %2
  %12006 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %12007 = load i32, i32* %12006, align 4
  %12008 = and i32 %12007, 255
  %12009 = add nuw nsw i32 %12008, 1
  %12010 = zext i32 %12009 to i64
  %12011 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12010, i32 0
  %12012 = load i64, i64* %12011, align 8
  %12013 = ashr i64 %12012, 35
  %12014 = trunc i64 %12013 to i32
  %12015 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %12016 = load i64, i64* %12015, align 8
  %12017 = ashr i64 %12016, 35
  %12018 = trunc i64 %12017 to i32
  %12019 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %12020 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12021 = and i32 %12020, 32
  %12022 = icmp eq i32 %12021, 0
  br i1 %12022, label %12024, label %12023

12023:                                            ; preds = %12005
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %12019, i8 zeroext 40, i32 15, i32 0, i32 %12014) #11
  br label %12025

12024:                                            ; preds = %12005
  tail call void @_ZN2v88internal9Assembler6movapsENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %12019, i32 15, i32 %12014) #11
  br label %12025

12025:                                            ; preds = %12023, %12024
  %12026 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12027 = and i32 %12026, 32
  %12028 = icmp eq i32 %12027, 0
  br i1 %12028, label %12030, label %12029

12029:                                            ; preds = %12025
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %12019, i8 zeroext 93, i32 15, i32 15, i32 %12018) #11
  br label %12031

12030:                                            ; preds = %12025
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %12019, i32 15, i32 %12018, i8 zeroext 15, i8 zeroext 93) #11
  br label %12031

12031:                                            ; preds = %12029, %12030
  %12032 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12033 = and i32 %12032, 32
  %12034 = icmp eq i32 %12033, 0
  br i1 %12034, label %12036, label %12035

12035:                                            ; preds = %12031
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %12019, i8 zeroext 93, i32 %12018, i32 %12018, i32 %12014) #11
  br label %12037

12036:                                            ; preds = %12031
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %12019, i32 %12018, i32 %12014, i8 zeroext 15, i8 zeroext 93) #11
  br label %12037

12037:                                            ; preds = %12035, %12036
  %12038 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12039 = and i32 %12038, 32
  %12040 = icmp eq i32 %12039, 0
  br i1 %12040, label %12042, label %12041

12041:                                            ; preds = %12037
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %12019, i8 zeroext 86, i32 15, i32 15, i32 %12018) #11
  br label %12043

12042:                                            ; preds = %12037
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %12019, i32 15, i32 %12018, i8 zeroext 15, i8 zeroext 86) #11
  br label %12043

12043:                                            ; preds = %12041, %12042
  %12044 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12045 = and i32 %12044, 32
  %12046 = icmp eq i32 %12045, 0
  br i1 %12046, label %12051, label %12047

12047:                                            ; preds = %12043
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %12019, i8 zeroext -62, i32 %12018, i32 %12018, i32 15) #11
  %12048 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %12049 = load i8*, i8** %12048, align 8
  %12050 = getelementptr inbounds i8, i8* %12049, i64 1
  store i8* %12050, i8** %12048, align 8
  store i8 3, i8* %12049, align 1
  br label %12052

12051:                                            ; preds = %12043
  tail call void @_ZN2v88internal9Assembler5cmppsENS0_11XMMRegisterES2_a(%"class.v8::internal::Assembler"* %12019, i32 %12018, i32 15, i8 signext 3) #11
  br label %12052

12052:                                            ; preds = %12047, %12051
  %12053 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12054 = and i32 %12053, 32
  %12055 = icmp eq i32 %12054, 0
  br i1 %12055, label %12057, label %12056

12056:                                            ; preds = %12052
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %12019, i8 zeroext 86, i32 15, i32 15, i32 %12018) #11
  br label %12058

12057:                                            ; preds = %12052
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %12019, i32 15, i32 %12018, i8 zeroext 15, i8 zeroext 86) #11
  br label %12058

12058:                                            ; preds = %12056, %12057
  %12059 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12060 = and i32 %12059, 32
  %12061 = icmp eq i32 %12060, 0
  br i1 %12061, label %12063, label %12062

12062:                                            ; preds = %12058
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %12019, i8 zeroext 114, i32 2, i32 %12018, i32 %12018, i32 1, i32 1, i32 0, i32 5) #11
  br label %12064

12063:                                            ; preds = %12058
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %12019, i32 2, i32 %12018, i8 zeroext 102, i8 zeroext 15, i8 zeroext 114) #11
  br label %12064

12064:                                            ; preds = %12062, %12063
  %12065 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %12066 = load i8*, i8** %12065, align 8
  %12067 = getelementptr inbounds i8, i8* %12066, i64 1
  store i8* %12067, i8** %12065, align 8
  store i8 10, i8* %12066, align 1
  %12068 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12069 = and i32 %12068, 32
  %12070 = icmp eq i32 %12069, 0
  br i1 %12070, label %12072, label %12071

12071:                                            ; preds = %12064
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %12019, i8 zeroext 85, i32 %12018, i32 %12018, i32 15) #11
  br label %23402

12072:                                            ; preds = %12064
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %12019, i32 %12018, i32 15, i8 zeroext 15, i8 zeroext 85) #11
  br label %23402

12073:                                            ; preds = %2
  %12074 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %12075 = load i32, i32* %12074, align 4
  %12076 = and i32 %12075, 255
  %12077 = add nuw nsw i32 %12076, 1
  %12078 = zext i32 %12077 to i64
  %12079 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12078, i32 0
  %12080 = load i64, i64* %12079, align 8
  %12081 = ashr i64 %12080, 35
  %12082 = trunc i64 %12081 to i32
  %12083 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %12084 = load i64, i64* %12083, align 8
  %12085 = ashr i64 %12084, 35
  %12086 = trunc i64 %12085 to i32
  %12087 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %12088 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12089 = and i32 %12088, 32
  %12090 = icmp eq i32 %12089, 0
  br i1 %12090, label %12092, label %12091

12091:                                            ; preds = %12073
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %12087, i8 zeroext 40, i32 15, i32 0, i32 %12082) #11
  br label %12093

12092:                                            ; preds = %12073
  tail call void @_ZN2v88internal9Assembler6movapsENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %12087, i32 15, i32 %12082) #11
  br label %12093

12093:                                            ; preds = %12091, %12092
  %12094 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12095 = and i32 %12094, 32
  %12096 = icmp eq i32 %12095, 0
  br i1 %12096, label %12098, label %12097

12097:                                            ; preds = %12093
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %12087, i8 zeroext 95, i32 15, i32 15, i32 %12086) #11
  br label %12099

12098:                                            ; preds = %12093
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %12087, i32 15, i32 %12086, i8 zeroext 15, i8 zeroext 95) #11
  br label %12099

12099:                                            ; preds = %12097, %12098
  %12100 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12101 = and i32 %12100, 32
  %12102 = icmp eq i32 %12101, 0
  br i1 %12102, label %12104, label %12103

12103:                                            ; preds = %12099
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %12087, i8 zeroext 95, i32 %12086, i32 %12086, i32 %12082) #11
  br label %12105

12104:                                            ; preds = %12099
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %12087, i32 %12086, i32 %12082, i8 zeroext 15, i8 zeroext 95) #11
  br label %12105

12105:                                            ; preds = %12103, %12104
  %12106 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12107 = and i32 %12106, 32
  %12108 = icmp eq i32 %12107, 0
  br i1 %12108, label %12110, label %12109

12109:                                            ; preds = %12105
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %12087, i8 zeroext 87, i32 %12086, i32 %12086, i32 15) #11
  br label %12111

12110:                                            ; preds = %12105
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %12087, i32 %12086, i32 15, i8 zeroext 15, i8 zeroext 87) #11
  br label %12111

12111:                                            ; preds = %12109, %12110
  %12112 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12113 = and i32 %12112, 32
  %12114 = icmp eq i32 %12113, 0
  br i1 %12114, label %12116, label %12115

12115:                                            ; preds = %12111
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %12087, i8 zeroext 86, i32 15, i32 15, i32 %12086) #11
  br label %12117

12116:                                            ; preds = %12111
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %12087, i32 15, i32 %12086, i8 zeroext 15, i8 zeroext 86) #11
  br label %12117

12117:                                            ; preds = %12115, %12116
  %12118 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12119 = and i32 %12118, 32
  %12120 = icmp eq i32 %12119, 0
  br i1 %12120, label %12122, label %12121

12121:                                            ; preds = %12117
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %12087, i8 zeroext 92, i32 15, i32 15, i32 %12086) #11
  br label %12123

12122:                                            ; preds = %12117
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %12087, i32 15, i32 %12086, i8 zeroext 15, i8 zeroext 92) #11
  br label %12123

12123:                                            ; preds = %12121, %12122
  %12124 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12125 = and i32 %12124, 32
  %12126 = icmp eq i32 %12125, 0
  br i1 %12126, label %12131, label %12127

12127:                                            ; preds = %12123
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %12087, i8 zeroext -62, i32 %12086, i32 %12086, i32 15) #11
  %12128 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %12129 = load i8*, i8** %12128, align 8
  %12130 = getelementptr inbounds i8, i8* %12129, i64 1
  store i8* %12130, i8** %12128, align 8
  store i8 3, i8* %12129, align 1
  br label %12132

12131:                                            ; preds = %12123
  tail call void @_ZN2v88internal9Assembler5cmppsENS0_11XMMRegisterES2_a(%"class.v8::internal::Assembler"* %12087, i32 %12086, i32 15, i8 signext 3) #11
  br label %12132

12132:                                            ; preds = %12127, %12131
  %12133 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12134 = and i32 %12133, 32
  %12135 = icmp eq i32 %12134, 0
  br i1 %12135, label %12137, label %12136

12136:                                            ; preds = %12132
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %12087, i8 zeroext 114, i32 2, i32 %12086, i32 %12086, i32 1, i32 1, i32 0, i32 5) #11
  br label %12138

12137:                                            ; preds = %12132
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %12087, i32 2, i32 %12086, i8 zeroext 102, i8 zeroext 15, i8 zeroext 114) #11
  br label %12138

12138:                                            ; preds = %12136, %12137
  %12139 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %12140 = load i8*, i8** %12139, align 8
  %12141 = getelementptr inbounds i8, i8* %12140, i64 1
  store i8* %12141, i8** %12139, align 8
  store i8 10, i8* %12140, align 1
  %12142 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12143 = and i32 %12142, 32
  %12144 = icmp eq i32 %12143, 0
  br i1 %12144, label %12146, label %12145

12145:                                            ; preds = %12138
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %12087, i8 zeroext 85, i32 %12086, i32 %12086, i32 15) #11
  br label %23402

12146:                                            ; preds = %12138
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %12087, i32 %12086, i32 15, i8 zeroext 15, i8 zeroext 85) #11
  br label %23402

12147:                                            ; preds = %2
  %12148 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12149 = and i32 %12148, 32
  %12150 = icmp eq i32 %12149, 0
  %12151 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %12152 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %12153 = load i64, i64* %12152, align 8
  %12154 = ashr i64 %12153, 35
  %12155 = trunc i64 %12154 to i32
  %12156 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %12157 = load i32, i32* %12156, align 4
  %12158 = and i32 %12157, 255
  %12159 = zext i32 %12158 to i64
  br i1 %12150, label %12173, label %12160

12160:                                            ; preds = %12147
  %12161 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12159, i32 0
  %12162 = load i64, i64* %12161, align 8
  %12163 = ashr i64 %12162, 35
  %12164 = trunc i64 %12163 to i32
  %12165 = add nuw nsw i64 %12159, 1
  %12166 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12165, i32 0
  %12167 = load i64, i64* %12166, align 8
  %12168 = ashr i64 %12167, 35
  %12169 = trunc i64 %12168 to i32
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %12151, i8 zeroext -62, i32 %12155, i32 %12164, i32 %12169) #11
  %12170 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %12171 = load i8*, i8** %12170, align 8
  %12172 = getelementptr inbounds i8, i8* %12171, i64 1
  store i8* %12172, i8** %12170, align 8
  store i8 0, i8* %12171, align 1
  br label %23402

12173:                                            ; preds = %12147
  %12174 = add nuw nsw i64 %12159, 1
  %12175 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12174, i32 0
  %12176 = load i64, i64* %12175, align 8
  %12177 = ashr i64 %12176, 35
  %12178 = trunc i64 %12177 to i32
  tail call void @_ZN2v88internal9Assembler5cmppsENS0_11XMMRegisterES2_a(%"class.v8::internal::Assembler"* %12151, i32 %12155, i32 %12178, i8 signext 0) #11
  br label %23402

12179:                                            ; preds = %2
  %12180 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12181 = and i32 %12180, 32
  %12182 = icmp eq i32 %12181, 0
  %12183 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %12184 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %12185 = load i64, i64* %12184, align 8
  %12186 = ashr i64 %12185, 35
  %12187 = trunc i64 %12186 to i32
  %12188 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %12189 = load i32, i32* %12188, align 4
  %12190 = and i32 %12189, 255
  %12191 = zext i32 %12190 to i64
  br i1 %12182, label %12205, label %12192

12192:                                            ; preds = %12179
  %12193 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12191, i32 0
  %12194 = load i64, i64* %12193, align 8
  %12195 = ashr i64 %12194, 35
  %12196 = trunc i64 %12195 to i32
  %12197 = add nuw nsw i64 %12191, 1
  %12198 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12197, i32 0
  %12199 = load i64, i64* %12198, align 8
  %12200 = ashr i64 %12199, 35
  %12201 = trunc i64 %12200 to i32
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %12183, i8 zeroext -62, i32 %12187, i32 %12196, i32 %12201) #11
  %12202 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %12203 = load i8*, i8** %12202, align 8
  %12204 = getelementptr inbounds i8, i8* %12203, i64 1
  store i8* %12204, i8** %12202, align 8
  store i8 4, i8* %12203, align 1
  br label %23402

12205:                                            ; preds = %12179
  %12206 = add nuw nsw i64 %12191, 1
  %12207 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12206, i32 0
  %12208 = load i64, i64* %12207, align 8
  %12209 = ashr i64 %12208, 35
  %12210 = trunc i64 %12209 to i32
  tail call void @_ZN2v88internal9Assembler5cmppsENS0_11XMMRegisterES2_a(%"class.v8::internal::Assembler"* %12183, i32 %12187, i32 %12210, i8 signext 4) #11
  br label %23402

12211:                                            ; preds = %2
  %12212 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12213 = and i32 %12212, 32
  %12214 = icmp eq i32 %12213, 0
  %12215 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %12216 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %12217 = load i64, i64* %12216, align 8
  %12218 = ashr i64 %12217, 35
  %12219 = trunc i64 %12218 to i32
  %12220 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %12221 = load i32, i32* %12220, align 4
  %12222 = and i32 %12221, 255
  %12223 = zext i32 %12222 to i64
  br i1 %12214, label %12237, label %12224

12224:                                            ; preds = %12211
  %12225 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12223, i32 0
  %12226 = load i64, i64* %12225, align 8
  %12227 = ashr i64 %12226, 35
  %12228 = trunc i64 %12227 to i32
  %12229 = add nuw nsw i64 %12223, 1
  %12230 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12229, i32 0
  %12231 = load i64, i64* %12230, align 8
  %12232 = ashr i64 %12231, 35
  %12233 = trunc i64 %12232 to i32
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %12215, i8 zeroext -62, i32 %12219, i32 %12228, i32 %12233) #11
  %12234 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %12235 = load i8*, i8** %12234, align 8
  %12236 = getelementptr inbounds i8, i8* %12235, i64 1
  store i8* %12236, i8** %12234, align 8
  store i8 1, i8* %12235, align 1
  br label %23402

12237:                                            ; preds = %12211
  %12238 = add nuw nsw i64 %12223, 1
  %12239 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12238, i32 0
  %12240 = load i64, i64* %12239, align 8
  %12241 = ashr i64 %12240, 35
  %12242 = trunc i64 %12241 to i32
  tail call void @_ZN2v88internal9Assembler5cmppsENS0_11XMMRegisterES2_a(%"class.v8::internal::Assembler"* %12215, i32 %12219, i32 %12242, i8 signext 1) #11
  br label %23402

12243:                                            ; preds = %2
  %12244 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12245 = and i32 %12244, 32
  %12246 = icmp eq i32 %12245, 0
  %12247 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %12248 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %12249 = load i64, i64* %12248, align 8
  %12250 = ashr i64 %12249, 35
  %12251 = trunc i64 %12250 to i32
  %12252 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %12253 = load i32, i32* %12252, align 4
  %12254 = and i32 %12253, 255
  %12255 = zext i32 %12254 to i64
  br i1 %12246, label %12269, label %12256

12256:                                            ; preds = %12243
  %12257 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12255, i32 0
  %12258 = load i64, i64* %12257, align 8
  %12259 = ashr i64 %12258, 35
  %12260 = trunc i64 %12259 to i32
  %12261 = add nuw nsw i64 %12255, 1
  %12262 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12261, i32 0
  %12263 = load i64, i64* %12262, align 8
  %12264 = ashr i64 %12263, 35
  %12265 = trunc i64 %12264 to i32
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %12247, i8 zeroext -62, i32 %12251, i32 %12260, i32 %12265) #11
  %12266 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %12267 = load i8*, i8** %12266, align 8
  %12268 = getelementptr inbounds i8, i8* %12267, i64 1
  store i8* %12268, i8** %12266, align 8
  store i8 2, i8* %12267, align 1
  br label %23402

12269:                                            ; preds = %12243
  %12270 = add nuw nsw i64 %12255, 1
  %12271 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12270, i32 0
  %12272 = load i64, i64* %12271, align 8
  %12273 = ashr i64 %12272, 35
  %12274 = trunc i64 %12273 to i32
  tail call void @_ZN2v88internal9Assembler5cmppsENS0_11XMMRegisterES2_a(%"class.v8::internal::Assembler"* %12247, i32 %12251, i32 %12274, i8 signext 2) #11
  br label %23402

12275:                                            ; preds = %2
  %12276 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12277 = trunc i32 %12276 to i8
  %12278 = icmp slt i8 %12277, 0
  %12279 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  br i1 %12278, label %12280, label %12300

12280:                                            ; preds = %12275
  %12281 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %12279, i64 0, i32 0, i32 0, i32 0
  %12282 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %12283 = load i64, i64* %12282, align 8
  %12284 = ashr i64 %12283, 35
  %12285 = trunc i64 %12284 to i32
  %12286 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %12287 = load i32, i32* %12286, align 4
  %12288 = and i32 %12287, 255
  %12289 = zext i32 %12288 to i64
  %12290 = add nuw nsw i64 %12289, 1
  %12291 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12290, i32 0
  %12292 = load i64, i64* %12291, align 8
  %12293 = ashr i64 %12292, 35
  %12294 = trunc i64 %12293 to i32
  %12295 = add nuw nsw i64 %12289, 2
  %12296 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12295, i32 0
  %12297 = load i64, i64* %12296, align 8
  %12298 = ashr i64 %12297, 35
  %12299 = trunc i64 %12298 to i32
  tail call void @_ZN2v88internal9Assembler9fma_instrEhNS0_11XMMRegisterES2_S2_NS1_12VectorLengthENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWE(%"class.v8::internal::Assembler"* %12281, i8 zeroext -72, i32 %12285, i32 %12294, i32 %12299, i32 0, i32 1, i32 2, i32 0) #11
  br label %23402

12300:                                            ; preds = %12275
  %12301 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %12302 = load i32, i32* %12301, align 4
  %12303 = and i32 %12302, 255
  %12304 = add nuw nsw i32 %12303, 2
  %12305 = zext i32 %12304 to i64
  %12306 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12305, i32 0
  %12307 = load i64, i64* %12306, align 8
  %12308 = ashr i64 %12307, 35
  %12309 = trunc i64 %12308 to i32
  %12310 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %12279, i64 0, i32 0, i32 0, i32 0
  %12311 = and i32 %12276, 32
  %12312 = icmp eq i32 %12311, 0
  br i1 %12312, label %12314, label %12313

12313:                                            ; preds = %12300
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %12310, i8 zeroext 40, i32 15, i32 0, i32 %12309) #11
  br label %12315

12314:                                            ; preds = %12300
  tail call void @_ZN2v88internal9Assembler6movapsENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %12310, i32 15, i32 %12309) #11
  br label %12315

12315:                                            ; preds = %12313, %12314
  %12316 = load i32, i32* %12301, align 4
  %12317 = and i32 %12316, 255
  %12318 = add nuw nsw i32 %12317, 1
  %12319 = zext i32 %12318 to i64
  %12320 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12319, i32 0
  %12321 = load i64, i64* %12320, align 8
  %12322 = ashr i64 %12321, 35
  %12323 = trunc i64 %12322 to i32
  %12324 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12325 = and i32 %12324, 32
  %12326 = icmp eq i32 %12325, 0
  br i1 %12326, label %12328, label %12327

12327:                                            ; preds = %12315
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %12310, i8 zeroext 89, i32 15, i32 15, i32 %12323) #11
  br label %12329

12328:                                            ; preds = %12315
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %12310, i32 15, i32 %12323, i8 zeroext 15, i8 zeroext 89) #11
  br label %12329

12329:                                            ; preds = %12327, %12328
  %12330 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %12331 = load i64, i64* %12330, align 8
  %12332 = ashr i64 %12331, 35
  %12333 = trunc i64 %12332 to i32
  %12334 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12335 = and i32 %12334, 32
  %12336 = icmp eq i32 %12335, 0
  br i1 %12336, label %12338, label %12337

12337:                                            ; preds = %12329
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %12310, i8 zeroext 88, i32 %12333, i32 %12333, i32 15) #11
  br label %23402

12338:                                            ; preds = %12329
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %12310, i32 %12333, i32 15, i8 zeroext 15, i8 zeroext 88) #11
  br label %23402

12339:                                            ; preds = %2
  %12340 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12341 = trunc i32 %12340 to i8
  %12342 = icmp slt i8 %12341, 0
  %12343 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  br i1 %12342, label %12344, label %12364

12344:                                            ; preds = %12339
  %12345 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %12343, i64 0, i32 0, i32 0, i32 0
  %12346 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %12347 = load i64, i64* %12346, align 8
  %12348 = ashr i64 %12347, 35
  %12349 = trunc i64 %12348 to i32
  %12350 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %12351 = load i32, i32* %12350, align 4
  %12352 = and i32 %12351, 255
  %12353 = zext i32 %12352 to i64
  %12354 = add nuw nsw i64 %12353, 1
  %12355 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12354, i32 0
  %12356 = load i64, i64* %12355, align 8
  %12357 = ashr i64 %12356, 35
  %12358 = trunc i64 %12357 to i32
  %12359 = add nuw nsw i64 %12353, 2
  %12360 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12359, i32 0
  %12361 = load i64, i64* %12360, align 8
  %12362 = ashr i64 %12361, 35
  %12363 = trunc i64 %12362 to i32
  tail call void @_ZN2v88internal9Assembler9fma_instrEhNS0_11XMMRegisterES2_S2_NS1_12VectorLengthENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWE(%"class.v8::internal::Assembler"* %12345, i8 zeroext -68, i32 %12349, i32 %12358, i32 %12363, i32 0, i32 1, i32 2, i32 0) #11
  br label %23402

12364:                                            ; preds = %12339
  %12365 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %12366 = load i32, i32* %12365, align 4
  %12367 = and i32 %12366, 255
  %12368 = add nuw nsw i32 %12367, 2
  %12369 = zext i32 %12368 to i64
  %12370 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12369, i32 0
  %12371 = load i64, i64* %12370, align 8
  %12372 = ashr i64 %12371, 35
  %12373 = trunc i64 %12372 to i32
  %12374 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %12343, i64 0, i32 0, i32 0, i32 0
  %12375 = and i32 %12340, 32
  %12376 = icmp eq i32 %12375, 0
  br i1 %12376, label %12378, label %12377

12377:                                            ; preds = %12364
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %12374, i8 zeroext 40, i32 15, i32 0, i32 %12373) #11
  br label %12379

12378:                                            ; preds = %12364
  tail call void @_ZN2v88internal9Assembler6movapsENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %12374, i32 15, i32 %12373) #11
  br label %12379

12379:                                            ; preds = %12377, %12378
  %12380 = load i32, i32* %12365, align 4
  %12381 = and i32 %12380, 255
  %12382 = add nuw nsw i32 %12381, 1
  %12383 = zext i32 %12382 to i64
  %12384 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12383, i32 0
  %12385 = load i64, i64* %12384, align 8
  %12386 = ashr i64 %12385, 35
  %12387 = trunc i64 %12386 to i32
  %12388 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12389 = and i32 %12388, 32
  %12390 = icmp eq i32 %12389, 0
  br i1 %12390, label %12392, label %12391

12391:                                            ; preds = %12379
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %12374, i8 zeroext 89, i32 15, i32 15, i32 %12387) #11
  br label %12393

12392:                                            ; preds = %12379
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %12374, i32 15, i32 %12387, i8 zeroext 15, i8 zeroext 89) #11
  br label %12393

12393:                                            ; preds = %12391, %12392
  %12394 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %12395 = load i64, i64* %12394, align 8
  %12396 = ashr i64 %12395, 35
  %12397 = trunc i64 %12396 to i32
  %12398 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12399 = and i32 %12398, 32
  %12400 = icmp eq i32 %12399, 0
  br i1 %12400, label %12402, label %12401

12401:                                            ; preds = %12393
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %12374, i8 zeroext 92, i32 %12397, i32 %12397, i32 15) #11
  br label %23402

12402:                                            ; preds = %12393
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %12374, i32 %12397, i32 15, i8 zeroext 15, i8 zeroext 92) #11
  br label %23402

12403:                                            ; preds = %2
  %12404 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12405 = and i32 %12404, 32
  %12406 = icmp eq i32 %12405, 0
  %12407 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %12408 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %12409 = load i64, i64* %12408, align 8
  %12410 = ashr i64 %12409, 35
  %12411 = trunc i64 %12410 to i32
  %12412 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %12413 = load i32, i32* %12412, align 4
  %12414 = and i32 %12413, 255
  %12415 = zext i32 %12414 to i64
  br i1 %12406, label %12426, label %12416

12416:                                            ; preds = %12403
  %12417 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12415, i32 0
  %12418 = load i64, i64* %12417, align 8
  %12419 = ashr i64 %12418, 35
  %12420 = trunc i64 %12419 to i32
  %12421 = add nuw nsw i64 %12415, 1
  %12422 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12421, i32 0
  %12423 = load i64, i64* %12422, align 8
  %12424 = ashr i64 %12423, 35
  %12425 = trunc i64 %12424 to i32
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %12407, i8 zeroext 93, i32 %12411, i32 %12420, i32 %12425) #11
  br label %23402

12426:                                            ; preds = %12403
  %12427 = add nuw nsw i64 %12415, 1
  %12428 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12427, i32 0
  %12429 = load i64, i64* %12428, align 8
  %12430 = ashr i64 %12429, 35
  %12431 = trunc i64 %12430 to i32
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %12407, i32 %12411, i32 %12431, i8 zeroext 15, i8 zeroext 93) #11
  br label %23402

12432:                                            ; preds = %2
  %12433 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12434 = and i32 %12433, 32
  %12435 = icmp eq i32 %12434, 0
  %12436 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %12437 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %12438 = load i64, i64* %12437, align 8
  %12439 = ashr i64 %12438, 35
  %12440 = trunc i64 %12439 to i32
  %12441 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %12442 = load i32, i32* %12441, align 4
  %12443 = and i32 %12442, 255
  %12444 = zext i32 %12443 to i64
  br i1 %12435, label %12455, label %12445

12445:                                            ; preds = %12432
  %12446 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12444, i32 0
  %12447 = load i64, i64* %12446, align 8
  %12448 = ashr i64 %12447, 35
  %12449 = trunc i64 %12448 to i32
  %12450 = add nuw nsw i64 %12444, 1
  %12451 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12450, i32 0
  %12452 = load i64, i64* %12451, align 8
  %12453 = ashr i64 %12452, 35
  %12454 = trunc i64 %12453 to i32
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %12436, i8 zeroext 95, i32 %12440, i32 %12449, i32 %12454) #11
  br label %23402

12455:                                            ; preds = %12432
  %12456 = add nuw nsw i64 %12444, 1
  %12457 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12456, i32 0
  %12458 = load i64, i64* %12457, align 8
  %12459 = ashr i64 %12458, 35
  %12460 = trunc i64 %12459 to i32
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %12436, i32 %12440, i32 %12460, i8 zeroext 15, i8 zeroext 95) #11
  br label %23402

12461:                                            ; preds = %2
  %12462 = lshr i32 %275, 22
  %12463 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %12464 = load i64, i64* %12463, align 8
  %12465 = ashr i64 %12464, 35
  %12466 = trunc i64 %12465 to i32
  %12467 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %12468 = load i32, i32* %12467, align 4
  %12469 = and i32 %12468, 255
  %12470 = zext i32 %12469 to i64
  %12471 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12470, i32 0
  %12472 = load i64, i64* %12471, align 8
  %12473 = ashr i64 %12472, 35
  %12474 = trunc i64 %12473 to i32
  %12475 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %12476 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12477 = and i32 %12476, 32
  %12478 = icmp eq i32 %12477, 0
  br i1 %12478, label %12485, label %12479

12479:                                            ; preds = %12461
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %12475, i8 zeroext 8, i32 %12466, i32 0, i32 %12474, i32 1, i32 3, i32 0, i32 5) #11
  %12480 = trunc i32 %12462 to i8
  %12481 = or i8 %12480, 8
  %12482 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %12483 = load i8*, i8** %12482, align 8
  %12484 = getelementptr inbounds i8, i8* %12483, i64 1
  store i8* %12484, i8** %12482, align 8
  store i8 %12481, i8* %12483, align 1
  br label %23402

12485:                                            ; preds = %12461
  tail call void @_ZN2v88internal9Assembler7roundpsENS0_11XMMRegisterES2_NS0_12RoundingModeE(%"class.v8::internal::Assembler"* %12475, i32 %12466, i32 %12474, i32 %12462) #11
  br label %23402

12486:                                            ; preds = %2
  %12487 = lshr i32 %275, 22
  %12488 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %12489 = load i64, i64* %12488, align 8
  %12490 = ashr i64 %12489, 35
  %12491 = trunc i64 %12490 to i32
  %12492 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %12493 = load i32, i32* %12492, align 4
  %12494 = and i32 %12493, 255
  %12495 = zext i32 %12494 to i64
  %12496 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12495, i32 0
  %12497 = load i64, i64* %12496, align 8
  %12498 = ashr i64 %12497, 35
  %12499 = trunc i64 %12498 to i32
  %12500 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %12501 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12502 = and i32 %12501, 32
  %12503 = icmp eq i32 %12502, 0
  br i1 %12503, label %12510, label %12504

12504:                                            ; preds = %12486
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %12500, i8 zeroext 9, i32 %12491, i32 0, i32 %12499, i32 1, i32 3, i32 0, i32 5) #11
  %12505 = trunc i32 %12487 to i8
  %12506 = or i8 %12505, 8
  %12507 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %12508 = load i8*, i8** %12507, align 8
  %12509 = getelementptr inbounds i8, i8* %12508, i64 1
  store i8* %12509, i8** %12507, align 8
  store i8 %12506, i8* %12508, align 1
  br label %23402

12510:                                            ; preds = %12486
  tail call void @_ZN2v88internal9Assembler7roundpdENS0_11XMMRegisterES2_NS0_12RoundingModeE(%"class.v8::internal::Assembler"* %12500, i32 %12491, i32 %12499, i32 %12487) #11
  br label %23402

12511:                                            ; preds = %2
  %12512 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12513 = and i32 %12512, 32
  %12514 = icmp eq i32 %12513, 0
  %12515 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %12516 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %12517 = load i64, i64* %12516, align 8
  %12518 = ashr i64 %12517, 35
  %12519 = trunc i64 %12518 to i32
  %12520 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %12521 = load i32, i32* %12520, align 4
  %12522 = and i32 %12521, 255
  %12523 = zext i32 %12522 to i64
  br i1 %12514, label %12534, label %12524

12524:                                            ; preds = %12511
  %12525 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12523, i32 0
  %12526 = load i64, i64* %12525, align 8
  %12527 = ashr i64 %12526, 35
  %12528 = trunc i64 %12527 to i32
  %12529 = add nuw nsw i64 %12523, 1
  %12530 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12529, i32 0
  %12531 = load i64, i64* %12530, align 8
  %12532 = ashr i64 %12531, 35
  %12533 = trunc i64 %12532 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %12515, i8 zeroext 93, i32 %12519, i32 %12528, i32 %12533, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

12534:                                            ; preds = %12511
  %12535 = add nuw nsw i64 %12523, 1
  %12536 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12535, i32 0
  %12537 = load i64, i64* %12536, align 8
  %12538 = ashr i64 %12537, 35
  %12539 = trunc i64 %12538 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %12515, i32 %12519, i32 %12539, i8 zeroext 102, i8 zeroext 15, i8 zeroext 93) #11
  br label %23402

12540:                                            ; preds = %2
  %12541 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12542 = and i32 %12541, 32
  %12543 = icmp eq i32 %12542, 0
  %12544 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %12545 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %12546 = load i64, i64* %12545, align 8
  %12547 = ashr i64 %12546, 35
  %12548 = trunc i64 %12547 to i32
  %12549 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %12550 = load i32, i32* %12549, align 4
  %12551 = and i32 %12550, 255
  %12552 = zext i32 %12551 to i64
  br i1 %12543, label %12563, label %12553

12553:                                            ; preds = %12540
  %12554 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12552, i32 0
  %12555 = load i64, i64* %12554, align 8
  %12556 = ashr i64 %12555, 35
  %12557 = trunc i64 %12556 to i32
  %12558 = add nuw nsw i64 %12552, 1
  %12559 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12558, i32 0
  %12560 = load i64, i64* %12559, align 8
  %12561 = ashr i64 %12560, 35
  %12562 = trunc i64 %12561 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %12544, i8 zeroext 95, i32 %12548, i32 %12557, i32 %12562, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

12563:                                            ; preds = %12540
  %12564 = add nuw nsw i64 %12552, 1
  %12565 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12564, i32 0
  %12566 = load i64, i64* %12565, align 8
  %12567 = ashr i64 %12566, 35
  %12568 = trunc i64 %12567 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %12544, i32 %12548, i32 %12568, i8 zeroext 102, i8 zeroext 15, i8 zeroext 95) #11
  br label %23402

12569:                                            ; preds = %2
  %12570 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %12571 = load i64, i64* %12570, align 8
  %12572 = ashr i64 %12571, 35
  %12573 = trunc i64 %12572 to i32
  %12574 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %12575 = load i32, i32* %12574, align 4
  %12576 = and i32 %12575, 255
  %12577 = zext i32 %12576 to i64
  %12578 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12577, i32 0
  %12579 = load i64, i64* %12578, align 8
  %12580 = and i64 %12579, 7
  %12581 = icmp ugt i64 %12580, 4
  %12582 = and i64 %12579, 24
  %12583 = icmp eq i64 %12582, 0
  %12584 = and i1 %12581, %12583
  br i1 %12584, label %12585, label %12599

12585:                                            ; preds = %12569
  %12586 = lshr i64 %12579, 5
  %12587 = trunc i64 %12586 to i8
  %12588 = icmp ult i8 %12587, 12
  %12589 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  br i1 %12588, label %12590, label %12599

12590:                                            ; preds = %12585
  %12591 = ashr i64 %12579, 35
  %12592 = trunc i64 %12591 to i32
  tail call void @_ZN2v88internal14TurboAssembler4MovqENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %12589, i32 %12573, i32 %12592) #11
  %12593 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %12589, i64 0, i32 0, i32 0, i32 0
  %12594 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12595 = and i32 %12594, 32
  %12596 = icmp eq i32 %12595, 0
  br i1 %12596, label %12598, label %12597

12597:                                            ; preds = %12590
  tail call void @_ZN2v88internal9Assembler8vmovddupENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %12593, i32 %12573, i32 %12573) #11
  br label %23402

12598:                                            ; preds = %12590
  tail call void @_ZN2v88internal9Assembler7movddupENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %12593, i32 %12573, i32 %12573) #11
  br label %23402

12599:                                            ; preds = %12569, %12585
  %12600 = ashr i64 %12579, 35
  %12601 = trunc i64 %12600 to i32
  %12602 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %12601, i32 0) #11
  %12603 = extractvalue { i64, i32 } %12602, 0
  %12604 = extractvalue { i64, i32 } %12602, 1
  %12605 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %12606 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12607 = and i32 %12606, 32
  %12608 = icmp eq i32 %12607, 0
  br i1 %12608, label %12610, label %12609

12609:                                            ; preds = %12599
  call void @_ZN2v88internal9Assembler8vmovddupENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %12605, i32 %12573, i64 %12603, i32 %12604) #11
  br label %23402

12610:                                            ; preds = %12599
  call void @_ZN2v88internal9Assembler7movddupENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %12605, i32 %12573, i64 %12603, i32 %12604) #11
  br label %23402

12611:                                            ; preds = %2
  %12612 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %12613 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %12614 = load i64, i64* %12613, align 8
  %12615 = ashr i64 %12614, 35
  %12616 = trunc i64 %12615 to i32
  %12617 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %12618 = load i32, i32* %12617, align 4
  %12619 = and i32 %12618, 255
  %12620 = zext i32 %12619 to i64
  %12621 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12620, i32 0
  %12622 = load i64, i64* %12621, align 8
  %12623 = ashr i64 %12622, 35
  %12624 = trunc i64 %12623 to i32
  %12625 = add nuw nsw i64 %12620, 1
  %12626 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12625
  %12627 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %12612, %"class.v8::internal::compiler::InstructionOperand"* %12626) #11
  %12628 = extractvalue { i64, i64 } %12627, 1
  %12629 = trunc i64 %12628 to i8
  %12630 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %12631 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12632 = and i32 %12631, 32
  %12633 = icmp eq i32 %12632, 0
  br i1 %12633, label %12638, label %12634

12634:                                            ; preds = %12611
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %12630, i8 zeroext 22, i32 %12624, i32 0, i32 %12616, i32 1, i32 3, i32 128, i32 5) #11
  %12635 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %12636 = load i8*, i8** %12635, align 8
  %12637 = getelementptr inbounds i8, i8* %12636, i64 1
  store i8* %12637, i8** %12635, align 8
  store i8 %12629, i8* %12636, align 1
  br label %23402

12638:                                            ; preds = %12611
  call void @_ZN2v88internal9Assembler6pextrqENS0_8RegisterENS0_11XMMRegisterEa(%"class.v8::internal::Assembler"* %12630, i32 %12616, i32 %12624, i8 signext %12629) #11
  br label %23402

12639:                                            ; preds = %2
  %12640 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %12641 = bitcast %"class.v8::internal::TurboAssembler"* %12640 to %"class.v8::internal::SharedTurboAssembler"*
  %12642 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %12643 = load i64, i64* %12642, align 8
  %12644 = ashr i64 %12643, 35
  %12645 = trunc i64 %12644 to i32
  %12646 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %12647 = load i32, i32* %12646, align 4
  %12648 = and i32 %12647, 255
  %12649 = zext i32 %12648 to i64
  %12650 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12649, i32 0
  %12651 = load i64, i64* %12650, align 8
  %12652 = ashr i64 %12651, 35
  %12653 = trunc i64 %12652 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler8I64x2AbsENS0_11XMMRegisterES2_S2_(%"class.v8::internal::SharedTurboAssembler"* %12641, i32 %12645, i32 %12653, i32 15) #11
  br label %23402

12654:                                            ; preds = %2
  %12655 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %12656 = bitcast %"class.v8::internal::TurboAssembler"* %12655 to %"class.v8::internal::SharedTurboAssembler"*
  %12657 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %12658 = load i64, i64* %12657, align 8
  %12659 = ashr i64 %12658, 35
  %12660 = trunc i64 %12659 to i32
  %12661 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %12662 = load i32, i32* %12661, align 4
  %12663 = and i32 %12662, 255
  %12664 = zext i32 %12663 to i64
  %12665 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12664, i32 0
  %12666 = load i64, i64* %12665, align 8
  %12667 = ashr i64 %12666, 35
  %12668 = trunc i64 %12667 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler8I64x2NegENS0_11XMMRegisterES2_S2_(%"class.v8::internal::SharedTurboAssembler"* %12656, i32 %12660, i32 %12668, i32 15) #11
  br label %23402

12669:                                            ; preds = %2
  %12670 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %12671 = load i64, i64* %12670, align 8
  %12672 = ashr i64 %12671, 35
  %12673 = trunc i64 %12672 to i32
  %12674 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %12675 = load i32, i32* %12674, align 4
  %12676 = and i32 %12675, 255
  %12677 = zext i32 %12676 to i64
  %12678 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12677, i32 0
  %12679 = load i64, i64* %12678, align 8
  %12680 = ashr i64 %12679, 35
  %12681 = trunc i64 %12680 to i32
  %12682 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %12683 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12684 = and i32 %12683, 32
  %12685 = icmp eq i32 %12684, 0
  br i1 %12685, label %12687, label %12686

12686:                                            ; preds = %12669
  tail call void @_ZN2v88internal9Assembler3vpdEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %12682, i8 zeroext 80, i32 %12673, i32 0, i32 %12681) #11
  br label %23402

12687:                                            ; preds = %12669
  tail call void @_ZN2v88internal9Assembler8movmskpdENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %12682, i32 %12673, i32 %12681) #11
  br label %23402

12688:                                            ; preds = %2
  %12689 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %12690 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %12691 = load i64, i64* %12690, align 8
  %12692 = ashr i64 %12691, 35
  %12693 = trunc i64 %12692 to i32
  %12694 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %12695 = load i32, i32* %12694, align 4
  %12696 = and i32 %12695, 255
  %12697 = add nuw nsw i32 %12696, 1
  %12698 = zext i32 %12697 to i64
  %12699 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12698, i32 0
  %12700 = load i64, i64* %12699, align 8
  %12701 = and i64 %12700, 7
  %12702 = icmp eq i64 %12701, 3
  br i1 %12702, label %12703, label %12733

12703:                                            ; preds = %12688
  %12704 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12705 = and i32 %12704, 32
  %12706 = icmp eq i32 %12705, 0
  %12707 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %12708 = zext i32 %12696 to i64
  br i1 %12706, label %12723, label %12709

12709:                                            ; preds = %12703
  %12710 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12708, i32 0
  %12711 = load i64, i64* %12710, align 8
  %12712 = ashr i64 %12711, 35
  %12713 = trunc i64 %12712 to i32
  %12714 = add nuw nsw i64 %12708, 1
  %12715 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12714
  %12716 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %12689, %"class.v8::internal::compiler::InstructionOperand"* %12715) #11
  %12717 = extractvalue { i64, i64 } %12716, 1
  %12718 = trunc i64 %12717 to i8
  %12719 = and i8 %12718, 63
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %12707, i8 zeroext 115, i32 6, i32 %12693, i32 %12713, i32 1, i32 1, i32 0, i32 5) #11
  %12720 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %12721 = load i8*, i8** %12720, align 8
  %12722 = getelementptr inbounds i8, i8* %12721, i64 1
  store i8* %12722, i8** %12720, align 8
  store i8 %12719, i8* %12721, align 1
  br label %23402

12723:                                            ; preds = %12703
  %12724 = add nuw nsw i64 %12708, 1
  %12725 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12724
  %12726 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %12689, %"class.v8::internal::compiler::InstructionOperand"* %12725) #11
  %12727 = extractvalue { i64, i64 } %12726, 1
  %12728 = trunc i64 %12727 to i8
  %12729 = and i8 %12728, 63
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %12707, i32 6, i32 %12693, i8 zeroext 102, i8 zeroext 15, i8 zeroext 115) #11
  %12730 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %12731 = load i8*, i8** %12730, align 8
  %12732 = getelementptr inbounds i8, i8* %12731, i64 1
  store i8* %12732, i8** %12730, align 8
  store i8 %12729, i8* %12731, align 1
  br label %23402

12733:                                            ; preds = %12688
  %12734 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %12735 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %12734, i64 0, i32 0, i32 0, i32 0
  %12736 = ashr i64 %12700, 35
  %12737 = trunc i64 %12736 to i32
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %12735, i32 10, i32 %12737, i32 8) #11
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %12735, i8 zeroext 4, i32 10, i64 63, i32 8) #11
  tail call void @_ZN2v88internal14TurboAssembler4MovqENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %12734, i32 15, i32 10) #11
  %12738 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12739 = and i32 %12738, 32
  %12740 = icmp eq i32 %12739, 0
  br i1 %12740, label %12749, label %12741

12741:                                            ; preds = %12733
  %12742 = load i32, i32* %12694, align 4
  %12743 = and i32 %12742, 255
  %12744 = zext i32 %12743 to i64
  %12745 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12744, i32 0
  %12746 = load i64, i64* %12745, align 8
  %12747 = ashr i64 %12746, 35
  %12748 = trunc i64 %12747 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %12735, i8 zeroext -13, i32 %12693, i32 %12748, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

12749:                                            ; preds = %12733
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %12735, i32 %12693, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -13) #11
  br label %23402

12750:                                            ; preds = %2
  %12751 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %12752 = load i64, i64* %12751, align 8
  %12753 = ashr i64 %12752, 35
  %12754 = trunc i64 %12753 to i32
  %12755 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %12756 = load i32, i32* %12755, align 4
  %12757 = and i32 %12756, 255
  %12758 = zext i32 %12757 to i64
  %12759 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12758, i32 0
  %12760 = load i64, i64* %12759, align 8
  %12761 = ashr i64 %12760, 35
  %12762 = trunc i64 %12761 to i32
  %12763 = lshr i32 %12756, 8
  %12764 = and i32 %12763, 65535
  %12765 = add nuw nsw i32 %12764, %12757
  %12766 = zext i32 %12765 to i64
  %12767 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12766, i32 0
  %12768 = load i64, i64* %12767, align 8
  %12769 = ashr i64 %12768, 35
  %12770 = trunc i64 %12769 to i32
  %12771 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %12772 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12773 = and i32 %12772, 32
  %12774 = icmp eq i32 %12773, 0
  br i1 %12774, label %12779, label %12775

12775:                                            ; preds = %12750
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %12771, i8 zeroext 22, i32 %12762, i32 0, i32 %12770, i32 1, i32 3, i32 128, i32 5) #11
  %12776 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %12777 = load i8*, i8** %12776, align 8
  %12778 = getelementptr inbounds i8, i8* %12777, i64 1
  store i8* %12778, i8** %12776, align 8
  store i8 0, i8* %12777, align 1
  br label %12780

12779:                                            ; preds = %12750
  tail call void @_ZN2v88internal9Assembler6pextrqENS0_8RegisterENS0_11XMMRegisterEa(%"class.v8::internal::Assembler"* %12771, i32 %12770, i32 %12762, i8 signext 0) #11
  br label %12780

12780:                                            ; preds = %12775, %12779
  tail call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterEii(%"class.v8::internal::Assembler"* %12771, i32 %12770, i32 7, i32 8) #11
  %12781 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12782 = and i32 %12781, 32
  %12783 = icmp eq i32 %12782, 0
  br i1 %12783, label %12788, label %12784

12784:                                            ; preds = %12780
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %12771, i8 zeroext 34, i32 %12754, i32 %12754, i32 %12770, i32 1, i32 3, i32 128, i32 5) #11
  %12785 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %12786 = load i8*, i8** %12785, align 8
  %12787 = getelementptr inbounds i8, i8* %12786, i64 1
  store i8* %12787, i8** %12785, align 8
  store i8 0, i8* %12786, align 1
  br label %12789

12788:                                            ; preds = %12780
  tail call void @_ZN2v88internal9Assembler6pinsrqENS0_11XMMRegisterENS0_8RegisterEh(%"class.v8::internal::Assembler"* %12771, i32 %12754, i32 %12770, i8 zeroext 0) #11
  br label %12789

12789:                                            ; preds = %12784, %12788
  %12790 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12791 = and i32 %12790, 32
  %12792 = icmp eq i32 %12791, 0
  br i1 %12792, label %12797, label %12793

12793:                                            ; preds = %12789
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %12771, i8 zeroext 22, i32 %12762, i32 0, i32 %12770, i32 1, i32 3, i32 128, i32 5) #11
  %12794 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %12795 = load i8*, i8** %12794, align 8
  %12796 = getelementptr inbounds i8, i8* %12795, i64 1
  store i8* %12796, i8** %12794, align 8
  store i8 1, i8* %12795, align 1
  br label %12798

12797:                                            ; preds = %12789
  tail call void @_ZN2v88internal9Assembler6pextrqENS0_8RegisterENS0_11XMMRegisterEa(%"class.v8::internal::Assembler"* %12771, i32 %12770, i32 %12762, i8 signext 1) #11
  br label %12798

12798:                                            ; preds = %12793, %12797
  tail call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterEii(%"class.v8::internal::Assembler"* %12771, i32 %12770, i32 7, i32 8) #11
  %12799 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12800 = and i32 %12799, 32
  %12801 = icmp eq i32 %12800, 0
  br i1 %12801, label %12806, label %12802

12802:                                            ; preds = %12798
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %12771, i8 zeroext 34, i32 %12754, i32 %12754, i32 %12770, i32 1, i32 3, i32 128, i32 5) #11
  %12803 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %12804 = load i8*, i8** %12803, align 8
  %12805 = getelementptr inbounds i8, i8* %12804, i64 1
  store i8* %12805, i8** %12803, align 8
  store i8 1, i8* %12804, align 1
  br label %23402

12806:                                            ; preds = %12798
  tail call void @_ZN2v88internal9Assembler6pinsrqENS0_11XMMRegisterENS0_8RegisterEh(%"class.v8::internal::Assembler"* %12771, i32 %12754, i32 %12770, i8 zeroext 1) #11
  br label %23402

12807:                                            ; preds = %2
  %12808 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12809 = and i32 %12808, 32
  %12810 = icmp eq i32 %12809, 0
  %12811 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %12812 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %12813 = load i64, i64* %12812, align 8
  %12814 = ashr i64 %12813, 35
  %12815 = trunc i64 %12814 to i32
  %12816 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %12817 = load i32, i32* %12816, align 4
  %12818 = and i32 %12817, 255
  %12819 = zext i32 %12818 to i64
  br i1 %12810, label %12830, label %12820

12820:                                            ; preds = %12807
  %12821 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12819, i32 0
  %12822 = load i64, i64* %12821, align 8
  %12823 = ashr i64 %12822, 35
  %12824 = trunc i64 %12823 to i32
  %12825 = add nuw nsw i64 %12819, 1
  %12826 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12825, i32 0
  %12827 = load i64, i64* %12826, align 8
  %12828 = ashr i64 %12827, 35
  %12829 = trunc i64 %12828 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %12811, i8 zeroext -44, i32 %12815, i32 %12824, i32 %12829, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

12830:                                            ; preds = %12807
  %12831 = add nuw nsw i64 %12819, 1
  %12832 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12831, i32 0
  %12833 = load i64, i64* %12832, align 8
  %12834 = ashr i64 %12833, 35
  %12835 = trunc i64 %12834 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %12811, i32 %12815, i32 %12835, i8 zeroext 102, i8 zeroext 15, i8 zeroext -44) #11
  br label %23402

12836:                                            ; preds = %2
  %12837 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12838 = and i32 %12837, 32
  %12839 = icmp eq i32 %12838, 0
  %12840 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %12841 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %12842 = load i64, i64* %12841, align 8
  %12843 = ashr i64 %12842, 35
  %12844 = trunc i64 %12843 to i32
  %12845 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %12846 = load i32, i32* %12845, align 4
  %12847 = and i32 %12846, 255
  %12848 = zext i32 %12847 to i64
  br i1 %12839, label %12859, label %12849

12849:                                            ; preds = %12836
  %12850 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12848, i32 0
  %12851 = load i64, i64* %12850, align 8
  %12852 = ashr i64 %12851, 35
  %12853 = trunc i64 %12852 to i32
  %12854 = add nuw nsw i64 %12848, 1
  %12855 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12854, i32 0
  %12856 = load i64, i64* %12855, align 8
  %12857 = ashr i64 %12856, 35
  %12858 = trunc i64 %12857 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %12840, i8 zeroext -5, i32 %12844, i32 %12853, i32 %12858, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

12859:                                            ; preds = %12836
  %12860 = add nuw nsw i64 %12848, 1
  %12861 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12860, i32 0
  %12862 = load i64, i64* %12861, align 8
  %12863 = ashr i64 %12862, 35
  %12864 = trunc i64 %12863 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %12840, i32 %12844, i32 %12864, i8 zeroext 102, i8 zeroext 15, i8 zeroext -5) #11
  br label %23402

12865:                                            ; preds = %2
  %12866 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %12867 = load i32, i32* %12866, align 4
  %12868 = and i32 %12867, 255
  %12869 = zext i32 %12868 to i64
  %12870 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12869, i32 0
  %12871 = load i64, i64* %12870, align 8
  %12872 = ashr i64 %12871, 35
  %12873 = trunc i64 %12872 to i32
  %12874 = add nuw nsw i64 %12869, 1
  %12875 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12874, i32 0
  %12876 = load i64, i64* %12875, align 8
  %12877 = ashr i64 %12876, 35
  %12878 = trunc i64 %12877 to i32
  %12879 = lshr i32 %12867, 8
  %12880 = and i32 %12879, 65535
  %12881 = add nuw nsw i32 %12880, %12868
  %12882 = zext i32 %12881 to i64
  %12883 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12882, i32 0
  %12884 = load i64, i64* %12883, align 8
  %12885 = ashr i64 %12884, 35
  %12886 = trunc i64 %12885 to i32
  %12887 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  tail call void @_ZN2v88internal14TurboAssembler6MovdqaENS0_11XMMRegisterES2_(%"class.v8::internal::TurboAssembler"* %12887, i32 %12886, i32 %12873) #11
  tail call void @_ZN2v88internal14TurboAssembler6MovdqaENS0_11XMMRegisterES2_(%"class.v8::internal::TurboAssembler"* %12887, i32 15, i32 %12878) #11
  %12888 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %12887, i64 0, i32 0, i32 0, i32 0
  %12889 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12890 = and i32 %12889, 32
  %12891 = icmp eq i32 %12890, 0
  br i1 %12891, label %12893, label %12892

12892:                                            ; preds = %12865
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %12888, i8 zeroext 115, i32 2, i32 %12886, i32 %12886, i32 1, i32 1, i32 0, i32 5) #11
  br label %12894

12893:                                            ; preds = %12865
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %12888, i32 2, i32 %12886, i8 zeroext 102, i8 zeroext 15, i8 zeroext 115) #11
  br label %12894

12894:                                            ; preds = %12892, %12893
  %12895 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %12896 = load i8*, i8** %12895, align 8
  %12897 = getelementptr inbounds i8, i8* %12896, i64 1
  store i8* %12897, i8** %12895, align 8
  store i8 32, i8* %12896, align 1
  %12898 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12899 = and i32 %12898, 32
  %12900 = icmp eq i32 %12899, 0
  br i1 %12900, label %12902, label %12901

12901:                                            ; preds = %12894
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %12888, i8 zeroext -12, i32 %12886, i32 %12886, i32 %12878, i32 1, i32 1, i32 0, i32 5) #11
  br label %12903

12902:                                            ; preds = %12894
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %12888, i32 %12886, i32 %12878, i8 zeroext 102, i8 zeroext 15, i8 zeroext -12) #11
  br label %12903

12903:                                            ; preds = %12901, %12902
  %12904 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12905 = and i32 %12904, 32
  %12906 = icmp eq i32 %12905, 0
  br i1 %12906, label %12908, label %12907

12907:                                            ; preds = %12903
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %12888, i8 zeroext 115, i32 2, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %12909

12908:                                            ; preds = %12903
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %12888, i32 2, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 115) #11
  br label %12909

12909:                                            ; preds = %12907, %12908
  %12910 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %12911 = load i8*, i8** %12910, align 8
  %12912 = getelementptr inbounds i8, i8* %12911, i64 1
  store i8* %12912, i8** %12910, align 8
  store i8 32, i8* %12911, align 1
  %12913 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12914 = and i32 %12913, 32
  %12915 = icmp eq i32 %12914, 0
  br i1 %12915, label %12917, label %12916

12916:                                            ; preds = %12909
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %12888, i8 zeroext -12, i32 15, i32 15, i32 %12873, i32 1, i32 1, i32 0, i32 5) #11
  br label %12918

12917:                                            ; preds = %12909
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %12888, i32 15, i32 %12873, i8 zeroext 102, i8 zeroext 15, i8 zeroext -12) #11
  br label %12918

12918:                                            ; preds = %12916, %12917
  %12919 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12920 = and i32 %12919, 32
  %12921 = icmp eq i32 %12920, 0
  br i1 %12921, label %12923, label %12922

12922:                                            ; preds = %12918
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %12888, i8 zeroext -44, i32 15, i32 15, i32 %12886, i32 1, i32 1, i32 0, i32 5) #11
  br label %12924

12923:                                            ; preds = %12918
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %12888, i32 15, i32 %12886, i8 zeroext 102, i8 zeroext 15, i8 zeroext -44) #11
  br label %12924

12924:                                            ; preds = %12922, %12923
  %12925 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12926 = and i32 %12925, 32
  %12927 = icmp eq i32 %12926, 0
  br i1 %12927, label %12929, label %12928

12928:                                            ; preds = %12924
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %12888, i8 zeroext 115, i32 6, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %12930

12929:                                            ; preds = %12924
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %12888, i32 6, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 115) #11
  br label %12930

12930:                                            ; preds = %12928, %12929
  %12931 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %12932 = load i8*, i8** %12931, align 8
  %12933 = getelementptr inbounds i8, i8* %12932, i64 1
  store i8* %12933, i8** %12931, align 8
  store i8 32, i8* %12932, align 1
  %12934 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12935 = and i32 %12934, 32
  %12936 = icmp eq i32 %12935, 0
  br i1 %12936, label %12938, label %12937

12937:                                            ; preds = %12930
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %12888, i8 zeroext -12, i32 %12873, i32 %12873, i32 %12878, i32 1, i32 1, i32 0, i32 5) #11
  br label %12939

12938:                                            ; preds = %12930
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %12888, i32 %12873, i32 %12878, i8 zeroext 102, i8 zeroext 15, i8 zeroext -12) #11
  br label %12939

12939:                                            ; preds = %12937, %12938
  %12940 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12941 = and i32 %12940, 32
  %12942 = icmp eq i32 %12941, 0
  br i1 %12942, label %12944, label %12943

12943:                                            ; preds = %12939
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %12888, i8 zeroext -44, i32 %12873, i32 %12873, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

12944:                                            ; preds = %12939
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %12888, i32 %12873, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -44) #11
  br label %23402

12945:                                            ; preds = %2
  %12946 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12947 = and i32 %12946, 32
  %12948 = icmp eq i32 %12947, 0
  %12949 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %12950 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %12951 = load i64, i64* %12950, align 8
  %12952 = ashr i64 %12951, 35
  %12953 = trunc i64 %12952 to i32
  %12954 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %12955 = load i32, i32* %12954, align 4
  %12956 = and i32 %12955, 255
  %12957 = zext i32 %12956 to i64
  br i1 %12948, label %12968, label %12958

12958:                                            ; preds = %12945
  %12959 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12957, i32 0
  %12960 = load i64, i64* %12959, align 8
  %12961 = ashr i64 %12960, 35
  %12962 = trunc i64 %12961 to i32
  %12963 = add nuw nsw i64 %12957, 1
  %12964 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12963, i32 0
  %12965 = load i64, i64* %12964, align 8
  %12966 = ashr i64 %12965, 35
  %12967 = trunc i64 %12966 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %12949, i8 zeroext 41, i32 %12953, i32 %12962, i32 %12967, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

12968:                                            ; preds = %12945
  %12969 = add nuw nsw i64 %12957, 1
  %12970 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12969, i32 0
  %12971 = load i64, i64* %12970, align 8
  %12972 = ashr i64 %12971, 35
  %12973 = trunc i64 %12972 to i32
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %12949, i32 %12953, i32 %12973, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 41) #11
  br label %23402

12974:                                            ; preds = %2
  %12975 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %12976 = load i64, i64* %12975, align 8
  %12977 = ashr i64 %12976, 35
  %12978 = trunc i64 %12977 to i32
  %12979 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %12980 = load i32, i32* %12979, align 4
  %12981 = and i32 %12980, 255
  %12982 = add nuw nsw i32 %12981, 1
  %12983 = zext i32 %12982 to i64
  %12984 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12983, i32 0
  %12985 = load i64, i64* %12984, align 8
  %12986 = ashr i64 %12985, 35
  %12987 = trunc i64 %12986 to i32
  %12988 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %12989 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12990 = and i32 %12989, 32
  %12991 = icmp eq i32 %12990, 0
  br i1 %12991, label %12993, label %12992

12992:                                            ; preds = %12974
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %12988, i8 zeroext 41, i32 %12978, i32 %12978, i32 %12987, i32 1, i32 2, i32 0, i32 5) #11
  br label %12994

12993:                                            ; preds = %12974
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %12988, i32 %12978, i32 %12987, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 41) #11
  br label %12994

12994:                                            ; preds = %12992, %12993
  %12995 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %12996 = and i32 %12995, 32
  %12997 = icmp eq i32 %12996, 0
  br i1 %12997, label %12999, label %12998

12998:                                            ; preds = %12994
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %12988, i8 zeroext 41, i32 15, i32 15, i32 15, i32 1, i32 2, i32 0, i32 5) #11
  br label %13000

12999:                                            ; preds = %12994
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %12988, i32 15, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 41) #11
  br label %13000

13000:                                            ; preds = %12998, %12999
  %13001 = load i64, i64* %12975, align 8
  %13002 = ashr i64 %13001, 35
  %13003 = trunc i64 %13002 to i32
  %13004 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13005 = and i32 %13004, 32
  %13006 = icmp eq i32 %13005, 0
  br i1 %13006, label %13008, label %13007

13007:                                            ; preds = %13000
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %12988, i8 zeroext -17, i32 %13003, i32 %13003, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

13008:                                            ; preds = %13000
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %12988, i32 %13003, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -17) #11
  br label %23402

13009:                                            ; preds = %2
  %13010 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %13011 = bitcast %"class.v8::internal::TurboAssembler"* %13010 to %"class.v8::internal::SharedTurboAssembler"*
  %13012 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13013 = load i64, i64* %13012, align 8
  %13014 = ashr i64 %13013, 35
  %13015 = trunc i64 %13014 to i32
  %13016 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13017 = load i32, i32* %13016, align 4
  %13018 = and i32 %13017, 255
  %13019 = zext i32 %13018 to i64
  %13020 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13019, i32 0
  %13021 = load i64, i64* %13020, align 8
  %13022 = ashr i64 %13021, 35
  %13023 = trunc i64 %13022 to i32
  %13024 = add nuw nsw i64 %13019, 1
  %13025 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13024, i32 0
  %13026 = load i64, i64* %13025, align 8
  %13027 = ashr i64 %13026, 35
  %13028 = trunc i64 %13027 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler8I64x2GtSENS0_11XMMRegisterES2_S2_S2_(%"class.v8::internal::SharedTurboAssembler"* %13011, i32 %13015, i32 %13023, i32 %13028, i32 15) #11
  br label %23402

13029:                                            ; preds = %2
  %13030 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %13031 = bitcast %"class.v8::internal::TurboAssembler"* %13030 to %"class.v8::internal::SharedTurboAssembler"*
  %13032 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13033 = load i64, i64* %13032, align 8
  %13034 = ashr i64 %13033, 35
  %13035 = trunc i64 %13034 to i32
  %13036 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13037 = load i32, i32* %13036, align 4
  %13038 = and i32 %13037, 255
  %13039 = zext i32 %13038 to i64
  %13040 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13039, i32 0
  %13041 = load i64, i64* %13040, align 8
  %13042 = ashr i64 %13041, 35
  %13043 = trunc i64 %13042 to i32
  %13044 = add nuw nsw i64 %13039, 1
  %13045 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13044, i32 0
  %13046 = load i64, i64* %13045, align 8
  %13047 = ashr i64 %13046, 35
  %13048 = trunc i64 %13047 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler8I64x2GeSENS0_11XMMRegisterES2_S2_S2_(%"class.v8::internal::SharedTurboAssembler"* %13031, i32 %13035, i32 %13043, i32 %13048, i32 15) #11
  br label %23402

13049:                                            ; preds = %2
  %13050 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %13051 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13052 = load i64, i64* %13051, align 8
  %13053 = ashr i64 %13052, 35
  %13054 = trunc i64 %13053 to i32
  %13055 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13056 = load i32, i32* %13055, align 4
  %13057 = and i32 %13056, 255
  %13058 = add nuw nsw i32 %13057, 1
  %13059 = zext i32 %13058 to i64
  %13060 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13059, i32 0
  %13061 = load i64, i64* %13060, align 8
  %13062 = and i64 %13061, 7
  %13063 = icmp eq i64 %13062, 3
  br i1 %13063, label %13064, label %13094

13064:                                            ; preds = %13049
  %13065 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13066 = and i32 %13065, 32
  %13067 = icmp eq i32 %13066, 0
  %13068 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %13069 = zext i32 %13057 to i64
  br i1 %13067, label %13084, label %13070

13070:                                            ; preds = %13064
  %13071 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13069, i32 0
  %13072 = load i64, i64* %13071, align 8
  %13073 = ashr i64 %13072, 35
  %13074 = trunc i64 %13073 to i32
  %13075 = add nuw nsw i64 %13069, 1
  %13076 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13075
  %13077 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %13050, %"class.v8::internal::compiler::InstructionOperand"* %13076) #11
  %13078 = extractvalue { i64, i64 } %13077, 1
  %13079 = trunc i64 %13078 to i8
  %13080 = and i8 %13079, 63
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13068, i8 zeroext 115, i32 2, i32 %13054, i32 %13074, i32 1, i32 1, i32 0, i32 5) #11
  %13081 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %13082 = load i8*, i8** %13081, align 8
  %13083 = getelementptr inbounds i8, i8* %13082, i64 1
  store i8* %13083, i8** %13081, align 8
  store i8 %13080, i8* %13082, align 1
  br label %23402

13084:                                            ; preds = %13064
  %13085 = add nuw nsw i64 %13069, 1
  %13086 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13085
  %13087 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %13050, %"class.v8::internal::compiler::InstructionOperand"* %13086) #11
  %13088 = extractvalue { i64, i64 } %13087, 1
  %13089 = trunc i64 %13088 to i8
  %13090 = and i8 %13089, 63
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %13068, i32 2, i32 %13054, i8 zeroext 102, i8 zeroext 15, i8 zeroext 115) #11
  %13091 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %13092 = load i8*, i8** %13091, align 8
  %13093 = getelementptr inbounds i8, i8* %13092, i64 1
  store i8* %13093, i8** %13091, align 8
  store i8 %13090, i8* %13092, align 1
  br label %23402

13094:                                            ; preds = %13049
  %13095 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %13096 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %13095, i64 0, i32 0, i32 0, i32 0
  %13097 = ashr i64 %13061, 35
  %13098 = trunc i64 %13097 to i32
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %13096, i32 10, i32 %13098, i32 8) #11
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %13096, i8 zeroext 4, i32 10, i64 63, i32 8) #11
  tail call void @_ZN2v88internal14TurboAssembler4MovqENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %13095, i32 15, i32 10) #11
  %13099 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13100 = and i32 %13099, 32
  %13101 = icmp eq i32 %13100, 0
  br i1 %13101, label %13110, label %13102

13102:                                            ; preds = %13094
  %13103 = load i32, i32* %13055, align 4
  %13104 = and i32 %13103, 255
  %13105 = zext i32 %13104 to i64
  %13106 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13105, i32 0
  %13107 = load i64, i64* %13106, align 8
  %13108 = ashr i64 %13107, 35
  %13109 = trunc i64 %13108 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13096, i8 zeroext -45, i32 %13054, i32 %13109, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

13110:                                            ; preds = %13094
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %13096, i32 %13054, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -45) #11
  br label %23402

13111:                                            ; preds = %2
  %13112 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %13113 = bitcast %"class.v8::internal::TurboAssembler"* %13112 to %"class.v8::internal::SharedTurboAssembler"*
  %13114 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13115 = load i64, i64* %13114, align 8
  %13116 = ashr i64 %13115, 35
  %13117 = trunc i64 %13116 to i32
  %13118 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13119 = load i32, i32* %13118, align 4
  %13120 = and i32 %13119, 255
  %13121 = zext i32 %13120 to i64
  %13122 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13121, i32 0
  %13123 = load i64, i64* %13122, align 8
  %13124 = ashr i64 %13123, 35
  %13125 = trunc i64 %13124 to i32
  %13126 = add nuw nsw i64 %13121, 1
  %13127 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13126, i32 0
  %13128 = load i64, i64* %13127, align 8
  %13129 = ashr i64 %13128, 35
  %13130 = trunc i64 %13129 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler11I64x2ExtMulENS0_11XMMRegisterES2_S2_S2_bb(%"class.v8::internal::SharedTurboAssembler"* %13113, i32 %13117, i32 %13125, i32 %13130, i32 15, i1 zeroext true, i1 zeroext true) #11
  br label %23402

13131:                                            ; preds = %2
  %13132 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %13133 = bitcast %"class.v8::internal::TurboAssembler"* %13132 to %"class.v8::internal::SharedTurboAssembler"*
  %13134 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13135 = load i64, i64* %13134, align 8
  %13136 = ashr i64 %13135, 35
  %13137 = trunc i64 %13136 to i32
  %13138 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13139 = load i32, i32* %13138, align 4
  %13140 = and i32 %13139, 255
  %13141 = zext i32 %13140 to i64
  %13142 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13141, i32 0
  %13143 = load i64, i64* %13142, align 8
  %13144 = ashr i64 %13143, 35
  %13145 = trunc i64 %13144 to i32
  %13146 = add nuw nsw i64 %13141, 1
  %13147 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13146, i32 0
  %13148 = load i64, i64* %13147, align 8
  %13149 = ashr i64 %13148, 35
  %13150 = trunc i64 %13149 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler11I64x2ExtMulENS0_11XMMRegisterES2_S2_S2_bb(%"class.v8::internal::SharedTurboAssembler"* %13133, i32 %13137, i32 %13145, i32 %13150, i32 15, i1 zeroext false, i1 zeroext true) #11
  br label %23402

13151:                                            ; preds = %2
  %13152 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %13153 = bitcast %"class.v8::internal::TurboAssembler"* %13152 to %"class.v8::internal::SharedTurboAssembler"*
  %13154 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13155 = load i64, i64* %13154, align 8
  %13156 = ashr i64 %13155, 35
  %13157 = trunc i64 %13156 to i32
  %13158 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13159 = load i32, i32* %13158, align 4
  %13160 = and i32 %13159, 255
  %13161 = zext i32 %13160 to i64
  %13162 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13161, i32 0
  %13163 = load i64, i64* %13162, align 8
  %13164 = ashr i64 %13163, 35
  %13165 = trunc i64 %13164 to i32
  %13166 = add nuw nsw i64 %13161, 1
  %13167 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13166, i32 0
  %13168 = load i64, i64* %13167, align 8
  %13169 = ashr i64 %13168, 35
  %13170 = trunc i64 %13169 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler11I64x2ExtMulENS0_11XMMRegisterES2_S2_S2_bb(%"class.v8::internal::SharedTurboAssembler"* %13153, i32 %13157, i32 %13165, i32 %13170, i32 15, i1 zeroext true, i1 zeroext false) #11
  br label %23402

13171:                                            ; preds = %2
  %13172 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %13173 = bitcast %"class.v8::internal::TurboAssembler"* %13172 to %"class.v8::internal::SharedTurboAssembler"*
  %13174 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13175 = load i64, i64* %13174, align 8
  %13176 = ashr i64 %13175, 35
  %13177 = trunc i64 %13176 to i32
  %13178 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13179 = load i32, i32* %13178, align 4
  %13180 = and i32 %13179, 255
  %13181 = zext i32 %13180 to i64
  %13182 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13181, i32 0
  %13183 = load i64, i64* %13182, align 8
  %13184 = ashr i64 %13183, 35
  %13185 = trunc i64 %13184 to i32
  %13186 = add nuw nsw i64 %13181, 1
  %13187 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13186, i32 0
  %13188 = load i64, i64* %13187, align 8
  %13189 = ashr i64 %13188, 35
  %13190 = trunc i64 %13189 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler11I64x2ExtMulENS0_11XMMRegisterES2_S2_S2_bb(%"class.v8::internal::SharedTurboAssembler"* %13173, i32 %13177, i32 %13185, i32 %13190, i32 15, i1 zeroext false, i1 zeroext false) #11
  br label %23402

13191:                                            ; preds = %2
  %13192 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13193 = load i64, i64* %13192, align 8
  %13194 = ashr i64 %13193, 35
  %13195 = trunc i64 %13194 to i32
  %13196 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13197 = load i32, i32* %13196, align 4
  %13198 = and i32 %13197, 255
  %13199 = zext i32 %13198 to i64
  %13200 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13199, i32 0
  %13201 = load i64, i64* %13200, align 8
  %13202 = ashr i64 %13201, 35
  %13203 = trunc i64 %13202 to i32
  %13204 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %13205 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13206 = and i32 %13205, 32
  %13207 = icmp eq i32 %13206, 0
  br i1 %13207, label %13209, label %13208

13208:                                            ; preds = %13191
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13204, i8 zeroext 37, i32 %13195, i32 0, i32 %13203, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

13209:                                            ; preds = %13191
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %13204, i32 %13195, i32 %13203, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 37) #11
  br label %23402

13210:                                            ; preds = %2
  %13211 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %13212 = bitcast %"class.v8::internal::TurboAssembler"* %13211 to %"class.v8::internal::SharedTurboAssembler"*
  %13213 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13214 = load i64, i64* %13213, align 8
  %13215 = ashr i64 %13214, 35
  %13216 = trunc i64 %13215 to i32
  %13217 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13218 = load i32, i32* %13217, align 4
  %13219 = and i32 %13218, 255
  %13220 = zext i32 %13219 to i64
  %13221 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13220, i32 0
  %13222 = load i64, i64* %13221, align 8
  %13223 = ashr i64 %13222, 35
  %13224 = trunc i64 %13223 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler22I64x2SConvertI32x4HighENS0_11XMMRegisterES2_(%"class.v8::internal::SharedTurboAssembler"* %13212, i32 %13216, i32 %13224) #11
  br label %23402

13225:                                            ; preds = %2
  %13226 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13227 = load i64, i64* %13226, align 8
  %13228 = ashr i64 %13227, 35
  %13229 = trunc i64 %13228 to i32
  %13230 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13231 = load i32, i32* %13230, align 4
  %13232 = and i32 %13231, 255
  %13233 = zext i32 %13232 to i64
  %13234 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13233, i32 0
  %13235 = load i64, i64* %13234, align 8
  %13236 = ashr i64 %13235, 35
  %13237 = trunc i64 %13236 to i32
  %13238 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %13239 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13240 = and i32 %13239, 32
  %13241 = icmp eq i32 %13240, 0
  br i1 %13241, label %13243, label %13242

13242:                                            ; preds = %13225
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13238, i8 zeroext 53, i32 %13229, i32 0, i32 %13237, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

13243:                                            ; preds = %13225
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %13238, i32 %13229, i32 %13237, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 53) #11
  br label %23402

13244:                                            ; preds = %2
  %13245 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %13246 = bitcast %"class.v8::internal::TurboAssembler"* %13245 to %"class.v8::internal::SharedTurboAssembler"*
  %13247 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13248 = load i64, i64* %13247, align 8
  %13249 = ashr i64 %13248, 35
  %13250 = trunc i64 %13249 to i32
  %13251 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13252 = load i32, i32* %13251, align 4
  %13253 = and i32 %13252, 255
  %13254 = zext i32 %13253 to i64
  %13255 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13254, i32 0
  %13256 = load i64, i64* %13255, align 8
  %13257 = ashr i64 %13256, 35
  %13258 = trunc i64 %13257 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler22I64x2UConvertI32x4HighENS0_11XMMRegisterES2_S2_(%"class.v8::internal::SharedTurboAssembler"* %13246, i32 %13250, i32 %13258, i32 15) #11
  br label %23402

13259:                                            ; preds = %2
  %13260 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13261 = load i64, i64* %13260, align 8
  %13262 = ashr i64 %13261, 35
  %13263 = trunc i64 %13262 to i32
  %13264 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13265 = load i32, i32* %13264, align 4
  %13266 = and i32 %13265, 255
  %13267 = zext i32 %13266 to i64
  %13268 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13267, i32 0
  %13269 = load i64, i64* %13268, align 8
  %13270 = and i64 %13269, 7
  %13271 = icmp ugt i64 %13270, 4
  %13272 = and i64 %13269, 24
  %13273 = icmp eq i64 %13272, 0
  %13274 = and i1 %13271, %13273
  br i1 %13274, label %13278, label %13275

13275:                                            ; preds = %13259
  %13276 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %13277 = bitcast %"class.v8::internal::TurboAssembler"* %13276 to %"class.v8::internal::SharedTurboAssembler"*
  br label %13293

13278:                                            ; preds = %13259
  %13279 = lshr i64 %13269, 5
  %13280 = trunc i64 %13279 to i8
  %13281 = icmp ult i8 %13280, 12
  %13282 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %13283 = bitcast %"class.v8::internal::TurboAssembler"* %13282 to %"class.v8::internal::SharedTurboAssembler"*
  br i1 %13281, label %13284, label %13293

13284:                                            ; preds = %13278
  %13285 = ashr i64 %13269, 35
  %13286 = trunc i64 %13285 to i32
  %13287 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %13282, i64 0, i32 0, i32 0, i32 0
  %13288 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13289 = and i32 %13288, 32
  %13290 = icmp eq i32 %13289, 0
  br i1 %13290, label %13292, label %13291

13291:                                            ; preds = %13284
  tail call void @_ZN2v88internal9Assembler5vmovdENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::Assembler"* %13287, i32 %13263, i32 %13286) #11
  br label %13306

13292:                                            ; preds = %13284
  tail call void @_ZN2v88internal9Assembler4movdENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::Assembler"* %13287, i32 %13263, i32 %13286) #11
  br label %13306

13293:                                            ; preds = %13275, %13278
  %13294 = phi %"class.v8::internal::SharedTurboAssembler"* [ %13277, %13275 ], [ %13283, %13278 ]
  %13295 = ashr i64 %13269, 35
  %13296 = trunc i64 %13295 to i32
  %13297 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %13296, i32 0) #11
  %13298 = extractvalue { i64, i32 } %13297, 0
  %13299 = extractvalue { i64, i32 } %13297, 1
  %13300 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %13294, i64 0, i32 0, i32 0
  %13301 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13302 = and i32 %13301, 32
  %13303 = icmp eq i32 %13302, 0
  br i1 %13303, label %13305, label %13304

13304:                                            ; preds = %13293
  call void @_ZN2v88internal9Assembler5vmovdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %13300, i32 %13263, i64 %13298, i32 %13299) #11
  br label %13306

13305:                                            ; preds = %13293
  call void @_ZN2v88internal9Assembler4movdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %13300, i32 %13263, i64 %13298, i32 %13299) #11
  br label %13306

13306:                                            ; preds = %13305, %13304, %13292, %13291
  %13307 = phi %"class.v8::internal::SharedTurboAssembler"* [ %13283, %13291 ], [ %13283, %13292 ], [ %13294, %13304 ], [ %13294, %13305 ]
  %13308 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %13307, i64 0, i32 0, i32 0
  %13309 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13310 = and i32 %13309, 32
  %13311 = icmp eq i32 %13310, 0
  br i1 %13311, label %13316, label %13312

13312:                                            ; preds = %13306
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13308, i8 zeroext 112, i32 %13263, i32 0, i32 %13263, i32 1, i32 1, i32 0, i32 5) #11
  %13313 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %13307, i64 0, i32 0, i32 0, i32 0, i32 4
  %13314 = load i8*, i8** %13313, align 8
  %13315 = getelementptr inbounds i8, i8* %13314, i64 1
  store i8* %13315, i8** %13313, align 8
  store i8 0, i8* %13314, align 1
  br label %23402

13316:                                            ; preds = %13306
  call void @_ZN2v88internal9Assembler6pshufdENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %13308, i32 %13263, i32 %13263, i8 zeroext 0) #11
  br label %23402

13317:                                            ; preds = %2
  %13318 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %13319 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %13320 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13321 = load i64, i64* %13320, align 8
  %13322 = ashr i64 %13321, 35
  %13323 = trunc i64 %13322 to i32
  %13324 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13325 = load i32, i32* %13324, align 4
  %13326 = and i32 %13325, 255
  %13327 = zext i32 %13326 to i64
  %13328 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13327, i32 0
  %13329 = load i64, i64* %13328, align 8
  %13330 = ashr i64 %13329, 35
  %13331 = trunc i64 %13330 to i32
  %13332 = add nuw nsw i64 %13327, 1
  %13333 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13332
  %13334 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %13319, %"class.v8::internal::compiler::InstructionOperand"* %13333) #11
  %13335 = extractvalue { i64, i64 } %13334, 1
  %13336 = trunc i64 %13335 to i8
  call void @_ZN2v88internal14TurboAssembler6PextrdENS0_8RegisterENS0_11XMMRegisterEh(%"class.v8::internal::TurboAssembler"* %13318, i32 %13323, i32 %13331, i8 zeroext %13336) #11
  br label %23402

13337:                                            ; preds = %2
  %13338 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13339 = load i64, i64* %13338, align 8
  %13340 = ashr i64 %13339, 35
  %13341 = trunc i64 %13340 to i32
  %13342 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %13343 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13344 = and i32 %13343, 32
  %13345 = icmp eq i32 %13344, 0
  br i1 %13345, label %13347, label %13346

13346:                                            ; preds = %13337
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %13342, i8 zeroext 40, i32 15, i32 0, i32 %13341) #11
  br label %13348

13347:                                            ; preds = %13337
  tail call void @_ZN2v88internal9Assembler6movapsENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %13342, i32 15, i32 %13341) #11
  br label %13348

13348:                                            ; preds = %13346, %13347
  %13349 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13350 = and i32 %13349, 32
  %13351 = icmp eq i32 %13350, 0
  br i1 %13351, label %13356, label %13352

13352:                                            ; preds = %13348
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %13342, i8 zeroext -62, i32 15, i32 15, i32 15) #11
  %13353 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %13354 = load i8*, i8** %13353, align 8
  %13355 = getelementptr inbounds i8, i8* %13354, i64 1
  store i8* %13355, i8** %13353, align 8
  store i8 0, i8* %13354, align 1
  br label %13357

13356:                                            ; preds = %13348
  tail call void @_ZN2v88internal9Assembler5cmppsENS0_11XMMRegisterES2_a(%"class.v8::internal::Assembler"* %13342, i32 15, i32 15, i8 signext 0) #11
  br label %13357

13357:                                            ; preds = %13352, %13356
  %13358 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13359 = and i32 %13358, 32
  %13360 = icmp eq i32 %13359, 0
  br i1 %13360, label %13362, label %13361

13361:                                            ; preds = %13357
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13342, i8 zeroext -37, i32 %13341, i32 %13341, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %13363

13362:                                            ; preds = %13357
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %13342, i32 %13341, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -37) #11
  br label %13363

13363:                                            ; preds = %13361, %13362
  %13364 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13365 = and i32 %13364, 32
  %13366 = icmp eq i32 %13365, 0
  br i1 %13366, label %13368, label %13367

13367:                                            ; preds = %13363
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13342, i8 zeroext -17, i32 15, i32 15, i32 %13341, i32 1, i32 1, i32 0, i32 5) #11
  br label %13369

13368:                                            ; preds = %13363
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %13342, i32 15, i32 %13341, i8 zeroext 102, i8 zeroext 15, i8 zeroext -17) #11
  br label %13369

13369:                                            ; preds = %13367, %13368
  %13370 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13371 = and i32 %13370, 32
  %13372 = icmp eq i32 %13371, 0
  br i1 %13372, label %13374, label %13373

13373:                                            ; preds = %13369
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13342, i8 zeroext 91, i32 %13341, i32 0, i32 %13341, i32 2, i32 1, i32 0, i32 5) #11
  br label %13375

13374:                                            ; preds = %13369
  tail call void @_ZN2v88internal9Assembler9cvttps2dqENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %13342, i32 %13341, i32 %13341) #11
  br label %13375

13375:                                            ; preds = %13373, %13374
  %13376 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13377 = and i32 %13376, 32
  %13378 = icmp eq i32 %13377, 0
  br i1 %13378, label %13380, label %13379

13379:                                            ; preds = %13375
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13342, i8 zeroext -37, i32 15, i32 15, i32 %13341, i32 1, i32 1, i32 0, i32 5) #11
  br label %13381

13380:                                            ; preds = %13375
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %13342, i32 15, i32 %13341, i8 zeroext 102, i8 zeroext 15, i8 zeroext -37) #11
  br label %13381

13381:                                            ; preds = %13379, %13380
  %13382 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13383 = and i32 %13382, 32
  %13384 = icmp eq i32 %13383, 0
  br i1 %13384, label %13386, label %13385

13385:                                            ; preds = %13381
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13342, i8 zeroext 114, i32 4, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %13387

13386:                                            ; preds = %13381
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %13342, i32 4, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 114) #11
  br label %13387

13387:                                            ; preds = %13385, %13386
  %13388 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %13389 = load i8*, i8** %13388, align 8
  %13390 = getelementptr inbounds i8, i8* %13389, i64 1
  store i8* %13390, i8** %13388, align 8
  store i8 31, i8* %13389, align 1
  %13391 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13392 = and i32 %13391, 32
  %13393 = icmp eq i32 %13392, 0
  br i1 %13393, label %13395, label %13394

13394:                                            ; preds = %13387
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13342, i8 zeroext -17, i32 %13341, i32 %13341, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

13395:                                            ; preds = %13387
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %13342, i32 %13341, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -17) #11
  br label %23402

13396:                                            ; preds = %2
  %13397 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13398 = load i64, i64* %13397, align 8
  %13399 = ashr i64 %13398, 35
  %13400 = trunc i64 %13399 to i32
  %13401 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13402 = load i32, i32* %13401, align 4
  %13403 = and i32 %13402, 255
  %13404 = zext i32 %13403 to i64
  %13405 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13404, i32 0
  %13406 = load i64, i64* %13405, align 8
  %13407 = ashr i64 %13406, 35
  %13408 = trunc i64 %13407 to i32
  %13409 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %13410 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13411 = and i32 %13410, 32
  %13412 = icmp eq i32 %13411, 0
  br i1 %13412, label %13414, label %13413

13413:                                            ; preds = %13396
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13409, i8 zeroext 35, i32 %13400, i32 0, i32 %13408, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

13414:                                            ; preds = %13396
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %13409, i32 %13400, i32 %13408, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 35) #11
  br label %23402

13415:                                            ; preds = %2
  %13416 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %13417 = bitcast %"class.v8::internal::TurboAssembler"* %13416 to %"class.v8::internal::SharedTurboAssembler"*
  %13418 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13419 = load i64, i64* %13418, align 8
  %13420 = ashr i64 %13419, 35
  %13421 = trunc i64 %13420 to i32
  %13422 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13423 = load i32, i32* %13422, align 4
  %13424 = and i32 %13423, 255
  %13425 = zext i32 %13424 to i64
  %13426 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13425, i32 0
  %13427 = load i64, i64* %13426, align 8
  %13428 = ashr i64 %13427, 35
  %13429 = trunc i64 %13428 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler22I32x4SConvertI16x8HighENS0_11XMMRegisterES2_(%"class.v8::internal::SharedTurboAssembler"* %13417, i32 %13421, i32 %13429) #11
  br label %23402

13430:                                            ; preds = %2
  %13431 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13432 = load i64, i64* %13431, align 8
  %13433 = ashr i64 %13432, 35
  %13434 = trunc i64 %13433 to i32
  %13435 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13436 = load i32, i32* %13435, align 4
  %13437 = and i32 %13436, 255
  %13438 = zext i32 %13437 to i64
  %13439 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13438, i32 0
  %13440 = load i64, i64* %13439, align 8
  %13441 = ashr i64 %13440, 35
  %13442 = trunc i64 %13441 to i32
  %13443 = icmp eq i32 %13434, %13442
  %13444 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %13445 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13446 = and i32 %13445, 32
  %13447 = icmp eq i32 %13446, 0
  br i1 %13443, label %13448, label %13457

13448:                                            ; preds = %13430
  br i1 %13447, label %13450, label %13449

13449:                                            ; preds = %13448
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13444, i8 zeroext 118, i32 15, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %13451

13450:                                            ; preds = %13448
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %13444, i32 15, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 118) #11
  br label %13451

13451:                                            ; preds = %13449, %13450
  %13452 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13453 = and i32 %13452, 32
  %13454 = icmp eq i32 %13453, 0
  br i1 %13454, label %13456, label %13455

13455:                                            ; preds = %13451
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13444, i8 zeroext 10, i32 %13434, i32 %13434, i32 15, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

13456:                                            ; preds = %13451
  tail call void @_ZN2v88internal9Assembler11ssse3_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %13444, i32 %13434, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 10) #11
  br label %23402

13457:                                            ; preds = %13430
  br i1 %13447, label %13459, label %13458

13458:                                            ; preds = %13457
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13444, i8 zeroext -17, i32 %13434, i32 %13434, i32 %13434, i32 1, i32 1, i32 0, i32 5) #11
  br label %13460

13459:                                            ; preds = %13457
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %13444, i32 %13434, i32 %13434, i8 zeroext 102, i8 zeroext 15, i8 zeroext -17) #11
  br label %13460

13460:                                            ; preds = %13458, %13459
  %13461 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13462 = and i32 %13461, 32
  %13463 = icmp eq i32 %13462, 0
  br i1 %13463, label %13465, label %13464

13464:                                            ; preds = %13460
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13444, i8 zeroext -6, i32 %13434, i32 %13434, i32 %13442, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

13465:                                            ; preds = %13460
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %13444, i32 %13434, i32 %13442, i8 zeroext 102, i8 zeroext 15, i8 zeroext -6) #11
  br label %23402

13466:                                            ; preds = %2
  %13467 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %13468 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13469 = load i64, i64* %13468, align 8
  %13470 = ashr i64 %13469, 35
  %13471 = trunc i64 %13470 to i32
  %13472 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13473 = load i32, i32* %13472, align 4
  %13474 = and i32 %13473, 255
  %13475 = add nuw nsw i32 %13474, 1
  %13476 = zext i32 %13475 to i64
  %13477 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13476, i32 0
  %13478 = load i64, i64* %13477, align 8
  %13479 = and i64 %13478, 7
  %13480 = icmp eq i64 %13479, 3
  br i1 %13480, label %13481, label %13511

13481:                                            ; preds = %13466
  %13482 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13483 = and i32 %13482, 32
  %13484 = icmp eq i32 %13483, 0
  %13485 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %13486 = zext i32 %13474 to i64
  br i1 %13484, label %13501, label %13487

13487:                                            ; preds = %13481
  %13488 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13486, i32 0
  %13489 = load i64, i64* %13488, align 8
  %13490 = ashr i64 %13489, 35
  %13491 = trunc i64 %13490 to i32
  %13492 = add nuw nsw i64 %13486, 1
  %13493 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13492
  %13494 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %13467, %"class.v8::internal::compiler::InstructionOperand"* %13493) #11
  %13495 = extractvalue { i64, i64 } %13494, 1
  %13496 = trunc i64 %13495 to i8
  %13497 = and i8 %13496, 31
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13485, i8 zeroext 114, i32 6, i32 %13471, i32 %13491, i32 1, i32 1, i32 0, i32 5) #11
  %13498 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %13499 = load i8*, i8** %13498, align 8
  %13500 = getelementptr inbounds i8, i8* %13499, i64 1
  store i8* %13500, i8** %13498, align 8
  store i8 %13497, i8* %13499, align 1
  br label %23402

13501:                                            ; preds = %13481
  %13502 = add nuw nsw i64 %13486, 1
  %13503 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13502
  %13504 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %13467, %"class.v8::internal::compiler::InstructionOperand"* %13503) #11
  %13505 = extractvalue { i64, i64 } %13504, 1
  %13506 = trunc i64 %13505 to i8
  %13507 = and i8 %13506, 31
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %13485, i32 6, i32 %13471, i8 zeroext 102, i8 zeroext 15, i8 zeroext 114) #11
  %13508 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %13509 = load i8*, i8** %13508, align 8
  %13510 = getelementptr inbounds i8, i8* %13509, i64 1
  store i8* %13510, i8** %13508, align 8
  store i8 %13507, i8* %13509, align 1
  br label %23402

13511:                                            ; preds = %13466
  %13512 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %13513 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %13512, i64 0, i32 0, i32 0, i32 0
  %13514 = ashr i64 %13478, 35
  %13515 = trunc i64 %13514 to i32
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %13513, i32 10, i32 %13515, i32 8) #11
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %13513, i8 zeroext 4, i32 10, i64 31, i32 8) #11
  tail call void @_ZN2v88internal14TurboAssembler4MovqENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %13512, i32 15, i32 10) #11
  %13516 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13517 = and i32 %13516, 32
  %13518 = icmp eq i32 %13517, 0
  br i1 %13518, label %13527, label %13519

13519:                                            ; preds = %13511
  %13520 = load i32, i32* %13472, align 4
  %13521 = and i32 %13520, 255
  %13522 = zext i32 %13521 to i64
  %13523 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13522, i32 0
  %13524 = load i64, i64* %13523, align 8
  %13525 = ashr i64 %13524, 35
  %13526 = trunc i64 %13525 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13513, i8 zeroext -14, i32 %13471, i32 %13526, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

13527:                                            ; preds = %13511
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %13513, i32 %13471, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -14) #11
  br label %23402

13528:                                            ; preds = %2
  %13529 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %13530 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13531 = load i64, i64* %13530, align 8
  %13532 = ashr i64 %13531, 35
  %13533 = trunc i64 %13532 to i32
  %13534 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13535 = load i32, i32* %13534, align 4
  %13536 = and i32 %13535, 255
  %13537 = add nuw nsw i32 %13536, 1
  %13538 = zext i32 %13537 to i64
  %13539 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13538, i32 0
  %13540 = load i64, i64* %13539, align 8
  %13541 = and i64 %13540, 7
  %13542 = icmp eq i64 %13541, 3
  br i1 %13542, label %13543, label %13573

13543:                                            ; preds = %13528
  %13544 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13545 = and i32 %13544, 32
  %13546 = icmp eq i32 %13545, 0
  %13547 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %13548 = zext i32 %13536 to i64
  br i1 %13546, label %13563, label %13549

13549:                                            ; preds = %13543
  %13550 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13548, i32 0
  %13551 = load i64, i64* %13550, align 8
  %13552 = ashr i64 %13551, 35
  %13553 = trunc i64 %13552 to i32
  %13554 = add nuw nsw i64 %13548, 1
  %13555 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13554
  %13556 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %13529, %"class.v8::internal::compiler::InstructionOperand"* %13555) #11
  %13557 = extractvalue { i64, i64 } %13556, 1
  %13558 = trunc i64 %13557 to i8
  %13559 = and i8 %13558, 31
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13547, i8 zeroext 114, i32 4, i32 %13533, i32 %13553, i32 1, i32 1, i32 0, i32 5) #11
  %13560 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %13561 = load i8*, i8** %13560, align 8
  %13562 = getelementptr inbounds i8, i8* %13561, i64 1
  store i8* %13562, i8** %13560, align 8
  store i8 %13559, i8* %13561, align 1
  br label %23402

13563:                                            ; preds = %13543
  %13564 = add nuw nsw i64 %13548, 1
  %13565 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13564
  %13566 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %13529, %"class.v8::internal::compiler::InstructionOperand"* %13565) #11
  %13567 = extractvalue { i64, i64 } %13566, 1
  %13568 = trunc i64 %13567 to i8
  %13569 = and i8 %13568, 31
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %13547, i32 4, i32 %13533, i8 zeroext 102, i8 zeroext 15, i8 zeroext 114) #11
  %13570 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %13571 = load i8*, i8** %13570, align 8
  %13572 = getelementptr inbounds i8, i8* %13571, i64 1
  store i8* %13572, i8** %13570, align 8
  store i8 %13569, i8* %13571, align 1
  br label %23402

13573:                                            ; preds = %13528
  %13574 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %13575 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %13574, i64 0, i32 0, i32 0, i32 0
  %13576 = ashr i64 %13540, 35
  %13577 = trunc i64 %13576 to i32
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %13575, i32 10, i32 %13577, i32 8) #11
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %13575, i8 zeroext 4, i32 10, i64 31, i32 8) #11
  tail call void @_ZN2v88internal14TurboAssembler4MovqENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %13574, i32 15, i32 10) #11
  %13578 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13579 = and i32 %13578, 32
  %13580 = icmp eq i32 %13579, 0
  br i1 %13580, label %13589, label %13581

13581:                                            ; preds = %13573
  %13582 = load i32, i32* %13534, align 4
  %13583 = and i32 %13582, 255
  %13584 = zext i32 %13583 to i64
  %13585 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13584, i32 0
  %13586 = load i64, i64* %13585, align 8
  %13587 = ashr i64 %13586, 35
  %13588 = trunc i64 %13587 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13575, i8 zeroext -30, i32 %13533, i32 %13588, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

13589:                                            ; preds = %13573
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %13575, i32 %13533, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -30) #11
  br label %23402

13590:                                            ; preds = %2
  %13591 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13592 = and i32 %13591, 32
  %13593 = icmp eq i32 %13592, 0
  %13594 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %13595 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13596 = load i64, i64* %13595, align 8
  %13597 = ashr i64 %13596, 35
  %13598 = trunc i64 %13597 to i32
  %13599 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13600 = load i32, i32* %13599, align 4
  %13601 = and i32 %13600, 255
  %13602 = zext i32 %13601 to i64
  br i1 %13593, label %13613, label %13603

13603:                                            ; preds = %13590
  %13604 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13602, i32 0
  %13605 = load i64, i64* %13604, align 8
  %13606 = ashr i64 %13605, 35
  %13607 = trunc i64 %13606 to i32
  %13608 = add nuw nsw i64 %13602, 1
  %13609 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13608, i32 0
  %13610 = load i64, i64* %13609, align 8
  %13611 = ashr i64 %13610, 35
  %13612 = trunc i64 %13611 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13594, i8 zeroext -2, i32 %13598, i32 %13607, i32 %13612, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

13613:                                            ; preds = %13590
  %13614 = add nuw nsw i64 %13602, 1
  %13615 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13614, i32 0
  %13616 = load i64, i64* %13615, align 8
  %13617 = ashr i64 %13616, 35
  %13618 = trunc i64 %13617 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %13594, i32 %13598, i32 %13618, i8 zeroext 102, i8 zeroext 15, i8 zeroext -2) #11
  br label %23402

13619:                                            ; preds = %2
  %13620 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13621 = and i32 %13620, 32
  %13622 = icmp eq i32 %13621, 0
  %13623 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %13624 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13625 = load i64, i64* %13624, align 8
  %13626 = ashr i64 %13625, 35
  %13627 = trunc i64 %13626 to i32
  %13628 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13629 = load i32, i32* %13628, align 4
  %13630 = and i32 %13629, 255
  %13631 = zext i32 %13630 to i64
  br i1 %13622, label %13642, label %13632

13632:                                            ; preds = %13619
  %13633 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13631, i32 0
  %13634 = load i64, i64* %13633, align 8
  %13635 = ashr i64 %13634, 35
  %13636 = trunc i64 %13635 to i32
  %13637 = add nuw nsw i64 %13631, 1
  %13638 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13637, i32 0
  %13639 = load i64, i64* %13638, align 8
  %13640 = ashr i64 %13639, 35
  %13641 = trunc i64 %13640 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13623, i8 zeroext -6, i32 %13627, i32 %13636, i32 %13641, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

13642:                                            ; preds = %13619
  %13643 = add nuw nsw i64 %13631, 1
  %13644 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13643, i32 0
  %13645 = load i64, i64* %13644, align 8
  %13646 = ashr i64 %13645, 35
  %13647 = trunc i64 %13646 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %13623, i32 %13627, i32 %13647, i8 zeroext 102, i8 zeroext 15, i8 zeroext -6) #11
  br label %23402

13648:                                            ; preds = %2
  %13649 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13650 = and i32 %13649, 32
  %13651 = icmp eq i32 %13650, 0
  %13652 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %13653 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13654 = load i64, i64* %13653, align 8
  %13655 = ashr i64 %13654, 35
  %13656 = trunc i64 %13655 to i32
  %13657 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13658 = load i32, i32* %13657, align 4
  %13659 = and i32 %13658, 255
  %13660 = zext i32 %13659 to i64
  br i1 %13651, label %13671, label %13661

13661:                                            ; preds = %13648
  %13662 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13660, i32 0
  %13663 = load i64, i64* %13662, align 8
  %13664 = ashr i64 %13663, 35
  %13665 = trunc i64 %13664 to i32
  %13666 = add nuw nsw i64 %13660, 1
  %13667 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13666, i32 0
  %13668 = load i64, i64* %13667, align 8
  %13669 = ashr i64 %13668, 35
  %13670 = trunc i64 %13669 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13652, i8 zeroext 64, i32 %13656, i32 %13665, i32 %13670, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

13671:                                            ; preds = %13648
  %13672 = add nuw nsw i64 %13660, 1
  %13673 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13672, i32 0
  %13674 = load i64, i64* %13673, align 8
  %13675 = ashr i64 %13674, 35
  %13676 = trunc i64 %13675 to i32
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %13652, i32 %13656, i32 %13676, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 64) #11
  br label %23402

13677:                                            ; preds = %2
  %13678 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13679 = and i32 %13678, 32
  %13680 = icmp eq i32 %13679, 0
  %13681 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %13682 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13683 = load i64, i64* %13682, align 8
  %13684 = ashr i64 %13683, 35
  %13685 = trunc i64 %13684 to i32
  %13686 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13687 = load i32, i32* %13686, align 4
  %13688 = and i32 %13687, 255
  %13689 = zext i32 %13688 to i64
  br i1 %13680, label %13700, label %13690

13690:                                            ; preds = %13677
  %13691 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13689, i32 0
  %13692 = load i64, i64* %13691, align 8
  %13693 = ashr i64 %13692, 35
  %13694 = trunc i64 %13693 to i32
  %13695 = add nuw nsw i64 %13689, 1
  %13696 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13695, i32 0
  %13697 = load i64, i64* %13696, align 8
  %13698 = ashr i64 %13697, 35
  %13699 = trunc i64 %13698 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13681, i8 zeroext 57, i32 %13685, i32 %13694, i32 %13699, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

13700:                                            ; preds = %13677
  %13701 = add nuw nsw i64 %13689, 1
  %13702 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13701, i32 0
  %13703 = load i64, i64* %13702, align 8
  %13704 = ashr i64 %13703, 35
  %13705 = trunc i64 %13704 to i32
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %13681, i32 %13685, i32 %13705, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 57) #11
  br label %23402

13706:                                            ; preds = %2
  %13707 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13708 = and i32 %13707, 32
  %13709 = icmp eq i32 %13708, 0
  %13710 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %13711 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13712 = load i64, i64* %13711, align 8
  %13713 = ashr i64 %13712, 35
  %13714 = trunc i64 %13713 to i32
  %13715 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13716 = load i32, i32* %13715, align 4
  %13717 = and i32 %13716, 255
  %13718 = zext i32 %13717 to i64
  br i1 %13709, label %13729, label %13719

13719:                                            ; preds = %13706
  %13720 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13718, i32 0
  %13721 = load i64, i64* %13720, align 8
  %13722 = ashr i64 %13721, 35
  %13723 = trunc i64 %13722 to i32
  %13724 = add nuw nsw i64 %13718, 1
  %13725 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13724, i32 0
  %13726 = load i64, i64* %13725, align 8
  %13727 = ashr i64 %13726, 35
  %13728 = trunc i64 %13727 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13710, i8 zeroext 61, i32 %13714, i32 %13723, i32 %13728, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

13729:                                            ; preds = %13706
  %13730 = add nuw nsw i64 %13718, 1
  %13731 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13730, i32 0
  %13732 = load i64, i64* %13731, align 8
  %13733 = ashr i64 %13732, 35
  %13734 = trunc i64 %13733 to i32
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %13710, i32 %13714, i32 %13734, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 61) #11
  br label %23402

13735:                                            ; preds = %2
  %13736 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13737 = and i32 %13736, 32
  %13738 = icmp eq i32 %13737, 0
  %13739 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %13740 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13741 = load i64, i64* %13740, align 8
  %13742 = ashr i64 %13741, 35
  %13743 = trunc i64 %13742 to i32
  %13744 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13745 = load i32, i32* %13744, align 4
  %13746 = and i32 %13745, 255
  %13747 = zext i32 %13746 to i64
  br i1 %13738, label %13758, label %13748

13748:                                            ; preds = %13735
  %13749 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13747, i32 0
  %13750 = load i64, i64* %13749, align 8
  %13751 = ashr i64 %13750, 35
  %13752 = trunc i64 %13751 to i32
  %13753 = add nuw nsw i64 %13747, 1
  %13754 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13753, i32 0
  %13755 = load i64, i64* %13754, align 8
  %13756 = ashr i64 %13755, 35
  %13757 = trunc i64 %13756 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13739, i8 zeroext 118, i32 %13743, i32 %13752, i32 %13757, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

13758:                                            ; preds = %13735
  %13759 = add nuw nsw i64 %13747, 1
  %13760 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13759, i32 0
  %13761 = load i64, i64* %13760, align 8
  %13762 = ashr i64 %13761, 35
  %13763 = trunc i64 %13762 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %13739, i32 %13743, i32 %13763, i8 zeroext 102, i8 zeroext 15, i8 zeroext 118) #11
  br label %23402

13764:                                            ; preds = %2
  %13765 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13766 = load i64, i64* %13765, align 8
  %13767 = ashr i64 %13766, 35
  %13768 = trunc i64 %13767 to i32
  %13769 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13770 = load i32, i32* %13769, align 4
  %13771 = and i32 %13770, 255
  %13772 = add nuw nsw i32 %13771, 1
  %13773 = zext i32 %13772 to i64
  %13774 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13773, i32 0
  %13775 = load i64, i64* %13774, align 8
  %13776 = ashr i64 %13775, 35
  %13777 = trunc i64 %13776 to i32
  %13778 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %13779 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13780 = and i32 %13779, 32
  %13781 = icmp eq i32 %13780, 0
  br i1 %13781, label %13783, label %13782

13782:                                            ; preds = %13764
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13778, i8 zeroext 118, i32 %13768, i32 %13768, i32 %13777, i32 1, i32 1, i32 0, i32 5) #11
  br label %13784

13783:                                            ; preds = %13764
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %13778, i32 %13768, i32 %13777, i8 zeroext 102, i8 zeroext 15, i8 zeroext 118) #11
  br label %13784

13784:                                            ; preds = %13782, %13783
  %13785 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13786 = and i32 %13785, 32
  %13787 = icmp eq i32 %13786, 0
  br i1 %13787, label %13789, label %13788

13788:                                            ; preds = %13784
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13778, i8 zeroext 118, i32 15, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %13790

13789:                                            ; preds = %13784
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %13778, i32 15, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 118) #11
  br label %13790

13790:                                            ; preds = %13788, %13789
  %13791 = load i64, i64* %13765, align 8
  %13792 = ashr i64 %13791, 35
  %13793 = trunc i64 %13792 to i32
  %13794 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13795 = and i32 %13794, 32
  %13796 = icmp eq i32 %13795, 0
  br i1 %13796, label %13798, label %13797

13797:                                            ; preds = %13790
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13778, i8 zeroext -17, i32 %13793, i32 %13793, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

13798:                                            ; preds = %13790
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %13778, i32 %13793, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -17) #11
  br label %23402

13799:                                            ; preds = %2
  %13800 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13801 = and i32 %13800, 32
  %13802 = icmp eq i32 %13801, 0
  %13803 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %13804 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13805 = load i64, i64* %13804, align 8
  %13806 = ashr i64 %13805, 35
  %13807 = trunc i64 %13806 to i32
  %13808 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13809 = load i32, i32* %13808, align 4
  %13810 = and i32 %13809, 255
  %13811 = zext i32 %13810 to i64
  br i1 %13802, label %13822, label %13812

13812:                                            ; preds = %13799
  %13813 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13811, i32 0
  %13814 = load i64, i64* %13813, align 8
  %13815 = ashr i64 %13814, 35
  %13816 = trunc i64 %13815 to i32
  %13817 = add nuw nsw i64 %13811, 1
  %13818 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13817, i32 0
  %13819 = load i64, i64* %13818, align 8
  %13820 = ashr i64 %13819, 35
  %13821 = trunc i64 %13820 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13803, i8 zeroext 102, i32 %13807, i32 %13816, i32 %13821, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

13822:                                            ; preds = %13799
  %13823 = add nuw nsw i64 %13811, 1
  %13824 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13823, i32 0
  %13825 = load i64, i64* %13824, align 8
  %13826 = ashr i64 %13825, 35
  %13827 = trunc i64 %13826 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %13803, i32 %13807, i32 %13827, i8 zeroext 102, i8 zeroext 15, i8 zeroext 102) #11
  br label %23402

13828:                                            ; preds = %2
  %13829 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13830 = load i64, i64* %13829, align 8
  %13831 = ashr i64 %13830, 35
  %13832 = trunc i64 %13831 to i32
  %13833 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13834 = load i32, i32* %13833, align 4
  %13835 = and i32 %13834, 255
  %13836 = add nuw nsw i32 %13835, 1
  %13837 = zext i32 %13836 to i64
  %13838 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13837, i32 0
  %13839 = load i64, i64* %13838, align 8
  %13840 = ashr i64 %13839, 35
  %13841 = trunc i64 %13840 to i32
  %13842 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %13843 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13844 = and i32 %13843, 32
  %13845 = icmp eq i32 %13844, 0
  br i1 %13845, label %13847, label %13846

13846:                                            ; preds = %13828
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13842, i8 zeroext 57, i32 %13832, i32 %13832, i32 %13841, i32 1, i32 2, i32 0, i32 5) #11
  br label %13848

13847:                                            ; preds = %13828
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %13842, i32 %13832, i32 %13841, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 57) #11
  br label %13848

13848:                                            ; preds = %13846, %13847
  %13849 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13850 = and i32 %13849, 32
  %13851 = icmp eq i32 %13850, 0
  br i1 %13851, label %13853, label %13852

13852:                                            ; preds = %13848
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13842, i8 zeroext 118, i32 %13832, i32 %13832, i32 %13841, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

13853:                                            ; preds = %13848
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %13842, i32 %13832, i32 %13841, i8 zeroext 102, i8 zeroext 15, i8 zeroext 118) #11
  br label %23402

13854:                                            ; preds = %2
  %13855 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13856 = load i64, i64* %13855, align 8
  %13857 = ashr i64 %13856, 35
  %13858 = trunc i64 %13857 to i32
  %13859 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13860 = load i32, i32* %13859, align 4
  %13861 = and i32 %13860, 255
  %13862 = lshr i32 %13860, 8
  %13863 = and i32 %13862, 65535
  %13864 = add nuw nsw i32 %13863, %13861
  %13865 = zext i32 %13864 to i64
  %13866 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13865, i32 0
  %13867 = load i64, i64* %13866, align 8
  %13868 = ashr i64 %13867, 35
  %13869 = trunc i64 %13868 to i32
  %13870 = add nuw nsw i64 %13865, 1
  %13871 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13870, i32 0
  %13872 = load i64, i64* %13871, align 8
  %13873 = ashr i64 %13872, 35
  %13874 = trunc i64 %13873 to i32
  %13875 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %13876 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13877 = and i32 %13876, 32
  %13878 = icmp eq i32 %13877, 0
  br i1 %13878, label %13880, label %13879

13879:                                            ; preds = %13854
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13875, i8 zeroext -17, i32 %13874, i32 %13874, i32 %13874, i32 1, i32 1, i32 0, i32 5) #11
  br label %13881

13880:                                            ; preds = %13854
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %13875, i32 %13874, i32 %13874, i8 zeroext 102, i8 zeroext 15, i8 zeroext -17) #11
  br label %13881

13881:                                            ; preds = %13879, %13880
  %13882 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13883 = and i32 %13882, 32
  %13884 = icmp eq i32 %13883, 0
  br i1 %13884, label %13886, label %13885

13885:                                            ; preds = %13881
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %13875, i8 zeroext 95, i32 %13858, i32 %13858, i32 %13874) #11
  br label %13887

13886:                                            ; preds = %13881
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %13875, i32 %13858, i32 %13874, i8 zeroext 15, i8 zeroext 95) #11
  br label %13887

13887:                                            ; preds = %13885, %13886
  %13888 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13889 = and i32 %13888, 32
  %13890 = icmp eq i32 %13889, 0
  br i1 %13890, label %13892, label %13891

13891:                                            ; preds = %13887
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13875, i8 zeroext 118, i32 %13874, i32 %13874, i32 %13874, i32 1, i32 1, i32 0, i32 5) #11
  br label %13893

13892:                                            ; preds = %13887
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %13875, i32 %13874, i32 %13874, i8 zeroext 102, i8 zeroext 15, i8 zeroext 118) #11
  br label %13893

13893:                                            ; preds = %13891, %13892
  %13894 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13895 = and i32 %13894, 32
  %13896 = icmp eq i32 %13895, 0
  br i1 %13896, label %13898, label %13897

13897:                                            ; preds = %13893
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13875, i8 zeroext 114, i32 2, i32 %13874, i32 %13874, i32 1, i32 1, i32 0, i32 5) #11
  br label %13899

13898:                                            ; preds = %13893
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %13875, i32 2, i32 %13874, i8 zeroext 102, i8 zeroext 15, i8 zeroext 114) #11
  br label %13899

13899:                                            ; preds = %13897, %13898
  %13900 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %13901 = load i8*, i8** %13900, align 8
  %13902 = getelementptr inbounds i8, i8* %13901, i64 1
  store i8* %13902, i8** %13900, align 8
  store i8 1, i8* %13901, align 1
  %13903 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13904 = and i32 %13903, 32
  %13905 = icmp eq i32 %13904, 0
  br i1 %13905, label %13907, label %13906

13906:                                            ; preds = %13899
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %13875, i8 zeroext 91, i32 %13874, i32 0, i32 %13874) #11
  br label %13908

13907:                                            ; preds = %13899
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %13875, i32 %13874, i32 %13874, i8 zeroext 15, i8 zeroext 91) #11
  br label %13908

13908:                                            ; preds = %13906, %13907
  %13909 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13910 = and i32 %13909, 32
  %13911 = icmp eq i32 %13910, 0
  br i1 %13911, label %13913, label %13912

13912:                                            ; preds = %13908
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %13875, i8 zeroext 40, i32 %13869, i32 0, i32 %13858) #11
  br label %13914

13913:                                            ; preds = %13908
  tail call void @_ZN2v88internal9Assembler6movapsENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %13875, i32 %13869, i32 %13858) #11
  br label %13914

13914:                                            ; preds = %13912, %13913
  %13915 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13916 = and i32 %13915, 32
  %13917 = icmp eq i32 %13916, 0
  br i1 %13917, label %13919, label %13918

13918:                                            ; preds = %13914
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %13875, i8 zeroext 92, i32 %13869, i32 %13869, i32 %13874) #11
  br label %13920

13919:                                            ; preds = %13914
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %13875, i32 %13869, i32 %13874, i8 zeroext 15, i8 zeroext 92) #11
  br label %13920

13920:                                            ; preds = %13918, %13919
  %13921 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13922 = and i32 %13921, 32
  %13923 = icmp eq i32 %13922, 0
  br i1 %13923, label %13928, label %13924

13924:                                            ; preds = %13920
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %13875, i8 zeroext -62, i32 %13874, i32 %13874, i32 %13869) #11
  %13925 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %13926 = load i8*, i8** %13925, align 8
  %13927 = getelementptr inbounds i8, i8* %13926, i64 1
  store i8* %13927, i8** %13925, align 8
  store i8 2, i8* %13926, align 1
  br label %13929

13928:                                            ; preds = %13920
  tail call void @_ZN2v88internal9Assembler5cmppsENS0_11XMMRegisterES2_a(%"class.v8::internal::Assembler"* %13875, i32 %13874, i32 %13869, i8 signext 2) #11
  br label %13929

13929:                                            ; preds = %13924, %13928
  %13930 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13931 = and i32 %13930, 32
  %13932 = icmp eq i32 %13931, 0
  br i1 %13932, label %13934, label %13933

13933:                                            ; preds = %13929
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13875, i8 zeroext 91, i32 %13869, i32 0, i32 %13869, i32 2, i32 1, i32 0, i32 5) #11
  br label %13935

13934:                                            ; preds = %13929
  tail call void @_ZN2v88internal9Assembler9cvttps2dqENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %13875, i32 %13869, i32 %13869) #11
  br label %13935

13935:                                            ; preds = %13933, %13934
  %13936 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13937 = and i32 %13936, 32
  %13938 = icmp eq i32 %13937, 0
  br i1 %13938, label %13940, label %13939

13939:                                            ; preds = %13935
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13875, i8 zeroext -17, i32 %13869, i32 %13869, i32 %13874, i32 1, i32 1, i32 0, i32 5) #11
  br label %13941

13940:                                            ; preds = %13935
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %13875, i32 %13869, i32 %13874, i8 zeroext 102, i8 zeroext 15, i8 zeroext -17) #11
  br label %13941

13941:                                            ; preds = %13939, %13940
  %13942 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13943 = and i32 %13942, 32
  %13944 = icmp eq i32 %13943, 0
  br i1 %13944, label %13946, label %13945

13945:                                            ; preds = %13941
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13875, i8 zeroext -17, i32 %13874, i32 %13874, i32 %13874, i32 1, i32 1, i32 0, i32 5) #11
  br label %13947

13946:                                            ; preds = %13941
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %13875, i32 %13874, i32 %13874, i8 zeroext 102, i8 zeroext 15, i8 zeroext -17) #11
  br label %13947

13947:                                            ; preds = %13945, %13946
  %13948 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13949 = and i32 %13948, 32
  %13950 = icmp eq i32 %13949, 0
  br i1 %13950, label %13952, label %13951

13951:                                            ; preds = %13947
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13875, i8 zeroext 61, i32 %13869, i32 %13869, i32 %13874, i32 1, i32 2, i32 0, i32 5) #11
  br label %13953

13952:                                            ; preds = %13947
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %13875, i32 %13869, i32 %13874, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 61) #11
  br label %13953

13953:                                            ; preds = %13951, %13952
  %13954 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13955 = and i32 %13954, 32
  %13956 = icmp eq i32 %13955, 0
  br i1 %13956, label %13958, label %13957

13957:                                            ; preds = %13953
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13875, i8 zeroext 91, i32 %13858, i32 0, i32 %13858, i32 2, i32 1, i32 0, i32 5) #11
  br label %13959

13958:                                            ; preds = %13953
  tail call void @_ZN2v88internal9Assembler9cvttps2dqENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %13875, i32 %13858, i32 %13858) #11
  br label %13959

13959:                                            ; preds = %13957, %13958
  %13960 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13961 = and i32 %13960, 32
  %13962 = icmp eq i32 %13961, 0
  br i1 %13962, label %13964, label %13963

13963:                                            ; preds = %13959
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13875, i8 zeroext -2, i32 %13858, i32 %13858, i32 %13869, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

13964:                                            ; preds = %13959
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %13875, i32 %13858, i32 %13869, i8 zeroext 102, i8 zeroext 15, i8 zeroext -2) #11
  br label %23402

13965:                                            ; preds = %2
  %13966 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13967 = load i64, i64* %13966, align 8
  %13968 = ashr i64 %13967, 35
  %13969 = trunc i64 %13968 to i32
  %13970 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13971 = load i32, i32* %13970, align 4
  %13972 = and i32 %13971, 255
  %13973 = zext i32 %13972 to i64
  %13974 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13973, i32 0
  %13975 = load i64, i64* %13974, align 8
  %13976 = ashr i64 %13975, 35
  %13977 = trunc i64 %13976 to i32
  %13978 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %13979 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %13980 = and i32 %13979, 32
  %13981 = icmp eq i32 %13980, 0
  br i1 %13981, label %13983, label %13982

13982:                                            ; preds = %13965
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %13978, i8 zeroext 51, i32 %13969, i32 0, i32 %13977, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

13983:                                            ; preds = %13965
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %13978, i32 %13969, i32 %13977, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 51) #11
  br label %23402

13984:                                            ; preds = %2
  %13985 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %13986 = bitcast %"class.v8::internal::TurboAssembler"* %13985 to %"class.v8::internal::SharedTurboAssembler"*
  %13987 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %13988 = load i64, i64* %13987, align 8
  %13989 = ashr i64 %13988, 35
  %13990 = trunc i64 %13989 to i32
  %13991 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13992 = load i32, i32* %13991, align 4
  %13993 = and i32 %13992, 255
  %13994 = zext i32 %13993 to i64
  %13995 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %13994, i32 0
  %13996 = load i64, i64* %13995, align 8
  %13997 = ashr i64 %13996, 35
  %13998 = trunc i64 %13997 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler22I32x4UConvertI16x8HighENS0_11XMMRegisterES2_S2_(%"class.v8::internal::SharedTurboAssembler"* %13986, i32 %13990, i32 %13998, i32 15) #11
  br label %23402

13999:                                            ; preds = %2
  %14000 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %14001 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14002 = load i64, i64* %14001, align 8
  %14003 = ashr i64 %14002, 35
  %14004 = trunc i64 %14003 to i32
  %14005 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14006 = load i32, i32* %14005, align 4
  %14007 = and i32 %14006, 255
  %14008 = add nuw nsw i32 %14007, 1
  %14009 = zext i32 %14008 to i64
  %14010 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14009, i32 0
  %14011 = load i64, i64* %14010, align 8
  %14012 = and i64 %14011, 7
  %14013 = icmp eq i64 %14012, 3
  br i1 %14013, label %14014, label %14044

14014:                                            ; preds = %13999
  %14015 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14016 = and i32 %14015, 32
  %14017 = icmp eq i32 %14016, 0
  %14018 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14019 = zext i32 %14007 to i64
  br i1 %14017, label %14034, label %14020

14020:                                            ; preds = %14014
  %14021 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14019, i32 0
  %14022 = load i64, i64* %14021, align 8
  %14023 = ashr i64 %14022, 35
  %14024 = trunc i64 %14023 to i32
  %14025 = add nuw nsw i64 %14019, 1
  %14026 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14025
  %14027 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %14000, %"class.v8::internal::compiler::InstructionOperand"* %14026) #11
  %14028 = extractvalue { i64, i64 } %14027, 1
  %14029 = trunc i64 %14028 to i8
  %14030 = and i8 %14029, 31
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14018, i8 zeroext 114, i32 2, i32 %14004, i32 %14024, i32 1, i32 1, i32 0, i32 5) #11
  %14031 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %14032 = load i8*, i8** %14031, align 8
  %14033 = getelementptr inbounds i8, i8* %14032, i64 1
  store i8* %14033, i8** %14031, align 8
  store i8 %14030, i8* %14032, align 1
  br label %23402

14034:                                            ; preds = %14014
  %14035 = add nuw nsw i64 %14019, 1
  %14036 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14035
  %14037 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %14000, %"class.v8::internal::compiler::InstructionOperand"* %14036) #11
  %14038 = extractvalue { i64, i64 } %14037, 1
  %14039 = trunc i64 %14038 to i8
  %14040 = and i8 %14039, 31
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14018, i32 2, i32 %14004, i8 zeroext 102, i8 zeroext 15, i8 zeroext 114) #11
  %14041 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %14042 = load i8*, i8** %14041, align 8
  %14043 = getelementptr inbounds i8, i8* %14042, i64 1
  store i8* %14043, i8** %14041, align 8
  store i8 %14040, i8* %14042, align 1
  br label %23402

14044:                                            ; preds = %13999
  %14045 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %14046 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %14045, i64 0, i32 0, i32 0, i32 0
  %14047 = ashr i64 %14011, 35
  %14048 = trunc i64 %14047 to i32
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %14046, i32 10, i32 %14048, i32 8) #11
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %14046, i8 zeroext 4, i32 10, i64 31, i32 8) #11
  tail call void @_ZN2v88internal14TurboAssembler4MovqENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %14045, i32 15, i32 10) #11
  %14049 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14050 = and i32 %14049, 32
  %14051 = icmp eq i32 %14050, 0
  br i1 %14051, label %14060, label %14052

14052:                                            ; preds = %14044
  %14053 = load i32, i32* %14005, align 4
  %14054 = and i32 %14053, 255
  %14055 = zext i32 %14054 to i64
  %14056 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14055, i32 0
  %14057 = load i64, i64* %14056, align 8
  %14058 = ashr i64 %14057, 35
  %14059 = trunc i64 %14058 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14046, i8 zeroext -46, i32 %14004, i32 %14059, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

14060:                                            ; preds = %14044
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14046, i32 %14004, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -46) #11
  br label %23402

14061:                                            ; preds = %2
  %14062 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14063 = and i32 %14062, 32
  %14064 = icmp eq i32 %14063, 0
  %14065 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14066 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14067 = load i64, i64* %14066, align 8
  %14068 = ashr i64 %14067, 35
  %14069 = trunc i64 %14068 to i32
  %14070 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14071 = load i32, i32* %14070, align 4
  %14072 = and i32 %14071, 255
  %14073 = zext i32 %14072 to i64
  br i1 %14064, label %14084, label %14074

14074:                                            ; preds = %14061
  %14075 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14073, i32 0
  %14076 = load i64, i64* %14075, align 8
  %14077 = ashr i64 %14076, 35
  %14078 = trunc i64 %14077 to i32
  %14079 = add nuw nsw i64 %14073, 1
  %14080 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14079, i32 0
  %14081 = load i64, i64* %14080, align 8
  %14082 = ashr i64 %14081, 35
  %14083 = trunc i64 %14082 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14065, i8 zeroext 59, i32 %14069, i32 %14078, i32 %14083, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

14084:                                            ; preds = %14061
  %14085 = add nuw nsw i64 %14073, 1
  %14086 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14085, i32 0
  %14087 = load i64, i64* %14086, align 8
  %14088 = ashr i64 %14087, 35
  %14089 = trunc i64 %14088 to i32
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %14065, i32 %14069, i32 %14089, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 59) #11
  br label %23402

14090:                                            ; preds = %2
  %14091 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14092 = and i32 %14091, 32
  %14093 = icmp eq i32 %14092, 0
  %14094 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14095 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14096 = load i64, i64* %14095, align 8
  %14097 = ashr i64 %14096, 35
  %14098 = trunc i64 %14097 to i32
  %14099 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14100 = load i32, i32* %14099, align 4
  %14101 = and i32 %14100, 255
  %14102 = zext i32 %14101 to i64
  br i1 %14093, label %14113, label %14103

14103:                                            ; preds = %14090
  %14104 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14102, i32 0
  %14105 = load i64, i64* %14104, align 8
  %14106 = ashr i64 %14105, 35
  %14107 = trunc i64 %14106 to i32
  %14108 = add nuw nsw i64 %14102, 1
  %14109 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14108, i32 0
  %14110 = load i64, i64* %14109, align 8
  %14111 = ashr i64 %14110, 35
  %14112 = trunc i64 %14111 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14094, i8 zeroext 63, i32 %14098, i32 %14107, i32 %14112, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

14113:                                            ; preds = %14090
  %14114 = add nuw nsw i64 %14102, 1
  %14115 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14114, i32 0
  %14116 = load i64, i64* %14115, align 8
  %14117 = ashr i64 %14116, 35
  %14118 = trunc i64 %14117 to i32
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %14094, i32 %14098, i32 %14118, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 63) #11
  br label %23402

14119:                                            ; preds = %2
  %14120 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14121 = load i64, i64* %14120, align 8
  %14122 = ashr i64 %14121, 35
  %14123 = trunc i64 %14122 to i32
  %14124 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14125 = load i32, i32* %14124, align 4
  %14126 = and i32 %14125, 255
  %14127 = add nuw nsw i32 %14126, 1
  %14128 = zext i32 %14127 to i64
  %14129 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14128, i32 0
  %14130 = load i64, i64* %14129, align 8
  %14131 = ashr i64 %14130, 35
  %14132 = trunc i64 %14131 to i32
  %14133 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14134 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14135 = and i32 %14134, 32
  %14136 = icmp eq i32 %14135, 0
  br i1 %14136, label %14138, label %14137

14137:                                            ; preds = %14119
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14133, i8 zeroext 63, i32 %14123, i32 %14123, i32 %14132, i32 1, i32 2, i32 0, i32 5) #11
  br label %14139

14138:                                            ; preds = %14119
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %14133, i32 %14123, i32 %14132, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 63) #11
  br label %14139

14139:                                            ; preds = %14137, %14138
  %14140 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14141 = and i32 %14140, 32
  %14142 = icmp eq i32 %14141, 0
  br i1 %14142, label %14144, label %14143

14143:                                            ; preds = %14139
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14133, i8 zeroext 118, i32 %14123, i32 %14123, i32 %14132, i32 1, i32 1, i32 0, i32 5) #11
  br label %14145

14144:                                            ; preds = %14139
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14133, i32 %14123, i32 %14132, i8 zeroext 102, i8 zeroext 15, i8 zeroext 118) #11
  br label %14145

14145:                                            ; preds = %14143, %14144
  %14146 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14147 = and i32 %14146, 32
  %14148 = icmp eq i32 %14147, 0
  br i1 %14148, label %14150, label %14149

14149:                                            ; preds = %14145
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14133, i8 zeroext 118, i32 15, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %14151

14150:                                            ; preds = %14145
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14133, i32 15, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 118) #11
  br label %14151

14151:                                            ; preds = %14149, %14150
  %14152 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14153 = and i32 %14152, 32
  %14154 = icmp eq i32 %14153, 0
  br i1 %14154, label %14156, label %14155

14155:                                            ; preds = %14151
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14133, i8 zeroext -17, i32 %14123, i32 %14123, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

14156:                                            ; preds = %14151
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14133, i32 %14123, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -17) #11
  br label %23402

14157:                                            ; preds = %2
  %14158 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14159 = load i64, i64* %14158, align 8
  %14160 = ashr i64 %14159, 35
  %14161 = trunc i64 %14160 to i32
  %14162 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14163 = load i32, i32* %14162, align 4
  %14164 = and i32 %14163, 255
  %14165 = add nuw nsw i32 %14164, 1
  %14166 = zext i32 %14165 to i64
  %14167 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14166, i32 0
  %14168 = load i64, i64* %14167, align 8
  %14169 = ashr i64 %14168, 35
  %14170 = trunc i64 %14169 to i32
  %14171 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14172 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14173 = and i32 %14172, 32
  %14174 = icmp eq i32 %14173, 0
  br i1 %14174, label %14176, label %14175

14175:                                            ; preds = %14157
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14171, i8 zeroext 59, i32 %14161, i32 %14161, i32 %14170, i32 1, i32 2, i32 0, i32 5) #11
  br label %14177

14176:                                            ; preds = %14157
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %14171, i32 %14161, i32 %14170, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 59) #11
  br label %14177

14177:                                            ; preds = %14175, %14176
  %14178 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14179 = and i32 %14178, 32
  %14180 = icmp eq i32 %14179, 0
  br i1 %14180, label %14182, label %14181

14181:                                            ; preds = %14177
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14171, i8 zeroext 118, i32 %14161, i32 %14161, i32 %14170, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

14182:                                            ; preds = %14177
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14171, i32 %14161, i32 %14170, i8 zeroext 102, i8 zeroext 15, i8 zeroext 118) #11
  br label %23402

14183:                                            ; preds = %2
  %14184 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14185 = load i64, i64* %14184, align 8
  %14186 = ashr i64 %14185, 35
  %14187 = trunc i64 %14186 to i32
  %14188 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14189 = load i32, i32* %14188, align 4
  %14190 = and i32 %14189, 255
  %14191 = zext i32 %14190 to i64
  %14192 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14191, i32 0
  %14193 = load i64, i64* %14192, align 8
  %14194 = ashr i64 %14193, 35
  %14195 = trunc i64 %14194 to i32
  %14196 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14197 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14198 = and i32 %14197, 32
  %14199 = icmp eq i32 %14198, 0
  br i1 %14199, label %14201, label %14200

14200:                                            ; preds = %14183
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14196, i8 zeroext 30, i32 %14187, i32 0, i32 %14195, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

14201:                                            ; preds = %14183
  tail call void @_ZN2v88internal9Assembler11ssse3_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %14196, i32 %14187, i32 %14195, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 30) #11
  br label %23402

14202:                                            ; preds = %2
  %14203 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14204 = load i64, i64* %14203, align 8
  %14205 = ashr i64 %14204, 35
  %14206 = trunc i64 %14205 to i32
  %14207 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14208 = load i32, i32* %14207, align 4
  %14209 = and i32 %14208, 255
  %14210 = zext i32 %14209 to i64
  %14211 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14210, i32 0
  %14212 = load i64, i64* %14211, align 8
  %14213 = ashr i64 %14212, 35
  %14214 = trunc i64 %14213 to i32
  %14215 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14216 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14217 = and i32 %14216, 32
  %14218 = icmp eq i32 %14217, 0
  br i1 %14218, label %14220, label %14219

14219:                                            ; preds = %14202
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %14215, i8 zeroext 80, i32 %14206, i32 0, i32 %14214) #11
  br label %23402

14220:                                            ; preds = %14202
  tail call void @_ZN2v88internal9Assembler8movmskpsENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %14215, i32 %14206, i32 %14214) #11
  br label %23402

14221:                                            ; preds = %2
  %14222 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14223 = and i32 %14222, 32
  %14224 = icmp eq i32 %14223, 0
  %14225 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14226 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14227 = load i64, i64* %14226, align 8
  %14228 = ashr i64 %14227, 35
  %14229 = trunc i64 %14228 to i32
  %14230 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14231 = load i32, i32* %14230, align 4
  %14232 = and i32 %14231, 255
  %14233 = zext i32 %14232 to i64
  br i1 %14224, label %14244, label %14234

14234:                                            ; preds = %14221
  %14235 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14233, i32 0
  %14236 = load i64, i64* %14235, align 8
  %14237 = ashr i64 %14236, 35
  %14238 = trunc i64 %14237 to i32
  %14239 = add nuw nsw i64 %14233, 1
  %14240 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14239, i32 0
  %14241 = load i64, i64* %14240, align 8
  %14242 = ashr i64 %14241, 35
  %14243 = trunc i64 %14242 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14225, i8 zeroext -11, i32 %14229, i32 %14238, i32 %14243, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

14244:                                            ; preds = %14221
  %14245 = add nuw nsw i64 %14233, 1
  %14246 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14245, i32 0
  %14247 = load i64, i64* %14246, align 8
  %14248 = ashr i64 %14247, 35
  %14249 = trunc i64 %14248 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14225, i32 %14229, i32 %14249, i8 zeroext 102, i8 zeroext 15, i8 zeroext -11) #11
  br label %23402

14250:                                            ; preds = %2
  %14251 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14252 = load i64, i64* %14251, align 8
  %14253 = ashr i64 %14252, 35
  %14254 = trunc i64 %14253 to i32
  %14255 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14256 = load i32, i32* %14255, align 4
  %14257 = and i32 %14256, 255
  %14258 = zext i32 %14257 to i64
  %14259 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14258, i32 0
  %14260 = load i64, i64* %14259, align 8
  %14261 = ashr i64 %14260, 35
  %14262 = trunc i64 %14261 to i32
  %14263 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %14264 = tail call i64 @_ZN2v88internal17ExternalReference34address_of_wasm_i16x8_splat_0x0001Ev() #11
  %14265 = tail call { i64, i32 } @_ZN2v88internal14TurboAssembler26ExternalReferenceAsOperandENS0_17ExternalReferenceENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %14263, i64 %14264, i32 10) #11
  %14266 = extractvalue { i64, i32 } %14265, 0
  %14267 = extractvalue { i64, i32 } %14265, 1
  tail call void @_ZN2v88internal14TurboAssembler7PmaddwdENS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::TurboAssembler"* %14263, i32 %14254, i32 %14262, i64 %14266, i32 %14267) #11
  br label %23402

14268:                                            ; preds = %2
  %14269 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %14270 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14271 = load i64, i64* %14270, align 8
  %14272 = ashr i64 %14271, 35
  %14273 = trunc i64 %14272 to i32
  %14274 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14275 = load i32, i32* %14274, align 4
  %14276 = and i32 %14275, 255
  %14277 = zext i32 %14276 to i64
  %14278 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14277, i32 0
  %14279 = load i64, i64* %14278, align 8
  %14280 = ashr i64 %14279, 35
  %14281 = trunc i64 %14280 to i32
  tail call void @_ZN2v88internal14TurboAssembler25I32x4ExtAddPairwiseI16x8UENS0_11XMMRegisterES2_(%"class.v8::internal::TurboAssembler"* %14269, i32 %14273, i32 %14281) #11
  br label %23402

14282:                                            ; preds = %2
  %14283 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %14284 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14285 = load i64, i64* %14284, align 8
  %14286 = ashr i64 %14285, 35
  %14287 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14288 = load i32, i32* %14287, align 4
  %14289 = and i32 %14288, 255
  %14290 = zext i32 %14289 to i64
  %14291 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14290
  %14292 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %14283, %"class.v8::internal::compiler::InstructionOperand"* %14291) #11
  %14293 = extractvalue { i64, i64 } %14292, 1
  %14294 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %14295 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %14294, i64 0, i32 1
  %14296 = load i32, i32* %14295, align 4
  %14297 = and i32 %14296, 255
  %14298 = add nuw nsw i32 %14297, 1
  %14299 = zext i32 %14298 to i64
  %14300 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %14294, i64 0, i32 5, i64 %14299
  %14301 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %14283, %"class.v8::internal::compiler::InstructionOperand"* %14300) #11
  %14302 = extractvalue { i64, i64 } %14301, 1
  %14303 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %14304 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %14303, i64 0, i32 1
  %14305 = load i32, i32* %14304, align 4
  %14306 = and i32 %14305, 255
  %14307 = add nuw nsw i32 %14306, 2
  %14308 = zext i32 %14307 to i64
  %14309 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %14303, i64 0, i32 5, i64 %14308
  %14310 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %14283, %"class.v8::internal::compiler::InstructionOperand"* %14309) #11
  %14311 = extractvalue { i64, i64 } %14310, 1
  %14312 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %14313 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %14312, i64 0, i32 1
  %14314 = load i32, i32* %14313, align 4
  %14315 = and i32 %14314, 255
  %14316 = add nuw nsw i32 %14315, 3
  %14317 = zext i32 %14316 to i64
  %14318 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %14312, i64 0, i32 5, i64 %14317
  %14319 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %14283, %"class.v8::internal::compiler::InstructionOperand"* %14318) #11
  %14320 = extractvalue { i64, i64 } %14319, 1
  %14321 = trunc i64 %14286 to i32
  %14322 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %14323 = shl i64 %14320, 32
  %14324 = and i64 %14311, 4294967295
  %14325 = or i64 %14323, %14324
  %14326 = shl i64 %14302, 32
  %14327 = and i64 %14293, 4294967295
  %14328 = or i64 %14326, %14327
  call void @_ZN2v88internal14TurboAssembler4MoveENS0_11XMMRegisterEmm(%"class.v8::internal::TurboAssembler"* %14322, i32 %14321, i64 %14325, i64 %14328) #11
  br label %23402

14329:                                            ; preds = %2
  %14330 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14331 = load i64, i64* %14330, align 8
  %14332 = ashr i64 %14331, 35
  %14333 = trunc i64 %14332 to i32
  %14334 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14335 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14336 = and i32 %14335, 32
  %14337 = icmp eq i32 %14336, 0
  br i1 %14337, label %14339, label %14338

14338:                                            ; preds = %14329
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14334, i8 zeroext -17, i32 %14333, i32 %14333, i32 %14333, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

14339:                                            ; preds = %14329
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14334, i32 %14333, i32 %14333, i8 zeroext 102, i8 zeroext 15, i8 zeroext -17) #11
  br label %23402

14340:                                            ; preds = %2
  %14341 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14342 = load i64, i64* %14341, align 8
  %14343 = ashr i64 %14342, 35
  %14344 = trunc i64 %14343 to i32
  %14345 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14346 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14347 = and i32 %14346, 32
  %14348 = icmp eq i32 %14347, 0
  br i1 %14348, label %14350, label %14349

14349:                                            ; preds = %14340
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14345, i8 zeroext 118, i32 %14344, i32 %14344, i32 %14344, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

14350:                                            ; preds = %14340
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14345, i32 %14344, i32 %14344, i8 zeroext 102, i8 zeroext 15, i8 zeroext 118) #11
  br label %23402

14351:                                            ; preds = %2
  %14352 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14353 = load i64, i64* %14352, align 8
  %14354 = ashr i64 %14353, 35
  %14355 = trunc i64 %14354 to i32
  %14356 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14357 = load i32, i32* %14356, align 4
  %14358 = and i32 %14357, 255
  %14359 = zext i32 %14358 to i64
  %14360 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14359, i32 0
  %14361 = load i64, i64* %14360, align 8
  %14362 = and i64 %14361, 7
  %14363 = icmp ugt i64 %14362, 4
  %14364 = and i64 %14361, 24
  %14365 = icmp eq i64 %14364, 0
  %14366 = and i1 %14363, %14365
  br i1 %14366, label %14370, label %14367

14367:                                            ; preds = %14351
  %14368 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %14369 = bitcast %"class.v8::internal::TurboAssembler"* %14368 to %"class.v8::internal::SharedTurboAssembler"*
  br label %14385

14370:                                            ; preds = %14351
  %14371 = lshr i64 %14361, 5
  %14372 = trunc i64 %14371 to i8
  %14373 = icmp ult i8 %14372, 12
  %14374 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %14375 = bitcast %"class.v8::internal::TurboAssembler"* %14374 to %"class.v8::internal::SharedTurboAssembler"*
  br i1 %14373, label %14376, label %14385

14376:                                            ; preds = %14370
  %14377 = ashr i64 %14361, 35
  %14378 = trunc i64 %14377 to i32
  %14379 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %14374, i64 0, i32 0, i32 0, i32 0
  %14380 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14381 = and i32 %14380, 32
  %14382 = icmp eq i32 %14381, 0
  br i1 %14382, label %14384, label %14383

14383:                                            ; preds = %14376
  tail call void @_ZN2v88internal9Assembler5vmovdENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::Assembler"* %14379, i32 %14355, i32 %14378) #11
  br label %14398

14384:                                            ; preds = %14376
  tail call void @_ZN2v88internal9Assembler4movdENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::Assembler"* %14379, i32 %14355, i32 %14378) #11
  br label %14398

14385:                                            ; preds = %14367, %14370
  %14386 = phi %"class.v8::internal::SharedTurboAssembler"* [ %14369, %14367 ], [ %14375, %14370 ]
  %14387 = ashr i64 %14361, 35
  %14388 = trunc i64 %14387 to i32
  %14389 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %14388, i32 0) #11
  %14390 = extractvalue { i64, i32 } %14389, 0
  %14391 = extractvalue { i64, i32 } %14389, 1
  %14392 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %14386, i64 0, i32 0, i32 0
  %14393 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14394 = and i32 %14393, 32
  %14395 = icmp eq i32 %14394, 0
  br i1 %14395, label %14397, label %14396

14396:                                            ; preds = %14385
  call void @_ZN2v88internal9Assembler5vmovdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %14392, i32 %14355, i64 %14390, i32 %14391) #11
  br label %14398

14397:                                            ; preds = %14385
  call void @_ZN2v88internal9Assembler4movdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %14392, i32 %14355, i64 %14390, i32 %14391) #11
  br label %14398

14398:                                            ; preds = %14397, %14396, %14384, %14383
  %14399 = phi %"class.v8::internal::SharedTurboAssembler"* [ %14375, %14383 ], [ %14375, %14384 ], [ %14386, %14396 ], [ %14386, %14397 ]
  %14400 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %14399, i64 0, i32 0, i32 0
  %14401 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14402 = and i32 %14401, 32
  %14403 = icmp eq i32 %14402, 0
  br i1 %14403, label %14408, label %14404

14404:                                            ; preds = %14398
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14400, i8 zeroext 112, i32 %14355, i32 0, i32 %14355, i32 3, i32 1, i32 0, i32 5) #11
  %14405 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %14399, i64 0, i32 0, i32 0, i32 0, i32 4
  %14406 = load i8*, i8** %14405, align 8
  %14407 = getelementptr inbounds i8, i8* %14406, i64 1
  store i8* %14407, i8** %14405, align 8
  store i8 0, i8* %14406, align 1
  br label %14409

14408:                                            ; preds = %14398
  call void @_ZN2v88internal9Assembler7pshuflwENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %14400, i32 %14355, i32 %14355, i8 zeroext 0) #11
  br label %14409

14409:                                            ; preds = %14404, %14408
  %14410 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14411 = and i32 %14410, 32
  %14412 = icmp eq i32 %14411, 0
  br i1 %14412, label %14417, label %14413

14413:                                            ; preds = %14409
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14400, i8 zeroext 112, i32 %14355, i32 0, i32 %14355, i32 1, i32 1, i32 0, i32 5) #11
  %14414 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %14399, i64 0, i32 0, i32 0, i32 0, i32 4
  %14415 = load i8*, i8** %14414, align 8
  %14416 = getelementptr inbounds i8, i8* %14415, i64 1
  store i8* %14416, i8** %14414, align 8
  store i8 0, i8* %14415, align 1
  br label %23402

14417:                                            ; preds = %14409
  call void @_ZN2v88internal9Assembler6pshufdENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %14400, i32 %14355, i32 %14355, i8 zeroext 0) #11
  br label %23402

14418:                                            ; preds = %2
  %14419 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %14420 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14421 = load i64, i64* %14420, align 8
  %14422 = ashr i64 %14421, 35
  %14423 = trunc i64 %14422 to i32
  %14424 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14425 = load i32, i32* %14424, align 4
  %14426 = and i32 %14425, 255
  %14427 = zext i32 %14426 to i64
  %14428 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14427, i32 0
  %14429 = load i64, i64* %14428, align 8
  %14430 = ashr i64 %14429, 35
  %14431 = trunc i64 %14430 to i32
  %14432 = add nuw nsw i64 %14427, 1
  %14433 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14432
  %14434 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %14419, %"class.v8::internal::compiler::InstructionOperand"* %14433) #11
  %14435 = extractvalue { i64, i64 } %14434, 1
  %14436 = trunc i64 %14435 to i8
  %14437 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14438 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14439 = and i32 %14438, 32
  %14440 = icmp eq i32 %14439, 0
  br i1 %14440, label %14445, label %14441

14441:                                            ; preds = %14418
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14437, i8 zeroext 21, i32 %14431, i32 0, i32 %14423, i32 1, i32 3, i32 0, i32 5) #11
  %14442 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %14443 = load i8*, i8** %14442, align 8
  %14444 = getelementptr inbounds i8, i8* %14443, i64 1
  store i8* %14444, i8** %14442, align 8
  store i8 %14436, i8* %14443, align 1
  br label %14446

14445:                                            ; preds = %14418
  call void @_ZN2v88internal9Assembler10sse4_instrENS0_8RegisterENS0_11XMMRegisterEhhhha(%"class.v8::internal::Assembler"* %14437, i32 %14423, i32 %14431, i8 zeroext 102, i8 zeroext 15, i8 zeroext 58, i8 zeroext 21, i8 signext %14436) #11
  br label %14446

14446:                                            ; preds = %14441, %14445
  call void @_ZN2v88internal9Assembler7movsxwlENS0_8RegisterES2_(%"class.v8::internal::Assembler"* %14437, i32 %14423, i32 %14423) #11
  br label %23402

14447:                                            ; preds = %2
  %14448 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14449 = load i64, i64* %14448, align 8
  %14450 = ashr i64 %14449, 35
  %14451 = trunc i64 %14450 to i32
  %14452 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14453 = load i32, i32* %14452, align 4
  %14454 = and i32 %14453, 255
  %14455 = zext i32 %14454 to i64
  %14456 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14455, i32 0
  %14457 = load i64, i64* %14456, align 8
  %14458 = ashr i64 %14457, 35
  %14459 = trunc i64 %14458 to i32
  %14460 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14461 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14462 = and i32 %14461, 32
  %14463 = icmp eq i32 %14462, 0
  br i1 %14463, label %14465, label %14464

14464:                                            ; preds = %14447
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14460, i8 zeroext 32, i32 %14451, i32 0, i32 %14459, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

14465:                                            ; preds = %14447
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %14460, i32 %14451, i32 %14459, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 32) #11
  br label %23402

14466:                                            ; preds = %2
  %14467 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %14468 = bitcast %"class.v8::internal::TurboAssembler"* %14467 to %"class.v8::internal::SharedTurboAssembler"*
  %14469 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14470 = load i64, i64* %14469, align 8
  %14471 = ashr i64 %14470, 35
  %14472 = trunc i64 %14471 to i32
  %14473 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14474 = load i32, i32* %14473, align 4
  %14475 = and i32 %14474, 255
  %14476 = zext i32 %14475 to i64
  %14477 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14476, i32 0
  %14478 = load i64, i64* %14477, align 8
  %14479 = ashr i64 %14478, 35
  %14480 = trunc i64 %14479 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler22I16x8SConvertI8x16HighENS0_11XMMRegisterES2_(%"class.v8::internal::SharedTurboAssembler"* %14468, i32 %14472, i32 %14480) #11
  br label %23402

14481:                                            ; preds = %2
  %14482 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14483 = load i64, i64* %14482, align 8
  %14484 = ashr i64 %14483, 35
  %14485 = trunc i64 %14484 to i32
  %14486 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14487 = load i32, i32* %14486, align 4
  %14488 = and i32 %14487, 255
  %14489 = zext i32 %14488 to i64
  %14490 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14489, i32 0
  %14491 = load i64, i64* %14490, align 8
  %14492 = ashr i64 %14491, 35
  %14493 = trunc i64 %14492 to i32
  %14494 = icmp eq i32 %14485, %14493
  %14495 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14496 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14497 = and i32 %14496, 32
  %14498 = icmp eq i32 %14497, 0
  br i1 %14494, label %14499, label %14508

14499:                                            ; preds = %14481
  br i1 %14498, label %14501, label %14500

14500:                                            ; preds = %14499
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14495, i8 zeroext 118, i32 15, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %14502

14501:                                            ; preds = %14499
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14495, i32 15, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 118) #11
  br label %14502

14502:                                            ; preds = %14500, %14501
  %14503 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14504 = and i32 %14503, 32
  %14505 = icmp eq i32 %14504, 0
  br i1 %14505, label %14507, label %14506

14506:                                            ; preds = %14502
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14495, i8 zeroext 9, i32 %14485, i32 %14485, i32 15, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

14507:                                            ; preds = %14502
  tail call void @_ZN2v88internal9Assembler11ssse3_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %14495, i32 %14485, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 9) #11
  br label %23402

14508:                                            ; preds = %14481
  br i1 %14498, label %14510, label %14509

14509:                                            ; preds = %14508
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14495, i8 zeroext -17, i32 %14485, i32 %14485, i32 %14485, i32 1, i32 1, i32 0, i32 5) #11
  br label %14511

14510:                                            ; preds = %14508
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14495, i32 %14485, i32 %14485, i8 zeroext 102, i8 zeroext 15, i8 zeroext -17) #11
  br label %14511

14511:                                            ; preds = %14509, %14510
  %14512 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14513 = and i32 %14512, 32
  %14514 = icmp eq i32 %14513, 0
  br i1 %14514, label %14516, label %14515

14515:                                            ; preds = %14511
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14495, i8 zeroext -7, i32 %14485, i32 %14485, i32 %14493, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

14516:                                            ; preds = %14511
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14495, i32 %14485, i32 %14493, i8 zeroext 102, i8 zeroext 15, i8 zeroext -7) #11
  br label %23402

14517:                                            ; preds = %2
  %14518 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %14519 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14520 = load i64, i64* %14519, align 8
  %14521 = ashr i64 %14520, 35
  %14522 = trunc i64 %14521 to i32
  %14523 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14524 = load i32, i32* %14523, align 4
  %14525 = and i32 %14524, 255
  %14526 = add nuw nsw i32 %14525, 1
  %14527 = zext i32 %14526 to i64
  %14528 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14527, i32 0
  %14529 = load i64, i64* %14528, align 8
  %14530 = and i64 %14529, 7
  %14531 = icmp eq i64 %14530, 3
  br i1 %14531, label %14532, label %14562

14532:                                            ; preds = %14517
  %14533 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14534 = and i32 %14533, 32
  %14535 = icmp eq i32 %14534, 0
  %14536 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14537 = zext i32 %14525 to i64
  br i1 %14535, label %14552, label %14538

14538:                                            ; preds = %14532
  %14539 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14537, i32 0
  %14540 = load i64, i64* %14539, align 8
  %14541 = ashr i64 %14540, 35
  %14542 = trunc i64 %14541 to i32
  %14543 = add nuw nsw i64 %14537, 1
  %14544 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14543
  %14545 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %14518, %"class.v8::internal::compiler::InstructionOperand"* %14544) #11
  %14546 = extractvalue { i64, i64 } %14545, 1
  %14547 = trunc i64 %14546 to i8
  %14548 = and i8 %14547, 15
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14536, i8 zeroext 113, i32 6, i32 %14522, i32 %14542, i32 1, i32 1, i32 0, i32 5) #11
  %14549 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %14550 = load i8*, i8** %14549, align 8
  %14551 = getelementptr inbounds i8, i8* %14550, i64 1
  store i8* %14551, i8** %14549, align 8
  store i8 %14548, i8* %14550, align 1
  br label %23402

14552:                                            ; preds = %14532
  %14553 = add nuw nsw i64 %14537, 1
  %14554 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14553
  %14555 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %14518, %"class.v8::internal::compiler::InstructionOperand"* %14554) #11
  %14556 = extractvalue { i64, i64 } %14555, 1
  %14557 = trunc i64 %14556 to i8
  %14558 = and i8 %14557, 15
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14536, i32 6, i32 %14522, i8 zeroext 102, i8 zeroext 15, i8 zeroext 113) #11
  %14559 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %14560 = load i8*, i8** %14559, align 8
  %14561 = getelementptr inbounds i8, i8* %14560, i64 1
  store i8* %14561, i8** %14559, align 8
  store i8 %14558, i8* %14560, align 1
  br label %23402

14562:                                            ; preds = %14517
  %14563 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %14564 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %14563, i64 0, i32 0, i32 0, i32 0
  %14565 = ashr i64 %14529, 35
  %14566 = trunc i64 %14565 to i32
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %14564, i32 10, i32 %14566, i32 8) #11
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %14564, i8 zeroext 4, i32 10, i64 15, i32 8) #11
  tail call void @_ZN2v88internal14TurboAssembler4MovqENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %14563, i32 15, i32 10) #11
  %14567 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14568 = and i32 %14567, 32
  %14569 = icmp eq i32 %14568, 0
  br i1 %14569, label %14578, label %14570

14570:                                            ; preds = %14562
  %14571 = load i32, i32* %14523, align 4
  %14572 = and i32 %14571, 255
  %14573 = zext i32 %14572 to i64
  %14574 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14573, i32 0
  %14575 = load i64, i64* %14574, align 8
  %14576 = ashr i64 %14575, 35
  %14577 = trunc i64 %14576 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14564, i8 zeroext -15, i32 %14522, i32 %14577, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

14578:                                            ; preds = %14562
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14564, i32 %14522, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -15) #11
  br label %23402

14579:                                            ; preds = %2
  %14580 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %14581 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14582 = load i64, i64* %14581, align 8
  %14583 = ashr i64 %14582, 35
  %14584 = trunc i64 %14583 to i32
  %14585 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14586 = load i32, i32* %14585, align 4
  %14587 = and i32 %14586, 255
  %14588 = add nuw nsw i32 %14587, 1
  %14589 = zext i32 %14588 to i64
  %14590 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14589, i32 0
  %14591 = load i64, i64* %14590, align 8
  %14592 = and i64 %14591, 7
  %14593 = icmp eq i64 %14592, 3
  br i1 %14593, label %14594, label %14624

14594:                                            ; preds = %14579
  %14595 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14596 = and i32 %14595, 32
  %14597 = icmp eq i32 %14596, 0
  %14598 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14599 = zext i32 %14587 to i64
  br i1 %14597, label %14614, label %14600

14600:                                            ; preds = %14594
  %14601 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14599, i32 0
  %14602 = load i64, i64* %14601, align 8
  %14603 = ashr i64 %14602, 35
  %14604 = trunc i64 %14603 to i32
  %14605 = add nuw nsw i64 %14599, 1
  %14606 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14605
  %14607 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %14580, %"class.v8::internal::compiler::InstructionOperand"* %14606) #11
  %14608 = extractvalue { i64, i64 } %14607, 1
  %14609 = trunc i64 %14608 to i8
  %14610 = and i8 %14609, 15
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14598, i8 zeroext 113, i32 4, i32 %14584, i32 %14604, i32 1, i32 1, i32 0, i32 5) #11
  %14611 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %14612 = load i8*, i8** %14611, align 8
  %14613 = getelementptr inbounds i8, i8* %14612, i64 1
  store i8* %14613, i8** %14611, align 8
  store i8 %14610, i8* %14612, align 1
  br label %23402

14614:                                            ; preds = %14594
  %14615 = add nuw nsw i64 %14599, 1
  %14616 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14615
  %14617 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %14580, %"class.v8::internal::compiler::InstructionOperand"* %14616) #11
  %14618 = extractvalue { i64, i64 } %14617, 1
  %14619 = trunc i64 %14618 to i8
  %14620 = and i8 %14619, 15
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14598, i32 4, i32 %14584, i8 zeroext 102, i8 zeroext 15, i8 zeroext 113) #11
  %14621 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %14622 = load i8*, i8** %14621, align 8
  %14623 = getelementptr inbounds i8, i8* %14622, i64 1
  store i8* %14623, i8** %14621, align 8
  store i8 %14620, i8* %14622, align 1
  br label %23402

14624:                                            ; preds = %14579
  %14625 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %14626 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %14625, i64 0, i32 0, i32 0, i32 0
  %14627 = ashr i64 %14591, 35
  %14628 = trunc i64 %14627 to i32
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %14626, i32 10, i32 %14628, i32 8) #11
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %14626, i8 zeroext 4, i32 10, i64 15, i32 8) #11
  tail call void @_ZN2v88internal14TurboAssembler4MovqENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %14625, i32 15, i32 10) #11
  %14629 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14630 = and i32 %14629, 32
  %14631 = icmp eq i32 %14630, 0
  br i1 %14631, label %14640, label %14632

14632:                                            ; preds = %14624
  %14633 = load i32, i32* %14585, align 4
  %14634 = and i32 %14633, 255
  %14635 = zext i32 %14634 to i64
  %14636 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14635, i32 0
  %14637 = load i64, i64* %14636, align 8
  %14638 = ashr i64 %14637, 35
  %14639 = trunc i64 %14638 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14626, i8 zeroext -31, i32 %14584, i32 %14639, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

14640:                                            ; preds = %14624
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14626, i32 %14584, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -31) #11
  br label %23402

14641:                                            ; preds = %2
  %14642 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14643 = and i32 %14642, 32
  %14644 = icmp eq i32 %14643, 0
  %14645 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14646 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14647 = load i64, i64* %14646, align 8
  %14648 = ashr i64 %14647, 35
  %14649 = trunc i64 %14648 to i32
  %14650 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14651 = load i32, i32* %14650, align 4
  %14652 = and i32 %14651, 255
  %14653 = zext i32 %14652 to i64
  br i1 %14644, label %14664, label %14654

14654:                                            ; preds = %14641
  %14655 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14653, i32 0
  %14656 = load i64, i64* %14655, align 8
  %14657 = ashr i64 %14656, 35
  %14658 = trunc i64 %14657 to i32
  %14659 = add nuw nsw i64 %14653, 1
  %14660 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14659, i32 0
  %14661 = load i64, i64* %14660, align 8
  %14662 = ashr i64 %14661, 35
  %14663 = trunc i64 %14662 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14645, i8 zeroext 107, i32 %14649, i32 %14658, i32 %14663, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

14664:                                            ; preds = %14641
  %14665 = add nuw nsw i64 %14653, 1
  %14666 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14665, i32 0
  %14667 = load i64, i64* %14666, align 8
  %14668 = ashr i64 %14667, 35
  %14669 = trunc i64 %14668 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14645, i32 %14649, i32 %14669, i8 zeroext 102, i8 zeroext 15, i8 zeroext 107) #11
  br label %23402

14670:                                            ; preds = %2
  %14671 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14672 = and i32 %14671, 32
  %14673 = icmp eq i32 %14672, 0
  %14674 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14675 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14676 = load i64, i64* %14675, align 8
  %14677 = ashr i64 %14676, 35
  %14678 = trunc i64 %14677 to i32
  %14679 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14680 = load i32, i32* %14679, align 4
  %14681 = and i32 %14680, 255
  %14682 = zext i32 %14681 to i64
  br i1 %14673, label %14693, label %14683

14683:                                            ; preds = %14670
  %14684 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14682, i32 0
  %14685 = load i64, i64* %14684, align 8
  %14686 = ashr i64 %14685, 35
  %14687 = trunc i64 %14686 to i32
  %14688 = add nuw nsw i64 %14682, 1
  %14689 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14688, i32 0
  %14690 = load i64, i64* %14689, align 8
  %14691 = ashr i64 %14690, 35
  %14692 = trunc i64 %14691 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14674, i8 zeroext -3, i32 %14678, i32 %14687, i32 %14692, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

14693:                                            ; preds = %14670
  %14694 = add nuw nsw i64 %14682, 1
  %14695 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14694, i32 0
  %14696 = load i64, i64* %14695, align 8
  %14697 = ashr i64 %14696, 35
  %14698 = trunc i64 %14697 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14674, i32 %14678, i32 %14698, i8 zeroext 102, i8 zeroext 15, i8 zeroext -3) #11
  br label %23402

14699:                                            ; preds = %2
  %14700 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14701 = and i32 %14700, 32
  %14702 = icmp eq i32 %14701, 0
  %14703 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14704 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14705 = load i64, i64* %14704, align 8
  %14706 = ashr i64 %14705, 35
  %14707 = trunc i64 %14706 to i32
  %14708 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14709 = load i32, i32* %14708, align 4
  %14710 = and i32 %14709, 255
  %14711 = zext i32 %14710 to i64
  br i1 %14702, label %14722, label %14712

14712:                                            ; preds = %14699
  %14713 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14711, i32 0
  %14714 = load i64, i64* %14713, align 8
  %14715 = ashr i64 %14714, 35
  %14716 = trunc i64 %14715 to i32
  %14717 = add nuw nsw i64 %14711, 1
  %14718 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14717, i32 0
  %14719 = load i64, i64* %14718, align 8
  %14720 = ashr i64 %14719, 35
  %14721 = trunc i64 %14720 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14703, i8 zeroext -19, i32 %14707, i32 %14716, i32 %14721, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

14722:                                            ; preds = %14699
  %14723 = add nuw nsw i64 %14711, 1
  %14724 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14723, i32 0
  %14725 = load i64, i64* %14724, align 8
  %14726 = ashr i64 %14725, 35
  %14727 = trunc i64 %14726 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14703, i32 %14707, i32 %14727, i8 zeroext 102, i8 zeroext 15, i8 zeroext -19) #11
  br label %23402

14728:                                            ; preds = %2
  %14729 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14730 = and i32 %14729, 32
  %14731 = icmp eq i32 %14730, 0
  %14732 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14733 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14734 = load i64, i64* %14733, align 8
  %14735 = ashr i64 %14734, 35
  %14736 = trunc i64 %14735 to i32
  %14737 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14738 = load i32, i32* %14737, align 4
  %14739 = and i32 %14738, 255
  %14740 = zext i32 %14739 to i64
  br i1 %14731, label %14751, label %14741

14741:                                            ; preds = %14728
  %14742 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14740, i32 0
  %14743 = load i64, i64* %14742, align 8
  %14744 = ashr i64 %14743, 35
  %14745 = trunc i64 %14744 to i32
  %14746 = add nuw nsw i64 %14740, 1
  %14747 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14746, i32 0
  %14748 = load i64, i64* %14747, align 8
  %14749 = ashr i64 %14748, 35
  %14750 = trunc i64 %14749 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14732, i8 zeroext -7, i32 %14736, i32 %14745, i32 %14750, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

14751:                                            ; preds = %14728
  %14752 = add nuw nsw i64 %14740, 1
  %14753 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14752, i32 0
  %14754 = load i64, i64* %14753, align 8
  %14755 = ashr i64 %14754, 35
  %14756 = trunc i64 %14755 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14732, i32 %14736, i32 %14756, i8 zeroext 102, i8 zeroext 15, i8 zeroext -7) #11
  br label %23402

14757:                                            ; preds = %2
  %14758 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14759 = and i32 %14758, 32
  %14760 = icmp eq i32 %14759, 0
  %14761 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14762 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14763 = load i64, i64* %14762, align 8
  %14764 = ashr i64 %14763, 35
  %14765 = trunc i64 %14764 to i32
  %14766 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14767 = load i32, i32* %14766, align 4
  %14768 = and i32 %14767, 255
  %14769 = zext i32 %14768 to i64
  br i1 %14760, label %14780, label %14770

14770:                                            ; preds = %14757
  %14771 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14769, i32 0
  %14772 = load i64, i64* %14771, align 8
  %14773 = ashr i64 %14772, 35
  %14774 = trunc i64 %14773 to i32
  %14775 = add nuw nsw i64 %14769, 1
  %14776 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14775, i32 0
  %14777 = load i64, i64* %14776, align 8
  %14778 = ashr i64 %14777, 35
  %14779 = trunc i64 %14778 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14761, i8 zeroext -23, i32 %14765, i32 %14774, i32 %14779, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

14780:                                            ; preds = %14757
  %14781 = add nuw nsw i64 %14769, 1
  %14782 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14781, i32 0
  %14783 = load i64, i64* %14782, align 8
  %14784 = ashr i64 %14783, 35
  %14785 = trunc i64 %14784 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14761, i32 %14765, i32 %14785, i8 zeroext 102, i8 zeroext 15, i8 zeroext -23) #11
  br label %23402

14786:                                            ; preds = %2
  %14787 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14788 = and i32 %14787, 32
  %14789 = icmp eq i32 %14788, 0
  %14790 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14791 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14792 = load i64, i64* %14791, align 8
  %14793 = ashr i64 %14792, 35
  %14794 = trunc i64 %14793 to i32
  %14795 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14796 = load i32, i32* %14795, align 4
  %14797 = and i32 %14796, 255
  %14798 = zext i32 %14797 to i64
  br i1 %14789, label %14809, label %14799

14799:                                            ; preds = %14786
  %14800 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14798, i32 0
  %14801 = load i64, i64* %14800, align 8
  %14802 = ashr i64 %14801, 35
  %14803 = trunc i64 %14802 to i32
  %14804 = add nuw nsw i64 %14798, 1
  %14805 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14804, i32 0
  %14806 = load i64, i64* %14805, align 8
  %14807 = ashr i64 %14806, 35
  %14808 = trunc i64 %14807 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14790, i8 zeroext -43, i32 %14794, i32 %14803, i32 %14808, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

14809:                                            ; preds = %14786
  %14810 = add nuw nsw i64 %14798, 1
  %14811 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14810, i32 0
  %14812 = load i64, i64* %14811, align 8
  %14813 = ashr i64 %14812, 35
  %14814 = trunc i64 %14813 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14790, i32 %14794, i32 %14814, i8 zeroext 102, i8 zeroext 15, i8 zeroext -43) #11
  br label %23402

14815:                                            ; preds = %2
  %14816 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14817 = and i32 %14816, 32
  %14818 = icmp eq i32 %14817, 0
  %14819 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14820 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14821 = load i64, i64* %14820, align 8
  %14822 = ashr i64 %14821, 35
  %14823 = trunc i64 %14822 to i32
  %14824 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14825 = load i32, i32* %14824, align 4
  %14826 = and i32 %14825, 255
  %14827 = zext i32 %14826 to i64
  br i1 %14818, label %14838, label %14828

14828:                                            ; preds = %14815
  %14829 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14827, i32 0
  %14830 = load i64, i64* %14829, align 8
  %14831 = ashr i64 %14830, 35
  %14832 = trunc i64 %14831 to i32
  %14833 = add nuw nsw i64 %14827, 1
  %14834 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14833, i32 0
  %14835 = load i64, i64* %14834, align 8
  %14836 = ashr i64 %14835, 35
  %14837 = trunc i64 %14836 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14819, i8 zeroext -22, i32 %14823, i32 %14832, i32 %14837, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

14838:                                            ; preds = %14815
  %14839 = add nuw nsw i64 %14827, 1
  %14840 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14839, i32 0
  %14841 = load i64, i64* %14840, align 8
  %14842 = ashr i64 %14841, 35
  %14843 = trunc i64 %14842 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14819, i32 %14823, i32 %14843, i8 zeroext 102, i8 zeroext 15, i8 zeroext -22) #11
  br label %23402

14844:                                            ; preds = %2
  %14845 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14846 = and i32 %14845, 32
  %14847 = icmp eq i32 %14846, 0
  %14848 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14849 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14850 = load i64, i64* %14849, align 8
  %14851 = ashr i64 %14850, 35
  %14852 = trunc i64 %14851 to i32
  %14853 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14854 = load i32, i32* %14853, align 4
  %14855 = and i32 %14854, 255
  %14856 = zext i32 %14855 to i64
  br i1 %14847, label %14867, label %14857

14857:                                            ; preds = %14844
  %14858 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14856, i32 0
  %14859 = load i64, i64* %14858, align 8
  %14860 = ashr i64 %14859, 35
  %14861 = trunc i64 %14860 to i32
  %14862 = add nuw nsw i64 %14856, 1
  %14863 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14862, i32 0
  %14864 = load i64, i64* %14863, align 8
  %14865 = ashr i64 %14864, 35
  %14866 = trunc i64 %14865 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14848, i8 zeroext -18, i32 %14852, i32 %14861, i32 %14866, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

14867:                                            ; preds = %14844
  %14868 = add nuw nsw i64 %14856, 1
  %14869 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14868, i32 0
  %14870 = load i64, i64* %14869, align 8
  %14871 = ashr i64 %14870, 35
  %14872 = trunc i64 %14871 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14848, i32 %14852, i32 %14872, i8 zeroext 102, i8 zeroext 15, i8 zeroext -18) #11
  br label %23402

14873:                                            ; preds = %2
  %14874 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14875 = and i32 %14874, 32
  %14876 = icmp eq i32 %14875, 0
  %14877 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14878 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14879 = load i64, i64* %14878, align 8
  %14880 = ashr i64 %14879, 35
  %14881 = trunc i64 %14880 to i32
  %14882 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14883 = load i32, i32* %14882, align 4
  %14884 = and i32 %14883, 255
  %14885 = zext i32 %14884 to i64
  br i1 %14876, label %14896, label %14886

14886:                                            ; preds = %14873
  %14887 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14885, i32 0
  %14888 = load i64, i64* %14887, align 8
  %14889 = ashr i64 %14888, 35
  %14890 = trunc i64 %14889 to i32
  %14891 = add nuw nsw i64 %14885, 1
  %14892 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14891, i32 0
  %14893 = load i64, i64* %14892, align 8
  %14894 = ashr i64 %14893, 35
  %14895 = trunc i64 %14894 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14877, i8 zeroext 117, i32 %14881, i32 %14890, i32 %14895, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

14896:                                            ; preds = %14873
  %14897 = add nuw nsw i64 %14885, 1
  %14898 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14897, i32 0
  %14899 = load i64, i64* %14898, align 8
  %14900 = ashr i64 %14899, 35
  %14901 = trunc i64 %14900 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14877, i32 %14881, i32 %14901, i8 zeroext 102, i8 zeroext 15, i8 zeroext 117) #11
  br label %23402

14902:                                            ; preds = %2
  %14903 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14904 = load i64, i64* %14903, align 8
  %14905 = ashr i64 %14904, 35
  %14906 = trunc i64 %14905 to i32
  %14907 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14908 = load i32, i32* %14907, align 4
  %14909 = and i32 %14908, 255
  %14910 = add nuw nsw i32 %14909, 1
  %14911 = zext i32 %14910 to i64
  %14912 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14911, i32 0
  %14913 = load i64, i64* %14912, align 8
  %14914 = ashr i64 %14913, 35
  %14915 = trunc i64 %14914 to i32
  %14916 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14917 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14918 = and i32 %14917, 32
  %14919 = icmp eq i32 %14918, 0
  br i1 %14919, label %14921, label %14920

14920:                                            ; preds = %14902
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14916, i8 zeroext 117, i32 %14906, i32 %14906, i32 %14915, i32 1, i32 1, i32 0, i32 5) #11
  br label %14922

14921:                                            ; preds = %14902
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14916, i32 %14906, i32 %14915, i8 zeroext 102, i8 zeroext 15, i8 zeroext 117) #11
  br label %14922

14922:                                            ; preds = %14920, %14921
  %14923 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14924 = and i32 %14923, 32
  %14925 = icmp eq i32 %14924, 0
  br i1 %14925, label %14927, label %14926

14926:                                            ; preds = %14922
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14916, i8 zeroext 117, i32 15, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %14928

14927:                                            ; preds = %14922
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14916, i32 15, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 117) #11
  br label %14928

14928:                                            ; preds = %14926, %14927
  %14929 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14930 = and i32 %14929, 32
  %14931 = icmp eq i32 %14930, 0
  br i1 %14931, label %14933, label %14932

14932:                                            ; preds = %14928
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14916, i8 zeroext -17, i32 %14906, i32 %14906, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

14933:                                            ; preds = %14928
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14916, i32 %14906, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -17) #11
  br label %23402

14934:                                            ; preds = %2
  %14935 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14936 = and i32 %14935, 32
  %14937 = icmp eq i32 %14936, 0
  %14938 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14939 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14940 = load i64, i64* %14939, align 8
  %14941 = ashr i64 %14940, 35
  %14942 = trunc i64 %14941 to i32
  %14943 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14944 = load i32, i32* %14943, align 4
  %14945 = and i32 %14944, 255
  %14946 = zext i32 %14945 to i64
  br i1 %14937, label %14957, label %14947

14947:                                            ; preds = %14934
  %14948 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14946, i32 0
  %14949 = load i64, i64* %14948, align 8
  %14950 = ashr i64 %14949, 35
  %14951 = trunc i64 %14950 to i32
  %14952 = add nuw nsw i64 %14946, 1
  %14953 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14952, i32 0
  %14954 = load i64, i64* %14953, align 8
  %14955 = ashr i64 %14954, 35
  %14956 = trunc i64 %14955 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14938, i8 zeroext 101, i32 %14942, i32 %14951, i32 %14956, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

14957:                                            ; preds = %14934
  %14958 = add nuw nsw i64 %14946, 1
  %14959 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14958, i32 0
  %14960 = load i64, i64* %14959, align 8
  %14961 = ashr i64 %14960, 35
  %14962 = trunc i64 %14961 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14938, i32 %14942, i32 %14962, i8 zeroext 102, i8 zeroext 15, i8 zeroext 101) #11
  br label %23402

14963:                                            ; preds = %2
  %14964 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14965 = load i64, i64* %14964, align 8
  %14966 = ashr i64 %14965, 35
  %14967 = trunc i64 %14966 to i32
  %14968 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14969 = load i32, i32* %14968, align 4
  %14970 = and i32 %14969, 255
  %14971 = add nuw nsw i32 %14970, 1
  %14972 = zext i32 %14971 to i64
  %14973 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14972, i32 0
  %14974 = load i64, i64* %14973, align 8
  %14975 = ashr i64 %14974, 35
  %14976 = trunc i64 %14975 to i32
  %14977 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14978 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14979 = and i32 %14978, 32
  %14980 = icmp eq i32 %14979, 0
  br i1 %14980, label %14982, label %14981

14981:                                            ; preds = %14963
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14977, i8 zeroext -22, i32 %14967, i32 %14967, i32 %14976, i32 1, i32 1, i32 0, i32 5) #11
  br label %14983

14982:                                            ; preds = %14963
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14977, i32 %14967, i32 %14976, i8 zeroext 102, i8 zeroext 15, i8 zeroext -22) #11
  br label %14983

14983:                                            ; preds = %14981, %14982
  %14984 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %14985 = and i32 %14984, 32
  %14986 = icmp eq i32 %14985, 0
  br i1 %14986, label %14988, label %14987

14987:                                            ; preds = %14983
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %14977, i8 zeroext 117, i32 %14967, i32 %14967, i32 %14976, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

14988:                                            ; preds = %14983
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %14977, i32 %14967, i32 %14976, i8 zeroext 102, i8 zeroext 15, i8 zeroext 117) #11
  br label %23402

14989:                                            ; preds = %2
  %14990 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %14991 = load i64, i64* %14990, align 8
  %14992 = ashr i64 %14991, 35
  %14993 = trunc i64 %14992 to i32
  %14994 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %14995 = load i32, i32* %14994, align 4
  %14996 = and i32 %14995, 255
  %14997 = zext i32 %14996 to i64
  %14998 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %14997, i32 0
  %14999 = load i64, i64* %14998, align 8
  %15000 = ashr i64 %14999, 35
  %15001 = trunc i64 %15000 to i32
  %15002 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %15003 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %15004 = and i32 %15003, 32
  %15005 = icmp eq i32 %15004, 0
  br i1 %15005, label %15007, label %15006

15006:                                            ; preds = %14989
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %15002, i8 zeroext 48, i32 %14993, i32 0, i32 %15001, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

15007:                                            ; preds = %14989
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %15002, i32 %14993, i32 %15001, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 48) #11
  br label %23402

15008:                                            ; preds = %2
  %15009 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %15010 = bitcast %"class.v8::internal::TurboAssembler"* %15009 to %"class.v8::internal::SharedTurboAssembler"*
  %15011 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %15012 = load i64, i64* %15011, align 8
  %15013 = ashr i64 %15012, 35
  %15014 = trunc i64 %15013 to i32
  %15015 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %15016 = load i32, i32* %15015, align 4
  %15017 = and i32 %15016, 255
  %15018 = zext i32 %15017 to i64
  %15019 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15018, i32 0
  %15020 = load i64, i64* %15019, align 8
  %15021 = ashr i64 %15020, 35
  %15022 = trunc i64 %15021 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler22I16x8UConvertI8x16HighENS0_11XMMRegisterES2_S2_(%"class.v8::internal::SharedTurboAssembler"* %15010, i32 %15014, i32 %15022, i32 15) #11
  br label %23402

15023:                                            ; preds = %2
  %15024 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %15025 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %15026 = load i64, i64* %15025, align 8
  %15027 = ashr i64 %15026, 35
  %15028 = trunc i64 %15027 to i32
  %15029 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %15030 = load i32, i32* %15029, align 4
  %15031 = and i32 %15030, 255
  %15032 = add nuw nsw i32 %15031, 1
  %15033 = zext i32 %15032 to i64
  %15034 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15033, i32 0
  %15035 = load i64, i64* %15034, align 8
  %15036 = and i64 %15035, 7
  %15037 = icmp eq i64 %15036, 3
  br i1 %15037, label %15038, label %15068

15038:                                            ; preds = %15023
  %15039 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %15040 = and i32 %15039, 32
  %15041 = icmp eq i32 %15040, 0
  %15042 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %15043 = zext i32 %15031 to i64
  br i1 %15041, label %15058, label %15044

15044:                                            ; preds = %15038
  %15045 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15043, i32 0
  %15046 = load i64, i64* %15045, align 8
  %15047 = ashr i64 %15046, 35
  %15048 = trunc i64 %15047 to i32
  %15049 = add nuw nsw i64 %15043, 1
  %15050 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15049
  %15051 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %15024, %"class.v8::internal::compiler::InstructionOperand"* %15050) #11
  %15052 = extractvalue { i64, i64 } %15051, 1
  %15053 = trunc i64 %15052 to i8
  %15054 = and i8 %15053, 15
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %15042, i8 zeroext 113, i32 2, i32 %15028, i32 %15048, i32 1, i32 1, i32 0, i32 5) #11
  %15055 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %15056 = load i8*, i8** %15055, align 8
  %15057 = getelementptr inbounds i8, i8* %15056, i64 1
  store i8* %15057, i8** %15055, align 8
  store i8 %15054, i8* %15056, align 1
  br label %23402

15058:                                            ; preds = %15038
  %15059 = add nuw nsw i64 %15043, 1
  %15060 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15059
  %15061 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %15024, %"class.v8::internal::compiler::InstructionOperand"* %15060) #11
  %15062 = extractvalue { i64, i64 } %15061, 1
  %15063 = trunc i64 %15062 to i8
  %15064 = and i8 %15063, 15
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %15042, i32 2, i32 %15028, i8 zeroext 102, i8 zeroext 15, i8 zeroext 113) #11
  %15065 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %15066 = load i8*, i8** %15065, align 8
  %15067 = getelementptr inbounds i8, i8* %15066, i64 1
  store i8* %15067, i8** %15065, align 8
  store i8 %15064, i8* %15066, align 1
  br label %23402

15068:                                            ; preds = %15023
  %15069 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %15070 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %15069, i64 0, i32 0, i32 0, i32 0
  %15071 = ashr i64 %15035, 35
  %15072 = trunc i64 %15071 to i32
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %15070, i32 10, i32 %15072, i32 8) #11
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %15070, i8 zeroext 4, i32 10, i64 15, i32 8) #11
  tail call void @_ZN2v88internal14TurboAssembler4MovqENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %15069, i32 15, i32 10) #11
  %15073 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %15074 = and i32 %15073, 32
  %15075 = icmp eq i32 %15074, 0
  br i1 %15075, label %15084, label %15076

15076:                                            ; preds = %15068
  %15077 = load i32, i32* %15029, align 4
  %15078 = and i32 %15077, 255
  %15079 = zext i32 %15078 to i64
  %15080 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15079, i32 0
  %15081 = load i64, i64* %15080, align 8
  %15082 = ashr i64 %15081, 35
  %15083 = trunc i64 %15082 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %15070, i8 zeroext -47, i32 %15028, i32 %15083, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

15084:                                            ; preds = %15068
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %15070, i32 %15028, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -47) #11
  br label %23402

15085:                                            ; preds = %2
  %15086 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %15087 = and i32 %15086, 32
  %15088 = icmp eq i32 %15087, 0
  %15089 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %15090 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %15091 = load i64, i64* %15090, align 8
  %15092 = ashr i64 %15091, 35
  %15093 = trunc i64 %15092 to i32
  %15094 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %15095 = load i32, i32* %15094, align 4
  %15096 = and i32 %15095, 255
  %15097 = zext i32 %15096 to i64
  br i1 %15088, label %15108, label %15098

15098:                                            ; preds = %15085
  %15099 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15097, i32 0
  %15100 = load i64, i64* %15099, align 8
  %15101 = ashr i64 %15100, 35
  %15102 = trunc i64 %15101 to i32
  %15103 = add nuw nsw i64 %15097, 1
  %15104 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15103, i32 0
  %15105 = load i64, i64* %15104, align 8
  %15106 = ashr i64 %15105, 35
  %15107 = trunc i64 %15106 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %15089, i8 zeroext 43, i32 %15093, i32 %15102, i32 %15107, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

15108:                                            ; preds = %15085
  %15109 = add nuw nsw i64 %15097, 1
  %15110 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15109, i32 0
  %15111 = load i64, i64* %15110, align 8
  %15112 = ashr i64 %15111, 35
  %15113 = trunc i64 %15112 to i32
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %15089, i32 %15093, i32 %15113, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 43) #11
  br label %23402

15114:                                            ; preds = %2
  %15115 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %15116 = and i32 %15115, 32
  %15117 = icmp eq i32 %15116, 0
  %15118 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %15119 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %15120 = load i64, i64* %15119, align 8
  %15121 = ashr i64 %15120, 35
  %15122 = trunc i64 %15121 to i32
  %15123 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %15124 = load i32, i32* %15123, align 4
  %15125 = and i32 %15124, 255
  %15126 = zext i32 %15125 to i64
  br i1 %15117, label %15137, label %15127

15127:                                            ; preds = %15114
  %15128 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15126, i32 0
  %15129 = load i64, i64* %15128, align 8
  %15130 = ashr i64 %15129, 35
  %15131 = trunc i64 %15130 to i32
  %15132 = add nuw nsw i64 %15126, 1
  %15133 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15132, i32 0
  %15134 = load i64, i64* %15133, align 8
  %15135 = ashr i64 %15134, 35
  %15136 = trunc i64 %15135 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %15118, i8 zeroext -35, i32 %15122, i32 %15131, i32 %15136, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

15137:                                            ; preds = %15114
  %15138 = add nuw nsw i64 %15126, 1
  %15139 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15138, i32 0
  %15140 = load i64, i64* %15139, align 8
  %15141 = ashr i64 %15140, 35
  %15142 = trunc i64 %15141 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %15118, i32 %15122, i32 %15142, i8 zeroext 102, i8 zeroext 15, i8 zeroext -35) #11
  br label %23402

15143:                                            ; preds = %2
  %15144 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %15145 = and i32 %15144, 32
  %15146 = icmp eq i32 %15145, 0
  %15147 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %15148 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %15149 = load i64, i64* %15148, align 8
  %15150 = ashr i64 %15149, 35
  %15151 = trunc i64 %15150 to i32
  %15152 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %15153 = load i32, i32* %15152, align 4
  %15154 = and i32 %15153, 255
  %15155 = zext i32 %15154 to i64
  br i1 %15146, label %15166, label %15156

15156:                                            ; preds = %15143
  %15157 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15155, i32 0
  %15158 = load i64, i64* %15157, align 8
  %15159 = ashr i64 %15158, 35
  %15160 = trunc i64 %15159 to i32
  %15161 = add nuw nsw i64 %15155, 1
  %15162 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15161, i32 0
  %15163 = load i64, i64* %15162, align 8
  %15164 = ashr i64 %15163, 35
  %15165 = trunc i64 %15164 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %15147, i8 zeroext -39, i32 %15151, i32 %15160, i32 %15165, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

15166:                                            ; preds = %15143
  %15167 = add nuw nsw i64 %15155, 1
  %15168 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15167, i32 0
  %15169 = load i64, i64* %15168, align 8
  %15170 = ashr i64 %15169, 35
  %15171 = trunc i64 %15170 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %15147, i32 %15151, i32 %15171, i8 zeroext 102, i8 zeroext 15, i8 zeroext -39) #11
  br label %23402

15172:                                            ; preds = %2
  %15173 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %15174 = and i32 %15173, 32
  %15175 = icmp eq i32 %15174, 0
  %15176 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %15177 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %15178 = load i64, i64* %15177, align 8
  %15179 = ashr i64 %15178, 35
  %15180 = trunc i64 %15179 to i32
  %15181 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %15182 = load i32, i32* %15181, align 4
  %15183 = and i32 %15182, 255
  %15184 = zext i32 %15183 to i64
  br i1 %15175, label %15195, label %15185

15185:                                            ; preds = %15172
  %15186 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15184, i32 0
  %15187 = load i64, i64* %15186, align 8
  %15188 = ashr i64 %15187, 35
  %15189 = trunc i64 %15188 to i32
  %15190 = add nuw nsw i64 %15184, 1
  %15191 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15190, i32 0
  %15192 = load i64, i64* %15191, align 8
  %15193 = ashr i64 %15192, 35
  %15194 = trunc i64 %15193 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %15176, i8 zeroext 58, i32 %15180, i32 %15189, i32 %15194, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

15195:                                            ; preds = %15172
  %15196 = add nuw nsw i64 %15184, 1
  %15197 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15196, i32 0
  %15198 = load i64, i64* %15197, align 8
  %15199 = ashr i64 %15198, 35
  %15200 = trunc i64 %15199 to i32
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %15176, i32 %15180, i32 %15200, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 58) #11
  br label %23402

15201:                                            ; preds = %2
  %15202 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %15203 = and i32 %15202, 32
  %15204 = icmp eq i32 %15203, 0
  %15205 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %15206 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %15207 = load i64, i64* %15206, align 8
  %15208 = ashr i64 %15207, 35
  %15209 = trunc i64 %15208 to i32
  %15210 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %15211 = load i32, i32* %15210, align 4
  %15212 = and i32 %15211, 255
  %15213 = zext i32 %15212 to i64
  br i1 %15204, label %15224, label %15214

15214:                                            ; preds = %15201
  %15215 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15213, i32 0
  %15216 = load i64, i64* %15215, align 8
  %15217 = ashr i64 %15216, 35
  %15218 = trunc i64 %15217 to i32
  %15219 = add nuw nsw i64 %15213, 1
  %15220 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15219, i32 0
  %15221 = load i64, i64* %15220, align 8
  %15222 = ashr i64 %15221, 35
  %15223 = trunc i64 %15222 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %15205, i8 zeroext 62, i32 %15209, i32 %15218, i32 %15223, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

15224:                                            ; preds = %15201
  %15225 = add nuw nsw i64 %15213, 1
  %15226 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15225, i32 0
  %15227 = load i64, i64* %15226, align 8
  %15228 = ashr i64 %15227, 35
  %15229 = trunc i64 %15228 to i32
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %15205, i32 %15209, i32 %15229, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 62) #11
  br label %23402

15230:                                            ; preds = %2
  %15231 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %15232 = load i64, i64* %15231, align 8
  %15233 = ashr i64 %15232, 35
  %15234 = trunc i64 %15233 to i32
  %15235 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %15236 = load i32, i32* %15235, align 4
  %15237 = and i32 %15236, 255
  %15238 = add nuw nsw i32 %15237, 1
  %15239 = zext i32 %15238 to i64
  %15240 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15239, i32 0
  %15241 = load i64, i64* %15240, align 8
  %15242 = ashr i64 %15241, 35
  %15243 = trunc i64 %15242 to i32
  %15244 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %15245 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %15246 = and i32 %15245, 32
  %15247 = icmp eq i32 %15246, 0
  br i1 %15247, label %15249, label %15248

15248:                                            ; preds = %15230
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %15244, i8 zeroext 62, i32 %15234, i32 %15234, i32 %15243, i32 1, i32 2, i32 0, i32 5) #11
  br label %15250

15249:                                            ; preds = %15230
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %15244, i32 %15234, i32 %15243, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 62) #11
  br label %15250

15250:                                            ; preds = %15248, %15249
  %15251 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %15252 = and i32 %15251, 32
  %15253 = icmp eq i32 %15252, 0
  br i1 %15253, label %15255, label %15254

15254:                                            ; preds = %15250
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %15244, i8 zeroext 117, i32 %15234, i32 %15234, i32 %15243, i32 1, i32 1, i32 0, i32 5) #11
  br label %15256

15255:                                            ; preds = %15250
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %15244, i32 %15234, i32 %15243, i8 zeroext 102, i8 zeroext 15, i8 zeroext 117) #11
  br label %15256

15256:                                            ; preds = %15254, %15255
  %15257 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %15258 = and i32 %15257, 32
  %15259 = icmp eq i32 %15258, 0
  br i1 %15259, label %15261, label %15260

15260:                                            ; preds = %15256
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %15244, i8 zeroext 117, i32 15, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %15262

15261:                                            ; preds = %15256
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %15244, i32 15, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 117) #11
  br label %15262

15262:                                            ; preds = %15260, %15261
  %15263 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %15264 = and i32 %15263, 32
  %15265 = icmp eq i32 %15264, 0
  br i1 %15265, label %15267, label %15266

15266:                                            ; preds = %15262
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %15244, i8 zeroext -17, i32 %15234, i32 %15234, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

15267:                                            ; preds = %15262
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %15244, i32 %15234, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -17) #11
  br label %23402

15268:                                            ; preds = %2
  %15269 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %15270 = load i64, i64* %15269, align 8
  %15271 = ashr i64 %15270, 35
  %15272 = trunc i64 %15271 to i32
  %15273 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %15274 = load i32, i32* %15273, align 4
  %15275 = and i32 %15274, 255
  %15276 = add nuw nsw i32 %15275, 1
  %15277 = zext i32 %15276 to i64
  %15278 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15277, i32 0
  %15279 = load i64, i64* %15278, align 8
  %15280 = ashr i64 %15279, 35
  %15281 = trunc i64 %15280 to i32
  %15282 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %15283 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %15284 = and i32 %15283, 32
  %15285 = icmp eq i32 %15284, 0
  br i1 %15285, label %15287, label %15286

15286:                                            ; preds = %15268
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %15282, i8 zeroext 58, i32 %15272, i32 %15272, i32 %15281, i32 1, i32 2, i32 0, i32 5) #11
  br label %15288

15287:                                            ; preds = %15268
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %15282, i32 %15272, i32 %15281, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 58) #11
  br label %15288

15288:                                            ; preds = %15286, %15287
  %15289 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %15290 = and i32 %15289, 32
  %15291 = icmp eq i32 %15290, 0
  br i1 %15291, label %15293, label %15292

15292:                                            ; preds = %15288
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %15282, i8 zeroext 117, i32 %15272, i32 %15272, i32 %15281, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

15293:                                            ; preds = %15288
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %15282, i32 %15272, i32 %15281, i8 zeroext 102, i8 zeroext 15, i8 zeroext 117) #11
  br label %23402

15294:                                            ; preds = %2
  %15295 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %15296 = and i32 %15295, 32
  %15297 = icmp eq i32 %15296, 0
  %15298 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %15299 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %15300 = load i64, i64* %15299, align 8
  %15301 = ashr i64 %15300, 35
  %15302 = trunc i64 %15301 to i32
  %15303 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %15304 = load i32, i32* %15303, align 4
  %15305 = and i32 %15304, 255
  %15306 = zext i32 %15305 to i64
  br i1 %15297, label %15317, label %15307

15307:                                            ; preds = %15294
  %15308 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15306, i32 0
  %15309 = load i64, i64* %15308, align 8
  %15310 = ashr i64 %15309, 35
  %15311 = trunc i64 %15310 to i32
  %15312 = add nuw nsw i64 %15306, 1
  %15313 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15312, i32 0
  %15314 = load i64, i64* %15313, align 8
  %15315 = ashr i64 %15314, 35
  %15316 = trunc i64 %15315 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %15298, i8 zeroext -29, i32 %15302, i32 %15311, i32 %15316, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

15317:                                            ; preds = %15294
  %15318 = add nuw nsw i64 %15306, 1
  %15319 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15318, i32 0
  %15320 = load i64, i64* %15319, align 8
  %15321 = ashr i64 %15320, 35
  %15322 = trunc i64 %15321 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %15298, i32 %15302, i32 %15322, i8 zeroext 102, i8 zeroext 15, i8 zeroext -29) #11
  br label %23402

15323:                                            ; preds = %2
  %15324 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %15325 = load i64, i64* %15324, align 8
  %15326 = ashr i64 %15325, 35
  %15327 = trunc i64 %15326 to i32
  %15328 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %15329 = load i32, i32* %15328, align 4
  %15330 = and i32 %15329, 255
  %15331 = zext i32 %15330 to i64
  %15332 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15331, i32 0
  %15333 = load i64, i64* %15332, align 8
  %15334 = ashr i64 %15333, 35
  %15335 = trunc i64 %15334 to i32
  %15336 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %15337 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %15338 = and i32 %15337, 32
  %15339 = icmp eq i32 %15338, 0
  br i1 %15339, label %15341, label %15340

15340:                                            ; preds = %15323
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %15336, i8 zeroext 29, i32 %15327, i32 0, i32 %15335, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

15341:                                            ; preds = %15323
  tail call void @_ZN2v88internal9Assembler11ssse3_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %15336, i32 %15327, i32 %15335, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 29) #11
  br label %23402

15342:                                            ; preds = %2
  %15343 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %15344 = load i64, i64* %15343, align 8
  %15345 = ashr i64 %15344, 35
  %15346 = trunc i64 %15345 to i32
  %15347 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %15348 = load i32, i32* %15347, align 4
  %15349 = and i32 %15348, 255
  %15350 = zext i32 %15349 to i64
  %15351 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15350, i32 0
  %15352 = load i64, i64* %15351, align 8
  %15353 = ashr i64 %15352, 35
  %15354 = trunc i64 %15353 to i32
  %15355 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %15356 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %15357 = and i32 %15356, 32
  %15358 = icmp eq i32 %15357, 0
  br i1 %15358, label %15360, label %15359

15359:                                            ; preds = %15342
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %15355, i8 zeroext 99, i32 15, i32 15, i32 %15354, i32 1, i32 1, i32 0, i32 5) #11
  br label %15361

15360:                                            ; preds = %15342
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %15355, i32 15, i32 %15354, i8 zeroext 102, i8 zeroext 15, i8 zeroext 99) #11
  br label %15361

15361:                                            ; preds = %15359, %15360
  %15362 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %15363 = and i32 %15362, 32
  %15364 = icmp eq i32 %15363, 0
  br i1 %15364, label %15366, label %15365

15365:                                            ; preds = %15361
  tail call void @_ZN2v88internal9Assembler9vpmovmskbENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %15355, i32 %15346, i32 15) #11
  br label %15367

15366:                                            ; preds = %15361
  tail call void @_ZN2v88internal9Assembler8pmovmskbENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %15355, i32 %15346, i32 15) #11
  br label %15367

15367:                                            ; preds = %15365, %15366
  tail call void @_ZN2v88internal9Assembler5shiftENS0_8RegisterENS0_9ImmediateEii(%"class.v8::internal::Assembler"* %15355, i32 %15346, i64 8, i32 5, i32 8) #11
  br label %23402

15368:                                            ; preds = %2
  %15369 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %15370 = bitcast %"class.v8::internal::TurboAssembler"* %15369 to %"class.v8::internal::SharedTurboAssembler"*
  %15371 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %15372 = load i64, i64* %15371, align 8
  %15373 = ashr i64 %15372, 35
  %15374 = trunc i64 %15373 to i32
  %15375 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %15376 = load i32, i32* %15375, align 4
  %15377 = and i32 %15376, 255
  %15378 = zext i32 %15377 to i64
  %15379 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15378, i32 0
  %15380 = load i64, i64* %15379, align 8
  %15381 = ashr i64 %15380, 35
  %15382 = trunc i64 %15381 to i32
  %15383 = add nuw nsw i64 %15378, 1
  %15384 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15383, i32 0
  %15385 = load i64, i64* %15384, align 8
  %15386 = ashr i64 %15385, 35
  %15387 = trunc i64 %15386 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler14I16x8ExtMulLowENS0_11XMMRegisterES2_S2_S2_b(%"class.v8::internal::SharedTurboAssembler"* %15370, i32 %15374, i32 %15382, i32 %15387, i32 15, i1 zeroext true) #11
  br label %23402

15388:                                            ; preds = %2
  %15389 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %15390 = bitcast %"class.v8::internal::TurboAssembler"* %15389 to %"class.v8::internal::SharedTurboAssembler"*
  %15391 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %15392 = load i64, i64* %15391, align 8
  %15393 = ashr i64 %15392, 35
  %15394 = trunc i64 %15393 to i32
  %15395 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %15396 = load i32, i32* %15395, align 4
  %15397 = and i32 %15396, 255
  %15398 = zext i32 %15397 to i64
  %15399 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15398, i32 0
  %15400 = load i64, i64* %15399, align 8
  %15401 = ashr i64 %15400, 35
  %15402 = trunc i64 %15401 to i32
  %15403 = add nuw nsw i64 %15398, 1
  %15404 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15403, i32 0
  %15405 = load i64, i64* %15404, align 8
  %15406 = ashr i64 %15405, 35
  %15407 = trunc i64 %15406 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler16I16x8ExtMulHighSENS0_11XMMRegisterES2_S2_S2_(%"class.v8::internal::SharedTurboAssembler"* %15390, i32 %15394, i32 %15402, i32 %15407, i32 15) #11
  br label %23402

15408:                                            ; preds = %2
  %15409 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %15410 = bitcast %"class.v8::internal::TurboAssembler"* %15409 to %"class.v8::internal::SharedTurboAssembler"*
  %15411 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %15412 = load i64, i64* %15411, align 8
  %15413 = ashr i64 %15412, 35
  %15414 = trunc i64 %15413 to i32
  %15415 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %15416 = load i32, i32* %15415, align 4
  %15417 = and i32 %15416, 255
  %15418 = zext i32 %15417 to i64
  %15419 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15418, i32 0
  %15420 = load i64, i64* %15419, align 8
  %15421 = ashr i64 %15420, 35
  %15422 = trunc i64 %15421 to i32
  %15423 = add nuw nsw i64 %15418, 1
  %15424 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15423, i32 0
  %15425 = load i64, i64* %15424, align 8
  %15426 = ashr i64 %15425, 35
  %15427 = trunc i64 %15426 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler14I16x8ExtMulLowENS0_11XMMRegisterES2_S2_S2_b(%"class.v8::internal::SharedTurboAssembler"* %15410, i32 %15414, i32 %15422, i32 %15427, i32 15, i1 zeroext false) #11
  br label %23402

15428:                                            ; preds = %2
  %15429 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %15430 = bitcast %"class.v8::internal::TurboAssembler"* %15429 to %"class.v8::internal::SharedTurboAssembler"*
  %15431 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %15432 = load i64, i64* %15431, align 8
  %15433 = ashr i64 %15432, 35
  %15434 = trunc i64 %15433 to i32
  %15435 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %15436 = load i32, i32* %15435, align 4
  %15437 = and i32 %15436, 255
  %15438 = zext i32 %15437 to i64
  %15439 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15438, i32 0
  %15440 = load i64, i64* %15439, align 8
  %15441 = ashr i64 %15440, 35
  %15442 = trunc i64 %15441 to i32
  %15443 = add nuw nsw i64 %15438, 1
  %15444 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15443, i32 0
  %15445 = load i64, i64* %15444, align 8
  %15446 = ashr i64 %15445, 35
  %15447 = trunc i64 %15446 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler16I16x8ExtMulHighUENS0_11XMMRegisterES2_S2_S2_(%"class.v8::internal::SharedTurboAssembler"* %15430, i32 %15434, i32 %15442, i32 %15447, i32 15) #11
  br label %23402

15448:                                            ; preds = %2
  %15449 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %15450 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %15451 = load i64, i64* %15450, align 8
  %15452 = ashr i64 %15451, 35
  %15453 = trunc i64 %15452 to i32
  %15454 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %15455 = load i32, i32* %15454, align 4
  %15456 = and i32 %15455, 255
  %15457 = zext i32 %15456 to i64
  %15458 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15457, i32 0
  %15459 = load i64, i64* %15458, align 8
  %15460 = ashr i64 %15459, 35
  %15461 = trunc i64 %15460 to i32
  tail call void @_ZN2v88internal14TurboAssembler25I16x8ExtAddPairwiseI8x16SENS0_11XMMRegisterES2_(%"class.v8::internal::TurboAssembler"* %15449, i32 %15453, i32 %15461) #11
  br label %23402

15462:                                            ; preds = %2
  %15463 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %15464 = load i64, i64* %15463, align 8
  %15465 = ashr i64 %15464, 35
  %15466 = trunc i64 %15465 to i32
  %15467 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %15468 = load i32, i32* %15467, align 4
  %15469 = and i32 %15468, 255
  %15470 = zext i32 %15469 to i64
  %15471 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15470, i32 0
  %15472 = load i64, i64* %15471, align 8
  %15473 = ashr i64 %15472, 35
  %15474 = trunc i64 %15473 to i32
  %15475 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %15476 = tail call i64 @_ZN2v88internal17ExternalReference32address_of_wasm_i8x16_splat_0x01Ev() #11
  %15477 = tail call { i64, i32 } @_ZN2v88internal14TurboAssembler26ExternalReferenceAsOperandENS0_17ExternalReferenceENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %15475, i64 %15476, i32 10) #11
  %15478 = extractvalue { i64, i32 } %15477, 0
  %15479 = extractvalue { i64, i32 } %15477, 1
  tail call void @_ZN2v88internal14TurboAssembler9PmaddubswENS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::TurboAssembler"* %15475, i32 %15466, i32 %15474, i64 %15478, i32 %15479) #11
  br label %23402

15480:                                            ; preds = %2
  %15481 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %15482 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %15483 = load i64, i64* %15482, align 8
  %15484 = ashr i64 %15483, 35
  %15485 = trunc i64 %15484 to i32
  %15486 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %15487 = load i32, i32* %15486, align 4
  %15488 = and i32 %15487, 255
  %15489 = zext i32 %15488 to i64
  %15490 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15489, i32 0
  %15491 = load i64, i64* %15490, align 8
  %15492 = ashr i64 %15491, 35
  %15493 = trunc i64 %15492 to i32
  %15494 = add nuw nsw i64 %15489, 1
  %15495 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15494, i32 0
  %15496 = load i64, i64* %15495, align 8
  %15497 = ashr i64 %15496, 35
  %15498 = trunc i64 %15497 to i32
  tail call void @_ZN2v88internal14TurboAssembler16I16x8Q15MulRSatSENS0_11XMMRegisterES2_S2_(%"class.v8::internal::TurboAssembler"* %15481, i32 %15485, i32 %15493, i32 %15498) #11
  br label %23402

15499:                                            ; preds = %2
  %15500 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %15501 = load i64, i64* %15500, align 8
  %15502 = ashr i64 %15501, 35
  %15503 = trunc i64 %15502 to i32
  %15504 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %15505 = and i32 %15504, 64
  %15506 = icmp eq i32 %15505, 0
  br i1 %15506, label %15537, label %15507

15507:                                            ; preds = %15499
  %15508 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %15509 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %15510 = load i32, i32* %15509, align 4
  %15511 = and i32 %15510, 255
  %15512 = zext i32 %15511 to i64
  %15513 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15512, i32 0
  %15514 = load i64, i64* %15513, align 8
  %15515 = and i64 %15514, 7
  %15516 = icmp ugt i64 %15515, 4
  %15517 = and i64 %15514, 24
  %15518 = icmp eq i64 %15517, 0
  %15519 = and i1 %15516, %15518
  br i1 %15519, label %15522, label %15520

15520:                                            ; preds = %15507
  %15521 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %15508, i64 0, i32 0, i32 0, i32 0
  br label %15530

15522:                                            ; preds = %15507
  %15523 = lshr i64 %15514, 5
  %15524 = trunc i64 %15523 to i8
  %15525 = icmp ult i8 %15524, 12
  %15526 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %15508, i64 0, i32 0, i32 0, i32 0
  br i1 %15525, label %15527, label %15530

15527:                                            ; preds = %15522
  %15528 = ashr i64 %15514, 35
  %15529 = trunc i64 %15528 to i32
  tail call void @_ZN2v88internal9Assembler5vmovdENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::Assembler"* %15526, i32 15, i32 %15529) #11
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %15526, i8 zeroext 120, i32 %15503, i32 0, i32 15, i32 1, i32 2, i32 0, i32 6) #11
  br label %23402

15530:                                            ; preds = %15520, %15522
  %15531 = phi %"class.v8::internal::Assembler"* [ %15521, %15520 ], [ %15526, %15522 ]
  %15532 = ashr i64 %15514, 35
  %15533 = trunc i64 %15532 to i32
  %15534 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %15533, i32 0) #11
  %15535 = extractvalue { i64, i32 } %15534, 0
  %15536 = extractvalue { i64, i32 } %15534, 1
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %15531, i8 zeroext 120, i32 %15503, i32 0, i64 %15535, i32 %15536, i32 1, i32 2, i32 0, i32 6) #11
  br label %23402

15537:                                            ; preds = %15499
  %15538 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %15539 = load i32, i32* %15538, align 4
  %15540 = and i32 %15539, 255
  %15541 = zext i32 %15540 to i64
  %15542 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15541, i32 0
  %15543 = load i64, i64* %15542, align 8
  %15544 = and i64 %15543, 7
  %15545 = icmp ugt i64 %15544, 4
  %15546 = and i64 %15543, 24
  %15547 = icmp eq i64 %15546, 0
  %15548 = and i1 %15545, %15547
  br i1 %15548, label %15552, label %15549

15549:                                            ; preds = %15537
  %15550 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %15551 = bitcast %"class.v8::internal::TurboAssembler"* %15550 to %"class.v8::internal::SharedTurboAssembler"*
  br label %15566

15552:                                            ; preds = %15537
  %15553 = lshr i64 %15543, 5
  %15554 = trunc i64 %15553 to i8
  %15555 = icmp ult i8 %15554, 12
  %15556 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %15557 = bitcast %"class.v8::internal::TurboAssembler"* %15556 to %"class.v8::internal::SharedTurboAssembler"*
  br i1 %15555, label %15558, label %15566

15558:                                            ; preds = %15552
  %15559 = ashr i64 %15543, 35
  %15560 = trunc i64 %15559 to i32
  %15561 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %15556, i64 0, i32 0, i32 0, i32 0
  %15562 = and i32 %15504, 32
  %15563 = icmp eq i32 %15562, 0
  br i1 %15563, label %15565, label %15564

15564:                                            ; preds = %15558
  tail call void @_ZN2v88internal9Assembler5vmovdENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::Assembler"* %15561, i32 %15503, i32 %15560) #11
  br label %15580

15565:                                            ; preds = %15558
  tail call void @_ZN2v88internal9Assembler4movdENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::Assembler"* %15561, i32 %15503, i32 %15560) #11
  br label %15580

15566:                                            ; preds = %15549, %15552
  %15567 = phi %"class.v8::internal::SharedTurboAssembler"* [ %15551, %15549 ], [ %15557, %15552 ]
  %15568 = phi %"class.v8::internal::TurboAssembler"* [ %15550, %15549 ], [ %15556, %15552 ]
  %15569 = ashr i64 %15543, 35
  %15570 = trunc i64 %15569 to i32
  %15571 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %15570, i32 0) #11
  %15572 = extractvalue { i64, i32 } %15571, 0
  %15573 = extractvalue { i64, i32 } %15571, 1
  %15574 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %15567, i64 0, i32 0, i32 0
  %15575 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %15576 = and i32 %15575, 32
  %15577 = icmp eq i32 %15576, 0
  br i1 %15577, label %15579, label %15578

15578:                                            ; preds = %15566
  call void @_ZN2v88internal9Assembler5vmovdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %15574, i32 %15503, i64 %15572, i32 %15573) #11
  br label %15580

15579:                                            ; preds = %15566
  call void @_ZN2v88internal9Assembler4movdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %15574, i32 %15503, i64 %15572, i32 %15573) #11
  br label %15580

15580:                                            ; preds = %15579, %15578, %15565, %15564
  %15581 = phi %"class.v8::internal::SharedTurboAssembler"* [ %15557, %15564 ], [ %15557, %15565 ], [ %15567, %15578 ], [ %15567, %15579 ]
  %15582 = phi %"class.v8::internal::TurboAssembler"* [ %15556, %15564 ], [ %15556, %15565 ], [ %15568, %15578 ], [ %15568, %15579 ]
  %15583 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %15581, i64 0, i32 0, i32 0
  %15584 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %15585 = and i32 %15584, 32
  %15586 = icmp eq i32 %15585, 0
  br i1 %15586, label %15588, label %15587

15587:                                            ; preds = %15580
  call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %15583, i8 zeroext 87, i32 15, i32 15, i32 15) #11
  br label %15589

15588:                                            ; preds = %15580
  call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %15583, i32 15, i32 15, i8 zeroext 15, i8 zeroext 87) #11
  br label %15589

15589:                                            ; preds = %15587, %15588
  %15590 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %15582, i64 0, i32 0, i32 0, i32 0
  %15591 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %15592 = and i32 %15591, 32
  %15593 = icmp eq i32 %15592, 0
  br i1 %15593, label %15595, label %15594

15594:                                            ; preds = %15589
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %15590, i8 zeroext 0, i32 %15503, i32 %15503, i32 15, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

15595:                                            ; preds = %15589
  call void @_ZN2v88internal9Assembler11ssse3_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %15590, i32 %15503, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 0) #11
  br label %23402

15596:                                            ; preds = %2
  %15597 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %15598 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %15597, align 8
  %15599 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %15600 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %15601 = bitcast i8** %15600 to i64*
  %15602 = load i64, i64* %15601, align 8
  %15603 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %15604 = bitcast i8** %15603 to i64*
  %15605 = load i64, i64* %15604, align 8
  %15606 = sub i64 %15602, %15605
  %15607 = trunc i64 %15606 to i32
  %15608 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %15609 = and i32 %275, -1073741824
  %15610 = icmp eq i32 %15609, 1073741824
  br i1 %15610, label %15611, label %15632

15611:                                            ; preds = %15596
  %15612 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %15598, i64 0, i32 2
  %15613 = load i64, i64* %15612, align 8
  %15614 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %15598, i64 0, i32 3
  %15615 = load i64, i64* %15614, align 8
  %15616 = sub i64 %15615, %15613
  %15617 = icmp ult i64 %15616, 72
  br i1 %15617, label %15618, label %15620, !prof !3

15618:                                            ; preds = %15611
  %15619 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %15598, i64 72) #11
  br label %15622

15620:                                            ; preds = %15611
  %15621 = add i64 %15613, 72
  store i64 %15621, i64* %15612, align 8
  br label %15622

15622:                                            ; preds = %15620, %15618
  %15623 = phi i64 [ %15619, %15618 ], [ %15613, %15620 ]
  %15624 = inttoptr i64 %15623 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %15625 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %15624, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %15625, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %15626 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %15624, i64 0, i32 0, i32 0, i32 0
  %15627 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %15624, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %15627, align 8
  %15628 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %15624, i64 0, i32 0, i32 2
  %15629 = bitcast %"class.v8::internal::compiler::Instruction"** %15628 to i64*
  store i64 %15608, i64* %15629, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15626, align 8
  %15630 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %15624, i64 0, i32 1
  store i32 %15607, i32* %15630, align 8
  %15631 = load i32, i32* %274, align 8
  br label %15632

15632:                                            ; preds = %15596, %15622
  %15633 = phi i32 [ %275, %15596 ], [ %15631, %15622 ]
  %15634 = bitcast i64* %220 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15634) #11
  store i64 0, i64* %220, align 8
  %15635 = and i32 %15633, 15872
  %15636 = icmp eq i32 %15635, 0
  br i1 %15636, label %15666, label %15637

15637:                                            ; preds = %15632
  %15638 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %220)
  %15639 = extractvalue { i64, i32 } %15638, 0
  %15640 = extractvalue { i64, i32 } %15638, 1
  %15641 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %15642 = load i64, i64* %220, align 8
  %15643 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %15644 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %15643, i64 0, i32 1
  %15645 = load i32, i32* %15644, align 4
  %15646 = and i32 %15645, 255
  %15647 = zext i32 %15646 to i64
  %15648 = add i64 %15642, %15647
  %15649 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %15643, i64 0, i32 5, i64 %15648, i32 0
  %15650 = load i64, i64* %15649, align 8
  %15651 = ashr i64 %15650, 35
  %15652 = trunc i64 %15651 to i32
  %15653 = add i64 %15648, 1
  %15654 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %15643, i64 0, i32 5, i64 %15653
  %15655 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %15641, %"class.v8::internal::compiler::InstructionOperand"* %15654) #11
  %15656 = extractvalue { i64, i64 } %15655, 1
  %15657 = trunc i64 %15656 to i8
  %15658 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %15599, i64 0, i32 0, i32 0, i32 0
  %15659 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %15660 = and i32 %15659, 32
  %15661 = icmp eq i32 %15660, 0
  br i1 %15661, label %15665, label %15662

15662:                                            ; preds = %15637
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %15658, i8 zeroext 20, i32 %15652, i32 0, i64 %15639, i32 %15640, i32 1, i32 3, i32 0, i32 5) #11
  %15663 = load i8*, i8** %15600, align 8
  %15664 = getelementptr inbounds i8, i8* %15663, i64 1
  store i8* %15664, i8** %15600, align 8
  store i8 %15657, i8* %15663, align 1
  br label %15694

15665:                                            ; preds = %15637
  call void @_ZN2v88internal9Assembler10sse4_instrENS0_7OperandENS0_11XMMRegisterEhhhha(%"class.v8::internal::Assembler"* %15658, i64 %15639, i32 %15640, i32 %15652, i8 zeroext 102, i8 zeroext 15, i8 zeroext 58, i8 zeroext 20, i8 signext %15657) #11
  br label %15694

15666:                                            ; preds = %15632
  %15667 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %15668 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %15669 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %15668, i64 0, i32 5, i64 0, i32 0
  %15670 = load i64, i64* %15669, align 8
  %15671 = ashr i64 %15670, 35
  %15672 = trunc i64 %15671 to i32
  %15673 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %15668, i64 0, i32 1
  %15674 = load i32, i32* %15673, align 4
  %15675 = and i32 %15674, 255
  %15676 = zext i32 %15675 to i64
  %15677 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %15668, i64 0, i32 5, i64 %15676, i32 0
  %15678 = load i64, i64* %15677, align 8
  %15679 = ashr i64 %15678, 35
  %15680 = trunc i64 %15679 to i32
  %15681 = add nuw nsw i64 %15676, 1
  %15682 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %15668, i64 0, i32 5, i64 %15681
  %15683 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %15667, %"class.v8::internal::compiler::InstructionOperand"* %15682) #11
  %15684 = extractvalue { i64, i64 } %15683, 1
  %15685 = trunc i64 %15684 to i8
  %15686 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %15599, i64 0, i32 0, i32 0, i32 0
  %15687 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %15688 = and i32 %15687, 32
  %15689 = icmp eq i32 %15688, 0
  br i1 %15689, label %15693, label %15690

15690:                                            ; preds = %15666
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %15686, i8 zeroext 20, i32 %15680, i32 0, i32 %15672, i32 1, i32 3, i32 0, i32 5) #11
  %15691 = load i8*, i8** %15600, align 8
  %15692 = getelementptr inbounds i8, i8* %15691, i64 1
  store i8* %15692, i8** %15600, align 8
  store i8 %15685, i8* %15691, align 1
  br label %15694

15693:                                            ; preds = %15666
  call void @_ZN2v88internal9Assembler10sse4_instrENS0_8RegisterENS0_11XMMRegisterEhhhha(%"class.v8::internal::Assembler"* %15686, i32 %15672, i32 %15680, i8 zeroext 102, i8 zeroext 15, i8 zeroext 58, i8 zeroext 20, i8 signext %15685) #11
  br label %15694

15694:                                            ; preds = %15693, %15690, %15665, %15662
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15634) #11
  br label %23402

15695:                                            ; preds = %2
  %15696 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %15697 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %15696, align 8
  %15698 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %15699 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %15700 = bitcast i8** %15699 to i64*
  %15701 = load i64, i64* %15700, align 8
  %15702 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %15703 = bitcast i8** %15702 to i64*
  %15704 = load i64, i64* %15703, align 8
  %15705 = sub i64 %15701, %15704
  %15706 = trunc i64 %15705 to i32
  %15707 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %15708 = and i32 %275, -1073741824
  %15709 = icmp eq i32 %15708, 1073741824
  br i1 %15709, label %15710, label %15731

15710:                                            ; preds = %15695
  %15711 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %15697, i64 0, i32 2
  %15712 = load i64, i64* %15711, align 8
  %15713 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %15697, i64 0, i32 3
  %15714 = load i64, i64* %15713, align 8
  %15715 = sub i64 %15714, %15712
  %15716 = icmp ult i64 %15715, 72
  br i1 %15716, label %15717, label %15719, !prof !3

15717:                                            ; preds = %15710
  %15718 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %15697, i64 72) #11
  br label %15721

15719:                                            ; preds = %15710
  %15720 = add i64 %15712, 72
  store i64 %15720, i64* %15711, align 8
  br label %15721

15721:                                            ; preds = %15719, %15717
  %15722 = phi i64 [ %15718, %15717 ], [ %15712, %15719 ]
  %15723 = inttoptr i64 %15722 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %15724 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %15723, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %15724, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %15725 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %15723, i64 0, i32 0, i32 0, i32 0
  %15726 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %15723, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %15726, align 8
  %15727 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %15723, i64 0, i32 0, i32 2
  %15728 = bitcast %"class.v8::internal::compiler::Instruction"** %15727 to i64*
  store i64 %15707, i64* %15728, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15725, align 8
  %15729 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %15723, i64 0, i32 1
  store i32 %15706, i32* %15729, align 8
  %15730 = load i32, i32* %274, align 8
  br label %15731

15731:                                            ; preds = %15695, %15721
  %15732 = phi i32 [ %275, %15695 ], [ %15730, %15721 ]
  %15733 = bitcast i64* %221 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15733) #11
  store i64 0, i64* %221, align 8
  %15734 = and i32 %15732, 15872
  %15735 = icmp eq i32 %15734, 0
  br i1 %15735, label %15765, label %15736

15736:                                            ; preds = %15731
  %15737 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %221)
  %15738 = extractvalue { i64, i32 } %15737, 0
  %15739 = extractvalue { i64, i32 } %15737, 1
  %15740 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %15741 = load i64, i64* %221, align 8
  %15742 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %15743 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %15742, i64 0, i32 1
  %15744 = load i32, i32* %15743, align 4
  %15745 = and i32 %15744, 255
  %15746 = zext i32 %15745 to i64
  %15747 = add i64 %15741, %15746
  %15748 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %15742, i64 0, i32 5, i64 %15747, i32 0
  %15749 = load i64, i64* %15748, align 8
  %15750 = ashr i64 %15749, 35
  %15751 = trunc i64 %15750 to i32
  %15752 = add i64 %15747, 1
  %15753 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %15742, i64 0, i32 5, i64 %15752
  %15754 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %15740, %"class.v8::internal::compiler::InstructionOperand"* %15753) #11
  %15755 = extractvalue { i64, i64 } %15754, 1
  %15756 = trunc i64 %15755 to i8
  %15757 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %15698, i64 0, i32 0, i32 0, i32 0
  %15758 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %15759 = and i32 %15758, 32
  %15760 = icmp eq i32 %15759, 0
  br i1 %15760, label %15764, label %15761

15761:                                            ; preds = %15736
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %15757, i8 zeroext 21, i32 %15751, i32 0, i64 %15738, i32 %15739, i32 1, i32 3, i32 0, i32 5) #11
  %15762 = load i8*, i8** %15699, align 8
  %15763 = getelementptr inbounds i8, i8* %15762, i64 1
  store i8* %15763, i8** %15699, align 8
  store i8 %15756, i8* %15762, align 1
  br label %15793

15764:                                            ; preds = %15736
  call void @_ZN2v88internal9Assembler10sse4_instrENS0_7OperandENS0_11XMMRegisterEhhhha(%"class.v8::internal::Assembler"* %15757, i64 %15738, i32 %15739, i32 %15751, i8 zeroext 102, i8 zeroext 15, i8 zeroext 58, i8 zeroext 21, i8 signext %15756) #11
  br label %15793

15765:                                            ; preds = %15731
  %15766 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %15767 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %15768 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %15767, i64 0, i32 5, i64 0, i32 0
  %15769 = load i64, i64* %15768, align 8
  %15770 = ashr i64 %15769, 35
  %15771 = trunc i64 %15770 to i32
  %15772 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %15767, i64 0, i32 1
  %15773 = load i32, i32* %15772, align 4
  %15774 = and i32 %15773, 255
  %15775 = zext i32 %15774 to i64
  %15776 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %15767, i64 0, i32 5, i64 %15775, i32 0
  %15777 = load i64, i64* %15776, align 8
  %15778 = ashr i64 %15777, 35
  %15779 = trunc i64 %15778 to i32
  %15780 = add nuw nsw i64 %15775, 1
  %15781 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %15767, i64 0, i32 5, i64 %15780
  %15782 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %15766, %"class.v8::internal::compiler::InstructionOperand"* %15781) #11
  %15783 = extractvalue { i64, i64 } %15782, 1
  %15784 = trunc i64 %15783 to i8
  %15785 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %15698, i64 0, i32 0, i32 0, i32 0
  %15786 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %15787 = and i32 %15786, 32
  %15788 = icmp eq i32 %15787, 0
  br i1 %15788, label %15792, label %15789

15789:                                            ; preds = %15765
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %15785, i8 zeroext 21, i32 %15779, i32 0, i32 %15771, i32 1, i32 3, i32 0, i32 5) #11
  %15790 = load i8*, i8** %15699, align 8
  %15791 = getelementptr inbounds i8, i8* %15790, i64 1
  store i8* %15791, i8** %15699, align 8
  store i8 %15784, i8* %15790, align 1
  br label %15793

15792:                                            ; preds = %15765
  call void @_ZN2v88internal9Assembler10sse4_instrENS0_8RegisterENS0_11XMMRegisterEhhhha(%"class.v8::internal::Assembler"* %15785, i32 %15771, i32 %15779, i8 zeroext 102, i8 zeroext 15, i8 zeroext 58, i8 zeroext 21, i8 signext %15784) #11
  br label %15793

15793:                                            ; preds = %15792, %15789, %15764, %15761
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15733) #11
  br label %23402

15794:                                            ; preds = %2
  %15795 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %15796 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %15797 = load i64, i64* %15796, align 8
  %15798 = ashr i64 %15797, 35
  %15799 = trunc i64 %15798 to i32
  %15800 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %15801 = load i32, i32* %15800, align 4
  %15802 = and i32 %15801, 255
  %15803 = zext i32 %15802 to i64
  %15804 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15803, i32 0
  %15805 = load i64, i64* %15804, align 8
  %15806 = ashr i64 %15805, 35
  %15807 = trunc i64 %15806 to i32
  %15808 = add nuw nsw i64 %15803, 1
  %15809 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15808
  %15810 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %15795, %"class.v8::internal::compiler::InstructionOperand"* %15809) #11
  %15811 = extractvalue { i64, i64 } %15810, 1
  %15812 = trunc i64 %15811 to i8
  %15813 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %15814 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %15815 = and i32 %15814, 32
  %15816 = icmp eq i32 %15815, 0
  br i1 %15816, label %15821, label %15817

15817:                                            ; preds = %15794
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %15813, i8 zeroext 20, i32 %15807, i32 0, i32 %15799, i32 1, i32 3, i32 0, i32 5) #11
  %15818 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %15819 = load i8*, i8** %15818, align 8
  %15820 = getelementptr inbounds i8, i8* %15819, i64 1
  store i8* %15820, i8** %15818, align 8
  store i8 %15812, i8* %15819, align 1
  br label %15822

15821:                                            ; preds = %15794
  call void @_ZN2v88internal9Assembler10sse4_instrENS0_8RegisterENS0_11XMMRegisterEhhhha(%"class.v8::internal::Assembler"* %15813, i32 %15799, i32 %15807, i8 zeroext 102, i8 zeroext 15, i8 zeroext 58, i8 zeroext 20, i8 signext %15812) #11
  br label %15822

15822:                                            ; preds = %15817, %15821
  call void @_ZN2v88internal9Assembler7movsxblENS0_8RegisterES2_(%"class.v8::internal::Assembler"* %15813, i32 %15799, i32 %15799) #11
  br label %23402

15823:                                            ; preds = %2
  %15824 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %15825 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %15824, align 8
  %15826 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %15827 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %15828 = bitcast i8** %15827 to i64*
  %15829 = load i64, i64* %15828, align 8
  %15830 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %15831 = bitcast i8** %15830 to i64*
  %15832 = load i64, i64* %15831, align 8
  %15833 = sub i64 %15829, %15832
  %15834 = trunc i64 %15833 to i32
  %15835 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %15836 = and i32 %275, -1073741824
  %15837 = icmp eq i32 %15836, 1073741824
  br i1 %15837, label %15838, label %15859

15838:                                            ; preds = %15823
  %15839 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %15825, i64 0, i32 2
  %15840 = load i64, i64* %15839, align 8
  %15841 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %15825, i64 0, i32 3
  %15842 = load i64, i64* %15841, align 8
  %15843 = sub i64 %15842, %15840
  %15844 = icmp ult i64 %15843, 72
  br i1 %15844, label %15845, label %15847, !prof !3

15845:                                            ; preds = %15838
  %15846 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %15825, i64 72) #11
  br label %15849

15847:                                            ; preds = %15838
  %15848 = add i64 %15840, 72
  store i64 %15848, i64* %15839, align 8
  br label %15849

15849:                                            ; preds = %15847, %15845
  %15850 = phi i64 [ %15846, %15845 ], [ %15840, %15847 ]
  %15851 = inttoptr i64 %15850 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %15852 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %15851, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %15852, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %15853 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %15851, i64 0, i32 0, i32 0, i32 0
  %15854 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %15851, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %15854, align 8
  %15855 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %15851, i64 0, i32 0, i32 2
  %15856 = bitcast %"class.v8::internal::compiler::Instruction"** %15855 to i64*
  store i64 %15835, i64* %15856, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15853, align 8
  %15857 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %15851, i64 0, i32 1
  store i32 %15834, i32* %15857, align 8
  %15858 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  br label %15859

15859:                                            ; preds = %15823, %15849
  %15860 = phi %"class.v8::internal::compiler::Instruction"* [ %1, %15823 ], [ %15858, %15849 ]
  %15861 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %15862 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %15860, i64 0, i32 5, i64 0, i32 0
  %15863 = load i64, i64* %15862, align 8
  %15864 = ashr i64 %15863, 35
  %15865 = trunc i64 %15864 to i32
  %15866 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %15860, i64 0, i32 1
  %15867 = load i32, i32* %15866, align 4
  %15868 = and i32 %15867, 255
  %15869 = zext i32 %15868 to i64
  %15870 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %15860, i64 0, i32 5, i64 %15869, i32 0
  %15871 = load i64, i64* %15870, align 8
  %15872 = ashr i64 %15871, 35
  %15873 = trunc i64 %15872 to i32
  %15874 = add nuw nsw i64 %15869, 1
  %15875 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %15860, i64 0, i32 5, i64 %15874
  %15876 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %15861, %"class.v8::internal::compiler::InstructionOperand"* %15875) #11
  %15877 = extractvalue { i64, i64 } %15876, 1
  %15878 = trunc i64 %15877 to i8
  %15879 = load i32, i32* %274, align 8
  %15880 = and i32 %15879, 15872
  %15881 = icmp eq i32 %15880, 0
  br i1 %15881, label %15887, label %15882

15882:                                            ; preds = %15859
  %15883 = bitcast i64* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15883)
  store i64 2, i64* %25, align 8
  %15884 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15883)
  %15885 = extractvalue { i64, i32 } %15884, 0
  %15886 = extractvalue { i64, i32 } %15884, 1
  call void @_ZN2v88internal14TurboAssembler6PinsrbENS0_11XMMRegisterES2_NS0_7OperandEh(%"class.v8::internal::TurboAssembler"* %15826, i32 %15865, i32 %15873, i64 %15885, i32 %15886, i8 zeroext %15878) #11
  br label %23402

15887:                                            ; preds = %15859
  %15888 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %15889 = load i32, i32* %15888, align 4
  %15890 = and i32 %15889, 255
  %15891 = add nuw nsw i32 %15890, 2
  %15892 = zext i32 %15891 to i64
  %15893 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15892, i32 0
  %15894 = load i64, i64* %15893, align 8
  %15895 = and i64 %15894, 7
  %15896 = icmp ugt i64 %15895, 4
  %15897 = and i64 %15894, 24
  %15898 = icmp eq i64 %15897, 0
  %15899 = and i1 %15896, %15898
  br i1 %15899, label %15900, label %15916

15900:                                            ; preds = %15887
  %15901 = lshr i64 %15894, 5
  %15902 = trunc i64 %15901 to i8
  %15903 = icmp ugt i8 %15902, 11
  %15904 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %15905 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %15904, i64 0, i32 1
  %15906 = load i32, i32* %15905, align 4
  %15907 = and i32 %15906, 255
  %15908 = add nuw nsw i32 %15907, 2
  %15909 = zext i32 %15908 to i64
  %15910 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %15904, i64 0, i32 5, i64 %15909, i32 0
  %15911 = load i64, i64* %15910, align 8
  %15912 = ashr i64 %15911, 35
  %15913 = trunc i64 %15912 to i32
  br i1 %15903, label %15914, label %15915

15914:                                            ; preds = %15900
  call void @_ZN2v88internal14TurboAssembler4MovqENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::TurboAssembler"* %15826, i32 10, i32 %15913) #11
  call void @_ZN2v88internal14TurboAssembler6PinsrbENS0_11XMMRegisterES2_NS0_8RegisterEh(%"class.v8::internal::TurboAssembler"* %15826, i32 %15865, i32 %15873, i32 10, i8 zeroext %15878) #11
  br label %23402

15915:                                            ; preds = %15900
  call void @_ZN2v88internal14TurboAssembler6PinsrbENS0_11XMMRegisterES2_NS0_8RegisterEh(%"class.v8::internal::TurboAssembler"* %15826, i32 %15865, i32 %15873, i32 %15913, i8 zeroext %15878) #11
  br label %23402

15916:                                            ; preds = %15887
  %15917 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %15918 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %15917, i64 0, i32 1
  %15919 = load i32, i32* %15918, align 4
  %15920 = and i32 %15919, 255
  %15921 = add nuw nsw i32 %15920, 2
  %15922 = zext i32 %15921 to i64
  %15923 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %15917, i64 0, i32 5, i64 %15922, i32 0
  %15924 = load i64, i64* %15923, align 8
  %15925 = ashr i64 %15924, 35
  %15926 = trunc i64 %15925 to i32
  %15927 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %15926, i32 0) #11
  %15928 = extractvalue { i64, i32 } %15927, 0
  %15929 = extractvalue { i64, i32 } %15927, 1
  call void @_ZN2v88internal14TurboAssembler6PinsrbENS0_11XMMRegisterES2_NS0_7OperandEh(%"class.v8::internal::TurboAssembler"* %15826, i32 %15865, i32 %15873, i64 %15928, i32 %15929, i8 zeroext %15878) #11
  br label %23402

15930:                                            ; preds = %2
  %15931 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %15932 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %15931, align 8
  %15933 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %15934 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %15935 = bitcast i8** %15934 to i64*
  %15936 = load i64, i64* %15935, align 8
  %15937 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %15938 = bitcast i8** %15937 to i64*
  %15939 = load i64, i64* %15938, align 8
  %15940 = sub i64 %15936, %15939
  %15941 = trunc i64 %15940 to i32
  %15942 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %15943 = and i32 %275, -1073741824
  %15944 = icmp eq i32 %15943, 1073741824
  br i1 %15944, label %15945, label %15966

15945:                                            ; preds = %15930
  %15946 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %15932, i64 0, i32 2
  %15947 = load i64, i64* %15946, align 8
  %15948 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %15932, i64 0, i32 3
  %15949 = load i64, i64* %15948, align 8
  %15950 = sub i64 %15949, %15947
  %15951 = icmp ult i64 %15950, 72
  br i1 %15951, label %15952, label %15954, !prof !3

15952:                                            ; preds = %15945
  %15953 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %15932, i64 72) #11
  br label %15956

15954:                                            ; preds = %15945
  %15955 = add i64 %15947, 72
  store i64 %15955, i64* %15946, align 8
  br label %15956

15956:                                            ; preds = %15954, %15952
  %15957 = phi i64 [ %15953, %15952 ], [ %15947, %15954 ]
  %15958 = inttoptr i64 %15957 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %15959 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %15958, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %15959, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %15960 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %15958, i64 0, i32 0, i32 0, i32 0
  %15961 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %15958, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %15961, align 8
  %15962 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %15958, i64 0, i32 0, i32 2
  %15963 = bitcast %"class.v8::internal::compiler::Instruction"** %15962 to i64*
  store i64 %15942, i64* %15963, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15960, align 8
  %15964 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %15958, i64 0, i32 1
  store i32 %15941, i32* %15964, align 8
  %15965 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  br label %15966

15966:                                            ; preds = %15930, %15956
  %15967 = phi %"class.v8::internal::compiler::Instruction"* [ %1, %15930 ], [ %15965, %15956 ]
  %15968 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %15969 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %15967, i64 0, i32 5, i64 0, i32 0
  %15970 = load i64, i64* %15969, align 8
  %15971 = ashr i64 %15970, 35
  %15972 = trunc i64 %15971 to i32
  %15973 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %15967, i64 0, i32 1
  %15974 = load i32, i32* %15973, align 4
  %15975 = and i32 %15974, 255
  %15976 = zext i32 %15975 to i64
  %15977 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %15967, i64 0, i32 5, i64 %15976, i32 0
  %15978 = load i64, i64* %15977, align 8
  %15979 = ashr i64 %15978, 35
  %15980 = trunc i64 %15979 to i32
  %15981 = add nuw nsw i64 %15976, 1
  %15982 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %15967, i64 0, i32 5, i64 %15981
  %15983 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %15968, %"class.v8::internal::compiler::InstructionOperand"* %15982) #11
  %15984 = extractvalue { i64, i64 } %15983, 1
  %15985 = trunc i64 %15984 to i8
  %15986 = load i32, i32* %274, align 8
  %15987 = and i32 %15986, 15872
  %15988 = icmp eq i32 %15987, 0
  br i1 %15988, label %15994, label %15989

15989:                                            ; preds = %15966
  %15990 = bitcast i64* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15990)
  store i64 2, i64* %26, align 8
  %15991 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %26) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15990)
  %15992 = extractvalue { i64, i32 } %15991, 0
  %15993 = extractvalue { i64, i32 } %15991, 1
  call void @_ZN2v88internal14TurboAssembler6PinsrwENS0_11XMMRegisterES2_NS0_7OperandEh(%"class.v8::internal::TurboAssembler"* %15933, i32 %15972, i32 %15980, i64 %15992, i32 %15993, i8 zeroext %15985) #11
  br label %23402

15994:                                            ; preds = %15966
  %15995 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %15996 = load i32, i32* %15995, align 4
  %15997 = and i32 %15996, 255
  %15998 = add nuw nsw i32 %15997, 2
  %15999 = zext i32 %15998 to i64
  %16000 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %15999, i32 0
  %16001 = load i64, i64* %16000, align 8
  %16002 = and i64 %16001, 7
  %16003 = icmp ugt i64 %16002, 4
  %16004 = and i64 %16001, 24
  %16005 = icmp eq i64 %16004, 0
  %16006 = and i1 %16003, %16005
  br i1 %16006, label %16007, label %16023

16007:                                            ; preds = %15994
  %16008 = lshr i64 %16001, 5
  %16009 = trunc i64 %16008 to i8
  %16010 = icmp ugt i8 %16009, 11
  %16011 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %16012 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %16011, i64 0, i32 1
  %16013 = load i32, i32* %16012, align 4
  %16014 = and i32 %16013, 255
  %16015 = add nuw nsw i32 %16014, 2
  %16016 = zext i32 %16015 to i64
  %16017 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %16011, i64 0, i32 5, i64 %16016, i32 0
  %16018 = load i64, i64* %16017, align 8
  %16019 = ashr i64 %16018, 35
  %16020 = trunc i64 %16019 to i32
  br i1 %16010, label %16021, label %16022

16021:                                            ; preds = %16007
  call void @_ZN2v88internal14TurboAssembler4MovqENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::TurboAssembler"* %15933, i32 10, i32 %16020) #11
  call void @_ZN2v88internal14TurboAssembler6PinsrwENS0_11XMMRegisterES2_NS0_8RegisterEh(%"class.v8::internal::TurboAssembler"* %15933, i32 %15972, i32 %15980, i32 10, i8 zeroext %15985) #11
  br label %23402

16022:                                            ; preds = %16007
  call void @_ZN2v88internal14TurboAssembler6PinsrwENS0_11XMMRegisterES2_NS0_8RegisterEh(%"class.v8::internal::TurboAssembler"* %15933, i32 %15972, i32 %15980, i32 %16020, i8 zeroext %15985) #11
  br label %23402

16023:                                            ; preds = %15994
  %16024 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %16025 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %16024, i64 0, i32 1
  %16026 = load i32, i32* %16025, align 4
  %16027 = and i32 %16026, 255
  %16028 = add nuw nsw i32 %16027, 2
  %16029 = zext i32 %16028 to i64
  %16030 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %16024, i64 0, i32 5, i64 %16029, i32 0
  %16031 = load i64, i64* %16030, align 8
  %16032 = ashr i64 %16031, 35
  %16033 = trunc i64 %16032 to i32
  %16034 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %16033, i32 0) #11
  %16035 = extractvalue { i64, i32 } %16034, 0
  %16036 = extractvalue { i64, i32 } %16034, 1
  call void @_ZN2v88internal14TurboAssembler6PinsrwENS0_11XMMRegisterES2_NS0_7OperandEh(%"class.v8::internal::TurboAssembler"* %15933, i32 %15972, i32 %15980, i64 %16035, i32 %16036, i8 zeroext %15985) #11
  br label %23402

16037:                                            ; preds = %2
  %16038 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %16039 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %16038, align 8
  %16040 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %16041 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %16042 = bitcast i8** %16041 to i64*
  %16043 = load i64, i64* %16042, align 8
  %16044 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %16045 = bitcast i8** %16044 to i64*
  %16046 = load i64, i64* %16045, align 8
  %16047 = sub i64 %16043, %16046
  %16048 = trunc i64 %16047 to i32
  %16049 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %16050 = and i32 %275, -1073741824
  %16051 = icmp eq i32 %16050, 1073741824
  br i1 %16051, label %16052, label %16073

16052:                                            ; preds = %16037
  %16053 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %16039, i64 0, i32 2
  %16054 = load i64, i64* %16053, align 8
  %16055 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %16039, i64 0, i32 3
  %16056 = load i64, i64* %16055, align 8
  %16057 = sub i64 %16056, %16054
  %16058 = icmp ult i64 %16057, 72
  br i1 %16058, label %16059, label %16061, !prof !3

16059:                                            ; preds = %16052
  %16060 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %16039, i64 72) #11
  br label %16063

16061:                                            ; preds = %16052
  %16062 = add i64 %16054, 72
  store i64 %16062, i64* %16053, align 8
  br label %16063

16063:                                            ; preds = %16061, %16059
  %16064 = phi i64 [ %16060, %16059 ], [ %16054, %16061 ]
  %16065 = inttoptr i64 %16064 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %16066 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %16065, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %16066, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %16067 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %16065, i64 0, i32 0, i32 0, i32 0
  %16068 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %16065, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %16068, align 8
  %16069 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %16065, i64 0, i32 0, i32 2
  %16070 = bitcast %"class.v8::internal::compiler::Instruction"** %16069 to i64*
  store i64 %16049, i64* %16070, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16067, align 8
  %16071 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %16065, i64 0, i32 1
  store i32 %16048, i32* %16071, align 8
  %16072 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  br label %16073

16073:                                            ; preds = %16037, %16063
  %16074 = phi %"class.v8::internal::compiler::Instruction"* [ %1, %16037 ], [ %16072, %16063 ]
  %16075 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %16076 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %16074, i64 0, i32 5, i64 0, i32 0
  %16077 = load i64, i64* %16076, align 8
  %16078 = ashr i64 %16077, 35
  %16079 = trunc i64 %16078 to i32
  %16080 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %16074, i64 0, i32 1
  %16081 = load i32, i32* %16080, align 4
  %16082 = and i32 %16081, 255
  %16083 = zext i32 %16082 to i64
  %16084 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %16074, i64 0, i32 5, i64 %16083, i32 0
  %16085 = load i64, i64* %16084, align 8
  %16086 = ashr i64 %16085, 35
  %16087 = trunc i64 %16086 to i32
  %16088 = add nuw nsw i64 %16083, 1
  %16089 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %16074, i64 0, i32 5, i64 %16088
  %16090 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %16075, %"class.v8::internal::compiler::InstructionOperand"* %16089) #11
  %16091 = extractvalue { i64, i64 } %16090, 1
  %16092 = trunc i64 %16091 to i8
  %16093 = load i32, i32* %274, align 8
  %16094 = and i32 %16093, 15872
  %16095 = icmp eq i32 %16094, 0
  br i1 %16095, label %16101, label %16096

16096:                                            ; preds = %16073
  %16097 = bitcast i64* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16097)
  store i64 2, i64* %27, align 8
  %16098 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %27) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16097)
  %16099 = extractvalue { i64, i32 } %16098, 0
  %16100 = extractvalue { i64, i32 } %16098, 1
  call void @_ZN2v88internal14TurboAssembler6PinsrdENS0_11XMMRegisterES2_NS0_7OperandEh(%"class.v8::internal::TurboAssembler"* %16040, i32 %16079, i32 %16087, i64 %16099, i32 %16100, i8 zeroext %16092) #11
  br label %23402

16101:                                            ; preds = %16073
  %16102 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %16103 = load i32, i32* %16102, align 4
  %16104 = and i32 %16103, 255
  %16105 = add nuw nsw i32 %16104, 2
  %16106 = zext i32 %16105 to i64
  %16107 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16106, i32 0
  %16108 = load i64, i64* %16107, align 8
  %16109 = and i64 %16108, 7
  %16110 = icmp ugt i64 %16109, 4
  %16111 = and i64 %16108, 24
  %16112 = icmp eq i64 %16111, 0
  %16113 = and i1 %16110, %16112
  br i1 %16113, label %16114, label %16130

16114:                                            ; preds = %16101
  %16115 = lshr i64 %16108, 5
  %16116 = trunc i64 %16115 to i8
  %16117 = icmp ugt i8 %16116, 11
  %16118 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %16119 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %16118, i64 0, i32 1
  %16120 = load i32, i32* %16119, align 4
  %16121 = and i32 %16120, 255
  %16122 = add nuw nsw i32 %16121, 2
  %16123 = zext i32 %16122 to i64
  %16124 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %16118, i64 0, i32 5, i64 %16123, i32 0
  %16125 = load i64, i64* %16124, align 8
  %16126 = ashr i64 %16125, 35
  %16127 = trunc i64 %16126 to i32
  br i1 %16117, label %16128, label %16129

16128:                                            ; preds = %16114
  call void @_ZN2v88internal14TurboAssembler4MovqENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::TurboAssembler"* %16040, i32 10, i32 %16127) #11
  call void @_ZN2v88internal14TurboAssembler6PinsrdENS0_11XMMRegisterES2_NS0_8RegisterEh(%"class.v8::internal::TurboAssembler"* %16040, i32 %16079, i32 %16087, i32 10, i8 zeroext %16092) #11
  br label %23402

16129:                                            ; preds = %16114
  call void @_ZN2v88internal14TurboAssembler6PinsrdENS0_11XMMRegisterES2_NS0_8RegisterEh(%"class.v8::internal::TurboAssembler"* %16040, i32 %16079, i32 %16087, i32 %16127, i8 zeroext %16092) #11
  br label %23402

16130:                                            ; preds = %16101
  %16131 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %16132 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %16131, i64 0, i32 1
  %16133 = load i32, i32* %16132, align 4
  %16134 = and i32 %16133, 255
  %16135 = add nuw nsw i32 %16134, 2
  %16136 = zext i32 %16135 to i64
  %16137 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %16131, i64 0, i32 5, i64 %16136, i32 0
  %16138 = load i64, i64* %16137, align 8
  %16139 = ashr i64 %16138, 35
  %16140 = trunc i64 %16139 to i32
  %16141 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %16140, i32 0) #11
  %16142 = extractvalue { i64, i32 } %16141, 0
  %16143 = extractvalue { i64, i32 } %16141, 1
  call void @_ZN2v88internal14TurboAssembler6PinsrdENS0_11XMMRegisterES2_NS0_7OperandEh(%"class.v8::internal::TurboAssembler"* %16040, i32 %16079, i32 %16087, i64 %16142, i32 %16143, i8 zeroext %16092) #11
  br label %23402

16144:                                            ; preds = %2
  %16145 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %16146 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %16145, align 8
  %16147 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %16148 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %16149 = bitcast i8** %16148 to i64*
  %16150 = load i64, i64* %16149, align 8
  %16151 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %16152 = bitcast i8** %16151 to i64*
  %16153 = load i64, i64* %16152, align 8
  %16154 = sub i64 %16150, %16153
  %16155 = trunc i64 %16154 to i32
  %16156 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %16157 = and i32 %275, -1073741824
  %16158 = icmp eq i32 %16157, 1073741824
  br i1 %16158, label %16159, label %16180

16159:                                            ; preds = %16144
  %16160 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %16146, i64 0, i32 2
  %16161 = load i64, i64* %16160, align 8
  %16162 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %16146, i64 0, i32 3
  %16163 = load i64, i64* %16162, align 8
  %16164 = sub i64 %16163, %16161
  %16165 = icmp ult i64 %16164, 72
  br i1 %16165, label %16166, label %16168, !prof !3

16166:                                            ; preds = %16159
  %16167 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %16146, i64 72) #11
  br label %16170

16168:                                            ; preds = %16159
  %16169 = add i64 %16161, 72
  store i64 %16169, i64* %16160, align 8
  br label %16170

16170:                                            ; preds = %16168, %16166
  %16171 = phi i64 [ %16167, %16166 ], [ %16161, %16168 ]
  %16172 = inttoptr i64 %16171 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %16173 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %16172, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %16173, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %16174 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %16172, i64 0, i32 0, i32 0, i32 0
  %16175 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %16172, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %16175, align 8
  %16176 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %16172, i64 0, i32 0, i32 2
  %16177 = bitcast %"class.v8::internal::compiler::Instruction"** %16176 to i64*
  store i64 %16156, i64* %16177, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16174, align 8
  %16178 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %16172, i64 0, i32 1
  store i32 %16155, i32* %16178, align 8
  %16179 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  br label %16180

16180:                                            ; preds = %16144, %16170
  %16181 = phi %"class.v8::internal::compiler::Instruction"* [ %1, %16144 ], [ %16179, %16170 ]
  %16182 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %16183 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %16181, i64 0, i32 5, i64 0, i32 0
  %16184 = load i64, i64* %16183, align 8
  %16185 = ashr i64 %16184, 35
  %16186 = trunc i64 %16185 to i32
  %16187 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %16181, i64 0, i32 1
  %16188 = load i32, i32* %16187, align 4
  %16189 = and i32 %16188, 255
  %16190 = zext i32 %16189 to i64
  %16191 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %16181, i64 0, i32 5, i64 %16190, i32 0
  %16192 = load i64, i64* %16191, align 8
  %16193 = ashr i64 %16192, 35
  %16194 = trunc i64 %16193 to i32
  %16195 = add nuw nsw i64 %16190, 1
  %16196 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %16181, i64 0, i32 5, i64 %16195
  %16197 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %16182, %"class.v8::internal::compiler::InstructionOperand"* %16196) #11
  %16198 = extractvalue { i64, i64 } %16197, 1
  %16199 = trunc i64 %16198 to i8
  %16200 = load i32, i32* %274, align 8
  %16201 = and i32 %16200, 15872
  %16202 = icmp eq i32 %16201, 0
  br i1 %16202, label %16208, label %16203

16203:                                            ; preds = %16180
  %16204 = bitcast i64* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16204)
  store i64 2, i64* %28, align 8
  %16205 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16204)
  %16206 = extractvalue { i64, i32 } %16205, 0
  %16207 = extractvalue { i64, i32 } %16205, 1
  call void @_ZN2v88internal14TurboAssembler6PinsrqENS0_11XMMRegisterES2_NS0_7OperandEh(%"class.v8::internal::TurboAssembler"* %16147, i32 %16186, i32 %16194, i64 %16206, i32 %16207, i8 zeroext %16199) #11
  br label %23402

16208:                                            ; preds = %16180
  %16209 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %16210 = load i32, i32* %16209, align 4
  %16211 = and i32 %16210, 255
  %16212 = add nuw nsw i32 %16211, 2
  %16213 = zext i32 %16212 to i64
  %16214 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16213, i32 0
  %16215 = load i64, i64* %16214, align 8
  %16216 = and i64 %16215, 7
  %16217 = icmp ugt i64 %16216, 4
  %16218 = and i64 %16215, 24
  %16219 = icmp eq i64 %16218, 0
  %16220 = and i1 %16217, %16219
  br i1 %16220, label %16221, label %16237

16221:                                            ; preds = %16208
  %16222 = lshr i64 %16215, 5
  %16223 = trunc i64 %16222 to i8
  %16224 = icmp ugt i8 %16223, 11
  %16225 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %16226 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %16225, i64 0, i32 1
  %16227 = load i32, i32* %16226, align 4
  %16228 = and i32 %16227, 255
  %16229 = add nuw nsw i32 %16228, 2
  %16230 = zext i32 %16229 to i64
  %16231 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %16225, i64 0, i32 5, i64 %16230, i32 0
  %16232 = load i64, i64* %16231, align 8
  %16233 = ashr i64 %16232, 35
  %16234 = trunc i64 %16233 to i32
  br i1 %16224, label %16235, label %16236

16235:                                            ; preds = %16221
  call void @_ZN2v88internal14TurboAssembler4MovqENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::TurboAssembler"* %16147, i32 10, i32 %16234) #11
  call void @_ZN2v88internal14TurboAssembler6PinsrqENS0_11XMMRegisterES2_NS0_8RegisterEh(%"class.v8::internal::TurboAssembler"* %16147, i32 %16186, i32 %16194, i32 10, i8 zeroext %16199) #11
  br label %23402

16236:                                            ; preds = %16221
  call void @_ZN2v88internal14TurboAssembler6PinsrqENS0_11XMMRegisterES2_NS0_8RegisterEh(%"class.v8::internal::TurboAssembler"* %16147, i32 %16186, i32 %16194, i32 %16234, i8 zeroext %16199) #11
  br label %23402

16237:                                            ; preds = %16208
  %16238 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %16239 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %16238, i64 0, i32 1
  %16240 = load i32, i32* %16239, align 4
  %16241 = and i32 %16240, 255
  %16242 = add nuw nsw i32 %16241, 2
  %16243 = zext i32 %16242 to i64
  %16244 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %16238, i64 0, i32 5, i64 %16243, i32 0
  %16245 = load i64, i64* %16244, align 8
  %16246 = ashr i64 %16245, 35
  %16247 = trunc i64 %16246 to i32
  %16248 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %16247, i32 0) #11
  %16249 = extractvalue { i64, i32 } %16248, 0
  %16250 = extractvalue { i64, i32 } %16248, 1
  call void @_ZN2v88internal14TurboAssembler6PinsrqENS0_11XMMRegisterES2_NS0_7OperandEh(%"class.v8::internal::TurboAssembler"* %16147, i32 %16186, i32 %16194, i64 %16249, i32 %16250, i8 zeroext %16199) #11
  br label %23402

16251:                                            ; preds = %2
  %16252 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16253 = and i32 %16252, 32
  %16254 = icmp eq i32 %16253, 0
  %16255 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %16256 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %16257 = load i64, i64* %16256, align 8
  %16258 = ashr i64 %16257, 35
  %16259 = trunc i64 %16258 to i32
  %16260 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %16261 = load i32, i32* %16260, align 4
  %16262 = and i32 %16261, 255
  %16263 = zext i32 %16262 to i64
  br i1 %16254, label %16274, label %16264

16264:                                            ; preds = %16251
  %16265 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16263, i32 0
  %16266 = load i64, i64* %16265, align 8
  %16267 = ashr i64 %16266, 35
  %16268 = trunc i64 %16267 to i32
  %16269 = add nuw nsw i64 %16263, 1
  %16270 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16269, i32 0
  %16271 = load i64, i64* %16270, align 8
  %16272 = ashr i64 %16271, 35
  %16273 = trunc i64 %16272 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16255, i8 zeroext 99, i32 %16259, i32 %16268, i32 %16273, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

16274:                                            ; preds = %16251
  %16275 = add nuw nsw i64 %16263, 1
  %16276 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16275, i32 0
  %16277 = load i64, i64* %16276, align 8
  %16278 = ashr i64 %16277, 35
  %16279 = trunc i64 %16278 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16255, i32 %16259, i32 %16279, i8 zeroext 102, i8 zeroext 15, i8 zeroext 99) #11
  br label %23402

16280:                                            ; preds = %2
  %16281 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %16282 = load i64, i64* %16281, align 8
  %16283 = ashr i64 %16282, 35
  %16284 = trunc i64 %16283 to i32
  %16285 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %16286 = load i32, i32* %16285, align 4
  %16287 = and i32 %16286, 255
  %16288 = zext i32 %16287 to i64
  %16289 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16288, i32 0
  %16290 = load i64, i64* %16289, align 8
  %16291 = ashr i64 %16290, 35
  %16292 = trunc i64 %16291 to i32
  %16293 = icmp eq i32 %16284, %16292
  %16294 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %16295 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16296 = and i32 %16295, 32
  %16297 = icmp eq i32 %16296, 0
  br i1 %16293, label %16298, label %16307

16298:                                            ; preds = %16280
  br i1 %16297, label %16300, label %16299

16299:                                            ; preds = %16298
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16294, i8 zeroext 118, i32 15, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %16301

16300:                                            ; preds = %16298
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16294, i32 15, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 118) #11
  br label %16301

16301:                                            ; preds = %16299, %16300
  %16302 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16303 = and i32 %16302, 32
  %16304 = icmp eq i32 %16303, 0
  br i1 %16304, label %16306, label %16305

16305:                                            ; preds = %16301
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16294, i8 zeroext 8, i32 %16284, i32 %16284, i32 15, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

16306:                                            ; preds = %16301
  tail call void @_ZN2v88internal9Assembler11ssse3_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %16294, i32 %16284, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 8) #11
  br label %23402

16307:                                            ; preds = %16280
  br i1 %16297, label %16309, label %16308

16308:                                            ; preds = %16307
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16294, i8 zeroext -17, i32 %16284, i32 %16284, i32 %16284, i32 1, i32 1, i32 0, i32 5) #11
  br label %16310

16309:                                            ; preds = %16307
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16294, i32 %16284, i32 %16284, i8 zeroext 102, i8 zeroext 15, i8 zeroext -17) #11
  br label %16310

16310:                                            ; preds = %16308, %16309
  %16311 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16312 = and i32 %16311, 32
  %16313 = icmp eq i32 %16312, 0
  br i1 %16313, label %16315, label %16314

16314:                                            ; preds = %16310
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16294, i8 zeroext -8, i32 %16284, i32 %16284, i32 %16292, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

16315:                                            ; preds = %16310
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16294, i32 %16284, i32 %16292, i8 zeroext 102, i8 zeroext 15, i8 zeroext -8) #11
  br label %23402

16316:                                            ; preds = %2
  %16317 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %16318 = load i64, i64* %16317, align 8
  %16319 = ashr i64 %16318, 35
  %16320 = trunc i64 %16319 to i32
  %16321 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %16322 = load i32, i32* %16321, align 4
  %16323 = and i32 %16322, 255
  %16324 = lshr i32 %16322, 8
  %16325 = and i32 %16324, 65535
  %16326 = add nuw nsw i32 %16325, %16323
  %16327 = zext i32 %16326 to i64
  %16328 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16327, i32 0
  %16329 = load i64, i64* %16328, align 8
  %16330 = ashr i64 %16329, 35
  %16331 = trunc i64 %16330 to i32
  %16332 = add nuw nsw i32 %16323, 1
  %16333 = add nuw nsw i32 %16332, %16325
  %16334 = zext i32 %16333 to i64
  %16335 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16334, i32 0
  %16336 = load i64, i64* %16335, align 8
  %16337 = ashr i64 %16336, 35
  %16338 = trunc i64 %16337 to i32
  %16339 = zext i32 %16332 to i64
  %16340 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16339, i32 0
  %16341 = load i64, i64* %16340, align 8
  %16342 = and i64 %16341, 7
  %16343 = icmp eq i64 %16342, 3
  br i1 %16343, label %16344, label %16391

16344:                                            ; preds = %16316
  %16345 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %16346 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16339
  %16347 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %16345, %"class.v8::internal::compiler::InstructionOperand"* %16346) #11
  %16348 = extractvalue { i64, i64 } %16347, 1
  %16349 = trunc i64 %16348 to i8
  %16350 = and i8 %16349, 7
  %16351 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %16352 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16353 = and i32 %16352, 32
  %16354 = icmp eq i32 %16353, 0
  br i1 %16354, label %16356, label %16355

16355:                                            ; preds = %16344
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16351, i8 zeroext 113, i32 6, i32 %16320, i32 %16320, i32 1, i32 1, i32 0, i32 5) #11
  br label %16357

16356:                                            ; preds = %16344
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16351, i32 6, i32 %16320, i8 zeroext 102, i8 zeroext 15, i8 zeroext 113) #11
  br label %16357

16357:                                            ; preds = %16355, %16356
  %16358 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %16359 = load i8*, i8** %16358, align 8
  %16360 = getelementptr inbounds i8, i8* %16359, i64 1
  store i8* %16360, i8** %16358, align 8
  store i8 %16350, i8* %16359, align 1
  %16361 = zext i8 %16350 to i32
  %16362 = shl i32 255, %16361
  %16363 = and i32 %16362, 255
  %16364 = shl i32 %16362, 24
  %16365 = shl nuw nsw i32 %16363, 16
  %16366 = shl nuw nsw i32 %16363, 8
  %16367 = or i32 %16363, %16364
  %16368 = or i32 %16367, %16365
  %16369 = or i32 %16368, %16366
  %16370 = zext i32 %16369 to i64
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %16351, i32 %16331, i64 %16370, i32 4) #11
  %16371 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16372 = and i32 %16371, 32
  %16373 = icmp eq i32 %16372, 0
  br i1 %16373, label %16375, label %16374

16374:                                            ; preds = %16357
  call void @_ZN2v88internal9Assembler5vmovdENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::Assembler"* %16351, i32 %16338, i32 %16331) #11
  br label %16376

16375:                                            ; preds = %16357
  call void @_ZN2v88internal9Assembler4movdENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::Assembler"* %16351, i32 %16338, i32 %16331) #11
  br label %16376

16376:                                            ; preds = %16374, %16375
  %16377 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16378 = and i32 %16377, 32
  %16379 = icmp eq i32 %16378, 0
  br i1 %16379, label %16384, label %16380

16380:                                            ; preds = %16376
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16351, i8 zeroext 112, i32 %16338, i32 0, i32 %16338, i32 1, i32 1, i32 0, i32 5) #11
  %16381 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %16382 = load i8*, i8** %16381, align 8
  %16383 = getelementptr inbounds i8, i8* %16382, i64 1
  store i8* %16383, i8** %16381, align 8
  store i8 0, i8* %16382, align 1
  br label %16385

16384:                                            ; preds = %16376
  call void @_ZN2v88internal9Assembler6pshufdENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %16351, i32 %16338, i32 %16338, i8 zeroext 0) #11
  br label %16385

16385:                                            ; preds = %16380, %16384
  %16386 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16387 = and i32 %16386, 32
  %16388 = icmp eq i32 %16387, 0
  br i1 %16388, label %16390, label %16389

16389:                                            ; preds = %16385
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16351, i8 zeroext -37, i32 %16320, i32 %16320, i32 %16338, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

16390:                                            ; preds = %16385
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16351, i32 %16320, i32 %16338, i8 zeroext 102, i8 zeroext 15, i8 zeroext -37) #11
  br label %23402

16391:                                            ; preds = %16316
  %16392 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %16393 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %16392, i64 0, i32 0, i32 0, i32 0
  %16394 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16395 = and i32 %16394, 32
  %16396 = icmp eq i32 %16395, 0
  br i1 %16396, label %16398, label %16397

16397:                                            ; preds = %16391
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16393, i8 zeroext 117, i32 15, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %16399

16398:                                            ; preds = %16391
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16393, i32 15, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 117) #11
  br label %16399

16399:                                            ; preds = %16397, %16398
  %16400 = load i32, i32* %16321, align 4
  %16401 = and i32 %16400, 255
  %16402 = add nuw nsw i32 %16401, 1
  %16403 = zext i32 %16402 to i64
  %16404 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16403, i32 0
  %16405 = load i64, i64* %16404, align 8
  %16406 = ashr i64 %16405, 35
  %16407 = trunc i64 %16406 to i32
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %16393, i32 %16331, i32 %16407, i32 8) #11
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %16393, i8 zeroext 4, i32 %16331, i64 7, i32 8) #11
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %16393, i8 zeroext 0, i32 %16331, i64 8, i32 8) #11
  tail call void @_ZN2v88internal14TurboAssembler4MovqENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %16392, i32 %16338, i32 %16331) #11
  %16408 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16409 = and i32 %16408, 32
  %16410 = icmp eq i32 %16409, 0
  br i1 %16410, label %16412, label %16411

16411:                                            ; preds = %16399
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16393, i8 zeroext -47, i32 15, i32 15, i32 %16338, i32 1, i32 1, i32 0, i32 5) #11
  br label %16413

16412:                                            ; preds = %16399
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16393, i32 15, i32 %16338, i8 zeroext 102, i8 zeroext 15, i8 zeroext -47) #11
  br label %16413

16413:                                            ; preds = %16411, %16412
  %16414 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16415 = and i32 %16414, 32
  %16416 = icmp eq i32 %16415, 0
  br i1 %16416, label %16418, label %16417

16417:                                            ; preds = %16413
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16393, i8 zeroext 103, i32 15, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %16419

16418:                                            ; preds = %16413
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16393, i32 15, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 103) #11
  br label %16419

16419:                                            ; preds = %16417, %16418
  %16420 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16421 = and i32 %16420, 32
  %16422 = icmp eq i32 %16421, 0
  br i1 %16422, label %16424, label %16423

16423:                                            ; preds = %16419
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16393, i8 zeroext -37, i32 %16320, i32 %16320, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %16425

16424:                                            ; preds = %16419
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16393, i32 %16320, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -37) #11
  br label %16425

16425:                                            ; preds = %16423, %16424
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %16393, i8 zeroext 5, i32 %16331, i64 8, i32 8) #11
  tail call void @_ZN2v88internal14TurboAssembler4MovqENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %16392, i32 %16338, i32 %16331) #11
  %16426 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16427 = and i32 %16426, 32
  %16428 = icmp eq i32 %16427, 0
  br i1 %16428, label %16430, label %16429

16429:                                            ; preds = %16425
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16393, i8 zeroext -15, i32 %16320, i32 %16320, i32 %16338, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

16430:                                            ; preds = %16425
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16393, i32 %16320, i32 %16338, i8 zeroext 102, i8 zeroext 15, i8 zeroext -15) #11
  br label %23402

16431:                                            ; preds = %2
  %16432 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %16433 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %16434 = load i64, i64* %16433, align 8
  %16435 = ashr i64 %16434, 35
  %16436 = trunc i64 %16435 to i32
  %16437 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %16438 = load i32, i32* %16437, align 4
  %16439 = and i32 %16438, 255
  %16440 = add nuw nsw i32 %16439, 1
  %16441 = zext i32 %16440 to i64
  %16442 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16441, i32 0
  %16443 = load i64, i64* %16442, align 8
  %16444 = and i64 %16443, 7
  %16445 = icmp eq i64 %16444, 3
  br i1 %16445, label %16446, label %16493

16446:                                            ; preds = %16431
  %16447 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %16448 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16449 = and i32 %16448, 32
  %16450 = icmp eq i32 %16449, 0
  br i1 %16450, label %16452, label %16451

16451:                                            ; preds = %16446
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16447, i8 zeroext 104, i32 15, i32 15, i32 %16436, i32 1, i32 1, i32 0, i32 5) #11
  br label %16453

16452:                                            ; preds = %16446
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16447, i32 15, i32 %16436, i8 zeroext 102, i8 zeroext 15, i8 zeroext 104) #11
  br label %16453

16453:                                            ; preds = %16451, %16452
  %16454 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16455 = and i32 %16454, 32
  %16456 = icmp eq i32 %16455, 0
  br i1 %16456, label %16458, label %16457

16457:                                            ; preds = %16453
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16447, i8 zeroext 96, i32 %16436, i32 %16436, i32 %16436, i32 1, i32 1, i32 0, i32 5) #11
  br label %16459

16458:                                            ; preds = %16453
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16447, i32 %16436, i32 %16436, i8 zeroext 102, i8 zeroext 15, i8 zeroext 96) #11
  br label %16459

16459:                                            ; preds = %16457, %16458
  %16460 = load i32, i32* %16437, align 4
  %16461 = and i32 %16460, 255
  %16462 = add nuw nsw i32 %16461, 1
  %16463 = zext i32 %16462 to i64
  %16464 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16463
  %16465 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %16432, %"class.v8::internal::compiler::InstructionOperand"* %16464) #11
  %16466 = extractvalue { i64, i64 } %16465, 1
  %16467 = trunc i64 %16466 to i8
  %16468 = and i8 %16467, 7
  %16469 = or i8 %16468, 8
  %16470 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16471 = and i32 %16470, 32
  %16472 = icmp eq i32 %16471, 0
  br i1 %16472, label %16474, label %16473

16473:                                            ; preds = %16459
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16447, i8 zeroext 113, i32 4, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %16475

16474:                                            ; preds = %16459
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16447, i32 4, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 113) #11
  br label %16475

16475:                                            ; preds = %16473, %16474
  %16476 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %16477 = load i8*, i8** %16476, align 8
  %16478 = getelementptr inbounds i8, i8* %16477, i64 1
  store i8* %16478, i8** %16476, align 8
  store i8 %16469, i8* %16477, align 1
  %16479 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16480 = and i32 %16479, 32
  %16481 = icmp eq i32 %16480, 0
  br i1 %16481, label %16483, label %16482

16482:                                            ; preds = %16475
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16447, i8 zeroext 113, i32 4, i32 %16436, i32 %16436, i32 1, i32 1, i32 0, i32 5) #11
  br label %16484

16483:                                            ; preds = %16475
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16447, i32 4, i32 %16436, i8 zeroext 102, i8 zeroext 15, i8 zeroext 113) #11
  br label %16484

16484:                                            ; preds = %16482, %16483
  %16485 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %16486 = load i8*, i8** %16485, align 8
  %16487 = getelementptr inbounds i8, i8* %16486, i64 1
  store i8* %16487, i8** %16485, align 8
  store i8 %16469, i8* %16486, align 1
  %16488 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16489 = and i32 %16488, 32
  %16490 = icmp eq i32 %16489, 0
  br i1 %16490, label %16492, label %16491

16491:                                            ; preds = %16484
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16447, i8 zeroext 99, i32 %16436, i32 %16436, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

16492:                                            ; preds = %16484
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16447, i32 %16436, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 99) #11
  br label %23402

16493:                                            ; preds = %16431
  %16494 = lshr i32 %16438, 8
  %16495 = and i32 %16494, 65535
  %16496 = add nuw nsw i32 %16495, %16439
  %16497 = zext i32 %16496 to i64
  %16498 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16497, i32 0
  %16499 = load i64, i64* %16498, align 8
  %16500 = ashr i64 %16499, 35
  %16501 = trunc i64 %16500 to i32
  %16502 = add nuw nsw i32 %16440, %16495
  %16503 = zext i32 %16502 to i64
  %16504 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16503, i32 0
  %16505 = load i64, i64* %16504, align 8
  %16506 = ashr i64 %16505, 35
  %16507 = trunc i64 %16506 to i32
  %16508 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %16509 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %16508, i64 0, i32 0, i32 0, i32 0
  %16510 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16511 = and i32 %16510, 32
  %16512 = icmp eq i32 %16511, 0
  br i1 %16512, label %16514, label %16513

16513:                                            ; preds = %16493
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16509, i8 zeroext 104, i32 15, i32 15, i32 %16436, i32 1, i32 1, i32 0, i32 5) #11
  br label %16515

16514:                                            ; preds = %16493
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16509, i32 15, i32 %16436, i8 zeroext 102, i8 zeroext 15, i8 zeroext 104) #11
  br label %16515

16515:                                            ; preds = %16513, %16514
  %16516 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16517 = and i32 %16516, 32
  %16518 = icmp eq i32 %16517, 0
  br i1 %16518, label %16520, label %16519

16519:                                            ; preds = %16515
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16509, i8 zeroext 96, i32 %16436, i32 %16436, i32 %16436, i32 1, i32 1, i32 0, i32 5) #11
  br label %16521

16520:                                            ; preds = %16515
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16509, i32 %16436, i32 %16436, i8 zeroext 102, i8 zeroext 15, i8 zeroext 96) #11
  br label %16521

16521:                                            ; preds = %16519, %16520
  %16522 = load i32, i32* %16437, align 4
  %16523 = and i32 %16522, 255
  %16524 = add nuw nsw i32 %16523, 1
  %16525 = zext i32 %16524 to i64
  %16526 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16525, i32 0
  %16527 = load i64, i64* %16526, align 8
  %16528 = ashr i64 %16527, 35
  %16529 = trunc i64 %16528 to i32
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %16509, i32 %16501, i32 %16529, i32 8) #11
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %16509, i8 zeroext 4, i32 %16501, i64 7, i32 8) #11
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %16509, i8 zeroext 0, i32 %16501, i64 8, i32 8) #11
  tail call void @_ZN2v88internal14TurboAssembler4MovqENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %16508, i32 %16507, i32 %16501) #11
  %16530 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16531 = and i32 %16530, 32
  %16532 = icmp eq i32 %16531, 0
  br i1 %16532, label %16534, label %16533

16533:                                            ; preds = %16521
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16509, i8 zeroext -31, i32 15, i32 15, i32 %16507, i32 1, i32 1, i32 0, i32 5) #11
  br label %16535

16534:                                            ; preds = %16521
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16509, i32 15, i32 %16507, i8 zeroext 102, i8 zeroext 15, i8 zeroext -31) #11
  br label %16535

16535:                                            ; preds = %16533, %16534
  %16536 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16537 = and i32 %16536, 32
  %16538 = icmp eq i32 %16537, 0
  br i1 %16538, label %16540, label %16539

16539:                                            ; preds = %16535
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16509, i8 zeroext -31, i32 %16436, i32 %16436, i32 %16507, i32 1, i32 1, i32 0, i32 5) #11
  br label %16541

16540:                                            ; preds = %16535
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16509, i32 %16436, i32 %16507, i8 zeroext 102, i8 zeroext 15, i8 zeroext -31) #11
  br label %16541

16541:                                            ; preds = %16539, %16540
  %16542 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16543 = and i32 %16542, 32
  %16544 = icmp eq i32 %16543, 0
  br i1 %16544, label %16546, label %16545

16545:                                            ; preds = %16541
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16509, i8 zeroext 99, i32 %16436, i32 %16436, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

16546:                                            ; preds = %16541
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16509, i32 %16436, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 99) #11
  br label %23402

16547:                                            ; preds = %2
  %16548 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16549 = and i32 %16548, 32
  %16550 = icmp eq i32 %16549, 0
  %16551 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %16552 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %16553 = load i64, i64* %16552, align 8
  %16554 = ashr i64 %16553, 35
  %16555 = trunc i64 %16554 to i32
  %16556 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %16557 = load i32, i32* %16556, align 4
  %16558 = and i32 %16557, 255
  %16559 = zext i32 %16558 to i64
  br i1 %16550, label %16570, label %16560

16560:                                            ; preds = %16547
  %16561 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16559, i32 0
  %16562 = load i64, i64* %16561, align 8
  %16563 = ashr i64 %16562, 35
  %16564 = trunc i64 %16563 to i32
  %16565 = add nuw nsw i64 %16559, 1
  %16566 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16565, i32 0
  %16567 = load i64, i64* %16566, align 8
  %16568 = ashr i64 %16567, 35
  %16569 = trunc i64 %16568 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16551, i8 zeroext -4, i32 %16555, i32 %16564, i32 %16569, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

16570:                                            ; preds = %16547
  %16571 = add nuw nsw i64 %16559, 1
  %16572 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16571, i32 0
  %16573 = load i64, i64* %16572, align 8
  %16574 = ashr i64 %16573, 35
  %16575 = trunc i64 %16574 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16551, i32 %16555, i32 %16575, i8 zeroext 102, i8 zeroext 15, i8 zeroext -4) #11
  br label %23402

16576:                                            ; preds = %2
  %16577 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16578 = and i32 %16577, 32
  %16579 = icmp eq i32 %16578, 0
  %16580 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %16581 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %16582 = load i64, i64* %16581, align 8
  %16583 = ashr i64 %16582, 35
  %16584 = trunc i64 %16583 to i32
  %16585 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %16586 = load i32, i32* %16585, align 4
  %16587 = and i32 %16586, 255
  %16588 = zext i32 %16587 to i64
  br i1 %16579, label %16599, label %16589

16589:                                            ; preds = %16576
  %16590 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16588, i32 0
  %16591 = load i64, i64* %16590, align 8
  %16592 = ashr i64 %16591, 35
  %16593 = trunc i64 %16592 to i32
  %16594 = add nuw nsw i64 %16588, 1
  %16595 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16594, i32 0
  %16596 = load i64, i64* %16595, align 8
  %16597 = ashr i64 %16596, 35
  %16598 = trunc i64 %16597 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16580, i8 zeroext -20, i32 %16584, i32 %16593, i32 %16598, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

16599:                                            ; preds = %16576
  %16600 = add nuw nsw i64 %16588, 1
  %16601 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16600, i32 0
  %16602 = load i64, i64* %16601, align 8
  %16603 = ashr i64 %16602, 35
  %16604 = trunc i64 %16603 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16580, i32 %16584, i32 %16604, i8 zeroext 102, i8 zeroext 15, i8 zeroext -20) #11
  br label %23402

16605:                                            ; preds = %2
  %16606 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16607 = and i32 %16606, 32
  %16608 = icmp eq i32 %16607, 0
  %16609 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %16610 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %16611 = load i64, i64* %16610, align 8
  %16612 = ashr i64 %16611, 35
  %16613 = trunc i64 %16612 to i32
  %16614 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %16615 = load i32, i32* %16614, align 4
  %16616 = and i32 %16615, 255
  %16617 = zext i32 %16616 to i64
  br i1 %16608, label %16628, label %16618

16618:                                            ; preds = %16605
  %16619 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16617, i32 0
  %16620 = load i64, i64* %16619, align 8
  %16621 = ashr i64 %16620, 35
  %16622 = trunc i64 %16621 to i32
  %16623 = add nuw nsw i64 %16617, 1
  %16624 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16623, i32 0
  %16625 = load i64, i64* %16624, align 8
  %16626 = ashr i64 %16625, 35
  %16627 = trunc i64 %16626 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16609, i8 zeroext -8, i32 %16613, i32 %16622, i32 %16627, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

16628:                                            ; preds = %16605
  %16629 = add nuw nsw i64 %16617, 1
  %16630 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16629, i32 0
  %16631 = load i64, i64* %16630, align 8
  %16632 = ashr i64 %16631, 35
  %16633 = trunc i64 %16632 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16609, i32 %16613, i32 %16633, i8 zeroext 102, i8 zeroext 15, i8 zeroext -8) #11
  br label %23402

16634:                                            ; preds = %2
  %16635 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16636 = and i32 %16635, 32
  %16637 = icmp eq i32 %16636, 0
  %16638 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %16639 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %16640 = load i64, i64* %16639, align 8
  %16641 = ashr i64 %16640, 35
  %16642 = trunc i64 %16641 to i32
  %16643 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %16644 = load i32, i32* %16643, align 4
  %16645 = and i32 %16644, 255
  %16646 = zext i32 %16645 to i64
  br i1 %16637, label %16657, label %16647

16647:                                            ; preds = %16634
  %16648 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16646, i32 0
  %16649 = load i64, i64* %16648, align 8
  %16650 = ashr i64 %16649, 35
  %16651 = trunc i64 %16650 to i32
  %16652 = add nuw nsw i64 %16646, 1
  %16653 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16652, i32 0
  %16654 = load i64, i64* %16653, align 8
  %16655 = ashr i64 %16654, 35
  %16656 = trunc i64 %16655 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16638, i8 zeroext -24, i32 %16642, i32 %16651, i32 %16656, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

16657:                                            ; preds = %16634
  %16658 = add nuw nsw i64 %16646, 1
  %16659 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16658, i32 0
  %16660 = load i64, i64* %16659, align 8
  %16661 = ashr i64 %16660, 35
  %16662 = trunc i64 %16661 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16638, i32 %16642, i32 %16662, i8 zeroext 102, i8 zeroext 15, i8 zeroext -24) #11
  br label %23402

16663:                                            ; preds = %2
  %16664 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16665 = and i32 %16664, 32
  %16666 = icmp eq i32 %16665, 0
  %16667 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %16668 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %16669 = load i64, i64* %16668, align 8
  %16670 = ashr i64 %16669, 35
  %16671 = trunc i64 %16670 to i32
  %16672 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %16673 = load i32, i32* %16672, align 4
  %16674 = and i32 %16673, 255
  %16675 = zext i32 %16674 to i64
  br i1 %16666, label %16686, label %16676

16676:                                            ; preds = %16663
  %16677 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16675, i32 0
  %16678 = load i64, i64* %16677, align 8
  %16679 = ashr i64 %16678, 35
  %16680 = trunc i64 %16679 to i32
  %16681 = add nuw nsw i64 %16675, 1
  %16682 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16681, i32 0
  %16683 = load i64, i64* %16682, align 8
  %16684 = ashr i64 %16683, 35
  %16685 = trunc i64 %16684 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16667, i8 zeroext 56, i32 %16671, i32 %16680, i32 %16685, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

16686:                                            ; preds = %16663
  %16687 = add nuw nsw i64 %16675, 1
  %16688 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16687, i32 0
  %16689 = load i64, i64* %16688, align 8
  %16690 = ashr i64 %16689, 35
  %16691 = trunc i64 %16690 to i32
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %16667, i32 %16671, i32 %16691, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 56) #11
  br label %23402

16692:                                            ; preds = %2
  %16693 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16694 = and i32 %16693, 32
  %16695 = icmp eq i32 %16694, 0
  %16696 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %16697 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %16698 = load i64, i64* %16697, align 8
  %16699 = ashr i64 %16698, 35
  %16700 = trunc i64 %16699 to i32
  %16701 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %16702 = load i32, i32* %16701, align 4
  %16703 = and i32 %16702, 255
  %16704 = zext i32 %16703 to i64
  br i1 %16695, label %16715, label %16705

16705:                                            ; preds = %16692
  %16706 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16704, i32 0
  %16707 = load i64, i64* %16706, align 8
  %16708 = ashr i64 %16707, 35
  %16709 = trunc i64 %16708 to i32
  %16710 = add nuw nsw i64 %16704, 1
  %16711 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16710, i32 0
  %16712 = load i64, i64* %16711, align 8
  %16713 = ashr i64 %16712, 35
  %16714 = trunc i64 %16713 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16696, i8 zeroext 60, i32 %16700, i32 %16709, i32 %16714, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

16715:                                            ; preds = %16692
  %16716 = add nuw nsw i64 %16704, 1
  %16717 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16716, i32 0
  %16718 = load i64, i64* %16717, align 8
  %16719 = ashr i64 %16718, 35
  %16720 = trunc i64 %16719 to i32
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %16696, i32 %16700, i32 %16720, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 60) #11
  br label %23402

16721:                                            ; preds = %2
  %16722 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16723 = and i32 %16722, 32
  %16724 = icmp eq i32 %16723, 0
  %16725 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %16726 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %16727 = load i64, i64* %16726, align 8
  %16728 = ashr i64 %16727, 35
  %16729 = trunc i64 %16728 to i32
  %16730 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %16731 = load i32, i32* %16730, align 4
  %16732 = and i32 %16731, 255
  %16733 = zext i32 %16732 to i64
  br i1 %16724, label %16744, label %16734

16734:                                            ; preds = %16721
  %16735 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16733, i32 0
  %16736 = load i64, i64* %16735, align 8
  %16737 = ashr i64 %16736, 35
  %16738 = trunc i64 %16737 to i32
  %16739 = add nuw nsw i64 %16733, 1
  %16740 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16739, i32 0
  %16741 = load i64, i64* %16740, align 8
  %16742 = ashr i64 %16741, 35
  %16743 = trunc i64 %16742 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16725, i8 zeroext 116, i32 %16729, i32 %16738, i32 %16743, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

16744:                                            ; preds = %16721
  %16745 = add nuw nsw i64 %16733, 1
  %16746 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16745, i32 0
  %16747 = load i64, i64* %16746, align 8
  %16748 = ashr i64 %16747, 35
  %16749 = trunc i64 %16748 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16725, i32 %16729, i32 %16749, i8 zeroext 102, i8 zeroext 15, i8 zeroext 116) #11
  br label %23402

16750:                                            ; preds = %2
  %16751 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %16752 = load i64, i64* %16751, align 8
  %16753 = ashr i64 %16752, 35
  %16754 = trunc i64 %16753 to i32
  %16755 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %16756 = load i32, i32* %16755, align 4
  %16757 = and i32 %16756, 255
  %16758 = add nuw nsw i32 %16757, 1
  %16759 = zext i32 %16758 to i64
  %16760 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16759, i32 0
  %16761 = load i64, i64* %16760, align 8
  %16762 = ashr i64 %16761, 35
  %16763 = trunc i64 %16762 to i32
  %16764 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %16765 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16766 = and i32 %16765, 32
  %16767 = icmp eq i32 %16766, 0
  br i1 %16767, label %16769, label %16768

16768:                                            ; preds = %16750
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16764, i8 zeroext 116, i32 %16754, i32 %16754, i32 %16763, i32 1, i32 1, i32 0, i32 5) #11
  br label %16770

16769:                                            ; preds = %16750
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16764, i32 %16754, i32 %16763, i8 zeroext 102, i8 zeroext 15, i8 zeroext 116) #11
  br label %16770

16770:                                            ; preds = %16768, %16769
  %16771 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16772 = and i32 %16771, 32
  %16773 = icmp eq i32 %16772, 0
  br i1 %16773, label %16775, label %16774

16774:                                            ; preds = %16770
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16764, i8 zeroext 116, i32 15, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %16776

16775:                                            ; preds = %16770
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16764, i32 15, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 116) #11
  br label %16776

16776:                                            ; preds = %16774, %16775
  %16777 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16778 = and i32 %16777, 32
  %16779 = icmp eq i32 %16778, 0
  br i1 %16779, label %16781, label %16780

16780:                                            ; preds = %16776
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16764, i8 zeroext -17, i32 %16754, i32 %16754, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

16781:                                            ; preds = %16776
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16764, i32 %16754, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -17) #11
  br label %23402

16782:                                            ; preds = %2
  %16783 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16784 = and i32 %16783, 32
  %16785 = icmp eq i32 %16784, 0
  %16786 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %16787 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %16788 = load i64, i64* %16787, align 8
  %16789 = ashr i64 %16788, 35
  %16790 = trunc i64 %16789 to i32
  %16791 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %16792 = load i32, i32* %16791, align 4
  %16793 = and i32 %16792, 255
  %16794 = zext i32 %16793 to i64
  br i1 %16785, label %16805, label %16795

16795:                                            ; preds = %16782
  %16796 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16794, i32 0
  %16797 = load i64, i64* %16796, align 8
  %16798 = ashr i64 %16797, 35
  %16799 = trunc i64 %16798 to i32
  %16800 = add nuw nsw i64 %16794, 1
  %16801 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16800, i32 0
  %16802 = load i64, i64* %16801, align 8
  %16803 = ashr i64 %16802, 35
  %16804 = trunc i64 %16803 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16786, i8 zeroext 100, i32 %16790, i32 %16799, i32 %16804, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

16805:                                            ; preds = %16782
  %16806 = add nuw nsw i64 %16794, 1
  %16807 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16806, i32 0
  %16808 = load i64, i64* %16807, align 8
  %16809 = ashr i64 %16808, 35
  %16810 = trunc i64 %16809 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16786, i32 %16790, i32 %16810, i8 zeroext 102, i8 zeroext 15, i8 zeroext 100) #11
  br label %23402

16811:                                            ; preds = %2
  %16812 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %16813 = load i64, i64* %16812, align 8
  %16814 = ashr i64 %16813, 35
  %16815 = trunc i64 %16814 to i32
  %16816 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %16817 = load i32, i32* %16816, align 4
  %16818 = and i32 %16817, 255
  %16819 = add nuw nsw i32 %16818, 1
  %16820 = zext i32 %16819 to i64
  %16821 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16820, i32 0
  %16822 = load i64, i64* %16821, align 8
  %16823 = ashr i64 %16822, 35
  %16824 = trunc i64 %16823 to i32
  %16825 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %16826 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16827 = and i32 %16826, 32
  %16828 = icmp eq i32 %16827, 0
  br i1 %16828, label %16830, label %16829

16829:                                            ; preds = %16811
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16825, i8 zeroext 56, i32 %16815, i32 %16815, i32 %16824, i32 1, i32 2, i32 0, i32 5) #11
  br label %16831

16830:                                            ; preds = %16811
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %16825, i32 %16815, i32 %16824, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 56) #11
  br label %16831

16831:                                            ; preds = %16829, %16830
  %16832 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16833 = and i32 %16832, 32
  %16834 = icmp eq i32 %16833, 0
  br i1 %16834, label %16836, label %16835

16835:                                            ; preds = %16831
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16825, i8 zeroext 116, i32 %16815, i32 %16815, i32 %16824, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

16836:                                            ; preds = %16831
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16825, i32 %16815, i32 %16824, i8 zeroext 102, i8 zeroext 15, i8 zeroext 116) #11
  br label %23402

16837:                                            ; preds = %2
  %16838 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16839 = and i32 %16838, 32
  %16840 = icmp eq i32 %16839, 0
  %16841 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %16842 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %16843 = load i64, i64* %16842, align 8
  %16844 = ashr i64 %16843, 35
  %16845 = trunc i64 %16844 to i32
  %16846 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %16847 = load i32, i32* %16846, align 4
  %16848 = and i32 %16847, 255
  %16849 = zext i32 %16848 to i64
  br i1 %16840, label %16860, label %16850

16850:                                            ; preds = %16837
  %16851 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16849, i32 0
  %16852 = load i64, i64* %16851, align 8
  %16853 = ashr i64 %16852, 35
  %16854 = trunc i64 %16853 to i32
  %16855 = add nuw nsw i64 %16849, 1
  %16856 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16855, i32 0
  %16857 = load i64, i64* %16856, align 8
  %16858 = ashr i64 %16857, 35
  %16859 = trunc i64 %16858 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16841, i8 zeroext 103, i32 %16845, i32 %16854, i32 %16859, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

16860:                                            ; preds = %16837
  %16861 = add nuw nsw i64 %16849, 1
  %16862 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16861, i32 0
  %16863 = load i64, i64* %16862, align 8
  %16864 = ashr i64 %16863, 35
  %16865 = trunc i64 %16864 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16841, i32 %16845, i32 %16865, i8 zeroext 102, i8 zeroext 15, i8 zeroext 103) #11
  br label %23402

16866:                                            ; preds = %2
  %16867 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %16868 = load i64, i64* %16867, align 8
  %16869 = ashr i64 %16868, 35
  %16870 = trunc i64 %16869 to i32
  %16871 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %16872 = load i32, i32* %16871, align 4
  %16873 = and i32 %16872, 255
  %16874 = lshr i32 %16872, 8
  %16875 = and i32 %16874, 65535
  %16876 = add nuw nsw i32 %16875, %16873
  %16877 = zext i32 %16876 to i64
  %16878 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16877, i32 0
  %16879 = load i64, i64* %16878, align 8
  %16880 = ashr i64 %16879, 35
  %16881 = trunc i64 %16880 to i32
  %16882 = add nuw nsw i32 %16873, 1
  %16883 = add nuw nsw i32 %16882, %16875
  %16884 = zext i32 %16883 to i64
  %16885 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16884, i32 0
  %16886 = load i64, i64* %16885, align 8
  %16887 = ashr i64 %16886, 35
  %16888 = trunc i64 %16887 to i32
  %16889 = zext i32 %16882 to i64
  %16890 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16889, i32 0
  %16891 = load i64, i64* %16890, align 8
  %16892 = and i64 %16891, 7
  %16893 = icmp eq i64 %16892, 3
  br i1 %16893, label %16894, label %16940

16894:                                            ; preds = %16866
  %16895 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %16896 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16889
  %16897 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %16895, %"class.v8::internal::compiler::InstructionOperand"* %16896) #11
  %16898 = extractvalue { i64, i64 } %16897, 1
  %16899 = trunc i64 %16898 to i8
  %16900 = and i8 %16899, 7
  %16901 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %16902 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16903 = and i32 %16902, 32
  %16904 = icmp eq i32 %16903, 0
  br i1 %16904, label %16906, label %16905

16905:                                            ; preds = %16894
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16901, i8 zeroext 113, i32 2, i32 %16870, i32 %16870, i32 1, i32 1, i32 0, i32 5) #11
  br label %16907

16906:                                            ; preds = %16894
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16901, i32 2, i32 %16870, i8 zeroext 102, i8 zeroext 15, i8 zeroext 113) #11
  br label %16907

16907:                                            ; preds = %16905, %16906
  %16908 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %16909 = load i8*, i8** %16908, align 8
  %16910 = getelementptr inbounds i8, i8* %16909, i64 1
  store i8* %16910, i8** %16908, align 8
  store i8 %16900, i8* %16909, align 1
  %16911 = zext i8 %16900 to i32
  %16912 = lshr i32 255, %16911
  %16913 = shl nuw i32 %16912, 24
  %16914 = shl nuw nsw i32 %16912, 16
  %16915 = shl nuw nsw i32 %16912, 8
  %16916 = or i32 %16914, %16912
  %16917 = or i32 %16916, %16913
  %16918 = or i32 %16917, %16915
  %16919 = zext i32 %16918 to i64
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %16901, i32 %16881, i64 %16919, i32 4) #11
  %16920 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16921 = and i32 %16920, 32
  %16922 = icmp eq i32 %16921, 0
  br i1 %16922, label %16924, label %16923

16923:                                            ; preds = %16907
  call void @_ZN2v88internal9Assembler5vmovdENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::Assembler"* %16901, i32 %16888, i32 %16881) #11
  br label %16925

16924:                                            ; preds = %16907
  call void @_ZN2v88internal9Assembler4movdENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::Assembler"* %16901, i32 %16888, i32 %16881) #11
  br label %16925

16925:                                            ; preds = %16923, %16924
  %16926 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16927 = and i32 %16926, 32
  %16928 = icmp eq i32 %16927, 0
  br i1 %16928, label %16933, label %16929

16929:                                            ; preds = %16925
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16901, i8 zeroext 112, i32 %16888, i32 0, i32 %16888, i32 1, i32 1, i32 0, i32 5) #11
  %16930 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %16931 = load i8*, i8** %16930, align 8
  %16932 = getelementptr inbounds i8, i8* %16931, i64 1
  store i8* %16932, i8** %16930, align 8
  store i8 0, i8* %16931, align 1
  br label %16934

16933:                                            ; preds = %16925
  call void @_ZN2v88internal9Assembler6pshufdENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %16901, i32 %16888, i32 %16888, i8 zeroext 0) #11
  br label %16934

16934:                                            ; preds = %16929, %16933
  %16935 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16936 = and i32 %16935, 32
  %16937 = icmp eq i32 %16936, 0
  br i1 %16937, label %16939, label %16938

16938:                                            ; preds = %16934
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16901, i8 zeroext -37, i32 %16870, i32 %16870, i32 %16888, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

16939:                                            ; preds = %16934
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16901, i32 %16870, i32 %16888, i8 zeroext 102, i8 zeroext 15, i8 zeroext -37) #11
  br label %23402

16940:                                            ; preds = %16866
  %16941 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %16942 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %16941, i64 0, i32 0, i32 0, i32 0
  %16943 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16944 = and i32 %16943, 32
  %16945 = icmp eq i32 %16944, 0
  br i1 %16945, label %16947, label %16946

16946:                                            ; preds = %16940
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16942, i8 zeroext 104, i32 15, i32 15, i32 %16870, i32 1, i32 1, i32 0, i32 5) #11
  br label %16948

16947:                                            ; preds = %16940
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16942, i32 15, i32 %16870, i8 zeroext 102, i8 zeroext 15, i8 zeroext 104) #11
  br label %16948

16948:                                            ; preds = %16946, %16947
  %16949 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16950 = and i32 %16949, 32
  %16951 = icmp eq i32 %16950, 0
  br i1 %16951, label %16953, label %16952

16952:                                            ; preds = %16948
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16942, i8 zeroext 96, i32 %16870, i32 %16870, i32 %16870, i32 1, i32 1, i32 0, i32 5) #11
  br label %16954

16953:                                            ; preds = %16948
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16942, i32 %16870, i32 %16870, i8 zeroext 102, i8 zeroext 15, i8 zeroext 96) #11
  br label %16954

16954:                                            ; preds = %16952, %16953
  %16955 = load i32, i32* %16871, align 4
  %16956 = and i32 %16955, 255
  %16957 = add nuw nsw i32 %16956, 1
  %16958 = zext i32 %16957 to i64
  %16959 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16958, i32 0
  %16960 = load i64, i64* %16959, align 8
  %16961 = ashr i64 %16960, 35
  %16962 = trunc i64 %16961 to i32
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %16942, i32 %16881, i32 %16962, i32 8) #11
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %16942, i8 zeroext 4, i32 %16881, i64 7, i32 8) #11
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %16942, i8 zeroext 0, i32 %16881, i64 8, i32 8) #11
  tail call void @_ZN2v88internal14TurboAssembler4MovqENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %16941, i32 %16888, i32 %16881) #11
  %16963 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16964 = and i32 %16963, 32
  %16965 = icmp eq i32 %16964, 0
  br i1 %16965, label %16967, label %16966

16966:                                            ; preds = %16954
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16942, i8 zeroext -47, i32 15, i32 15, i32 %16888, i32 1, i32 1, i32 0, i32 5) #11
  br label %16968

16967:                                            ; preds = %16954
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16942, i32 15, i32 %16888, i8 zeroext 102, i8 zeroext 15, i8 zeroext -47) #11
  br label %16968

16968:                                            ; preds = %16966, %16967
  %16969 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16970 = and i32 %16969, 32
  %16971 = icmp eq i32 %16970, 0
  br i1 %16971, label %16973, label %16972

16972:                                            ; preds = %16968
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16942, i8 zeroext -47, i32 %16870, i32 %16870, i32 %16888, i32 1, i32 1, i32 0, i32 5) #11
  br label %16974

16973:                                            ; preds = %16968
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16942, i32 %16870, i32 %16888, i8 zeroext 102, i8 zeroext 15, i8 zeroext -47) #11
  br label %16974

16974:                                            ; preds = %16972, %16973
  %16975 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16976 = and i32 %16975, 32
  %16977 = icmp eq i32 %16976, 0
  br i1 %16977, label %16979, label %16978

16978:                                            ; preds = %16974
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16942, i8 zeroext 103, i32 %16870, i32 %16870, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

16979:                                            ; preds = %16974
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16942, i32 %16870, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 103) #11
  br label %23402

16980:                                            ; preds = %2
  %16981 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %16982 = and i32 %16981, 32
  %16983 = icmp eq i32 %16982, 0
  %16984 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %16985 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %16986 = load i64, i64* %16985, align 8
  %16987 = ashr i64 %16986, 35
  %16988 = trunc i64 %16987 to i32
  %16989 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %16990 = load i32, i32* %16989, align 4
  %16991 = and i32 %16990, 255
  %16992 = zext i32 %16991 to i64
  br i1 %16983, label %17003, label %16993

16993:                                            ; preds = %16980
  %16994 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16992, i32 0
  %16995 = load i64, i64* %16994, align 8
  %16996 = ashr i64 %16995, 35
  %16997 = trunc i64 %16996 to i32
  %16998 = add nuw nsw i64 %16992, 1
  %16999 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16998, i32 0
  %17000 = load i64, i64* %16999, align 8
  %17001 = ashr i64 %17000, 35
  %17002 = trunc i64 %17001 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16984, i8 zeroext -36, i32 %16988, i32 %16997, i32 %17002, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

17003:                                            ; preds = %16980
  %17004 = add nuw nsw i64 %16992, 1
  %17005 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17004, i32 0
  %17006 = load i64, i64* %17005, align 8
  %17007 = ashr i64 %17006, 35
  %17008 = trunc i64 %17007 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16984, i32 %16988, i32 %17008, i8 zeroext 102, i8 zeroext 15, i8 zeroext -36) #11
  br label %23402

17009:                                            ; preds = %2
  %17010 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %17011 = and i32 %17010, 32
  %17012 = icmp eq i32 %17011, 0
  %17013 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %17014 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %17015 = load i64, i64* %17014, align 8
  %17016 = ashr i64 %17015, 35
  %17017 = trunc i64 %17016 to i32
  %17018 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %17019 = load i32, i32* %17018, align 4
  %17020 = and i32 %17019, 255
  %17021 = zext i32 %17020 to i64
  br i1 %17012, label %17032, label %17022

17022:                                            ; preds = %17009
  %17023 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17021, i32 0
  %17024 = load i64, i64* %17023, align 8
  %17025 = ashr i64 %17024, 35
  %17026 = trunc i64 %17025 to i32
  %17027 = add nuw nsw i64 %17021, 1
  %17028 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17027, i32 0
  %17029 = load i64, i64* %17028, align 8
  %17030 = ashr i64 %17029, 35
  %17031 = trunc i64 %17030 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %17013, i8 zeroext -40, i32 %17017, i32 %17026, i32 %17031, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

17032:                                            ; preds = %17009
  %17033 = add nuw nsw i64 %17021, 1
  %17034 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17033, i32 0
  %17035 = load i64, i64* %17034, align 8
  %17036 = ashr i64 %17035, 35
  %17037 = trunc i64 %17036 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %17013, i32 %17017, i32 %17037, i8 zeroext 102, i8 zeroext 15, i8 zeroext -40) #11
  br label %23402

17038:                                            ; preds = %2
  %17039 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %17040 = and i32 %17039, 32
  %17041 = icmp eq i32 %17040, 0
  %17042 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %17043 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %17044 = load i64, i64* %17043, align 8
  %17045 = ashr i64 %17044, 35
  %17046 = trunc i64 %17045 to i32
  %17047 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %17048 = load i32, i32* %17047, align 4
  %17049 = and i32 %17048, 255
  %17050 = zext i32 %17049 to i64
  br i1 %17041, label %17061, label %17051

17051:                                            ; preds = %17038
  %17052 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17050, i32 0
  %17053 = load i64, i64* %17052, align 8
  %17054 = ashr i64 %17053, 35
  %17055 = trunc i64 %17054 to i32
  %17056 = add nuw nsw i64 %17050, 1
  %17057 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17056, i32 0
  %17058 = load i64, i64* %17057, align 8
  %17059 = ashr i64 %17058, 35
  %17060 = trunc i64 %17059 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %17042, i8 zeroext -38, i32 %17046, i32 %17055, i32 %17060, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

17061:                                            ; preds = %17038
  %17062 = add nuw nsw i64 %17050, 1
  %17063 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17062, i32 0
  %17064 = load i64, i64* %17063, align 8
  %17065 = ashr i64 %17064, 35
  %17066 = trunc i64 %17065 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %17042, i32 %17046, i32 %17066, i8 zeroext 102, i8 zeroext 15, i8 zeroext -38) #11
  br label %23402

17067:                                            ; preds = %2
  %17068 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %17069 = and i32 %17068, 32
  %17070 = icmp eq i32 %17069, 0
  %17071 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %17072 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %17073 = load i64, i64* %17072, align 8
  %17074 = ashr i64 %17073, 35
  %17075 = trunc i64 %17074 to i32
  %17076 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %17077 = load i32, i32* %17076, align 4
  %17078 = and i32 %17077, 255
  %17079 = zext i32 %17078 to i64
  br i1 %17070, label %17090, label %17080

17080:                                            ; preds = %17067
  %17081 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17079, i32 0
  %17082 = load i64, i64* %17081, align 8
  %17083 = ashr i64 %17082, 35
  %17084 = trunc i64 %17083 to i32
  %17085 = add nuw nsw i64 %17079, 1
  %17086 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17085, i32 0
  %17087 = load i64, i64* %17086, align 8
  %17088 = ashr i64 %17087, 35
  %17089 = trunc i64 %17088 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %17071, i8 zeroext -34, i32 %17075, i32 %17084, i32 %17089, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

17090:                                            ; preds = %17067
  %17091 = add nuw nsw i64 %17079, 1
  %17092 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17091, i32 0
  %17093 = load i64, i64* %17092, align 8
  %17094 = ashr i64 %17093, 35
  %17095 = trunc i64 %17094 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %17071, i32 %17075, i32 %17095, i8 zeroext 102, i8 zeroext 15, i8 zeroext -34) #11
  br label %23402

17096:                                            ; preds = %2
  %17097 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %17098 = load i64, i64* %17097, align 8
  %17099 = ashr i64 %17098, 35
  %17100 = trunc i64 %17099 to i32
  %17101 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %17102 = load i32, i32* %17101, align 4
  %17103 = and i32 %17102, 255
  %17104 = add nuw nsw i32 %17103, 1
  %17105 = zext i32 %17104 to i64
  %17106 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17105, i32 0
  %17107 = load i64, i64* %17106, align 8
  %17108 = ashr i64 %17107, 35
  %17109 = trunc i64 %17108 to i32
  %17110 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %17111 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %17112 = and i32 %17111, 32
  %17113 = icmp eq i32 %17112, 0
  br i1 %17113, label %17115, label %17114

17114:                                            ; preds = %17096
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %17110, i8 zeroext -34, i32 %17100, i32 %17100, i32 %17109, i32 1, i32 1, i32 0, i32 5) #11
  br label %17116

17115:                                            ; preds = %17096
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %17110, i32 %17100, i32 %17109, i8 zeroext 102, i8 zeroext 15, i8 zeroext -34) #11
  br label %17116

17116:                                            ; preds = %17114, %17115
  %17117 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %17118 = and i32 %17117, 32
  %17119 = icmp eq i32 %17118, 0
  br i1 %17119, label %17121, label %17120

17120:                                            ; preds = %17116
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %17110, i8 zeroext 116, i32 %17100, i32 %17100, i32 %17109, i32 1, i32 1, i32 0, i32 5) #11
  br label %17122

17121:                                            ; preds = %17116
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %17110, i32 %17100, i32 %17109, i8 zeroext 102, i8 zeroext 15, i8 zeroext 116) #11
  br label %17122

17122:                                            ; preds = %17120, %17121
  %17123 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %17124 = and i32 %17123, 32
  %17125 = icmp eq i32 %17124, 0
  br i1 %17125, label %17127, label %17126

17126:                                            ; preds = %17122
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %17110, i8 zeroext 116, i32 15, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %17128

17127:                                            ; preds = %17122
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %17110, i32 15, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 116) #11
  br label %17128

17128:                                            ; preds = %17126, %17127
  %17129 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %17130 = and i32 %17129, 32
  %17131 = icmp eq i32 %17130, 0
  br i1 %17131, label %17133, label %17132

17132:                                            ; preds = %17128
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %17110, i8 zeroext -17, i32 %17100, i32 %17100, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

17133:                                            ; preds = %17128
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %17110, i32 %17100, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -17) #11
  br label %23402

17134:                                            ; preds = %2
  %17135 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %17136 = load i64, i64* %17135, align 8
  %17137 = ashr i64 %17136, 35
  %17138 = trunc i64 %17137 to i32
  %17139 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %17140 = load i32, i32* %17139, align 4
  %17141 = and i32 %17140, 255
  %17142 = add nuw nsw i32 %17141, 1
  %17143 = zext i32 %17142 to i64
  %17144 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17143, i32 0
  %17145 = load i64, i64* %17144, align 8
  %17146 = ashr i64 %17145, 35
  %17147 = trunc i64 %17146 to i32
  %17148 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %17149 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %17150 = and i32 %17149, 32
  %17151 = icmp eq i32 %17150, 0
  br i1 %17151, label %17153, label %17152

17152:                                            ; preds = %17134
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %17148, i8 zeroext -38, i32 %17138, i32 %17138, i32 %17147, i32 1, i32 1, i32 0, i32 5) #11
  br label %17154

17153:                                            ; preds = %17134
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %17148, i32 %17138, i32 %17147, i8 zeroext 102, i8 zeroext 15, i8 zeroext -38) #11
  br label %17154

17154:                                            ; preds = %17152, %17153
  %17155 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %17156 = and i32 %17155, 32
  %17157 = icmp eq i32 %17156, 0
  br i1 %17157, label %17159, label %17158

17158:                                            ; preds = %17154
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %17148, i8 zeroext 116, i32 %17138, i32 %17138, i32 %17147, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

17159:                                            ; preds = %17154
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %17148, i32 %17138, i32 %17147, i8 zeroext 102, i8 zeroext 15, i8 zeroext 116) #11
  br label %23402

17160:                                            ; preds = %2
  %17161 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %17162 = and i32 %17161, 32
  %17163 = icmp eq i32 %17162, 0
  %17164 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %17165 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %17166 = load i64, i64* %17165, align 8
  %17167 = ashr i64 %17166, 35
  %17168 = trunc i64 %17167 to i32
  %17169 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %17170 = load i32, i32* %17169, align 4
  %17171 = and i32 %17170, 255
  %17172 = zext i32 %17171 to i64
  br i1 %17163, label %17183, label %17173

17173:                                            ; preds = %17160
  %17174 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17172, i32 0
  %17175 = load i64, i64* %17174, align 8
  %17176 = ashr i64 %17175, 35
  %17177 = trunc i64 %17176 to i32
  %17178 = add nuw nsw i64 %17172, 1
  %17179 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17178, i32 0
  %17180 = load i64, i64* %17179, align 8
  %17181 = ashr i64 %17180, 35
  %17182 = trunc i64 %17181 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %17164, i8 zeroext -32, i32 %17168, i32 %17177, i32 %17182, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

17183:                                            ; preds = %17160
  %17184 = add nuw nsw i64 %17172, 1
  %17185 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17184, i32 0
  %17186 = load i64, i64* %17185, align 8
  %17187 = ashr i64 %17186, 35
  %17188 = trunc i64 %17187 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %17164, i32 %17168, i32 %17188, i8 zeroext 102, i8 zeroext 15, i8 zeroext -32) #11
  br label %23402

17189:                                            ; preds = %2
  %17190 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %17191 = load i64, i64* %17190, align 8
  %17192 = ashr i64 %17191, 35
  %17193 = trunc i64 %17192 to i32
  %17194 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %17195 = load i32, i32* %17194, align 4
  %17196 = and i32 %17195, 255
  %17197 = zext i32 %17196 to i64
  %17198 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17197, i32 0
  %17199 = load i64, i64* %17198, align 8
  %17200 = ashr i64 %17199, 35
  %17201 = trunc i64 %17200 to i32
  %17202 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %17203 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %17204 = and i32 %17203, 32
  %17205 = icmp eq i32 %17204, 0
  br i1 %17205, label %17207, label %17206

17206:                                            ; preds = %17189
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %17202, i8 zeroext 28, i32 %17193, i32 0, i32 %17201, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

17207:                                            ; preds = %17189
  tail call void @_ZN2v88internal9Assembler11ssse3_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %17202, i32 %17193, i32 %17201, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 28) #11
  br label %23402

17208:                                            ; preds = %2
  %17209 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %17210 = load i64, i64* %17209, align 8
  %17211 = ashr i64 %17210, 35
  %17212 = trunc i64 %17211 to i32
  %17213 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %17214 = load i32, i32* %17213, align 4
  %17215 = and i32 %17214, 255
  %17216 = zext i32 %17215 to i64
  %17217 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17216, i32 0
  %17218 = load i64, i64* %17217, align 8
  %17219 = ashr i64 %17218, 35
  %17220 = trunc i64 %17219 to i32
  %17221 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %17222 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %17223 = and i32 %17222, 32
  %17224 = icmp eq i32 %17223, 0
  br i1 %17224, label %17226, label %17225

17225:                                            ; preds = %17208
  tail call void @_ZN2v88internal9Assembler9vpmovmskbENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %17221, i32 %17212, i32 %17220) #11
  br label %23402

17226:                                            ; preds = %17208
  tail call void @_ZN2v88internal9Assembler8pmovmskbENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %17221, i32 %17212, i32 %17220) #11
  br label %23402

17227:                                            ; preds = %2
  %17228 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %17229 = bitcast %"class.v8::internal::TurboAssembler"* %17228 to %"class.v8::internal::SharedTurboAssembler"*
  %17230 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %17231 = load i64, i64* %17230, align 8
  %17232 = ashr i64 %17231, 35
  %17233 = trunc i64 %17232 to i32
  %17234 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %17235 = load i32, i32* %17234, align 4
  %17236 = and i32 %17235, 255
  %17237 = zext i32 %17236 to i64
  %17238 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17237, i32 0
  %17239 = load i64, i64* %17238, align 8
  %17240 = ashr i64 %17239, 35
  %17241 = trunc i64 %17240 to i32
  %17242 = add nuw nsw i64 %17237, 1
  %17243 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17242, i32 0
  %17244 = load i64, i64* %17243, align 8
  %17245 = ashr i64 %17244, 35
  %17246 = trunc i64 %17245 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler11I32x4ExtMulENS0_11XMMRegisterES2_S2_S2_bb(%"class.v8::internal::SharedTurboAssembler"* %17229, i32 %17233, i32 %17241, i32 %17246, i32 15, i1 zeroext true, i1 zeroext true) #11
  br label %23402

17247:                                            ; preds = %2
  %17248 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %17249 = bitcast %"class.v8::internal::TurboAssembler"* %17248 to %"class.v8::internal::SharedTurboAssembler"*
  %17250 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %17251 = load i64, i64* %17250, align 8
  %17252 = ashr i64 %17251, 35
  %17253 = trunc i64 %17252 to i32
  %17254 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %17255 = load i32, i32* %17254, align 4
  %17256 = and i32 %17255, 255
  %17257 = zext i32 %17256 to i64
  %17258 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17257, i32 0
  %17259 = load i64, i64* %17258, align 8
  %17260 = ashr i64 %17259, 35
  %17261 = trunc i64 %17260 to i32
  %17262 = add nuw nsw i64 %17257, 1
  %17263 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17262, i32 0
  %17264 = load i64, i64* %17263, align 8
  %17265 = ashr i64 %17264, 35
  %17266 = trunc i64 %17265 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler11I32x4ExtMulENS0_11XMMRegisterES2_S2_S2_bb(%"class.v8::internal::SharedTurboAssembler"* %17249, i32 %17253, i32 %17261, i32 %17266, i32 15, i1 zeroext false, i1 zeroext true) #11
  br label %23402

17267:                                            ; preds = %2
  %17268 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %17269 = bitcast %"class.v8::internal::TurboAssembler"* %17268 to %"class.v8::internal::SharedTurboAssembler"*
  %17270 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %17271 = load i64, i64* %17270, align 8
  %17272 = ashr i64 %17271, 35
  %17273 = trunc i64 %17272 to i32
  %17274 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %17275 = load i32, i32* %17274, align 4
  %17276 = and i32 %17275, 255
  %17277 = zext i32 %17276 to i64
  %17278 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17277, i32 0
  %17279 = load i64, i64* %17278, align 8
  %17280 = ashr i64 %17279, 35
  %17281 = trunc i64 %17280 to i32
  %17282 = add nuw nsw i64 %17277, 1
  %17283 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17282, i32 0
  %17284 = load i64, i64* %17283, align 8
  %17285 = ashr i64 %17284, 35
  %17286 = trunc i64 %17285 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler11I32x4ExtMulENS0_11XMMRegisterES2_S2_S2_bb(%"class.v8::internal::SharedTurboAssembler"* %17269, i32 %17273, i32 %17281, i32 %17286, i32 15, i1 zeroext true, i1 zeroext false) #11
  br label %23402

17287:                                            ; preds = %2
  %17288 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %17289 = bitcast %"class.v8::internal::TurboAssembler"* %17288 to %"class.v8::internal::SharedTurboAssembler"*
  %17290 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %17291 = load i64, i64* %17290, align 8
  %17292 = ashr i64 %17291, 35
  %17293 = trunc i64 %17292 to i32
  %17294 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %17295 = load i32, i32* %17294, align 4
  %17296 = and i32 %17295, 255
  %17297 = zext i32 %17296 to i64
  %17298 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17297, i32 0
  %17299 = load i64, i64* %17298, align 8
  %17300 = ashr i64 %17299, 35
  %17301 = trunc i64 %17300 to i32
  %17302 = add nuw nsw i64 %17297, 1
  %17303 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17302, i32 0
  %17304 = load i64, i64* %17303, align 8
  %17305 = ashr i64 %17304, 35
  %17306 = trunc i64 %17305 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler11I32x4ExtMulENS0_11XMMRegisterES2_S2_S2_bb(%"class.v8::internal::SharedTurboAssembler"* %17289, i32 %17293, i32 %17301, i32 %17306, i32 15, i1 zeroext false, i1 zeroext false) #11
  br label %23402

17307:                                            ; preds = %2
  %17308 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %17309 = and i32 %17308, 32
  %17310 = icmp eq i32 %17309, 0
  %17311 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %17312 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %17313 = load i64, i64* %17312, align 8
  %17314 = ashr i64 %17313, 35
  %17315 = trunc i64 %17314 to i32
  %17316 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %17317 = load i32, i32* %17316, align 4
  %17318 = and i32 %17317, 255
  %17319 = zext i32 %17318 to i64
  br i1 %17310, label %17330, label %17320

17320:                                            ; preds = %17307
  %17321 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17319, i32 0
  %17322 = load i64, i64* %17321, align 8
  %17323 = ashr i64 %17322, 35
  %17324 = trunc i64 %17323 to i32
  %17325 = add nuw nsw i64 %17319, 1
  %17326 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17325, i32 0
  %17327 = load i64, i64* %17326, align 8
  %17328 = ashr i64 %17327, 35
  %17329 = trunc i64 %17328 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %17311, i8 zeroext -37, i32 %17315, i32 %17324, i32 %17329, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

17330:                                            ; preds = %17307
  %17331 = add nuw nsw i64 %17319, 1
  %17332 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17331, i32 0
  %17333 = load i64, i64* %17332, align 8
  %17334 = ashr i64 %17333, 35
  %17335 = trunc i64 %17334 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %17311, i32 %17315, i32 %17335, i8 zeroext 102, i8 zeroext 15, i8 zeroext -37) #11
  br label %23402

17336:                                            ; preds = %2
  %17337 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %17338 = and i32 %17337, 32
  %17339 = icmp eq i32 %17338, 0
  %17340 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %17341 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %17342 = load i64, i64* %17341, align 8
  %17343 = ashr i64 %17342, 35
  %17344 = trunc i64 %17343 to i32
  %17345 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %17346 = load i32, i32* %17345, align 4
  %17347 = and i32 %17346, 255
  %17348 = zext i32 %17347 to i64
  br i1 %17339, label %17359, label %17349

17349:                                            ; preds = %17336
  %17350 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17348, i32 0
  %17351 = load i64, i64* %17350, align 8
  %17352 = ashr i64 %17351, 35
  %17353 = trunc i64 %17352 to i32
  %17354 = add nuw nsw i64 %17348, 1
  %17355 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17354, i32 0
  %17356 = load i64, i64* %17355, align 8
  %17357 = ashr i64 %17356, 35
  %17358 = trunc i64 %17357 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %17340, i8 zeroext -21, i32 %17344, i32 %17353, i32 %17358, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

17359:                                            ; preds = %17336
  %17360 = add nuw nsw i64 %17348, 1
  %17361 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17360, i32 0
  %17362 = load i64, i64* %17361, align 8
  %17363 = ashr i64 %17362, 35
  %17364 = trunc i64 %17363 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %17340, i32 %17344, i32 %17364, i8 zeroext 102, i8 zeroext 15, i8 zeroext -21) #11
  br label %23402

17365:                                            ; preds = %2
  %17366 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %17367 = and i32 %17366, 32
  %17368 = icmp eq i32 %17367, 0
  %17369 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %17370 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %17371 = load i64, i64* %17370, align 8
  %17372 = ashr i64 %17371, 35
  %17373 = trunc i64 %17372 to i32
  %17374 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %17375 = load i32, i32* %17374, align 4
  %17376 = and i32 %17375, 255
  %17377 = zext i32 %17376 to i64
  br i1 %17368, label %17388, label %17378

17378:                                            ; preds = %17365
  %17379 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17377, i32 0
  %17380 = load i64, i64* %17379, align 8
  %17381 = ashr i64 %17380, 35
  %17382 = trunc i64 %17381 to i32
  %17383 = add nuw nsw i64 %17377, 1
  %17384 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17383, i32 0
  %17385 = load i64, i64* %17384, align 8
  %17386 = ashr i64 %17385, 35
  %17387 = trunc i64 %17386 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %17369, i8 zeroext -17, i32 %17373, i32 %17382, i32 %17387, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

17388:                                            ; preds = %17365
  %17389 = add nuw nsw i64 %17377, 1
  %17390 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17389, i32 0
  %17391 = load i64, i64* %17390, align 8
  %17392 = ashr i64 %17391, 35
  %17393 = trunc i64 %17392 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %17369, i32 %17373, i32 %17393, i8 zeroext 102, i8 zeroext 15, i8 zeroext -17) #11
  br label %23402

17394:                                            ; preds = %2
  %17395 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %17396 = bitcast %"class.v8::internal::TurboAssembler"* %17395 to %"class.v8::internal::SharedTurboAssembler"*
  %17397 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %17398 = load i64, i64* %17397, align 8
  %17399 = ashr i64 %17398, 35
  %17400 = trunc i64 %17399 to i32
  %17401 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %17402 = load i32, i32* %17401, align 4
  %17403 = and i32 %17402, 255
  %17404 = zext i32 %17403 to i64
  %17405 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17404, i32 0
  %17406 = load i64, i64* %17405, align 8
  %17407 = ashr i64 %17406, 35
  %17408 = trunc i64 %17407 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler7S128NotENS0_11XMMRegisterES2_S2_(%"class.v8::internal::SharedTurboAssembler"* %17396, i32 %17400, i32 %17408, i32 15) #11
  br label %23402

17409:                                            ; preds = %2
  %17410 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %17411 = bitcast %"class.v8::internal::TurboAssembler"* %17410 to %"class.v8::internal::SharedTurboAssembler"*
  %17412 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %17413 = load i64, i64* %17412, align 8
  %17414 = ashr i64 %17413, 35
  %17415 = trunc i64 %17414 to i32
  %17416 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %17417 = load i32, i32* %17416, align 4
  %17418 = and i32 %17417, 255
  %17419 = zext i32 %17418 to i64
  %17420 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17419, i32 0
  %17421 = load i64, i64* %17420, align 8
  %17422 = ashr i64 %17421, 35
  %17423 = trunc i64 %17422 to i32
  %17424 = add nuw nsw i64 %17419, 1
  %17425 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17424, i32 0
  %17426 = load i64, i64* %17425, align 8
  %17427 = ashr i64 %17426, 35
  %17428 = trunc i64 %17427 to i32
  %17429 = add nuw nsw i64 %17419, 2
  %17430 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17429, i32 0
  %17431 = load i64, i64* %17430, align 8
  %17432 = ashr i64 %17431, 35
  %17433 = trunc i64 %17432 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler10S128SelectENS0_11XMMRegisterES2_S2_S2_S2_(%"class.v8::internal::SharedTurboAssembler"* %17411, i32 %17415, i32 %17423, i32 %17428, i32 %17433, i32 15) #11
  br label %23402

17434:                                            ; preds = %2
  %17435 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %17436 = load i64, i64* %17435, align 8
  %17437 = ashr i64 %17436, 35
  %17438 = trunc i64 %17437 to i32
  %17439 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %17440 = load i32, i32* %17439, align 4
  %17441 = and i32 %17440, 255
  %17442 = add nuw nsw i32 %17441, 1
  %17443 = zext i32 %17442 to i64
  %17444 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17443, i32 0
  %17445 = load i64, i64* %17444, align 8
  %17446 = ashr i64 %17445, 35
  %17447 = trunc i64 %17446 to i32
  %17448 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %17449 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %17450 = and i32 %17449, 32
  %17451 = icmp eq i32 %17450, 0
  br i1 %17451, label %17453, label %17452

17452:                                            ; preds = %17434
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %17448, i8 zeroext 85, i32 %17438, i32 %17438, i32 %17447) #11
  br label %23402

17453:                                            ; preds = %17434
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %17448, i32 %17438, i32 %17447, i8 zeroext 15, i8 zeroext 85) #11
  br label %23402

17454:                                            ; preds = %2
  %17455 = icmp ugt i32 %275, 4194303
  %17456 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %17457 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %17458 = load i64, i64* %17457, align 8
  %17459 = ashr i64 %17458, 35
  %17460 = trunc i64 %17459 to i32
  %17461 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %17462 = load i32, i32* %17461, align 4
  %17463 = and i32 %17462, 255
  %17464 = zext i32 %17463 to i64
  %17465 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17464, i32 0
  %17466 = load i64, i64* %17465, align 8
  %17467 = ashr i64 %17466, 35
  %17468 = trunc i64 %17467 to i32
  %17469 = add nuw nsw i64 %17464, 1
  %17470 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17469, i32 0
  %17471 = load i64, i64* %17470, align 8
  %17472 = ashr i64 %17471, 35
  %17473 = trunc i64 %17472 to i32
  tail call void @_ZN2v88internal14TurboAssembler12I8x16SwizzleENS0_11XMMRegisterES2_S2_b(%"class.v8::internal::TurboAssembler"* %17456, i32 %17460, i32 %17468, i32 %17473, i1 zeroext %17455) #11
  br label %23402

17474:                                            ; preds = %2
  %17475 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %17476 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %17477 = load i64, i64* %17476, align 8
  %17478 = ashr i64 %17477, 35
  %17479 = trunc i64 %17478 to i32
  %17480 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %17481 = load i32, i32* %17480, align 4
  %17482 = and i32 %17481, 255
  %17483 = lshr i32 %17481, 8
  %17484 = and i32 %17483, 65535
  %17485 = add nuw nsw i32 %17484, %17482
  %17486 = zext i32 %17485 to i64
  %17487 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17486, i32 0
  %17488 = load i64, i64* %17487, align 8
  %17489 = ashr i64 %17488, 35
  %17490 = trunc i64 %17489 to i32
  %17491 = and i32 %17481, 16776960
  %17492 = icmp eq i32 %17491, 1280
  br i1 %17492, label %17493, label %17539

17493:                                            ; preds = %17474
  %17494 = add nuw nsw i32 %17482, 4
  %17495 = zext i32 %17494 to i64
  %17496 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17495
  %17497 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %17475, %"class.v8::internal::compiler::InstructionOperand"* %17496) #11
  %17498 = extractvalue { i64, i64 } %17497, 1
  %17499 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %17500 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %17499, i64 0, i32 1
  %17501 = load i32, i32* %17500, align 4
  %17502 = and i32 %17501, 255
  %17503 = add nuw nsw i32 %17502, 3
  %17504 = zext i32 %17503 to i64
  %17505 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %17499, i64 0, i32 5, i64 %17504
  %17506 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %17475, %"class.v8::internal::compiler::InstructionOperand"* %17505) #11
  %17507 = extractvalue { i64, i64 } %17506, 1
  %17508 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %17509 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %17508, i64 0, i32 1
  %17510 = load i32, i32* %17509, align 4
  %17511 = and i32 %17510, 255
  %17512 = add nuw nsw i32 %17511, 2
  %17513 = zext i32 %17512 to i64
  %17514 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %17508, i64 0, i32 5, i64 %17513
  %17515 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %17475, %"class.v8::internal::compiler::InstructionOperand"* %17514) #11
  %17516 = extractvalue { i64, i64 } %17515, 1
  %17517 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %17518 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %17517, i64 0, i32 1
  %17519 = load i32, i32* %17518, align 4
  %17520 = and i32 %17519, 255
  %17521 = add nuw nsw i32 %17520, 1
  %17522 = zext i32 %17521 to i64
  %17523 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %17517, i64 0, i32 5, i64 %17522
  %17524 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %17475, %"class.v8::internal::compiler::InstructionOperand"* %17523) #11
  %17525 = extractvalue { i64, i64 } %17524, 1
  %17526 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %17527 = shl i64 %17498, 32
  %17528 = and i64 %17507, 4294967295
  %17529 = or i64 %17527, %17528
  %17530 = shl i64 %17516, 32
  %17531 = and i64 %17525, 4294967295
  %17532 = or i64 %17530, %17531
  call void @_ZN2v88internal14TurboAssembler4MoveENS0_11XMMRegisterEmm(%"class.v8::internal::TurboAssembler"* %17526, i32 %17490, i64 %17529, i64 %17532) #11
  %17533 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %17526, i64 0, i32 0, i32 0, i32 0
  %17534 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %17535 = and i32 %17534, 32
  %17536 = icmp eq i32 %17535, 0
  br i1 %17536, label %17538, label %17537

17537:                                            ; preds = %17493
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %17533, i8 zeroext 0, i32 %17479, i32 %17479, i32 %17490, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

17538:                                            ; preds = %17493
  call void @_ZN2v88internal9Assembler11ssse3_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %17533, i32 %17479, i32 %17490, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 0) #11
  br label %23402

17539:                                            ; preds = %17474
  %17540 = zext i32 %17482 to i64
  %17541 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17540, i32 0
  %17542 = load i64, i64* %17541, align 8
  %17543 = and i64 %17542, 7
  %17544 = icmp ugt i64 %17543, 4
  %17545 = and i64 %17542, 24
  %17546 = icmp eq i64 %17545, 0
  %17547 = and i1 %17544, %17546
  br i1 %17547, label %17551, label %17548

17548:                                            ; preds = %17539
  %17549 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %17550 = bitcast %"class.v8::internal::TurboAssembler"* %17549 to %"class.v8::internal::SharedTurboAssembler"*
  br label %17565

17551:                                            ; preds = %17539
  %17552 = and i64 %17542, 8160
  %17553 = icmp eq i64 %17552, 448
  %17554 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %17555 = bitcast %"class.v8::internal::TurboAssembler"* %17554 to %"class.v8::internal::SharedTurboAssembler"*
  br i1 %17553, label %17556, label %17565

17556:                                            ; preds = %17551
  %17557 = ashr i64 %17542, 35
  %17558 = trunc i64 %17557 to i32
  %17559 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %17560 = and i32 %17559, 32
  %17561 = icmp eq i32 %17560, 0
  %17562 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %17554, i64 0, i32 0, i32 0, i32 0
  br i1 %17561, label %17564, label %17563

17563:                                            ; preds = %17556
  tail call void @_ZN2v88internal9Assembler7vmovdquENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %17562, i32 15, i32 %17558) #11
  br label %17579

17564:                                            ; preds = %17556
  tail call void @_ZN2v88internal9Assembler6movupsENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %17562, i32 15, i32 %17558) #11
  br label %17579

17565:                                            ; preds = %17548, %17551
  %17566 = phi %"class.v8::internal::SharedTurboAssembler"* [ %17550, %17548 ], [ %17555, %17551 ]
  %17567 = phi %"class.v8::internal::TurboAssembler"* [ %17549, %17548 ], [ %17554, %17551 ]
  %17568 = ashr i64 %17542, 35
  %17569 = trunc i64 %17568 to i32
  %17570 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %17569, i32 0) #11
  %17571 = extractvalue { i64, i32 } %17570, 0
  %17572 = extractvalue { i64, i32 } %17570, 1
  %17573 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %17574 = and i32 %17573, 32
  %17575 = icmp eq i32 %17574, 0
  %17576 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %17566, i64 0, i32 0, i32 0
  br i1 %17575, label %17578, label %17577

17577:                                            ; preds = %17565
  call void @_ZN2v88internal9Assembler7vmovdquENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %17576, i32 15, i64 %17571, i32 %17572) #11
  br label %17579

17578:                                            ; preds = %17565
  call void @_ZN2v88internal9Assembler6movupsENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %17576, i32 15, i64 %17571, i32 %17572) #11
  br label %17579

17579:                                            ; preds = %17578, %17577, %17564, %17563
  %17580 = phi %"class.v8::internal::SharedTurboAssembler"* [ %17555, %17563 ], [ %17555, %17564 ], [ %17566, %17577 ], [ %17566, %17578 ]
  %17581 = phi %"class.v8::internal::TurboAssembler"* [ %17554, %17563 ], [ %17554, %17564 ], [ %17567, %17577 ], [ %17567, %17578 ]
  %17582 = bitcast [4 x i32]* %222 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17582) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17582, i8 0, i64 16, i1 false)
  %17583 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %17584 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %17583, i64 0, i32 1
  %17585 = load i32, i32* %17584, align 4
  %17586 = and i32 %17585, 255
  %17587 = add nuw nsw i32 %17586, 5
  %17588 = zext i32 %17587 to i64
  %17589 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %17583, i64 0, i32 5, i64 %17588
  %17590 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %17475, %"class.v8::internal::compiler::InstructionOperand"* %17589) #11
  %17591 = extractvalue { i64, i64 } %17590, 1
  %17592 = trunc i64 %17591 to i32
  %17593 = getelementptr inbounds [4 x i32], [4 x i32]* %222, i64 0, i64 3
  %17594 = and i32 %17592, 255
  %17595 = icmp ult i32 %17594, 16
  %17596 = select i1 %17595, i32 %17594, i32 128
  %17597 = lshr i32 %17592, 8
  %17598 = and i32 %17597, 255
  %17599 = icmp ult i32 %17598, 16
  %17600 = shl nuw nsw i32 %17598, 8
  %17601 = select i1 %17599, i32 %17600, i32 32768
  %17602 = or i32 %17596, %17601
  %17603 = lshr i32 %17592, 16
  %17604 = and i32 %17603, 255
  %17605 = icmp ult i32 %17604, 16
  %17606 = shl nuw nsw i32 %17604, 16
  %17607 = select i1 %17605, i32 %17606, i32 8388608
  %17608 = or i32 %17602, %17607
  %17609 = and i32 %17592, -16777216
  %17610 = icmp ult i32 %17592, 268435456
  %17611 = select i1 %17610, i32 %17609, i32 -2147483648
  %17612 = or i32 %17608, %17611
  store i32 %17612, i32* %17593, align 4
  %17613 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %17614 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %17613, i64 0, i32 1
  %17615 = load i32, i32* %17614, align 4
  %17616 = and i32 %17615, 255
  %17617 = add nuw nsw i32 %17616, 4
  %17618 = zext i32 %17617 to i64
  %17619 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %17613, i64 0, i32 5, i64 %17618
  %17620 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %17475, %"class.v8::internal::compiler::InstructionOperand"* %17619) #11
  %17621 = extractvalue { i64, i64 } %17620, 1
  %17622 = trunc i64 %17621 to i32
  %17623 = getelementptr inbounds [4 x i32], [4 x i32]* %222, i64 0, i64 2
  %17624 = and i32 %17622, 255
  %17625 = icmp ult i32 %17624, 16
  %17626 = select i1 %17625, i32 %17624, i32 128
  %17627 = lshr i32 %17622, 8
  %17628 = and i32 %17627, 255
  %17629 = icmp ult i32 %17628, 16
  %17630 = shl nuw nsw i32 %17628, 8
  %17631 = select i1 %17629, i32 %17630, i32 32768
  %17632 = or i32 %17626, %17631
  %17633 = lshr i32 %17622, 16
  %17634 = and i32 %17633, 255
  %17635 = icmp ult i32 %17634, 16
  %17636 = shl nuw nsw i32 %17634, 16
  %17637 = select i1 %17635, i32 %17636, i32 8388608
  %17638 = or i32 %17632, %17637
  %17639 = and i32 %17622, -16777216
  %17640 = icmp ult i32 %17622, 268435456
  %17641 = select i1 %17640, i32 %17639, i32 -2147483648
  %17642 = or i32 %17638, %17641
  store i32 %17642, i32* %17623, align 8
  %17643 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %17644 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %17643, i64 0, i32 1
  %17645 = load i32, i32* %17644, align 4
  %17646 = and i32 %17645, 255
  %17647 = add nuw nsw i32 %17646, 3
  %17648 = zext i32 %17647 to i64
  %17649 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %17643, i64 0, i32 5, i64 %17648
  %17650 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %17475, %"class.v8::internal::compiler::InstructionOperand"* %17649) #11
  %17651 = extractvalue { i64, i64 } %17650, 1
  %17652 = trunc i64 %17651 to i32
  %17653 = getelementptr inbounds [4 x i32], [4 x i32]* %222, i64 0, i64 1
  %17654 = and i32 %17652, 255
  %17655 = icmp ult i32 %17654, 16
  %17656 = select i1 %17655, i32 %17654, i32 128
  %17657 = lshr i32 %17652, 8
  %17658 = and i32 %17657, 255
  %17659 = icmp ult i32 %17658, 16
  %17660 = shl nuw nsw i32 %17658, 8
  %17661 = select i1 %17659, i32 %17660, i32 32768
  %17662 = or i32 %17656, %17661
  %17663 = lshr i32 %17652, 16
  %17664 = and i32 %17663, 255
  %17665 = icmp ult i32 %17664, 16
  %17666 = shl nuw nsw i32 %17664, 16
  %17667 = select i1 %17665, i32 %17666, i32 8388608
  %17668 = or i32 %17662, %17667
  %17669 = and i32 %17652, -16777216
  %17670 = icmp ult i32 %17652, 268435456
  %17671 = select i1 %17670, i32 %17669, i32 -2147483648
  %17672 = or i32 %17668, %17671
  store i32 %17672, i32* %17653, align 4
  %17673 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %17674 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %17673, i64 0, i32 1
  %17675 = load i32, i32* %17674, align 4
  %17676 = and i32 %17675, 255
  %17677 = add nuw nsw i32 %17676, 2
  %17678 = zext i32 %17677 to i64
  %17679 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %17673, i64 0, i32 5, i64 %17678
  %17680 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %17475, %"class.v8::internal::compiler::InstructionOperand"* %17679) #11
  %17681 = extractvalue { i64, i64 } %17680, 1
  %17682 = trunc i64 %17681 to i32
  %17683 = getelementptr inbounds [4 x i32], [4 x i32]* %222, i64 0, i64 0
  %17684 = load i32, i32* %17683, align 16
  %17685 = and i32 %17682, 255
  %17686 = icmp ult i32 %17685, 16
  %17687 = select i1 %17686, i32 %17685, i32 128
  %17688 = or i32 %17684, %17687
  %17689 = lshr i32 %17682, 8
  %17690 = and i32 %17689, 255
  %17691 = icmp ult i32 %17690, 16
  %17692 = shl nuw nsw i32 %17690, 8
  %17693 = select i1 %17691, i32 %17692, i32 32768
  %17694 = or i32 %17688, %17693
  %17695 = lshr i32 %17682, 16
  %17696 = and i32 %17695, 255
  %17697 = icmp ult i32 %17696, 16
  %17698 = shl nuw nsw i32 %17696, 16
  %17699 = select i1 %17697, i32 %17698, i32 8388608
  %17700 = or i32 %17694, %17699
  %17701 = and i32 %17682, -16777216
  %17702 = icmp ult i32 %17682, 268435456
  %17703 = select i1 %17702, i32 %17701, i32 -2147483648
  %17704 = or i32 %17700, %17703
  store i32 %17704, i32* %17683, align 16
  %17705 = zext i32 %17612 to i64
  %17706 = shl nuw i64 %17705, 32
  %17707 = zext i32 %17642 to i64
  %17708 = or i64 %17706, %17707
  %17709 = zext i32 %17672 to i64
  %17710 = shl nuw i64 %17709, 32
  %17711 = zext i32 %17704 to i64
  %17712 = or i64 %17710, %17711
  call void @_ZN2v88internal14TurboAssembler4MoveENS0_11XMMRegisterEmm(%"class.v8::internal::TurboAssembler"* %17581, i32 %17490, i64 %17708, i64 %17712) #11
  %17713 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %17581, i64 0, i32 0, i32 0, i32 0
  %17714 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %17715 = and i32 %17714, 32
  %17716 = icmp eq i32 %17715, 0
  br i1 %17716, label %17718, label %17717

17717:                                            ; preds = %17579
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %17713, i8 zeroext 0, i32 15, i32 15, i32 %17490, i32 1, i32 2, i32 0, i32 5) #11
  br label %17719

17718:                                            ; preds = %17579
  call void @_ZN2v88internal9Assembler11ssse3_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %17713, i32 15, i32 %17490, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 0) #11
  br label %17719

17719:                                            ; preds = %17717, %17718
  %17720 = bitcast [4 x i32]* %223 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17720) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17720, i8 0, i64 16, i1 false)
  %17721 = load i32, i32* %17480, align 4
  %17722 = and i32 %17721, 255
  %17723 = add nuw nsw i32 %17722, 1
  %17724 = zext i32 %17723 to i64
  %17725 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17724, i32 0
  %17726 = load i64, i64* %17725, align 8
  %17727 = and i64 %17726, 7
  %17728 = icmp ugt i64 %17727, 4
  %17729 = and i64 %17726, 8184
  %17730 = icmp eq i64 %17729, 448
  %17731 = and i1 %17730, %17728
  %17732 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %17733 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %17732, i64 0, i32 1
  %17734 = load i32, i32* %17733, align 4
  %17735 = and i32 %17734, 255
  %17736 = add nuw nsw i32 %17735, 1
  %17737 = zext i32 %17736 to i64
  %17738 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %17732, i64 0, i32 5, i64 %17737, i32 0
  %17739 = load i64, i64* %17738, align 8
  %17740 = ashr i64 %17739, 35
  %17741 = trunc i64 %17740 to i32
  br i1 %17731, label %17742, label %17745

17742:                                            ; preds = %17719
  %17743 = icmp eq i32 %17741, %17479
  br i1 %17743, label %17755, label %17744

17744:                                            ; preds = %17742
  call void @_ZN2v88internal14TurboAssembler6MovdqaENS0_11XMMRegisterES2_(%"class.v8::internal::TurboAssembler"* %17581, i32 %17479, i32 %17741) #11
  br label %17755

17745:                                            ; preds = %17719
  %17746 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %17741, i32 0) #11
  %17747 = extractvalue { i64, i32 } %17746, 0
  %17748 = extractvalue { i64, i32 } %17746, 1
  %17749 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %17750 = and i32 %17749, 32
  %17751 = icmp eq i32 %17750, 0
  %17752 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %17580, i64 0, i32 0, i32 0
  br i1 %17751, label %17754, label %17753

17753:                                            ; preds = %17745
  call void @_ZN2v88internal9Assembler7vmovdquENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %17752, i32 %17479, i64 %17747, i32 %17748) #11
  br label %17755

17754:                                            ; preds = %17745
  call void @_ZN2v88internal9Assembler6movupsENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %17752, i32 %17479, i64 %17747, i32 %17748) #11
  br label %17755

17755:                                            ; preds = %17742, %17754, %17753, %17744
  %17756 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %17757 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %17756, i64 0, i32 1
  %17758 = load i32, i32* %17757, align 4
  %17759 = and i32 %17758, 255
  %17760 = add nuw nsw i32 %17759, 5
  %17761 = zext i32 %17760 to i64
  %17762 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %17756, i64 0, i32 5, i64 %17761
  %17763 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %17475, %"class.v8::internal::compiler::InstructionOperand"* %17762) #11
  %17764 = extractvalue { i64, i64 } %17763, 1
  %17765 = trunc i64 %17764 to i32
  %17766 = getelementptr inbounds [4 x i32], [4 x i32]* %223, i64 0, i64 3
  %17767 = and i32 %17765, 240
  %17768 = icmp eq i32 %17767, 0
  %17769 = and i32 %17765, 15
  %17770 = select i1 %17768, i32 128, i32 %17769
  %17771 = and i32 %17765, 61440
  %17772 = icmp eq i32 %17771, 0
  %17773 = and i32 %17765, 3840
  %17774 = select i1 %17772, i32 32768, i32 %17773
  %17775 = or i32 %17770, %17774
  %17776 = and i32 %17765, 15728640
  %17777 = icmp eq i32 %17776, 0
  %17778 = and i32 %17765, 983040
  %17779 = select i1 %17777, i32 8388608, i32 %17778
  %17780 = or i32 %17775, %17779
  %17781 = icmp ult i32 %17765, 268435456
  %17782 = and i32 %17765, 251658240
  %17783 = select i1 %17781, i32 -2147483648, i32 %17782
  %17784 = or i32 %17780, %17783
  store i32 %17784, i32* %17766, align 4
  %17785 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %17786 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %17785, i64 0, i32 1
  %17787 = load i32, i32* %17786, align 4
  %17788 = and i32 %17787, 255
  %17789 = add nuw nsw i32 %17788, 4
  %17790 = zext i32 %17789 to i64
  %17791 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %17785, i64 0, i32 5, i64 %17790
  %17792 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %17475, %"class.v8::internal::compiler::InstructionOperand"* %17791) #11
  %17793 = extractvalue { i64, i64 } %17792, 1
  %17794 = trunc i64 %17793 to i32
  %17795 = getelementptr inbounds [4 x i32], [4 x i32]* %223, i64 0, i64 2
  %17796 = and i32 %17794, 240
  %17797 = icmp eq i32 %17796, 0
  %17798 = and i32 %17794, 15
  %17799 = select i1 %17797, i32 128, i32 %17798
  %17800 = and i32 %17794, 61440
  %17801 = icmp eq i32 %17800, 0
  %17802 = and i32 %17794, 3840
  %17803 = select i1 %17801, i32 32768, i32 %17802
  %17804 = or i32 %17799, %17803
  %17805 = and i32 %17794, 15728640
  %17806 = icmp eq i32 %17805, 0
  %17807 = and i32 %17794, 983040
  %17808 = select i1 %17806, i32 8388608, i32 %17807
  %17809 = or i32 %17804, %17808
  %17810 = icmp ult i32 %17794, 268435456
  %17811 = and i32 %17794, 251658240
  %17812 = select i1 %17810, i32 -2147483648, i32 %17811
  %17813 = or i32 %17809, %17812
  store i32 %17813, i32* %17795, align 8
  %17814 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %17815 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %17814, i64 0, i32 1
  %17816 = load i32, i32* %17815, align 4
  %17817 = and i32 %17816, 255
  %17818 = add nuw nsw i32 %17817, 3
  %17819 = zext i32 %17818 to i64
  %17820 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %17814, i64 0, i32 5, i64 %17819
  %17821 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %17475, %"class.v8::internal::compiler::InstructionOperand"* %17820) #11
  %17822 = extractvalue { i64, i64 } %17821, 1
  %17823 = trunc i64 %17822 to i32
  %17824 = getelementptr inbounds [4 x i32], [4 x i32]* %223, i64 0, i64 1
  %17825 = and i32 %17823, 240
  %17826 = icmp eq i32 %17825, 0
  %17827 = and i32 %17823, 15
  %17828 = select i1 %17826, i32 128, i32 %17827
  %17829 = and i32 %17823, 61440
  %17830 = icmp eq i32 %17829, 0
  %17831 = and i32 %17823, 3840
  %17832 = select i1 %17830, i32 32768, i32 %17831
  %17833 = or i32 %17828, %17832
  %17834 = and i32 %17823, 15728640
  %17835 = icmp eq i32 %17834, 0
  %17836 = and i32 %17823, 983040
  %17837 = select i1 %17835, i32 8388608, i32 %17836
  %17838 = or i32 %17833, %17837
  %17839 = icmp ult i32 %17823, 268435456
  %17840 = and i32 %17823, 251658240
  %17841 = select i1 %17839, i32 -2147483648, i32 %17840
  %17842 = or i32 %17838, %17841
  store i32 %17842, i32* %17824, align 4
  %17843 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %17844 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %17843, i64 0, i32 1
  %17845 = load i32, i32* %17844, align 4
  %17846 = and i32 %17845, 255
  %17847 = add nuw nsw i32 %17846, 2
  %17848 = zext i32 %17847 to i64
  %17849 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %17843, i64 0, i32 5, i64 %17848
  %17850 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %17475, %"class.v8::internal::compiler::InstructionOperand"* %17849) #11
  %17851 = extractvalue { i64, i64 } %17850, 1
  %17852 = trunc i64 %17851 to i32
  %17853 = getelementptr inbounds [4 x i32], [4 x i32]* %223, i64 0, i64 0
  %17854 = load i32, i32* %17853, align 16
  %17855 = and i32 %17852, 240
  %17856 = icmp eq i32 %17855, 0
  %17857 = and i32 %17852, 15
  %17858 = select i1 %17856, i32 128, i32 %17857
  %17859 = or i32 %17854, %17858
  %17860 = and i32 %17852, 61440
  %17861 = icmp eq i32 %17860, 0
  %17862 = and i32 %17852, 3840
  %17863 = select i1 %17861, i32 32768, i32 %17862
  %17864 = or i32 %17859, %17863
  %17865 = and i32 %17852, 15728640
  %17866 = icmp eq i32 %17865, 0
  %17867 = and i32 %17852, 983040
  %17868 = select i1 %17866, i32 8388608, i32 %17867
  %17869 = or i32 %17864, %17868
  %17870 = icmp ult i32 %17852, 268435456
  %17871 = and i32 %17852, 251658240
  %17872 = select i1 %17870, i32 -2147483648, i32 %17871
  %17873 = or i32 %17869, %17872
  store i32 %17873, i32* %17853, align 16
  %17874 = load i32, i32* %17766, align 4
  %17875 = zext i32 %17874 to i64
  %17876 = shl nuw i64 %17875, 32
  %17877 = zext i32 %17813 to i64
  %17878 = or i64 %17876, %17877
  %17879 = zext i32 %17842 to i64
  %17880 = shl nuw i64 %17879, 32
  %17881 = zext i32 %17873 to i64
  %17882 = or i64 %17880, %17881
  call void @_ZN2v88internal14TurboAssembler4MoveENS0_11XMMRegisterEmm(%"class.v8::internal::TurboAssembler"* %17581, i32 %17490, i64 %17878, i64 %17882) #11
  %17883 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %17884 = and i32 %17883, 32
  %17885 = icmp eq i32 %17884, 0
  br i1 %17885, label %17887, label %17886

17886:                                            ; preds = %17755
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %17713, i8 zeroext 0, i32 %17479, i32 %17479, i32 %17490, i32 1, i32 2, i32 0, i32 5) #11
  br label %17888

17887:                                            ; preds = %17755
  call void @_ZN2v88internal9Assembler11ssse3_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %17713, i32 %17479, i32 %17490, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 0) #11
  br label %17888

17888:                                            ; preds = %17886, %17887
  %17889 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %17580, i64 0, i32 0, i32 0
  %17890 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %17891 = and i32 %17890, 32
  %17892 = icmp eq i32 %17891, 0
  br i1 %17892, label %17894, label %17893

17893:                                            ; preds = %17888
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %17889, i8 zeroext -21, i32 %17479, i32 %17479, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %17895

17894:                                            ; preds = %17888
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %17889, i32 %17479, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -21) #11
  br label %17895

17895:                                            ; preds = %17893, %17894
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17720) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17582) #11
  br label %23402

17896:                                            ; preds = %2
  %17897 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %17898 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %17899 = load i64, i64* %17898, align 8
  %17900 = ashr i64 %17899, 35
  %17901 = trunc i64 %17900 to i32
  %17902 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %17903 = load i32, i32* %17902, align 4
  %17904 = and i32 %17903, 255
  %17905 = zext i32 %17904 to i64
  %17906 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17905, i32 0
  %17907 = load i64, i64* %17906, align 8
  %17908 = ashr i64 %17907, 35
  %17909 = trunc i64 %17908 to i32
  %17910 = lshr i32 %17903, 8
  %17911 = and i32 %17910, 65535
  %17912 = add nuw nsw i32 %17911, %17904
  %17913 = zext i32 %17912 to i64
  %17914 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %17913, i32 0
  %17915 = load i64, i64* %17914, align 8
  %17916 = ashr i64 %17915, 35
  %17917 = trunc i64 %17916 to i32
  tail call void @_ZN2v88internal14TurboAssembler11I8x16PopcntENS0_11XMMRegisterES2_S2_(%"class.v8::internal::TurboAssembler"* %17897, i32 %17901, i32 %17909, i32 %17917) #11
  br label %23402

17918:                                            ; preds = %2
  %17919 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %17920 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %17919, align 8
  %17921 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %17922 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %17923 = bitcast i8** %17922 to i64*
  %17924 = load i64, i64* %17923, align 8
  %17925 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %17926 = bitcast i8** %17925 to i64*
  %17927 = load i64, i64* %17926, align 8
  %17928 = sub i64 %17924, %17927
  %17929 = trunc i64 %17928 to i32
  %17930 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %17931 = and i32 %275, -1073741824
  %17932 = icmp eq i32 %17931, 1073741824
  br i1 %17932, label %17933, label %17954

17933:                                            ; preds = %17918
  %17934 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %17920, i64 0, i32 2
  %17935 = load i64, i64* %17934, align 8
  %17936 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %17920, i64 0, i32 3
  %17937 = load i64, i64* %17936, align 8
  %17938 = sub i64 %17937, %17935
  %17939 = icmp ult i64 %17938, 72
  br i1 %17939, label %17940, label %17942, !prof !3

17940:                                            ; preds = %17933
  %17941 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %17920, i64 72) #11
  br label %17944

17942:                                            ; preds = %17933
  %17943 = add i64 %17935, 72
  store i64 %17943, i64* %17934, align 8
  br label %17944

17944:                                            ; preds = %17942, %17940
  %17945 = phi i64 [ %17941, %17940 ], [ %17935, %17942 ]
  %17946 = inttoptr i64 %17945 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %17947 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %17946, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %17947, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %17948 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %17946, i64 0, i32 0, i32 0, i32 0
  %17949 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %17946, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %17949, align 8
  %17950 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %17946, i64 0, i32 0, i32 2
  %17951 = bitcast %"class.v8::internal::compiler::Instruction"** %17950 to i64*
  store i64 %17930, i64* %17951, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17948, align 8
  %17952 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %17946, i64 0, i32 1
  store i32 %17929, i32* %17952, align 8
  %17953 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  br label %17954

17954:                                            ; preds = %17918, %17944
  %17955 = phi %"class.v8::internal::compiler::Instruction"* [ %1, %17918 ], [ %17953, %17944 ]
  %17956 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %17955, i64 0, i32 5, i64 0, i32 0
  %17957 = load i64, i64* %17956, align 8
  %17958 = ashr i64 %17957, 35
  %17959 = trunc i64 %17958 to i32
  %17960 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %17961 = and i32 %17960, 64
  %17962 = icmp eq i32 %17961, 0
  br i1 %17962, label %17969, label %17963

17963:                                            ; preds = %17954
  %17964 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %17921, i64 0, i32 0, i32 0, i32 0
  %17965 = bitcast i64* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17965)
  store i64 0, i64* %29, align 8
  %17966 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17965)
  %17967 = extractvalue { i64, i32 } %17966, 0
  %17968 = extractvalue { i64, i32 } %17966, 1
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %17964, i8 zeroext 120, i32 %17959, i32 0, i64 %17967, i32 %17968, i32 1, i32 2, i32 0, i32 6) #11
  br label %23402

17969:                                            ; preds = %17954
  %17970 = bitcast i64* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17970)
  store i64 0, i64* %30, align 8
  %17971 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17970)
  %17972 = extractvalue { i64, i32 } %17971, 0
  %17973 = extractvalue { i64, i32 } %17971, 1
  call void @_ZN2v88internal14TurboAssembler6PinsrbENS0_11XMMRegisterES2_NS0_7OperandEh(%"class.v8::internal::TurboAssembler"* %17921, i32 %17959, i32 %17959, i64 %17972, i32 %17973, i8 zeroext 0) #11
  %17974 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %17921, i64 0, i32 0, i32 0, i32 0
  %17975 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %17976 = and i32 %17975, 32
  %17977 = icmp eq i32 %17976, 0
  br i1 %17977, label %17979, label %17978

17978:                                            ; preds = %17969
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %17974, i8 zeroext -17, i32 15, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %17980

17979:                                            ; preds = %17969
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %17974, i32 15, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -17) #11
  br label %17980

17980:                                            ; preds = %17978, %17979
  %17981 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %17982 = and i32 %17981, 32
  %17983 = icmp eq i32 %17982, 0
  br i1 %17983, label %17985, label %17984

17984:                                            ; preds = %17980
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %17974, i8 zeroext 0, i32 %17959, i32 %17959, i32 15, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

17985:                                            ; preds = %17980
  call void @_ZN2v88internal9Assembler11ssse3_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %17974, i32 %17959, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 0) #11
  br label %23402

17986:                                            ; preds = %2
  %17987 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %17988 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %17987, align 8
  %17989 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %17990 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %17991 = bitcast i8** %17990 to i64*
  %17992 = load i64, i64* %17991, align 8
  %17993 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %17994 = bitcast i8** %17993 to i64*
  %17995 = load i64, i64* %17994, align 8
  %17996 = sub i64 %17992, %17995
  %17997 = trunc i64 %17996 to i32
  %17998 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %17999 = and i32 %275, -1073741824
  %18000 = icmp eq i32 %17999, 1073741824
  br i1 %18000, label %18001, label %18022

18001:                                            ; preds = %17986
  %18002 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %17988, i64 0, i32 2
  %18003 = load i64, i64* %18002, align 8
  %18004 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %17988, i64 0, i32 3
  %18005 = load i64, i64* %18004, align 8
  %18006 = sub i64 %18005, %18003
  %18007 = icmp ult i64 %18006, 72
  br i1 %18007, label %18008, label %18010, !prof !3

18008:                                            ; preds = %18001
  %18009 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %17988, i64 72) #11
  br label %18012

18010:                                            ; preds = %18001
  %18011 = add i64 %18003, 72
  store i64 %18011, i64* %18002, align 8
  br label %18012

18012:                                            ; preds = %18010, %18008
  %18013 = phi i64 [ %18009, %18008 ], [ %18003, %18010 ]
  %18014 = inttoptr i64 %18013 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %18015 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18014, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %18015, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %18016 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18014, i64 0, i32 0, i32 0, i32 0
  %18017 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18014, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %18017, align 8
  %18018 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18014, i64 0, i32 0, i32 2
  %18019 = bitcast %"class.v8::internal::compiler::Instruction"** %18018 to i64*
  store i64 %17998, i64* %18019, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18016, align 8
  %18020 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18014, i64 0, i32 1
  store i32 %17997, i32* %18020, align 8
  %18021 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  br label %18022

18022:                                            ; preds = %17986, %18012
  %18023 = phi %"class.v8::internal::compiler::Instruction"* [ %1, %17986 ], [ %18021, %18012 ]
  %18024 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18023, i64 0, i32 5, i64 0, i32 0
  %18025 = load i64, i64* %18024, align 8
  %18026 = ashr i64 %18025, 35
  %18027 = trunc i64 %18026 to i32
  %18028 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %18029 = and i32 %18028, 64
  %18030 = icmp eq i32 %18029, 0
  br i1 %18030, label %18037, label %18031

18031:                                            ; preds = %18022
  %18032 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %17989, i64 0, i32 0, i32 0, i32 0
  %18033 = bitcast i64* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18033)
  store i64 0, i64* %31, align 8
  %18034 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18033)
  %18035 = extractvalue { i64, i32 } %18034, 0
  %18036 = extractvalue { i64, i32 } %18034, 1
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %18032, i8 zeroext 121, i32 %18027, i32 0, i64 %18035, i32 %18036, i32 1, i32 2, i32 0, i32 6) #11
  br label %23402

18037:                                            ; preds = %18022
  %18038 = bitcast i64* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18038)
  store i64 0, i64* %32, align 8
  %18039 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %32) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18038)
  %18040 = extractvalue { i64, i32 } %18039, 0
  %18041 = extractvalue { i64, i32 } %18039, 1
  call void @_ZN2v88internal14TurboAssembler6PinsrwENS0_11XMMRegisterES2_NS0_7OperandEh(%"class.v8::internal::TurboAssembler"* %17989, i32 %18027, i32 %18027, i64 %18040, i32 %18041, i8 zeroext 0) #11
  %18042 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %17989, i64 0, i32 0, i32 0, i32 0
  %18043 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %18044 = and i32 %18043, 32
  %18045 = icmp eq i32 %18044, 0
  br i1 %18045, label %18049, label %18046

18046:                                            ; preds = %18037
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %18042, i8 zeroext 112, i32 %18027, i32 0, i32 %18027, i32 3, i32 1, i32 0, i32 5) #11
  %18047 = load i8*, i8** %17990, align 8
  %18048 = getelementptr inbounds i8, i8* %18047, i64 1
  store i8* %18048, i8** %17990, align 8
  store i8 0, i8* %18047, align 1
  br label %18050

18049:                                            ; preds = %18037
  call void @_ZN2v88internal9Assembler7pshuflwENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %18042, i32 %18027, i32 %18027, i8 zeroext 0) #11
  br label %18050

18050:                                            ; preds = %18046, %18049
  %18051 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %18052 = and i32 %18051, 32
  %18053 = icmp eq i32 %18052, 0
  br i1 %18053, label %18055, label %18054

18054:                                            ; preds = %18050
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %18042, i8 zeroext 108, i32 %18027, i32 %18027, i32 %18027, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

18055:                                            ; preds = %18050
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %18042, i32 %18027, i32 %18027, i8 zeroext 102, i8 zeroext 15, i8 zeroext 108) #11
  br label %23402

18056:                                            ; preds = %2
  %18057 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %18058 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %18057, align 8
  %18059 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %18060 = bitcast i8** %18059 to i64*
  %18061 = load i64, i64* %18060, align 8
  %18062 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %18063 = bitcast i8** %18062 to i64*
  %18064 = load i64, i64* %18063, align 8
  %18065 = sub i64 %18061, %18064
  %18066 = trunc i64 %18065 to i32
  %18067 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %18068 = and i32 %275, -1073741824
  %18069 = icmp eq i32 %18068, 1073741824
  br i1 %18069, label %18070, label %18091

18070:                                            ; preds = %18056
  %18071 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18058, i64 0, i32 2
  %18072 = load i64, i64* %18071, align 8
  %18073 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18058, i64 0, i32 3
  %18074 = load i64, i64* %18073, align 8
  %18075 = sub i64 %18074, %18072
  %18076 = icmp ult i64 %18075, 72
  br i1 %18076, label %18077, label %18079, !prof !3

18077:                                            ; preds = %18070
  %18078 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %18058, i64 72) #11
  br label %18081

18079:                                            ; preds = %18070
  %18080 = add i64 %18072, 72
  store i64 %18080, i64* %18071, align 8
  br label %18081

18081:                                            ; preds = %18079, %18077
  %18082 = phi i64 [ %18078, %18077 ], [ %18072, %18079 ]
  %18083 = inttoptr i64 %18082 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %18084 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18083, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %18084, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %18085 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18083, i64 0, i32 0, i32 0, i32 0
  %18086 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18083, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %18086, align 8
  %18087 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18083, i64 0, i32 0, i32 2
  %18088 = bitcast %"class.v8::internal::compiler::Instruction"** %18087 to i64*
  store i64 %18067, i64* %18088, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18085, align 8
  %18089 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18083, i64 0, i32 1
  store i32 %18066, i32* %18089, align 8
  %18090 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  br label %18091

18091:                                            ; preds = %18056, %18081
  %18092 = phi %"class.v8::internal::compiler::Instruction"* [ %1, %18056 ], [ %18090, %18081 ]
  %18093 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %18094 = and i32 %18093, 32
  %18095 = icmp eq i32 %18094, 0
  %18096 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %18097 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18092, i64 0, i32 5, i64 0, i32 0
  %18098 = load i64, i64* %18097, align 8
  %18099 = ashr i64 %18098, 35
  %18100 = trunc i64 %18099 to i32
  br i1 %18095, label %18106, label %18101

18101:                                            ; preds = %18091
  %18102 = bitcast i64* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18102)
  store i64 0, i64* %33, align 8
  %18103 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %33) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18102)
  %18104 = extractvalue { i64, i32 } %18103, 0
  %18105 = extractvalue { i64, i32 } %18103, 1
  call void @_ZN2v88internal9Assembler12vbroadcastssENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %18096, i32 %18100, i64 %18104, i32 %18105) #11
  br label %23402

18106:                                            ; preds = %18091
  %18107 = bitcast i64* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18107)
  store i64 0, i64* %34, align 8
  %18108 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18107)
  %18109 = extractvalue { i64, i32 } %18108, 0
  %18110 = extractvalue { i64, i32 } %18108, 1
  call void @_ZN2v88internal9Assembler5movssENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %18096, i32 %18100, i64 %18109, i32 %18110) #11
  %18111 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %18112 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18111, i64 0, i32 5, i64 0, i32 0
  %18113 = load i64, i64* %18112, align 8
  %18114 = ashr i64 %18113, 35
  %18115 = trunc i64 %18114 to i32
  call void @_ZN2v88internal9Assembler6shufpsENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %18096, i32 %18115, i32 %18115, i8 zeroext 0) #11
  br label %23402

18116:                                            ; preds = %2
  %18117 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %18118 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %18117, align 8
  %18119 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %18120 = bitcast i8** %18119 to i64*
  %18121 = load i64, i64* %18120, align 8
  %18122 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %18123 = bitcast i8** %18122 to i64*
  %18124 = load i64, i64* %18123, align 8
  %18125 = sub i64 %18121, %18124
  %18126 = trunc i64 %18125 to i32
  %18127 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %18128 = and i32 %275, -1073741824
  %18129 = icmp eq i32 %18128, 1073741824
  br i1 %18129, label %18130, label %18151

18130:                                            ; preds = %18116
  %18131 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18118, i64 0, i32 2
  %18132 = load i64, i64* %18131, align 8
  %18133 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18118, i64 0, i32 3
  %18134 = load i64, i64* %18133, align 8
  %18135 = sub i64 %18134, %18132
  %18136 = icmp ult i64 %18135, 72
  br i1 %18136, label %18137, label %18139, !prof !3

18137:                                            ; preds = %18130
  %18138 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %18118, i64 72) #11
  br label %18141

18139:                                            ; preds = %18130
  %18140 = add i64 %18132, 72
  store i64 %18140, i64* %18131, align 8
  br label %18141

18141:                                            ; preds = %18139, %18137
  %18142 = phi i64 [ %18138, %18137 ], [ %18132, %18139 ]
  %18143 = inttoptr i64 %18142 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %18144 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18143, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %18144, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %18145 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18143, i64 0, i32 0, i32 0, i32 0
  %18146 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18143, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %18146, align 8
  %18147 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18143, i64 0, i32 0, i32 2
  %18148 = bitcast %"class.v8::internal::compiler::Instruction"** %18147 to i64*
  store i64 %18127, i64* %18148, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18145, align 8
  %18149 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18143, i64 0, i32 1
  store i32 %18126, i32* %18149, align 8
  %18150 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  br label %18151

18151:                                            ; preds = %18116, %18141
  %18152 = phi %"class.v8::internal::compiler::Instruction"* [ %1, %18116 ], [ %18150, %18141 ]
  %18153 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18152, i64 0, i32 5, i64 0, i32 0
  %18154 = load i64, i64* %18153, align 8
  %18155 = ashr i64 %18154, 35
  %18156 = trunc i64 %18155 to i32
  %18157 = bitcast i64* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18157)
  store i64 0, i64* %35, align 8
  %18158 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %35) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18157)
  %18159 = extractvalue { i64, i32 } %18158, 0
  %18160 = extractvalue { i64, i32 } %18158, 1
  %18161 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %18162 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %18163 = and i32 %18162, 32
  %18164 = icmp eq i32 %18163, 0
  br i1 %18164, label %18166, label %18165

18165:                                            ; preds = %18151
  call void @_ZN2v88internal9Assembler8vmovddupENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %18161, i32 %18156, i64 %18159, i32 %18160) #11
  br label %23402

18166:                                            ; preds = %18151
  call void @_ZN2v88internal9Assembler7movddupENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %18161, i32 %18156, i64 %18159, i32 %18160) #11
  br label %23402

18167:                                            ; preds = %2
  %18168 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %18169 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %18168, align 8
  %18170 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %18171 = bitcast i8** %18170 to i64*
  %18172 = load i64, i64* %18171, align 8
  %18173 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %18174 = bitcast i8** %18173 to i64*
  %18175 = load i64, i64* %18174, align 8
  %18176 = sub i64 %18172, %18175
  %18177 = trunc i64 %18176 to i32
  %18178 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %18179 = and i32 %275, -1073741824
  %18180 = icmp eq i32 %18179, 1073741824
  br i1 %18180, label %18181, label %18202

18181:                                            ; preds = %18167
  %18182 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18169, i64 0, i32 2
  %18183 = load i64, i64* %18182, align 8
  %18184 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18169, i64 0, i32 3
  %18185 = load i64, i64* %18184, align 8
  %18186 = sub i64 %18185, %18183
  %18187 = icmp ult i64 %18186, 72
  br i1 %18187, label %18188, label %18190, !prof !3

18188:                                            ; preds = %18181
  %18189 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %18169, i64 72) #11
  br label %18192

18190:                                            ; preds = %18181
  %18191 = add i64 %18183, 72
  store i64 %18191, i64* %18182, align 8
  br label %18192

18192:                                            ; preds = %18190, %18188
  %18193 = phi i64 [ %18189, %18188 ], [ %18183, %18190 ]
  %18194 = inttoptr i64 %18193 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %18195 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18194, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %18195, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %18196 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18194, i64 0, i32 0, i32 0, i32 0
  %18197 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18194, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %18197, align 8
  %18198 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18194, i64 0, i32 0, i32 2
  %18199 = bitcast %"class.v8::internal::compiler::Instruction"** %18198 to i64*
  store i64 %18178, i64* %18199, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18196, align 8
  %18200 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18194, i64 0, i32 1
  store i32 %18177, i32* %18200, align 8
  %18201 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  br label %18202

18202:                                            ; preds = %18167, %18192
  %18203 = phi %"class.v8::internal::compiler::Instruction"* [ %1, %18167 ], [ %18201, %18192 ]
  %18204 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18203, i64 0, i32 5, i64 0, i32 0
  %18205 = load i64, i64* %18204, align 8
  %18206 = ashr i64 %18205, 35
  %18207 = trunc i64 %18206 to i32
  %18208 = bitcast i64* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18208)
  store i64 0, i64* %36, align 8
  %18209 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18208)
  %18210 = extractvalue { i64, i32 } %18209, 0
  %18211 = extractvalue { i64, i32 } %18209, 1
  %18212 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %18213 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %18214 = and i32 %18213, 32
  %18215 = icmp eq i32 %18214, 0
  br i1 %18215, label %18217, label %18216

18216:                                            ; preds = %18202
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %18212, i8 zeroext 32, i32 %18207, i32 0, i64 %18210, i32 %18211, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

18217:                                            ; preds = %18202
  call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterENS0_7OperandEhhhh(%"class.v8::internal::Assembler"* %18212, i32 %18207, i64 %18210, i32 %18211, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 32) #11
  br label %23402

18218:                                            ; preds = %2
  %18219 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %18220 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %18219, align 8
  %18221 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %18222 = bitcast i8** %18221 to i64*
  %18223 = load i64, i64* %18222, align 8
  %18224 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %18225 = bitcast i8** %18224 to i64*
  %18226 = load i64, i64* %18225, align 8
  %18227 = sub i64 %18223, %18226
  %18228 = trunc i64 %18227 to i32
  %18229 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %18230 = and i32 %275, -1073741824
  %18231 = icmp eq i32 %18230, 1073741824
  br i1 %18231, label %18232, label %18253

18232:                                            ; preds = %18218
  %18233 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18220, i64 0, i32 2
  %18234 = load i64, i64* %18233, align 8
  %18235 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18220, i64 0, i32 3
  %18236 = load i64, i64* %18235, align 8
  %18237 = sub i64 %18236, %18234
  %18238 = icmp ult i64 %18237, 72
  br i1 %18238, label %18239, label %18241, !prof !3

18239:                                            ; preds = %18232
  %18240 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %18220, i64 72) #11
  br label %18243

18241:                                            ; preds = %18232
  %18242 = add i64 %18234, 72
  store i64 %18242, i64* %18233, align 8
  br label %18243

18243:                                            ; preds = %18241, %18239
  %18244 = phi i64 [ %18240, %18239 ], [ %18234, %18241 ]
  %18245 = inttoptr i64 %18244 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %18246 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18245, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %18246, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %18247 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18245, i64 0, i32 0, i32 0, i32 0
  %18248 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18245, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %18248, align 8
  %18249 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18245, i64 0, i32 0, i32 2
  %18250 = bitcast %"class.v8::internal::compiler::Instruction"** %18249 to i64*
  store i64 %18229, i64* %18250, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18247, align 8
  %18251 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18245, i64 0, i32 1
  store i32 %18228, i32* %18251, align 8
  %18252 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  br label %18253

18253:                                            ; preds = %18218, %18243
  %18254 = phi %"class.v8::internal::compiler::Instruction"* [ %1, %18218 ], [ %18252, %18243 ]
  %18255 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18254, i64 0, i32 5, i64 0, i32 0
  %18256 = load i64, i64* %18255, align 8
  %18257 = ashr i64 %18256, 35
  %18258 = trunc i64 %18257 to i32
  %18259 = bitcast i64* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18259)
  store i64 0, i64* %37, align 8
  %18260 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %37) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18259)
  %18261 = extractvalue { i64, i32 } %18260, 0
  %18262 = extractvalue { i64, i32 } %18260, 1
  %18263 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %18264 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %18265 = and i32 %18264, 32
  %18266 = icmp eq i32 %18265, 0
  br i1 %18266, label %18268, label %18267

18267:                                            ; preds = %18253
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %18263, i8 zeroext 48, i32 %18258, i32 0, i64 %18261, i32 %18262, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

18268:                                            ; preds = %18253
  call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterENS0_7OperandEhhhh(%"class.v8::internal::Assembler"* %18263, i32 %18258, i64 %18261, i32 %18262, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 48) #11
  br label %23402

18269:                                            ; preds = %2
  %18270 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %18271 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %18270, align 8
  %18272 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %18273 = bitcast i8** %18272 to i64*
  %18274 = load i64, i64* %18273, align 8
  %18275 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %18276 = bitcast i8** %18275 to i64*
  %18277 = load i64, i64* %18276, align 8
  %18278 = sub i64 %18274, %18277
  %18279 = trunc i64 %18278 to i32
  %18280 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %18281 = and i32 %275, -1073741824
  %18282 = icmp eq i32 %18281, 1073741824
  br i1 %18282, label %18283, label %18304

18283:                                            ; preds = %18269
  %18284 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18271, i64 0, i32 2
  %18285 = load i64, i64* %18284, align 8
  %18286 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18271, i64 0, i32 3
  %18287 = load i64, i64* %18286, align 8
  %18288 = sub i64 %18287, %18285
  %18289 = icmp ult i64 %18288, 72
  br i1 %18289, label %18290, label %18292, !prof !3

18290:                                            ; preds = %18283
  %18291 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %18271, i64 72) #11
  br label %18294

18292:                                            ; preds = %18283
  %18293 = add i64 %18285, 72
  store i64 %18293, i64* %18284, align 8
  br label %18294

18294:                                            ; preds = %18292, %18290
  %18295 = phi i64 [ %18291, %18290 ], [ %18285, %18292 ]
  %18296 = inttoptr i64 %18295 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %18297 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18296, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %18297, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %18298 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18296, i64 0, i32 0, i32 0, i32 0
  %18299 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18296, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %18299, align 8
  %18300 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18296, i64 0, i32 0, i32 2
  %18301 = bitcast %"class.v8::internal::compiler::Instruction"** %18300 to i64*
  store i64 %18280, i64* %18301, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18298, align 8
  %18302 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18296, i64 0, i32 1
  store i32 %18279, i32* %18302, align 8
  %18303 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  br label %18304

18304:                                            ; preds = %18269, %18294
  %18305 = phi %"class.v8::internal::compiler::Instruction"* [ %1, %18269 ], [ %18303, %18294 ]
  %18306 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18305, i64 0, i32 5, i64 0, i32 0
  %18307 = load i64, i64* %18306, align 8
  %18308 = ashr i64 %18307, 35
  %18309 = trunc i64 %18308 to i32
  %18310 = bitcast i64* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18310)
  store i64 0, i64* %38, align 8
  %18311 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %38) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18310)
  %18312 = extractvalue { i64, i32 } %18311, 0
  %18313 = extractvalue { i64, i32 } %18311, 1
  %18314 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %18315 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %18316 = and i32 %18315, 32
  %18317 = icmp eq i32 %18316, 0
  br i1 %18317, label %18319, label %18318

18318:                                            ; preds = %18304
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %18314, i8 zeroext 35, i32 %18309, i32 0, i64 %18312, i32 %18313, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

18319:                                            ; preds = %18304
  call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterENS0_7OperandEhhhh(%"class.v8::internal::Assembler"* %18314, i32 %18309, i64 %18312, i32 %18313, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 35) #11
  br label %23402

18320:                                            ; preds = %2
  %18321 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %18322 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %18321, align 8
  %18323 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %18324 = bitcast i8** %18323 to i64*
  %18325 = load i64, i64* %18324, align 8
  %18326 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %18327 = bitcast i8** %18326 to i64*
  %18328 = load i64, i64* %18327, align 8
  %18329 = sub i64 %18325, %18328
  %18330 = trunc i64 %18329 to i32
  %18331 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %18332 = and i32 %275, -1073741824
  %18333 = icmp eq i32 %18332, 1073741824
  br i1 %18333, label %18334, label %18355

18334:                                            ; preds = %18320
  %18335 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18322, i64 0, i32 2
  %18336 = load i64, i64* %18335, align 8
  %18337 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18322, i64 0, i32 3
  %18338 = load i64, i64* %18337, align 8
  %18339 = sub i64 %18338, %18336
  %18340 = icmp ult i64 %18339, 72
  br i1 %18340, label %18341, label %18343, !prof !3

18341:                                            ; preds = %18334
  %18342 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %18322, i64 72) #11
  br label %18345

18343:                                            ; preds = %18334
  %18344 = add i64 %18336, 72
  store i64 %18344, i64* %18335, align 8
  br label %18345

18345:                                            ; preds = %18343, %18341
  %18346 = phi i64 [ %18342, %18341 ], [ %18336, %18343 ]
  %18347 = inttoptr i64 %18346 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %18348 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18347, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %18348, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %18349 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18347, i64 0, i32 0, i32 0, i32 0
  %18350 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18347, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %18350, align 8
  %18351 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18347, i64 0, i32 0, i32 2
  %18352 = bitcast %"class.v8::internal::compiler::Instruction"** %18351 to i64*
  store i64 %18331, i64* %18352, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18349, align 8
  %18353 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18347, i64 0, i32 1
  store i32 %18330, i32* %18353, align 8
  %18354 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  br label %18355

18355:                                            ; preds = %18320, %18345
  %18356 = phi %"class.v8::internal::compiler::Instruction"* [ %1, %18320 ], [ %18354, %18345 ]
  %18357 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18356, i64 0, i32 5, i64 0, i32 0
  %18358 = load i64, i64* %18357, align 8
  %18359 = ashr i64 %18358, 35
  %18360 = trunc i64 %18359 to i32
  %18361 = bitcast i64* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18361)
  store i64 0, i64* %39, align 8
  %18362 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %39) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18361)
  %18363 = extractvalue { i64, i32 } %18362, 0
  %18364 = extractvalue { i64, i32 } %18362, 1
  %18365 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %18366 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %18367 = and i32 %18366, 32
  %18368 = icmp eq i32 %18367, 0
  br i1 %18368, label %18370, label %18369

18369:                                            ; preds = %18355
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %18365, i8 zeroext 51, i32 %18360, i32 0, i64 %18363, i32 %18364, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

18370:                                            ; preds = %18355
  call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterENS0_7OperandEhhhh(%"class.v8::internal::Assembler"* %18365, i32 %18360, i64 %18363, i32 %18364, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 51) #11
  br label %23402

18371:                                            ; preds = %2
  %18372 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %18373 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %18372, align 8
  %18374 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %18375 = bitcast i8** %18374 to i64*
  %18376 = load i64, i64* %18375, align 8
  %18377 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %18378 = bitcast i8** %18377 to i64*
  %18379 = load i64, i64* %18378, align 8
  %18380 = sub i64 %18376, %18379
  %18381 = trunc i64 %18380 to i32
  %18382 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %18383 = and i32 %275, -1073741824
  %18384 = icmp eq i32 %18383, 1073741824
  br i1 %18384, label %18385, label %18406

18385:                                            ; preds = %18371
  %18386 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18373, i64 0, i32 2
  %18387 = load i64, i64* %18386, align 8
  %18388 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18373, i64 0, i32 3
  %18389 = load i64, i64* %18388, align 8
  %18390 = sub i64 %18389, %18387
  %18391 = icmp ult i64 %18390, 72
  br i1 %18391, label %18392, label %18394, !prof !3

18392:                                            ; preds = %18385
  %18393 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %18373, i64 72) #11
  br label %18396

18394:                                            ; preds = %18385
  %18395 = add i64 %18387, 72
  store i64 %18395, i64* %18386, align 8
  br label %18396

18396:                                            ; preds = %18394, %18392
  %18397 = phi i64 [ %18393, %18392 ], [ %18387, %18394 ]
  %18398 = inttoptr i64 %18397 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %18399 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18398, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %18399, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %18400 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18398, i64 0, i32 0, i32 0, i32 0
  %18401 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18398, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %18401, align 8
  %18402 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18398, i64 0, i32 0, i32 2
  %18403 = bitcast %"class.v8::internal::compiler::Instruction"** %18402 to i64*
  store i64 %18382, i64* %18403, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18400, align 8
  %18404 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18398, i64 0, i32 1
  store i32 %18381, i32* %18404, align 8
  %18405 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  br label %18406

18406:                                            ; preds = %18371, %18396
  %18407 = phi %"class.v8::internal::compiler::Instruction"* [ %1, %18371 ], [ %18405, %18396 ]
  %18408 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18407, i64 0, i32 5, i64 0, i32 0
  %18409 = load i64, i64* %18408, align 8
  %18410 = ashr i64 %18409, 35
  %18411 = trunc i64 %18410 to i32
  %18412 = bitcast i64* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18412)
  store i64 0, i64* %40, align 8
  %18413 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %40) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18412)
  %18414 = extractvalue { i64, i32 } %18413, 0
  %18415 = extractvalue { i64, i32 } %18413, 1
  %18416 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %18417 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %18418 = and i32 %18417, 32
  %18419 = icmp eq i32 %18418, 0
  br i1 %18419, label %18421, label %18420

18420:                                            ; preds = %18406
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %18416, i8 zeroext 37, i32 %18411, i32 0, i64 %18414, i32 %18415, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

18421:                                            ; preds = %18406
  call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterENS0_7OperandEhhhh(%"class.v8::internal::Assembler"* %18416, i32 %18411, i64 %18414, i32 %18415, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 37) #11
  br label %23402

18422:                                            ; preds = %2
  %18423 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %18424 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %18423, align 8
  %18425 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %18426 = bitcast i8** %18425 to i64*
  %18427 = load i64, i64* %18426, align 8
  %18428 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %18429 = bitcast i8** %18428 to i64*
  %18430 = load i64, i64* %18429, align 8
  %18431 = sub i64 %18427, %18430
  %18432 = trunc i64 %18431 to i32
  %18433 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %18434 = and i32 %275, -1073741824
  %18435 = icmp eq i32 %18434, 1073741824
  br i1 %18435, label %18436, label %18457

18436:                                            ; preds = %18422
  %18437 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18424, i64 0, i32 2
  %18438 = load i64, i64* %18437, align 8
  %18439 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18424, i64 0, i32 3
  %18440 = load i64, i64* %18439, align 8
  %18441 = sub i64 %18440, %18438
  %18442 = icmp ult i64 %18441, 72
  br i1 %18442, label %18443, label %18445, !prof !3

18443:                                            ; preds = %18436
  %18444 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %18424, i64 72) #11
  br label %18447

18445:                                            ; preds = %18436
  %18446 = add i64 %18438, 72
  store i64 %18446, i64* %18437, align 8
  br label %18447

18447:                                            ; preds = %18445, %18443
  %18448 = phi i64 [ %18444, %18443 ], [ %18438, %18445 ]
  %18449 = inttoptr i64 %18448 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %18450 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18449, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %18450, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %18451 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18449, i64 0, i32 0, i32 0, i32 0
  %18452 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18449, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %18452, align 8
  %18453 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18449, i64 0, i32 0, i32 2
  %18454 = bitcast %"class.v8::internal::compiler::Instruction"** %18453 to i64*
  store i64 %18433, i64* %18454, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18451, align 8
  %18455 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18449, i64 0, i32 1
  store i32 %18432, i32* %18455, align 8
  %18456 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  br label %18457

18457:                                            ; preds = %18422, %18447
  %18458 = phi %"class.v8::internal::compiler::Instruction"* [ %1, %18422 ], [ %18456, %18447 ]
  %18459 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18458, i64 0, i32 5, i64 0, i32 0
  %18460 = load i64, i64* %18459, align 8
  %18461 = ashr i64 %18460, 35
  %18462 = trunc i64 %18461 to i32
  %18463 = bitcast i64* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18463)
  store i64 0, i64* %41, align 8
  %18464 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18463)
  %18465 = extractvalue { i64, i32 } %18464, 0
  %18466 = extractvalue { i64, i32 } %18464, 1
  %18467 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %18468 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %18469 = and i32 %18468, 32
  %18470 = icmp eq i32 %18469, 0
  br i1 %18470, label %18472, label %18471

18471:                                            ; preds = %18457
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %18467, i8 zeroext 53, i32 %18462, i32 0, i64 %18465, i32 %18466, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

18472:                                            ; preds = %18457
  call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterENS0_7OperandEhhhh(%"class.v8::internal::Assembler"* %18467, i32 %18462, i64 %18465, i32 %18466, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 53) #11
  br label %23402

18473:                                            ; preds = %2
  %18474 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %18475 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %18474, align 8
  %18476 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %18477 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %18478 = bitcast i8** %18477 to i64*
  %18479 = load i64, i64* %18478, align 8
  %18480 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %18481 = bitcast i8** %18480 to i64*
  %18482 = load i64, i64* %18481, align 8
  %18483 = sub i64 %18479, %18482
  %18484 = trunc i64 %18483 to i32
  %18485 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %18486 = and i32 %275, -1073741824
  %18487 = icmp eq i32 %18486, 1073741824
  br i1 %18487, label %18488, label %18508

18488:                                            ; preds = %18473
  %18489 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18475, i64 0, i32 2
  %18490 = load i64, i64* %18489, align 8
  %18491 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18475, i64 0, i32 3
  %18492 = load i64, i64* %18491, align 8
  %18493 = sub i64 %18492, %18490
  %18494 = icmp ult i64 %18493, 72
  br i1 %18494, label %18495, label %18497, !prof !3

18495:                                            ; preds = %18488
  %18496 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %18475, i64 72) #11
  br label %18499

18497:                                            ; preds = %18488
  %18498 = add i64 %18490, 72
  store i64 %18498, i64* %18489, align 8
  br label %18499

18499:                                            ; preds = %18497, %18495
  %18500 = phi i64 [ %18496, %18495 ], [ %18490, %18497 ]
  %18501 = inttoptr i64 %18500 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %18502 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18501, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %18502, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %18503 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18501, i64 0, i32 0, i32 0, i32 0
  %18504 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18501, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %18504, align 8
  %18505 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18501, i64 0, i32 0, i32 2
  %18506 = bitcast %"class.v8::internal::compiler::Instruction"** %18505 to i64*
  store i64 %18485, i64* %18506, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18503, align 8
  %18507 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18501, i64 0, i32 1
  store i32 %18484, i32* %18507, align 8
  br label %18508

18508:                                            ; preds = %18473, %18499
  %18509 = bitcast i64* %224 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18509) #11
  store i64 0, i64* %224, align 8
  %18510 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %224)
  %18511 = extractvalue { i64, i32 } %18510, 0
  %18512 = extractvalue { i64, i32 } %18510, 1
  %18513 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %18514 = load i64, i64* %224, align 8
  %18515 = add i64 %18514, 1
  %18516 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %18517 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18516, i64 0, i32 1
  %18518 = load i32, i32* %18517, align 4
  %18519 = and i32 %18518, 255
  %18520 = zext i32 %18519 to i64
  %18521 = add i64 %18515, %18520
  %18522 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18516, i64 0, i32 5, i64 %18521
  %18523 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %18513, %"class.v8::internal::compiler::InstructionOperand"* %18522) #11
  %18524 = extractvalue { i64, i64 } %18523, 1
  %18525 = trunc i64 %18524 to i8
  %18526 = bitcast %"class.v8::internal::TurboAssembler"* %18476 to %"class.v8::internal::SharedTurboAssembler"*
  %18527 = load i64, i64* %224, align 8
  %18528 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %18529 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18528, i64 0, i32 1
  %18530 = load i32, i32* %18529, align 4
  %18531 = and i32 %18530, 255
  %18532 = zext i32 %18531 to i64
  %18533 = add i64 %18527, %18532
  %18534 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18528, i64 0, i32 5, i64 %18533, i32 0
  %18535 = load i64, i64* %18534, align 8
  %18536 = ashr i64 %18535, 35
  %18537 = trunc i64 %18536 to i32
  call void @_ZN2v88internal20SharedTurboAssembler15S128Store32LaneENS0_7OperandENS0_11XMMRegisterEh(%"class.v8::internal::SharedTurboAssembler"* %18526, i64 %18511, i32 %18512, i32 %18537, i8 zeroext %18525) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18509) #11
  br label %23402

18538:                                            ; preds = %2
  %18539 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %18540 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %18539, align 8
  %18541 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %18542 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %18543 = bitcast i8** %18542 to i64*
  %18544 = load i64, i64* %18543, align 8
  %18545 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %18546 = bitcast i8** %18545 to i64*
  %18547 = load i64, i64* %18546, align 8
  %18548 = sub i64 %18544, %18547
  %18549 = trunc i64 %18548 to i32
  %18550 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %18551 = and i32 %275, -1073741824
  %18552 = icmp eq i32 %18551, 1073741824
  br i1 %18552, label %18553, label %18573

18553:                                            ; preds = %18538
  %18554 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18540, i64 0, i32 2
  %18555 = load i64, i64* %18554, align 8
  %18556 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18540, i64 0, i32 3
  %18557 = load i64, i64* %18556, align 8
  %18558 = sub i64 %18557, %18555
  %18559 = icmp ult i64 %18558, 72
  br i1 %18559, label %18560, label %18562, !prof !3

18560:                                            ; preds = %18553
  %18561 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %18540, i64 72) #11
  br label %18564

18562:                                            ; preds = %18553
  %18563 = add i64 %18555, 72
  store i64 %18563, i64* %18554, align 8
  br label %18564

18564:                                            ; preds = %18562, %18560
  %18565 = phi i64 [ %18561, %18560 ], [ %18555, %18562 ]
  %18566 = inttoptr i64 %18565 to %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*
  %18567 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18566, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %18567, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %18568 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18566, i64 0, i32 0, i32 0, i32 0
  %18569 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18566, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %18569, align 8
  %18570 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18566, i64 0, i32 0, i32 2
  %18571 = bitcast %"class.v8::internal::compiler::Instruction"** %18570 to i64*
  store i64 %18550, i64* %18571, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18568, align 8
  %18572 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %18566, i64 0, i32 1
  store i32 %18549, i32* %18572, align 8
  br label %18573

18573:                                            ; preds = %18538, %18564
  %18574 = bitcast i64* %225 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18574) #11
  store i64 0, i64* %225, align 8
  %18575 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %225)
  %18576 = extractvalue { i64, i32 } %18575, 0
  %18577 = extractvalue { i64, i32 } %18575, 1
  %18578 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %18579 = load i64, i64* %225, align 8
  %18580 = add i64 %18579, 1
  %18581 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %18582 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18581, i64 0, i32 1
  %18583 = load i32, i32* %18582, align 4
  %18584 = and i32 %18583, 255
  %18585 = zext i32 %18584 to i64
  %18586 = add i64 %18580, %18585
  %18587 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18581, i64 0, i32 5, i64 %18586
  %18588 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %18578, %"class.v8::internal::compiler::InstructionOperand"* %18587) #11
  %18589 = extractvalue { i64, i64 } %18588, 1
  %18590 = trunc i64 %18589 to i8
  %18591 = load i64, i64* %225, align 8
  %18592 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %18593 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18592, i64 0, i32 1
  %18594 = load i32, i32* %18593, align 4
  %18595 = and i32 %18594, 255
  %18596 = zext i32 %18595 to i64
  %18597 = add i64 %18591, %18596
  %18598 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18592, i64 0, i32 5, i64 %18597, i32 0
  %18599 = load i64, i64* %18598, align 8
  %18600 = ashr i64 %18599, 35
  %18601 = trunc i64 %18600 to i32
  call void @_ZN2v88internal14TurboAssembler15S128Store64LaneENS0_7OperandENS0_11XMMRegisterEh(%"class.v8::internal::TurboAssembler"* %18541, i64 %18576, i32 %18577, i32 %18601, i8 zeroext %18590) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18574) #11
  br label %23402

18602:                                            ; preds = %2
  %18603 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %18604 = bitcast %"class.v8::internal::TurboAssembler"* %18603 to %"class.v8::internal::SharedTurboAssembler"*
  %18605 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %18606 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %18607 = load i64, i64* %18606, align 8
  %18608 = ashr i64 %18607, 35
  %18609 = trunc i64 %18608 to i32
  %18610 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %18611 = load i32, i32* %18610, align 4
  %18612 = and i32 %18611, 255
  %18613 = zext i32 %18612 to i64
  %18614 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %18613, i32 0
  %18615 = load i64, i64* %18614, align 8
  %18616 = ashr i64 %18615, 35
  %18617 = trunc i64 %18616 to i32
  %18618 = add nuw nsw i64 %18613, 1
  %18619 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %18618, i32 0
  %18620 = load i64, i64* %18619, align 8
  %18621 = ashr i64 %18620, 35
  %18622 = trunc i64 %18621 to i32
  %18623 = add nuw nsw i64 %18613, 2
  %18624 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %18623
  %18625 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %18605, %"class.v8::internal::compiler::InstructionOperand"* %18624) #11
  %18626 = extractvalue { i64, i64 } %18625, 1
  %18627 = trunc i64 %18626 to i8
  call void @_ZN2v88internal20SharedTurboAssembler6ShufpsENS0_11XMMRegisterES2_S2_h(%"class.v8::internal::SharedTurboAssembler"* %18604, i32 %18609, i32 %18617, i32 %18622, i8 zeroext %18627) #11
  br label %23402

18628:                                            ; preds = %2
  %18629 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %18630 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %18631 = load i64, i64* %18630, align 8
  %18632 = ashr i64 %18631, 35
  %18633 = trunc i64 %18632 to i32
  %18634 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %18635 = load i32, i32* %18634, align 4
  %18636 = and i32 %18635, 255
  %18637 = zext i32 %18636 to i64
  %18638 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %18637, i32 0
  %18639 = load i64, i64* %18638, align 8
  %18640 = ashr i64 %18639, 35
  %18641 = trunc i64 %18640 to i32
  %18642 = add nuw nsw i64 %18637, 1
  %18643 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %18642
  %18644 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %18629, %"class.v8::internal::compiler::InstructionOperand"* %18643) #11
  %18645 = extractvalue { i64, i64 } %18644, 1
  %18646 = trunc i64 %18645 to i8
  %18647 = icmp eq i32 %18633, %18641
  %18648 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  br i1 %18647, label %18649, label %18651

18649:                                            ; preds = %18628
  %18650 = bitcast %"class.v8::internal::TurboAssembler"* %18648 to %"class.v8::internal::SharedTurboAssembler"*
  call void @_ZN2v88internal20SharedTurboAssembler6ShufpsENS0_11XMMRegisterES2_S2_h(%"class.v8::internal::SharedTurboAssembler"* %18650, i32 %18633, i32 %18633, i32 %18633, i8 zeroext %18646) #11
  br label %23402

18651:                                            ; preds = %18628
  %18652 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %18648, i64 0, i32 0, i32 0, i32 0
  %18653 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %18654 = and i32 %18653, 32
  %18655 = icmp eq i32 %18654, 0
  br i1 %18655, label %18660, label %18656

18656:                                            ; preds = %18651
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %18652, i8 zeroext 112, i32 %18633, i32 0, i32 %18641, i32 1, i32 1, i32 0, i32 5) #11
  %18657 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %18658 = load i8*, i8** %18657, align 8
  %18659 = getelementptr inbounds i8, i8* %18658, i64 1
  store i8* %18659, i8** %18657, align 8
  store i8 %18646, i8* %18658, align 1
  br label %23402

18660:                                            ; preds = %18651
  call void @_ZN2v88internal9Assembler6pshufdENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %18652, i32 %18633, i32 %18641, i8 zeroext %18646) #11
  br label %23402

18661:                                            ; preds = %2
  %18662 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %18663 = load i32, i32* %18662, align 4
  %18664 = and i32 %18663, 255
  %18665 = zext i32 %18664 to i64
  %18666 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %18665, i32 0
  %18667 = load i64, i64* %18666, align 8
  %18668 = and i64 %18667, 7
  %18669 = icmp ugt i64 %18668, 4
  %18670 = and i64 %18667, 24
  %18671 = icmp eq i64 %18670, 0
  %18672 = and i1 %18669, %18671
  br i1 %18672, label %18679, label %18673

18673:                                            ; preds = %18661
  %18674 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %18675 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %18676 = load i64, i64* %18675, align 8
  %18677 = ashr i64 %18676, 35
  %18678 = trunc i64 %18677 to i32
  br label %18704

18679:                                            ; preds = %18661
  %18680 = and i64 %18667, 8160
  %18681 = icmp eq i64 %18680, 448
  %18682 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %18683 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %18684 = load i64, i64* %18683, align 8
  %18685 = ashr i64 %18684, 35
  %18686 = trunc i64 %18685 to i32
  br i1 %18681, label %18687, label %18704

18687:                                            ; preds = %18679
  %18688 = ashr i64 %18667, 35
  %18689 = trunc i64 %18688 to i32
  %18690 = add nuw nsw i64 %18665, 1
  %18691 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %18690
  %18692 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %18682, %"class.v8::internal::compiler::InstructionOperand"* %18691) #11
  %18693 = extractvalue { i64, i64 } %18692, 1
  %18694 = trunc i64 %18693 to i8
  %18695 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %18696 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %18697 = and i32 %18696, 32
  %18698 = icmp eq i32 %18697, 0
  br i1 %18698, label %18703, label %18699

18699:                                            ; preds = %18687
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %18695, i8 zeroext 112, i32 %18686, i32 0, i32 %18689, i32 1, i32 1, i32 0, i32 5) #11
  %18700 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %18701 = load i8*, i8** %18700, align 8
  %18702 = getelementptr inbounds i8, i8* %18701, i64 1
  store i8* %18702, i8** %18700, align 8
  store i8 %18694, i8* %18701, align 1
  br label %23402

18703:                                            ; preds = %18687
  call void @_ZN2v88internal9Assembler6pshufdENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %18695, i32 %18686, i32 %18689, i8 zeroext %18694) #11
  br label %23402

18704:                                            ; preds = %18673, %18679
  %18705 = phi i32 [ %18678, %18673 ], [ %18686, %18679 ]
  %18706 = phi %"class.v8::internal::compiler::InstructionOperandConverter"* [ %18674, %18673 ], [ %18682, %18679 ]
  %18707 = ashr i64 %18667, 35
  %18708 = trunc i64 %18707 to i32
  %18709 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %18708, i32 0) #11
  %18710 = extractvalue { i64, i32 } %18709, 0
  %18711 = extractvalue { i64, i32 } %18709, 1
  %18712 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %18713 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18712, i64 0, i32 1
  %18714 = load i32, i32* %18713, align 4
  %18715 = and i32 %18714, 255
  %18716 = add nuw nsw i32 %18715, 1
  %18717 = zext i32 %18716 to i64
  %18718 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18712, i64 0, i32 5, i64 %18717
  %18719 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %18706, %"class.v8::internal::compiler::InstructionOperand"* %18718) #11
  %18720 = extractvalue { i64, i64 } %18719, 1
  %18721 = trunc i64 %18720 to i8
  %18722 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %18723 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %18724 = and i32 %18723, 32
  %18725 = icmp eq i32 %18724, 0
  br i1 %18725, label %18730, label %18726

18726:                                            ; preds = %18704
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %18722, i8 zeroext 112, i32 %18705, i32 0, i64 %18710, i32 %18711, i32 1, i32 1, i32 0, i32 5) #11
  %18727 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %18728 = load i8*, i8** %18727, align 8
  %18729 = getelementptr inbounds i8, i8* %18728, i64 1
  store i8* %18729, i8** %18727, align 8
  store i8 %18721, i8* %18728, align 1
  br label %23402

18730:                                            ; preds = %18704
  call void @_ZN2v88internal9Assembler6pshufdENS0_11XMMRegisterENS0_7OperandEh(%"class.v8::internal::Assembler"* %18722, i32 %18705, i64 %18710, i32 %18711, i8 zeroext %18721) #11
  br label %23402

18731:                                            ; preds = %2
  %18732 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %18733 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %18734 = load i32, i32* %18733, align 4
  %18735 = and i32 %18734, 255
  %18736 = add nuw nsw i32 %18735, 2
  %18737 = zext i32 %18736 to i64
  %18738 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %18737
  %18739 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %18732, %"class.v8::internal::compiler::InstructionOperand"* %18738) #11
  %18740 = extractvalue { i64, i64 } %18739, 1
  %18741 = trunc i64 %18740 to i8
  %18742 = load i32, i32* %18733, align 4
  %18743 = and i32 %18742, 255
  %18744 = add nuw nsw i32 %18743, 1
  %18745 = zext i32 %18744 to i64
  %18746 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %18745, i32 0
  %18747 = load i64, i64* %18746, align 8
  %18748 = and i64 %18747, 7
  %18749 = icmp ugt i64 %18748, 4
  %18750 = and i64 %18747, 24
  %18751 = icmp eq i64 %18750, 0
  %18752 = and i1 %18749, %18751
  br i1 %18752, label %18756, label %18753

18753:                                            ; preds = %18731
  %18754 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %18755 = bitcast %"class.v8::internal::TurboAssembler"* %18754 to %"class.v8::internal::SharedTurboAssembler"*
  br label %18781

18756:                                            ; preds = %18731
  %18757 = and i64 %18747, 8160
  %18758 = icmp eq i64 %18757, 448
  %18759 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %18760 = bitcast %"class.v8::internal::TurboAssembler"* %18759 to %"class.v8::internal::SharedTurboAssembler"*
  br i1 %18758, label %18761, label %18781

18761:                                            ; preds = %18756
  %18762 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %18763 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18762, i64 0, i32 1
  %18764 = load i32, i32* %18763, align 4
  %18765 = and i32 %18764, 255
  %18766 = add nuw nsw i32 %18765, 1
  %18767 = zext i32 %18766 to i64
  %18768 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18762, i64 0, i32 5, i64 %18767, i32 0
  %18769 = load i64, i64* %18768, align 8
  %18770 = ashr i64 %18769, 35
  %18771 = trunc i64 %18770 to i32
  %18772 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %18759, i64 0, i32 0, i32 0, i32 0
  %18773 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %18774 = and i32 %18773, 32
  %18775 = icmp eq i32 %18774, 0
  br i1 %18775, label %18780, label %18776

18776:                                            ; preds = %18761
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %18772, i8 zeroext 112, i32 15, i32 0, i32 %18771, i32 1, i32 1, i32 0, i32 5) #11
  %18777 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %18778 = load i8*, i8** %18777, align 8
  %18779 = getelementptr inbounds i8, i8* %18778, i64 1
  store i8* %18779, i8** %18777, align 8
  store i8 %18741, i8* %18778, align 1
  br label %18805

18780:                                            ; preds = %18761
  call void @_ZN2v88internal9Assembler6pshufdENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %18772, i32 15, i32 %18771, i8 zeroext %18741) #11
  br label %18805

18781:                                            ; preds = %18753, %18756
  %18782 = phi %"class.v8::internal::SharedTurboAssembler"* [ %18755, %18753 ], [ %18760, %18756 ]
  %18783 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %18784 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18783, i64 0, i32 1
  %18785 = load i32, i32* %18784, align 4
  %18786 = and i32 %18785, 255
  %18787 = add nuw nsw i32 %18786, 1
  %18788 = zext i32 %18787 to i64
  %18789 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18783, i64 0, i32 5, i64 %18788, i32 0
  %18790 = load i64, i64* %18789, align 8
  %18791 = ashr i64 %18790, 35
  %18792 = trunc i64 %18791 to i32
  %18793 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %18792, i32 0) #11
  %18794 = extractvalue { i64, i32 } %18793, 0
  %18795 = extractvalue { i64, i32 } %18793, 1
  %18796 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %18782, i64 0, i32 0, i32 0
  %18797 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %18798 = and i32 %18797, 32
  %18799 = icmp eq i32 %18798, 0
  br i1 %18799, label %18804, label %18800

18800:                                            ; preds = %18781
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %18796, i8 zeroext 112, i32 15, i32 0, i64 %18794, i32 %18795, i32 1, i32 1, i32 0, i32 5) #11
  %18801 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %18782, i64 0, i32 0, i32 0, i32 0, i32 4
  %18802 = load i8*, i8** %18801, align 8
  %18803 = getelementptr inbounds i8, i8* %18802, i64 1
  store i8* %18803, i8** %18801, align 8
  store i8 %18741, i8* %18802, align 1
  br label %18805

18804:                                            ; preds = %18781
  call void @_ZN2v88internal9Assembler6pshufdENS0_11XMMRegisterENS0_7OperandEh(%"class.v8::internal::Assembler"* %18796, i32 15, i64 %18794, i32 %18795, i8 zeroext %18741) #11
  br label %18805

18805:                                            ; preds = %18804, %18800, %18780, %18776
  %18806 = phi %"class.v8::internal::SharedTurboAssembler"* [ %18760, %18776 ], [ %18760, %18780 ], [ %18782, %18800 ], [ %18782, %18804 ]
  %18807 = load i32, i32* %18733, align 4
  %18808 = and i32 %18807, 255
  %18809 = zext i32 %18808 to i64
  %18810 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %18809, i32 0
  %18811 = load i64, i64* %18810, align 8
  %18812 = and i64 %18811, 7
  %18813 = icmp ugt i64 %18812, 4
  %18814 = and i64 %18811, 24
  %18815 = icmp eq i64 %18814, 0
  %18816 = and i1 %18813, %18815
  br i1 %18816, label %18823, label %18817

18817:                                            ; preds = %18805
  %18818 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %18819 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18818, i64 0, i32 5, i64 0, i32 0
  %18820 = load i64, i64* %18819, align 8
  %18821 = ashr i64 %18820, 35
  %18822 = trunc i64 %18821 to i32
  br label %18849

18823:                                            ; preds = %18805
  %18824 = and i64 %18811, 8160
  %18825 = icmp eq i64 %18824, 448
  %18826 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %18827 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18826, i64 0, i32 5, i64 0, i32 0
  %18828 = load i64, i64* %18827, align 8
  %18829 = ashr i64 %18828, 35
  %18830 = trunc i64 %18829 to i32
  br i1 %18825, label %18831, label %18849

18831:                                            ; preds = %18823
  %18832 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18826, i64 0, i32 1
  %18833 = load i32, i32* %18832, align 4
  %18834 = and i32 %18833, 255
  %18835 = zext i32 %18834 to i64
  %18836 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18826, i64 0, i32 5, i64 %18835, i32 0
  %18837 = load i64, i64* %18836, align 8
  %18838 = ashr i64 %18837, 35
  %18839 = trunc i64 %18838 to i32
  %18840 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %18806, i64 0, i32 0, i32 0
  %18841 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %18842 = and i32 %18841, 32
  %18843 = icmp eq i32 %18842, 0
  br i1 %18843, label %18848, label %18844

18844:                                            ; preds = %18831
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %18840, i8 zeroext 112, i32 %18830, i32 0, i32 %18839, i32 1, i32 1, i32 0, i32 5) #11
  %18845 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %18806, i64 0, i32 0, i32 0, i32 0, i32 4
  %18846 = load i8*, i8** %18845, align 8
  %18847 = getelementptr inbounds i8, i8* %18846, i64 1
  store i8* %18847, i8** %18845, align 8
  store i8 %18741, i8* %18846, align 1
  br label %18872

18848:                                            ; preds = %18831
  call void @_ZN2v88internal9Assembler6pshufdENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %18840, i32 %18830, i32 %18839, i8 zeroext %18741) #11
  br label %18872

18849:                                            ; preds = %18817, %18823
  %18850 = phi %"class.v8::internal::compiler::Instruction"* [ %18818, %18817 ], [ %18826, %18823 ]
  %18851 = phi i32 [ %18822, %18817 ], [ %18830, %18823 ]
  %18852 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18850, i64 0, i32 1
  %18853 = load i32, i32* %18852, align 4
  %18854 = and i32 %18853, 255
  %18855 = zext i32 %18854 to i64
  %18856 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18850, i64 0, i32 5, i64 %18855, i32 0
  %18857 = load i64, i64* %18856, align 8
  %18858 = ashr i64 %18857, 35
  %18859 = trunc i64 %18858 to i32
  %18860 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %18859, i32 0) #11
  %18861 = extractvalue { i64, i32 } %18860, 0
  %18862 = extractvalue { i64, i32 } %18860, 1
  %18863 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %18806, i64 0, i32 0, i32 0
  %18864 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %18865 = and i32 %18864, 32
  %18866 = icmp eq i32 %18865, 0
  br i1 %18866, label %18871, label %18867

18867:                                            ; preds = %18849
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %18863, i8 zeroext 112, i32 %18851, i32 0, i64 %18861, i32 %18862, i32 1, i32 1, i32 0, i32 5) #11
  %18868 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %18806, i64 0, i32 0, i32 0, i32 0, i32 4
  %18869 = load i8*, i8** %18868, align 8
  %18870 = getelementptr inbounds i8, i8* %18869, i64 1
  store i8* %18870, i8** %18868, align 8
  store i8 %18741, i8* %18869, align 1
  br label %18872

18871:                                            ; preds = %18849
  call void @_ZN2v88internal9Assembler6pshufdENS0_11XMMRegisterENS0_7OperandEh(%"class.v8::internal::Assembler"* %18863, i32 %18851, i64 %18861, i32 %18862, i8 zeroext %18741) #11
  br label %18872

18872:                                            ; preds = %18871, %18867, %18848, %18844
  %18873 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %18874 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18873, i64 0, i32 5, i64 0, i32 0
  %18875 = load i64, i64* %18874, align 8
  %18876 = ashr i64 %18875, 35
  %18877 = trunc i64 %18876 to i32
  %18878 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18873, i64 0, i32 1
  %18879 = load i32, i32* %18878, align 4
  %18880 = and i32 %18879, 255
  %18881 = add nuw nsw i32 %18880, 3
  %18882 = zext i32 %18881 to i64
  %18883 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18873, i64 0, i32 5, i64 %18882
  %18884 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %18732, %"class.v8::internal::compiler::InstructionOperand"* %18883) #11
  %18885 = extractvalue { i64, i64 } %18884, 1
  %18886 = trunc i64 %18885 to i8
  %18887 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %18806, i64 0, i32 0, i32 0
  %18888 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %18889 = and i32 %18888, 32
  %18890 = icmp eq i32 %18889, 0
  br i1 %18890, label %18895, label %18891

18891:                                            ; preds = %18872
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %18887, i8 zeroext 14, i32 %18877, i32 %18877, i32 15, i32 1, i32 3, i32 0, i32 5) #11
  %18892 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %18806, i64 0, i32 0, i32 0, i32 0, i32 4
  %18893 = load i8*, i8** %18892, align 8
  %18894 = getelementptr inbounds i8, i8* %18893, i64 1
  store i8* %18894, i8** %18892, align 8
  store i8 %18886, i8* %18893, align 1
  br label %23402

18895:                                            ; preds = %18872
  call void @_ZN2v88internal9Assembler7pblendwENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %18887, i32 %18877, i32 15, i8 zeroext %18886) #11
  br label %23402

18896:                                            ; preds = %2
  %18897 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %18898 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %18899 = load i64, i64* %18898, align 8
  %18900 = ashr i64 %18899, 35
  %18901 = trunc i64 %18900 to i32
  %18902 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %18903 = load i32, i32* %18902, align 4
  %18904 = and i32 %18903, 255
  %18905 = zext i32 %18904 to i64
  %18906 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %18907 = and i32 %18906, 32
  %18908 = icmp eq i32 %18907, 0
  br i1 %18908, label %18928, label %18909

18909:                                            ; preds = %18896
  %18910 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %18905, i32 0
  %18911 = load i64, i64* %18910, align 8
  %18912 = ashr i64 %18911, 35
  %18913 = trunc i64 %18912 to i32
  %18914 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %18915 = add nuw nsw i64 %18905, 1
  %18916 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %18915, i32 0
  %18917 = load i64, i64* %18916, align 8
  %18918 = ashr i64 %18917, 35
  %18919 = trunc i64 %18918 to i32
  %18920 = add nuw nsw i64 %18905, 2
  %18921 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %18920
  %18922 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %18897, %"class.v8::internal::compiler::InstructionOperand"* %18921) #11
  %18923 = extractvalue { i64, i64 } %18922, 1
  %18924 = trunc i64 %18923 to i8
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %18914, i8 zeroext 14, i32 %18901, i32 %18913, i32 %18919, i32 1, i32 3, i32 0, i32 5) #11
  %18925 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %18926 = load i8*, i8** %18925, align 8
  %18927 = getelementptr inbounds i8, i8* %18926, i64 1
  store i8* %18927, i8** %18925, align 8
  store i8 %18924, i8* %18926, align 1
  br label %23402

18928:                                            ; preds = %18896
  %18929 = add nuw nsw i32 %18904, 1
  %18930 = zext i32 %18929 to i64
  %18931 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %18930, i32 0
  %18932 = load i64, i64* %18931, align 8
  %18933 = and i64 %18932, 7
  %18934 = icmp ugt i64 %18933, 4
  %18935 = and i64 %18932, 24
  %18936 = icmp eq i64 %18935, 0
  %18937 = and i1 %18934, %18936
  br i1 %18937, label %18940, label %18938

18938:                                            ; preds = %18928
  %18939 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %18952

18940:                                            ; preds = %18928
  %18941 = and i64 %18932, 8160
  %18942 = icmp eq i64 %18941, 448
  %18943 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %18942, label %18944, label %18952

18944:                                            ; preds = %18940
  %18945 = ashr i64 %18932, 35
  %18946 = trunc i64 %18945 to i32
  %18947 = add nuw nsw i64 %18905, 2
  %18948 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %18947
  %18949 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %18897, %"class.v8::internal::compiler::InstructionOperand"* %18948) #11
  %18950 = extractvalue { i64, i64 } %18949, 1
  %18951 = trunc i64 %18950 to i8
  call void @_ZN2v88internal9Assembler7pblendwENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %18943, i32 %18901, i32 %18946, i8 zeroext %18951) #11
  br label %23402

18952:                                            ; preds = %18938, %18940
  %18953 = phi %"class.v8::internal::Assembler"* [ %18939, %18938 ], [ %18943, %18940 ]
  %18954 = ashr i64 %18932, 35
  %18955 = trunc i64 %18954 to i32
  %18956 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %18955, i32 0) #11
  %18957 = extractvalue { i64, i32 } %18956, 0
  %18958 = extractvalue { i64, i32 } %18956, 1
  %18959 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %18960 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18959, i64 0, i32 1
  %18961 = load i32, i32* %18960, align 4
  %18962 = and i32 %18961, 255
  %18963 = add nuw nsw i32 %18962, 2
  %18964 = zext i32 %18963 to i64
  %18965 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18959, i64 0, i32 5, i64 %18964
  %18966 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %18897, %"class.v8::internal::compiler::InstructionOperand"* %18965) #11
  %18967 = extractvalue { i64, i64 } %18966, 1
  %18968 = trunc i64 %18967 to i8
  call void @_ZN2v88internal9Assembler7pblendwENS0_11XMMRegisterENS0_7OperandEh(%"class.v8::internal::Assembler"* %18953, i32 %18901, i64 %18957, i32 %18958, i8 zeroext %18968) #11
  br label %23402

18969:                                            ; preds = %2
  %18970 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %18971 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %18972 = load i64, i64* %18971, align 8
  %18973 = ashr i64 %18972, 35
  %18974 = trunc i64 %18973 to i32
  %18975 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %18976 = load i32, i32* %18975, align 4
  %18977 = and i32 %18976, 255
  %18978 = zext i32 %18977 to i64
  %18979 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %18978, i32 0
  %18980 = load i64, i64* %18979, align 8
  %18981 = and i64 %18980, 7
  %18982 = icmp ugt i64 %18981, 4
  %18983 = and i64 %18980, 24
  %18984 = icmp eq i64 %18983, 0
  %18985 = and i1 %18982, %18984
  br i1 %18985, label %18989, label %18986

18986:                                            ; preds = %18969
  %18987 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %18988 = bitcast %"class.v8::internal::TurboAssembler"* %18987 to %"class.v8::internal::SharedTurboAssembler"*
  br label %19011

18989:                                            ; preds = %18969
  %18990 = and i64 %18980, 8160
  %18991 = icmp eq i64 %18990, 448
  %18992 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %18993 = bitcast %"class.v8::internal::TurboAssembler"* %18992 to %"class.v8::internal::SharedTurboAssembler"*
  br i1 %18991, label %18994, label %19011

18994:                                            ; preds = %18989
  %18995 = ashr i64 %18980, 35
  %18996 = trunc i64 %18995 to i32
  %18997 = add nuw nsw i64 %18978, 1
  %18998 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %18997
  %18999 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %18970, %"class.v8::internal::compiler::InstructionOperand"* %18998) #11
  %19000 = extractvalue { i64, i64 } %18999, 1
  %19001 = trunc i64 %19000 to i8
  %19002 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %18992, i64 0, i32 0, i32 0, i32 0
  %19003 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19004 = and i32 %19003, 32
  %19005 = icmp eq i32 %19004, 0
  br i1 %19005, label %19010, label %19006

19006:                                            ; preds = %18994
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19002, i8 zeroext 112, i32 %18974, i32 0, i32 %18996, i32 3, i32 1, i32 0, i32 5) #11
  %19007 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %19008 = load i8*, i8** %19007, align 8
  %19009 = getelementptr inbounds i8, i8* %19008, i64 1
  store i8* %19009, i8** %19007, align 8
  store i8 %19001, i8* %19008, align 1
  br label %19037

19010:                                            ; preds = %18994
  call void @_ZN2v88internal9Assembler7pshuflwENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %19002, i32 %18974, i32 %18996, i8 zeroext %19001) #11
  br label %19037

19011:                                            ; preds = %18986, %18989
  %19012 = phi %"class.v8::internal::SharedTurboAssembler"* [ %18988, %18986 ], [ %18993, %18989 ]
  %19013 = ashr i64 %18980, 35
  %19014 = trunc i64 %19013 to i32
  %19015 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %19014, i32 0) #11
  %19016 = extractvalue { i64, i32 } %19015, 0
  %19017 = extractvalue { i64, i32 } %19015, 1
  %19018 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %19019 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %19018, i64 0, i32 1
  %19020 = load i32, i32* %19019, align 4
  %19021 = and i32 %19020, 255
  %19022 = add nuw nsw i32 %19021, 1
  %19023 = zext i32 %19022 to i64
  %19024 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %19018, i64 0, i32 5, i64 %19023
  %19025 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %18970, %"class.v8::internal::compiler::InstructionOperand"* %19024) #11
  %19026 = extractvalue { i64, i64 } %19025, 1
  %19027 = trunc i64 %19026 to i8
  %19028 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %19012, i64 0, i32 0, i32 0
  %19029 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19030 = and i32 %19029, 32
  %19031 = icmp eq i32 %19030, 0
  br i1 %19031, label %19036, label %19032

19032:                                            ; preds = %19011
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19028, i8 zeroext 112, i32 %18974, i32 0, i64 %19016, i32 %19017, i32 3, i32 1, i32 0, i32 5) #11
  %19033 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %19012, i64 0, i32 0, i32 0, i32 0, i32 4
  %19034 = load i8*, i8** %19033, align 8
  %19035 = getelementptr inbounds i8, i8* %19034, i64 1
  store i8* %19035, i8** %19033, align 8
  store i8 %19027, i8* %19034, align 1
  br label %19037

19036:                                            ; preds = %19011
  call void @_ZN2v88internal9Assembler7pshuflwENS0_11XMMRegisterENS0_7OperandEh(%"class.v8::internal::Assembler"* %19028, i32 %18974, i64 %19016, i32 %19017, i8 zeroext %19027) #11
  br label %19037

19037:                                            ; preds = %19036, %19032, %19010, %19006
  %19038 = phi %"class.v8::internal::SharedTurboAssembler"* [ %18993, %19006 ], [ %18993, %19010 ], [ %19012, %19032 ], [ %19012, %19036 ]
  %19039 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %19040 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %19039, i64 0, i32 1
  %19041 = load i32, i32* %19040, align 4
  %19042 = and i32 %19041, 255
  %19043 = add nuw nsw i32 %19042, 2
  %19044 = zext i32 %19043 to i64
  %19045 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %19039, i64 0, i32 5, i64 %19044
  %19046 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %18970, %"class.v8::internal::compiler::InstructionOperand"* %19045) #11
  %19047 = extractvalue { i64, i64 } %19046, 1
  %19048 = trunc i64 %19047 to i8
  %19049 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %19038, i64 0, i32 0, i32 0
  %19050 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19051 = and i32 %19050, 32
  %19052 = icmp eq i32 %19051, 0
  br i1 %19052, label %19057, label %19053

19053:                                            ; preds = %19037
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19049, i8 zeroext 112, i32 %18974, i32 0, i32 %18974, i32 2, i32 1, i32 0, i32 5) #11
  %19054 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %19038, i64 0, i32 0, i32 0, i32 0, i32 4
  %19055 = load i8*, i8** %19054, align 8
  %19056 = getelementptr inbounds i8, i8* %19055, i64 1
  store i8* %19056, i8** %19054, align 8
  store i8 %19048, i8* %19055, align 1
  br label %23402

19057:                                            ; preds = %19037
  call void @_ZN2v88internal9Assembler7pshufhwENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %19049, i32 %18974, i32 %18974, i8 zeroext %19048) #11
  br label %23402

19058:                                            ; preds = %2
  %19059 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %19060 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %19061 = load i64, i64* %19060, align 8
  %19062 = ashr i64 %19061, 35
  %19063 = trunc i64 %19062 to i32
  %19064 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %19065 = load i32, i32* %19064, align 4
  %19066 = and i32 %19065, 255
  %19067 = add nuw nsw i32 %19066, 1
  %19068 = zext i32 %19067 to i64
  %19069 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19068, i32 0
  %19070 = load i64, i64* %19069, align 8
  %19071 = and i64 %19070, 7
  %19072 = icmp ugt i64 %19071, 4
  %19073 = and i64 %19070, 24
  %19074 = icmp eq i64 %19073, 0
  %19075 = and i1 %19072, %19074
  br i1 %19075, label %19079, label %19076

19076:                                            ; preds = %19058
  %19077 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %19078 = bitcast %"class.v8::internal::TurboAssembler"* %19077 to %"class.v8::internal::SharedTurboAssembler"*
  br label %19102

19079:                                            ; preds = %19058
  %19080 = and i64 %19070, 8160
  %19081 = icmp eq i64 %19080, 448
  %19082 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %19083 = bitcast %"class.v8::internal::TurboAssembler"* %19082 to %"class.v8::internal::SharedTurboAssembler"*
  br i1 %19081, label %19084, label %19102

19084:                                            ; preds = %19079
  %19085 = ashr i64 %19070, 35
  %19086 = trunc i64 %19085 to i32
  %19087 = add nuw nsw i32 %19066, 2
  %19088 = zext i32 %19087 to i64
  %19089 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19088
  %19090 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %19059, %"class.v8::internal::compiler::InstructionOperand"* %19089) #11
  %19091 = extractvalue { i64, i64 } %19090, 1
  %19092 = trunc i64 %19091 to i8
  %19093 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %19082, i64 0, i32 0, i32 0, i32 0
  %19094 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19095 = and i32 %19094, 32
  %19096 = icmp eq i32 %19095, 0
  br i1 %19096, label %19101, label %19097

19097:                                            ; preds = %19084
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19093, i8 zeroext 112, i32 15, i32 0, i32 %19086, i32 3, i32 1, i32 0, i32 5) #11
  %19098 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %19099 = load i8*, i8** %19098, align 8
  %19100 = getelementptr inbounds i8, i8* %19099, i64 1
  store i8* %19100, i8** %19098, align 8
  store i8 %19092, i8* %19099, align 1
  br label %19128

19101:                                            ; preds = %19084
  call void @_ZN2v88internal9Assembler7pshuflwENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %19093, i32 15, i32 %19086, i8 zeroext %19092) #11
  br label %19128

19102:                                            ; preds = %19076, %19079
  %19103 = phi %"class.v8::internal::SharedTurboAssembler"* [ %19078, %19076 ], [ %19083, %19079 ]
  %19104 = ashr i64 %19070, 35
  %19105 = trunc i64 %19104 to i32
  %19106 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %19105, i32 0) #11
  %19107 = extractvalue { i64, i32 } %19106, 0
  %19108 = extractvalue { i64, i32 } %19106, 1
  %19109 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %19110 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %19109, i64 0, i32 1
  %19111 = load i32, i32* %19110, align 4
  %19112 = and i32 %19111, 255
  %19113 = add nuw nsw i32 %19112, 2
  %19114 = zext i32 %19113 to i64
  %19115 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %19109, i64 0, i32 5, i64 %19114
  %19116 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %19059, %"class.v8::internal::compiler::InstructionOperand"* %19115) #11
  %19117 = extractvalue { i64, i64 } %19116, 1
  %19118 = trunc i64 %19117 to i8
  %19119 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %19103, i64 0, i32 0, i32 0
  %19120 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19121 = and i32 %19120, 32
  %19122 = icmp eq i32 %19121, 0
  br i1 %19122, label %19127, label %19123

19123:                                            ; preds = %19102
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19119, i8 zeroext 112, i32 15, i32 0, i64 %19107, i32 %19108, i32 3, i32 1, i32 0, i32 5) #11
  %19124 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %19103, i64 0, i32 0, i32 0, i32 0, i32 4
  %19125 = load i8*, i8** %19124, align 8
  %19126 = getelementptr inbounds i8, i8* %19125, i64 1
  store i8* %19126, i8** %19124, align 8
  store i8 %19118, i8* %19125, align 1
  br label %19128

19127:                                            ; preds = %19102
  call void @_ZN2v88internal9Assembler7pshuflwENS0_11XMMRegisterENS0_7OperandEh(%"class.v8::internal::Assembler"* %19119, i32 15, i64 %19107, i32 %19108, i8 zeroext %19118) #11
  br label %19128

19128:                                            ; preds = %19127, %19123, %19101, %19097
  %19129 = phi %"class.v8::internal::SharedTurboAssembler"* [ %19083, %19097 ], [ %19083, %19101 ], [ %19103, %19123 ], [ %19103, %19127 ]
  %19130 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %19131 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %19130, i64 0, i32 1
  %19132 = load i32, i32* %19131, align 4
  %19133 = and i32 %19132, 255
  %19134 = add nuw nsw i32 %19133, 3
  %19135 = zext i32 %19134 to i64
  %19136 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %19130, i64 0, i32 5, i64 %19135
  %19137 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %19059, %"class.v8::internal::compiler::InstructionOperand"* %19136) #11
  %19138 = extractvalue { i64, i64 } %19137, 1
  %19139 = trunc i64 %19138 to i8
  %19140 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %19129, i64 0, i32 0, i32 0
  %19141 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19142 = and i32 %19141, 32
  %19143 = icmp eq i32 %19142, 0
  br i1 %19143, label %19148, label %19144

19144:                                            ; preds = %19128
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19140, i8 zeroext 112, i32 15, i32 0, i32 15, i32 2, i32 1, i32 0, i32 5) #11
  %19145 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %19129, i64 0, i32 0, i32 0, i32 0, i32 4
  %19146 = load i8*, i8** %19145, align 8
  %19147 = getelementptr inbounds i8, i8* %19146, i64 1
  store i8* %19147, i8** %19145, align 8
  store i8 %19139, i8* %19146, align 1
  br label %19149

19148:                                            ; preds = %19128
  call void @_ZN2v88internal9Assembler7pshufhwENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %19140, i32 15, i32 15, i8 zeroext %19139) #11
  br label %19149

19149:                                            ; preds = %19144, %19148
  %19150 = load i32, i32* %19064, align 4
  %19151 = and i32 %19150, 255
  %19152 = zext i32 %19151 to i64
  %19153 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19152, i32 0
  %19154 = load i64, i64* %19153, align 8
  %19155 = and i64 %19154, 7
  %19156 = icmp ugt i64 %19155, 4
  %19157 = and i64 %19154, 8184
  %19158 = icmp eq i64 %19157, 448
  %19159 = and i1 %19158, %19156
  %19160 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %19161 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %19160, i64 0, i32 1
  %19162 = load i32, i32* %19161, align 4
  %19163 = and i32 %19162, 255
  %19164 = zext i32 %19163 to i64
  %19165 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %19160, i64 0, i32 5, i64 %19164, i32 0
  %19166 = load i64, i64* %19165, align 8
  %19167 = ashr i64 %19166, 35
  %19168 = trunc i64 %19167 to i32
  br i1 %19159, label %19169, label %19183

19169:                                            ; preds = %19149
  %19170 = add nuw nsw i64 %19164, 2
  %19171 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %19160, i64 0, i32 5, i64 %19170
  %19172 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %19059, %"class.v8::internal::compiler::InstructionOperand"* %19171) #11
  %19173 = extractvalue { i64, i64 } %19172, 1
  %19174 = trunc i64 %19173 to i8
  %19175 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19176 = and i32 %19175, 32
  %19177 = icmp eq i32 %19176, 0
  br i1 %19177, label %19182, label %19178

19178:                                            ; preds = %19169
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19140, i8 zeroext 112, i32 %19063, i32 0, i32 %19168, i32 3, i32 1, i32 0, i32 5) #11
  %19179 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %19129, i64 0, i32 0, i32 0, i32 0, i32 4
  %19180 = load i8*, i8** %19179, align 8
  %19181 = getelementptr inbounds i8, i8* %19180, i64 1
  store i8* %19181, i8** %19179, align 8
  store i8 %19174, i8* %19180, align 1
  br label %19205

19182:                                            ; preds = %19169
  call void @_ZN2v88internal9Assembler7pshuflwENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %19140, i32 %19063, i32 %19168, i8 zeroext %19174) #11
  br label %19205

19183:                                            ; preds = %19149
  %19184 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %19168, i32 0) #11
  %19185 = extractvalue { i64, i32 } %19184, 0
  %19186 = extractvalue { i64, i32 } %19184, 1
  %19187 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %19188 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %19187, i64 0, i32 1
  %19189 = load i32, i32* %19188, align 4
  %19190 = and i32 %19189, 255
  %19191 = add nuw nsw i32 %19190, 2
  %19192 = zext i32 %19191 to i64
  %19193 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %19187, i64 0, i32 5, i64 %19192
  %19194 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %19059, %"class.v8::internal::compiler::InstructionOperand"* %19193) #11
  %19195 = extractvalue { i64, i64 } %19194, 1
  %19196 = trunc i64 %19195 to i8
  %19197 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19198 = and i32 %19197, 32
  %19199 = icmp eq i32 %19198, 0
  br i1 %19199, label %19204, label %19200

19200:                                            ; preds = %19183
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19140, i8 zeroext 112, i32 %19063, i32 0, i64 %19185, i32 %19186, i32 3, i32 1, i32 0, i32 5) #11
  %19201 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %19129, i64 0, i32 0, i32 0, i32 0, i32 4
  %19202 = load i8*, i8** %19201, align 8
  %19203 = getelementptr inbounds i8, i8* %19202, i64 1
  store i8* %19203, i8** %19201, align 8
  store i8 %19196, i8* %19202, align 1
  br label %19205

19204:                                            ; preds = %19183
  call void @_ZN2v88internal9Assembler7pshuflwENS0_11XMMRegisterENS0_7OperandEh(%"class.v8::internal::Assembler"* %19140, i32 %19063, i64 %19185, i32 %19186, i8 zeroext %19196) #11
  br label %19205

19205:                                            ; preds = %19204, %19200, %19182, %19178
  %19206 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %19207 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %19206, i64 0, i32 1
  %19208 = load i32, i32* %19207, align 4
  %19209 = and i32 %19208, 255
  %19210 = add nuw nsw i32 %19209, 3
  %19211 = zext i32 %19210 to i64
  %19212 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %19206, i64 0, i32 5, i64 %19211
  %19213 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %19059, %"class.v8::internal::compiler::InstructionOperand"* %19212) #11
  %19214 = extractvalue { i64, i64 } %19213, 1
  %19215 = trunc i64 %19214 to i8
  %19216 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19217 = and i32 %19216, 32
  %19218 = icmp eq i32 %19217, 0
  br i1 %19218, label %19223, label %19219

19219:                                            ; preds = %19205
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19140, i8 zeroext 112, i32 %19063, i32 0, i32 %19063, i32 2, i32 1, i32 0, i32 5) #11
  %19220 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %19129, i64 0, i32 0, i32 0, i32 0, i32 4
  %19221 = load i8*, i8** %19220, align 8
  %19222 = getelementptr inbounds i8, i8* %19221, i64 1
  store i8* %19222, i8** %19220, align 8
  store i8 %19215, i8* %19221, align 1
  br label %19224

19223:                                            ; preds = %19205
  call void @_ZN2v88internal9Assembler7pshufhwENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %19140, i32 %19063, i32 %19063, i8 zeroext %19215) #11
  br label %19224

19224:                                            ; preds = %19219, %19223
  %19225 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %19226 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %19225, i64 0, i32 1
  %19227 = load i32, i32* %19226, align 4
  %19228 = and i32 %19227, 255
  %19229 = add nuw nsw i32 %19228, 4
  %19230 = zext i32 %19229 to i64
  %19231 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %19225, i64 0, i32 5, i64 %19230
  %19232 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %19059, %"class.v8::internal::compiler::InstructionOperand"* %19231) #11
  %19233 = extractvalue { i64, i64 } %19232, 1
  %19234 = trunc i64 %19233 to i8
  %19235 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19236 = and i32 %19235, 32
  %19237 = icmp eq i32 %19236, 0
  br i1 %19237, label %19242, label %19238

19238:                                            ; preds = %19224
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19140, i8 zeroext 14, i32 %19063, i32 %19063, i32 15, i32 1, i32 3, i32 0, i32 5) #11
  %19239 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %19129, i64 0, i32 0, i32 0, i32 0, i32 4
  %19240 = load i8*, i8** %19239, align 8
  %19241 = getelementptr inbounds i8, i8* %19240, i64 1
  store i8* %19241, i8** %19239, align 8
  store i8 %19234, i8* %19240, align 1
  br label %23402

19242:                                            ; preds = %19224
  call void @_ZN2v88internal9Assembler7pblendwENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %19140, i32 %19063, i32 15, i8 zeroext %19234) #11
  br label %23402

19243:                                            ; preds = %2
  %19244 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %19245 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %19246 = load i64, i64* %19245, align 8
  %19247 = ashr i64 %19246, 35
  %19248 = trunc i64 %19247 to i32
  %19249 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %19250 = load i32, i32* %19249, align 4
  %19251 = and i32 %19250, 255
  %19252 = zext i32 %19251 to i64
  %19253 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19254 = and i32 %19253, 32
  %19255 = icmp eq i32 %19254, 0
  br i1 %19255, label %19275, label %19256

19256:                                            ; preds = %19243
  %19257 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19252, i32 0
  %19258 = load i64, i64* %19257, align 8
  %19259 = ashr i64 %19258, 35
  %19260 = trunc i64 %19259 to i32
  %19261 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %19262 = add nuw nsw i64 %19252, 1
  %19263 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19262, i32 0
  %19264 = load i64, i64* %19263, align 8
  %19265 = ashr i64 %19264, 35
  %19266 = trunc i64 %19265 to i32
  %19267 = add nuw nsw i64 %19252, 2
  %19268 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19267
  %19269 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %19244, %"class.v8::internal::compiler::InstructionOperand"* %19268) #11
  %19270 = extractvalue { i64, i64 } %19269, 1
  %19271 = trunc i64 %19270 to i8
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19261, i8 zeroext 15, i32 %19248, i32 %19260, i32 %19266, i32 1, i32 3, i32 0, i32 5) #11
  %19272 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %19273 = load i8*, i8** %19272, align 8
  %19274 = getelementptr inbounds i8, i8* %19273, i64 1
  store i8* %19274, i8** %19272, align 8
  store i8 %19271, i8* %19273, align 1
  br label %23402

19275:                                            ; preds = %19243
  %19276 = add nuw nsw i32 %19251, 1
  %19277 = zext i32 %19276 to i64
  %19278 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19277, i32 0
  %19279 = load i64, i64* %19278, align 8
  %19280 = and i64 %19279, 7
  %19281 = icmp ugt i64 %19280, 4
  %19282 = and i64 %19279, 24
  %19283 = icmp eq i64 %19282, 0
  %19284 = and i1 %19281, %19283
  br i1 %19284, label %19287, label %19285

19285:                                            ; preds = %19275
  %19286 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %19299

19287:                                            ; preds = %19275
  %19288 = and i64 %19279, 8160
  %19289 = icmp eq i64 %19288, 448
  %19290 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %19289, label %19291, label %19299

19291:                                            ; preds = %19287
  %19292 = ashr i64 %19279, 35
  %19293 = trunc i64 %19292 to i32
  %19294 = add nuw nsw i64 %19252, 2
  %19295 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19294
  %19296 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %19244, %"class.v8::internal::compiler::InstructionOperand"* %19295) #11
  %19297 = extractvalue { i64, i64 } %19296, 1
  %19298 = trunc i64 %19297 to i8
  call void @_ZN2v88internal9Assembler7palignrENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %19290, i32 %19248, i32 %19293, i8 zeroext %19298) #11
  br label %23402

19299:                                            ; preds = %19285, %19287
  %19300 = phi %"class.v8::internal::Assembler"* [ %19286, %19285 ], [ %19290, %19287 ]
  %19301 = ashr i64 %19279, 35
  %19302 = trunc i64 %19301 to i32
  %19303 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %19302, i32 0) #11
  %19304 = extractvalue { i64, i32 } %19303, 0
  %19305 = extractvalue { i64, i32 } %19303, 1
  %19306 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %19307 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %19306, i64 0, i32 1
  %19308 = load i32, i32* %19307, align 4
  %19309 = and i32 %19308, 255
  %19310 = add nuw nsw i32 %19309, 2
  %19311 = zext i32 %19310 to i64
  %19312 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %19306, i64 0, i32 5, i64 %19311
  %19313 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %19244, %"class.v8::internal::compiler::InstructionOperand"* %19312) #11
  %19314 = extractvalue { i64, i64 } %19313, 1
  %19315 = trunc i64 %19314 to i8
  call void @_ZN2v88internal9Assembler7palignrENS0_11XMMRegisterENS0_7OperandEh(%"class.v8::internal::Assembler"* %19300, i32 %19248, i64 %19304, i32 %19305, i8 zeroext %19315) #11
  br label %23402

19316:                                            ; preds = %2
  %19317 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %19318 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %19319 = load i64, i64* %19318, align 8
  %19320 = ashr i64 %19319, 35
  %19321 = trunc i64 %19320 to i32
  %19322 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %19323 = load i32, i32* %19322, align 4
  %19324 = and i32 %19323, 255
  %19325 = add nuw nsw i32 %19324, 1
  %19326 = zext i32 %19325 to i64
  %19327 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19326
  %19328 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %19317, %"class.v8::internal::compiler::InstructionOperand"* %19327) #11
  %19329 = extractvalue { i64, i64 } %19328, 1
  %19330 = trunc i64 %19329 to i8
  %19331 = and i8 %19330, 4
  %19332 = and i8 %19330, 3
  %19333 = shl nuw nsw i8 %19332, 2
  %19334 = shl nuw nsw i8 %19332, 4
  %19335 = shl i8 %19330, 6
  %19336 = or i8 %19335, %19332
  %19337 = or i8 %19336, %19333
  %19338 = or i8 %19337, %19334
  %19339 = icmp eq i8 %19331, 0
  %19340 = load i32, i32* %19322, align 4
  %19341 = and i32 %19340, 255
  %19342 = zext i32 %19341 to i64
  %19343 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19342, i32 0
  %19344 = load i64, i64* %19343, align 8
  %19345 = and i64 %19344, 7
  %19346 = icmp ugt i64 %19345, 4
  %19347 = and i64 %19344, 24
  %19348 = icmp eq i64 %19347, 0
  %19349 = and i1 %19346, %19348
  br i1 %19349, label %19350, label %19353

19350:                                            ; preds = %19316
  %19351 = and i64 %19344, 8160
  %19352 = icmp eq i64 %19351, 448
  br label %19353

19353:                                            ; preds = %19316, %19350
  %19354 = phi i1 [ false, %19316 ], [ %19352, %19350 ]
  %19355 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %19356 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %19357 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %19356, i64 0, i32 1
  %19358 = load i32, i32* %19357, align 4
  %19359 = and i32 %19358, 255
  %19360 = zext i32 %19359 to i64
  %19361 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %19356, i64 0, i32 5, i64 %19360, i32 0
  %19362 = load i64, i64* %19361, align 8
  %19363 = ashr i64 %19362, 35
  %19364 = trunc i64 %19363 to i32
  br i1 %19339, label %19365, label %19399

19365:                                            ; preds = %19353
  br i1 %19354, label %19366, label %19376

19366:                                            ; preds = %19365
  %19367 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %19355, i64 0, i32 0, i32 0, i32 0
  %19368 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19369 = and i32 %19368, 32
  %19370 = icmp eq i32 %19369, 0
  br i1 %19370, label %19375, label %19371

19371:                                            ; preds = %19366
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19367, i8 zeroext 112, i32 %19321, i32 0, i32 %19364, i32 3, i32 1, i32 0, i32 5) #11
  %19372 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %19373 = load i8*, i8** %19372, align 8
  %19374 = getelementptr inbounds i8, i8* %19373, i64 1
  store i8* %19374, i8** %19372, align 8
  store i8 %19338, i8* %19373, align 1
  br label %19389

19375:                                            ; preds = %19366
  call void @_ZN2v88internal9Assembler7pshuflwENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %19367, i32 %19321, i32 %19364, i8 zeroext %19338) #11
  br label %19389

19376:                                            ; preds = %19365
  %19377 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %19364, i32 0) #11
  %19378 = extractvalue { i64, i32 } %19377, 0
  %19379 = extractvalue { i64, i32 } %19377, 1
  %19380 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %19355, i64 0, i32 0, i32 0, i32 0
  %19381 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19382 = and i32 %19381, 32
  %19383 = icmp eq i32 %19382, 0
  br i1 %19383, label %19388, label %19384

19384:                                            ; preds = %19376
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19380, i8 zeroext 112, i32 %19321, i32 0, i64 %19378, i32 %19379, i32 3, i32 1, i32 0, i32 5) #11
  %19385 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %19386 = load i8*, i8** %19385, align 8
  %19387 = getelementptr inbounds i8, i8* %19386, i64 1
  store i8* %19387, i8** %19385, align 8
  store i8 %19338, i8* %19386, align 1
  br label %19389

19388:                                            ; preds = %19376
  call void @_ZN2v88internal9Assembler7pshuflwENS0_11XMMRegisterENS0_7OperandEh(%"class.v8::internal::Assembler"* %19380, i32 %19321, i64 %19378, i32 %19379, i8 zeroext %19338) #11
  br label %19389

19389:                                            ; preds = %19388, %19384, %19375, %19371
  %19390 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %19355, i64 0, i32 0, i32 0, i32 0
  %19391 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19392 = and i32 %19391, 32
  %19393 = icmp eq i32 %19392, 0
  br i1 %19393, label %19398, label %19394

19394:                                            ; preds = %19389
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19390, i8 zeroext 112, i32 %19321, i32 0, i32 %19321, i32 1, i32 1, i32 0, i32 5) #11
  %19395 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %19396 = load i8*, i8** %19395, align 8
  %19397 = getelementptr inbounds i8, i8* %19396, i64 1
  store i8* %19397, i8** %19395, align 8
  store i8 0, i8* %19396, align 1
  br label %23402

19398:                                            ; preds = %19389
  call void @_ZN2v88internal9Assembler6pshufdENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %19390, i32 %19321, i32 %19321, i8 zeroext 0) #11
  br label %23402

19399:                                            ; preds = %19353
  br i1 %19354, label %19400, label %19410

19400:                                            ; preds = %19399
  %19401 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %19355, i64 0, i32 0, i32 0, i32 0
  %19402 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19403 = and i32 %19402, 32
  %19404 = icmp eq i32 %19403, 0
  br i1 %19404, label %19409, label %19405

19405:                                            ; preds = %19400
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19401, i8 zeroext 112, i32 %19321, i32 0, i32 %19364, i32 2, i32 1, i32 0, i32 5) #11
  %19406 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %19407 = load i8*, i8** %19406, align 8
  %19408 = getelementptr inbounds i8, i8* %19407, i64 1
  store i8* %19408, i8** %19406, align 8
  store i8 %19338, i8* %19407, align 1
  br label %19423

19409:                                            ; preds = %19400
  call void @_ZN2v88internal9Assembler7pshufhwENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %19401, i32 %19321, i32 %19364, i8 zeroext %19338) #11
  br label %19423

19410:                                            ; preds = %19399
  %19411 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %19364, i32 0) #11
  %19412 = extractvalue { i64, i32 } %19411, 0
  %19413 = extractvalue { i64, i32 } %19411, 1
  %19414 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %19355, i64 0, i32 0, i32 0, i32 0
  %19415 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19416 = and i32 %19415, 32
  %19417 = icmp eq i32 %19416, 0
  br i1 %19417, label %19422, label %19418

19418:                                            ; preds = %19410
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19414, i8 zeroext 112, i32 %19321, i32 0, i64 %19412, i32 %19413, i32 3, i32 1, i32 0, i32 5) #11
  %19419 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %19420 = load i8*, i8** %19419, align 8
  %19421 = getelementptr inbounds i8, i8* %19420, i64 1
  store i8* %19421, i8** %19419, align 8
  store i8 %19338, i8* %19420, align 1
  br label %19423

19422:                                            ; preds = %19410
  call void @_ZN2v88internal9Assembler7pshufhwENS0_11XMMRegisterENS0_7OperandEh(%"class.v8::internal::Assembler"* %19414, i32 %19321, i64 %19412, i32 %19413, i8 zeroext %19338) #11
  br label %19423

19423:                                            ; preds = %19422, %19418, %19409, %19405
  %19424 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %19355, i64 0, i32 0, i32 0, i32 0
  %19425 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19426 = and i32 %19425, 32
  %19427 = icmp eq i32 %19426, 0
  br i1 %19427, label %19432, label %19428

19428:                                            ; preds = %19423
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19424, i8 zeroext 112, i32 %19321, i32 0, i32 %19321, i32 1, i32 1, i32 0, i32 5) #11
  %19429 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %19430 = load i8*, i8** %19429, align 8
  %19431 = getelementptr inbounds i8, i8* %19430, i64 1
  store i8* %19431, i8** %19429, align 8
  store i8 -86, i8* %19430, align 1
  br label %23402

19432:                                            ; preds = %19423
  call void @_ZN2v88internal9Assembler6pshufdENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %19424, i32 %19321, i32 %19321, i8 zeroext -86) #11
  br label %23402

19433:                                            ; preds = %2
  %19434 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %154, i64 0, i32 0
  %19435 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %19436 = load i64, i64* %19435, align 8
  %19437 = ashr i64 %19436, 35
  %19438 = trunc i64 %19437 to i32
  %19439 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %19440 = load i32, i32* %19439, align 4
  %19441 = and i32 %19440, 255
  %19442 = add nuw nsw i32 %19441, 1
  %19443 = zext i32 %19442 to i64
  %19444 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19443
  %19445 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %19434, %"class.v8::internal::compiler::InstructionOperand"* %19444) #11
  %19446 = extractvalue { i64, i64 } %19445, 1
  %19447 = trunc i64 %19446 to i8
  %19448 = and i8 %19447, 8
  %19449 = icmp eq i8 %19448, 0
  %19450 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %19451 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19452 = and i32 %19451, 32
  %19453 = icmp eq i32 %19452, 0
  br i1 %19449, label %19454, label %19457

19454:                                            ; preds = %19433
  br i1 %19453, label %19456, label %19455

19455:                                            ; preds = %19454
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19450, i8 zeroext 96, i32 %19438, i32 %19438, i32 %19438, i32 1, i32 1, i32 0, i32 5) #11
  br label %19460

19456:                                            ; preds = %19454
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %19450, i32 %19438, i32 %19438, i8 zeroext 102, i8 zeroext 15, i8 zeroext 96) #11
  br label %19460

19457:                                            ; preds = %19433
  br i1 %19453, label %19459, label %19458

19458:                                            ; preds = %19457
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19450, i8 zeroext 104, i32 %19438, i32 %19438, i32 %19438, i32 1, i32 1, i32 0, i32 5) #11
  br label %19460

19459:                                            ; preds = %19457
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %19450, i32 %19438, i32 %19438, i8 zeroext 102, i8 zeroext 15, i8 zeroext 104) #11
  br label %19460

19460:                                            ; preds = %19459, %19458, %19456, %19455
  %19461 = and i8 %19447, 4
  %19462 = and i8 %19447, 3
  %19463 = shl nuw nsw i8 %19462, 2
  %19464 = shl nuw nsw i8 %19462, 4
  %19465 = shl i8 %19447, 6
  %19466 = or i8 %19465, %19462
  %19467 = or i8 %19466, %19463
  %19468 = or i8 %19467, %19464
  %19469 = icmp eq i8 %19461, 0
  %19470 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19471 = and i32 %19470, 32
  %19472 = icmp eq i32 %19471, 0
  br i1 %19469, label %19473, label %19488

19473:                                            ; preds = %19460
  br i1 %19472, label %19478, label %19474

19474:                                            ; preds = %19473
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19450, i8 zeroext 112, i32 %19438, i32 0, i32 %19438, i32 3, i32 1, i32 0, i32 5) #11
  %19475 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %19476 = load i8*, i8** %19475, align 8
  %19477 = getelementptr inbounds i8, i8* %19476, i64 1
  store i8* %19477, i8** %19475, align 8
  store i8 %19468, i8* %19476, align 1
  br label %19479

19478:                                            ; preds = %19473
  call void @_ZN2v88internal9Assembler7pshuflwENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %19450, i32 %19438, i32 %19438, i8 zeroext %19468) #11
  br label %19479

19479:                                            ; preds = %19474, %19478
  %19480 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19481 = and i32 %19480, 32
  %19482 = icmp eq i32 %19481, 0
  br i1 %19482, label %19487, label %19483

19483:                                            ; preds = %19479
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19450, i8 zeroext 112, i32 %19438, i32 0, i32 %19438, i32 1, i32 1, i32 0, i32 5) #11
  %19484 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %19485 = load i8*, i8** %19484, align 8
  %19486 = getelementptr inbounds i8, i8* %19485, i64 1
  store i8* %19486, i8** %19484, align 8
  store i8 0, i8* %19485, align 1
  br label %23402

19487:                                            ; preds = %19479
  call void @_ZN2v88internal9Assembler6pshufdENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %19450, i32 %19438, i32 %19438, i8 zeroext 0) #11
  br label %23402

19488:                                            ; preds = %19460
  br i1 %19472, label %19493, label %19489

19489:                                            ; preds = %19488
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19450, i8 zeroext 112, i32 %19438, i32 0, i32 %19438, i32 2, i32 1, i32 0, i32 5) #11
  %19490 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %19491 = load i8*, i8** %19490, align 8
  %19492 = getelementptr inbounds i8, i8* %19491, i64 1
  store i8* %19492, i8** %19490, align 8
  store i8 %19468, i8* %19491, align 1
  br label %19494

19493:                                            ; preds = %19488
  call void @_ZN2v88internal9Assembler7pshufhwENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %19450, i32 %19438, i32 %19438, i8 zeroext %19468) #11
  br label %19494

19494:                                            ; preds = %19489, %19493
  %19495 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19496 = and i32 %19495, 32
  %19497 = icmp eq i32 %19496, 0
  br i1 %19497, label %19502, label %19498

19498:                                            ; preds = %19494
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19450, i8 zeroext 112, i32 %19438, i32 0, i32 %19438, i32 1, i32 1, i32 0, i32 5) #11
  %19499 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %19500 = load i8*, i8** %19499, align 8
  %19501 = getelementptr inbounds i8, i8* %19500, i64 1
  store i8* %19501, i8** %19499, align 8
  store i8 -86, i8* %19500, align 1
  br label %23402

19502:                                            ; preds = %19494
  call void @_ZN2v88internal9Assembler6pshufdENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %19450, i32 %19438, i32 %19438, i8 zeroext -86) #11
  br label %23402

19503:                                            ; preds = %2
  %19504 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %19505 = load i64, i64* %19504, align 8
  %19506 = ashr i64 %19505, 35
  %19507 = trunc i64 %19506 to i32
  %19508 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %19509 = load i32, i32* %19508, align 4
  %19510 = and i32 %19509, 16776960
  %19511 = icmp eq i32 %19510, 512
  %19512 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19513 = and i32 %19512, 32
  %19514 = icmp eq i32 %19513, 0
  br i1 %19514, label %19529, label %19515

19515:                                            ; preds = %19503
  %19516 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %19517 = and i32 %19509, 255
  %19518 = zext i32 %19517 to i64
  %19519 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19518, i32 0
  %19520 = load i64, i64* %19519, align 8
  %19521 = ashr i64 %19520, 35
  %19522 = trunc i64 %19521 to i32
  %19523 = zext i1 %19511 to i64
  %19524 = add nuw nsw i64 %19518, %19523
  %19525 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19524, i32 0
  %19526 = load i64, i64* %19525, align 8
  %19527 = ashr i64 %19526, 35
  %19528 = trunc i64 %19527 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19516, i8 zeroext 109, i32 %19507, i32 %19522, i32 %19528, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

19529:                                            ; preds = %19503
  %19530 = zext i1 %19511 to i64
  %19531 = and i32 %19509, 255
  %19532 = zext i32 %19531 to i64
  %19533 = add nuw nsw i64 %19530, %19532
  %19534 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19533, i32 0
  %19535 = load i64, i64* %19534, align 8
  %19536 = and i64 %19535, 7
  %19537 = icmp ugt i64 %19536, 4
  %19538 = and i64 %19535, 24
  %19539 = icmp eq i64 %19538, 0
  %19540 = and i1 %19537, %19539
  br i1 %19540, label %19543, label %19541

19541:                                            ; preds = %19529
  %19542 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %19550

19543:                                            ; preds = %19529
  %19544 = and i64 %19535, 8160
  %19545 = icmp eq i64 %19544, 448
  %19546 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %19545, label %19547, label %19550

19547:                                            ; preds = %19543
  %19548 = ashr i64 %19535, 35
  %19549 = trunc i64 %19548 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %19546, i32 %19507, i32 %19549, i8 zeroext 102, i8 zeroext 15, i8 zeroext 109) #11
  br label %23402

19550:                                            ; preds = %19541, %19543
  %19551 = phi %"class.v8::internal::Assembler"* [ %19542, %19541 ], [ %19546, %19543 ]
  %19552 = ashr i64 %19535, 35
  %19553 = trunc i64 %19552 to i32
  %19554 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %19553, i32 0) #11
  %19555 = extractvalue { i64, i32 } %19554, 0
  %19556 = extractvalue { i64, i32 } %19554, 1
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %19551, i32 %19507, i64 %19555, i32 %19556, i8 zeroext 102, i8 zeroext 15, i8 zeroext 109) #11
  br label %23402

19557:                                            ; preds = %2
  %19558 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %19559 = load i64, i64* %19558, align 8
  %19560 = ashr i64 %19559, 35
  %19561 = trunc i64 %19560 to i32
  %19562 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %19563 = load i32, i32* %19562, align 4
  %19564 = and i32 %19563, 16776960
  %19565 = icmp eq i32 %19564, 512
  %19566 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19567 = and i32 %19566, 32
  %19568 = icmp eq i32 %19567, 0
  br i1 %19568, label %19583, label %19569

19569:                                            ; preds = %19557
  %19570 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %19571 = and i32 %19563, 255
  %19572 = zext i32 %19571 to i64
  %19573 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19572, i32 0
  %19574 = load i64, i64* %19573, align 8
  %19575 = ashr i64 %19574, 35
  %19576 = trunc i64 %19575 to i32
  %19577 = zext i1 %19565 to i64
  %19578 = add nuw nsw i64 %19572, %19577
  %19579 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19578, i32 0
  %19580 = load i64, i64* %19579, align 8
  %19581 = ashr i64 %19580, 35
  %19582 = trunc i64 %19581 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19570, i8 zeroext 106, i32 %19561, i32 %19576, i32 %19582, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

19583:                                            ; preds = %19557
  %19584 = zext i1 %19565 to i64
  %19585 = and i32 %19563, 255
  %19586 = zext i32 %19585 to i64
  %19587 = add nuw nsw i64 %19584, %19586
  %19588 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19587, i32 0
  %19589 = load i64, i64* %19588, align 8
  %19590 = and i64 %19589, 7
  %19591 = icmp ugt i64 %19590, 4
  %19592 = and i64 %19589, 24
  %19593 = icmp eq i64 %19592, 0
  %19594 = and i1 %19591, %19593
  br i1 %19594, label %19597, label %19595

19595:                                            ; preds = %19583
  %19596 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %19604

19597:                                            ; preds = %19583
  %19598 = and i64 %19589, 8160
  %19599 = icmp eq i64 %19598, 448
  %19600 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %19599, label %19601, label %19604

19601:                                            ; preds = %19597
  %19602 = ashr i64 %19589, 35
  %19603 = trunc i64 %19602 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %19600, i32 %19561, i32 %19603, i8 zeroext 102, i8 zeroext 15, i8 zeroext 106) #11
  br label %23402

19604:                                            ; preds = %19595, %19597
  %19605 = phi %"class.v8::internal::Assembler"* [ %19596, %19595 ], [ %19600, %19597 ]
  %19606 = ashr i64 %19589, 35
  %19607 = trunc i64 %19606 to i32
  %19608 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %19607, i32 0) #11
  %19609 = extractvalue { i64, i32 } %19608, 0
  %19610 = extractvalue { i64, i32 } %19608, 1
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %19605, i32 %19561, i64 %19609, i32 %19610, i8 zeroext 102, i8 zeroext 15, i8 zeroext 106) #11
  br label %23402

19611:                                            ; preds = %2
  %19612 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %19613 = load i64, i64* %19612, align 8
  %19614 = ashr i64 %19613, 35
  %19615 = trunc i64 %19614 to i32
  %19616 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %19617 = load i32, i32* %19616, align 4
  %19618 = and i32 %19617, 16776960
  %19619 = icmp eq i32 %19618, 512
  %19620 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19621 = and i32 %19620, 32
  %19622 = icmp eq i32 %19621, 0
  br i1 %19622, label %19637, label %19623

19623:                                            ; preds = %19611
  %19624 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %19625 = and i32 %19617, 255
  %19626 = zext i32 %19625 to i64
  %19627 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19626, i32 0
  %19628 = load i64, i64* %19627, align 8
  %19629 = ashr i64 %19628, 35
  %19630 = trunc i64 %19629 to i32
  %19631 = zext i1 %19619 to i64
  %19632 = add nuw nsw i64 %19626, %19631
  %19633 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19632, i32 0
  %19634 = load i64, i64* %19633, align 8
  %19635 = ashr i64 %19634, 35
  %19636 = trunc i64 %19635 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19624, i8 zeroext 105, i32 %19615, i32 %19630, i32 %19636, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

19637:                                            ; preds = %19611
  %19638 = zext i1 %19619 to i64
  %19639 = and i32 %19617, 255
  %19640 = zext i32 %19639 to i64
  %19641 = add nuw nsw i64 %19638, %19640
  %19642 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19641, i32 0
  %19643 = load i64, i64* %19642, align 8
  %19644 = and i64 %19643, 7
  %19645 = icmp ugt i64 %19644, 4
  %19646 = and i64 %19643, 24
  %19647 = icmp eq i64 %19646, 0
  %19648 = and i1 %19645, %19647
  br i1 %19648, label %19651, label %19649

19649:                                            ; preds = %19637
  %19650 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %19658

19651:                                            ; preds = %19637
  %19652 = and i64 %19643, 8160
  %19653 = icmp eq i64 %19652, 448
  %19654 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %19653, label %19655, label %19658

19655:                                            ; preds = %19651
  %19656 = ashr i64 %19643, 35
  %19657 = trunc i64 %19656 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %19654, i32 %19615, i32 %19657, i8 zeroext 102, i8 zeroext 15, i8 zeroext 105) #11
  br label %23402

19658:                                            ; preds = %19649, %19651
  %19659 = phi %"class.v8::internal::Assembler"* [ %19650, %19649 ], [ %19654, %19651 ]
  %19660 = ashr i64 %19643, 35
  %19661 = trunc i64 %19660 to i32
  %19662 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %19661, i32 0) #11
  %19663 = extractvalue { i64, i32 } %19662, 0
  %19664 = extractvalue { i64, i32 } %19662, 1
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %19659, i32 %19615, i64 %19663, i32 %19664, i8 zeroext 102, i8 zeroext 15, i8 zeroext 105) #11
  br label %23402

19665:                                            ; preds = %2
  %19666 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %19667 = load i64, i64* %19666, align 8
  %19668 = ashr i64 %19667, 35
  %19669 = trunc i64 %19668 to i32
  %19670 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %19671 = load i32, i32* %19670, align 4
  %19672 = and i32 %19671, 16776960
  %19673 = icmp eq i32 %19672, 512
  %19674 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19675 = and i32 %19674, 32
  %19676 = icmp eq i32 %19675, 0
  br i1 %19676, label %19691, label %19677

19677:                                            ; preds = %19665
  %19678 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %19679 = and i32 %19671, 255
  %19680 = zext i32 %19679 to i64
  %19681 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19680, i32 0
  %19682 = load i64, i64* %19681, align 8
  %19683 = ashr i64 %19682, 35
  %19684 = trunc i64 %19683 to i32
  %19685 = zext i1 %19673 to i64
  %19686 = add nuw nsw i64 %19680, %19685
  %19687 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19686, i32 0
  %19688 = load i64, i64* %19687, align 8
  %19689 = ashr i64 %19688, 35
  %19690 = trunc i64 %19689 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19678, i8 zeroext 104, i32 %19669, i32 %19684, i32 %19690, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

19691:                                            ; preds = %19665
  %19692 = zext i1 %19673 to i64
  %19693 = and i32 %19671, 255
  %19694 = zext i32 %19693 to i64
  %19695 = add nuw nsw i64 %19692, %19694
  %19696 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19695, i32 0
  %19697 = load i64, i64* %19696, align 8
  %19698 = and i64 %19697, 7
  %19699 = icmp ugt i64 %19698, 4
  %19700 = and i64 %19697, 24
  %19701 = icmp eq i64 %19700, 0
  %19702 = and i1 %19699, %19701
  br i1 %19702, label %19705, label %19703

19703:                                            ; preds = %19691
  %19704 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %19712

19705:                                            ; preds = %19691
  %19706 = and i64 %19697, 8160
  %19707 = icmp eq i64 %19706, 448
  %19708 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %19707, label %19709, label %19712

19709:                                            ; preds = %19705
  %19710 = ashr i64 %19697, 35
  %19711 = trunc i64 %19710 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %19708, i32 %19669, i32 %19711, i8 zeroext 102, i8 zeroext 15, i8 zeroext 104) #11
  br label %23402

19712:                                            ; preds = %19703, %19705
  %19713 = phi %"class.v8::internal::Assembler"* [ %19704, %19703 ], [ %19708, %19705 ]
  %19714 = ashr i64 %19697, 35
  %19715 = trunc i64 %19714 to i32
  %19716 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %19715, i32 0) #11
  %19717 = extractvalue { i64, i32 } %19716, 0
  %19718 = extractvalue { i64, i32 } %19716, 1
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %19713, i32 %19669, i64 %19717, i32 %19718, i8 zeroext 102, i8 zeroext 15, i8 zeroext 104) #11
  br label %23402

19719:                                            ; preds = %2
  %19720 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %19721 = load i64, i64* %19720, align 8
  %19722 = ashr i64 %19721, 35
  %19723 = trunc i64 %19722 to i32
  %19724 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %19725 = load i32, i32* %19724, align 4
  %19726 = and i32 %19725, 16776960
  %19727 = icmp eq i32 %19726, 512
  %19728 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19729 = and i32 %19728, 32
  %19730 = icmp eq i32 %19729, 0
  br i1 %19730, label %19745, label %19731

19731:                                            ; preds = %19719
  %19732 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %19733 = and i32 %19725, 255
  %19734 = zext i32 %19733 to i64
  %19735 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19734, i32 0
  %19736 = load i64, i64* %19735, align 8
  %19737 = ashr i64 %19736, 35
  %19738 = trunc i64 %19737 to i32
  %19739 = zext i1 %19727 to i64
  %19740 = add nuw nsw i64 %19734, %19739
  %19741 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19740, i32 0
  %19742 = load i64, i64* %19741, align 8
  %19743 = ashr i64 %19742, 35
  %19744 = trunc i64 %19743 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19732, i8 zeroext 108, i32 %19723, i32 %19738, i32 %19744, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

19745:                                            ; preds = %19719
  %19746 = zext i1 %19727 to i64
  %19747 = and i32 %19725, 255
  %19748 = zext i32 %19747 to i64
  %19749 = add nuw nsw i64 %19746, %19748
  %19750 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19749, i32 0
  %19751 = load i64, i64* %19750, align 8
  %19752 = and i64 %19751, 7
  %19753 = icmp ugt i64 %19752, 4
  %19754 = and i64 %19751, 24
  %19755 = icmp eq i64 %19754, 0
  %19756 = and i1 %19753, %19755
  br i1 %19756, label %19759, label %19757

19757:                                            ; preds = %19745
  %19758 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %19766

19759:                                            ; preds = %19745
  %19760 = and i64 %19751, 8160
  %19761 = icmp eq i64 %19760, 448
  %19762 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %19761, label %19763, label %19766

19763:                                            ; preds = %19759
  %19764 = ashr i64 %19751, 35
  %19765 = trunc i64 %19764 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %19762, i32 %19723, i32 %19765, i8 zeroext 102, i8 zeroext 15, i8 zeroext 108) #11
  br label %23402

19766:                                            ; preds = %19757, %19759
  %19767 = phi %"class.v8::internal::Assembler"* [ %19758, %19757 ], [ %19762, %19759 ]
  %19768 = ashr i64 %19751, 35
  %19769 = trunc i64 %19768 to i32
  %19770 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %19769, i32 0) #11
  %19771 = extractvalue { i64, i32 } %19770, 0
  %19772 = extractvalue { i64, i32 } %19770, 1
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %19767, i32 %19723, i64 %19771, i32 %19772, i8 zeroext 102, i8 zeroext 15, i8 zeroext 108) #11
  br label %23402

19773:                                            ; preds = %2
  %19774 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %19775 = load i64, i64* %19774, align 8
  %19776 = ashr i64 %19775, 35
  %19777 = trunc i64 %19776 to i32
  %19778 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %19779 = load i32, i32* %19778, align 4
  %19780 = and i32 %19779, 16776960
  %19781 = icmp eq i32 %19780, 512
  %19782 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19783 = and i32 %19782, 32
  %19784 = icmp eq i32 %19783, 0
  br i1 %19784, label %19799, label %19785

19785:                                            ; preds = %19773
  %19786 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %19787 = and i32 %19779, 255
  %19788 = zext i32 %19787 to i64
  %19789 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19788, i32 0
  %19790 = load i64, i64* %19789, align 8
  %19791 = ashr i64 %19790, 35
  %19792 = trunc i64 %19791 to i32
  %19793 = zext i1 %19781 to i64
  %19794 = add nuw nsw i64 %19788, %19793
  %19795 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19794, i32 0
  %19796 = load i64, i64* %19795, align 8
  %19797 = ashr i64 %19796, 35
  %19798 = trunc i64 %19797 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19786, i8 zeroext 98, i32 %19777, i32 %19792, i32 %19798, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

19799:                                            ; preds = %19773
  %19800 = zext i1 %19781 to i64
  %19801 = and i32 %19779, 255
  %19802 = zext i32 %19801 to i64
  %19803 = add nuw nsw i64 %19800, %19802
  %19804 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19803, i32 0
  %19805 = load i64, i64* %19804, align 8
  %19806 = and i64 %19805, 7
  %19807 = icmp ugt i64 %19806, 4
  %19808 = and i64 %19805, 24
  %19809 = icmp eq i64 %19808, 0
  %19810 = and i1 %19807, %19809
  br i1 %19810, label %19813, label %19811

19811:                                            ; preds = %19799
  %19812 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %19820

19813:                                            ; preds = %19799
  %19814 = and i64 %19805, 8160
  %19815 = icmp eq i64 %19814, 448
  %19816 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %19815, label %19817, label %19820

19817:                                            ; preds = %19813
  %19818 = ashr i64 %19805, 35
  %19819 = trunc i64 %19818 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %19816, i32 %19777, i32 %19819, i8 zeroext 102, i8 zeroext 15, i8 zeroext 98) #11
  br label %23402

19820:                                            ; preds = %19811, %19813
  %19821 = phi %"class.v8::internal::Assembler"* [ %19812, %19811 ], [ %19816, %19813 ]
  %19822 = ashr i64 %19805, 35
  %19823 = trunc i64 %19822 to i32
  %19824 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %19823, i32 0) #11
  %19825 = extractvalue { i64, i32 } %19824, 0
  %19826 = extractvalue { i64, i32 } %19824, 1
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %19821, i32 %19777, i64 %19825, i32 %19826, i8 zeroext 102, i8 zeroext 15, i8 zeroext 98) #11
  br label %23402

19827:                                            ; preds = %2
  %19828 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %19829 = load i64, i64* %19828, align 8
  %19830 = ashr i64 %19829, 35
  %19831 = trunc i64 %19830 to i32
  %19832 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %19833 = load i32, i32* %19832, align 4
  %19834 = and i32 %19833, 16776960
  %19835 = icmp eq i32 %19834, 512
  %19836 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19837 = and i32 %19836, 32
  %19838 = icmp eq i32 %19837, 0
  br i1 %19838, label %19853, label %19839

19839:                                            ; preds = %19827
  %19840 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %19841 = and i32 %19833, 255
  %19842 = zext i32 %19841 to i64
  %19843 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19842, i32 0
  %19844 = load i64, i64* %19843, align 8
  %19845 = ashr i64 %19844, 35
  %19846 = trunc i64 %19845 to i32
  %19847 = zext i1 %19835 to i64
  %19848 = add nuw nsw i64 %19842, %19847
  %19849 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19848, i32 0
  %19850 = load i64, i64* %19849, align 8
  %19851 = ashr i64 %19850, 35
  %19852 = trunc i64 %19851 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19840, i8 zeroext 97, i32 %19831, i32 %19846, i32 %19852, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

19853:                                            ; preds = %19827
  %19854 = zext i1 %19835 to i64
  %19855 = and i32 %19833, 255
  %19856 = zext i32 %19855 to i64
  %19857 = add nuw nsw i64 %19854, %19856
  %19858 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19857, i32 0
  %19859 = load i64, i64* %19858, align 8
  %19860 = and i64 %19859, 7
  %19861 = icmp ugt i64 %19860, 4
  %19862 = and i64 %19859, 24
  %19863 = icmp eq i64 %19862, 0
  %19864 = and i1 %19861, %19863
  br i1 %19864, label %19867, label %19865

19865:                                            ; preds = %19853
  %19866 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %19874

19867:                                            ; preds = %19853
  %19868 = and i64 %19859, 8160
  %19869 = icmp eq i64 %19868, 448
  %19870 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %19869, label %19871, label %19874

19871:                                            ; preds = %19867
  %19872 = ashr i64 %19859, 35
  %19873 = trunc i64 %19872 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %19870, i32 %19831, i32 %19873, i8 zeroext 102, i8 zeroext 15, i8 zeroext 97) #11
  br label %23402

19874:                                            ; preds = %19865, %19867
  %19875 = phi %"class.v8::internal::Assembler"* [ %19866, %19865 ], [ %19870, %19867 ]
  %19876 = ashr i64 %19859, 35
  %19877 = trunc i64 %19876 to i32
  %19878 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %19877, i32 0) #11
  %19879 = extractvalue { i64, i32 } %19878, 0
  %19880 = extractvalue { i64, i32 } %19878, 1
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %19875, i32 %19831, i64 %19879, i32 %19880, i8 zeroext 102, i8 zeroext 15, i8 zeroext 97) #11
  br label %23402

19881:                                            ; preds = %2
  %19882 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %19883 = load i64, i64* %19882, align 8
  %19884 = ashr i64 %19883, 35
  %19885 = trunc i64 %19884 to i32
  %19886 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %19887 = load i32, i32* %19886, align 4
  %19888 = and i32 %19887, 16776960
  %19889 = icmp eq i32 %19888, 512
  %19890 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19891 = and i32 %19890, 32
  %19892 = icmp eq i32 %19891, 0
  br i1 %19892, label %19907, label %19893

19893:                                            ; preds = %19881
  %19894 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %19895 = and i32 %19887, 255
  %19896 = zext i32 %19895 to i64
  %19897 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19896, i32 0
  %19898 = load i64, i64* %19897, align 8
  %19899 = ashr i64 %19898, 35
  %19900 = trunc i64 %19899 to i32
  %19901 = zext i1 %19889 to i64
  %19902 = add nuw nsw i64 %19896, %19901
  %19903 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19902, i32 0
  %19904 = load i64, i64* %19903, align 8
  %19905 = ashr i64 %19904, 35
  %19906 = trunc i64 %19905 to i32
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19894, i8 zeroext 96, i32 %19885, i32 %19900, i32 %19906, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

19907:                                            ; preds = %19881
  %19908 = zext i1 %19889 to i64
  %19909 = and i32 %19887, 255
  %19910 = zext i32 %19909 to i64
  %19911 = add nuw nsw i64 %19908, %19910
  %19912 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19911, i32 0
  %19913 = load i64, i64* %19912, align 8
  %19914 = and i64 %19913, 7
  %19915 = icmp ugt i64 %19914, 4
  %19916 = and i64 %19913, 24
  %19917 = icmp eq i64 %19916, 0
  %19918 = and i1 %19915, %19917
  br i1 %19918, label %19921, label %19919

19919:                                            ; preds = %19907
  %19920 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %19928

19921:                                            ; preds = %19907
  %19922 = and i64 %19913, 8160
  %19923 = icmp eq i64 %19922, 448
  %19924 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %19923, label %19925, label %19928

19925:                                            ; preds = %19921
  %19926 = ashr i64 %19913, 35
  %19927 = trunc i64 %19926 to i32
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %19924, i32 %19885, i32 %19927, i8 zeroext 102, i8 zeroext 15, i8 zeroext 96) #11
  br label %23402

19928:                                            ; preds = %19919, %19921
  %19929 = phi %"class.v8::internal::Assembler"* [ %19920, %19919 ], [ %19924, %19921 ]
  %19930 = ashr i64 %19913, 35
  %19931 = trunc i64 %19930 to i32
  %19932 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %19931, i32 0) #11
  %19933 = extractvalue { i64, i32 } %19932, 0
  %19934 = extractvalue { i64, i32 } %19932, 1
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"* %19929, i32 %19885, i64 %19933, i32 %19934, i8 zeroext 102, i8 zeroext 15, i8 zeroext 96) #11
  br label %23402

19935:                                            ; preds = %2
  %19936 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %19937 = load i64, i64* %19936, align 8
  %19938 = ashr i64 %19937, 35
  %19939 = trunc i64 %19938 to i32
  %19940 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %19941 = load i32, i32* %19940, align 4
  %19942 = and i32 %19941, 16776960
  %19943 = icmp eq i32 %19942, 512
  br i1 %19943, label %19944, label %19999

19944:                                            ; preds = %19935
  %19945 = and i32 %19941, 255
  %19946 = add nuw nsw i32 %19945, 1
  %19947 = zext i32 %19946 to i64
  %19948 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %19947, i32 0
  %19949 = load i64, i64* %19948, align 8
  %19950 = and i64 %19949, 7
  %19951 = icmp ugt i64 %19950, 4
  %19952 = and i64 %19949, 24
  %19953 = icmp eq i64 %19952, 0
  %19954 = and i1 %19951, %19953
  br i1 %19954, label %19958, label %19955

19955:                                            ; preds = %19944
  %19956 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %19957 = bitcast %"class.v8::internal::TurboAssembler"* %19956 to %"class.v8::internal::SharedTurboAssembler"*
  br label %19972

19958:                                            ; preds = %19944
  %19959 = and i64 %19949, 8160
  %19960 = icmp eq i64 %19959, 448
  %19961 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %19962 = bitcast %"class.v8::internal::TurboAssembler"* %19961 to %"class.v8::internal::SharedTurboAssembler"*
  br i1 %19960, label %19963, label %19972

19963:                                            ; preds = %19958
  %19964 = ashr i64 %19949, 35
  %19965 = trunc i64 %19964 to i32
  %19966 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19967 = and i32 %19966, 32
  %19968 = icmp eq i32 %19967, 0
  %19969 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %19961, i64 0, i32 0, i32 0, i32 0
  br i1 %19968, label %19971, label %19970

19970:                                            ; preds = %19963
  tail call void @_ZN2v88internal9Assembler7vmovdquENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %19969, i32 15, i32 %19965) #11
  br label %19985

19971:                                            ; preds = %19963
  tail call void @_ZN2v88internal9Assembler6movupsENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %19969, i32 15, i32 %19965) #11
  br label %19985

19972:                                            ; preds = %19955, %19958
  %19973 = phi %"class.v8::internal::SharedTurboAssembler"* [ %19957, %19955 ], [ %19962, %19958 ]
  %19974 = ashr i64 %19949, 35
  %19975 = trunc i64 %19974 to i32
  %19976 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %19975, i32 0) #11
  %19977 = extractvalue { i64, i32 } %19976, 0
  %19978 = extractvalue { i64, i32 } %19976, 1
  %19979 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19980 = and i32 %19979, 32
  %19981 = icmp eq i32 %19980, 0
  %19982 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %19973, i64 0, i32 0, i32 0
  br i1 %19981, label %19984, label %19983

19983:                                            ; preds = %19972
  call void @_ZN2v88internal9Assembler7vmovdquENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %19982, i32 15, i64 %19977, i32 %19978) #11
  br label %19985

19984:                                            ; preds = %19972
  call void @_ZN2v88internal9Assembler6movupsENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %19982, i32 15, i64 %19977, i32 %19978) #11
  br label %19985

19985:                                            ; preds = %19984, %19983, %19971, %19970
  %19986 = phi %"class.v8::internal::SharedTurboAssembler"* [ %19962, %19970 ], [ %19962, %19971 ], [ %19973, %19983 ], [ %19973, %19984 ]
  %19987 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %19986, i64 0, i32 0, i32 0
  %19988 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %19989 = and i32 %19988, 32
  %19990 = icmp eq i32 %19989, 0
  br i1 %19990, label %19993, label %19991

19991:                                            ; preds = %19985
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %19987, i8 zeroext 114, i32 2, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  %19992 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %19986, i64 0, i32 0, i32 0, i32 0, i32 4
  br label %19995

19993:                                            ; preds = %19985
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %19987, i32 2, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 114) #11
  %19994 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %19986, i64 0, i32 0, i32 0, i32 0, i32 4
  br label %19995

19995:                                            ; preds = %19991, %19993
  %19996 = phi i8** [ %19992, %19991 ], [ %19994, %19993 ]
  %19997 = load i8*, i8** %19996, align 8
  %19998 = getelementptr inbounds i8, i8* %19997, i64 1
  store i8* %19998, i8** %19996, align 8
  store i8 16, i8* %19997, align 1
  br label %19999

19999:                                            ; preds = %19995, %19935
  %20000 = phi i32 [ %19939, %19935 ], [ 15, %19995 ]
  %20001 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %20002 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20003 = and i32 %20002, 32
  %20004 = icmp eq i32 %20003, 0
  br i1 %20004, label %20006, label %20005

20005:                                            ; preds = %19999
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20001, i8 zeroext 114, i32 2, i32 %19939, i32 %19939, i32 1, i32 1, i32 0, i32 5) #11
  br label %20007

20006:                                            ; preds = %19999
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %20001, i32 2, i32 %19939, i8 zeroext 102, i8 zeroext 15, i8 zeroext 114) #11
  br label %20007

20007:                                            ; preds = %20005, %20006
  %20008 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %20009 = load i8*, i8** %20008, align 8
  %20010 = getelementptr inbounds i8, i8* %20009, i64 1
  store i8* %20010, i8** %20008, align 8
  store i8 16, i8* %20009, align 1
  %20011 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20012 = and i32 %20011, 32
  %20013 = icmp eq i32 %20012, 0
  br i1 %20013, label %20015, label %20014

20014:                                            ; preds = %20007
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20001, i8 zeroext 43, i32 %19939, i32 %19939, i32 %20000, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

20015:                                            ; preds = %20007
  call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %20001, i32 %19939, i32 %20000, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 43) #11
  br label %23402

20016:                                            ; preds = %2
  %20017 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %20018 = load i64, i64* %20017, align 8
  %20019 = ashr i64 %20018, 35
  %20020 = trunc i64 %20019 to i32
  %20021 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %20022 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20023 = and i32 %20022, 32
  %20024 = icmp eq i32 %20023, 0
  br i1 %20024, label %20026, label %20025

20025:                                            ; preds = %20016
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20021, i8 zeroext -17, i32 15, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %20027

20026:                                            ; preds = %20016
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %20021, i32 15, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -17) #11
  br label %20027

20027:                                            ; preds = %20025, %20026
  %20028 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %20029 = load i32, i32* %20028, align 4
  %20030 = and i32 %20029, 16776960
  %20031 = icmp eq i32 %20030, 512
  br i1 %20031, label %20032, label %20066

20032:                                            ; preds = %20027
  %20033 = and i32 %20029, 255
  %20034 = add nuw nsw i32 %20033, 1
  %20035 = zext i32 %20034 to i64
  %20036 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %20035, i32 0
  %20037 = load i64, i64* %20036, align 8
  %20038 = and i64 %20037, 7
  %20039 = icmp ugt i64 %20038, 4
  %20040 = and i64 %20037, 8184
  %20041 = icmp eq i64 %20040, 448
  %20042 = and i1 %20041, %20039
  %20043 = ashr i64 %20037, 35
  %20044 = trunc i64 %20043 to i32
  br i1 %20042, label %20045, label %20054

20045:                                            ; preds = %20032
  %20046 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20047 = and i32 %20046, 32
  %20048 = icmp eq i32 %20047, 0
  br i1 %20048, label %20053, label %20049

20049:                                            ; preds = %20045
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20021, i8 zeroext 14, i32 15, i32 15, i32 %20044, i32 1, i32 3, i32 0, i32 5) #11
  %20050 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %20051 = load i8*, i8** %20050, align 8
  %20052 = getelementptr inbounds i8, i8* %20051, i64 1
  store i8* %20052, i8** %20050, align 8
  store i8 85, i8* %20051, align 1
  br label %20066

20053:                                            ; preds = %20045
  tail call void @_ZN2v88internal9Assembler7pblendwENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %20021, i32 15, i32 %20044, i8 zeroext 85) #11
  br label %20066

20054:                                            ; preds = %20032
  %20055 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %20044, i32 0) #11
  %20056 = extractvalue { i64, i32 } %20055, 0
  %20057 = extractvalue { i64, i32 } %20055, 1
  %20058 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20059 = and i32 %20058, 32
  %20060 = icmp eq i32 %20059, 0
  br i1 %20060, label %20065, label %20061

20061:                                            ; preds = %20054
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20021, i8 zeroext 14, i32 15, i32 15, i64 %20056, i32 %20057, i32 1, i32 3, i32 0, i32 5) #11
  %20062 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %20063 = load i8*, i8** %20062, align 8
  %20064 = getelementptr inbounds i8, i8* %20063, i64 1
  store i8* %20064, i8** %20062, align 8
  store i8 85, i8* %20063, align 1
  br label %20066

20065:                                            ; preds = %20054
  call void @_ZN2v88internal9Assembler7pblendwENS0_11XMMRegisterENS0_7OperandEh(%"class.v8::internal::Assembler"* %20021, i32 15, i64 %20056, i32 %20057, i8 zeroext 85) #11
  br label %20066

20066:                                            ; preds = %20065, %20061, %20053, %20049, %20027
  %20067 = phi i32 [ %20020, %20027 ], [ 15, %20049 ], [ 15, %20053 ], [ 15, %20061 ], [ 15, %20065 ]
  %20068 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20069 = and i32 %20068, 32
  %20070 = icmp eq i32 %20069, 0
  br i1 %20070, label %20075, label %20071

20071:                                            ; preds = %20066
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20021, i8 zeroext 14, i32 %20020, i32 %20020, i32 15, i32 1, i32 3, i32 0, i32 5) #11
  %20072 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %20073 = load i8*, i8** %20072, align 8
  %20074 = getelementptr inbounds i8, i8* %20073, i64 1
  store i8* %20074, i8** %20072, align 8
  store i8 -86, i8* %20073, align 1
  br label %20076

20075:                                            ; preds = %20066
  call void @_ZN2v88internal9Assembler7pblendwENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %20021, i32 %20020, i32 15, i8 zeroext -86) #11
  br label %20076

20076:                                            ; preds = %20071, %20075
  %20077 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20078 = and i32 %20077, 32
  %20079 = icmp eq i32 %20078, 0
  br i1 %20079, label %20081, label %20080

20080:                                            ; preds = %20076
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20021, i8 zeroext 43, i32 %20020, i32 %20020, i32 %20067, i32 1, i32 2, i32 0, i32 5) #11
  br label %23402

20081:                                            ; preds = %20076
  call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %20021, i32 %20020, i32 %20067, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 43) #11
  br label %23402

20082:                                            ; preds = %2
  %20083 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %20084 = load i64, i64* %20083, align 8
  %20085 = ashr i64 %20084, 35
  %20086 = trunc i64 %20085 to i32
  %20087 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %20088 = load i32, i32* %20087, align 4
  %20089 = and i32 %20088, 16776960
  %20090 = icmp eq i32 %20089, 512
  br i1 %20090, label %20091, label %20146

20091:                                            ; preds = %20082
  %20092 = and i32 %20088, 255
  %20093 = add nuw nsw i32 %20092, 1
  %20094 = zext i32 %20093 to i64
  %20095 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %20094, i32 0
  %20096 = load i64, i64* %20095, align 8
  %20097 = and i64 %20096, 7
  %20098 = icmp ugt i64 %20097, 4
  %20099 = and i64 %20096, 24
  %20100 = icmp eq i64 %20099, 0
  %20101 = and i1 %20098, %20100
  br i1 %20101, label %20105, label %20102

20102:                                            ; preds = %20091
  %20103 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %20104 = bitcast %"class.v8::internal::TurboAssembler"* %20103 to %"class.v8::internal::SharedTurboAssembler"*
  br label %20119

20105:                                            ; preds = %20091
  %20106 = and i64 %20096, 8160
  %20107 = icmp eq i64 %20106, 448
  %20108 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %20109 = bitcast %"class.v8::internal::TurboAssembler"* %20108 to %"class.v8::internal::SharedTurboAssembler"*
  br i1 %20107, label %20110, label %20119

20110:                                            ; preds = %20105
  %20111 = ashr i64 %20096, 35
  %20112 = trunc i64 %20111 to i32
  %20113 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20114 = and i32 %20113, 32
  %20115 = icmp eq i32 %20114, 0
  %20116 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %20108, i64 0, i32 0, i32 0, i32 0
  br i1 %20115, label %20118, label %20117

20117:                                            ; preds = %20110
  tail call void @_ZN2v88internal9Assembler7vmovdquENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %20116, i32 15, i32 %20112) #11
  br label %20132

20118:                                            ; preds = %20110
  tail call void @_ZN2v88internal9Assembler6movupsENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %20116, i32 15, i32 %20112) #11
  br label %20132

20119:                                            ; preds = %20102, %20105
  %20120 = phi %"class.v8::internal::SharedTurboAssembler"* [ %20104, %20102 ], [ %20109, %20105 ]
  %20121 = ashr i64 %20096, 35
  %20122 = trunc i64 %20121 to i32
  %20123 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %20122, i32 0) #11
  %20124 = extractvalue { i64, i32 } %20123, 0
  %20125 = extractvalue { i64, i32 } %20123, 1
  %20126 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20127 = and i32 %20126, 32
  %20128 = icmp eq i32 %20127, 0
  %20129 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %20120, i64 0, i32 0, i32 0
  br i1 %20128, label %20131, label %20130

20130:                                            ; preds = %20119
  call void @_ZN2v88internal9Assembler7vmovdquENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %20129, i32 15, i64 %20124, i32 %20125) #11
  br label %20132

20131:                                            ; preds = %20119
  call void @_ZN2v88internal9Assembler6movupsENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %20129, i32 15, i64 %20124, i32 %20125) #11
  br label %20132

20132:                                            ; preds = %20131, %20130, %20118, %20117
  %20133 = phi %"class.v8::internal::SharedTurboAssembler"* [ %20109, %20117 ], [ %20109, %20118 ], [ %20120, %20130 ], [ %20120, %20131 ]
  %20134 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %20133, i64 0, i32 0, i32 0
  %20135 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20136 = and i32 %20135, 32
  %20137 = icmp eq i32 %20136, 0
  br i1 %20137, label %20140, label %20138

20138:                                            ; preds = %20132
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20134, i8 zeroext 113, i32 2, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  %20139 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %20133, i64 0, i32 0, i32 0, i32 0, i32 4
  br label %20142

20140:                                            ; preds = %20132
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %20134, i32 2, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 113) #11
  %20141 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %20133, i64 0, i32 0, i32 0, i32 0, i32 4
  br label %20142

20142:                                            ; preds = %20138, %20140
  %20143 = phi i8** [ %20139, %20138 ], [ %20141, %20140 ]
  %20144 = load i8*, i8** %20143, align 8
  %20145 = getelementptr inbounds i8, i8* %20144, i64 1
  store i8* %20145, i8** %20143, align 8
  store i8 8, i8* %20144, align 1
  br label %20146

20146:                                            ; preds = %20142, %20082
  %20147 = phi i32 [ %20086, %20082 ], [ 15, %20142 ]
  %20148 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %20149 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20150 = and i32 %20149, 32
  %20151 = icmp eq i32 %20150, 0
  br i1 %20151, label %20153, label %20152

20152:                                            ; preds = %20146
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20148, i8 zeroext 113, i32 2, i32 %20086, i32 %20086, i32 1, i32 1, i32 0, i32 5) #11
  br label %20154

20153:                                            ; preds = %20146
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %20148, i32 2, i32 %20086, i8 zeroext 102, i8 zeroext 15, i8 zeroext 113) #11
  br label %20154

20154:                                            ; preds = %20152, %20153
  %20155 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %20156 = load i8*, i8** %20155, align 8
  %20157 = getelementptr inbounds i8, i8* %20156, i64 1
  store i8* %20157, i8** %20155, align 8
  store i8 8, i8* %20156, align 1
  %20158 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20159 = and i32 %20158, 32
  %20160 = icmp eq i32 %20159, 0
  br i1 %20160, label %20162, label %20161

20161:                                            ; preds = %20154
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20148, i8 zeroext 103, i32 %20086, i32 %20086, i32 %20147, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

20162:                                            ; preds = %20154
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %20148, i32 %20086, i32 %20147, i8 zeroext 102, i8 zeroext 15, i8 zeroext 103) #11
  br label %23402

20163:                                            ; preds = %2
  %20164 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %20165 = load i64, i64* %20164, align 8
  %20166 = ashr i64 %20165, 35
  %20167 = trunc i64 %20166 to i32
  %20168 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %20169 = load i32, i32* %20168, align 4
  %20170 = and i32 %20169, 16776960
  %20171 = icmp eq i32 %20170, 512
  br i1 %20171, label %20172, label %20236

20172:                                            ; preds = %20163
  %20173 = and i32 %20169, 255
  %20174 = add nuw nsw i32 %20173, 1
  %20175 = zext i32 %20174 to i64
  %20176 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %20175, i32 0
  %20177 = load i64, i64* %20176, align 8
  %20178 = and i64 %20177, 7
  %20179 = icmp ugt i64 %20178, 4
  %20180 = and i64 %20177, 24
  %20181 = icmp eq i64 %20180, 0
  %20182 = and i1 %20179, %20181
  br i1 %20182, label %20186, label %20183

20183:                                            ; preds = %20172
  %20184 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %20185 = bitcast %"class.v8::internal::TurboAssembler"* %20184 to %"class.v8::internal::SharedTurboAssembler"*
  br label %20200

20186:                                            ; preds = %20172
  %20187 = and i64 %20177, 8160
  %20188 = icmp eq i64 %20187, 448
  %20189 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %20190 = bitcast %"class.v8::internal::TurboAssembler"* %20189 to %"class.v8::internal::SharedTurboAssembler"*
  br i1 %20188, label %20191, label %20200

20191:                                            ; preds = %20186
  %20192 = ashr i64 %20177, 35
  %20193 = trunc i64 %20192 to i32
  %20194 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20195 = and i32 %20194, 32
  %20196 = icmp eq i32 %20195, 0
  %20197 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %20189, i64 0, i32 0, i32 0, i32 0
  br i1 %20196, label %20199, label %20198

20198:                                            ; preds = %20191
  tail call void @_ZN2v88internal9Assembler7vmovdquENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %20197, i32 15, i32 %20193) #11
  br label %20213

20199:                                            ; preds = %20191
  tail call void @_ZN2v88internal9Assembler6movupsENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %20197, i32 15, i32 %20193) #11
  br label %20213

20200:                                            ; preds = %20183, %20186
  %20201 = phi %"class.v8::internal::SharedTurboAssembler"* [ %20185, %20183 ], [ %20190, %20186 ]
  %20202 = ashr i64 %20177, 35
  %20203 = trunc i64 %20202 to i32
  %20204 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %20203, i32 0) #11
  %20205 = extractvalue { i64, i32 } %20204, 0
  %20206 = extractvalue { i64, i32 } %20204, 1
  %20207 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20208 = and i32 %20207, 32
  %20209 = icmp eq i32 %20208, 0
  %20210 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %20201, i64 0, i32 0, i32 0
  br i1 %20209, label %20212, label %20211

20211:                                            ; preds = %20200
  call void @_ZN2v88internal9Assembler7vmovdquENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %20210, i32 15, i64 %20205, i32 %20206) #11
  br label %20213

20212:                                            ; preds = %20200
  call void @_ZN2v88internal9Assembler6movupsENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %20210, i32 15, i64 %20205, i32 %20206) #11
  br label %20213

20213:                                            ; preds = %20212, %20211, %20199, %20198
  %20214 = phi %"class.v8::internal::SharedTurboAssembler"* [ %20190, %20198 ], [ %20190, %20199 ], [ %20201, %20211 ], [ %20201, %20212 ]
  %20215 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %20214, i64 0, i32 0, i32 0
  %20216 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20217 = and i32 %20216, 32
  %20218 = icmp eq i32 %20217, 0
  br i1 %20218, label %20220, label %20219

20219:                                            ; preds = %20213
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20215, i8 zeroext 113, i32 6, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %20221

20220:                                            ; preds = %20213
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %20215, i32 6, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 113) #11
  br label %20221

20221:                                            ; preds = %20219, %20220
  %20222 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %20214, i64 0, i32 0, i32 0, i32 0, i32 4
  %20223 = load i8*, i8** %20222, align 8
  %20224 = getelementptr inbounds i8, i8* %20223, i64 1
  store i8* %20224, i8** %20222, align 8
  store i8 8, i8* %20223, align 1
  %20225 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20226 = and i32 %20225, 32
  %20227 = icmp eq i32 %20226, 0
  br i1 %20227, label %20230, label %20228

20228:                                            ; preds = %20221
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20215, i8 zeroext 113, i32 2, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  %20229 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %20214, i64 0, i32 0, i32 0, i32 0, i32 4
  br label %20232

20230:                                            ; preds = %20221
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %20215, i32 2, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 113) #11
  %20231 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %20214, i64 0, i32 0, i32 0, i32 0, i32 4
  br label %20232

20232:                                            ; preds = %20228, %20230
  %20233 = phi i8** [ %20229, %20228 ], [ %20231, %20230 ]
  %20234 = load i8*, i8** %20233, align 8
  %20235 = getelementptr inbounds i8, i8* %20234, i64 1
  store i8* %20235, i8** %20233, align 8
  store i8 8, i8* %20234, align 1
  br label %20236

20236:                                            ; preds = %20232, %20163
  %20237 = phi i32 [ %20167, %20163 ], [ 15, %20232 ]
  %20238 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %20239 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20240 = and i32 %20239, 32
  %20241 = icmp eq i32 %20240, 0
  br i1 %20241, label %20243, label %20242

20242:                                            ; preds = %20236
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20238, i8 zeroext 113, i32 6, i32 %20167, i32 %20167, i32 1, i32 1, i32 0, i32 5) #11
  br label %20244

20243:                                            ; preds = %20236
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %20238, i32 6, i32 %20167, i8 zeroext 102, i8 zeroext 15, i8 zeroext 113) #11
  br label %20244

20244:                                            ; preds = %20242, %20243
  %20245 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %20246 = load i8*, i8** %20245, align 8
  %20247 = getelementptr inbounds i8, i8* %20246, i64 1
  store i8* %20247, i8** %20245, align 8
  store i8 8, i8* %20246, align 1
  %20248 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20249 = and i32 %20248, 32
  %20250 = icmp eq i32 %20249, 0
  br i1 %20250, label %20252, label %20251

20251:                                            ; preds = %20244
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20238, i8 zeroext 113, i32 2, i32 %20167, i32 %20167, i32 1, i32 1, i32 0, i32 5) #11
  br label %20253

20252:                                            ; preds = %20244
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %20238, i32 2, i32 %20167, i8 zeroext 102, i8 zeroext 15, i8 zeroext 113) #11
  br label %20253

20253:                                            ; preds = %20251, %20252
  %20254 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %20255 = load i8*, i8** %20254, align 8
  %20256 = getelementptr inbounds i8, i8* %20255, i64 1
  store i8* %20256, i8** %20254, align 8
  store i8 8, i8* %20255, align 1
  %20257 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20258 = and i32 %20257, 32
  %20259 = icmp eq i32 %20258, 0
  br i1 %20259, label %20261, label %20260

20260:                                            ; preds = %20253
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20238, i8 zeroext 103, i32 %20167, i32 %20167, i32 %20237, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

20261:                                            ; preds = %20253
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %20238, i32 %20167, i32 %20237, i8 zeroext 102, i8 zeroext 15, i8 zeroext 103) #11
  br label %23402

20262:                                            ; preds = %2
  %20263 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %20264 = load i64, i64* %20263, align 8
  %20265 = ashr i64 %20264, 35
  %20266 = trunc i64 %20265 to i32
  %20267 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %20268 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %20267, i64 0, i32 0, i32 0, i32 0
  %20269 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20270 = and i32 %20269, 32
  %20271 = icmp eq i32 %20270, 0
  br i1 %20271, label %20273, label %20272

20272:                                            ; preds = %20262
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20268, i8 zeroext 113, i32 6, i32 %20266, i32 %20266, i32 1, i32 1, i32 0, i32 5) #11
  br label %20274

20273:                                            ; preds = %20262
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %20268, i32 6, i32 %20266, i8 zeroext 102, i8 zeroext 15, i8 zeroext 113) #11
  br label %20274

20274:                                            ; preds = %20272, %20273
  %20275 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %20276 = load i8*, i8** %20275, align 8
  %20277 = getelementptr inbounds i8, i8* %20276, i64 1
  store i8* %20277, i8** %20275, align 8
  store i8 8, i8* %20276, align 1
  %20278 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %20279 = load i32, i32* %20278, align 4
  %20280 = and i32 %20279, 16776960
  %20281 = icmp eq i32 %20280, 256
  br i1 %20281, label %20282, label %20283

20282:                                            ; preds = %20274
  tail call void @_ZN2v88internal14TurboAssembler6MovdqaENS0_11XMMRegisterES2_(%"class.v8::internal::TurboAssembler"* %20267, i32 15, i32 %20266) #11
  br label %20331

20283:                                            ; preds = %20274
  %20284 = and i32 %20279, 255
  %20285 = add nuw nsw i32 %20284, 1
  %20286 = zext i32 %20285 to i64
  %20287 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %20286, i32 0
  %20288 = load i64, i64* %20287, align 8
  %20289 = and i64 %20288, 7
  %20290 = icmp ugt i64 %20289, 4
  %20291 = and i64 %20288, 8184
  %20292 = icmp eq i64 %20291, 448
  %20293 = and i1 %20292, %20290
  %20294 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %20295 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20294, i64 0, i32 1
  %20296 = load i32, i32* %20295, align 4
  %20297 = and i32 %20296, 255
  %20298 = add nuw nsw i32 %20297, 1
  %20299 = zext i32 %20298 to i64
  %20300 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20294, i64 0, i32 5, i64 %20299, i32 0
  %20301 = load i64, i64* %20300, align 8
  %20302 = ashr i64 %20301, 35
  %20303 = trunc i64 %20302 to i32
  br i1 %20293, label %20304, label %20310

20304:                                            ; preds = %20283
  %20305 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20306 = and i32 %20305, 32
  %20307 = icmp eq i32 %20306, 0
  br i1 %20307, label %20309, label %20308

20308:                                            ; preds = %20304
  tail call void @_ZN2v88internal9Assembler7vmovdquENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %20268, i32 15, i32 %20303) #11
  br label %20319

20309:                                            ; preds = %20304
  tail call void @_ZN2v88internal9Assembler6movupsENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %20268, i32 15, i32 %20303) #11
  br label %20319

20310:                                            ; preds = %20283
  %20311 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %20303, i32 0) #11
  %20312 = extractvalue { i64, i32 } %20311, 0
  %20313 = extractvalue { i64, i32 } %20311, 1
  %20314 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20315 = and i32 %20314, 32
  %20316 = icmp eq i32 %20315, 0
  br i1 %20316, label %20318, label %20317

20317:                                            ; preds = %20310
  call void @_ZN2v88internal9Assembler7vmovdquENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %20268, i32 15, i64 %20312, i32 %20313) #11
  br label %20319

20318:                                            ; preds = %20310
  call void @_ZN2v88internal9Assembler6movupsENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %20268, i32 15, i64 %20312, i32 %20313) #11
  br label %20319

20319:                                            ; preds = %20318, %20317, %20309, %20308
  %20320 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20321 = and i32 %20320, 32
  %20322 = icmp eq i32 %20321, 0
  br i1 %20322, label %20327, label %20323

20323:                                            ; preds = %20319
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20268, i8 zeroext 113, i32 6, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  %20324 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %20325 = load i8*, i8** %20324, align 8
  %20326 = getelementptr inbounds i8, i8* %20325, i64 1
  store i8* %20326, i8** %20324, align 8
  store i8 8, i8* %20325, align 1
  br label %20331

20327:                                            ; preds = %20319
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %20268, i32 6, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 113) #11
  %20328 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %20329 = load i8*, i8** %20328, align 8
  %20330 = getelementptr inbounds i8, i8* %20329, i64 1
  store i8* %20330, i8** %20328, align 8
  store i8 8, i8* %20329, align 1
  br label %20331

20331:                                            ; preds = %20327, %20323, %20282
  %20332 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20333 = and i32 %20332, 32
  %20334 = icmp eq i32 %20333, 0
  br i1 %20334, label %20336, label %20335

20335:                                            ; preds = %20331
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20268, i8 zeroext 113, i32 2, i32 %20266, i32 %20266, i32 1, i32 1, i32 0, i32 5) #11
  br label %20337

20336:                                            ; preds = %20331
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %20268, i32 2, i32 %20266, i8 zeroext 102, i8 zeroext 15, i8 zeroext 113) #11
  br label %20337

20337:                                            ; preds = %20335, %20336
  %20338 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %20339 = load i8*, i8** %20338, align 8
  %20340 = getelementptr inbounds i8, i8* %20339, i64 1
  store i8* %20340, i8** %20338, align 8
  store i8 8, i8* %20339, align 1
  %20341 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20342 = and i32 %20341, 32
  %20343 = icmp eq i32 %20342, 0
  br i1 %20343, label %20345, label %20344

20344:                                            ; preds = %20337
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20268, i8 zeroext -21, i32 %20266, i32 %20266, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

20345:                                            ; preds = %20337
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %20268, i32 %20266, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -21) #11
  br label %23402

20346:                                            ; preds = %2
  %20347 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %20348 = load i64, i64* %20347, align 8
  %20349 = ashr i64 %20348, 35
  %20350 = trunc i64 %20349 to i32
  %20351 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %20352 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %20351, i64 0, i32 0, i32 0, i32 0
  %20353 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20354 = and i32 %20353, 32
  %20355 = icmp eq i32 %20354, 0
  br i1 %20355, label %20357, label %20356

20356:                                            ; preds = %20346
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20352, i8 zeroext 113, i32 2, i32 %20350, i32 %20350, i32 1, i32 1, i32 0, i32 5) #11
  br label %20358

20357:                                            ; preds = %20346
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %20352, i32 2, i32 %20350, i8 zeroext 102, i8 zeroext 15, i8 zeroext 113) #11
  br label %20358

20358:                                            ; preds = %20356, %20357
  %20359 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %20360 = load i8*, i8** %20359, align 8
  %20361 = getelementptr inbounds i8, i8* %20360, i64 1
  store i8* %20361, i8** %20359, align 8
  store i8 8, i8* %20360, align 1
  %20362 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %20363 = load i32, i32* %20362, align 4
  %20364 = and i32 %20363, 16776960
  %20365 = icmp eq i32 %20364, 256
  br i1 %20365, label %20366, label %20367

20366:                                            ; preds = %20358
  tail call void @_ZN2v88internal14TurboAssembler6MovdqaENS0_11XMMRegisterES2_(%"class.v8::internal::TurboAssembler"* %20351, i32 15, i32 %20350) #11
  br label %20415

20367:                                            ; preds = %20358
  %20368 = and i32 %20363, 255
  %20369 = add nuw nsw i32 %20368, 1
  %20370 = zext i32 %20369 to i64
  %20371 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %20370, i32 0
  %20372 = load i64, i64* %20371, align 8
  %20373 = and i64 %20372, 7
  %20374 = icmp ugt i64 %20373, 4
  %20375 = and i64 %20372, 8184
  %20376 = icmp eq i64 %20375, 448
  %20377 = and i1 %20376, %20374
  %20378 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %20379 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20378, i64 0, i32 1
  %20380 = load i32, i32* %20379, align 4
  %20381 = and i32 %20380, 255
  %20382 = add nuw nsw i32 %20381, 1
  %20383 = zext i32 %20382 to i64
  %20384 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20378, i64 0, i32 5, i64 %20383, i32 0
  %20385 = load i64, i64* %20384, align 8
  %20386 = ashr i64 %20385, 35
  %20387 = trunc i64 %20386 to i32
  br i1 %20377, label %20388, label %20394

20388:                                            ; preds = %20367
  %20389 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20390 = and i32 %20389, 32
  %20391 = icmp eq i32 %20390, 0
  br i1 %20391, label %20393, label %20392

20392:                                            ; preds = %20388
  tail call void @_ZN2v88internal9Assembler7vmovdquENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %20352, i32 15, i32 %20387) #11
  br label %20403

20393:                                            ; preds = %20388
  tail call void @_ZN2v88internal9Assembler6movupsENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %20352, i32 15, i32 %20387) #11
  br label %20403

20394:                                            ; preds = %20367
  %20395 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i32 %20387, i32 0) #11
  %20396 = extractvalue { i64, i32 } %20395, 0
  %20397 = extractvalue { i64, i32 } %20395, 1
  %20398 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20399 = and i32 %20398, 32
  %20400 = icmp eq i32 %20399, 0
  br i1 %20400, label %20402, label %20401

20401:                                            ; preds = %20394
  call void @_ZN2v88internal9Assembler7vmovdquENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %20352, i32 15, i64 %20396, i32 %20397) #11
  br label %20403

20402:                                            ; preds = %20394
  call void @_ZN2v88internal9Assembler6movupsENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %20352, i32 15, i64 %20396, i32 %20397) #11
  br label %20403

20403:                                            ; preds = %20402, %20401, %20393, %20392
  %20404 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20405 = and i32 %20404, 32
  %20406 = icmp eq i32 %20405, 0
  br i1 %20406, label %20411, label %20407

20407:                                            ; preds = %20403
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20352, i8 zeroext 113, i32 2, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  %20408 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %20409 = load i8*, i8** %20408, align 8
  %20410 = getelementptr inbounds i8, i8* %20409, i64 1
  store i8* %20410, i8** %20408, align 8
  store i8 8, i8* %20409, align 1
  br label %20415

20411:                                            ; preds = %20403
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %20352, i32 2, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 113) #11
  %20412 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %20413 = load i8*, i8** %20412, align 8
  %20414 = getelementptr inbounds i8, i8* %20413, i64 1
  store i8* %20414, i8** %20412, align 8
  store i8 8, i8* %20413, align 1
  br label %20415

20415:                                            ; preds = %20411, %20407, %20366
  %20416 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20417 = and i32 %20416, 32
  %20418 = icmp eq i32 %20417, 0
  br i1 %20418, label %20420, label %20419

20419:                                            ; preds = %20415
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20352, i8 zeroext 113, i32 6, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %20421

20420:                                            ; preds = %20415
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %20352, i32 6, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 113) #11
  br label %20421

20421:                                            ; preds = %20419, %20420
  %20422 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %20423 = load i8*, i8** %20422, align 8
  %20424 = getelementptr inbounds i8, i8* %20423, i64 1
  store i8* %20424, i8** %20422, align 8
  store i8 8, i8* %20423, align 1
  %20425 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20426 = and i32 %20425, 32
  %20427 = icmp eq i32 %20426, 0
  br i1 %20427, label %20429, label %20428

20428:                                            ; preds = %20421
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20352, i8 zeroext -21, i32 %20350, i32 %20350, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

20429:                                            ; preds = %20421
  call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %20352, i32 %20350, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -21) #11
  br label %23402

20430:                                            ; preds = %2, %2, %2
  %20431 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %20432 = load i64, i64* %20431, align 8
  %20433 = ashr i64 %20432, 35
  %20434 = trunc i64 %20433 to i32
  %20435 = icmp eq i32 %276, 467
  br i1 %20435, label %20457, label %20436

20436:                                            ; preds = %20430
  %20437 = icmp eq i32 %276, 466
  %20438 = select i1 %20437, i8 -79, i8 27
  %20439 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %20440 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20441 = and i32 %20440, 32
  %20442 = icmp eq i32 %20441, 0
  br i1 %20442, label %20447, label %20443

20443:                                            ; preds = %20436
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20439, i8 zeroext 112, i32 %20434, i32 0, i32 %20434, i32 3, i32 1, i32 0, i32 5) #11
  %20444 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %20445 = load i8*, i8** %20444, align 8
  %20446 = getelementptr inbounds i8, i8* %20445, i64 1
  store i8* %20446, i8** %20444, align 8
  store i8 %20438, i8* %20445, align 1
  br label %20448

20447:                                            ; preds = %20436
  tail call void @_ZN2v88internal9Assembler7pshuflwENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %20439, i32 %20434, i32 %20434, i8 zeroext %20438) #11
  br label %20448

20448:                                            ; preds = %20443, %20447
  %20449 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20450 = and i32 %20449, 32
  %20451 = icmp eq i32 %20450, 0
  br i1 %20451, label %20456, label %20452

20452:                                            ; preds = %20448
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20439, i8 zeroext 112, i32 %20434, i32 0, i32 %20434, i32 2, i32 1, i32 0, i32 5) #11
  %20453 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %20454 = load i8*, i8** %20453, align 8
  %20455 = getelementptr inbounds i8, i8* %20454, i64 1
  store i8* %20455, i8** %20453, align 8
  store i8 %20438, i8* %20454, align 1
  br label %20457

20456:                                            ; preds = %20448
  tail call void @_ZN2v88internal9Assembler7pshufhwENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"* %20439, i32 %20434, i32 %20434, i8 zeroext %20438) #11
  br label %20457

20457:                                            ; preds = %20456, %20452, %20430
  %20458 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  tail call void @_ZN2v88internal14TurboAssembler6MovdqaENS0_11XMMRegisterES2_(%"class.v8::internal::TurboAssembler"* %20458, i32 15, i32 %20434) #11
  %20459 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %20458, i64 0, i32 0, i32 0, i32 0
  %20460 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20461 = and i32 %20460, 32
  %20462 = icmp eq i32 %20461, 0
  br i1 %20462, label %20464, label %20463

20463:                                            ; preds = %20457
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20459, i8 zeroext 113, i32 2, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %20465

20464:                                            ; preds = %20457
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %20459, i32 2, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 113) #11
  br label %20465

20465:                                            ; preds = %20463, %20464
  %20466 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %20467 = load i8*, i8** %20466, align 8
  %20468 = getelementptr inbounds i8, i8* %20467, i64 1
  store i8* %20468, i8** %20466, align 8
  store i8 8, i8* %20467, align 1
  %20469 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20470 = and i32 %20469, 32
  %20471 = icmp eq i32 %20470, 0
  br i1 %20471, label %20473, label %20472

20472:                                            ; preds = %20465
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20459, i8 zeroext 113, i32 6, i32 %20434, i32 %20434, i32 1, i32 1, i32 0, i32 5) #11
  br label %20474

20473:                                            ; preds = %20465
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %20459, i32 6, i32 %20434, i8 zeroext 102, i8 zeroext 15, i8 zeroext 113) #11
  br label %20474

20474:                                            ; preds = %20472, %20473
  %20475 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %20476 = load i8*, i8** %20475, align 8
  %20477 = getelementptr inbounds i8, i8* %20476, i64 1
  store i8* %20477, i8** %20475, align 8
  store i8 8, i8* %20476, align 1
  %20478 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20479 = and i32 %20478, 32
  %20480 = icmp eq i32 %20479, 0
  br i1 %20480, label %20482, label %20481

20481:                                            ; preds = %20474
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20459, i8 zeroext -21, i32 %20434, i32 %20434, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %23402

20482:                                            ; preds = %20474
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %20459, i32 %20434, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -21) #11
  br label %23402

20483:                                            ; preds = %2
  %20484 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %20485 = load i64, i64* %20484, align 8
  %20486 = ashr i64 %20485, 35
  %20487 = trunc i64 %20486 to i32
  %20488 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %20489 = load i32, i32* %20488, align 4
  %20490 = and i32 %20489, 255
  %20491 = zext i32 %20490 to i64
  %20492 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %20491, i32 0
  %20493 = load i64, i64* %20492, align 8
  %20494 = ashr i64 %20493, 35
  %20495 = trunc i64 %20494 to i32
  %20496 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %20496, i8 zeroext 51, i32 %20487, i32 %20487, i32 4) #11
  %20497 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20498 = and i32 %20497, 32
  %20499 = icmp eq i32 %20498, 0
  br i1 %20499, label %20501, label %20500

20500:                                            ; preds = %20483
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20496, i8 zeroext 23, i32 %20495, i32 0, i32 %20495, i32 1, i32 2, i32 0, i32 5) #11
  br label %20502

20501:                                            ; preds = %20483
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %20496, i32 %20495, i32 %20495, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 23) #11
  br label %20502

20502:                                            ; preds = %20500, %20501
  tail call void @_ZN2v88internal9Assembler5setccENS0_9ConditionENS0_8RegisterE(%"class.v8::internal::Assembler"* %20496, i32 5, i32 %20487) #11
  br label %23402

20503:                                            ; preds = %2
  %20504 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %20505 = load i64, i64* %20504, align 8
  %20506 = ashr i64 %20505, 35
  %20507 = trunc i64 %20506 to i32
  %20508 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %20508, i8 zeroext 51, i32 %20507, i32 %20507, i32 4) #11
  %20509 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20510 = and i32 %20509, 32
  %20511 = icmp eq i32 %20510, 0
  br i1 %20511, label %20513, label %20512

20512:                                            ; preds = %20503
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20508, i8 zeroext -17, i32 15, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %20514

20513:                                            ; preds = %20503
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %20508, i32 15, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -17) #11
  br label %20514

20514:                                            ; preds = %20512, %20513
  %20515 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %20516 = load i32, i32* %20515, align 4
  %20517 = and i32 %20516, 255
  %20518 = zext i32 %20517 to i64
  %20519 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %20518, i32 0
  %20520 = load i64, i64* %20519, align 8
  %20521 = ashr i64 %20520, 35
  %20522 = trunc i64 %20521 to i32
  %20523 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20524 = and i32 %20523, 32
  %20525 = icmp eq i32 %20524, 0
  br i1 %20525, label %20527, label %20526

20526:                                            ; preds = %20514
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20508, i8 zeroext 41, i32 15, i32 15, i32 %20522, i32 1, i32 2, i32 0, i32 5) #11
  br label %20528

20527:                                            ; preds = %20514
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %20508, i32 15, i32 %20522, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 41) #11
  br label %20528

20528:                                            ; preds = %20526, %20527
  %20529 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20530 = and i32 %20529, 32
  %20531 = icmp eq i32 %20530, 0
  br i1 %20531, label %20533, label %20532

20532:                                            ; preds = %20528
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20508, i8 zeroext 23, i32 15, i32 0, i32 15, i32 1, i32 2, i32 0, i32 5) #11
  br label %20534

20533:                                            ; preds = %20528
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %20508, i32 15, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 23) #11
  br label %20534

20534:                                            ; preds = %20532, %20533
  tail call void @_ZN2v88internal9Assembler5setccENS0_9ConditionENS0_8RegisterE(%"class.v8::internal::Assembler"* %20508, i32 4, i32 %20507) #11
  br label %23402

20535:                                            ; preds = %2
  %20536 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %20537 = load i64, i64* %20536, align 8
  %20538 = ashr i64 %20537, 35
  %20539 = trunc i64 %20538 to i32
  %20540 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %20540, i8 zeroext 51, i32 %20539, i32 %20539, i32 4) #11
  %20541 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20542 = and i32 %20541, 32
  %20543 = icmp eq i32 %20542, 0
  br i1 %20543, label %20545, label %20544

20544:                                            ; preds = %20535
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20540, i8 zeroext -17, i32 15, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %20546

20545:                                            ; preds = %20535
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %20540, i32 15, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -17) #11
  br label %20546

20546:                                            ; preds = %20544, %20545
  %20547 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %20548 = load i32, i32* %20547, align 4
  %20549 = and i32 %20548, 255
  %20550 = zext i32 %20549 to i64
  %20551 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %20550, i32 0
  %20552 = load i64, i64* %20551, align 8
  %20553 = ashr i64 %20552, 35
  %20554 = trunc i64 %20553 to i32
  %20555 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20556 = and i32 %20555, 32
  %20557 = icmp eq i32 %20556, 0
  br i1 %20557, label %20559, label %20558

20558:                                            ; preds = %20546
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20540, i8 zeroext 118, i32 15, i32 15, i32 %20554, i32 1, i32 1, i32 0, i32 5) #11
  br label %20560

20559:                                            ; preds = %20546
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %20540, i32 15, i32 %20554, i8 zeroext 102, i8 zeroext 15, i8 zeroext 118) #11
  br label %20560

20560:                                            ; preds = %20558, %20559
  %20561 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20562 = and i32 %20561, 32
  %20563 = icmp eq i32 %20562, 0
  br i1 %20563, label %20565, label %20564

20564:                                            ; preds = %20560
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20540, i8 zeroext 23, i32 15, i32 0, i32 15, i32 1, i32 2, i32 0, i32 5) #11
  br label %20566

20565:                                            ; preds = %20560
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %20540, i32 15, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 23) #11
  br label %20566

20566:                                            ; preds = %20564, %20565
  tail call void @_ZN2v88internal9Assembler5setccENS0_9ConditionENS0_8RegisterE(%"class.v8::internal::Assembler"* %20540, i32 4, i32 %20539) #11
  br label %23402

20567:                                            ; preds = %2
  %20568 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %20569 = load i64, i64* %20568, align 8
  %20570 = ashr i64 %20569, 35
  %20571 = trunc i64 %20570 to i32
  %20572 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %20572, i8 zeroext 51, i32 %20571, i32 %20571, i32 4) #11
  %20573 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20574 = and i32 %20573, 32
  %20575 = icmp eq i32 %20574, 0
  br i1 %20575, label %20577, label %20576

20576:                                            ; preds = %20567
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20572, i8 zeroext -17, i32 15, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %20578

20577:                                            ; preds = %20567
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %20572, i32 15, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -17) #11
  br label %20578

20578:                                            ; preds = %20576, %20577
  %20579 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %20580 = load i32, i32* %20579, align 4
  %20581 = and i32 %20580, 255
  %20582 = zext i32 %20581 to i64
  %20583 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %20582, i32 0
  %20584 = load i64, i64* %20583, align 8
  %20585 = ashr i64 %20584, 35
  %20586 = trunc i64 %20585 to i32
  %20587 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20588 = and i32 %20587, 32
  %20589 = icmp eq i32 %20588, 0
  br i1 %20589, label %20591, label %20590

20590:                                            ; preds = %20578
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20572, i8 zeroext 117, i32 15, i32 15, i32 %20586, i32 1, i32 1, i32 0, i32 5) #11
  br label %20592

20591:                                            ; preds = %20578
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %20572, i32 15, i32 %20586, i8 zeroext 102, i8 zeroext 15, i8 zeroext 117) #11
  br label %20592

20592:                                            ; preds = %20590, %20591
  %20593 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20594 = and i32 %20593, 32
  %20595 = icmp eq i32 %20594, 0
  br i1 %20595, label %20597, label %20596

20596:                                            ; preds = %20592
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20572, i8 zeroext 23, i32 15, i32 0, i32 15, i32 1, i32 2, i32 0, i32 5) #11
  br label %20598

20597:                                            ; preds = %20592
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %20572, i32 15, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 23) #11
  br label %20598

20598:                                            ; preds = %20596, %20597
  tail call void @_ZN2v88internal9Assembler5setccENS0_9ConditionENS0_8RegisterE(%"class.v8::internal::Assembler"* %20572, i32 4, i32 %20571) #11
  br label %23402

20599:                                            ; preds = %2
  %20600 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %20601 = load i64, i64* %20600, align 8
  %20602 = ashr i64 %20601, 35
  %20603 = trunc i64 %20602 to i32
  %20604 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %20604, i8 zeroext 51, i32 %20603, i32 %20603, i32 4) #11
  %20605 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20606 = and i32 %20605, 32
  %20607 = icmp eq i32 %20606, 0
  br i1 %20607, label %20609, label %20608

20608:                                            ; preds = %20599
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20604, i8 zeroext -17, i32 15, i32 15, i32 15, i32 1, i32 1, i32 0, i32 5) #11
  br label %20610

20609:                                            ; preds = %20599
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %20604, i32 15, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext -17) #11
  br label %20610

20610:                                            ; preds = %20608, %20609
  %20611 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %20612 = load i32, i32* %20611, align 4
  %20613 = and i32 %20612, 255
  %20614 = zext i32 %20613 to i64
  %20615 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %20614, i32 0
  %20616 = load i64, i64* %20615, align 8
  %20617 = ashr i64 %20616, 35
  %20618 = trunc i64 %20617 to i32
  %20619 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20620 = and i32 %20619, 32
  %20621 = icmp eq i32 %20620, 0
  br i1 %20621, label %20623, label %20622

20622:                                            ; preds = %20610
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20604, i8 zeroext 116, i32 15, i32 15, i32 %20618, i32 1, i32 1, i32 0, i32 5) #11
  br label %20624

20623:                                            ; preds = %20610
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %20604, i32 15, i32 %20618, i8 zeroext 102, i8 zeroext 15, i8 zeroext 116) #11
  br label %20624

20624:                                            ; preds = %20622, %20623
  %20625 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20626 = and i32 %20625, 32
  %20627 = icmp eq i32 %20626, 0
  br i1 %20627, label %20629, label %20628

20628:                                            ; preds = %20624
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %20604, i8 zeroext 23, i32 15, i32 0, i32 15, i32 1, i32 2, i32 0, i32 5) #11
  br label %20630

20629:                                            ; preds = %20624
  tail call void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"* %20604, i32 15, i32 15, i8 zeroext 102, i8 zeroext 15, i8 zeroext 56, i8 zeroext 23) #11
  br label %20630

20630:                                            ; preds = %20628, %20629
  tail call void @_ZN2v88internal9Assembler5setccENS0_9ConditionENS0_8RegisterE(%"class.v8::internal::Assembler"* %20604, i32 4, i32 %20603) #11
  br label %23402

20631:                                            ; preds = %2
  %20632 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %20633 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %20634 = load i32, i32* %20633, align 4
  %20635 = and i32 %20634, 255
  %20636 = zext i32 %20635 to i64
  %20637 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %20636, i32 0
  %20638 = load i64, i64* %20637, align 8
  %20639 = ashr i64 %20638, 35
  %20640 = trunc i64 %20639 to i32
  %20641 = bitcast i64* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20641)
  store i64 1, i64* %42, align 8
  %20642 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %42) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20641)
  %20643 = extractvalue { i64, i32 } %20642, 0
  %20644 = extractvalue { i64, i32 } %20642, 1
  call void @_ZN2v88internal9Assembler5xchgbENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %20632, i32 %20640, i64 %20643, i32 %20644) #11
  %20645 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %20646 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20645, i64 0, i32 1
  %20647 = load i32, i32* %20646, align 4
  %20648 = and i32 %20647, 255
  %20649 = zext i32 %20648 to i64
  %20650 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20645, i64 0, i32 5, i64 %20649, i32 0
  %20651 = load i64, i64* %20650, align 8
  %20652 = ashr i64 %20651, 35
  %20653 = trunc i64 %20652 to i32
  call void @_ZN2v88internal9Assembler7movsxblENS0_8RegisterES2_(%"class.v8::internal::Assembler"* %20632, i32 %20653, i32 %20653) #11
  br label %23402

20654:                                            ; preds = %2
  %20655 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %20656 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %20657 = load i32, i32* %20656, align 4
  %20658 = and i32 %20657, 255
  %20659 = zext i32 %20658 to i64
  %20660 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %20659, i32 0
  %20661 = load i64, i64* %20660, align 8
  %20662 = ashr i64 %20661, 35
  %20663 = trunc i64 %20662 to i32
  %20664 = bitcast i64* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20664)
  store i64 1, i64* %43, align 8
  %20665 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %43) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20664)
  %20666 = extractvalue { i64, i32 } %20665, 0
  %20667 = extractvalue { i64, i32 } %20665, 1
  call void @_ZN2v88internal9Assembler5xchgbENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %20655, i32 %20663, i64 %20666, i32 %20667) #11
  %20668 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %20669 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20668, i64 0, i32 1
  %20670 = load i32, i32* %20669, align 4
  %20671 = and i32 %20670, 255
  %20672 = zext i32 %20671 to i64
  %20673 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20668, i64 0, i32 5, i64 %20672, i32 0
  %20674 = load i64, i64* %20673, align 8
  %20675 = ashr i64 %20674, 35
  %20676 = trunc i64 %20675 to i32
  call void @_ZN2v88internal9Assembler11emit_movzxbENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %20655, i32 %20676, i32 %20676, i32 4) #11
  br label %23402

20677:                                            ; preds = %2
  %20678 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %20679 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %20680 = load i32, i32* %20679, align 4
  %20681 = and i32 %20680, 255
  %20682 = zext i32 %20681 to i64
  %20683 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %20682, i32 0
  %20684 = load i64, i64* %20683, align 8
  %20685 = ashr i64 %20684, 35
  %20686 = trunc i64 %20685 to i32
  %20687 = bitcast i64* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20687)
  store i64 1, i64* %44, align 8
  %20688 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %44) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20687)
  %20689 = extractvalue { i64, i32 } %20688, 0
  %20690 = extractvalue { i64, i32 } %20688, 1
  call void @_ZN2v88internal9Assembler5xchgwENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %20678, i32 %20686, i64 %20689, i32 %20690) #11
  %20691 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %20692 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20691, i64 0, i32 1
  %20693 = load i32, i32* %20692, align 4
  %20694 = and i32 %20693, 255
  %20695 = zext i32 %20694 to i64
  %20696 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20691, i64 0, i32 5, i64 %20695, i32 0
  %20697 = load i64, i64* %20696, align 8
  %20698 = ashr i64 %20697, 35
  %20699 = trunc i64 %20698 to i32
  call void @_ZN2v88internal9Assembler7movsxwlENS0_8RegisterES2_(%"class.v8::internal::Assembler"* %20678, i32 %20699, i32 %20699) #11
  br label %23402

20700:                                            ; preds = %2
  %20701 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %20702 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %20703 = load i32, i32* %20702, align 4
  %20704 = and i32 %20703, 255
  %20705 = zext i32 %20704 to i64
  %20706 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %20705, i32 0
  %20707 = load i64, i64* %20706, align 8
  %20708 = ashr i64 %20707, 35
  %20709 = trunc i64 %20708 to i32
  %20710 = bitcast i64* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20710)
  store i64 1, i64* %45, align 8
  %20711 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %45) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20710)
  %20712 = extractvalue { i64, i32 } %20711, 0
  %20713 = extractvalue { i64, i32 } %20711, 1
  call void @_ZN2v88internal9Assembler5xchgwENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %20701, i32 %20709, i64 %20712, i32 %20713) #11
  %20714 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %20715 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20714, i64 0, i32 1
  %20716 = load i32, i32* %20715, align 4
  %20717 = and i32 %20716, 255
  %20718 = zext i32 %20717 to i64
  %20719 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20714, i64 0, i32 5, i64 %20718, i32 0
  %20720 = load i64, i64* %20719, align 8
  %20721 = ashr i64 %20720, 35
  %20722 = trunc i64 %20721 to i32
  call void @_ZN2v88internal9Assembler11emit_movzxwENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %20701, i32 %20722, i32 %20722, i32 4) #11
  br label %23402

20723:                                            ; preds = %2
  %20724 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %20725 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %20726 = load i32, i32* %20725, align 4
  %20727 = and i32 %20726, 255
  %20728 = zext i32 %20727 to i64
  %20729 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %20728, i32 0
  %20730 = load i64, i64* %20729, align 8
  %20731 = ashr i64 %20730, 35
  %20732 = trunc i64 %20731 to i32
  %20733 = bitcast i64* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20733)
  store i64 1, i64* %46, align 8
  %20734 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %46) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20733)
  %20735 = extractvalue { i64, i32 } %20734, 0
  %20736 = extractvalue { i64, i32 } %20734, 1
  call void @_ZN2v88internal9Assembler9emit_xchgENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %20724, i32 %20732, i64 %20735, i32 %20736, i32 4) #11
  br label %23402

20737:                                            ; preds = %2
  %20738 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %20738) #11
  %20739 = bitcast i64* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20739)
  store i64 2, i64* %47, align 8
  %20740 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %47) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20739)
  %20741 = extractvalue { i64, i32 } %20740, 0
  %20742 = extractvalue { i64, i32 } %20740, 1
  %20743 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %20744 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20743, i64 0, i32 1
  %20745 = load i32, i32* %20744, align 4
  %20746 = and i32 %20745, 255
  %20747 = add nuw nsw i32 %20746, 1
  %20748 = zext i32 %20747 to i64
  %20749 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20743, i64 0, i32 5, i64 %20748, i32 0
  %20750 = load i64, i64* %20749, align 8
  %20751 = ashr i64 %20750, 35
  %20752 = trunc i64 %20751 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgbENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %20738, i64 %20741, i32 %20742, i32 %20752) #11
  call void @_ZN2v88internal9Assembler7movsxblENS0_8RegisterES2_(%"class.v8::internal::Assembler"* %20738, i32 0, i32 0) #11
  br label %23402

20753:                                            ; preds = %2
  %20754 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %20754) #11
  %20755 = bitcast i64* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20755)
  store i64 2, i64* %48, align 8
  %20756 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %48) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20755)
  %20757 = extractvalue { i64, i32 } %20756, 0
  %20758 = extractvalue { i64, i32 } %20756, 1
  %20759 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %20760 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20759, i64 0, i32 1
  %20761 = load i32, i32* %20760, align 4
  %20762 = and i32 %20761, 255
  %20763 = add nuw nsw i32 %20762, 1
  %20764 = zext i32 %20763 to i64
  %20765 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20759, i64 0, i32 5, i64 %20764, i32 0
  %20766 = load i64, i64* %20765, align 8
  %20767 = ashr i64 %20766, 35
  %20768 = trunc i64 %20767 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgbENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %20754, i64 %20757, i32 %20758, i32 %20768) #11
  call void @_ZN2v88internal9Assembler11emit_movzxbENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %20754, i32 0, i32 0, i32 4) #11
  br label %23402

20769:                                            ; preds = %2
  %20770 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %20770) #11
  %20771 = bitcast i64* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20771)
  store i64 2, i64* %49, align 8
  %20772 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %49) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20771)
  %20773 = extractvalue { i64, i32 } %20772, 0
  %20774 = extractvalue { i64, i32 } %20772, 1
  %20775 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %20776 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20775, i64 0, i32 1
  %20777 = load i32, i32* %20776, align 4
  %20778 = and i32 %20777, 255
  %20779 = add nuw nsw i32 %20778, 1
  %20780 = zext i32 %20779 to i64
  %20781 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20775, i64 0, i32 5, i64 %20780, i32 0
  %20782 = load i64, i64* %20781, align 8
  %20783 = ashr i64 %20782, 35
  %20784 = trunc i64 %20783 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgwENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %20770, i64 %20773, i32 %20774, i32 %20784) #11
  call void @_ZN2v88internal9Assembler7movsxwlENS0_8RegisterES2_(%"class.v8::internal::Assembler"* %20770, i32 0, i32 0) #11
  br label %23402

20785:                                            ; preds = %2
  %20786 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %20786) #11
  %20787 = bitcast i64* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20787)
  store i64 2, i64* %50, align 8
  %20788 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %50) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20787)
  %20789 = extractvalue { i64, i32 } %20788, 0
  %20790 = extractvalue { i64, i32 } %20788, 1
  %20791 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %20792 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20791, i64 0, i32 1
  %20793 = load i32, i32* %20792, align 4
  %20794 = and i32 %20793, 255
  %20795 = add nuw nsw i32 %20794, 1
  %20796 = zext i32 %20795 to i64
  %20797 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20791, i64 0, i32 5, i64 %20796, i32 0
  %20798 = load i64, i64* %20797, align 8
  %20799 = ashr i64 %20798, 35
  %20800 = trunc i64 %20799 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgwENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %20786, i64 %20789, i32 %20790, i32 %20800) #11
  call void @_ZN2v88internal9Assembler11emit_movzxwENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %20786, i32 0, i32 0, i32 4) #11
  br label %23402

20801:                                            ; preds = %2
  %20802 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %20802) #11
  %20803 = bitcast i64* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20803)
  store i64 2, i64* %51, align 8
  %20804 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %51) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20803)
  %20805 = extractvalue { i64, i32 } %20804, 0
  %20806 = extractvalue { i64, i32 } %20804, 1
  %20807 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %20808 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20807, i64 0, i32 1
  %20809 = load i32, i32* %20808, align 4
  %20810 = and i32 %20809, 255
  %20811 = add nuw nsw i32 %20810, 1
  %20812 = zext i32 %20811 to i64
  %20813 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20807, i64 0, i32 5, i64 %20812, i32 0
  %20814 = load i64, i64* %20813, align 8
  %20815 = ashr i64 %20814, 35
  %20816 = trunc i64 %20815 to i32
  call void @_ZN2v88internal9Assembler12emit_cmpxchgENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %20802, i64 %20805, i32 %20806, i32 %20816, i32 4) #11
  br label %23402

20817:                                            ; preds = %2
  %20818 = bitcast %"class.v8::internal::Label"* %226 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20818) #11
  %20819 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %226, i64 0, i32 0
  store i32 0, i32* %20819, align 4
  %20820 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %226, i64 0, i32 1
  store i32 0, i32* %20820, align 4
  %20821 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %20821, %"class.v8::internal::Label"* nonnull %226) #11
  %20822 = bitcast i64* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20822)
  store i64 1, i64* %52, align 8
  %20823 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %52) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20822)
  %20824 = extractvalue { i64, i32 } %20823, 0
  %20825 = extractvalue { i64, i32 } %20823, 1
  call void @_ZN2v88internal9Assembler4movbENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %20821, i32 0, i64 %20824, i32 %20825) #11
  %20826 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %20827 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20826, i64 0, i32 1
  %20828 = load i32, i32* %20827, align 4
  %20829 = and i32 %20828, 255
  %20830 = lshr i32 %20828, 8
  %20831 = and i32 %20830, 65535
  %20832 = add nuw nsw i32 %20831, %20829
  %20833 = zext i32 %20832 to i64
  %20834 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20826, i64 0, i32 5, i64 %20833, i32 0
  %20835 = load i64, i64* %20834, align 8
  %20836 = ashr i64 %20835, 35
  %20837 = trunc i64 %20836 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %20821, i32 %20837, i32 0, i32 4) #11
  %20838 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %20839 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20838, i64 0, i32 1
  %20840 = load i32, i32* %20839, align 4
  %20841 = and i32 %20840, 255
  %20842 = lshr i32 %20840, 8
  %20843 = and i32 %20842, 65535
  %20844 = add nuw nsw i32 %20843, %20841
  %20845 = zext i32 %20844 to i64
  %20846 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20838, i64 0, i32 5, i64 %20845, i32 0
  %20847 = load i64, i64* %20846, align 8
  %20848 = ashr i64 %20847, 35
  %20849 = trunc i64 %20848 to i32
  %20850 = zext i32 %20841 to i64
  %20851 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20838, i64 0, i32 5, i64 %20850, i32 0
  %20852 = load i64, i64* %20851, align 8
  %20853 = ashr i64 %20852, 35
  %20854 = trunc i64 %20853 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %20821, i8 zeroext 3, i32 %20849, i32 %20854, i32 4) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %20821) #11
  %20855 = bitcast i64* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20855)
  store i64 1, i64* %53, align 8
  %20856 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %53) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20855)
  %20857 = extractvalue { i64, i32 } %20856, 0
  %20858 = extractvalue { i64, i32 } %20856, 1
  %20859 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %20860 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20859, i64 0, i32 1
  %20861 = load i32, i32* %20860, align 4
  %20862 = and i32 %20861, 255
  %20863 = lshr i32 %20861, 8
  %20864 = and i32 %20863, 65535
  %20865 = add nuw nsw i32 %20864, %20862
  %20866 = zext i32 %20865 to i64
  %20867 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20859, i64 0, i32 5, i64 %20866, i32 0
  %20868 = load i64, i64* %20867, align 8
  %20869 = ashr i64 %20868, 35
  %20870 = trunc i64 %20869 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgbENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %20821, i64 %20857, i32 %20858, i32 %20870) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %20821, i32 5, %"class.v8::internal::Label"* nonnull %226, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20818) #11
  call void @_ZN2v88internal9Assembler7movsxblENS0_8RegisterES2_(%"class.v8::internal::Assembler"* %20821, i32 0, i32 0) #11
  br label %23402

20871:                                            ; preds = %2
  %20872 = bitcast %"class.v8::internal::Label"* %227 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20872) #11
  %20873 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %227, i64 0, i32 0
  store i32 0, i32* %20873, align 4
  %20874 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %227, i64 0, i32 1
  store i32 0, i32* %20874, align 4
  %20875 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %20875, %"class.v8::internal::Label"* nonnull %227) #11
  %20876 = bitcast i64* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20876)
  store i64 1, i64* %54, align 8
  %20877 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %54) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20876)
  %20878 = extractvalue { i64, i32 } %20877, 0
  %20879 = extractvalue { i64, i32 } %20877, 1
  call void @_ZN2v88internal9Assembler4movbENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %20875, i32 0, i64 %20878, i32 %20879) #11
  %20880 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %20881 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20880, i64 0, i32 1
  %20882 = load i32, i32* %20881, align 4
  %20883 = and i32 %20882, 255
  %20884 = lshr i32 %20882, 8
  %20885 = and i32 %20884, 65535
  %20886 = add nuw nsw i32 %20885, %20883
  %20887 = zext i32 %20886 to i64
  %20888 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20880, i64 0, i32 5, i64 %20887, i32 0
  %20889 = load i64, i64* %20888, align 8
  %20890 = ashr i64 %20889, 35
  %20891 = trunc i64 %20890 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %20875, i32 %20891, i32 0, i32 4) #11
  %20892 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %20893 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20892, i64 0, i32 1
  %20894 = load i32, i32* %20893, align 4
  %20895 = and i32 %20894, 255
  %20896 = lshr i32 %20894, 8
  %20897 = and i32 %20896, 65535
  %20898 = add nuw nsw i32 %20897, %20895
  %20899 = zext i32 %20898 to i64
  %20900 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20892, i64 0, i32 5, i64 %20899, i32 0
  %20901 = load i64, i64* %20900, align 8
  %20902 = ashr i64 %20901, 35
  %20903 = trunc i64 %20902 to i32
  %20904 = zext i32 %20895 to i64
  %20905 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20892, i64 0, i32 5, i64 %20904, i32 0
  %20906 = load i64, i64* %20905, align 8
  %20907 = ashr i64 %20906, 35
  %20908 = trunc i64 %20907 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %20875, i8 zeroext 3, i32 %20903, i32 %20908, i32 4) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %20875) #11
  %20909 = bitcast i64* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20909)
  store i64 1, i64* %55, align 8
  %20910 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %55) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20909)
  %20911 = extractvalue { i64, i32 } %20910, 0
  %20912 = extractvalue { i64, i32 } %20910, 1
  %20913 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %20914 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20913, i64 0, i32 1
  %20915 = load i32, i32* %20914, align 4
  %20916 = and i32 %20915, 255
  %20917 = lshr i32 %20915, 8
  %20918 = and i32 %20917, 65535
  %20919 = add nuw nsw i32 %20918, %20916
  %20920 = zext i32 %20919 to i64
  %20921 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20913, i64 0, i32 5, i64 %20920, i32 0
  %20922 = load i64, i64* %20921, align 8
  %20923 = ashr i64 %20922, 35
  %20924 = trunc i64 %20923 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgbENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %20875, i64 %20911, i32 %20912, i32 %20924) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %20875, i32 5, %"class.v8::internal::Label"* nonnull %227, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20872) #11
  call void @_ZN2v88internal9Assembler11emit_movzxbENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %20875, i32 0, i32 0, i32 4) #11
  br label %23402

20925:                                            ; preds = %2
  %20926 = bitcast %"class.v8::internal::Label"* %228 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20926) #11
  %20927 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %228, i64 0, i32 0
  store i32 0, i32* %20927, align 4
  %20928 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %228, i64 0, i32 1
  store i32 0, i32* %20928, align 4
  %20929 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %20929, %"class.v8::internal::Label"* nonnull %228) #11
  %20930 = bitcast i64* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20930)
  store i64 1, i64* %56, align 8
  %20931 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %56) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20930)
  %20932 = extractvalue { i64, i32 } %20931, 0
  %20933 = extractvalue { i64, i32 } %20931, 1
  call void @_ZN2v88internal9Assembler4movwENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %20929, i32 0, i64 %20932, i32 %20933) #11
  %20934 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %20935 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20934, i64 0, i32 1
  %20936 = load i32, i32* %20935, align 4
  %20937 = and i32 %20936, 255
  %20938 = lshr i32 %20936, 8
  %20939 = and i32 %20938, 65535
  %20940 = add nuw nsw i32 %20939, %20937
  %20941 = zext i32 %20940 to i64
  %20942 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20934, i64 0, i32 5, i64 %20941, i32 0
  %20943 = load i64, i64* %20942, align 8
  %20944 = ashr i64 %20943, 35
  %20945 = trunc i64 %20944 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %20929, i32 %20945, i32 0, i32 4) #11
  %20946 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %20947 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20946, i64 0, i32 1
  %20948 = load i32, i32* %20947, align 4
  %20949 = and i32 %20948, 255
  %20950 = lshr i32 %20948, 8
  %20951 = and i32 %20950, 65535
  %20952 = add nuw nsw i32 %20951, %20949
  %20953 = zext i32 %20952 to i64
  %20954 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20946, i64 0, i32 5, i64 %20953, i32 0
  %20955 = load i64, i64* %20954, align 8
  %20956 = ashr i64 %20955, 35
  %20957 = trunc i64 %20956 to i32
  %20958 = zext i32 %20949 to i64
  %20959 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20946, i64 0, i32 5, i64 %20958, i32 0
  %20960 = load i64, i64* %20959, align 8
  %20961 = ashr i64 %20960, 35
  %20962 = trunc i64 %20961 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %20929, i8 zeroext 3, i32 %20957, i32 %20962, i32 4) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %20929) #11
  %20963 = bitcast i64* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20963)
  store i64 1, i64* %57, align 8
  %20964 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %57) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20963)
  %20965 = extractvalue { i64, i32 } %20964, 0
  %20966 = extractvalue { i64, i32 } %20964, 1
  %20967 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %20968 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20967, i64 0, i32 1
  %20969 = load i32, i32* %20968, align 4
  %20970 = and i32 %20969, 255
  %20971 = lshr i32 %20969, 8
  %20972 = and i32 %20971, 65535
  %20973 = add nuw nsw i32 %20972, %20970
  %20974 = zext i32 %20973 to i64
  %20975 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20967, i64 0, i32 5, i64 %20974, i32 0
  %20976 = load i64, i64* %20975, align 8
  %20977 = ashr i64 %20976, 35
  %20978 = trunc i64 %20977 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgwENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %20929, i64 %20965, i32 %20966, i32 %20978) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %20929, i32 5, %"class.v8::internal::Label"* nonnull %228, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20926) #11
  call void @_ZN2v88internal9Assembler7movsxwlENS0_8RegisterES2_(%"class.v8::internal::Assembler"* %20929, i32 0, i32 0) #11
  br label %23402

20979:                                            ; preds = %2
  %20980 = bitcast %"class.v8::internal::Label"* %229 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20980) #11
  %20981 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %229, i64 0, i32 0
  store i32 0, i32* %20981, align 4
  %20982 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %229, i64 0, i32 1
  store i32 0, i32* %20982, align 4
  %20983 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %20983, %"class.v8::internal::Label"* nonnull %229) #11
  %20984 = bitcast i64* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20984)
  store i64 1, i64* %58, align 8
  %20985 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %58) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20984)
  %20986 = extractvalue { i64, i32 } %20985, 0
  %20987 = extractvalue { i64, i32 } %20985, 1
  call void @_ZN2v88internal9Assembler4movwENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %20983, i32 0, i64 %20986, i32 %20987) #11
  %20988 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %20989 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20988, i64 0, i32 1
  %20990 = load i32, i32* %20989, align 4
  %20991 = and i32 %20990, 255
  %20992 = lshr i32 %20990, 8
  %20993 = and i32 %20992, 65535
  %20994 = add nuw nsw i32 %20993, %20991
  %20995 = zext i32 %20994 to i64
  %20996 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %20988, i64 0, i32 5, i64 %20995, i32 0
  %20997 = load i64, i64* %20996, align 8
  %20998 = ashr i64 %20997, 35
  %20999 = trunc i64 %20998 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %20983, i32 %20999, i32 0, i32 4) #11
  %21000 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21001 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21000, i64 0, i32 1
  %21002 = load i32, i32* %21001, align 4
  %21003 = and i32 %21002, 255
  %21004 = lshr i32 %21002, 8
  %21005 = and i32 %21004, 65535
  %21006 = add nuw nsw i32 %21005, %21003
  %21007 = zext i32 %21006 to i64
  %21008 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21000, i64 0, i32 5, i64 %21007, i32 0
  %21009 = load i64, i64* %21008, align 8
  %21010 = ashr i64 %21009, 35
  %21011 = trunc i64 %21010 to i32
  %21012 = zext i32 %21003 to i64
  %21013 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21000, i64 0, i32 5, i64 %21012, i32 0
  %21014 = load i64, i64* %21013, align 8
  %21015 = ashr i64 %21014, 35
  %21016 = trunc i64 %21015 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %20983, i8 zeroext 3, i32 %21011, i32 %21016, i32 4) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %20983) #11
  %21017 = bitcast i64* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21017)
  store i64 1, i64* %59, align 8
  %21018 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %59) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21017)
  %21019 = extractvalue { i64, i32 } %21018, 0
  %21020 = extractvalue { i64, i32 } %21018, 1
  %21021 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21022 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21021, i64 0, i32 1
  %21023 = load i32, i32* %21022, align 4
  %21024 = and i32 %21023, 255
  %21025 = lshr i32 %21023, 8
  %21026 = and i32 %21025, 65535
  %21027 = add nuw nsw i32 %21026, %21024
  %21028 = zext i32 %21027 to i64
  %21029 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21021, i64 0, i32 5, i64 %21028, i32 0
  %21030 = load i64, i64* %21029, align 8
  %21031 = ashr i64 %21030, 35
  %21032 = trunc i64 %21031 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgwENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %20983, i64 %21019, i32 %21020, i32 %21032) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %20983, i32 5, %"class.v8::internal::Label"* nonnull %229, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20980) #11
  call void @_ZN2v88internal9Assembler11emit_movzxwENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %20983, i32 0, i32 0, i32 4) #11
  br label %23402

21033:                                            ; preds = %2
  %21034 = bitcast %"class.v8::internal::Label"* %230 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21034) #11
  %21035 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %230, i64 0, i32 0
  store i32 0, i32* %21035, align 4
  %21036 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %230, i64 0, i32 1
  store i32 0, i32* %21036, align 4
  %21037 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %21037, %"class.v8::internal::Label"* nonnull %230) #11
  %21038 = bitcast i64* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21038)
  store i64 1, i64* %60, align 8
  %21039 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %60) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21038)
  %21040 = extractvalue { i64, i32 } %21039, 0
  %21041 = extractvalue { i64, i32 } %21039, 1
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %21037, i32 0, i64 %21040, i32 %21041, i32 4) #11
  %21042 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21043 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21042, i64 0, i32 1
  %21044 = load i32, i32* %21043, align 4
  %21045 = and i32 %21044, 255
  %21046 = lshr i32 %21044, 8
  %21047 = and i32 %21046, 65535
  %21048 = add nuw nsw i32 %21047, %21045
  %21049 = zext i32 %21048 to i64
  %21050 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21042, i64 0, i32 5, i64 %21049, i32 0
  %21051 = load i64, i64* %21050, align 8
  %21052 = ashr i64 %21051, 35
  %21053 = trunc i64 %21052 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21037, i32 %21053, i32 0, i32 4) #11
  %21054 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21055 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21054, i64 0, i32 1
  %21056 = load i32, i32* %21055, align 4
  %21057 = and i32 %21056, 255
  %21058 = lshr i32 %21056, 8
  %21059 = and i32 %21058, 65535
  %21060 = add nuw nsw i32 %21059, %21057
  %21061 = zext i32 %21060 to i64
  %21062 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21054, i64 0, i32 5, i64 %21061, i32 0
  %21063 = load i64, i64* %21062, align 8
  %21064 = ashr i64 %21063, 35
  %21065 = trunc i64 %21064 to i32
  %21066 = zext i32 %21057 to i64
  %21067 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21054, i64 0, i32 5, i64 %21066, i32 0
  %21068 = load i64, i64* %21067, align 8
  %21069 = ashr i64 %21068, 35
  %21070 = trunc i64 %21069 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21037, i8 zeroext 3, i32 %21065, i32 %21070, i32 4) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %21037) #11
  %21071 = bitcast i64* %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21071)
  store i64 1, i64* %61, align 8
  %21072 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %61) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21071)
  %21073 = extractvalue { i64, i32 } %21072, 0
  %21074 = extractvalue { i64, i32 } %21072, 1
  %21075 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21076 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21075, i64 0, i32 1
  %21077 = load i32, i32* %21076, align 4
  %21078 = and i32 %21077, 255
  %21079 = lshr i32 %21077, 8
  %21080 = and i32 %21079, 65535
  %21081 = add nuw nsw i32 %21080, %21078
  %21082 = zext i32 %21081 to i64
  %21083 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21075, i64 0, i32 5, i64 %21082, i32 0
  %21084 = load i64, i64* %21083, align 8
  %21085 = ashr i64 %21084, 35
  %21086 = trunc i64 %21085 to i32
  call void @_ZN2v88internal9Assembler12emit_cmpxchgENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %21037, i64 %21073, i32 %21074, i32 %21086, i32 4) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %21037, i32 5, %"class.v8::internal::Label"* nonnull %230, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21034) #11
  br label %23402

21087:                                            ; preds = %2
  %21088 = bitcast %"class.v8::internal::Label"* %231 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21088) #11
  %21089 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %231, i64 0, i32 0
  store i32 0, i32* %21089, align 4
  %21090 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %231, i64 0, i32 1
  store i32 0, i32* %21090, align 4
  %21091 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %21091, %"class.v8::internal::Label"* nonnull %231) #11
  %21092 = bitcast i64* %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21092)
  store i64 1, i64* %62, align 8
  %21093 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %62) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21092)
  %21094 = extractvalue { i64, i32 } %21093, 0
  %21095 = extractvalue { i64, i32 } %21093, 1
  call void @_ZN2v88internal9Assembler4movbENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %21091, i32 0, i64 %21094, i32 %21095) #11
  %21096 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21097 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21096, i64 0, i32 1
  %21098 = load i32, i32* %21097, align 4
  %21099 = and i32 %21098, 255
  %21100 = lshr i32 %21098, 8
  %21101 = and i32 %21100, 65535
  %21102 = add nuw nsw i32 %21101, %21099
  %21103 = zext i32 %21102 to i64
  %21104 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21096, i64 0, i32 5, i64 %21103, i32 0
  %21105 = load i64, i64* %21104, align 8
  %21106 = ashr i64 %21105, 35
  %21107 = trunc i64 %21106 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21091, i32 %21107, i32 0, i32 4) #11
  %21108 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21109 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21108, i64 0, i32 1
  %21110 = load i32, i32* %21109, align 4
  %21111 = and i32 %21110, 255
  %21112 = lshr i32 %21110, 8
  %21113 = and i32 %21112, 65535
  %21114 = add nuw nsw i32 %21113, %21111
  %21115 = zext i32 %21114 to i64
  %21116 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21108, i64 0, i32 5, i64 %21115, i32 0
  %21117 = load i64, i64* %21116, align 8
  %21118 = ashr i64 %21117, 35
  %21119 = trunc i64 %21118 to i32
  %21120 = zext i32 %21111 to i64
  %21121 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21108, i64 0, i32 5, i64 %21120, i32 0
  %21122 = load i64, i64* %21121, align 8
  %21123 = ashr i64 %21122, 35
  %21124 = trunc i64 %21123 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21091, i8 zeroext 43, i32 %21119, i32 %21124, i32 4) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %21091) #11
  %21125 = bitcast i64* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21125)
  store i64 1, i64* %63, align 8
  %21126 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %63) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21125)
  %21127 = extractvalue { i64, i32 } %21126, 0
  %21128 = extractvalue { i64, i32 } %21126, 1
  %21129 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21130 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21129, i64 0, i32 1
  %21131 = load i32, i32* %21130, align 4
  %21132 = and i32 %21131, 255
  %21133 = lshr i32 %21131, 8
  %21134 = and i32 %21133, 65535
  %21135 = add nuw nsw i32 %21134, %21132
  %21136 = zext i32 %21135 to i64
  %21137 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21129, i64 0, i32 5, i64 %21136, i32 0
  %21138 = load i64, i64* %21137, align 8
  %21139 = ashr i64 %21138, 35
  %21140 = trunc i64 %21139 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgbENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %21091, i64 %21127, i32 %21128, i32 %21140) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %21091, i32 5, %"class.v8::internal::Label"* nonnull %231, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21088) #11
  call void @_ZN2v88internal9Assembler7movsxblENS0_8RegisterES2_(%"class.v8::internal::Assembler"* %21091, i32 0, i32 0) #11
  br label %23402

21141:                                            ; preds = %2
  %21142 = bitcast %"class.v8::internal::Label"* %232 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21142) #11
  %21143 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %232, i64 0, i32 0
  store i32 0, i32* %21143, align 4
  %21144 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %232, i64 0, i32 1
  store i32 0, i32* %21144, align 4
  %21145 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %21145, %"class.v8::internal::Label"* nonnull %232) #11
  %21146 = bitcast i64* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21146)
  store i64 1, i64* %64, align 8
  %21147 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %64) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21146)
  %21148 = extractvalue { i64, i32 } %21147, 0
  %21149 = extractvalue { i64, i32 } %21147, 1
  call void @_ZN2v88internal9Assembler4movbENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %21145, i32 0, i64 %21148, i32 %21149) #11
  %21150 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21151 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21150, i64 0, i32 1
  %21152 = load i32, i32* %21151, align 4
  %21153 = and i32 %21152, 255
  %21154 = lshr i32 %21152, 8
  %21155 = and i32 %21154, 65535
  %21156 = add nuw nsw i32 %21155, %21153
  %21157 = zext i32 %21156 to i64
  %21158 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21150, i64 0, i32 5, i64 %21157, i32 0
  %21159 = load i64, i64* %21158, align 8
  %21160 = ashr i64 %21159, 35
  %21161 = trunc i64 %21160 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21145, i32 %21161, i32 0, i32 4) #11
  %21162 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21163 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21162, i64 0, i32 1
  %21164 = load i32, i32* %21163, align 4
  %21165 = and i32 %21164, 255
  %21166 = lshr i32 %21164, 8
  %21167 = and i32 %21166, 65535
  %21168 = add nuw nsw i32 %21167, %21165
  %21169 = zext i32 %21168 to i64
  %21170 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21162, i64 0, i32 5, i64 %21169, i32 0
  %21171 = load i64, i64* %21170, align 8
  %21172 = ashr i64 %21171, 35
  %21173 = trunc i64 %21172 to i32
  %21174 = zext i32 %21165 to i64
  %21175 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21162, i64 0, i32 5, i64 %21174, i32 0
  %21176 = load i64, i64* %21175, align 8
  %21177 = ashr i64 %21176, 35
  %21178 = trunc i64 %21177 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21145, i8 zeroext 43, i32 %21173, i32 %21178, i32 4) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %21145) #11
  %21179 = bitcast i64* %65 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21179)
  store i64 1, i64* %65, align 8
  %21180 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %65) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21179)
  %21181 = extractvalue { i64, i32 } %21180, 0
  %21182 = extractvalue { i64, i32 } %21180, 1
  %21183 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21184 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21183, i64 0, i32 1
  %21185 = load i32, i32* %21184, align 4
  %21186 = and i32 %21185, 255
  %21187 = lshr i32 %21185, 8
  %21188 = and i32 %21187, 65535
  %21189 = add nuw nsw i32 %21188, %21186
  %21190 = zext i32 %21189 to i64
  %21191 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21183, i64 0, i32 5, i64 %21190, i32 0
  %21192 = load i64, i64* %21191, align 8
  %21193 = ashr i64 %21192, 35
  %21194 = trunc i64 %21193 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgbENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %21145, i64 %21181, i32 %21182, i32 %21194) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %21145, i32 5, %"class.v8::internal::Label"* nonnull %232, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21142) #11
  call void @_ZN2v88internal9Assembler11emit_movzxbENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21145, i32 0, i32 0, i32 4) #11
  br label %23402

21195:                                            ; preds = %2
  %21196 = bitcast %"class.v8::internal::Label"* %233 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21196) #11
  %21197 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %233, i64 0, i32 0
  store i32 0, i32* %21197, align 4
  %21198 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %233, i64 0, i32 1
  store i32 0, i32* %21198, align 4
  %21199 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %21199, %"class.v8::internal::Label"* nonnull %233) #11
  %21200 = bitcast i64* %66 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21200)
  store i64 1, i64* %66, align 8
  %21201 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %66) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21200)
  %21202 = extractvalue { i64, i32 } %21201, 0
  %21203 = extractvalue { i64, i32 } %21201, 1
  call void @_ZN2v88internal9Assembler4movwENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %21199, i32 0, i64 %21202, i32 %21203) #11
  %21204 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21205 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21204, i64 0, i32 1
  %21206 = load i32, i32* %21205, align 4
  %21207 = and i32 %21206, 255
  %21208 = lshr i32 %21206, 8
  %21209 = and i32 %21208, 65535
  %21210 = add nuw nsw i32 %21209, %21207
  %21211 = zext i32 %21210 to i64
  %21212 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21204, i64 0, i32 5, i64 %21211, i32 0
  %21213 = load i64, i64* %21212, align 8
  %21214 = ashr i64 %21213, 35
  %21215 = trunc i64 %21214 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21199, i32 %21215, i32 0, i32 4) #11
  %21216 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21217 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21216, i64 0, i32 1
  %21218 = load i32, i32* %21217, align 4
  %21219 = and i32 %21218, 255
  %21220 = lshr i32 %21218, 8
  %21221 = and i32 %21220, 65535
  %21222 = add nuw nsw i32 %21221, %21219
  %21223 = zext i32 %21222 to i64
  %21224 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21216, i64 0, i32 5, i64 %21223, i32 0
  %21225 = load i64, i64* %21224, align 8
  %21226 = ashr i64 %21225, 35
  %21227 = trunc i64 %21226 to i32
  %21228 = zext i32 %21219 to i64
  %21229 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21216, i64 0, i32 5, i64 %21228, i32 0
  %21230 = load i64, i64* %21229, align 8
  %21231 = ashr i64 %21230, 35
  %21232 = trunc i64 %21231 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21199, i8 zeroext 43, i32 %21227, i32 %21232, i32 4) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %21199) #11
  %21233 = bitcast i64* %67 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21233)
  store i64 1, i64* %67, align 8
  %21234 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %67) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21233)
  %21235 = extractvalue { i64, i32 } %21234, 0
  %21236 = extractvalue { i64, i32 } %21234, 1
  %21237 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21238 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21237, i64 0, i32 1
  %21239 = load i32, i32* %21238, align 4
  %21240 = and i32 %21239, 255
  %21241 = lshr i32 %21239, 8
  %21242 = and i32 %21241, 65535
  %21243 = add nuw nsw i32 %21242, %21240
  %21244 = zext i32 %21243 to i64
  %21245 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21237, i64 0, i32 5, i64 %21244, i32 0
  %21246 = load i64, i64* %21245, align 8
  %21247 = ashr i64 %21246, 35
  %21248 = trunc i64 %21247 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgwENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %21199, i64 %21235, i32 %21236, i32 %21248) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %21199, i32 5, %"class.v8::internal::Label"* nonnull %233, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21196) #11
  call void @_ZN2v88internal9Assembler7movsxwlENS0_8RegisterES2_(%"class.v8::internal::Assembler"* %21199, i32 0, i32 0) #11
  br label %23402

21249:                                            ; preds = %2
  %21250 = bitcast %"class.v8::internal::Label"* %234 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21250) #11
  %21251 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %234, i64 0, i32 0
  store i32 0, i32* %21251, align 4
  %21252 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %234, i64 0, i32 1
  store i32 0, i32* %21252, align 4
  %21253 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %21253, %"class.v8::internal::Label"* nonnull %234) #11
  %21254 = bitcast i64* %68 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21254)
  store i64 1, i64* %68, align 8
  %21255 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %68) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21254)
  %21256 = extractvalue { i64, i32 } %21255, 0
  %21257 = extractvalue { i64, i32 } %21255, 1
  call void @_ZN2v88internal9Assembler4movwENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %21253, i32 0, i64 %21256, i32 %21257) #11
  %21258 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21259 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21258, i64 0, i32 1
  %21260 = load i32, i32* %21259, align 4
  %21261 = and i32 %21260, 255
  %21262 = lshr i32 %21260, 8
  %21263 = and i32 %21262, 65535
  %21264 = add nuw nsw i32 %21263, %21261
  %21265 = zext i32 %21264 to i64
  %21266 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21258, i64 0, i32 5, i64 %21265, i32 0
  %21267 = load i64, i64* %21266, align 8
  %21268 = ashr i64 %21267, 35
  %21269 = trunc i64 %21268 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21253, i32 %21269, i32 0, i32 4) #11
  %21270 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21271 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21270, i64 0, i32 1
  %21272 = load i32, i32* %21271, align 4
  %21273 = and i32 %21272, 255
  %21274 = lshr i32 %21272, 8
  %21275 = and i32 %21274, 65535
  %21276 = add nuw nsw i32 %21275, %21273
  %21277 = zext i32 %21276 to i64
  %21278 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21270, i64 0, i32 5, i64 %21277, i32 0
  %21279 = load i64, i64* %21278, align 8
  %21280 = ashr i64 %21279, 35
  %21281 = trunc i64 %21280 to i32
  %21282 = zext i32 %21273 to i64
  %21283 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21270, i64 0, i32 5, i64 %21282, i32 0
  %21284 = load i64, i64* %21283, align 8
  %21285 = ashr i64 %21284, 35
  %21286 = trunc i64 %21285 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21253, i8 zeroext 43, i32 %21281, i32 %21286, i32 4) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %21253) #11
  %21287 = bitcast i64* %69 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21287)
  store i64 1, i64* %69, align 8
  %21288 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %69) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21287)
  %21289 = extractvalue { i64, i32 } %21288, 0
  %21290 = extractvalue { i64, i32 } %21288, 1
  %21291 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21292 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21291, i64 0, i32 1
  %21293 = load i32, i32* %21292, align 4
  %21294 = and i32 %21293, 255
  %21295 = lshr i32 %21293, 8
  %21296 = and i32 %21295, 65535
  %21297 = add nuw nsw i32 %21296, %21294
  %21298 = zext i32 %21297 to i64
  %21299 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21291, i64 0, i32 5, i64 %21298, i32 0
  %21300 = load i64, i64* %21299, align 8
  %21301 = ashr i64 %21300, 35
  %21302 = trunc i64 %21301 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgwENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %21253, i64 %21289, i32 %21290, i32 %21302) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %21253, i32 5, %"class.v8::internal::Label"* nonnull %234, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21250) #11
  call void @_ZN2v88internal9Assembler11emit_movzxwENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21253, i32 0, i32 0, i32 4) #11
  br label %23402

21303:                                            ; preds = %2
  %21304 = bitcast %"class.v8::internal::Label"* %235 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21304) #11
  %21305 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %235, i64 0, i32 0
  store i32 0, i32* %21305, align 4
  %21306 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %235, i64 0, i32 1
  store i32 0, i32* %21306, align 4
  %21307 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %21307, %"class.v8::internal::Label"* nonnull %235) #11
  %21308 = bitcast i64* %70 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21308)
  store i64 1, i64* %70, align 8
  %21309 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %70) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21308)
  %21310 = extractvalue { i64, i32 } %21309, 0
  %21311 = extractvalue { i64, i32 } %21309, 1
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %21307, i32 0, i64 %21310, i32 %21311, i32 4) #11
  %21312 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21313 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21312, i64 0, i32 1
  %21314 = load i32, i32* %21313, align 4
  %21315 = and i32 %21314, 255
  %21316 = lshr i32 %21314, 8
  %21317 = and i32 %21316, 65535
  %21318 = add nuw nsw i32 %21317, %21315
  %21319 = zext i32 %21318 to i64
  %21320 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21312, i64 0, i32 5, i64 %21319, i32 0
  %21321 = load i64, i64* %21320, align 8
  %21322 = ashr i64 %21321, 35
  %21323 = trunc i64 %21322 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21307, i32 %21323, i32 0, i32 4) #11
  %21324 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21325 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21324, i64 0, i32 1
  %21326 = load i32, i32* %21325, align 4
  %21327 = and i32 %21326, 255
  %21328 = lshr i32 %21326, 8
  %21329 = and i32 %21328, 65535
  %21330 = add nuw nsw i32 %21329, %21327
  %21331 = zext i32 %21330 to i64
  %21332 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21324, i64 0, i32 5, i64 %21331, i32 0
  %21333 = load i64, i64* %21332, align 8
  %21334 = ashr i64 %21333, 35
  %21335 = trunc i64 %21334 to i32
  %21336 = zext i32 %21327 to i64
  %21337 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21324, i64 0, i32 5, i64 %21336, i32 0
  %21338 = load i64, i64* %21337, align 8
  %21339 = ashr i64 %21338, 35
  %21340 = trunc i64 %21339 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21307, i8 zeroext 43, i32 %21335, i32 %21340, i32 4) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %21307) #11
  %21341 = bitcast i64* %71 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21341)
  store i64 1, i64* %71, align 8
  %21342 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %71) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21341)
  %21343 = extractvalue { i64, i32 } %21342, 0
  %21344 = extractvalue { i64, i32 } %21342, 1
  %21345 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21346 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21345, i64 0, i32 1
  %21347 = load i32, i32* %21346, align 4
  %21348 = and i32 %21347, 255
  %21349 = lshr i32 %21347, 8
  %21350 = and i32 %21349, 65535
  %21351 = add nuw nsw i32 %21350, %21348
  %21352 = zext i32 %21351 to i64
  %21353 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21345, i64 0, i32 5, i64 %21352, i32 0
  %21354 = load i64, i64* %21353, align 8
  %21355 = ashr i64 %21354, 35
  %21356 = trunc i64 %21355 to i32
  call void @_ZN2v88internal9Assembler12emit_cmpxchgENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %21307, i64 %21343, i32 %21344, i32 %21356, i32 4) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %21307, i32 5, %"class.v8::internal::Label"* nonnull %235, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21304) #11
  br label %23402

21357:                                            ; preds = %2
  %21358 = bitcast %"class.v8::internal::Label"* %236 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21358) #11
  %21359 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %236, i64 0, i32 0
  store i32 0, i32* %21359, align 4
  %21360 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %236, i64 0, i32 1
  store i32 0, i32* %21360, align 4
  %21361 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %21361, %"class.v8::internal::Label"* nonnull %236) #11
  %21362 = bitcast i64* %72 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21362)
  store i64 1, i64* %72, align 8
  %21363 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %72) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21362)
  %21364 = extractvalue { i64, i32 } %21363, 0
  %21365 = extractvalue { i64, i32 } %21363, 1
  call void @_ZN2v88internal9Assembler4movbENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %21361, i32 0, i64 %21364, i32 %21365) #11
  %21366 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21367 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21366, i64 0, i32 1
  %21368 = load i32, i32* %21367, align 4
  %21369 = and i32 %21368, 255
  %21370 = lshr i32 %21368, 8
  %21371 = and i32 %21370, 65535
  %21372 = add nuw nsw i32 %21371, %21369
  %21373 = zext i32 %21372 to i64
  %21374 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21366, i64 0, i32 5, i64 %21373, i32 0
  %21375 = load i64, i64* %21374, align 8
  %21376 = ashr i64 %21375, 35
  %21377 = trunc i64 %21376 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21361, i32 %21377, i32 0, i32 4) #11
  %21378 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21379 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21378, i64 0, i32 1
  %21380 = load i32, i32* %21379, align 4
  %21381 = and i32 %21380, 255
  %21382 = lshr i32 %21380, 8
  %21383 = and i32 %21382, 65535
  %21384 = add nuw nsw i32 %21383, %21381
  %21385 = zext i32 %21384 to i64
  %21386 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21378, i64 0, i32 5, i64 %21385, i32 0
  %21387 = load i64, i64* %21386, align 8
  %21388 = ashr i64 %21387, 35
  %21389 = trunc i64 %21388 to i32
  %21390 = zext i32 %21381 to i64
  %21391 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21378, i64 0, i32 5, i64 %21390, i32 0
  %21392 = load i64, i64* %21391, align 8
  %21393 = ashr i64 %21392, 35
  %21394 = trunc i64 %21393 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21361, i8 zeroext 35, i32 %21389, i32 %21394, i32 4) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %21361) #11
  %21395 = bitcast i64* %73 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21395)
  store i64 1, i64* %73, align 8
  %21396 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %73) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21395)
  %21397 = extractvalue { i64, i32 } %21396, 0
  %21398 = extractvalue { i64, i32 } %21396, 1
  %21399 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21400 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21399, i64 0, i32 1
  %21401 = load i32, i32* %21400, align 4
  %21402 = and i32 %21401, 255
  %21403 = lshr i32 %21401, 8
  %21404 = and i32 %21403, 65535
  %21405 = add nuw nsw i32 %21404, %21402
  %21406 = zext i32 %21405 to i64
  %21407 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21399, i64 0, i32 5, i64 %21406, i32 0
  %21408 = load i64, i64* %21407, align 8
  %21409 = ashr i64 %21408, 35
  %21410 = trunc i64 %21409 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgbENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %21361, i64 %21397, i32 %21398, i32 %21410) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %21361, i32 5, %"class.v8::internal::Label"* nonnull %236, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21358) #11
  call void @_ZN2v88internal9Assembler7movsxblENS0_8RegisterES2_(%"class.v8::internal::Assembler"* %21361, i32 0, i32 0) #11
  br label %23402

21411:                                            ; preds = %2
  %21412 = bitcast %"class.v8::internal::Label"* %237 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21412) #11
  %21413 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %237, i64 0, i32 0
  store i32 0, i32* %21413, align 4
  %21414 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %237, i64 0, i32 1
  store i32 0, i32* %21414, align 4
  %21415 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %21415, %"class.v8::internal::Label"* nonnull %237) #11
  %21416 = bitcast i64* %74 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21416)
  store i64 1, i64* %74, align 8
  %21417 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %74) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21416)
  %21418 = extractvalue { i64, i32 } %21417, 0
  %21419 = extractvalue { i64, i32 } %21417, 1
  call void @_ZN2v88internal9Assembler4movbENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %21415, i32 0, i64 %21418, i32 %21419) #11
  %21420 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21421 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21420, i64 0, i32 1
  %21422 = load i32, i32* %21421, align 4
  %21423 = and i32 %21422, 255
  %21424 = lshr i32 %21422, 8
  %21425 = and i32 %21424, 65535
  %21426 = add nuw nsw i32 %21425, %21423
  %21427 = zext i32 %21426 to i64
  %21428 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21420, i64 0, i32 5, i64 %21427, i32 0
  %21429 = load i64, i64* %21428, align 8
  %21430 = ashr i64 %21429, 35
  %21431 = trunc i64 %21430 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21415, i32 %21431, i32 0, i32 4) #11
  %21432 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21433 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21432, i64 0, i32 1
  %21434 = load i32, i32* %21433, align 4
  %21435 = and i32 %21434, 255
  %21436 = lshr i32 %21434, 8
  %21437 = and i32 %21436, 65535
  %21438 = add nuw nsw i32 %21437, %21435
  %21439 = zext i32 %21438 to i64
  %21440 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21432, i64 0, i32 5, i64 %21439, i32 0
  %21441 = load i64, i64* %21440, align 8
  %21442 = ashr i64 %21441, 35
  %21443 = trunc i64 %21442 to i32
  %21444 = zext i32 %21435 to i64
  %21445 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21432, i64 0, i32 5, i64 %21444, i32 0
  %21446 = load i64, i64* %21445, align 8
  %21447 = ashr i64 %21446, 35
  %21448 = trunc i64 %21447 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21415, i8 zeroext 35, i32 %21443, i32 %21448, i32 4) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %21415) #11
  %21449 = bitcast i64* %75 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21449)
  store i64 1, i64* %75, align 8
  %21450 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %75) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21449)
  %21451 = extractvalue { i64, i32 } %21450, 0
  %21452 = extractvalue { i64, i32 } %21450, 1
  %21453 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21454 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21453, i64 0, i32 1
  %21455 = load i32, i32* %21454, align 4
  %21456 = and i32 %21455, 255
  %21457 = lshr i32 %21455, 8
  %21458 = and i32 %21457, 65535
  %21459 = add nuw nsw i32 %21458, %21456
  %21460 = zext i32 %21459 to i64
  %21461 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21453, i64 0, i32 5, i64 %21460, i32 0
  %21462 = load i64, i64* %21461, align 8
  %21463 = ashr i64 %21462, 35
  %21464 = trunc i64 %21463 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgbENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %21415, i64 %21451, i32 %21452, i32 %21464) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %21415, i32 5, %"class.v8::internal::Label"* nonnull %237, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21412) #11
  call void @_ZN2v88internal9Assembler11emit_movzxbENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21415, i32 0, i32 0, i32 4) #11
  br label %23402

21465:                                            ; preds = %2
  %21466 = bitcast %"class.v8::internal::Label"* %238 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21466) #11
  %21467 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %238, i64 0, i32 0
  store i32 0, i32* %21467, align 4
  %21468 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %238, i64 0, i32 1
  store i32 0, i32* %21468, align 4
  %21469 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %21469, %"class.v8::internal::Label"* nonnull %238) #11
  %21470 = bitcast i64* %76 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21470)
  store i64 1, i64* %76, align 8
  %21471 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %76) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21470)
  %21472 = extractvalue { i64, i32 } %21471, 0
  %21473 = extractvalue { i64, i32 } %21471, 1
  call void @_ZN2v88internal9Assembler4movwENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %21469, i32 0, i64 %21472, i32 %21473) #11
  %21474 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21475 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21474, i64 0, i32 1
  %21476 = load i32, i32* %21475, align 4
  %21477 = and i32 %21476, 255
  %21478 = lshr i32 %21476, 8
  %21479 = and i32 %21478, 65535
  %21480 = add nuw nsw i32 %21479, %21477
  %21481 = zext i32 %21480 to i64
  %21482 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21474, i64 0, i32 5, i64 %21481, i32 0
  %21483 = load i64, i64* %21482, align 8
  %21484 = ashr i64 %21483, 35
  %21485 = trunc i64 %21484 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21469, i32 %21485, i32 0, i32 4) #11
  %21486 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21487 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21486, i64 0, i32 1
  %21488 = load i32, i32* %21487, align 4
  %21489 = and i32 %21488, 255
  %21490 = lshr i32 %21488, 8
  %21491 = and i32 %21490, 65535
  %21492 = add nuw nsw i32 %21491, %21489
  %21493 = zext i32 %21492 to i64
  %21494 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21486, i64 0, i32 5, i64 %21493, i32 0
  %21495 = load i64, i64* %21494, align 8
  %21496 = ashr i64 %21495, 35
  %21497 = trunc i64 %21496 to i32
  %21498 = zext i32 %21489 to i64
  %21499 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21486, i64 0, i32 5, i64 %21498, i32 0
  %21500 = load i64, i64* %21499, align 8
  %21501 = ashr i64 %21500, 35
  %21502 = trunc i64 %21501 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21469, i8 zeroext 35, i32 %21497, i32 %21502, i32 4) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %21469) #11
  %21503 = bitcast i64* %77 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21503)
  store i64 1, i64* %77, align 8
  %21504 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %77) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21503)
  %21505 = extractvalue { i64, i32 } %21504, 0
  %21506 = extractvalue { i64, i32 } %21504, 1
  %21507 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21508 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21507, i64 0, i32 1
  %21509 = load i32, i32* %21508, align 4
  %21510 = and i32 %21509, 255
  %21511 = lshr i32 %21509, 8
  %21512 = and i32 %21511, 65535
  %21513 = add nuw nsw i32 %21512, %21510
  %21514 = zext i32 %21513 to i64
  %21515 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21507, i64 0, i32 5, i64 %21514, i32 0
  %21516 = load i64, i64* %21515, align 8
  %21517 = ashr i64 %21516, 35
  %21518 = trunc i64 %21517 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgwENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %21469, i64 %21505, i32 %21506, i32 %21518) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %21469, i32 5, %"class.v8::internal::Label"* nonnull %238, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21466) #11
  call void @_ZN2v88internal9Assembler7movsxwlENS0_8RegisterES2_(%"class.v8::internal::Assembler"* %21469, i32 0, i32 0) #11
  br label %23402

21519:                                            ; preds = %2
  %21520 = bitcast %"class.v8::internal::Label"* %239 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21520) #11
  %21521 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %239, i64 0, i32 0
  store i32 0, i32* %21521, align 4
  %21522 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %239, i64 0, i32 1
  store i32 0, i32* %21522, align 4
  %21523 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %21523, %"class.v8::internal::Label"* nonnull %239) #11
  %21524 = bitcast i64* %78 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21524)
  store i64 1, i64* %78, align 8
  %21525 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %78) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21524)
  %21526 = extractvalue { i64, i32 } %21525, 0
  %21527 = extractvalue { i64, i32 } %21525, 1
  call void @_ZN2v88internal9Assembler4movwENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %21523, i32 0, i64 %21526, i32 %21527) #11
  %21528 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21529 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21528, i64 0, i32 1
  %21530 = load i32, i32* %21529, align 4
  %21531 = and i32 %21530, 255
  %21532 = lshr i32 %21530, 8
  %21533 = and i32 %21532, 65535
  %21534 = add nuw nsw i32 %21533, %21531
  %21535 = zext i32 %21534 to i64
  %21536 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21528, i64 0, i32 5, i64 %21535, i32 0
  %21537 = load i64, i64* %21536, align 8
  %21538 = ashr i64 %21537, 35
  %21539 = trunc i64 %21538 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21523, i32 %21539, i32 0, i32 4) #11
  %21540 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21541 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21540, i64 0, i32 1
  %21542 = load i32, i32* %21541, align 4
  %21543 = and i32 %21542, 255
  %21544 = lshr i32 %21542, 8
  %21545 = and i32 %21544, 65535
  %21546 = add nuw nsw i32 %21545, %21543
  %21547 = zext i32 %21546 to i64
  %21548 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21540, i64 0, i32 5, i64 %21547, i32 0
  %21549 = load i64, i64* %21548, align 8
  %21550 = ashr i64 %21549, 35
  %21551 = trunc i64 %21550 to i32
  %21552 = zext i32 %21543 to i64
  %21553 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21540, i64 0, i32 5, i64 %21552, i32 0
  %21554 = load i64, i64* %21553, align 8
  %21555 = ashr i64 %21554, 35
  %21556 = trunc i64 %21555 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21523, i8 zeroext 35, i32 %21551, i32 %21556, i32 4) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %21523) #11
  %21557 = bitcast i64* %79 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21557)
  store i64 1, i64* %79, align 8
  %21558 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %79) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21557)
  %21559 = extractvalue { i64, i32 } %21558, 0
  %21560 = extractvalue { i64, i32 } %21558, 1
  %21561 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21562 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21561, i64 0, i32 1
  %21563 = load i32, i32* %21562, align 4
  %21564 = and i32 %21563, 255
  %21565 = lshr i32 %21563, 8
  %21566 = and i32 %21565, 65535
  %21567 = add nuw nsw i32 %21566, %21564
  %21568 = zext i32 %21567 to i64
  %21569 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21561, i64 0, i32 5, i64 %21568, i32 0
  %21570 = load i64, i64* %21569, align 8
  %21571 = ashr i64 %21570, 35
  %21572 = trunc i64 %21571 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgwENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %21523, i64 %21559, i32 %21560, i32 %21572) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %21523, i32 5, %"class.v8::internal::Label"* nonnull %239, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21520) #11
  call void @_ZN2v88internal9Assembler11emit_movzxwENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21523, i32 0, i32 0, i32 4) #11
  br label %23402

21573:                                            ; preds = %2
  %21574 = bitcast %"class.v8::internal::Label"* %240 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21574) #11
  %21575 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %240, i64 0, i32 0
  store i32 0, i32* %21575, align 4
  %21576 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %240, i64 0, i32 1
  store i32 0, i32* %21576, align 4
  %21577 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %21577, %"class.v8::internal::Label"* nonnull %240) #11
  %21578 = bitcast i64* %80 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21578)
  store i64 1, i64* %80, align 8
  %21579 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %80) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21578)
  %21580 = extractvalue { i64, i32 } %21579, 0
  %21581 = extractvalue { i64, i32 } %21579, 1
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %21577, i32 0, i64 %21580, i32 %21581, i32 4) #11
  %21582 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21583 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21582, i64 0, i32 1
  %21584 = load i32, i32* %21583, align 4
  %21585 = and i32 %21584, 255
  %21586 = lshr i32 %21584, 8
  %21587 = and i32 %21586, 65535
  %21588 = add nuw nsw i32 %21587, %21585
  %21589 = zext i32 %21588 to i64
  %21590 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21582, i64 0, i32 5, i64 %21589, i32 0
  %21591 = load i64, i64* %21590, align 8
  %21592 = ashr i64 %21591, 35
  %21593 = trunc i64 %21592 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21577, i32 %21593, i32 0, i32 4) #11
  %21594 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21595 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21594, i64 0, i32 1
  %21596 = load i32, i32* %21595, align 4
  %21597 = and i32 %21596, 255
  %21598 = lshr i32 %21596, 8
  %21599 = and i32 %21598, 65535
  %21600 = add nuw nsw i32 %21599, %21597
  %21601 = zext i32 %21600 to i64
  %21602 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21594, i64 0, i32 5, i64 %21601, i32 0
  %21603 = load i64, i64* %21602, align 8
  %21604 = ashr i64 %21603, 35
  %21605 = trunc i64 %21604 to i32
  %21606 = zext i32 %21597 to i64
  %21607 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21594, i64 0, i32 5, i64 %21606, i32 0
  %21608 = load i64, i64* %21607, align 8
  %21609 = ashr i64 %21608, 35
  %21610 = trunc i64 %21609 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21577, i8 zeroext 35, i32 %21605, i32 %21610, i32 4) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %21577) #11
  %21611 = bitcast i64* %81 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21611)
  store i64 1, i64* %81, align 8
  %21612 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %81) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21611)
  %21613 = extractvalue { i64, i32 } %21612, 0
  %21614 = extractvalue { i64, i32 } %21612, 1
  %21615 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21616 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21615, i64 0, i32 1
  %21617 = load i32, i32* %21616, align 4
  %21618 = and i32 %21617, 255
  %21619 = lshr i32 %21617, 8
  %21620 = and i32 %21619, 65535
  %21621 = add nuw nsw i32 %21620, %21618
  %21622 = zext i32 %21621 to i64
  %21623 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21615, i64 0, i32 5, i64 %21622, i32 0
  %21624 = load i64, i64* %21623, align 8
  %21625 = ashr i64 %21624, 35
  %21626 = trunc i64 %21625 to i32
  call void @_ZN2v88internal9Assembler12emit_cmpxchgENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %21577, i64 %21613, i32 %21614, i32 %21626, i32 4) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %21577, i32 5, %"class.v8::internal::Label"* nonnull %240, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21574) #11
  br label %23402

21627:                                            ; preds = %2
  %21628 = bitcast %"class.v8::internal::Label"* %241 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21628) #11
  %21629 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %241, i64 0, i32 0
  store i32 0, i32* %21629, align 4
  %21630 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %241, i64 0, i32 1
  store i32 0, i32* %21630, align 4
  %21631 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %21631, %"class.v8::internal::Label"* nonnull %241) #11
  %21632 = bitcast i64* %82 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21632)
  store i64 1, i64* %82, align 8
  %21633 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %82) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21632)
  %21634 = extractvalue { i64, i32 } %21633, 0
  %21635 = extractvalue { i64, i32 } %21633, 1
  call void @_ZN2v88internal9Assembler4movbENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %21631, i32 0, i64 %21634, i32 %21635) #11
  %21636 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21637 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21636, i64 0, i32 1
  %21638 = load i32, i32* %21637, align 4
  %21639 = and i32 %21638, 255
  %21640 = lshr i32 %21638, 8
  %21641 = and i32 %21640, 65535
  %21642 = add nuw nsw i32 %21641, %21639
  %21643 = zext i32 %21642 to i64
  %21644 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21636, i64 0, i32 5, i64 %21643, i32 0
  %21645 = load i64, i64* %21644, align 8
  %21646 = ashr i64 %21645, 35
  %21647 = trunc i64 %21646 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21631, i32 %21647, i32 0, i32 4) #11
  %21648 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21649 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21648, i64 0, i32 1
  %21650 = load i32, i32* %21649, align 4
  %21651 = and i32 %21650, 255
  %21652 = lshr i32 %21650, 8
  %21653 = and i32 %21652, 65535
  %21654 = add nuw nsw i32 %21653, %21651
  %21655 = zext i32 %21654 to i64
  %21656 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21648, i64 0, i32 5, i64 %21655, i32 0
  %21657 = load i64, i64* %21656, align 8
  %21658 = ashr i64 %21657, 35
  %21659 = trunc i64 %21658 to i32
  %21660 = zext i32 %21651 to i64
  %21661 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21648, i64 0, i32 5, i64 %21660, i32 0
  %21662 = load i64, i64* %21661, align 8
  %21663 = ashr i64 %21662, 35
  %21664 = trunc i64 %21663 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21631, i8 zeroext 11, i32 %21659, i32 %21664, i32 4) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %21631) #11
  %21665 = bitcast i64* %83 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21665)
  store i64 1, i64* %83, align 8
  %21666 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %83) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21665)
  %21667 = extractvalue { i64, i32 } %21666, 0
  %21668 = extractvalue { i64, i32 } %21666, 1
  %21669 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21670 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21669, i64 0, i32 1
  %21671 = load i32, i32* %21670, align 4
  %21672 = and i32 %21671, 255
  %21673 = lshr i32 %21671, 8
  %21674 = and i32 %21673, 65535
  %21675 = add nuw nsw i32 %21674, %21672
  %21676 = zext i32 %21675 to i64
  %21677 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21669, i64 0, i32 5, i64 %21676, i32 0
  %21678 = load i64, i64* %21677, align 8
  %21679 = ashr i64 %21678, 35
  %21680 = trunc i64 %21679 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgbENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %21631, i64 %21667, i32 %21668, i32 %21680) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %21631, i32 5, %"class.v8::internal::Label"* nonnull %241, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21628) #11
  call void @_ZN2v88internal9Assembler7movsxblENS0_8RegisterES2_(%"class.v8::internal::Assembler"* %21631, i32 0, i32 0) #11
  br label %23402

21681:                                            ; preds = %2
  %21682 = bitcast %"class.v8::internal::Label"* %242 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21682) #11
  %21683 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %242, i64 0, i32 0
  store i32 0, i32* %21683, align 4
  %21684 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %242, i64 0, i32 1
  store i32 0, i32* %21684, align 4
  %21685 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %21685, %"class.v8::internal::Label"* nonnull %242) #11
  %21686 = bitcast i64* %84 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21686)
  store i64 1, i64* %84, align 8
  %21687 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %84) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21686)
  %21688 = extractvalue { i64, i32 } %21687, 0
  %21689 = extractvalue { i64, i32 } %21687, 1
  call void @_ZN2v88internal9Assembler4movbENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %21685, i32 0, i64 %21688, i32 %21689) #11
  %21690 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21691 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21690, i64 0, i32 1
  %21692 = load i32, i32* %21691, align 4
  %21693 = and i32 %21692, 255
  %21694 = lshr i32 %21692, 8
  %21695 = and i32 %21694, 65535
  %21696 = add nuw nsw i32 %21695, %21693
  %21697 = zext i32 %21696 to i64
  %21698 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21690, i64 0, i32 5, i64 %21697, i32 0
  %21699 = load i64, i64* %21698, align 8
  %21700 = ashr i64 %21699, 35
  %21701 = trunc i64 %21700 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21685, i32 %21701, i32 0, i32 4) #11
  %21702 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21703 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21702, i64 0, i32 1
  %21704 = load i32, i32* %21703, align 4
  %21705 = and i32 %21704, 255
  %21706 = lshr i32 %21704, 8
  %21707 = and i32 %21706, 65535
  %21708 = add nuw nsw i32 %21707, %21705
  %21709 = zext i32 %21708 to i64
  %21710 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21702, i64 0, i32 5, i64 %21709, i32 0
  %21711 = load i64, i64* %21710, align 8
  %21712 = ashr i64 %21711, 35
  %21713 = trunc i64 %21712 to i32
  %21714 = zext i32 %21705 to i64
  %21715 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21702, i64 0, i32 5, i64 %21714, i32 0
  %21716 = load i64, i64* %21715, align 8
  %21717 = ashr i64 %21716, 35
  %21718 = trunc i64 %21717 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21685, i8 zeroext 11, i32 %21713, i32 %21718, i32 4) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %21685) #11
  %21719 = bitcast i64* %85 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21719)
  store i64 1, i64* %85, align 8
  %21720 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %85) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21719)
  %21721 = extractvalue { i64, i32 } %21720, 0
  %21722 = extractvalue { i64, i32 } %21720, 1
  %21723 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21724 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21723, i64 0, i32 1
  %21725 = load i32, i32* %21724, align 4
  %21726 = and i32 %21725, 255
  %21727 = lshr i32 %21725, 8
  %21728 = and i32 %21727, 65535
  %21729 = add nuw nsw i32 %21728, %21726
  %21730 = zext i32 %21729 to i64
  %21731 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21723, i64 0, i32 5, i64 %21730, i32 0
  %21732 = load i64, i64* %21731, align 8
  %21733 = ashr i64 %21732, 35
  %21734 = trunc i64 %21733 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgbENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %21685, i64 %21721, i32 %21722, i32 %21734) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %21685, i32 5, %"class.v8::internal::Label"* nonnull %242, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21682) #11
  call void @_ZN2v88internal9Assembler11emit_movzxbENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21685, i32 0, i32 0, i32 4) #11
  br label %23402

21735:                                            ; preds = %2
  %21736 = bitcast %"class.v8::internal::Label"* %243 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21736) #11
  %21737 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %243, i64 0, i32 0
  store i32 0, i32* %21737, align 4
  %21738 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %243, i64 0, i32 1
  store i32 0, i32* %21738, align 4
  %21739 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %21739, %"class.v8::internal::Label"* nonnull %243) #11
  %21740 = bitcast i64* %86 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21740)
  store i64 1, i64* %86, align 8
  %21741 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %86) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21740)
  %21742 = extractvalue { i64, i32 } %21741, 0
  %21743 = extractvalue { i64, i32 } %21741, 1
  call void @_ZN2v88internal9Assembler4movwENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %21739, i32 0, i64 %21742, i32 %21743) #11
  %21744 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21745 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21744, i64 0, i32 1
  %21746 = load i32, i32* %21745, align 4
  %21747 = and i32 %21746, 255
  %21748 = lshr i32 %21746, 8
  %21749 = and i32 %21748, 65535
  %21750 = add nuw nsw i32 %21749, %21747
  %21751 = zext i32 %21750 to i64
  %21752 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21744, i64 0, i32 5, i64 %21751, i32 0
  %21753 = load i64, i64* %21752, align 8
  %21754 = ashr i64 %21753, 35
  %21755 = trunc i64 %21754 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21739, i32 %21755, i32 0, i32 4) #11
  %21756 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21757 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21756, i64 0, i32 1
  %21758 = load i32, i32* %21757, align 4
  %21759 = and i32 %21758, 255
  %21760 = lshr i32 %21758, 8
  %21761 = and i32 %21760, 65535
  %21762 = add nuw nsw i32 %21761, %21759
  %21763 = zext i32 %21762 to i64
  %21764 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21756, i64 0, i32 5, i64 %21763, i32 0
  %21765 = load i64, i64* %21764, align 8
  %21766 = ashr i64 %21765, 35
  %21767 = trunc i64 %21766 to i32
  %21768 = zext i32 %21759 to i64
  %21769 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21756, i64 0, i32 5, i64 %21768, i32 0
  %21770 = load i64, i64* %21769, align 8
  %21771 = ashr i64 %21770, 35
  %21772 = trunc i64 %21771 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21739, i8 zeroext 11, i32 %21767, i32 %21772, i32 4) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %21739) #11
  %21773 = bitcast i64* %87 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21773)
  store i64 1, i64* %87, align 8
  %21774 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %87) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21773)
  %21775 = extractvalue { i64, i32 } %21774, 0
  %21776 = extractvalue { i64, i32 } %21774, 1
  %21777 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21778 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21777, i64 0, i32 1
  %21779 = load i32, i32* %21778, align 4
  %21780 = and i32 %21779, 255
  %21781 = lshr i32 %21779, 8
  %21782 = and i32 %21781, 65535
  %21783 = add nuw nsw i32 %21782, %21780
  %21784 = zext i32 %21783 to i64
  %21785 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21777, i64 0, i32 5, i64 %21784, i32 0
  %21786 = load i64, i64* %21785, align 8
  %21787 = ashr i64 %21786, 35
  %21788 = trunc i64 %21787 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgwENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %21739, i64 %21775, i32 %21776, i32 %21788) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %21739, i32 5, %"class.v8::internal::Label"* nonnull %243, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21736) #11
  call void @_ZN2v88internal9Assembler7movsxwlENS0_8RegisterES2_(%"class.v8::internal::Assembler"* %21739, i32 0, i32 0) #11
  br label %23402

21789:                                            ; preds = %2
  %21790 = bitcast %"class.v8::internal::Label"* %244 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21790) #11
  %21791 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %244, i64 0, i32 0
  store i32 0, i32* %21791, align 4
  %21792 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %244, i64 0, i32 1
  store i32 0, i32* %21792, align 4
  %21793 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %21793, %"class.v8::internal::Label"* nonnull %244) #11
  %21794 = bitcast i64* %88 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21794)
  store i64 1, i64* %88, align 8
  %21795 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %88) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21794)
  %21796 = extractvalue { i64, i32 } %21795, 0
  %21797 = extractvalue { i64, i32 } %21795, 1
  call void @_ZN2v88internal9Assembler4movwENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %21793, i32 0, i64 %21796, i32 %21797) #11
  %21798 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21799 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21798, i64 0, i32 1
  %21800 = load i32, i32* %21799, align 4
  %21801 = and i32 %21800, 255
  %21802 = lshr i32 %21800, 8
  %21803 = and i32 %21802, 65535
  %21804 = add nuw nsw i32 %21803, %21801
  %21805 = zext i32 %21804 to i64
  %21806 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21798, i64 0, i32 5, i64 %21805, i32 0
  %21807 = load i64, i64* %21806, align 8
  %21808 = ashr i64 %21807, 35
  %21809 = trunc i64 %21808 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21793, i32 %21809, i32 0, i32 4) #11
  %21810 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21811 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21810, i64 0, i32 1
  %21812 = load i32, i32* %21811, align 4
  %21813 = and i32 %21812, 255
  %21814 = lshr i32 %21812, 8
  %21815 = and i32 %21814, 65535
  %21816 = add nuw nsw i32 %21815, %21813
  %21817 = zext i32 %21816 to i64
  %21818 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21810, i64 0, i32 5, i64 %21817, i32 0
  %21819 = load i64, i64* %21818, align 8
  %21820 = ashr i64 %21819, 35
  %21821 = trunc i64 %21820 to i32
  %21822 = zext i32 %21813 to i64
  %21823 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21810, i64 0, i32 5, i64 %21822, i32 0
  %21824 = load i64, i64* %21823, align 8
  %21825 = ashr i64 %21824, 35
  %21826 = trunc i64 %21825 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21793, i8 zeroext 11, i32 %21821, i32 %21826, i32 4) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %21793) #11
  %21827 = bitcast i64* %89 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21827)
  store i64 1, i64* %89, align 8
  %21828 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %89) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21827)
  %21829 = extractvalue { i64, i32 } %21828, 0
  %21830 = extractvalue { i64, i32 } %21828, 1
  %21831 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21832 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21831, i64 0, i32 1
  %21833 = load i32, i32* %21832, align 4
  %21834 = and i32 %21833, 255
  %21835 = lshr i32 %21833, 8
  %21836 = and i32 %21835, 65535
  %21837 = add nuw nsw i32 %21836, %21834
  %21838 = zext i32 %21837 to i64
  %21839 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21831, i64 0, i32 5, i64 %21838, i32 0
  %21840 = load i64, i64* %21839, align 8
  %21841 = ashr i64 %21840, 35
  %21842 = trunc i64 %21841 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgwENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %21793, i64 %21829, i32 %21830, i32 %21842) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %21793, i32 5, %"class.v8::internal::Label"* nonnull %244, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21790) #11
  call void @_ZN2v88internal9Assembler11emit_movzxwENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21793, i32 0, i32 0, i32 4) #11
  br label %23402

21843:                                            ; preds = %2
  %21844 = bitcast %"class.v8::internal::Label"* %245 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21844) #11
  %21845 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %245, i64 0, i32 0
  store i32 0, i32* %21845, align 4
  %21846 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %245, i64 0, i32 1
  store i32 0, i32* %21846, align 4
  %21847 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %21847, %"class.v8::internal::Label"* nonnull %245) #11
  %21848 = bitcast i64* %90 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21848)
  store i64 1, i64* %90, align 8
  %21849 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %90) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21848)
  %21850 = extractvalue { i64, i32 } %21849, 0
  %21851 = extractvalue { i64, i32 } %21849, 1
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %21847, i32 0, i64 %21850, i32 %21851, i32 4) #11
  %21852 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21853 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21852, i64 0, i32 1
  %21854 = load i32, i32* %21853, align 4
  %21855 = and i32 %21854, 255
  %21856 = lshr i32 %21854, 8
  %21857 = and i32 %21856, 65535
  %21858 = add nuw nsw i32 %21857, %21855
  %21859 = zext i32 %21858 to i64
  %21860 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21852, i64 0, i32 5, i64 %21859, i32 0
  %21861 = load i64, i64* %21860, align 8
  %21862 = ashr i64 %21861, 35
  %21863 = trunc i64 %21862 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21847, i32 %21863, i32 0, i32 4) #11
  %21864 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21865 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21864, i64 0, i32 1
  %21866 = load i32, i32* %21865, align 4
  %21867 = and i32 %21866, 255
  %21868 = lshr i32 %21866, 8
  %21869 = and i32 %21868, 65535
  %21870 = add nuw nsw i32 %21869, %21867
  %21871 = zext i32 %21870 to i64
  %21872 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21864, i64 0, i32 5, i64 %21871, i32 0
  %21873 = load i64, i64* %21872, align 8
  %21874 = ashr i64 %21873, 35
  %21875 = trunc i64 %21874 to i32
  %21876 = zext i32 %21867 to i64
  %21877 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21864, i64 0, i32 5, i64 %21876, i32 0
  %21878 = load i64, i64* %21877, align 8
  %21879 = ashr i64 %21878, 35
  %21880 = trunc i64 %21879 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21847, i8 zeroext 11, i32 %21875, i32 %21880, i32 4) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %21847) #11
  %21881 = bitcast i64* %91 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21881)
  store i64 1, i64* %91, align 8
  %21882 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %91) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21881)
  %21883 = extractvalue { i64, i32 } %21882, 0
  %21884 = extractvalue { i64, i32 } %21882, 1
  %21885 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21886 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21885, i64 0, i32 1
  %21887 = load i32, i32* %21886, align 4
  %21888 = and i32 %21887, 255
  %21889 = lshr i32 %21887, 8
  %21890 = and i32 %21889, 65535
  %21891 = add nuw nsw i32 %21890, %21888
  %21892 = zext i32 %21891 to i64
  %21893 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21885, i64 0, i32 5, i64 %21892, i32 0
  %21894 = load i64, i64* %21893, align 8
  %21895 = ashr i64 %21894, 35
  %21896 = trunc i64 %21895 to i32
  call void @_ZN2v88internal9Assembler12emit_cmpxchgENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %21847, i64 %21883, i32 %21884, i32 %21896, i32 4) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %21847, i32 5, %"class.v8::internal::Label"* nonnull %245, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21844) #11
  br label %23402

21897:                                            ; preds = %2
  %21898 = bitcast %"class.v8::internal::Label"* %246 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21898) #11
  %21899 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %246, i64 0, i32 0
  store i32 0, i32* %21899, align 4
  %21900 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %246, i64 0, i32 1
  store i32 0, i32* %21900, align 4
  %21901 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %21901, %"class.v8::internal::Label"* nonnull %246) #11
  %21902 = bitcast i64* %92 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21902)
  store i64 1, i64* %92, align 8
  %21903 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %92) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21902)
  %21904 = extractvalue { i64, i32 } %21903, 0
  %21905 = extractvalue { i64, i32 } %21903, 1
  call void @_ZN2v88internal9Assembler4movbENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %21901, i32 0, i64 %21904, i32 %21905) #11
  %21906 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21907 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21906, i64 0, i32 1
  %21908 = load i32, i32* %21907, align 4
  %21909 = and i32 %21908, 255
  %21910 = lshr i32 %21908, 8
  %21911 = and i32 %21910, 65535
  %21912 = add nuw nsw i32 %21911, %21909
  %21913 = zext i32 %21912 to i64
  %21914 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21906, i64 0, i32 5, i64 %21913, i32 0
  %21915 = load i64, i64* %21914, align 8
  %21916 = ashr i64 %21915, 35
  %21917 = trunc i64 %21916 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21901, i32 %21917, i32 0, i32 4) #11
  %21918 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21919 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21918, i64 0, i32 1
  %21920 = load i32, i32* %21919, align 4
  %21921 = and i32 %21920, 255
  %21922 = lshr i32 %21920, 8
  %21923 = and i32 %21922, 65535
  %21924 = add nuw nsw i32 %21923, %21921
  %21925 = zext i32 %21924 to i64
  %21926 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21918, i64 0, i32 5, i64 %21925, i32 0
  %21927 = load i64, i64* %21926, align 8
  %21928 = ashr i64 %21927, 35
  %21929 = trunc i64 %21928 to i32
  %21930 = zext i32 %21921 to i64
  %21931 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21918, i64 0, i32 5, i64 %21930, i32 0
  %21932 = load i64, i64* %21931, align 8
  %21933 = ashr i64 %21932, 35
  %21934 = trunc i64 %21933 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21901, i8 zeroext 51, i32 %21929, i32 %21934, i32 4) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %21901) #11
  %21935 = bitcast i64* %93 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21935)
  store i64 1, i64* %93, align 8
  %21936 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %93) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21935)
  %21937 = extractvalue { i64, i32 } %21936, 0
  %21938 = extractvalue { i64, i32 } %21936, 1
  %21939 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21940 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21939, i64 0, i32 1
  %21941 = load i32, i32* %21940, align 4
  %21942 = and i32 %21941, 255
  %21943 = lshr i32 %21941, 8
  %21944 = and i32 %21943, 65535
  %21945 = add nuw nsw i32 %21944, %21942
  %21946 = zext i32 %21945 to i64
  %21947 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21939, i64 0, i32 5, i64 %21946, i32 0
  %21948 = load i64, i64* %21947, align 8
  %21949 = ashr i64 %21948, 35
  %21950 = trunc i64 %21949 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgbENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %21901, i64 %21937, i32 %21938, i32 %21950) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %21901, i32 5, %"class.v8::internal::Label"* nonnull %246, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21898) #11
  call void @_ZN2v88internal9Assembler7movsxblENS0_8RegisterES2_(%"class.v8::internal::Assembler"* %21901, i32 0, i32 0) #11
  br label %23402

21951:                                            ; preds = %2
  %21952 = bitcast %"class.v8::internal::Label"* %247 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21952) #11
  %21953 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %247, i64 0, i32 0
  store i32 0, i32* %21953, align 4
  %21954 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %247, i64 0, i32 1
  store i32 0, i32* %21954, align 4
  %21955 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %21955, %"class.v8::internal::Label"* nonnull %247) #11
  %21956 = bitcast i64* %94 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21956)
  store i64 1, i64* %94, align 8
  %21957 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %94) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21956)
  %21958 = extractvalue { i64, i32 } %21957, 0
  %21959 = extractvalue { i64, i32 } %21957, 1
  call void @_ZN2v88internal9Assembler4movbENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %21955, i32 0, i64 %21958, i32 %21959) #11
  %21960 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21961 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21960, i64 0, i32 1
  %21962 = load i32, i32* %21961, align 4
  %21963 = and i32 %21962, 255
  %21964 = lshr i32 %21962, 8
  %21965 = and i32 %21964, 65535
  %21966 = add nuw nsw i32 %21965, %21963
  %21967 = zext i32 %21966 to i64
  %21968 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21960, i64 0, i32 5, i64 %21967, i32 0
  %21969 = load i64, i64* %21968, align 8
  %21970 = ashr i64 %21969, 35
  %21971 = trunc i64 %21970 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21955, i32 %21971, i32 0, i32 4) #11
  %21972 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21973 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21972, i64 0, i32 1
  %21974 = load i32, i32* %21973, align 4
  %21975 = and i32 %21974, 255
  %21976 = lshr i32 %21974, 8
  %21977 = and i32 %21976, 65535
  %21978 = add nuw nsw i32 %21977, %21975
  %21979 = zext i32 %21978 to i64
  %21980 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21972, i64 0, i32 5, i64 %21979, i32 0
  %21981 = load i64, i64* %21980, align 8
  %21982 = ashr i64 %21981, 35
  %21983 = trunc i64 %21982 to i32
  %21984 = zext i32 %21975 to i64
  %21985 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21972, i64 0, i32 5, i64 %21984, i32 0
  %21986 = load i64, i64* %21985, align 8
  %21987 = ashr i64 %21986, 35
  %21988 = trunc i64 %21987 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21955, i8 zeroext 51, i32 %21983, i32 %21988, i32 4) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %21955) #11
  %21989 = bitcast i64* %95 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21989)
  store i64 1, i64* %95, align 8
  %21990 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %95) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21989)
  %21991 = extractvalue { i64, i32 } %21990, 0
  %21992 = extractvalue { i64, i32 } %21990, 1
  %21993 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %21994 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21993, i64 0, i32 1
  %21995 = load i32, i32* %21994, align 4
  %21996 = and i32 %21995, 255
  %21997 = lshr i32 %21995, 8
  %21998 = and i32 %21997, 65535
  %21999 = add nuw nsw i32 %21998, %21996
  %22000 = zext i32 %21999 to i64
  %22001 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21993, i64 0, i32 5, i64 %22000, i32 0
  %22002 = load i64, i64* %22001, align 8
  %22003 = ashr i64 %22002, 35
  %22004 = trunc i64 %22003 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgbENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %21955, i64 %21991, i32 %21992, i32 %22004) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %21955, i32 5, %"class.v8::internal::Label"* nonnull %247, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21952) #11
  call void @_ZN2v88internal9Assembler11emit_movzxbENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %21955, i32 0, i32 0, i32 4) #11
  br label %23402

22005:                                            ; preds = %2
  %22006 = bitcast %"class.v8::internal::Label"* %248 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22006) #11
  %22007 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %248, i64 0, i32 0
  store i32 0, i32* %22007, align 4
  %22008 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %248, i64 0, i32 1
  store i32 0, i32* %22008, align 4
  %22009 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %22009, %"class.v8::internal::Label"* nonnull %248) #11
  %22010 = bitcast i64* %96 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22010)
  store i64 1, i64* %96, align 8
  %22011 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %96) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22010)
  %22012 = extractvalue { i64, i32 } %22011, 0
  %22013 = extractvalue { i64, i32 } %22011, 1
  call void @_ZN2v88internal9Assembler4movwENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %22009, i32 0, i64 %22012, i32 %22013) #11
  %22014 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22015 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22014, i64 0, i32 1
  %22016 = load i32, i32* %22015, align 4
  %22017 = and i32 %22016, 255
  %22018 = lshr i32 %22016, 8
  %22019 = and i32 %22018, 65535
  %22020 = add nuw nsw i32 %22019, %22017
  %22021 = zext i32 %22020 to i64
  %22022 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22014, i64 0, i32 5, i64 %22021, i32 0
  %22023 = load i64, i64* %22022, align 8
  %22024 = ashr i64 %22023, 35
  %22025 = trunc i64 %22024 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22009, i32 %22025, i32 0, i32 4) #11
  %22026 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22027 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22026, i64 0, i32 1
  %22028 = load i32, i32* %22027, align 4
  %22029 = and i32 %22028, 255
  %22030 = lshr i32 %22028, 8
  %22031 = and i32 %22030, 65535
  %22032 = add nuw nsw i32 %22031, %22029
  %22033 = zext i32 %22032 to i64
  %22034 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22026, i64 0, i32 5, i64 %22033, i32 0
  %22035 = load i64, i64* %22034, align 8
  %22036 = ashr i64 %22035, 35
  %22037 = trunc i64 %22036 to i32
  %22038 = zext i32 %22029 to i64
  %22039 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22026, i64 0, i32 5, i64 %22038, i32 0
  %22040 = load i64, i64* %22039, align 8
  %22041 = ashr i64 %22040, 35
  %22042 = trunc i64 %22041 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22009, i8 zeroext 51, i32 %22037, i32 %22042, i32 4) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %22009) #11
  %22043 = bitcast i64* %97 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22043)
  store i64 1, i64* %97, align 8
  %22044 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %97) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22043)
  %22045 = extractvalue { i64, i32 } %22044, 0
  %22046 = extractvalue { i64, i32 } %22044, 1
  %22047 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22048 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22047, i64 0, i32 1
  %22049 = load i32, i32* %22048, align 4
  %22050 = and i32 %22049, 255
  %22051 = lshr i32 %22049, 8
  %22052 = and i32 %22051, 65535
  %22053 = add nuw nsw i32 %22052, %22050
  %22054 = zext i32 %22053 to i64
  %22055 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22047, i64 0, i32 5, i64 %22054, i32 0
  %22056 = load i64, i64* %22055, align 8
  %22057 = ashr i64 %22056, 35
  %22058 = trunc i64 %22057 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgwENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %22009, i64 %22045, i32 %22046, i32 %22058) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %22009, i32 5, %"class.v8::internal::Label"* nonnull %248, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22006) #11
  call void @_ZN2v88internal9Assembler7movsxwlENS0_8RegisterES2_(%"class.v8::internal::Assembler"* %22009, i32 0, i32 0) #11
  br label %23402

22059:                                            ; preds = %2
  %22060 = bitcast %"class.v8::internal::Label"* %249 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22060) #11
  %22061 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %249, i64 0, i32 0
  store i32 0, i32* %22061, align 4
  %22062 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %249, i64 0, i32 1
  store i32 0, i32* %22062, align 4
  %22063 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %22063, %"class.v8::internal::Label"* nonnull %249) #11
  %22064 = bitcast i64* %98 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22064)
  store i64 1, i64* %98, align 8
  %22065 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %98) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22064)
  %22066 = extractvalue { i64, i32 } %22065, 0
  %22067 = extractvalue { i64, i32 } %22065, 1
  call void @_ZN2v88internal9Assembler4movwENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %22063, i32 0, i64 %22066, i32 %22067) #11
  %22068 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22069 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22068, i64 0, i32 1
  %22070 = load i32, i32* %22069, align 4
  %22071 = and i32 %22070, 255
  %22072 = lshr i32 %22070, 8
  %22073 = and i32 %22072, 65535
  %22074 = add nuw nsw i32 %22073, %22071
  %22075 = zext i32 %22074 to i64
  %22076 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22068, i64 0, i32 5, i64 %22075, i32 0
  %22077 = load i64, i64* %22076, align 8
  %22078 = ashr i64 %22077, 35
  %22079 = trunc i64 %22078 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22063, i32 %22079, i32 0, i32 4) #11
  %22080 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22081 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22080, i64 0, i32 1
  %22082 = load i32, i32* %22081, align 4
  %22083 = and i32 %22082, 255
  %22084 = lshr i32 %22082, 8
  %22085 = and i32 %22084, 65535
  %22086 = add nuw nsw i32 %22085, %22083
  %22087 = zext i32 %22086 to i64
  %22088 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22080, i64 0, i32 5, i64 %22087, i32 0
  %22089 = load i64, i64* %22088, align 8
  %22090 = ashr i64 %22089, 35
  %22091 = trunc i64 %22090 to i32
  %22092 = zext i32 %22083 to i64
  %22093 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22080, i64 0, i32 5, i64 %22092, i32 0
  %22094 = load i64, i64* %22093, align 8
  %22095 = ashr i64 %22094, 35
  %22096 = trunc i64 %22095 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22063, i8 zeroext 51, i32 %22091, i32 %22096, i32 4) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %22063) #11
  %22097 = bitcast i64* %99 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22097)
  store i64 1, i64* %99, align 8
  %22098 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %99) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22097)
  %22099 = extractvalue { i64, i32 } %22098, 0
  %22100 = extractvalue { i64, i32 } %22098, 1
  %22101 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22102 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22101, i64 0, i32 1
  %22103 = load i32, i32* %22102, align 4
  %22104 = and i32 %22103, 255
  %22105 = lshr i32 %22103, 8
  %22106 = and i32 %22105, 65535
  %22107 = add nuw nsw i32 %22106, %22104
  %22108 = zext i32 %22107 to i64
  %22109 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22101, i64 0, i32 5, i64 %22108, i32 0
  %22110 = load i64, i64* %22109, align 8
  %22111 = ashr i64 %22110, 35
  %22112 = trunc i64 %22111 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgwENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %22063, i64 %22099, i32 %22100, i32 %22112) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %22063, i32 5, %"class.v8::internal::Label"* nonnull %249, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22060) #11
  call void @_ZN2v88internal9Assembler11emit_movzxwENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22063, i32 0, i32 0, i32 4) #11
  br label %23402

22113:                                            ; preds = %2
  %22114 = bitcast %"class.v8::internal::Label"* %250 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22114) #11
  %22115 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %250, i64 0, i32 0
  store i32 0, i32* %22115, align 4
  %22116 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %250, i64 0, i32 1
  store i32 0, i32* %22116, align 4
  %22117 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %22117, %"class.v8::internal::Label"* nonnull %250) #11
  %22118 = bitcast i64* %100 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22118)
  store i64 1, i64* %100, align 8
  %22119 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %100) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22118)
  %22120 = extractvalue { i64, i32 } %22119, 0
  %22121 = extractvalue { i64, i32 } %22119, 1
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %22117, i32 0, i64 %22120, i32 %22121, i32 4) #11
  %22122 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22123 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22122, i64 0, i32 1
  %22124 = load i32, i32* %22123, align 4
  %22125 = and i32 %22124, 255
  %22126 = lshr i32 %22124, 8
  %22127 = and i32 %22126, 65535
  %22128 = add nuw nsw i32 %22127, %22125
  %22129 = zext i32 %22128 to i64
  %22130 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22122, i64 0, i32 5, i64 %22129, i32 0
  %22131 = load i64, i64* %22130, align 8
  %22132 = ashr i64 %22131, 35
  %22133 = trunc i64 %22132 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22117, i32 %22133, i32 0, i32 4) #11
  %22134 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22135 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22134, i64 0, i32 1
  %22136 = load i32, i32* %22135, align 4
  %22137 = and i32 %22136, 255
  %22138 = lshr i32 %22136, 8
  %22139 = and i32 %22138, 65535
  %22140 = add nuw nsw i32 %22139, %22137
  %22141 = zext i32 %22140 to i64
  %22142 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22134, i64 0, i32 5, i64 %22141, i32 0
  %22143 = load i64, i64* %22142, align 8
  %22144 = ashr i64 %22143, 35
  %22145 = trunc i64 %22144 to i32
  %22146 = zext i32 %22137 to i64
  %22147 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22134, i64 0, i32 5, i64 %22146, i32 0
  %22148 = load i64, i64* %22147, align 8
  %22149 = ashr i64 %22148, 35
  %22150 = trunc i64 %22149 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22117, i8 zeroext 51, i32 %22145, i32 %22150, i32 4) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %22117) #11
  %22151 = bitcast i64* %101 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22151)
  store i64 1, i64* %101, align 8
  %22152 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %101) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22151)
  %22153 = extractvalue { i64, i32 } %22152, 0
  %22154 = extractvalue { i64, i32 } %22152, 1
  %22155 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22156 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22155, i64 0, i32 1
  %22157 = load i32, i32* %22156, align 4
  %22158 = and i32 %22157, 255
  %22159 = lshr i32 %22157, 8
  %22160 = and i32 %22159, 65535
  %22161 = add nuw nsw i32 %22160, %22158
  %22162 = zext i32 %22161 to i64
  %22163 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22155, i64 0, i32 5, i64 %22162, i32 0
  %22164 = load i64, i64* %22163, align 8
  %22165 = ashr i64 %22164, 35
  %22166 = trunc i64 %22165 to i32
  call void @_ZN2v88internal9Assembler12emit_cmpxchgENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %22117, i64 %22153, i32 %22154, i32 %22166, i32 4) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %22117, i32 5, %"class.v8::internal::Label"* nonnull %250, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22114) #11
  br label %23402

22167:                                            ; preds = %2
  %22168 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %22169 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %22170 = load i32, i32* %22169, align 4
  %22171 = and i32 %22170, 255
  %22172 = zext i32 %22171 to i64
  %22173 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %22172, i32 0
  %22174 = load i64, i64* %22173, align 8
  %22175 = ashr i64 %22174, 35
  %22176 = trunc i64 %22175 to i32
  %22177 = bitcast i64* %102 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22177)
  store i64 1, i64* %102, align 8
  %22178 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %102) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22177)
  %22179 = extractvalue { i64, i32 } %22178, 0
  %22180 = extractvalue { i64, i32 } %22178, 1
  call void @_ZN2v88internal9Assembler5xchgbENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %22168, i32 %22176, i64 %22179, i32 %22180) #11
  %22181 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22182 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22181, i64 0, i32 1
  %22183 = load i32, i32* %22182, align 4
  %22184 = and i32 %22183, 255
  %22185 = zext i32 %22184 to i64
  %22186 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22181, i64 0, i32 5, i64 %22185, i32 0
  %22187 = load i64, i64* %22186, align 8
  %22188 = ashr i64 %22187, 35
  %22189 = trunc i64 %22188 to i32
  call void @_ZN2v88internal9Assembler11emit_movzxbENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22168, i32 %22189, i32 %22189, i32 8) #11
  br label %23402

22190:                                            ; preds = %2
  %22191 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %22192 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %22193 = load i32, i32* %22192, align 4
  %22194 = and i32 %22193, 255
  %22195 = zext i32 %22194 to i64
  %22196 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %22195, i32 0
  %22197 = load i64, i64* %22196, align 8
  %22198 = ashr i64 %22197, 35
  %22199 = trunc i64 %22198 to i32
  %22200 = bitcast i64* %103 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22200)
  store i64 1, i64* %103, align 8
  %22201 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %103) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22200)
  %22202 = extractvalue { i64, i32 } %22201, 0
  %22203 = extractvalue { i64, i32 } %22201, 1
  call void @_ZN2v88internal9Assembler5xchgwENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %22191, i32 %22199, i64 %22202, i32 %22203) #11
  %22204 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22205 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22204, i64 0, i32 1
  %22206 = load i32, i32* %22205, align 4
  %22207 = and i32 %22206, 255
  %22208 = zext i32 %22207 to i64
  %22209 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22204, i64 0, i32 5, i64 %22208, i32 0
  %22210 = load i64, i64* %22209, align 8
  %22211 = ashr i64 %22210, 35
  %22212 = trunc i64 %22211 to i32
  call void @_ZN2v88internal9Assembler11emit_movzxwENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22191, i32 %22212, i32 %22212, i32 8) #11
  br label %23402

22213:                                            ; preds = %2
  %22214 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %22215 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %22216 = load i32, i32* %22215, align 4
  %22217 = and i32 %22216, 255
  %22218 = zext i32 %22217 to i64
  %22219 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %22218, i32 0
  %22220 = load i64, i64* %22219, align 8
  %22221 = ashr i64 %22220, 35
  %22222 = trunc i64 %22221 to i32
  %22223 = bitcast i64* %104 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22223)
  store i64 1, i64* %104, align 8
  %22224 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %104) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22223)
  %22225 = extractvalue { i64, i32 } %22224, 0
  %22226 = extractvalue { i64, i32 } %22224, 1
  call void @_ZN2v88internal9Assembler9emit_xchgENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %22214, i32 %22222, i64 %22225, i32 %22226, i32 4) #11
  br label %23402

22227:                                            ; preds = %2
  %22228 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %22229 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %22230 = load i32, i32* %22229, align 4
  %22231 = and i32 %22230, 255
  %22232 = zext i32 %22231 to i64
  %22233 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %22232, i32 0
  %22234 = load i64, i64* %22233, align 8
  %22235 = ashr i64 %22234, 35
  %22236 = trunc i64 %22235 to i32
  %22237 = bitcast i64* %106 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22237)
  store i64 1, i64* %106, align 8
  %22238 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %106) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22237)
  %22239 = extractvalue { i64, i32 } %22238, 0
  %22240 = extractvalue { i64, i32 } %22238, 1
  call void @_ZN2v88internal9Assembler9emit_xchgENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %22228, i32 %22236, i64 %22239, i32 %22240, i32 8) #11
  br label %23402

22241:                                            ; preds = %2
  %22242 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %22242) #11
  %22243 = bitcast i64* %107 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22243)
  store i64 2, i64* %107, align 8
  %22244 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %107) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22243)
  %22245 = extractvalue { i64, i32 } %22244, 0
  %22246 = extractvalue { i64, i32 } %22244, 1
  %22247 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22248 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22247, i64 0, i32 1
  %22249 = load i32, i32* %22248, align 4
  %22250 = and i32 %22249, 255
  %22251 = add nuw nsw i32 %22250, 1
  %22252 = zext i32 %22251 to i64
  %22253 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22247, i64 0, i32 5, i64 %22252, i32 0
  %22254 = load i64, i64* %22253, align 8
  %22255 = ashr i64 %22254, 35
  %22256 = trunc i64 %22255 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgbENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %22242, i64 %22245, i32 %22246, i32 %22256) #11
  call void @_ZN2v88internal9Assembler11emit_movzxbENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22242, i32 0, i32 0, i32 8) #11
  br label %23402

22257:                                            ; preds = %2
  %22258 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %22258) #11
  %22259 = bitcast i64* %108 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22259)
  store i64 2, i64* %108, align 8
  %22260 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %108) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22259)
  %22261 = extractvalue { i64, i32 } %22260, 0
  %22262 = extractvalue { i64, i32 } %22260, 1
  %22263 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22264 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22263, i64 0, i32 1
  %22265 = load i32, i32* %22264, align 4
  %22266 = and i32 %22265, 255
  %22267 = add nuw nsw i32 %22266, 1
  %22268 = zext i32 %22267 to i64
  %22269 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22263, i64 0, i32 5, i64 %22268, i32 0
  %22270 = load i64, i64* %22269, align 8
  %22271 = ashr i64 %22270, 35
  %22272 = trunc i64 %22271 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgwENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %22258, i64 %22261, i32 %22262, i32 %22272) #11
  call void @_ZN2v88internal9Assembler11emit_movzxwENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22258, i32 0, i32 0, i32 8) #11
  br label %23402

22273:                                            ; preds = %2
  %22274 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %22274) #11
  %22275 = bitcast i64* %109 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22275)
  store i64 2, i64* %109, align 8
  %22276 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %109) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22275)
  %22277 = extractvalue { i64, i32 } %22276, 0
  %22278 = extractvalue { i64, i32 } %22276, 1
  %22279 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22280 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22279, i64 0, i32 1
  %22281 = load i32, i32* %22280, align 4
  %22282 = and i32 %22281, 255
  %22283 = add nuw nsw i32 %22282, 1
  %22284 = zext i32 %22283 to i64
  %22285 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22279, i64 0, i32 5, i64 %22284, i32 0
  %22286 = load i64, i64* %22285, align 8
  %22287 = ashr i64 %22286, 35
  %22288 = trunc i64 %22287 to i32
  call void @_ZN2v88internal9Assembler12emit_cmpxchgENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %22274, i64 %22277, i32 %22278, i32 %22288, i32 4) #11
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22274, i32 0, i32 0, i32 4) #11
  br label %23402

22289:                                            ; preds = %2
  %22290 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %22290) #11
  %22291 = bitcast i64* %110 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22291)
  store i64 2, i64* %110, align 8
  %22292 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %110) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22291)
  %22293 = extractvalue { i64, i32 } %22292, 0
  %22294 = extractvalue { i64, i32 } %22292, 1
  %22295 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22296 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22295, i64 0, i32 1
  %22297 = load i32, i32* %22296, align 4
  %22298 = and i32 %22297, 255
  %22299 = add nuw nsw i32 %22298, 1
  %22300 = zext i32 %22299 to i64
  %22301 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22295, i64 0, i32 5, i64 %22300, i32 0
  %22302 = load i64, i64* %22301, align 8
  %22303 = ashr i64 %22302, 35
  %22304 = trunc i64 %22303 to i32
  call void @_ZN2v88internal9Assembler12emit_cmpxchgENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %22290, i64 %22293, i32 %22294, i32 %22304, i32 8) #11
  br label %23402

22305:                                            ; preds = %2
  %22306 = bitcast %"class.v8::internal::Label"* %251 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22306) #11
  %22307 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %251, i64 0, i32 0
  store i32 0, i32* %22307, align 4
  %22308 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %251, i64 0, i32 1
  store i32 0, i32* %22308, align 4
  %22309 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %22309, %"class.v8::internal::Label"* nonnull %251) #11
  %22310 = bitcast i64* %111 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22310)
  store i64 1, i64* %111, align 8
  %22311 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %111) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22310)
  %22312 = extractvalue { i64, i32 } %22311, 0
  %22313 = extractvalue { i64, i32 } %22311, 1
  call void @_ZN2v88internal9Assembler4movbENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %22309, i32 0, i64 %22312, i32 %22313) #11
  %22314 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22315 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22314, i64 0, i32 1
  %22316 = load i32, i32* %22315, align 4
  %22317 = and i32 %22316, 255
  %22318 = lshr i32 %22316, 8
  %22319 = and i32 %22318, 65535
  %22320 = add nuw nsw i32 %22319, %22317
  %22321 = zext i32 %22320 to i64
  %22322 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22314, i64 0, i32 5, i64 %22321, i32 0
  %22323 = load i64, i64* %22322, align 8
  %22324 = ashr i64 %22323, 35
  %22325 = trunc i64 %22324 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22309, i32 %22325, i32 0, i32 8) #11
  %22326 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22327 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22326, i64 0, i32 1
  %22328 = load i32, i32* %22327, align 4
  %22329 = and i32 %22328, 255
  %22330 = lshr i32 %22328, 8
  %22331 = and i32 %22330, 65535
  %22332 = add nuw nsw i32 %22331, %22329
  %22333 = zext i32 %22332 to i64
  %22334 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22326, i64 0, i32 5, i64 %22333, i32 0
  %22335 = load i64, i64* %22334, align 8
  %22336 = ashr i64 %22335, 35
  %22337 = trunc i64 %22336 to i32
  %22338 = zext i32 %22329 to i64
  %22339 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22326, i64 0, i32 5, i64 %22338, i32 0
  %22340 = load i64, i64* %22339, align 8
  %22341 = ashr i64 %22340, 35
  %22342 = trunc i64 %22341 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22309, i8 zeroext 3, i32 %22337, i32 %22342, i32 8) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %22309) #11
  %22343 = bitcast i64* %112 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22343)
  store i64 1, i64* %112, align 8
  %22344 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %112) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22343)
  %22345 = extractvalue { i64, i32 } %22344, 0
  %22346 = extractvalue { i64, i32 } %22344, 1
  %22347 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22348 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22347, i64 0, i32 1
  %22349 = load i32, i32* %22348, align 4
  %22350 = and i32 %22349, 255
  %22351 = lshr i32 %22349, 8
  %22352 = and i32 %22351, 65535
  %22353 = add nuw nsw i32 %22352, %22350
  %22354 = zext i32 %22353 to i64
  %22355 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22347, i64 0, i32 5, i64 %22354, i32 0
  %22356 = load i64, i64* %22355, align 8
  %22357 = ashr i64 %22356, 35
  %22358 = trunc i64 %22357 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgbENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %22309, i64 %22345, i32 %22346, i32 %22358) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %22309, i32 5, %"class.v8::internal::Label"* nonnull %251, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22306) #11
  call void @_ZN2v88internal9Assembler11emit_movzxbENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22309, i32 0, i32 0, i32 8) #11
  br label %23402

22359:                                            ; preds = %2
  %22360 = bitcast %"class.v8::internal::Label"* %252 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22360) #11
  %22361 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %252, i64 0, i32 0
  store i32 0, i32* %22361, align 4
  %22362 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %252, i64 0, i32 1
  store i32 0, i32* %22362, align 4
  %22363 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %22363, %"class.v8::internal::Label"* nonnull %252) #11
  %22364 = bitcast i64* %113 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22364)
  store i64 1, i64* %113, align 8
  %22365 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %113) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22364)
  %22366 = extractvalue { i64, i32 } %22365, 0
  %22367 = extractvalue { i64, i32 } %22365, 1
  call void @_ZN2v88internal9Assembler4movwENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %22363, i32 0, i64 %22366, i32 %22367) #11
  %22368 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22369 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22368, i64 0, i32 1
  %22370 = load i32, i32* %22369, align 4
  %22371 = and i32 %22370, 255
  %22372 = lshr i32 %22370, 8
  %22373 = and i32 %22372, 65535
  %22374 = add nuw nsw i32 %22373, %22371
  %22375 = zext i32 %22374 to i64
  %22376 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22368, i64 0, i32 5, i64 %22375, i32 0
  %22377 = load i64, i64* %22376, align 8
  %22378 = ashr i64 %22377, 35
  %22379 = trunc i64 %22378 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22363, i32 %22379, i32 0, i32 8) #11
  %22380 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22381 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22380, i64 0, i32 1
  %22382 = load i32, i32* %22381, align 4
  %22383 = and i32 %22382, 255
  %22384 = lshr i32 %22382, 8
  %22385 = and i32 %22384, 65535
  %22386 = add nuw nsw i32 %22385, %22383
  %22387 = zext i32 %22386 to i64
  %22388 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22380, i64 0, i32 5, i64 %22387, i32 0
  %22389 = load i64, i64* %22388, align 8
  %22390 = ashr i64 %22389, 35
  %22391 = trunc i64 %22390 to i32
  %22392 = zext i32 %22383 to i64
  %22393 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22380, i64 0, i32 5, i64 %22392, i32 0
  %22394 = load i64, i64* %22393, align 8
  %22395 = ashr i64 %22394, 35
  %22396 = trunc i64 %22395 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22363, i8 zeroext 3, i32 %22391, i32 %22396, i32 8) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %22363) #11
  %22397 = bitcast i64* %114 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22397)
  store i64 1, i64* %114, align 8
  %22398 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %114) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22397)
  %22399 = extractvalue { i64, i32 } %22398, 0
  %22400 = extractvalue { i64, i32 } %22398, 1
  %22401 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22402 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22401, i64 0, i32 1
  %22403 = load i32, i32* %22402, align 4
  %22404 = and i32 %22403, 255
  %22405 = lshr i32 %22403, 8
  %22406 = and i32 %22405, 65535
  %22407 = add nuw nsw i32 %22406, %22404
  %22408 = zext i32 %22407 to i64
  %22409 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22401, i64 0, i32 5, i64 %22408, i32 0
  %22410 = load i64, i64* %22409, align 8
  %22411 = ashr i64 %22410, 35
  %22412 = trunc i64 %22411 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgwENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %22363, i64 %22399, i32 %22400, i32 %22412) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %22363, i32 5, %"class.v8::internal::Label"* nonnull %252, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22360) #11
  call void @_ZN2v88internal9Assembler11emit_movzxwENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22363, i32 0, i32 0, i32 8) #11
  br label %23402

22413:                                            ; preds = %2
  %22414 = bitcast %"class.v8::internal::Label"* %253 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22414) #11
  %22415 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %253, i64 0, i32 0
  store i32 0, i32* %22415, align 4
  %22416 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %253, i64 0, i32 1
  store i32 0, i32* %22416, align 4
  %22417 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %22417, %"class.v8::internal::Label"* nonnull %253) #11
  %22418 = bitcast i64* %115 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22418)
  store i64 1, i64* %115, align 8
  %22419 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %115) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22418)
  %22420 = extractvalue { i64, i32 } %22419, 0
  %22421 = extractvalue { i64, i32 } %22419, 1
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %22417, i32 0, i64 %22420, i32 %22421, i32 4) #11
  %22422 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22423 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22422, i64 0, i32 1
  %22424 = load i32, i32* %22423, align 4
  %22425 = and i32 %22424, 255
  %22426 = lshr i32 %22424, 8
  %22427 = and i32 %22426, 65535
  %22428 = add nuw nsw i32 %22427, %22425
  %22429 = zext i32 %22428 to i64
  %22430 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22422, i64 0, i32 5, i64 %22429, i32 0
  %22431 = load i64, i64* %22430, align 8
  %22432 = ashr i64 %22431, 35
  %22433 = trunc i64 %22432 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22417, i32 %22433, i32 0, i32 8) #11
  %22434 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22435 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22434, i64 0, i32 1
  %22436 = load i32, i32* %22435, align 4
  %22437 = and i32 %22436, 255
  %22438 = lshr i32 %22436, 8
  %22439 = and i32 %22438, 65535
  %22440 = add nuw nsw i32 %22439, %22437
  %22441 = zext i32 %22440 to i64
  %22442 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22434, i64 0, i32 5, i64 %22441, i32 0
  %22443 = load i64, i64* %22442, align 8
  %22444 = ashr i64 %22443, 35
  %22445 = trunc i64 %22444 to i32
  %22446 = zext i32 %22437 to i64
  %22447 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22434, i64 0, i32 5, i64 %22446, i32 0
  %22448 = load i64, i64* %22447, align 8
  %22449 = ashr i64 %22448, 35
  %22450 = trunc i64 %22449 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22417, i8 zeroext 3, i32 %22445, i32 %22450, i32 8) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %22417) #11
  %22451 = bitcast i64* %116 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22451)
  store i64 1, i64* %116, align 8
  %22452 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %116) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22451)
  %22453 = extractvalue { i64, i32 } %22452, 0
  %22454 = extractvalue { i64, i32 } %22452, 1
  %22455 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22456 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22455, i64 0, i32 1
  %22457 = load i32, i32* %22456, align 4
  %22458 = and i32 %22457, 255
  %22459 = lshr i32 %22457, 8
  %22460 = and i32 %22459, 65535
  %22461 = add nuw nsw i32 %22460, %22458
  %22462 = zext i32 %22461 to i64
  %22463 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22455, i64 0, i32 5, i64 %22462, i32 0
  %22464 = load i64, i64* %22463, align 8
  %22465 = ashr i64 %22464, 35
  %22466 = trunc i64 %22465 to i32
  call void @_ZN2v88internal9Assembler12emit_cmpxchgENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %22417, i64 %22453, i32 %22454, i32 %22466, i32 4) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %22417, i32 5, %"class.v8::internal::Label"* nonnull %253, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22414) #11
  br label %23402

22467:                                            ; preds = %2
  %22468 = bitcast %"class.v8::internal::Label"* %254 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22468) #11
  %22469 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %254, i64 0, i32 0
  store i32 0, i32* %22469, align 4
  %22470 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %254, i64 0, i32 1
  store i32 0, i32* %22470, align 4
  %22471 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %22471, %"class.v8::internal::Label"* nonnull %254) #11
  %22472 = bitcast i64* %117 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22472)
  store i64 1, i64* %117, align 8
  %22473 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %117) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22472)
  %22474 = extractvalue { i64, i32 } %22473, 0
  %22475 = extractvalue { i64, i32 } %22473, 1
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %22471, i32 0, i64 %22474, i32 %22475, i32 8) #11
  %22476 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22477 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22476, i64 0, i32 1
  %22478 = load i32, i32* %22477, align 4
  %22479 = and i32 %22478, 255
  %22480 = lshr i32 %22478, 8
  %22481 = and i32 %22480, 65535
  %22482 = add nuw nsw i32 %22481, %22479
  %22483 = zext i32 %22482 to i64
  %22484 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22476, i64 0, i32 5, i64 %22483, i32 0
  %22485 = load i64, i64* %22484, align 8
  %22486 = ashr i64 %22485, 35
  %22487 = trunc i64 %22486 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22471, i32 %22487, i32 0, i32 8) #11
  %22488 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22489 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22488, i64 0, i32 1
  %22490 = load i32, i32* %22489, align 4
  %22491 = and i32 %22490, 255
  %22492 = lshr i32 %22490, 8
  %22493 = and i32 %22492, 65535
  %22494 = add nuw nsw i32 %22493, %22491
  %22495 = zext i32 %22494 to i64
  %22496 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22488, i64 0, i32 5, i64 %22495, i32 0
  %22497 = load i64, i64* %22496, align 8
  %22498 = ashr i64 %22497, 35
  %22499 = trunc i64 %22498 to i32
  %22500 = zext i32 %22491 to i64
  %22501 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22488, i64 0, i32 5, i64 %22500, i32 0
  %22502 = load i64, i64* %22501, align 8
  %22503 = ashr i64 %22502, 35
  %22504 = trunc i64 %22503 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22471, i8 zeroext 3, i32 %22499, i32 %22504, i32 8) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %22471) #11
  %22505 = bitcast i64* %118 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22505)
  store i64 1, i64* %118, align 8
  %22506 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %118) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22505)
  %22507 = extractvalue { i64, i32 } %22506, 0
  %22508 = extractvalue { i64, i32 } %22506, 1
  %22509 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22510 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22509, i64 0, i32 1
  %22511 = load i32, i32* %22510, align 4
  %22512 = and i32 %22511, 255
  %22513 = lshr i32 %22511, 8
  %22514 = and i32 %22513, 65535
  %22515 = add nuw nsw i32 %22514, %22512
  %22516 = zext i32 %22515 to i64
  %22517 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22509, i64 0, i32 5, i64 %22516, i32 0
  %22518 = load i64, i64* %22517, align 8
  %22519 = ashr i64 %22518, 35
  %22520 = trunc i64 %22519 to i32
  call void @_ZN2v88internal9Assembler12emit_cmpxchgENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %22471, i64 %22507, i32 %22508, i32 %22520, i32 8) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %22471, i32 5, %"class.v8::internal::Label"* nonnull %254, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22468) #11
  br label %23402

22521:                                            ; preds = %2
  %22522 = bitcast %"class.v8::internal::Label"* %255 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22522) #11
  %22523 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %255, i64 0, i32 0
  store i32 0, i32* %22523, align 4
  %22524 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %255, i64 0, i32 1
  store i32 0, i32* %22524, align 4
  %22525 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %22525, %"class.v8::internal::Label"* nonnull %255) #11
  %22526 = bitcast i64* %119 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22526)
  store i64 1, i64* %119, align 8
  %22527 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %119) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22526)
  %22528 = extractvalue { i64, i32 } %22527, 0
  %22529 = extractvalue { i64, i32 } %22527, 1
  call void @_ZN2v88internal9Assembler4movbENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %22525, i32 0, i64 %22528, i32 %22529) #11
  %22530 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22531 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22530, i64 0, i32 1
  %22532 = load i32, i32* %22531, align 4
  %22533 = and i32 %22532, 255
  %22534 = lshr i32 %22532, 8
  %22535 = and i32 %22534, 65535
  %22536 = add nuw nsw i32 %22535, %22533
  %22537 = zext i32 %22536 to i64
  %22538 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22530, i64 0, i32 5, i64 %22537, i32 0
  %22539 = load i64, i64* %22538, align 8
  %22540 = ashr i64 %22539, 35
  %22541 = trunc i64 %22540 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22525, i32 %22541, i32 0, i32 8) #11
  %22542 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22543 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22542, i64 0, i32 1
  %22544 = load i32, i32* %22543, align 4
  %22545 = and i32 %22544, 255
  %22546 = lshr i32 %22544, 8
  %22547 = and i32 %22546, 65535
  %22548 = add nuw nsw i32 %22547, %22545
  %22549 = zext i32 %22548 to i64
  %22550 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22542, i64 0, i32 5, i64 %22549, i32 0
  %22551 = load i64, i64* %22550, align 8
  %22552 = ashr i64 %22551, 35
  %22553 = trunc i64 %22552 to i32
  %22554 = zext i32 %22545 to i64
  %22555 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22542, i64 0, i32 5, i64 %22554, i32 0
  %22556 = load i64, i64* %22555, align 8
  %22557 = ashr i64 %22556, 35
  %22558 = trunc i64 %22557 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22525, i8 zeroext 43, i32 %22553, i32 %22558, i32 8) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %22525) #11
  %22559 = bitcast i64* %120 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22559)
  store i64 1, i64* %120, align 8
  %22560 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %120) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22559)
  %22561 = extractvalue { i64, i32 } %22560, 0
  %22562 = extractvalue { i64, i32 } %22560, 1
  %22563 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22564 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22563, i64 0, i32 1
  %22565 = load i32, i32* %22564, align 4
  %22566 = and i32 %22565, 255
  %22567 = lshr i32 %22565, 8
  %22568 = and i32 %22567, 65535
  %22569 = add nuw nsw i32 %22568, %22566
  %22570 = zext i32 %22569 to i64
  %22571 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22563, i64 0, i32 5, i64 %22570, i32 0
  %22572 = load i64, i64* %22571, align 8
  %22573 = ashr i64 %22572, 35
  %22574 = trunc i64 %22573 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgbENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %22525, i64 %22561, i32 %22562, i32 %22574) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %22525, i32 5, %"class.v8::internal::Label"* nonnull %255, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22522) #11
  call void @_ZN2v88internal9Assembler11emit_movzxbENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22525, i32 0, i32 0, i32 8) #11
  br label %23402

22575:                                            ; preds = %2
  %22576 = bitcast %"class.v8::internal::Label"* %256 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22576) #11
  %22577 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %256, i64 0, i32 0
  store i32 0, i32* %22577, align 4
  %22578 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %256, i64 0, i32 1
  store i32 0, i32* %22578, align 4
  %22579 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %22579, %"class.v8::internal::Label"* nonnull %256) #11
  %22580 = bitcast i64* %121 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22580)
  store i64 1, i64* %121, align 8
  %22581 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %121) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22580)
  %22582 = extractvalue { i64, i32 } %22581, 0
  %22583 = extractvalue { i64, i32 } %22581, 1
  call void @_ZN2v88internal9Assembler4movwENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %22579, i32 0, i64 %22582, i32 %22583) #11
  %22584 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22585 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22584, i64 0, i32 1
  %22586 = load i32, i32* %22585, align 4
  %22587 = and i32 %22586, 255
  %22588 = lshr i32 %22586, 8
  %22589 = and i32 %22588, 65535
  %22590 = add nuw nsw i32 %22589, %22587
  %22591 = zext i32 %22590 to i64
  %22592 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22584, i64 0, i32 5, i64 %22591, i32 0
  %22593 = load i64, i64* %22592, align 8
  %22594 = ashr i64 %22593, 35
  %22595 = trunc i64 %22594 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22579, i32 %22595, i32 0, i32 8) #11
  %22596 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22597 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22596, i64 0, i32 1
  %22598 = load i32, i32* %22597, align 4
  %22599 = and i32 %22598, 255
  %22600 = lshr i32 %22598, 8
  %22601 = and i32 %22600, 65535
  %22602 = add nuw nsw i32 %22601, %22599
  %22603 = zext i32 %22602 to i64
  %22604 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22596, i64 0, i32 5, i64 %22603, i32 0
  %22605 = load i64, i64* %22604, align 8
  %22606 = ashr i64 %22605, 35
  %22607 = trunc i64 %22606 to i32
  %22608 = zext i32 %22599 to i64
  %22609 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22596, i64 0, i32 5, i64 %22608, i32 0
  %22610 = load i64, i64* %22609, align 8
  %22611 = ashr i64 %22610, 35
  %22612 = trunc i64 %22611 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22579, i8 zeroext 43, i32 %22607, i32 %22612, i32 8) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %22579) #11
  %22613 = bitcast i64* %122 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22613)
  store i64 1, i64* %122, align 8
  %22614 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %122) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22613)
  %22615 = extractvalue { i64, i32 } %22614, 0
  %22616 = extractvalue { i64, i32 } %22614, 1
  %22617 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22618 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22617, i64 0, i32 1
  %22619 = load i32, i32* %22618, align 4
  %22620 = and i32 %22619, 255
  %22621 = lshr i32 %22619, 8
  %22622 = and i32 %22621, 65535
  %22623 = add nuw nsw i32 %22622, %22620
  %22624 = zext i32 %22623 to i64
  %22625 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22617, i64 0, i32 5, i64 %22624, i32 0
  %22626 = load i64, i64* %22625, align 8
  %22627 = ashr i64 %22626, 35
  %22628 = trunc i64 %22627 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgwENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %22579, i64 %22615, i32 %22616, i32 %22628) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %22579, i32 5, %"class.v8::internal::Label"* nonnull %256, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22576) #11
  call void @_ZN2v88internal9Assembler11emit_movzxwENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22579, i32 0, i32 0, i32 8) #11
  br label %23402

22629:                                            ; preds = %2
  %22630 = bitcast %"class.v8::internal::Label"* %257 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22630) #11
  %22631 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %257, i64 0, i32 0
  store i32 0, i32* %22631, align 4
  %22632 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %257, i64 0, i32 1
  store i32 0, i32* %22632, align 4
  %22633 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %22633, %"class.v8::internal::Label"* nonnull %257) #11
  %22634 = bitcast i64* %123 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22634)
  store i64 1, i64* %123, align 8
  %22635 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %123) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22634)
  %22636 = extractvalue { i64, i32 } %22635, 0
  %22637 = extractvalue { i64, i32 } %22635, 1
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %22633, i32 0, i64 %22636, i32 %22637, i32 4) #11
  %22638 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22639 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22638, i64 0, i32 1
  %22640 = load i32, i32* %22639, align 4
  %22641 = and i32 %22640, 255
  %22642 = lshr i32 %22640, 8
  %22643 = and i32 %22642, 65535
  %22644 = add nuw nsw i32 %22643, %22641
  %22645 = zext i32 %22644 to i64
  %22646 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22638, i64 0, i32 5, i64 %22645, i32 0
  %22647 = load i64, i64* %22646, align 8
  %22648 = ashr i64 %22647, 35
  %22649 = trunc i64 %22648 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22633, i32 %22649, i32 0, i32 8) #11
  %22650 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22651 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22650, i64 0, i32 1
  %22652 = load i32, i32* %22651, align 4
  %22653 = and i32 %22652, 255
  %22654 = lshr i32 %22652, 8
  %22655 = and i32 %22654, 65535
  %22656 = add nuw nsw i32 %22655, %22653
  %22657 = zext i32 %22656 to i64
  %22658 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22650, i64 0, i32 5, i64 %22657, i32 0
  %22659 = load i64, i64* %22658, align 8
  %22660 = ashr i64 %22659, 35
  %22661 = trunc i64 %22660 to i32
  %22662 = zext i32 %22653 to i64
  %22663 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22650, i64 0, i32 5, i64 %22662, i32 0
  %22664 = load i64, i64* %22663, align 8
  %22665 = ashr i64 %22664, 35
  %22666 = trunc i64 %22665 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22633, i8 zeroext 43, i32 %22661, i32 %22666, i32 8) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %22633) #11
  %22667 = bitcast i64* %124 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22667)
  store i64 1, i64* %124, align 8
  %22668 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %124) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22667)
  %22669 = extractvalue { i64, i32 } %22668, 0
  %22670 = extractvalue { i64, i32 } %22668, 1
  %22671 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22672 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22671, i64 0, i32 1
  %22673 = load i32, i32* %22672, align 4
  %22674 = and i32 %22673, 255
  %22675 = lshr i32 %22673, 8
  %22676 = and i32 %22675, 65535
  %22677 = add nuw nsw i32 %22676, %22674
  %22678 = zext i32 %22677 to i64
  %22679 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22671, i64 0, i32 5, i64 %22678, i32 0
  %22680 = load i64, i64* %22679, align 8
  %22681 = ashr i64 %22680, 35
  %22682 = trunc i64 %22681 to i32
  call void @_ZN2v88internal9Assembler12emit_cmpxchgENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %22633, i64 %22669, i32 %22670, i32 %22682, i32 4) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %22633, i32 5, %"class.v8::internal::Label"* nonnull %257, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22630) #11
  br label %23402

22683:                                            ; preds = %2
  %22684 = bitcast %"class.v8::internal::Label"* %258 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22684) #11
  %22685 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %258, i64 0, i32 0
  store i32 0, i32* %22685, align 4
  %22686 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %258, i64 0, i32 1
  store i32 0, i32* %22686, align 4
  %22687 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %22687, %"class.v8::internal::Label"* nonnull %258) #11
  %22688 = bitcast i64* %125 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22688)
  store i64 1, i64* %125, align 8
  %22689 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %125) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22688)
  %22690 = extractvalue { i64, i32 } %22689, 0
  %22691 = extractvalue { i64, i32 } %22689, 1
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %22687, i32 0, i64 %22690, i32 %22691, i32 8) #11
  %22692 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22693 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22692, i64 0, i32 1
  %22694 = load i32, i32* %22693, align 4
  %22695 = and i32 %22694, 255
  %22696 = lshr i32 %22694, 8
  %22697 = and i32 %22696, 65535
  %22698 = add nuw nsw i32 %22697, %22695
  %22699 = zext i32 %22698 to i64
  %22700 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22692, i64 0, i32 5, i64 %22699, i32 0
  %22701 = load i64, i64* %22700, align 8
  %22702 = ashr i64 %22701, 35
  %22703 = trunc i64 %22702 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22687, i32 %22703, i32 0, i32 8) #11
  %22704 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22705 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22704, i64 0, i32 1
  %22706 = load i32, i32* %22705, align 4
  %22707 = and i32 %22706, 255
  %22708 = lshr i32 %22706, 8
  %22709 = and i32 %22708, 65535
  %22710 = add nuw nsw i32 %22709, %22707
  %22711 = zext i32 %22710 to i64
  %22712 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22704, i64 0, i32 5, i64 %22711, i32 0
  %22713 = load i64, i64* %22712, align 8
  %22714 = ashr i64 %22713, 35
  %22715 = trunc i64 %22714 to i32
  %22716 = zext i32 %22707 to i64
  %22717 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22704, i64 0, i32 5, i64 %22716, i32 0
  %22718 = load i64, i64* %22717, align 8
  %22719 = ashr i64 %22718, 35
  %22720 = trunc i64 %22719 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22687, i8 zeroext 43, i32 %22715, i32 %22720, i32 8) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %22687) #11
  %22721 = bitcast i64* %126 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22721)
  store i64 1, i64* %126, align 8
  %22722 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %126) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22721)
  %22723 = extractvalue { i64, i32 } %22722, 0
  %22724 = extractvalue { i64, i32 } %22722, 1
  %22725 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22726 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22725, i64 0, i32 1
  %22727 = load i32, i32* %22726, align 4
  %22728 = and i32 %22727, 255
  %22729 = lshr i32 %22727, 8
  %22730 = and i32 %22729, 65535
  %22731 = add nuw nsw i32 %22730, %22728
  %22732 = zext i32 %22731 to i64
  %22733 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22725, i64 0, i32 5, i64 %22732, i32 0
  %22734 = load i64, i64* %22733, align 8
  %22735 = ashr i64 %22734, 35
  %22736 = trunc i64 %22735 to i32
  call void @_ZN2v88internal9Assembler12emit_cmpxchgENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %22687, i64 %22723, i32 %22724, i32 %22736, i32 8) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %22687, i32 5, %"class.v8::internal::Label"* nonnull %258, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22684) #11
  br label %23402

22737:                                            ; preds = %2
  %22738 = bitcast %"class.v8::internal::Label"* %259 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22738) #11
  %22739 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %259, i64 0, i32 0
  store i32 0, i32* %22739, align 4
  %22740 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %259, i64 0, i32 1
  store i32 0, i32* %22740, align 4
  %22741 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %22741, %"class.v8::internal::Label"* nonnull %259) #11
  %22742 = bitcast i64* %127 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22742)
  store i64 1, i64* %127, align 8
  %22743 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %127) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22742)
  %22744 = extractvalue { i64, i32 } %22743, 0
  %22745 = extractvalue { i64, i32 } %22743, 1
  call void @_ZN2v88internal9Assembler4movbENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %22741, i32 0, i64 %22744, i32 %22745) #11
  %22746 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22747 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22746, i64 0, i32 1
  %22748 = load i32, i32* %22747, align 4
  %22749 = and i32 %22748, 255
  %22750 = lshr i32 %22748, 8
  %22751 = and i32 %22750, 65535
  %22752 = add nuw nsw i32 %22751, %22749
  %22753 = zext i32 %22752 to i64
  %22754 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22746, i64 0, i32 5, i64 %22753, i32 0
  %22755 = load i64, i64* %22754, align 8
  %22756 = ashr i64 %22755, 35
  %22757 = trunc i64 %22756 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22741, i32 %22757, i32 0, i32 8) #11
  %22758 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22759 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22758, i64 0, i32 1
  %22760 = load i32, i32* %22759, align 4
  %22761 = and i32 %22760, 255
  %22762 = lshr i32 %22760, 8
  %22763 = and i32 %22762, 65535
  %22764 = add nuw nsw i32 %22763, %22761
  %22765 = zext i32 %22764 to i64
  %22766 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22758, i64 0, i32 5, i64 %22765, i32 0
  %22767 = load i64, i64* %22766, align 8
  %22768 = ashr i64 %22767, 35
  %22769 = trunc i64 %22768 to i32
  %22770 = zext i32 %22761 to i64
  %22771 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22758, i64 0, i32 5, i64 %22770, i32 0
  %22772 = load i64, i64* %22771, align 8
  %22773 = ashr i64 %22772, 35
  %22774 = trunc i64 %22773 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22741, i8 zeroext 35, i32 %22769, i32 %22774, i32 8) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %22741) #11
  %22775 = bitcast i64* %128 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22775)
  store i64 1, i64* %128, align 8
  %22776 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %128) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22775)
  %22777 = extractvalue { i64, i32 } %22776, 0
  %22778 = extractvalue { i64, i32 } %22776, 1
  %22779 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22780 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22779, i64 0, i32 1
  %22781 = load i32, i32* %22780, align 4
  %22782 = and i32 %22781, 255
  %22783 = lshr i32 %22781, 8
  %22784 = and i32 %22783, 65535
  %22785 = add nuw nsw i32 %22784, %22782
  %22786 = zext i32 %22785 to i64
  %22787 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22779, i64 0, i32 5, i64 %22786, i32 0
  %22788 = load i64, i64* %22787, align 8
  %22789 = ashr i64 %22788, 35
  %22790 = trunc i64 %22789 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgbENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %22741, i64 %22777, i32 %22778, i32 %22790) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %22741, i32 5, %"class.v8::internal::Label"* nonnull %259, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22738) #11
  call void @_ZN2v88internal9Assembler11emit_movzxbENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22741, i32 0, i32 0, i32 8) #11
  br label %23402

22791:                                            ; preds = %2
  %22792 = bitcast %"class.v8::internal::Label"* %260 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22792) #11
  %22793 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %260, i64 0, i32 0
  store i32 0, i32* %22793, align 4
  %22794 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %260, i64 0, i32 1
  store i32 0, i32* %22794, align 4
  %22795 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %22795, %"class.v8::internal::Label"* nonnull %260) #11
  %22796 = bitcast i64* %129 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22796)
  store i64 1, i64* %129, align 8
  %22797 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %129) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22796)
  %22798 = extractvalue { i64, i32 } %22797, 0
  %22799 = extractvalue { i64, i32 } %22797, 1
  call void @_ZN2v88internal9Assembler4movwENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %22795, i32 0, i64 %22798, i32 %22799) #11
  %22800 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22801 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22800, i64 0, i32 1
  %22802 = load i32, i32* %22801, align 4
  %22803 = and i32 %22802, 255
  %22804 = lshr i32 %22802, 8
  %22805 = and i32 %22804, 65535
  %22806 = add nuw nsw i32 %22805, %22803
  %22807 = zext i32 %22806 to i64
  %22808 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22800, i64 0, i32 5, i64 %22807, i32 0
  %22809 = load i64, i64* %22808, align 8
  %22810 = ashr i64 %22809, 35
  %22811 = trunc i64 %22810 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22795, i32 %22811, i32 0, i32 8) #11
  %22812 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22813 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22812, i64 0, i32 1
  %22814 = load i32, i32* %22813, align 4
  %22815 = and i32 %22814, 255
  %22816 = lshr i32 %22814, 8
  %22817 = and i32 %22816, 65535
  %22818 = add nuw nsw i32 %22817, %22815
  %22819 = zext i32 %22818 to i64
  %22820 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22812, i64 0, i32 5, i64 %22819, i32 0
  %22821 = load i64, i64* %22820, align 8
  %22822 = ashr i64 %22821, 35
  %22823 = trunc i64 %22822 to i32
  %22824 = zext i32 %22815 to i64
  %22825 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22812, i64 0, i32 5, i64 %22824, i32 0
  %22826 = load i64, i64* %22825, align 8
  %22827 = ashr i64 %22826, 35
  %22828 = trunc i64 %22827 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22795, i8 zeroext 35, i32 %22823, i32 %22828, i32 8) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %22795) #11
  %22829 = bitcast i64* %130 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22829)
  store i64 1, i64* %130, align 8
  %22830 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %130) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22829)
  %22831 = extractvalue { i64, i32 } %22830, 0
  %22832 = extractvalue { i64, i32 } %22830, 1
  %22833 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22834 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22833, i64 0, i32 1
  %22835 = load i32, i32* %22834, align 4
  %22836 = and i32 %22835, 255
  %22837 = lshr i32 %22835, 8
  %22838 = and i32 %22837, 65535
  %22839 = add nuw nsw i32 %22838, %22836
  %22840 = zext i32 %22839 to i64
  %22841 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22833, i64 0, i32 5, i64 %22840, i32 0
  %22842 = load i64, i64* %22841, align 8
  %22843 = ashr i64 %22842, 35
  %22844 = trunc i64 %22843 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgwENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %22795, i64 %22831, i32 %22832, i32 %22844) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %22795, i32 5, %"class.v8::internal::Label"* nonnull %260, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22792) #11
  call void @_ZN2v88internal9Assembler11emit_movzxwENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22795, i32 0, i32 0, i32 8) #11
  br label %23402

22845:                                            ; preds = %2
  %22846 = bitcast %"class.v8::internal::Label"* %261 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22846) #11
  %22847 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %261, i64 0, i32 0
  store i32 0, i32* %22847, align 4
  %22848 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %261, i64 0, i32 1
  store i32 0, i32* %22848, align 4
  %22849 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %22849, %"class.v8::internal::Label"* nonnull %261) #11
  %22850 = bitcast i64* %132 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22850)
  store i64 1, i64* %132, align 8
  %22851 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %132) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22850)
  %22852 = extractvalue { i64, i32 } %22851, 0
  %22853 = extractvalue { i64, i32 } %22851, 1
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %22849, i32 0, i64 %22852, i32 %22853, i32 4) #11
  %22854 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22855 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22854, i64 0, i32 1
  %22856 = load i32, i32* %22855, align 4
  %22857 = and i32 %22856, 255
  %22858 = lshr i32 %22856, 8
  %22859 = and i32 %22858, 65535
  %22860 = add nuw nsw i32 %22859, %22857
  %22861 = zext i32 %22860 to i64
  %22862 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22854, i64 0, i32 5, i64 %22861, i32 0
  %22863 = load i64, i64* %22862, align 8
  %22864 = ashr i64 %22863, 35
  %22865 = trunc i64 %22864 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22849, i32 %22865, i32 0, i32 8) #11
  %22866 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22867 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22866, i64 0, i32 1
  %22868 = load i32, i32* %22867, align 4
  %22869 = and i32 %22868, 255
  %22870 = lshr i32 %22868, 8
  %22871 = and i32 %22870, 65535
  %22872 = add nuw nsw i32 %22871, %22869
  %22873 = zext i32 %22872 to i64
  %22874 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22866, i64 0, i32 5, i64 %22873, i32 0
  %22875 = load i64, i64* %22874, align 8
  %22876 = ashr i64 %22875, 35
  %22877 = trunc i64 %22876 to i32
  %22878 = zext i32 %22869 to i64
  %22879 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22866, i64 0, i32 5, i64 %22878, i32 0
  %22880 = load i64, i64* %22879, align 8
  %22881 = ashr i64 %22880, 35
  %22882 = trunc i64 %22881 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22849, i8 zeroext 35, i32 %22877, i32 %22882, i32 8) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %22849) #11
  %22883 = bitcast i64* %133 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22883)
  store i64 1, i64* %133, align 8
  %22884 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %133) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22883)
  %22885 = extractvalue { i64, i32 } %22884, 0
  %22886 = extractvalue { i64, i32 } %22884, 1
  %22887 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22888 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22887, i64 0, i32 1
  %22889 = load i32, i32* %22888, align 4
  %22890 = and i32 %22889, 255
  %22891 = lshr i32 %22889, 8
  %22892 = and i32 %22891, 65535
  %22893 = add nuw nsw i32 %22892, %22890
  %22894 = zext i32 %22893 to i64
  %22895 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22887, i64 0, i32 5, i64 %22894, i32 0
  %22896 = load i64, i64* %22895, align 8
  %22897 = ashr i64 %22896, 35
  %22898 = trunc i64 %22897 to i32
  call void @_ZN2v88internal9Assembler12emit_cmpxchgENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %22849, i64 %22885, i32 %22886, i32 %22898, i32 4) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %22849, i32 5, %"class.v8::internal::Label"* nonnull %261, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22846) #11
  br label %23402

22899:                                            ; preds = %2
  %22900 = bitcast %"class.v8::internal::Label"* %262 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22900) #11
  %22901 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %262, i64 0, i32 0
  store i32 0, i32* %22901, align 4
  %22902 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %262, i64 0, i32 1
  store i32 0, i32* %22902, align 4
  %22903 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %22903, %"class.v8::internal::Label"* nonnull %262) #11
  %22904 = bitcast i64* %134 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22904)
  store i64 1, i64* %134, align 8
  %22905 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %134) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22904)
  %22906 = extractvalue { i64, i32 } %22905, 0
  %22907 = extractvalue { i64, i32 } %22905, 1
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %22903, i32 0, i64 %22906, i32 %22907, i32 8) #11
  %22908 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22909 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22908, i64 0, i32 1
  %22910 = load i32, i32* %22909, align 4
  %22911 = and i32 %22910, 255
  %22912 = lshr i32 %22910, 8
  %22913 = and i32 %22912, 65535
  %22914 = add nuw nsw i32 %22913, %22911
  %22915 = zext i32 %22914 to i64
  %22916 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22908, i64 0, i32 5, i64 %22915, i32 0
  %22917 = load i64, i64* %22916, align 8
  %22918 = ashr i64 %22917, 35
  %22919 = trunc i64 %22918 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22903, i32 %22919, i32 0, i32 8) #11
  %22920 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22921 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22920, i64 0, i32 1
  %22922 = load i32, i32* %22921, align 4
  %22923 = and i32 %22922, 255
  %22924 = lshr i32 %22922, 8
  %22925 = and i32 %22924, 65535
  %22926 = add nuw nsw i32 %22925, %22923
  %22927 = zext i32 %22926 to i64
  %22928 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22920, i64 0, i32 5, i64 %22927, i32 0
  %22929 = load i64, i64* %22928, align 8
  %22930 = ashr i64 %22929, 35
  %22931 = trunc i64 %22930 to i32
  %22932 = zext i32 %22923 to i64
  %22933 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22920, i64 0, i32 5, i64 %22932, i32 0
  %22934 = load i64, i64* %22933, align 8
  %22935 = ashr i64 %22934, 35
  %22936 = trunc i64 %22935 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22903, i8 zeroext 35, i32 %22931, i32 %22936, i32 8) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %22903) #11
  %22937 = bitcast i64* %135 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22937)
  store i64 1, i64* %135, align 8
  %22938 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %135) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22937)
  %22939 = extractvalue { i64, i32 } %22938, 0
  %22940 = extractvalue { i64, i32 } %22938, 1
  %22941 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22942 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22941, i64 0, i32 1
  %22943 = load i32, i32* %22942, align 4
  %22944 = and i32 %22943, 255
  %22945 = lshr i32 %22943, 8
  %22946 = and i32 %22945, 65535
  %22947 = add nuw nsw i32 %22946, %22944
  %22948 = zext i32 %22947 to i64
  %22949 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22941, i64 0, i32 5, i64 %22948, i32 0
  %22950 = load i64, i64* %22949, align 8
  %22951 = ashr i64 %22950, 35
  %22952 = trunc i64 %22951 to i32
  call void @_ZN2v88internal9Assembler12emit_cmpxchgENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %22903, i64 %22939, i32 %22940, i32 %22952, i32 8) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %22903, i32 5, %"class.v8::internal::Label"* nonnull %262, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22900) #11
  br label %23402

22953:                                            ; preds = %2
  %22954 = bitcast %"class.v8::internal::Label"* %263 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22954) #11
  %22955 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %263, i64 0, i32 0
  store i32 0, i32* %22955, align 4
  %22956 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %263, i64 0, i32 1
  store i32 0, i32* %22956, align 4
  %22957 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %22957, %"class.v8::internal::Label"* nonnull %263) #11
  %22958 = bitcast i64* %136 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22958)
  store i64 1, i64* %136, align 8
  %22959 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %136) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22958)
  %22960 = extractvalue { i64, i32 } %22959, 0
  %22961 = extractvalue { i64, i32 } %22959, 1
  call void @_ZN2v88internal9Assembler4movbENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %22957, i32 0, i64 %22960, i32 %22961) #11
  %22962 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22963 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22962, i64 0, i32 1
  %22964 = load i32, i32* %22963, align 4
  %22965 = and i32 %22964, 255
  %22966 = lshr i32 %22964, 8
  %22967 = and i32 %22966, 65535
  %22968 = add nuw nsw i32 %22967, %22965
  %22969 = zext i32 %22968 to i64
  %22970 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22962, i64 0, i32 5, i64 %22969, i32 0
  %22971 = load i64, i64* %22970, align 8
  %22972 = ashr i64 %22971, 35
  %22973 = trunc i64 %22972 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22957, i32 %22973, i32 0, i32 8) #11
  %22974 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22975 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22974, i64 0, i32 1
  %22976 = load i32, i32* %22975, align 4
  %22977 = and i32 %22976, 255
  %22978 = lshr i32 %22976, 8
  %22979 = and i32 %22978, 65535
  %22980 = add nuw nsw i32 %22979, %22977
  %22981 = zext i32 %22980 to i64
  %22982 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22974, i64 0, i32 5, i64 %22981, i32 0
  %22983 = load i64, i64* %22982, align 8
  %22984 = ashr i64 %22983, 35
  %22985 = trunc i64 %22984 to i32
  %22986 = zext i32 %22977 to i64
  %22987 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22974, i64 0, i32 5, i64 %22986, i32 0
  %22988 = load i64, i64* %22987, align 8
  %22989 = ashr i64 %22988, 35
  %22990 = trunc i64 %22989 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22957, i8 zeroext 11, i32 %22985, i32 %22990, i32 8) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %22957) #11
  %22991 = bitcast i64* %137 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22991)
  store i64 1, i64* %137, align 8
  %22992 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %137) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22991)
  %22993 = extractvalue { i64, i32 } %22992, 0
  %22994 = extractvalue { i64, i32 } %22992, 1
  %22995 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %22996 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22995, i64 0, i32 1
  %22997 = load i32, i32* %22996, align 4
  %22998 = and i32 %22997, 255
  %22999 = lshr i32 %22997, 8
  %23000 = and i32 %22999, 65535
  %23001 = add nuw nsw i32 %23000, %22998
  %23002 = zext i32 %23001 to i64
  %23003 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22995, i64 0, i32 5, i64 %23002, i32 0
  %23004 = load i64, i64* %23003, align 8
  %23005 = ashr i64 %23004, 35
  %23006 = trunc i64 %23005 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgbENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %22957, i64 %22993, i32 %22994, i32 %23006) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %22957, i32 5, %"class.v8::internal::Label"* nonnull %263, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22954) #11
  call void @_ZN2v88internal9Assembler11emit_movzxbENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22957, i32 0, i32 0, i32 8) #11
  br label %23402

23007:                                            ; preds = %2
  %23008 = bitcast %"class.v8::internal::Label"* %264 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23008) #11
  %23009 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %264, i64 0, i32 0
  store i32 0, i32* %23009, align 4
  %23010 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %264, i64 0, i32 1
  store i32 0, i32* %23010, align 4
  %23011 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %23011, %"class.v8::internal::Label"* nonnull %264) #11
  %23012 = bitcast i64* %138 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23012)
  store i64 1, i64* %138, align 8
  %23013 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %138) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23012)
  %23014 = extractvalue { i64, i32 } %23013, 0
  %23015 = extractvalue { i64, i32 } %23013, 1
  call void @_ZN2v88internal9Assembler4movwENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %23011, i32 0, i64 %23014, i32 %23015) #11
  %23016 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %23017 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23016, i64 0, i32 1
  %23018 = load i32, i32* %23017, align 4
  %23019 = and i32 %23018, 255
  %23020 = lshr i32 %23018, 8
  %23021 = and i32 %23020, 65535
  %23022 = add nuw nsw i32 %23021, %23019
  %23023 = zext i32 %23022 to i64
  %23024 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23016, i64 0, i32 5, i64 %23023, i32 0
  %23025 = load i64, i64* %23024, align 8
  %23026 = ashr i64 %23025, 35
  %23027 = trunc i64 %23026 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %23011, i32 %23027, i32 0, i32 8) #11
  %23028 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %23029 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23028, i64 0, i32 1
  %23030 = load i32, i32* %23029, align 4
  %23031 = and i32 %23030, 255
  %23032 = lshr i32 %23030, 8
  %23033 = and i32 %23032, 65535
  %23034 = add nuw nsw i32 %23033, %23031
  %23035 = zext i32 %23034 to i64
  %23036 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23028, i64 0, i32 5, i64 %23035, i32 0
  %23037 = load i64, i64* %23036, align 8
  %23038 = ashr i64 %23037, 35
  %23039 = trunc i64 %23038 to i32
  %23040 = zext i32 %23031 to i64
  %23041 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23028, i64 0, i32 5, i64 %23040, i32 0
  %23042 = load i64, i64* %23041, align 8
  %23043 = ashr i64 %23042, 35
  %23044 = trunc i64 %23043 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %23011, i8 zeroext 11, i32 %23039, i32 %23044, i32 8) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %23011) #11
  %23045 = bitcast i64* %140 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23045)
  store i64 1, i64* %140, align 8
  %23046 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %140) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23045)
  %23047 = extractvalue { i64, i32 } %23046, 0
  %23048 = extractvalue { i64, i32 } %23046, 1
  %23049 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %23050 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23049, i64 0, i32 1
  %23051 = load i32, i32* %23050, align 4
  %23052 = and i32 %23051, 255
  %23053 = lshr i32 %23051, 8
  %23054 = and i32 %23053, 65535
  %23055 = add nuw nsw i32 %23054, %23052
  %23056 = zext i32 %23055 to i64
  %23057 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23049, i64 0, i32 5, i64 %23056, i32 0
  %23058 = load i64, i64* %23057, align 8
  %23059 = ashr i64 %23058, 35
  %23060 = trunc i64 %23059 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgwENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %23011, i64 %23047, i32 %23048, i32 %23060) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %23011, i32 5, %"class.v8::internal::Label"* nonnull %264, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23008) #11
  call void @_ZN2v88internal9Assembler11emit_movzxwENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %23011, i32 0, i32 0, i32 8) #11
  br label %23402

23061:                                            ; preds = %2
  %23062 = bitcast %"class.v8::internal::Label"* %265 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23062) #11
  %23063 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %265, i64 0, i32 0
  store i32 0, i32* %23063, align 4
  %23064 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %265, i64 0, i32 1
  store i32 0, i32* %23064, align 4
  %23065 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %23065, %"class.v8::internal::Label"* nonnull %265) #11
  %23066 = bitcast i64* %141 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23066)
  store i64 1, i64* %141, align 8
  %23067 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %141) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23066)
  %23068 = extractvalue { i64, i32 } %23067, 0
  %23069 = extractvalue { i64, i32 } %23067, 1
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %23065, i32 0, i64 %23068, i32 %23069, i32 4) #11
  %23070 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %23071 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23070, i64 0, i32 1
  %23072 = load i32, i32* %23071, align 4
  %23073 = and i32 %23072, 255
  %23074 = lshr i32 %23072, 8
  %23075 = and i32 %23074, 65535
  %23076 = add nuw nsw i32 %23075, %23073
  %23077 = zext i32 %23076 to i64
  %23078 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23070, i64 0, i32 5, i64 %23077, i32 0
  %23079 = load i64, i64* %23078, align 8
  %23080 = ashr i64 %23079, 35
  %23081 = trunc i64 %23080 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %23065, i32 %23081, i32 0, i32 8) #11
  %23082 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %23083 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23082, i64 0, i32 1
  %23084 = load i32, i32* %23083, align 4
  %23085 = and i32 %23084, 255
  %23086 = lshr i32 %23084, 8
  %23087 = and i32 %23086, 65535
  %23088 = add nuw nsw i32 %23087, %23085
  %23089 = zext i32 %23088 to i64
  %23090 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23082, i64 0, i32 5, i64 %23089, i32 0
  %23091 = load i64, i64* %23090, align 8
  %23092 = ashr i64 %23091, 35
  %23093 = trunc i64 %23092 to i32
  %23094 = zext i32 %23085 to i64
  %23095 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23082, i64 0, i32 5, i64 %23094, i32 0
  %23096 = load i64, i64* %23095, align 8
  %23097 = ashr i64 %23096, 35
  %23098 = trunc i64 %23097 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %23065, i8 zeroext 11, i32 %23093, i32 %23098, i32 8) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %23065) #11
  %23099 = bitcast i64* %142 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23099)
  store i64 1, i64* %142, align 8
  %23100 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %142) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23099)
  %23101 = extractvalue { i64, i32 } %23100, 0
  %23102 = extractvalue { i64, i32 } %23100, 1
  %23103 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %23104 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23103, i64 0, i32 1
  %23105 = load i32, i32* %23104, align 4
  %23106 = and i32 %23105, 255
  %23107 = lshr i32 %23105, 8
  %23108 = and i32 %23107, 65535
  %23109 = add nuw nsw i32 %23108, %23106
  %23110 = zext i32 %23109 to i64
  %23111 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23103, i64 0, i32 5, i64 %23110, i32 0
  %23112 = load i64, i64* %23111, align 8
  %23113 = ashr i64 %23112, 35
  %23114 = trunc i64 %23113 to i32
  call void @_ZN2v88internal9Assembler12emit_cmpxchgENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %23065, i64 %23101, i32 %23102, i32 %23114, i32 4) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %23065, i32 5, %"class.v8::internal::Label"* nonnull %265, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23062) #11
  br label %23402

23115:                                            ; preds = %2
  %23116 = bitcast %"class.v8::internal::Label"* %266 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23116) #11
  %23117 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %266, i64 0, i32 0
  store i32 0, i32* %23117, align 4
  %23118 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %266, i64 0, i32 1
  store i32 0, i32* %23118, align 4
  %23119 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %23119, %"class.v8::internal::Label"* nonnull %266) #11
  %23120 = bitcast i64* %143 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23120)
  store i64 1, i64* %143, align 8
  %23121 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %143) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23120)
  %23122 = extractvalue { i64, i32 } %23121, 0
  %23123 = extractvalue { i64, i32 } %23121, 1
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %23119, i32 0, i64 %23122, i32 %23123, i32 8) #11
  %23124 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %23125 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23124, i64 0, i32 1
  %23126 = load i32, i32* %23125, align 4
  %23127 = and i32 %23126, 255
  %23128 = lshr i32 %23126, 8
  %23129 = and i32 %23128, 65535
  %23130 = add nuw nsw i32 %23129, %23127
  %23131 = zext i32 %23130 to i64
  %23132 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23124, i64 0, i32 5, i64 %23131, i32 0
  %23133 = load i64, i64* %23132, align 8
  %23134 = ashr i64 %23133, 35
  %23135 = trunc i64 %23134 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %23119, i32 %23135, i32 0, i32 8) #11
  %23136 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %23137 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23136, i64 0, i32 1
  %23138 = load i32, i32* %23137, align 4
  %23139 = and i32 %23138, 255
  %23140 = lshr i32 %23138, 8
  %23141 = and i32 %23140, 65535
  %23142 = add nuw nsw i32 %23141, %23139
  %23143 = zext i32 %23142 to i64
  %23144 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23136, i64 0, i32 5, i64 %23143, i32 0
  %23145 = load i64, i64* %23144, align 8
  %23146 = ashr i64 %23145, 35
  %23147 = trunc i64 %23146 to i32
  %23148 = zext i32 %23139 to i64
  %23149 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23136, i64 0, i32 5, i64 %23148, i32 0
  %23150 = load i64, i64* %23149, align 8
  %23151 = ashr i64 %23150, 35
  %23152 = trunc i64 %23151 to i32
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %23119, i8 zeroext 11, i32 %23147, i32 %23152, i32 8) #11
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %23119) #11
  %23153 = bitcast i64* %144 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23153)
  store i64 1, i64* %144, align 8
  %23154 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %144) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23153)
  %23155 = extractvalue { i64, i32 } %23154, 0
  %23156 = extractvalue { i64, i32 } %23154, 1
  %23157 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %23158 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23157, i64 0, i32 1
  %23159 = load i32, i32* %23158, align 4
  %23160 = and i32 %23159, 255
  %23161 = lshr i32 %23159, 8
  %23162 = and i32 %23161, 65535
  %23163 = add nuw nsw i32 %23162, %23160
  %23164 = zext i32 %23163 to i64
  %23165 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23157, i64 0, i32 5, i64 %23164, i32 0
  %23166 = load i64, i64* %23165, align 8
  %23167 = ashr i64 %23166, 35
  %23168 = trunc i64 %23167 to i32
  call void @_ZN2v88internal9Assembler12emit_cmpxchgENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %23119, i64 %23155, i32 %23156, i32 %23168, i32 8) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %23119, i32 5, %"class.v8::internal::Label"* nonnull %266, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23116) #11
  br label %23402

23169:                                            ; preds = %2
  %23170 = bitcast %"class.v8::internal::Label"* %267 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23170) #11
  %23171 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %267, i64 0, i32 0
  store i32 0, i32* %23171, align 4
  %23172 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %267, i64 0, i32 1
  store i32 0, i32* %23172, align 4
  %23173 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %23173, %"class.v8::internal::Label"* nonnull %267) #11
  %23174 = bitcast i64* %145 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23174)
  store i64 1, i64* %145, align 8
  %23175 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %145) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23174)
  %23176 = extractvalue { i64, i32 } %23175, 0
  %23177 = extractvalue { i64, i32 } %23175, 1
  call void @_ZN2v88internal9Assembler4movbENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %23173, i32 0, i64 %23176, i32 %23177) #11
  %23178 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %23179 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23178, i64 0, i32 1
  %23180 = load i32, i32* %23179, align 4
  %23181 = and i32 %23180, 255
  %23182 = lshr i32 %23180, 8
  %23183 = and i32 %23182, 65535
  %23184 = add nuw nsw i32 %23183, %23181
  %23185 = zext i32 %23184 to i64
  %23186 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23178, i64 0, i32 5, i64 %23185, i32 0
  %23187 = load i64, i64* %23186, align 8
  %23188 = ashr i64 %23187, 35
  %23189 = trunc i64 %23188 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %23173, i32 %23189, i32 0, i32 8) #11
  %23190 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %23191 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23190, i64 0, i32 1
  %23192 = load i32, i32* %23191, align 4
  %23193 = and i32 %23192, 255
  %23194 = lshr i32 %23192, 8
  %23195 = and i32 %23194, 65535
  %23196 = add nuw nsw i32 %23195, %23193
  %23197 = zext i32 %23196 to i64
  %23198 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23190, i64 0, i32 5, i64 %23197, i32 0
  %23199 = load i64, i64* %23198, align 8
  %23200 = ashr i64 %23199, 35
  %23201 = trunc i64 %23200 to i32
  %23202 = zext i32 %23193 to i64
  %23203 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23190, i64 0, i32 5, i64 %23202, i32 0
  %23204 = load i64, i64* %23203, align 8
  %23205 = ashr i64 %23204, 35
  %23206 = trunc i64 %23205 to i32
  %23207 = icmp eq i32 %23201, %23206
  br i1 %23207, label %23208, label %23209

23208:                                            ; preds = %23169
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %23173, i8 zeroext 51, i32 %23201, i32 %23201, i32 4) #11
  br label %23210

23209:                                            ; preds = %23169
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %23173, i8 zeroext 51, i32 %23201, i32 %23206, i32 8) #11
  br label %23210

23210:                                            ; preds = %23208, %23209
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %23173) #11
  %23211 = bitcast i64* %146 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23211)
  store i64 1, i64* %146, align 8
  %23212 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %146) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23211)
  %23213 = extractvalue { i64, i32 } %23212, 0
  %23214 = extractvalue { i64, i32 } %23212, 1
  %23215 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %23216 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23215, i64 0, i32 1
  %23217 = load i32, i32* %23216, align 4
  %23218 = and i32 %23217, 255
  %23219 = lshr i32 %23217, 8
  %23220 = and i32 %23219, 65535
  %23221 = add nuw nsw i32 %23220, %23218
  %23222 = zext i32 %23221 to i64
  %23223 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23215, i64 0, i32 5, i64 %23222, i32 0
  %23224 = load i64, i64* %23223, align 8
  %23225 = ashr i64 %23224, 35
  %23226 = trunc i64 %23225 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgbENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %23173, i64 %23213, i32 %23214, i32 %23226) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %23173, i32 5, %"class.v8::internal::Label"* nonnull %267, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23170) #11
  call void @_ZN2v88internal9Assembler11emit_movzxbENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %23173, i32 0, i32 0, i32 8) #11
  br label %23402

23227:                                            ; preds = %2
  %23228 = bitcast %"class.v8::internal::Label"* %268 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23228) #11
  %23229 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %268, i64 0, i32 0
  store i32 0, i32* %23229, align 4
  %23230 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %268, i64 0, i32 1
  store i32 0, i32* %23230, align 4
  %23231 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %23231, %"class.v8::internal::Label"* nonnull %268) #11
  %23232 = bitcast i64* %147 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23232)
  store i64 1, i64* %147, align 8
  %23233 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %147) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23232)
  %23234 = extractvalue { i64, i32 } %23233, 0
  %23235 = extractvalue { i64, i32 } %23233, 1
  call void @_ZN2v88internal9Assembler4movwENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %23231, i32 0, i64 %23234, i32 %23235) #11
  %23236 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %23237 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23236, i64 0, i32 1
  %23238 = load i32, i32* %23237, align 4
  %23239 = and i32 %23238, 255
  %23240 = lshr i32 %23238, 8
  %23241 = and i32 %23240, 65535
  %23242 = add nuw nsw i32 %23241, %23239
  %23243 = zext i32 %23242 to i64
  %23244 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23236, i64 0, i32 5, i64 %23243, i32 0
  %23245 = load i64, i64* %23244, align 8
  %23246 = ashr i64 %23245, 35
  %23247 = trunc i64 %23246 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %23231, i32 %23247, i32 0, i32 8) #11
  %23248 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %23249 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23248, i64 0, i32 1
  %23250 = load i32, i32* %23249, align 4
  %23251 = and i32 %23250, 255
  %23252 = lshr i32 %23250, 8
  %23253 = and i32 %23252, 65535
  %23254 = add nuw nsw i32 %23253, %23251
  %23255 = zext i32 %23254 to i64
  %23256 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23248, i64 0, i32 5, i64 %23255, i32 0
  %23257 = load i64, i64* %23256, align 8
  %23258 = ashr i64 %23257, 35
  %23259 = trunc i64 %23258 to i32
  %23260 = zext i32 %23251 to i64
  %23261 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23248, i64 0, i32 5, i64 %23260, i32 0
  %23262 = load i64, i64* %23261, align 8
  %23263 = ashr i64 %23262, 35
  %23264 = trunc i64 %23263 to i32
  %23265 = icmp eq i32 %23259, %23264
  br i1 %23265, label %23266, label %23267

23266:                                            ; preds = %23227
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %23231, i8 zeroext 51, i32 %23259, i32 %23259, i32 4) #11
  br label %23268

23267:                                            ; preds = %23227
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %23231, i8 zeroext 51, i32 %23259, i32 %23264, i32 8) #11
  br label %23268

23268:                                            ; preds = %23266, %23267
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %23231) #11
  %23269 = bitcast i64* %148 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23269)
  store i64 1, i64* %148, align 8
  %23270 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %148) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23269)
  %23271 = extractvalue { i64, i32 } %23270, 0
  %23272 = extractvalue { i64, i32 } %23270, 1
  %23273 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %23274 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23273, i64 0, i32 1
  %23275 = load i32, i32* %23274, align 4
  %23276 = and i32 %23275, 255
  %23277 = lshr i32 %23275, 8
  %23278 = and i32 %23277, 65535
  %23279 = add nuw nsw i32 %23278, %23276
  %23280 = zext i32 %23279 to i64
  %23281 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23273, i64 0, i32 5, i64 %23280, i32 0
  %23282 = load i64, i64* %23281, align 8
  %23283 = ashr i64 %23282, 35
  %23284 = trunc i64 %23283 to i32
  call void @_ZN2v88internal9Assembler8cmpxchgwENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"* %23231, i64 %23271, i32 %23272, i32 %23284) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %23231, i32 5, %"class.v8::internal::Label"* nonnull %268, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23228) #11
  call void @_ZN2v88internal9Assembler11emit_movzxwENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %23231, i32 0, i32 0, i32 8) #11
  br label %23402

23285:                                            ; preds = %2
  %23286 = bitcast %"class.v8::internal::Label"* %269 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23286) #11
  %23287 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %269, i64 0, i32 0
  store i32 0, i32* %23287, align 4
  %23288 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %269, i64 0, i32 1
  store i32 0, i32* %23288, align 4
  %23289 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %23289, %"class.v8::internal::Label"* nonnull %269) #11
  %23290 = bitcast i64* %149 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23290)
  store i64 1, i64* %149, align 8
  %23291 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %149) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23290)
  %23292 = extractvalue { i64, i32 } %23291, 0
  %23293 = extractvalue { i64, i32 } %23291, 1
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %23289, i32 0, i64 %23292, i32 %23293, i32 4) #11
  %23294 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %23295 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23294, i64 0, i32 1
  %23296 = load i32, i32* %23295, align 4
  %23297 = and i32 %23296, 255
  %23298 = lshr i32 %23296, 8
  %23299 = and i32 %23298, 65535
  %23300 = add nuw nsw i32 %23299, %23297
  %23301 = zext i32 %23300 to i64
  %23302 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23294, i64 0, i32 5, i64 %23301, i32 0
  %23303 = load i64, i64* %23302, align 8
  %23304 = ashr i64 %23303, 35
  %23305 = trunc i64 %23304 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %23289, i32 %23305, i32 0, i32 8) #11
  %23306 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %23307 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23306, i64 0, i32 1
  %23308 = load i32, i32* %23307, align 4
  %23309 = and i32 %23308, 255
  %23310 = lshr i32 %23308, 8
  %23311 = and i32 %23310, 65535
  %23312 = add nuw nsw i32 %23311, %23309
  %23313 = zext i32 %23312 to i64
  %23314 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23306, i64 0, i32 5, i64 %23313, i32 0
  %23315 = load i64, i64* %23314, align 8
  %23316 = ashr i64 %23315, 35
  %23317 = trunc i64 %23316 to i32
  %23318 = zext i32 %23309 to i64
  %23319 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23306, i64 0, i32 5, i64 %23318, i32 0
  %23320 = load i64, i64* %23319, align 8
  %23321 = ashr i64 %23320, 35
  %23322 = trunc i64 %23321 to i32
  %23323 = icmp eq i32 %23317, %23322
  br i1 %23323, label %23324, label %23325

23324:                                            ; preds = %23285
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %23289, i8 zeroext 51, i32 %23317, i32 %23317, i32 4) #11
  br label %23326

23325:                                            ; preds = %23285
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %23289, i8 zeroext 51, i32 %23317, i32 %23322, i32 8) #11
  br label %23326

23326:                                            ; preds = %23324, %23325
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %23289) #11
  %23327 = bitcast i64* %150 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23327)
  store i64 1, i64* %150, align 8
  %23328 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %150) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23327)
  %23329 = extractvalue { i64, i32 } %23328, 0
  %23330 = extractvalue { i64, i32 } %23328, 1
  %23331 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %23332 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23331, i64 0, i32 1
  %23333 = load i32, i32* %23332, align 4
  %23334 = and i32 %23333, 255
  %23335 = lshr i32 %23333, 8
  %23336 = and i32 %23335, 65535
  %23337 = add nuw nsw i32 %23336, %23334
  %23338 = zext i32 %23337 to i64
  %23339 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23331, i64 0, i32 5, i64 %23338, i32 0
  %23340 = load i64, i64* %23339, align 8
  %23341 = ashr i64 %23340, 35
  %23342 = trunc i64 %23341 to i32
  call void @_ZN2v88internal9Assembler12emit_cmpxchgENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %23289, i64 %23329, i32 %23330, i32 %23342, i32 4) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %23289, i32 5, %"class.v8::internal::Label"* nonnull %269, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23286) #11
  br label %23402

23343:                                            ; preds = %2
  %23344 = bitcast %"class.v8::internal::Label"* %270 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23344) #11
  %23345 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %270, i64 0, i32 0
  store i32 0, i32* %23345, align 4
  %23346 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %270, i64 0, i32 1
  store i32 0, i32* %23346, align 4
  %23347 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %23347, %"class.v8::internal::Label"* nonnull %270) #11
  %23348 = bitcast i64* %151 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23348)
  store i64 1, i64* %151, align 8
  %23349 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %151) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23348)
  %23350 = extractvalue { i64, i32 } %23349, 0
  %23351 = extractvalue { i64, i32 } %23349, 1
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %23347, i32 0, i64 %23350, i32 %23351, i32 8) #11
  %23352 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %23353 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23352, i64 0, i32 1
  %23354 = load i32, i32* %23353, align 4
  %23355 = and i32 %23354, 255
  %23356 = lshr i32 %23354, 8
  %23357 = and i32 %23356, 65535
  %23358 = add nuw nsw i32 %23357, %23355
  %23359 = zext i32 %23358 to i64
  %23360 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23352, i64 0, i32 5, i64 %23359, i32 0
  %23361 = load i64, i64* %23360, align 8
  %23362 = ashr i64 %23361, 35
  %23363 = trunc i64 %23362 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %23347, i32 %23363, i32 0, i32 8) #11
  %23364 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %23365 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23364, i64 0, i32 1
  %23366 = load i32, i32* %23365, align 4
  %23367 = and i32 %23366, 255
  %23368 = lshr i32 %23366, 8
  %23369 = and i32 %23368, 65535
  %23370 = add nuw nsw i32 %23369, %23367
  %23371 = zext i32 %23370 to i64
  %23372 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23364, i64 0, i32 5, i64 %23371, i32 0
  %23373 = load i64, i64* %23372, align 8
  %23374 = ashr i64 %23373, 35
  %23375 = trunc i64 %23374 to i32
  %23376 = zext i32 %23367 to i64
  %23377 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23364, i64 0, i32 5, i64 %23376, i32 0
  %23378 = load i64, i64* %23377, align 8
  %23379 = ashr i64 %23378, 35
  %23380 = trunc i64 %23379 to i32
  %23381 = icmp eq i32 %23375, %23380
  br i1 %23381, label %23382, label %23383

23382:                                            ; preds = %23343
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %23347, i8 zeroext 51, i32 %23375, i32 %23375, i32 4) #11
  br label %23384

23383:                                            ; preds = %23343
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %23347, i8 zeroext 51, i32 %23375, i32 %23380, i32 8) #11
  br label %23384

23384:                                            ; preds = %23382, %23383
  call void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"* %23347) #11
  %23385 = bitcast i64* %153 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23385)
  store i64 1, i64* %153, align 8
  %23386 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %154, i64* nonnull %153) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23385)
  %23387 = extractvalue { i64, i32 } %23386, 0
  %23388 = extractvalue { i64, i32 } %23386, 1
  %23389 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %23390 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23389, i64 0, i32 1
  %23391 = load i32, i32* %23390, align 4
  %23392 = and i32 %23391, 255
  %23393 = lshr i32 %23391, 8
  %23394 = and i32 %23393, 65535
  %23395 = add nuw nsw i32 %23394, %23392
  %23396 = zext i32 %23395 to i64
  %23397 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %23389, i64 0, i32 5, i64 %23396, i32 0
  %23398 = load i64, i64* %23397, align 8
  %23399 = ashr i64 %23398, 35
  %23400 = trunc i64 %23399 to i32
  call void @_ZN2v88internal9Assembler12emit_cmpxchgENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %23347, i64 %23387, i32 %23388, i32 %23400, i32 8) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %23347, i32 5, %"class.v8::internal::Label"* nonnull %270, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23344) #11
  br label %23402

23401:                                            ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #12
  unreachable

23402:                                            ; preds = %17538, %17537, %6593, %6707, %20482, %20481, %20429, %20428, %20345, %20344, %20261, %20260, %20162, %20161, %20081, %20080, %20015, %20014, %19502, %19498, %19487, %19483, %19432, %19428, %19398, %19394, %19242, %19238, %19057, %19053, %18895, %18891, %18730, %18726, %18703, %18699, %18649, %18656, %18660, %18472, %18471, %18421, %18420, %18370, %18369, %18319, %18318, %18268, %18267, %18217, %18216, %18166, %18165, %18055, %18054, %17985, %17984, %17453, %17452, %17226, %17225, %17207, %17206, %17159, %17158, %17133, %17132, %16979, %16978, %16939, %16938, %16836, %16835, %16781, %16780, %16546, %16545, %16492, %16491, %16430, %16429, %16390, %16389, %16305, %16306, %16314, %16315, %15595, %15594, %15527, %15530, %15341, %15340, %15293, %15292, %15267, %15266, %15007, %15006, %14988, %14987, %14933, %14932, %14506, %14507, %14515, %14516, %14465, %14464, %14417, %14413, %14350, %14349, %14339, %14338, %14220, %14219, %14201, %14200, %14182, %14181, %14156, %14155, %13983, %13982, %13964, %13963, %13853, %13852, %13798, %13797, %13455, %13456, %13464, %13465, %13414, %13413, %13395, %13394, %13316, %13312, %13243, %13242, %13209, %13208, %13008, %13007, %12958, %12968, %12944, %12943, %12806, %12802, %12687, %12686, %12638, %12634, %12610, %12609, %12598, %12597, %12510, %12504, %12485, %12479, %12402, %12401, %12338, %12337, %12146, %12145, %12072, %12071, %11888, %11887, %11869, %11868, %11850, %11849, %11812, %11813, %11830, %11831, %11758, %11759, %11776, %11777, %11723, %11722, %11664, %11663, %11645, %11641, %11621, %11617, %11499, %11498, %11480, %11479, %11447, %11446, %11428, %11427, %11368, %11367, %11024, %11023, %10958, %10957, %10946, %10945, %10898, %10897, %10891, %10890, %10864, %10863, %10784, %10783, %10761, %10760, %10678, %10674, %10658, %10266, %10265, %10226, %10225, %10213, %10212, %10141, %10140, %10078, %10077, %9999, %9998, %9907, %9906, %9845, %9843, %9697, %9685, %9672, %9660, %9647, %9635, %9622, %9620, %9509, %9507, %9269, %9262, %9047, %9040, %8929, %8922, %8732, %8725, %8614, %8612, %8501, %8494, %8383, %8376, %8271, %8270, %8228, %8237, %8164, %8173, %8100, %8109, %8036, %8045, %7874, %7925, %7924, %7815, %7866, %7865, %7756, %7807, %7806, %7741, %7744, %7710, %7709, %7585, %7636, %7635, %7526, %7577, %7576, %7467, %7518, %7517, %7452, %7455, %7421, %7420, %7408, %7407, %7258, %7257, %6430, %6424, %6405, %6404, %6392, %6391, %5265, %5264, %5252, %5251, %5115, %5109, %5014, %5013, %4976, %4975, %4695, %4694, %4682, %4681, %3793, %3792, %670, %659, %19893, %19928, %19925, %19839, %19874, %19871, %19785, %19820, %19817, %19731, %19766, %19763, %19677, %19712, %19709, %19623, %19658, %19655, %19569, %19604, %19601, %19515, %19550, %19547, %19256, %19299, %19291, %18909, %18952, %18944, %18031, %17963, %17895, %16203, %16236, %16237, %16235, %16096, %16129, %16130, %16128, %15989, %16022, %16023, %16021, %15882, %15915, %15916, %15914, %15058, %15044, %15084, %15076, %14614, %14600, %14640, %14632, %14552, %14538, %14578, %14570, %14034, %14020, %14060, %14052, %13563, %13549, %13589, %13581, %13501, %13487, %13527, %13519, %13084, %13070, %13110, %13102, %12723, %12709, %12749, %12741, %10899, %10702, %10794, %10407, %10406, %10410, %10416, %10415, %10408, %10434, %10433, %10387, %10389, %10379, %9973, %6545, %18101, %18106, %17378, %17388, %17349, %17359, %17320, %17330, %17173, %17183, %17080, %17090, %17051, %17061, %17022, %17032, %16993, %17003, %16850, %16860, %16795, %16805, %16734, %16744, %16705, %16715, %16676, %16686, %16647, %16657, %16618, %16628, %16589, %16599, %16560, %16570, %16264, %16274, %15307, %15317, %15214, %15224, %15185, %15195, %15156, %15166, %15127, %15137, %15098, %15108, %14947, %14957, %14886, %14896, %14857, %14867, %14828, %14838, %14799, %14809, %14770, %14780, %14741, %14751, %14712, %14722, %14683, %14693, %14654, %14664, %14234, %14244, %14103, %14113, %14074, %14084, %13812, %13822, %13748, %13758, %13719, %13729, %13690, %13700, %13661, %13671, %13632, %13642, %13603, %13613, %12849, %12859, %12820, %12830, %12553, %12563, %12524, %12534, %12445, %12455, %12416, %12426, %12344, %12280, %12256, %12269, %12224, %12237, %12192, %12205, %12160, %12173, %11989, %11999, %11960, %11970, %11931, %11941, %11902, %11912, %11374, %11314, %11290, %11303, %11258, %11271, %11226, %11239, %11194, %11207, %11125, %11135, %11096, %11106, %11067, %11077, %11038, %11048, %10243, %10161, %10172, %10118, %10101, %10022, %9930, %9094, %9143, %9134, %7364, %7367, %7325, %7328, %7278, %7289, %7235, %7208, %7211, %7170, %7173, %7132, %7135, %7094, %7097, %7056, %7059, %7018, %7021, %6980, %6983, %6942, %6945, %6772, %6658, %6549, %6496, %6499, %6458, %6461, %5387, %5435, %5432, %5328, %5376, %5373, %5269, %5317, %5314, %5215, %5181, %5184, %5143, %5146, %5080, %5083, %5042, %5045, %4817, %4865, %4862, %4758, %4806, %4803, %4699, %4747, %4744, %4645, %4599, %4602, %4561, %4564, %4523, %4526, %4485, %4488, %4447, %4450, %4409, %4412, %4357, %4349, %4378, %4377, %4299, %4291, %4320, %4319, %4241, %4233, %4262, %4261, %4183, %4175, %4204, %4203, %4125, %4117, %4146, %4145, %4067, %4059, %4088, %4087, %4009, %4001, %4030, %4029, %3951, %3943, %3972, %3971, %3893, %3885, %3914, %3913, %3835, %3827, %3856, %3855, %3686, %3794, %3726, %3742, %3570, %3672, %3675, %3610, %3626, %3454, %3556, %3559, %3494, %3510, %3338, %3440, %3443, %3378, %3394, %3325, %3328, %3300, %3303, %3275, %3278, %3250, %3253, %3181, %3184, %3151, %3154, %3073, %3058, %3123, %3120, %2965, %2950, %3015, %3012, %2816, %2904, %2907, %2842, %2858, %2673, %2761, %2764, %2699, %2715, %2530, %2618, %2621, %2556, %2572, %2387, %2475, %2478, %2413, %2429, %2244, %2332, %2335, %2270, %2286, %2101, %2189, %2192, %2127, %2143, %1958, %2046, %2049, %1984, %2000, %1815, %1903, %1906, %1841, %1857, %1658, %1760, %1763, %1698, %1714, %1542, %1644, %1647, %1582, %1598, %1426, %1528, %1531, %1466, %1482, %1310, %1412, %1415, %1350, %1366, %1194, %1296, %1299, %1234, %1250, %1078, %1180, %1183, %1118, %1134, %732, %733, %2, %23384, %23326, %23268, %23210, %23115, %23061, %23007, %22953, %22899, %22845, %22791, %22737, %22683, %22629, %22575, %22521, %22467, %22413, %22359, %22305, %22289, %22273, %22257, %22241, %22227, %22213, %22190, %22167, %22113, %22059, %22005, %21951, %21897, %21843, %21789, %21735, %21681, %21627, %21573, %21519, %21465, %21411, %21357, %21303, %21249, %21195, %21141, %21087, %21033, %20979, %20925, %20871, %20817, %20801, %20785, %20769, %20753, %20737, %20723, %20700, %20677, %20654, %20631, %20630, %20598, %20566, %20534, %20502, %18602, %18573, %18508, %17896, %17454, %17409, %17394, %17287, %17267, %17247, %17227, %15822, %15793, %15694, %15480, %15462, %15448, %15428, %15408, %15388, %15368, %15367, %15008, %14466, %14446, %14282, %14268, %14250, %13984, %13415, %13317, %13244, %13210, %13171, %13151, %13131, %13111, %13029, %13009, %12654, %12639, %11543, %11528, %11514, %11500, %11448, %11161, %11141, %10980, %10959, %10446, %10440, %10347, %9750, %9354, %8817, %7988, %6913, %6847, %6353, %6347, %6345, %6140, %5985, %5780, %5626, %5502, %4932, %4616, %4610, %3224, %3213, %3202, %3191, %1072, %1069, %1066, %1063, %1060, %1057, %1054, %1051, %1048, %1045, %1042, %1039, %1036, %1033, %1030, %1027, %1024, %1021, %1018, %1015, %1012, %1006, %932, %930, %920, %916, %819, %782, %781, %715, %709, %705, %703, %697, %687, %679, %678, %677, %658, %572, %551, %539, %532, %509, %479, %454, %414, %374, %315, %311
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %271) #11
  ret i32 0
}

declare void @_ZN2v88internal14TurboAssembler4CallENS0_6HandleINS0_4CodeEEENS0_9RelocInfo4ModeE(%"class.v8::internal::TurboAssembler"*, i64*, i8 signext) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler13RetpolineCallENS0_8RegisterE(%"class.v8::internal::TurboAssembler"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler4callENS0_8RegisterE(%"class.v8::internal::Assembler"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal8compiler13CodeGenerator18RecordCallPositionEPNS1_11InstructionE(%"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::Instruction"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"*, %"class.v8::internal::compiler::InstructionOperand"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::compiler::Constant", align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 7
  %7 = icmp eq i64 %6, 3
  %8 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperandConverter", %"class.v8::internal::compiler::InstructionOperandConverter"* %0, i64 0, i32 0
  %9 = load %"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::CodeGenerator"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %9, i64 0, i32 5
  %11 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %10, align 8
  br i1 %7, label %12, label %47

12:                                               ; preds = %2
  %13 = bitcast %"class.v8::internal::compiler::Constant"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13)
  %14 = lshr i64 %5, 3
  %15 = trunc i64 %14 to i32
  %16 = and i32 %15, 3
  switch i32 %16, label %41 [
    i32 0, label %17
    i32 1, label %20
    i32 2, label %25
    i32 3, label %35
  ]

17:                                               ; preds = %12
  %18 = lshr i64 %5, 32
  %19 = trunc i64 %18 to i32
  call void @_ZN2v88internal8compiler8ConstantC1Ei(%"class.v8::internal::compiler::Constant"* nonnull %3, i32 %19) #11
  br label %42

20:                                               ; preds = %12
  %21 = ashr i64 %5, 32
  %22 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %3, i64 0, i32 0
  store i32 1, i32* %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %3, i64 0, i32 1
  store i8 0, i8* %23, align 4
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %3, i64 0, i32 2
  store i64 %21, i64* %24, align 8
  br label %42

25:                                               ; preds = %12
  %26 = ashr i64 %5, 32
  %27 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %11, i64 0, i32 7, i32 0, i32 0, i32 0
  %28 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %28, i64 %26, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %3, i64 0, i32 0
  store i32 7, i32* %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %3, i64 0, i32 1
  store i8 0, i8* %32, align 4
  %33 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %3, i64 0, i32 2
  %34 = sext i32 %30 to i64
  store i64 %34, i64* %33, align 8
  br label %42

35:                                               ; preds = %12
  %36 = ashr i64 %5, 32
  %37 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %11, i64 0, i32 6, i32 0, i32 0, i32 0
  %38 = load %"class.v8::internal::compiler::Constant"*, %"class.v8::internal::compiler::Constant"** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %38, i64 %36
  %40 = bitcast %"class.v8::internal::compiler::Constant"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %40, i64 16, i1 false) #11
  br label %42

41:                                               ; preds = %12
  unreachable

42:                                               ; preds = %17, %20, %25, %35
  %43 = bitcast %"class.v8::internal::compiler::Constant"* %3 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %3, i64 0, i32 2
  %46 = load i64, i64* %45, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13)
  br label %84

47:                                               ; preds = %2
  %48 = lshr i64 %5, 3
  %49 = trunc i64 %48 to i32
  %50 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %11, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %51 = bitcast %"class.std::__1::__tree_end_node"* %50 to %"class.std::__1::__tree_node"**
  %52 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %51, align 8
  %53 = icmp eq %"class.std::__1::__tree_node"* %52, null
  br i1 %53, label %75, label %54

54:                                               ; preds = %47, %54
  %55 = phi %"class.std::__1::__tree_end_node"* [ %65, %54 ], [ %50, %47 ]
  %56 = phi %"class.std::__1::__tree_node"* [ %66, %54 ], [ %52, %47 ]
  %57 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %56, i64 0, i32 1, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp slt i32 %58, %49
  %60 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %56, i64 0, i32 0, i32 1
  %61 = bitcast %"class.std::__1::__tree_node_base"** %60 to %"class.std::__1::__tree_node"**
  %62 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %56, i64 0, i32 0, i32 0
  %63 = bitcast %"class.std::__1::__tree_node"* %56 to %"class.std::__1::__tree_node"**
  %64 = select i1 %59, %"class.std::__1::__tree_node"** %61, %"class.std::__1::__tree_node"** %63
  %65 = select i1 %59, %"class.std::__1::__tree_end_node"* %55, %"class.std::__1::__tree_end_node"* %62
  %66 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %64, align 8
  %67 = icmp eq %"class.std::__1::__tree_node"* %66, null
  br i1 %67, label %68, label %54

68:                                               ; preds = %54
  %69 = icmp eq %"class.std::__1::__tree_end_node"* %65, %50
  br i1 %69, label %75, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %65, i64 4
  %72 = bitcast %"class.std::__1::__tree_end_node"* %71 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = icmp sgt i32 %73, %49
  br i1 %74, label %75, label %76

75:                                               ; preds = %70, %68, %47
  br label %76

76:                                               ; preds = %70, %75
  %77 = phi %"class.std::__1::__tree_end_node"* [ %50, %75 ], [ %65, %70 ]
  %78 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %77, i64 5
  %79 = bitcast %"class.std::__1::__tree_end_node"* %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %77, i64 6
  %82 = bitcast %"class.std::__1::__tree_end_node"* %81 to i64*
  %83 = load i64, i64* %82, align 8
  br label %84

84:                                               ; preds = %76, %42
  %85 = phi i64 [ %44, %42 ], [ %80, %76 ]
  %86 = phi i64 [ %46, %42 ], [ %83, %76 ]
  %87 = insertvalue { i64, i64 } undef, i64 %85, 0
  %88 = insertvalue { i64, i64 } %87, i64 %86, 1
  ret { i64, i64 } %88
}

declare i32 @_ZNK2v88internal8compiler13CodeGenerator21DetermineStubCallModeEv(%"class.v8::internal::compiler::CodeGenerator"*) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler9near_callElNS0_9RelocInfo4ModeE(%"class.v8::internal::Assembler"*, i64, i8 signext) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler13RetpolineCallEmNS0_9RelocInfo4ModeE(%"class.v8::internal::TurboAssembler"*, i64, i8 signext) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler4CallEmNS0_9RelocInfo4ModeE(%"class.v8::internal::TurboAssembler"*, i64, i8 signext) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler8near_jmpElNS0_9RelocInfo4ModeE(%"class.v8::internal::Assembler"*, i64, i8 signext) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler3jmpENS0_8RegisterE(%"class.v8::internal::Assembler"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler13RetpolineJumpENS0_8RegisterE(%"class.v8::internal::TurboAssembler"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal8compiler16FrameAccessState23SetFrameAccessToDefaultEv(%"class.v8::internal::compiler::FrameAccessState"*) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler20PrepareCallCFunctionEi(%"class.v8::internal::TurboAssembler"*, i32) local_unnamed_addr #1

declare i32 @_ZN2v88internal14TurboAssembler15PushCallerSavedENS0_14SaveFPRegsModeENS0_8RegisterES3_S3_(%"class.v8::internal::TurboAssembler"*, i32, i32, i32, i32) local_unnamed_addr #1

declare i32 @_ZN2v88internal14TurboAssembler14PopCallerSavedENS0_14SaveFPRegsModeENS0_8RegisterES3_S3_(%"class.v8::internal::TurboAssembler"*, i32, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler13CallCFunctionENS0_17ExternalReferenceEi(%"class.v8::internal::TurboAssembler"*, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler13CallCFunctionENS0_8RegisterEi(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"*, %"class.v8::internal::Label"*) local_unnamed_addr #1

declare void @_ZN2v88internal8compiler13CodeGenerator15RecordSafepointEPNS1_12ReferenceMapE(%"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::ReferenceMap"*) local_unnamed_addr #1

declare i32 @_ZNK2v88internal14TurboAssembler31RequiredStackSizeForCallerSavedENS0_14SaveFPRegsModeENS0_8RegisterES3_S3_(%"class.v8::internal::TurboAssembler"*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13CodeGenerator16AssembleArchJumpENS1_9RpoNumberE(%"class.v8::internal::compiler::CodeGenerator"*, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZNK2v88internal8compiler13CodeGenerator21IsNextInAssemblyOrderENS1_9RpoNumberE(%"class.v8::internal::compiler::CodeGenerator"* %0, i32 %1) #11
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 8
  %7 = load %"class.v8::internal::Label"*, %"class.v8::internal::Label"** %6, align 8
  %8 = sext i32 %1 to i64
  %9 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %7, i64 %8
  tail call void @_ZN2v88internal9Assembler3jmpEPNS0_5LabelENS2_8DistanceE(%"class.v8::internal::Assembler"* %5, %"class.v8::internal::Label"* %9, i32 1) #11
  br label %10

10:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13CodeGenerator30AssembleArchBinarySearchSwitchEPNS1_11InstructionE(%"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::X64OperandConverter", align 8
  %4 = alloca %"class.std::__1::vector.920", align 8
  %5 = bitcast %"class.v8::internal::compiler::X64OperandConverter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %3, i64 0, i32 0, i32 0
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %3, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::Instruction"* %1, %"class.v8::internal::compiler::Instruction"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %3, i64 0, i32 0
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 255
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = ashr i64 %14, 35
  %16 = trunc i64 %15 to i32
  %17 = bitcast %"class.std::__1::vector.920"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #11
  %18 = and i32 %10, 16776960
  %19 = icmp ugt i32 %18, 512
  br i1 %19, label %20, label %29

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 8
  %22 = getelementptr inbounds %"class.std::__1::vector.920", %"class.std::__1::vector.920"* %4, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.std::__1::vector.920", %"class.std::__1::vector.920"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast %"struct.std::__1::pair.922"** %22 to i64*
  %25 = bitcast %"class.std::__1::vector.920"* %4 to i64*
  %26 = bitcast %"struct.std::__1::pair.922"** %23 to i64*
  br label %52

27:                                               ; preds = %137
  %28 = zext i32 %147 to i64
  br label %29

29:                                               ; preds = %27, %2
  %30 = phi %"class.v8::internal::compiler::Instruction"* [ %1, %2 ], [ %144, %27 ]
  %31 = phi i64 [ %12, %2 ], [ %28, %27 ]
  %32 = add nuw nsw i64 %31, 1
  %33 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %30, i64 0, i32 5, i64 %32
  %34 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %8, %"class.v8::internal::compiler::InstructionOperand"* %33) #11
  %35 = extractvalue { i64, i64 } %34, 1
  %36 = trunc i64 %35 to i32
  %37 = getelementptr inbounds %"class.std::__1::vector.920", %"class.std::__1::vector.920"* %4, i64 0, i32 0, i32 0
  %38 = load %"struct.std::__1::pair.922"*, %"struct.std::__1::pair.922"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::vector.920", %"class.std::__1::vector.920"* %4, i64 0, i32 0, i32 1
  %40 = bitcast %"struct.std::__1::pair.922"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = ptrtoint %"struct.std::__1::pair.922"* %38 to i64
  %43 = sub i64 %41, %42
  %44 = ashr exact i64 %43, 4
  %45 = getelementptr inbounds %"struct.std::__1::pair.922", %"struct.std::__1::pair.922"* %38, i64 %44
  call void @_ZN2v88internal8compiler13CodeGenerator35AssembleArchBinarySearchSwitchRangeENS0_8RegisterENS1_9RpoNumberEPNSt3__14pairIiPNS0_5LabelEEESA_(%"class.v8::internal::compiler::CodeGenerator"* %0, i32 %16, i32 %36, %"struct.std::__1::pair.922"* %38, %"struct.std::__1::pair.922"* %45) #11
  %46 = load %"struct.std::__1::pair.922"*, %"struct.std::__1::pair.922"** %37, align 8
  %47 = icmp eq %"struct.std::__1::pair.922"* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %29
  %49 = ptrtoint %"struct.std::__1::pair.922"* %46 to i64
  store i64 %49, i64* %40, align 8
  %50 = bitcast %"struct.std::__1::pair.922"* %46 to i8*
  call void @_ZdlPv(i8* %50) #13
  br label %51

51:                                               ; preds = %29, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  ret void

52:                                               ; preds = %149, %20
  %53 = phi i64 [ 0, %20 ], [ %152, %149 ]
  %54 = phi %"struct.std::__1::pair.922"* [ null, %20 ], [ %151, %149 ]
  %55 = phi %"struct.std::__1::pair.922"* [ null, %20 ], [ %150, %149 ]
  %56 = phi i64 [ %12, %20 ], [ %148, %149 ]
  %57 = phi %"class.v8::internal::compiler::Instruction"* [ %1, %20 ], [ %144, %149 ]
  %58 = phi i64 [ 2, %20 ], [ %138, %149 ]
  %59 = add nuw i64 %56, %58
  %60 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %57, i64 0, i32 5, i64 %59
  %61 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %8, %"class.v8::internal::compiler::InstructionOperand"* %60) #11
  %62 = extractvalue { i64, i64 } %61, 1
  %63 = trunc i64 %62 to i32
  %64 = or i64 %58, 1
  %65 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %7, align 8
  %66 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %65, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = and i32 %67, 255
  %69 = zext i32 %68 to i64
  %70 = add nuw i64 %64, %69
  %71 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %65, i64 0, i32 5, i64 %70
  %72 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %8, %"class.v8::internal::compiler::InstructionOperand"* %71) #11
  %73 = extractvalue { i64, i64 } %72, 1
  %74 = load %"class.v8::internal::Label"*, %"class.v8::internal::Label"** %21, align 8
  %75 = shl i64 %73, 32
  %76 = ashr exact i64 %75, 32
  %77 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %74, i64 %76
  %78 = ptrtoint %"class.v8::internal::Label"* %77 to i64
  %79 = icmp ult %"struct.std::__1::pair.922"* %55, %54
  %80 = ptrtoint %"struct.std::__1::pair.922"* %54 to i64
  br i1 %79, label %81, label %87

81:                                               ; preds = %52
  %82 = getelementptr inbounds %"struct.std::__1::pair.922", %"struct.std::__1::pair.922"* %55, i64 0, i32 0
  store i32 %63, i32* %82, align 8
  %83 = getelementptr inbounds %"struct.std::__1::pair.922", %"struct.std::__1::pair.922"* %55, i64 0, i32 1
  %84 = bitcast %"class.v8::internal::Label"** %83 to i64*
  store i64 %78, i64* %84, align 8
  %85 = getelementptr inbounds %"struct.std::__1::pair.922", %"struct.std::__1::pair.922"* %55, i64 1
  %86 = ptrtoint %"struct.std::__1::pair.922"* %85 to i64
  store i64 %86, i64* %24, align 8
  br label %137

87:                                               ; preds = %52
  %88 = ptrtoint %"struct.std::__1::pair.922"* %55 to i64
  %89 = load i64, i64* %25, align 8
  %90 = sub i64 %88, %89
  %91 = ashr exact i64 %90, 4
  %92 = add nsw i64 %91, 1
  %93 = icmp ugt i64 %92, 1152921504606846975
  br i1 %93, label %94, label %96

94:                                               ; preds = %87
  %95 = bitcast %"class.std::__1::vector.920"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %95) #12
  unreachable

96:                                               ; preds = %87
  %97 = sub i64 %80, %89
  %98 = ashr exact i64 %97, 4
  %99 = icmp ult i64 %98, 576460752303423487
  br i1 %99, label %100, label %108

100:                                              ; preds = %96
  %101 = ashr exact i64 %97, 3
  %102 = icmp ult i64 %101, %92
  %103 = select i1 %102, i64 %92, i64 %101
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %113, label %105

105:                                              ; preds = %100
  %106 = icmp ugt i64 %103, 1152921504606846975
  br i1 %106, label %107, label %108

107:                                              ; preds = %105
  call void @abort() #12
  unreachable

108:                                              ; preds = %105, %96
  %109 = phi i64 [ %103, %105 ], [ 1152921504606846975, %96 ]
  %110 = shl i64 %109, 4
  %111 = call i8* @_Znwm(i64 %110) #13
  %112 = bitcast i8* %111 to %"struct.std::__1::pair.922"*
  br label %113

113:                                              ; preds = %108, %100
  %114 = phi i64 [ %109, %108 ], [ 0, %100 ]
  %115 = phi %"struct.std::__1::pair.922"* [ %112, %108 ], [ null, %100 ]
  %116 = getelementptr inbounds %"struct.std::__1::pair.922", %"struct.std::__1::pair.922"* %115, i64 %91
  %117 = getelementptr inbounds %"struct.std::__1::pair.922", %"struct.std::__1::pair.922"* %115, i64 %114
  %118 = ptrtoint %"struct.std::__1::pair.922"* %117 to i64
  %119 = getelementptr inbounds %"struct.std::__1::pair.922", %"struct.std::__1::pair.922"* %116, i64 0, i32 0
  store i32 %63, i32* %119, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair.922", %"struct.std::__1::pair.922"* %115, i64 %91, i32 1
  %121 = bitcast %"class.v8::internal::Label"** %120 to i64*
  store i64 %78, i64* %121, align 8
  %122 = getelementptr inbounds %"struct.std::__1::pair.922", %"struct.std::__1::pair.922"* %116, i64 1
  %123 = ptrtoint %"struct.std::__1::pair.922"* %122 to i64
  %124 = sub i64 %53, %89
  %125 = ashr exact i64 %124, 4
  %126 = sub nsw i64 0, %125
  %127 = getelementptr inbounds %"struct.std::__1::pair.922", %"struct.std::__1::pair.922"* %116, i64 %126
  %128 = ptrtoint %"struct.std::__1::pair.922"* %127 to i64
  %129 = icmp sgt i64 %124, 0
  br i1 %129, label %130, label %133

130:                                              ; preds = %113
  %131 = bitcast %"struct.std::__1::pair.922"* %127 to i8*
  %132 = inttoptr i64 %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 %124, i1 false) #11
  br label %133

133:                                              ; preds = %130, %113
  store i64 %128, i64* %25, align 8
  store i64 %123, i64* %24, align 8
  store i64 %118, i64* %26, align 8
  %134 = icmp eq i64 %89, 0
  br i1 %134, label %137, label %135

135:                                              ; preds = %133
  %136 = inttoptr i64 %89 to i8*
  call void @_ZdlPv(i8* %136) #13
  br label %137

137:                                              ; preds = %81, %133, %135
  %138 = add nuw nsw i64 %58, 2
  %139 = load i32, i32* %9, align 4
  %140 = lshr i32 %139, 8
  %141 = and i32 %140, 65535
  %142 = zext i32 %141 to i64
  %143 = icmp ult i64 %138, %142
  %144 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %7, align 8
  %145 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %144, i64 0, i32 1
  %146 = load i32, i32* %145, align 4
  %147 = and i32 %146, 255
  %148 = zext i32 %147 to i64
  br i1 %143, label %149, label %27

149:                                              ; preds = %137
  %150 = load %"struct.std::__1::pair.922"*, %"struct.std::__1::pair.922"** %22, align 8
  %151 = load %"struct.std::__1::pair.922"*, %"struct.std::__1::pair.922"** %23, align 8
  %152 = ptrtoint %"struct.std::__1::pair.922"* %150 to i64
  br label %52
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13CodeGenerator23AssembleArchTableSwitchEPNS1_11InstructionE(%"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::X64OperandConverter", align 8
  %4 = alloca %"struct.v8::internal::Operand::Data", align 8
  %5 = bitcast %"class.v8::internal::compiler::X64OperandConverter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %3, i64 0, i32 0, i32 0
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %3, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::Instruction"* %1, %"class.v8::internal::compiler::Instruction"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %3, i64 0, i32 0
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 255
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %12, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = ashr i64 %14, 35
  %16 = trunc i64 %15 to i32
  %17 = lshr i32 %10, 8
  %18 = and i32 %17, 65535
  %19 = add nsw i32 %18, -2
  %20 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %21 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %20, align 8
  %22 = sext i32 %19 to i64
  %23 = shl nsw i64 %22, 3
  %24 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %21, i64 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %21, i64 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %27, %25
  %29 = icmp ugt i64 %23, %28
  br i1 %29, label %30, label %32, !prof !3

30:                                               ; preds = %2
  %31 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %21, i64 %23) #11
  br label %34

32:                                               ; preds = %2
  %33 = add i64 %23, %25
  store i64 %33, i64* %24, align 8
  br label %34

34:                                               ; preds = %30, %32
  %35 = phi i64 [ %31, %30 ], [ %25, %32 ]
  %36 = inttoptr i64 %35 to %"class.v8::internal::Label"**
  %37 = icmp sgt i32 %19, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  %39 = zext i32 %19 to i64
  br label %56

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 8
  %42 = zext i32 %19 to i64
  %43 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = and i32 %44, 255
  %46 = add nuw nsw i32 %45, 2
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %47
  %49 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %8, %"class.v8::internal::compiler::InstructionOperand"* %48) #11
  %50 = extractvalue { i64, i64 } %49, 1
  %51 = load %"class.v8::internal::Label"*, %"class.v8::internal::Label"** %41, align 8
  %52 = shl i64 %50, 32
  %53 = ashr exact i64 %52, 32
  %54 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %51, i64 %53
  store %"class.v8::internal::Label"* %54, %"class.v8::internal::Label"** %36, align 8
  %55 = icmp eq i32 %19, 1
  br i1 %55, label %56, label %92

56:                                               ; preds = %92, %40, %38
  %57 = phi i64 [ %39, %38 ], [ %42, %40 ], [ %42, %92 ]
  %58 = call %"class.v8::internal::Label"* @_ZN2v88internal8compiler13CodeGenerator12AddJumpTableEPPNS0_5LabelEm(%"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::Label"** %36, i64 %22) #11
  %59 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %59, i8 zeroext 7, i32 %16, i64 %57, i32 4) #11
  %60 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %7, align 8
  %61 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %60, i64 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = and i32 %62, 255
  %64 = add nuw nsw i32 %63, 1
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %60, i64 0, i32 5, i64 %65
  %67 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %8, %"class.v8::internal::compiler::InstructionOperand"* %66) #11
  %68 = extractvalue { i64, i64 } %67, 1
  %69 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 8
  %70 = load %"class.v8::internal::Label"*, %"class.v8::internal::Label"** %69, align 8
  %71 = shl i64 %68, 32
  %72 = ashr exact i64 %71, 32
  %73 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %70, i64 %72
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %59, i32 3, %"class.v8::internal::Label"* %73, i32 1) #11
  %74 = getelementptr inbounds %"struct.v8::internal::Operand::Data", %"struct.v8::internal::Operand::Data"* %4, i64 0, i32 0
  store i8 0, i8* %74, align 8
  %75 = getelementptr inbounds %"struct.v8::internal::Operand::Data", %"struct.v8::internal::Operand::Data"* %4, i64 0, i32 3
  store i8 0, i8* %75, align 1
  %76 = getelementptr inbounds %"struct.v8::internal::Operand::Data", %"struct.v8::internal::Operand::Data"* %4, i64 0, i32 1, i64 0
  store i8 5, i8* %76, align 1
  %77 = ptrtoint %"class.v8::internal::Label"* %58 to i64
  %78 = getelementptr inbounds %"struct.v8::internal::Operand::Data", %"struct.v8::internal::Operand::Data"* %4, i64 0, i32 1, i64 1
  %79 = bitcast i8* %78 to i64*
  store i64 %77, i64* %79, align 2
  %80 = getelementptr inbounds %"struct.v8::internal::Operand::Data", %"struct.v8::internal::Operand::Data"* %4, i64 0, i32 2
  store i8 9, i8* %80, align 2
  %81 = bitcast %"struct.v8::internal::Operand::Data"* %4 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds %"struct.v8::internal::Operand::Data", %"struct.v8::internal::Operand::Data"* %4, i64 0, i32 1, i64 7
  %84 = bitcast i8* %83 to i32*
  %85 = load i32, i32* %84, align 8
  call void @_ZN2v88internal9Assembler8emit_leaENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %59, i32 10, i64 %82, i32 %85, i32 8) #11
  %86 = lshr i64 %15, 2
  %87 = shl nsw i64 %15, 19
  %88 = and i64 %87, 3670016
  %89 = and i64 %86, 254
  %90 = or i64 %89, %88
  %91 = or i64 %90, 12715009
  call void @_ZN2v88internal9Assembler3jmpENS0_7OperandE(%"class.v8::internal::Assembler"* %59, i64 %91, i32 131072) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  ret void

92:                                               ; preds = %40, %92
  %93 = phi i64 [ %110, %92 ], [ 1, %40 ]
  %94 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %7, align 8
  %95 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %94, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = and i32 %96, 255
  %98 = trunc i64 %93 to i32
  %99 = add i32 %98, 2
  %100 = add nuw i32 %99, %97
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %94, i64 0, i32 5, i64 %101
  %103 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %8, %"class.v8::internal::compiler::InstructionOperand"* %102) #11
  %104 = extractvalue { i64, i64 } %103, 1
  %105 = load %"class.v8::internal::Label"*, %"class.v8::internal::Label"** %41, align 8
  %106 = shl i64 %104, 32
  %107 = ashr exact i64 %106, 32
  %108 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %105, i64 %107
  %109 = getelementptr inbounds %"class.v8::internal::Label"*, %"class.v8::internal::Label"** %36, i64 %93
  store %"class.v8::internal::Label"* %108, %"class.v8::internal::Label"** %109, align 8
  %110 = add nuw nsw i64 %93, 1
  %111 = icmp eq i64 %110, %42
  br i1 %111, label %56, label %92
}

declare void @_ZN2v88internal9Assembler4int3Ev(%"class.v8::internal::Assembler"*) local_unnamed_addr #1

declare %"class.v8::internal::compiler::DeoptimizationExit"* @_ZN2v88internal8compiler13CodeGenerator16BuildTranslationEPNS1_11InstructionEimmNS1_23OutputFrameStateCombineE(%"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::Instruction"*, i32, i64, i64, i64) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler3jmpEPNS0_5LabelENS2_8DistanceE(%"class.v8::internal::Assembler"*, %"class.v8::internal::Label"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13CodeGenerator14AssembleReturnEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::InstructionOperand"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::X64OperandConverter", align 8
  %4 = alloca %"class.v8::internal::Label", align 4
  %5 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 4
  %6 = load %"class.v8::internal::compiler::Linkage"*, %"class.v8::internal::compiler::Linkage"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Linkage", %"class.v8::internal::compiler::Linkage"* %6, i64 0, i32 0
  %8 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %8, i64 0, i32 8
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %32, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 3
  %14 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %14, i64 0, i32 0
  %16 = load %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::Frame"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %16, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %22 = shl nsw i32 %18, 3
  %23 = zext i32 %22 to i64
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %21, i8 zeroext 0, i32 4, i64 %23, i32 8) #11
  br label %24

24:                                               ; preds = %12, %20
  %25 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %26 = and i32 %10, 1
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %24
  tail call void @_ZN2v88internal9Assembler4popqENS0_8RegisterE(%"class.v8::internal::Assembler"* %25, i32 0) #11
  br label %29

29:                                               ; preds = %24, %28
  %30 = and i32 %10, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %217, label %216

32:                                               ; preds = %269, %272, %2
  %33 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %8, i64 0, i32 9
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %85, label %36

36:                                               ; preds = %32
  %37 = tail call i32 @llvm.ctpop.i32(i32 %34) #11, !range !5
  %38 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %42

39:                                               ; preds = %79
  %40 = shl nuw nsw i32 %37, 4
  %41 = zext i32 %40 to i64
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %38, i8 zeroext 0, i32 4, i64 %41, i32 8) #11
  br label %85

42:                                               ; preds = %79, %36
  %43 = phi i32 [ 0, %36 ], [ %82, %79 ]
  %44 = phi i32 [ 0, %36 ], [ %83, %79 ]
  %45 = phi i24 [ undef, %36 ], [ %81, %79 ]
  %46 = phi i8 [ undef, %36 ], [ %80, %79 ]
  %47 = shl i32 1, %44
  %48 = and i32 %47, %34
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %79, label %50

50:                                               ; preds = %42
  %51 = shl nsw i32 %43, 4
  %52 = icmp eq i32 %43, 0
  br i1 %52, label %61, label %53

53:                                               ; preds = %50
  %54 = sext i32 %51 to i64
  %55 = add nsw i64 %54, 128
  %56 = icmp ult i64 %55, 256
  %57 = trunc i32 %51 to i8
  br i1 %56, label %61, label %58

58:                                               ; preds = %53
  %59 = lshr i32 %43, 4
  %60 = trunc i32 %59 to i24
  br label %61

61:                                               ; preds = %53, %50, %58
  %62 = phi i64 [ 2393088, %58 ], [ 2360320, %50 ], [ 2376704, %53 ]
  %63 = phi i32 [ 393216, %58 ], [ 131072, %50 ], [ 196608, %53 ]
  %64 = phi i8 [ %57, %58 ], [ %46, %50 ], [ %57, %53 ]
  %65 = phi i24 [ %60, %58 ], [ %45, %50 ], [ %45, %53 ]
  %66 = zext i24 %65 to i64
  %67 = shl nuw nsw i64 %66, 8
  %68 = zext i8 %64 to i64
  %69 = or i64 %67, %68
  %70 = shl nuw nsw i64 %69, 24
  %71 = or i64 %62, %70
  %72 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %73 = and i32 %72, 32
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75

75:                                               ; preds = %61
  tail call void @_ZN2v88internal9Assembler7vmovdquENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %38, i32 %44, i64 %71, i32 %63) #11
  br label %77

76:                                               ; preds = %61
  tail call void @_ZN2v88internal9Assembler6movupsENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %38, i32 %44, i64 %71, i32 %63) #11
  br label %77

77:                                               ; preds = %75, %76
  %78 = add nsw i32 %43, 1
  br label %79

79:                                               ; preds = %42, %77
  %80 = phi i8 [ %46, %42 ], [ %64, %77 ]
  %81 = phi i24 [ %45, %42 ], [ %65, %77 ]
  %82 = phi i32 [ %43, %42 ], [ %78, %77 ]
  %83 = add nuw nsw i32 %44, 1
  %84 = icmp eq i32 %83, 16
  br i1 %84, label %39, label %42

85:                                               ; preds = %32, %39
  %86 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6
  %87 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 3
  store i8 1, i8* %87, align 1
  %88 = bitcast %"class.v8::internal::compiler::X64OperandConverter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #11
  %89 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %3, i64 0, i32 0, i32 0
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %89, align 8
  %90 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %3, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::Instruction"* null, %"class.v8::internal::compiler::Instruction"** %90, align 8
  %91 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %8, i64 0, i32 5
  %92 = load i64, i64* %91, align 8
  %93 = trunc i64 %92 to i32
  %94 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 3
  %95 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %95, i64 0, i32 4
  %97 = load i8, i8* %96, align 8, !range !2
  %98 = icmp ne i8 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %85
  %100 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %8, i64 0, i32 0
  %101 = load i32, i32* %100, align 8
  br label %108

102:                                              ; preds = %85
  %103 = icmp ne i32 %93, 0
  %104 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %8, i64 0, i32 0
  %105 = load i32, i32* %104, align 8
  %106 = icmp eq i32 %105, 1
  %107 = and i1 %103, %106
  br label %108

108:                                              ; preds = %99, %102
  %109 = phi i32 [ %101, %99 ], [ %105, %102 ]
  %110 = phi i1 [ false, %99 ], [ %107, %102 ]
  %111 = icmp eq i32 %109, 2
  br i1 %111, label %112, label %122

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %114 = bitcast i8** %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %117 = bitcast i8** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = sub i64 %115, %118
  %120 = trunc i64 %119 to i32
  tail call void @_ZN2v88internal8compiler19UnwindingInfoWriter22MarkFrameDeconstructedEi(%"class.v8::internal::compiler::UnwindingInfoWriter"* %86, i32 %120) #11
  %121 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %121, i32 4, i32 5, i32 8) #11
  tail call void @_ZN2v88internal9Assembler4popqENS0_8RegisterE(%"class.v8::internal::Assembler"* %121, i32 5) #11
  br label %155

122:                                              ; preds = %108
  br i1 %98, label %123, label %155

123:                                              ; preds = %122
  %124 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 0, i32 0
  %125 = load i64, i64* %124, align 8
  %126 = and i64 %125, 7
  %127 = icmp eq i64 %126, 3
  br i1 %127, label %128, label %142

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %3, i64 0, i32 0
  %130 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %129, %"class.v8::internal::compiler::InstructionOperand"* %1)
  %131 = extractvalue { i64, i64 } %130, 1
  %132 = trunc i64 %131 to i32
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %142

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 9
  %136 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %135, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = icmp slt i32 %137, 0
  %139 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %138, label %140, label %141

140:                                              ; preds = %134
  call void @_ZN2v88internal9Assembler3jmpEPNS0_5LabelENS2_8DistanceE(%"class.v8::internal::Assembler"* %139, %"class.v8::internal::Label"* %135, i32 1) #11
  br label %215

141:                                              ; preds = %134
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %139, %"class.v8::internal::Label"* %135) #11
  br label %142

142:                                              ; preds = %123, %141, %128
  br i1 %110, label %143, label %145

143:                                              ; preds = %142
  %144 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %144, i32 1, i64 15222016, i32 131072, i32 8) #11
  br label %145

145:                                              ; preds = %143, %142
  %146 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %147 = bitcast i8** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %150 = bitcast i8** %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = sub i64 %148, %151
  %153 = trunc i64 %152 to i32
  call void @_ZN2v88internal8compiler19UnwindingInfoWriter22MarkFrameDeconstructedEi(%"class.v8::internal::compiler::UnwindingInfoWriter"* %86, i32 %153) #11
  %154 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %154, i32 4, i32 5, i32 8) #11
  call void @_ZN2v88internal9Assembler4popqENS0_8RegisterE(%"class.v8::internal::Assembler"* %154, i32 5) #11
  br label %155

155:                                              ; preds = %122, %145, %112
  br i1 %110, label %156, label %165

156:                                              ; preds = %155
  %157 = add i64 %92, 4294967295
  %158 = bitcast %"class.v8::internal::Label"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %158) #11
  %159 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %4, i64 0, i32 0
  store i32 0, i32* %159, align 4
  %160 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %4, i64 0, i32 1
  store i32 0, i32* %160, align 4
  %161 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %162 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %161, i64 0, i32 0, i32 0, i32 0
  %163 = and i64 %157, 4294967295
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %162, i8 zeroext 7, i32 1, i64 %163, i32 8) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %162, i32 15, %"class.v8::internal::Label"* nonnull %4, i32 0) #11
  %164 = shl nsw i32 %93, 3
  call void @_ZN2v88internal14TurboAssembler3RetEiNS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %161, i32 %164, i32 10) #11
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %162, %"class.v8::internal::Label"* nonnull %4) #11
  call void @_ZN2v88internal9Assembler4popqENS0_8RegisterE(%"class.v8::internal::Assembler"* %162, i32 10) #11
  call void @_ZN2v88internal9Assembler8emit_leaENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %162, i32 4, i64 147604480, i32 196608, i32 8) #11
  call void @_ZN2v88internal9Assembler5pushqENS0_8RegisterE(%"class.v8::internal::Assembler"* %162, i32 10) #11
  call void @_ZN2v88internal14TurboAssembler3RetEv(%"class.v8::internal::TurboAssembler"* %161) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %158) #11
  br label %215

165:                                              ; preds = %155
  %166 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 0, i32 0
  %167 = load i64, i64* %166, align 8
  %168 = and i64 %167, 7
  %169 = icmp eq i64 %168, 3
  br i1 %169, label %170, label %181

170:                                              ; preds = %165
  %171 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %3, i64 0, i32 0
  %172 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %171, %"class.v8::internal::compiler::InstructionOperand"* %1)
  %173 = extractvalue { i64, i64 } %172, 1
  %174 = trunc i64 %173 to i32
  %175 = add nsw i32 %174, %93
  %176 = icmp sgt i32 %175, -1
  br i1 %176, label %178, label %177, !prof !4

177:                                              ; preds = %170
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.7, i64 0, i64 0)) #12
  unreachable

178:                                              ; preds = %170
  %179 = shl nsw i32 %175, 3
  %180 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  call void @_ZN2v88internal14TurboAssembler3RetEiNS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %180, i32 %179, i32 10) #11
  br label %215

181:                                              ; preds = %165
  %182 = ashr i64 %167, 35
  %183 = trunc i64 %182 to i32
  %184 = icmp eq i32 %183, 10
  %185 = select i1 %184, %"class.v8::internal::Register"* bitcast ({ i32 }* @_ZN2v88internalL3rcxE to %"class.v8::internal::Register"*), %"class.v8::internal::Register"* bitcast ({ i32 }* @_ZN2v88internalL3r10E to %"class.v8::internal::Register"*)
  %186 = getelementptr inbounds %"class.v8::internal::Register", %"class.v8::internal::Register"* %185, i64 0, i32 0, i32 0
  %187 = load i32, i32* %186, align 4
  %188 = shl nsw i32 %93, 3
  %189 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %190 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %189, i64 0, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4popqENS0_8RegisterE(%"class.v8::internal::Assembler"* %190, i32 %187) #11
  %191 = lshr i64 %182, 2
  %192 = icmp eq i32 %93, 0
  br i1 %192, label %200, label %193

193:                                              ; preds = %181
  %194 = sext i32 %188 to i64
  %195 = add nsw i64 %194, 128
  %196 = icmp ult i64 %195, 256
  br i1 %196, label %200, label %197

197:                                              ; preds = %193
  %198 = lshr i32 %93, 5
  %199 = shl i32 %198, 8
  br label %200

200:                                              ; preds = %193, %181, %197
  %201 = phi i32 [ %199, %197 ], [ 0, %181 ], [ 0, %193 ]
  %202 = phi i32 [ 393216, %197 ], [ 131072, %181 ], [ 196608, %193 ]
  %203 = phi i64 [ 33792, %197 ], [ 1024, %181 ], [ 17408, %193 ]
  %204 = and i32 %188, 248
  %205 = or i32 %204, %201
  %206 = zext i32 %205 to i64
  %207 = shl nuw nsw i64 %206, 24
  %208 = shl nsw i64 %182, 19
  %209 = and i64 %208, 3670016
  %210 = and i64 %191, 254
  %211 = or i64 %209, %210
  %212 = or i64 %211, %203
  %213 = or i64 %212, %207
  %214 = or i64 %213, 12845056
  call void @_ZN2v88internal9Assembler8emit_leaENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %190, i32 4, i64 %214, i32 %202, i32 8) #11
  call void @_ZN2v88internal9Assembler5pushqENS0_8RegisterE(%"class.v8::internal::Assembler"* %190, i32 %187) #11
  call void @_ZN2v88internal14TurboAssembler3RetEv(%"class.v8::internal::TurboAssembler"* %189) #11
  br label %215

215:                                              ; preds = %156, %200, %178, %140
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #11
  ret void

216:                                              ; preds = %29
  tail call void @_ZN2v88internal9Assembler4popqENS0_8RegisterE(%"class.v8::internal::Assembler"* %25, i32 1) #11
  br label %217

217:                                              ; preds = %216, %29
  %218 = and i32 %10, 4
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %221, label %220

220:                                              ; preds = %217
  tail call void @_ZN2v88internal9Assembler4popqENS0_8RegisterE(%"class.v8::internal::Assembler"* %25, i32 2) #11
  br label %221

221:                                              ; preds = %220, %217
  %222 = and i32 %10, 8
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %225, label %224

224:                                              ; preds = %221
  tail call void @_ZN2v88internal9Assembler4popqENS0_8RegisterE(%"class.v8::internal::Assembler"* %25, i32 3) #11
  br label %225

225:                                              ; preds = %224, %221
  %226 = and i32 %10, 16
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %229, label %228

228:                                              ; preds = %225
  tail call void @_ZN2v88internal9Assembler4popqENS0_8RegisterE(%"class.v8::internal::Assembler"* %25, i32 4) #11
  br label %229

229:                                              ; preds = %228, %225
  %230 = and i32 %10, 32
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %233, label %232

232:                                              ; preds = %229
  tail call void @_ZN2v88internal9Assembler4popqENS0_8RegisterE(%"class.v8::internal::Assembler"* %25, i32 5) #11
  br label %233

233:                                              ; preds = %232, %229
  %234 = and i32 %10, 64
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %237, label %236

236:                                              ; preds = %233
  tail call void @_ZN2v88internal9Assembler4popqENS0_8RegisterE(%"class.v8::internal::Assembler"* %25, i32 6) #11
  br label %237

237:                                              ; preds = %236, %233
  %238 = trunc i32 %10 to i8
  %239 = icmp sgt i8 %238, -1
  br i1 %239, label %241, label %240

240:                                              ; preds = %237
  tail call void @_ZN2v88internal9Assembler4popqENS0_8RegisterE(%"class.v8::internal::Assembler"* %25, i32 7) #11
  br label %241

241:                                              ; preds = %240, %237
  %242 = and i32 %10, 256
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %245, label %244

244:                                              ; preds = %241
  tail call void @_ZN2v88internal9Assembler4popqENS0_8RegisterE(%"class.v8::internal::Assembler"* %25, i32 8) #11
  br label %245

245:                                              ; preds = %244, %241
  %246 = and i32 %10, 512
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %249, label %248

248:                                              ; preds = %245
  tail call void @_ZN2v88internal9Assembler4popqENS0_8RegisterE(%"class.v8::internal::Assembler"* %25, i32 9) #11
  br label %249

249:                                              ; preds = %248, %245
  %250 = and i32 %10, 1024
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %253, label %252

252:                                              ; preds = %249
  tail call void @_ZN2v88internal9Assembler4popqENS0_8RegisterE(%"class.v8::internal::Assembler"* %25, i32 10) #11
  br label %253

253:                                              ; preds = %252, %249
  %254 = and i32 %10, 2048
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %257, label %256

256:                                              ; preds = %253
  tail call void @_ZN2v88internal9Assembler4popqENS0_8RegisterE(%"class.v8::internal::Assembler"* %25, i32 11) #11
  br label %257

257:                                              ; preds = %256, %253
  %258 = and i32 %10, 4096
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %261, label %260

260:                                              ; preds = %257
  tail call void @_ZN2v88internal9Assembler4popqENS0_8RegisterE(%"class.v8::internal::Assembler"* %25, i32 12) #11
  br label %261

261:                                              ; preds = %260, %257
  %262 = and i32 %10, 8192
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %265, label %264

264:                                              ; preds = %261
  tail call void @_ZN2v88internal9Assembler4popqENS0_8RegisterE(%"class.v8::internal::Assembler"* %25, i32 13) #11
  br label %265

265:                                              ; preds = %264, %261
  %266 = and i32 %10, 16384
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %269, label %268

268:                                              ; preds = %265
  tail call void @_ZN2v88internal9Assembler4popqENS0_8RegisterE(%"class.v8::internal::Assembler"* %25, i32 14) #11
  br label %269

269:                                              ; preds = %268, %265
  %270 = trunc i32 %10 to i16
  %271 = icmp sgt i16 %270, -1
  br i1 %271, label %32, label %272

272:                                              ; preds = %269
  tail call void @_ZN2v88internal9Assembler4popqENS0_8RegisterE(%"class.v8::internal::Assembler"* %25, i32 15) #11
  br label %32
}

declare zeroext i1 @_ZN2v88internal8compiler13CodeGenerator29ShouldApplyOffsetToStackCheckEPNS1_11InstructionEPj(%"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::Instruction"*, i32*) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler4MoveENS0_8RegisterENS0_3SmiE(%"class.v8::internal::TurboAssembler"*, i32, i64) local_unnamed_addr #1

declare i32 @_ZN2v88internal8compiler13CodeGenerator19GetStackCheckOffsetEv(%"class.v8::internal::compiler::CodeGenerator"*) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler10Cvttsd2siqENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"*, i32, %"class.v8::internal::Label"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13MemoryOperandEPm(%"class.v8::internal::compiler::X64OperandConverter"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::Operand", align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %0, i64 0, i32 0, i32 1
  %6 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = lshr i32 %8, 9
  %10 = and i32 %9, 31
  switch i32 %10, label %384 [
    i32 1, label %11
    i32 2, label %54
    i32 3, label %126
    i32 4, label %126
    i32 5, label %126
    i32 6, label %126
    i32 7, label %173
    i32 8, label %173
    i32 9, label %173
    i32 10, label %173
    i32 11, label %242
    i32 12, label %285
    i32 13, label %286
    i32 14, label %286
    i32 15, label %316
    i32 16, label %316
    i32 17, label %316
    i32 18, label %316
    i32 19, label %357
    i32 0, label %383
  ]

11:                                               ; preds = %2
  %12 = load i64, i64* %1, align 8
  %13 = add i64 %12, 1
  store i64 %13, i64* %1, align 8
  %14 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %5, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %14, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 255
  %18 = zext i32 %17 to i64
  %19 = add i64 %12, %18
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %14, i64 0, i32 5, i64 %19, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = ashr i64 %21, 35
  %23 = trunc i64 %22 to i32
  %24 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 0
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 2
  store i8 1, i8* %25, align 2
  switch i32 %23, label %33 [
    i32 4, label %26
    i32 12, label %26
  ]

26:                                               ; preds = %11, %11
  %27 = trunc i64 %22 to i8
  %28 = and i8 %27, 7
  %29 = or i8 %28, 32
  %30 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 1
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %22, 3
  %32 = trunc i64 %31 to i8
  store i8 %32, i8* %24, align 8
  store i8 2, i8* %25, align 2
  br label %33

33:                                               ; preds = %26, %11
  %34 = phi i64 [ 1, %11 ], [ 2, %26 ]
  %35 = phi i8 [ 0, %11 ], [ %32, %26 ]
  switch i32 %23, label %36 [
    i32 13, label %43
    i32 5, label %43
  ]

36:                                               ; preds = %33
  %37 = trunc i64 %22 to i8
  %38 = and i8 %37, 7
  %39 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 0
  store i8 %38, i8* %39, align 1
  %40 = lshr i64 %22, 3
  %41 = trunc i64 %40 to i8
  %42 = or i8 %35, %41
  store i8 %42, i8* %24, align 8
  br label %385

43:                                               ; preds = %33, %33
  %44 = trunc i64 %22 to i8
  %45 = and i8 %44, 7
  %46 = or i8 %45, 64
  %47 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 0
  store i8 %46, i8* %47, align 1
  %48 = lshr i64 %22, 3
  %49 = trunc i64 %48 to i8
  %50 = or i8 %35, %49
  store i8 %50, i8* %24, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 %34
  store i8 0, i8* %51, align 1
  %52 = load i8, i8* %25, align 2
  %53 = add i8 %52, 1
  store i8 %53, i8* %25, align 2
  br label %385

54:                                               ; preds = %2
  %55 = load i64, i64* %1, align 8
  %56 = add i64 %55, 1
  store i64 %56, i64* %1, align 8
  %57 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %5, align 8
  %58 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %57, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = and i32 %59, 255
  %61 = zext i32 %60 to i64
  %62 = add i64 %55, %61
  %63 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %57, i64 0, i32 5, i64 %62, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = ashr i64 %64, 35
  %66 = trunc i64 %65 to i32
  %67 = add i64 %55, 2
  store i64 %67, i64* %1, align 8
  %68 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %5, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %68, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = and i32 %70, 255
  %72 = zext i32 %71 to i64
  %73 = add i64 %56, %72
  %74 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %68, i64 0, i32 5, i64 %73
  %75 = tail call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* %4, %"class.v8::internal::compiler::InstructionOperand"* %74) #11
  %76 = extractvalue { i64, i64 } %75, 1
  %77 = trunc i64 %76 to i32
  %78 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 0
  store i8 0, i8* %78, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 2
  store i8 1, i8* %79, align 2
  switch i32 %66, label %87 [
    i32 4, label %80
    i32 12, label %80
  ]

80:                                               ; preds = %54, %54
  %81 = trunc i64 %65 to i8
  %82 = and i8 %81, 7
  %83 = or i8 %82, 32
  %84 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 1
  store i8 %83, i8* %84, align 1
  %85 = lshr i64 %65, 3
  %86 = trunc i64 %85 to i8
  store i8 %86, i8* %78, align 8
  store i8 2, i8* %79, align 2
  br label %87

87:                                               ; preds = %80, %54
  %88 = phi i64 [ 1, %54 ], [ 2, %80 ]
  %89 = phi i8 [ 0, %54 ], [ %86, %80 ]
  %90 = icmp eq i32 %77, 0
  br i1 %90, label %91, label %99

91:                                               ; preds = %87
  switch i32 %66, label %92 [
    i32 13, label %99
    i32 5, label %99
  ]

92:                                               ; preds = %91
  %93 = trunc i64 %65 to i8
  %94 = and i8 %93, 7
  %95 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 0
  store i8 %94, i8* %95, align 1
  %96 = lshr i64 %65, 3
  %97 = trunc i64 %96 to i8
  %98 = or i8 %89, %97
  store i8 %98, i8* %78, align 8
  br label %385

99:                                               ; preds = %91, %91, %87
  %100 = shl i64 %76, 32
  %101 = ashr exact i64 %100, 32
  %102 = add nsw i64 %101, 128
  %103 = icmp ult i64 %102, 256
  %104 = trunc i64 %65 to i8
  %105 = and i8 %104, 7
  br i1 %103, label %106, label %116

106:                                              ; preds = %99
  %107 = or i8 %105, 64
  %108 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 0
  store i8 %107, i8* %108, align 1
  %109 = lshr i64 %65, 3
  %110 = trunc i64 %109 to i8
  %111 = or i8 %89, %110
  store i8 %111, i8* %78, align 8
  %112 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 %88
  %113 = trunc i64 %76 to i8
  store i8 %113, i8* %112, align 1
  %114 = load i8, i8* %79, align 2
  %115 = add i8 %114, 1
  store i8 %115, i8* %79, align 2
  br label %385

116:                                              ; preds = %99
  %117 = or i8 %105, -128
  %118 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 0
  store i8 %117, i8* %118, align 1
  %119 = lshr i64 %65, 3
  %120 = trunc i64 %119 to i8
  %121 = or i8 %89, %120
  store i8 %121, i8* %78, align 8
  %122 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 %88
  %123 = bitcast i8* %122 to i32*
  store i32 %77, i32* %123, align 1
  %124 = load i8, i8* %79, align 2
  %125 = add i8 %124, 4
  store i8 %125, i8* %79, align 2
  br label %385

126:                                              ; preds = %2, %2, %2, %2
  %127 = load i64, i64* %1, align 8
  %128 = add i64 %127, 1
  store i64 %128, i64* %1, align 8
  %129 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %5, align 8
  %130 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %129, i64 0, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = and i32 %131, 255
  %133 = zext i32 %132 to i64
  %134 = add i64 %127, %133
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %129, i64 0, i32 5, i64 %134, i32 0
  %136 = load i64, i64* %135, align 8
  %137 = ashr i64 %136, 35
  %138 = trunc i64 %137 to i32
  %139 = add i64 %127, 2
  store i64 %139, i64* %1, align 8
  %140 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %5, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %140, i64 0, i32 1
  %142 = load i32, i32* %141, align 4
  %143 = and i32 %142, 255
  %144 = zext i32 %143 to i64
  %145 = add i64 %128, %144
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %140, i64 0, i32 5, i64 %145, i32 0
  %147 = load i64, i64* %146, align 8
  %148 = ashr i64 %147, 35
  %149 = trunc i64 %148 to i32
  %150 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 0
  %151 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 2
  %152 = shl nuw nsw i32 %9, 6
  %153 = add nuw nsw i32 %152, 64
  %154 = shl nsw i64 %148, 3
  %155 = trunc i64 %154 to i32
  %156 = and i32 %155, 56
  %157 = and i32 %138, 7
  %158 = or i32 %157, %153
  %159 = or i32 %158, %156
  %160 = trunc i32 %159 to i8
  %161 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 1
  store i8 %160, i8* %161, align 1
  %162 = ashr i32 %149, 3
  %163 = shl nsw i32 %162, 1
  %164 = lshr i64 %137, 3
  %165 = trunc i64 %164 to i32
  %166 = or i32 %163, %165
  %167 = trunc i32 %166 to i8
  store i8 %167, i8* %150, align 8
  store i8 2, i8* %151, align 2
  switch i32 %138, label %168 [
    i32 13, label %170
    i32 5, label %170
  ]

168:                                              ; preds = %126
  %169 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 0
  store i8 4, i8* %169, align 1
  store i8 %167, i8* %150, align 8
  br label %385

170:                                              ; preds = %126, %126
  %171 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 0
  store i8 68, i8* %171, align 1
  store i8 %167, i8* %150, align 8
  %172 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 2
  store i8 0, i8* %172, align 1
  store i8 3, i8* %151, align 2
  br label %385

173:                                              ; preds = %2, %2, %2, %2
  %174 = load i64, i64* %1, align 8
  %175 = add i64 %174, 1
  store i64 %175, i64* %1, align 8
  %176 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %5, align 8
  %177 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %176, i64 0, i32 1
  %178 = load i32, i32* %177, align 4
  %179 = and i32 %178, 255
  %180 = zext i32 %179 to i64
  %181 = add i64 %174, %180
  %182 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %176, i64 0, i32 5, i64 %181, i32 0
  %183 = load i64, i64* %182, align 8
  %184 = ashr i64 %183, 35
  %185 = trunc i64 %184 to i32
  %186 = add i64 %174, 2
  store i64 %186, i64* %1, align 8
  %187 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %5, align 8
  %188 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %187, i64 0, i32 1
  %189 = load i32, i32* %188, align 4
  %190 = and i32 %189, 255
  %191 = zext i32 %190 to i64
  %192 = add i64 %175, %191
  %193 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %187, i64 0, i32 5, i64 %192, i32 0
  %194 = load i64, i64* %193, align 8
  %195 = ashr i64 %194, 35
  %196 = trunc i64 %195 to i32
  %197 = add i64 %174, 3
  store i64 %197, i64* %1, align 8
  %198 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %5, align 8
  %199 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %198, i64 0, i32 1
  %200 = load i32, i32* %199, align 4
  %201 = and i32 %200, 255
  %202 = zext i32 %201 to i64
  %203 = add i64 %186, %202
  %204 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %198, i64 0, i32 5, i64 %203
  %205 = tail call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* %4, %"class.v8::internal::compiler::InstructionOperand"* %204) #11
  %206 = extractvalue { i64, i64 } %205, 1
  %207 = trunc i64 %206 to i32
  %208 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 0
  %209 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 2
  %210 = shl nuw nsw i32 %9, 6
  %211 = add nuw nsw i32 %210, 64
  %212 = shl nsw i64 %195, 3
  %213 = trunc i64 %212 to i32
  %214 = and i32 %213, 56
  %215 = and i32 %185, 7
  %216 = or i32 %215, %211
  %217 = or i32 %216, %214
  %218 = trunc i32 %217 to i8
  %219 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 1
  store i8 %218, i8* %219, align 1
  %220 = ashr i32 %196, 3
  %221 = shl nsw i32 %220, 1
  %222 = lshr i64 %184, 3
  %223 = trunc i64 %222 to i32
  %224 = or i32 %221, %223
  %225 = trunc i32 %224 to i8
  store i8 %225, i8* %208, align 8
  store i8 2, i8* %209, align 2
  %226 = icmp eq i32 %207, 0
  br i1 %226, label %227, label %230

227:                                              ; preds = %173
  switch i32 %185, label %228 [
    i32 13, label %230
    i32 5, label %230
  ]

228:                                              ; preds = %227
  %229 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 0
  store i8 4, i8* %229, align 1
  store i8 %225, i8* %208, align 8
  br label %385

230:                                              ; preds = %227, %227, %173
  %231 = shl i64 %206, 32
  %232 = ashr exact i64 %231, 32
  %233 = add nsw i64 %232, 128
  %234 = icmp ult i64 %233, 256
  %235 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 0
  br i1 %234, label %236, label %239

236:                                              ; preds = %230
  store i8 68, i8* %235, align 1
  store i8 %225, i8* %208, align 8
  %237 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 2
  %238 = trunc i64 %206 to i8
  store i8 %238, i8* %237, align 1
  store i8 3, i8* %209, align 2
  br label %385

239:                                              ; preds = %230
  store i8 -124, i8* %235, align 1
  store i8 %225, i8* %208, align 8
  %240 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 2
  %241 = bitcast i8* %240 to i32*
  store i32 %207, i32* %241, align 1
  store i8 6, i8* %209, align 2
  br label %385

242:                                              ; preds = %2
  %243 = load i64, i64* %1, align 8
  %244 = add i64 %243, 1
  store i64 %244, i64* %1, align 8
  %245 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %5, align 8
  %246 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %245, i64 0, i32 1
  %247 = load i32, i32* %246, align 4
  %248 = and i32 %247, 255
  %249 = zext i32 %248 to i64
  %250 = add i64 %243, %249
  %251 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %245, i64 0, i32 5, i64 %250, i32 0
  %252 = load i64, i64* %251, align 8
  %253 = ashr i64 %252, 35
  %254 = trunc i64 %253 to i32
  %255 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 0
  store i8 0, i8* %255, align 8
  %256 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 2
  store i8 1, i8* %256, align 2
  switch i32 %254, label %264 [
    i32 4, label %257
    i32 12, label %257
  ]

257:                                              ; preds = %242, %242
  %258 = trunc i64 %253 to i8
  %259 = and i8 %258, 7
  %260 = or i8 %259, 32
  %261 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 1
  store i8 %260, i8* %261, align 1
  %262 = lshr i64 %253, 3
  %263 = trunc i64 %262 to i8
  store i8 %263, i8* %255, align 8
  store i8 2, i8* %256, align 2
  br label %264

264:                                              ; preds = %257, %242
  %265 = phi i64 [ 1, %242 ], [ 2, %257 ]
  %266 = phi i8 [ 0, %242 ], [ %263, %257 ]
  switch i32 %254, label %267 [
    i32 13, label %274
    i32 5, label %274
  ]

267:                                              ; preds = %264
  %268 = trunc i64 %253 to i8
  %269 = and i8 %268, 7
  %270 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 0
  store i8 %269, i8* %270, align 1
  %271 = lshr i64 %253, 3
  %272 = trunc i64 %271 to i8
  %273 = or i8 %266, %272
  store i8 %273, i8* %255, align 8
  br label %385

274:                                              ; preds = %264, %264
  %275 = trunc i64 %253 to i8
  %276 = and i8 %275, 7
  %277 = or i8 %276, 64
  %278 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 0
  store i8 %277, i8* %278, align 1
  %279 = lshr i64 %253, 3
  %280 = trunc i64 %279 to i8
  %281 = or i8 %266, %280
  store i8 %281, i8* %255, align 8
  %282 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 %265
  store i8 0, i8* %282, align 1
  %283 = load i8, i8* %256, align 2
  %284 = add i8 %283, 1
  store i8 %284, i8* %256, align 2
  br label %385

285:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #12
  unreachable

286:                                              ; preds = %2, %2
  %287 = load i64, i64* %1, align 8
  %288 = add i64 %287, 1
  store i64 %288, i64* %1, align 8
  %289 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %5, align 8
  %290 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %289, i64 0, i32 1
  %291 = load i32, i32* %290, align 4
  %292 = and i32 %291, 255
  %293 = zext i32 %292 to i64
  %294 = add i64 %287, %293
  %295 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %289, i64 0, i32 5, i64 %294, i32 0
  %296 = load i64, i64* %295, align 8
  %297 = ashr i64 %296, 35
  %298 = trunc i64 %297 to i32
  %299 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 0
  %300 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 2
  %301 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 0
  store i8 4, i8* %301, align 1
  %302 = shl nuw nsw i32 %9, 6
  %303 = add nuw nsw i32 %302, 64
  %304 = shl nsw i64 %297, 3
  %305 = trunc i64 %304 to i32
  %306 = and i32 %305, 56
  %307 = or i32 %306, %303
  %308 = trunc i32 %307 to i8
  %309 = or i8 %308, 5
  %310 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 1
  store i8 %309, i8* %310, align 1
  %311 = ashr i32 %298, 3
  %312 = shl nsw i32 %311, 1
  %313 = trunc i32 %312 to i8
  store i8 %313, i8* %299, align 8
  %314 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 2
  %315 = bitcast i8* %314 to i32*
  store i32 0, i32* %315, align 1
  store i8 6, i8* %300, align 2
  br label %385

316:                                              ; preds = %2, %2, %2, %2
  %317 = load i64, i64* %1, align 8
  %318 = add i64 %317, 1
  store i64 %318, i64* %1, align 8
  %319 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %5, align 8
  %320 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %319, i64 0, i32 1
  %321 = load i32, i32* %320, align 4
  %322 = and i32 %321, 255
  %323 = zext i32 %322 to i64
  %324 = add i64 %317, %323
  %325 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %319, i64 0, i32 5, i64 %324, i32 0
  %326 = load i64, i64* %325, align 8
  %327 = ashr i64 %326, 35
  %328 = trunc i64 %327 to i32
  %329 = add i64 %317, 2
  store i64 %329, i64* %1, align 8
  %330 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %5, align 8
  %331 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %330, i64 0, i32 1
  %332 = load i32, i32* %331, align 4
  %333 = and i32 %332, 255
  %334 = zext i32 %333 to i64
  %335 = add i64 %318, %334
  %336 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %330, i64 0, i32 5, i64 %335
  %337 = tail call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* %4, %"class.v8::internal::compiler::InstructionOperand"* %336) #11
  %338 = extractvalue { i64, i64 } %337, 1
  %339 = trunc i64 %338 to i32
  %340 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 0
  %341 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 2
  %342 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 0
  store i8 4, i8* %342, align 1
  %343 = shl nuw nsw i32 %9, 6
  %344 = add nuw nsw i32 %343, 64
  %345 = shl nsw i64 %327, 3
  %346 = trunc i64 %345 to i32
  %347 = and i32 %346, 56
  %348 = or i32 %347, %344
  %349 = trunc i32 %348 to i8
  %350 = or i8 %349, 5
  %351 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 1
  store i8 %350, i8* %351, align 1
  %352 = ashr i32 %328, 3
  %353 = shl nsw i32 %352, 1
  %354 = trunc i32 %353 to i8
  store i8 %354, i8* %340, align 8
  %355 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 2
  %356 = bitcast i8* %355 to i32*
  store i32 %339, i32* %356, align 1
  store i8 6, i8* %341, align 2
  br label %385

357:                                              ; preds = %2
  %358 = load i64, i64* %1, align 8
  %359 = add i64 %358, 1
  store i64 %359, i64* %1, align 8
  %360 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %5, align 8
  %361 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %360, i64 0, i32 1
  %362 = load i32, i32* %361, align 4
  %363 = and i32 %362, 255
  %364 = zext i32 %363 to i64
  %365 = add i64 %358, %364
  %366 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %360, i64 0, i32 5, i64 %365
  %367 = tail call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* %4, %"class.v8::internal::compiler::InstructionOperand"* %366) #11
  %368 = extractvalue { i64, i64 } %367, 1
  %369 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 0
  store i8 0, i8* %369, align 8
  %370 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 2
  store i8 1, i8* %370, align 2
  %371 = shl i64 %368, 32
  %372 = ashr exact i64 %371, 32
  %373 = add nsw i64 %372, 128
  %374 = icmp ult i64 %373, 256
  %375 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 0
  br i1 %374, label %376, label %379

376:                                              ; preds = %357
  store i8 69, i8* %375, align 1
  store i8 1, i8* %369, align 8
  %377 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 1
  %378 = trunc i64 %368 to i8
  store i8 %378, i8* %377, align 1
  store i8 2, i8* %370, align 2
  br label %385

379:                                              ; preds = %357
  %380 = trunc i64 %368 to i32
  store i8 -123, i8* %375, align 1
  store i8 1, i8* %369, align 8
  %381 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 1
  %382 = bitcast i8* %381 to i32*
  store i32 %380, i32* %382, align 1
  store i8 5, i8* %370, align 2
  br label %385

383:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #12
  unreachable

384:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #12
  unreachable

385:                                              ; preds = %379, %376, %274, %267, %239, %236, %228, %170, %168, %116, %106, %92, %43, %36, %316, %286
  %386 = bitcast %"class.v8::internal::Operand"* %3 to i64*
  %387 = load i64, i64* %386, align 8
  %388 = getelementptr inbounds %"class.v8::internal::Operand", %"class.v8::internal::Operand"* %3, i64 0, i32 0, i32 1, i64 7
  %389 = bitcast i8* %388 to i32*
  %390 = load i32, i32* %389, align 1
  %391 = insertvalue { i64, i32 } undef, i64 %387, 0
  %392 = insertvalue { i64, i32 } %391, i32 %390, 1
  ret { i64, i32 } %392
}

declare void @_ZN2v88internal14TurboAssembler16StoreTaggedFieldENS0_7OperandENS0_8RegisterE(%"class.v8::internal::TurboAssembler"*, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler9JumpIfSmiENS0_8RegisterEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::TurboAssembler"*, i32, %"class.v8::internal::Label"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler13CheckPageFlagENS0_8RegisterES2_iNS0_9ConditionEPNS0_5LabelENS4_8DistanceE(%"class.v8::internal::TurboAssembler"*, i32, i32, i32, i32, %"class.v8::internal::Label"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler6mfenceEv(%"class.v8::internal::Assembler"*) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler6lfenceEv(%"class.v8::internal::Assembler"*) local_unnamed_addr #1

declare i32 @_ZNK2v88internal8compiler16FrameAccessState14GetFrameOffsetEi(%"class.v8::internal::compiler::FrameAccessState"*, i32) local_unnamed_addr #1

declare i64 @_ZN2v88internal17ExternalReference21ieee754_acos_functionEv() local_unnamed_addr #1

declare i64 @_ZN2v88internal17ExternalReference22ieee754_acosh_functionEv() local_unnamed_addr #1

declare i64 @_ZN2v88internal17ExternalReference21ieee754_asin_functionEv() local_unnamed_addr #1

declare i64 @_ZN2v88internal17ExternalReference22ieee754_asinh_functionEv() local_unnamed_addr #1

declare i64 @_ZN2v88internal17ExternalReference21ieee754_atan_functionEv() local_unnamed_addr #1

declare i64 @_ZN2v88internal17ExternalReference22ieee754_atanh_functionEv() local_unnamed_addr #1

declare i64 @_ZN2v88internal17ExternalReference22ieee754_atan2_functionEv() local_unnamed_addr #1

declare i64 @_ZN2v88internal17ExternalReference21ieee754_cbrt_functionEv() local_unnamed_addr #1

declare i64 @_ZN2v88internal17ExternalReference20ieee754_cos_functionEv() local_unnamed_addr #1

declare i64 @_ZN2v88internal17ExternalReference21ieee754_cosh_functionEv() local_unnamed_addr #1

declare i64 @_ZN2v88internal17ExternalReference20ieee754_exp_functionEv() local_unnamed_addr #1

declare i64 @_ZN2v88internal17ExternalReference22ieee754_expm1_functionEv() local_unnamed_addr #1

declare i64 @_ZN2v88internal17ExternalReference20ieee754_log_functionEv() local_unnamed_addr #1

declare i64 @_ZN2v88internal17ExternalReference22ieee754_log1p_functionEv() local_unnamed_addr #1

declare i64 @_ZN2v88internal17ExternalReference21ieee754_log2_functionEv() local_unnamed_addr #1

declare i64 @_ZN2v88internal17ExternalReference22ieee754_log10_functionEv() local_unnamed_addr #1

declare i64 @_ZN2v88internal17ExternalReference20ieee754_pow_functionEv() local_unnamed_addr #1

declare i64 @_ZN2v88internal17ExternalReference20ieee754_sin_functionEv() local_unnamed_addr #1

declare i64 @_ZN2v88internal17ExternalReference21ieee754_sinh_functionEv() local_unnamed_addr #1

declare i64 @_ZN2v88internal17ExternalReference20ieee754_tan_functionEv() local_unnamed_addr #1

declare i64 @_ZN2v88internal17ExternalReference21ieee754_tanh_functionEv() local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5testbENS0_7OperandENS0_9ImmediateE(%"class.v8::internal::Assembler"*, i64, i32, i64) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5testbENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"*, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5testbENS0_8RegisterENS0_9ImmediateE(%"class.v8::internal::Assembler"*, i32, i64) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5testbENS0_8RegisterES2_(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5testwENS0_7OperandENS0_9ImmediateE(%"class.v8::internal::Assembler"*, i64, i32, i64) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5testwENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"*, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5testwENS0_8RegisterENS0_9ImmediateE(%"class.v8::internal::Assembler"*, i32, i64) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5testwENS0_8RegisterES2_(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler4mullENS0_8RegisterE(%"class.v8::internal::Assembler"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler4mullENS0_7OperandE(%"class.v8::internal::Assembler"*, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler3cdqEv(%"class.v8::internal::Assembler"*) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler3cqoEv(%"class.v8::internal::Assembler"*) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler4negqENS0_8RegisterE(%"class.v8::internal::Assembler"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler4negqENS0_7OperandE(%"class.v8::internal::Assembler"*, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler4neglENS0_8RegisterE(%"class.v8::internal::Assembler"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler4neglENS0_7OperandE(%"class.v8::internal::Assembler"*, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler6LzcntqENS0_8RegisterES2_(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler6LzcntqENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler6LzcntlENS0_8RegisterES2_(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler6LzcntlENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler6TzcntqENS0_8RegisterES2_(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler6TzcntqENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler6TzcntlENS0_8RegisterES2_(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler6TzcntlENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler7PopcntqENS0_8RegisterES2_(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler7PopcntqENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler7PopcntlENS0_8RegisterES2_(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler7PopcntlENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler6bswapqENS0_8RegisterE(%"class.v8::internal::Assembler"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler6bswaplENS0_8RegisterE(%"class.v8::internal::Assembler"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler6movapsENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler8Cvtss2sdENS0_11XMMRegisterES2_(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler8Cvtss2sdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler9Cvttss2siENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler9Cvttss2siENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler10Cvttss2siqENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler10Cvttss2siqENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal20SharedTurboAssembler6MovapdENS0_11XMMRegisterES2_(%"class.v8::internal::SharedTurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5fld_dENS0_7OperandE(%"class.v8::internal::Assembler"*, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5fpremEv(%"class.v8::internal::Assembler"*) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler9fnstsw_axEv(%"class.v8::internal::Assembler"*) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler4sahfEv(%"class.v8::internal::Assembler"*) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5pushqENS0_8RegisterE(%"class.v8::internal::Assembler"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5popfqEv(%"class.v8::internal::Assembler"*) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler4fstpEi(%"class.v8::internal::Assembler"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler6fstp_dENS0_7OperandE(%"class.v8::internal::Assembler"*, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler5AbspdENS0_11XMMRegisterE(%"class.v8::internal::TurboAssembler"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler5NegpdENS0_11XMMRegisterE(%"class.v8::internal::TurboAssembler"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler8Cvtsd2ssENS0_11XMMRegisterES2_(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler8Cvtsd2ssENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler9Cvttsd2siENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler9Cvttsd2siENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler10Cvttsd2siqENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler18AssertZeroExtendedENS0_8RegisterE(%"class.v8::internal::TurboAssembler"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14TurboAssembler4MoveENS0_8RegisterEl(%"class.v8::internal::TurboAssembler"*, i32, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %6, i8 zeroext 51, i32 %1, i32 %1, i32 4) #11
  br label %24

7:                                                ; preds = %3
  %8 = icmp ult i64 %2, 256
  br i1 %8, label %9, label %12

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %10, i8 zeroext 51, i32 %1, i32 %1, i32 4) #11
  %11 = and i64 %2, 4294967295
  tail call void @_ZN2v88internal9Assembler4movbENS0_8RegisterENS0_9ImmediateE(%"class.v8::internal::Assembler"* %10, i32 %1, i64 %11) #11
  br label %24

12:                                               ; preds = %7
  %13 = icmp ult i64 %2, 4294967296
  br i1 %13, label %14, label %17

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = and i64 %2, 4294967295
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %15, i32 %1, i64 %16, i32 4) #11
  br label %24

17:                                               ; preds = %12
  %18 = add i64 %2, 2147483648
  %19 = icmp ult i64 %18, 4294967296
  %20 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %0, i64 0, i32 0, i32 0, i32 0
  br i1 %19, label %21, label %23

21:                                               ; preds = %17
  %22 = and i64 %2, 4294967295
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %20, i32 %1, i64 %22, i32 8) #11
  br label %24

23:                                               ; preds = %17
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_11Immediate64Ei(%"class.v8::internal::Assembler"* %20, i32 %1, i64 %2, i8 0, i32 8) #11
  br label %24

24:                                               ; preds = %9, %21, %23, %14, %5
  ret void
}

declare void @_ZN2v88internal14TurboAssembler10Cvttss2uiqENS0_8RegisterENS0_11XMMRegisterEPNS0_5LabelE(%"class.v8::internal::TurboAssembler"*, i32, i32, %"class.v8::internal::Label"*) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler10Cvttss2uiqENS0_8RegisterENS0_7OperandEPNS0_5LabelE(%"class.v8::internal::TurboAssembler"*, i32, i64, i32, %"class.v8::internal::Label"*) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler10Cvttsd2uiqENS0_8RegisterENS0_11XMMRegisterEPNS0_5LabelE(%"class.v8::internal::TurboAssembler"*, i32, i32, %"class.v8::internal::Label"*) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler10Cvttsd2uiqENS0_8RegisterENS0_7OperandEPNS0_5LabelE(%"class.v8::internal::TurboAssembler"*, i32, i64, i32, %"class.v8::internal::Label"*) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler9Cvtlsi2sdENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler9Cvtlsi2sdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler9Cvtlsi2ssENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler9Cvtlsi2ssENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler9Cvtqsi2ssENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler9Cvtqsi2ssENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler9Cvtqsi2sdENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler9Cvtqsi2sdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler9Cvtqui2ssENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler9Cvtqui2ssENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler9Cvtqui2sdENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler9Cvtqui2sdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler9Cvtlui2sdENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler9Cvtlui2sdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler9Cvtlui2ssENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler9Cvtlui2ssENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler6PextrdENS0_8RegisterENS0_11XMMRegisterEh(%"class.v8::internal::TurboAssembler"*, i32, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler6PinsrdENS0_11XMMRegisterENS0_8RegisterEh(%"class.v8::internal::TurboAssembler"*, i32, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler6PinsrdENS0_11XMMRegisterENS0_7OperandEh(%"class.v8::internal::TurboAssembler"*, i32, i64, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler8vucomissENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler8vucomissENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler7movsxblENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler7movsxblENS0_8RegisterES2_(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler7movsxbqENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler7movsxbqENS0_8RegisterES2_(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler4movbENS0_7OperandENS0_9ImmediateE(%"class.v8::internal::Assembler"*, i64, i32, i64) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler4movbENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"*, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler7movsxwlENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler7movsxwlENS0_8RegisterES2_(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler7movsxwqENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler7movsxwqENS0_8RegisterES2_(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler4movwENS0_7OperandENS0_9ImmediateE(%"class.v8::internal::Assembler"*, i64, i32, i64) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler4movwENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"*, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler7movsxlqENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler7movsxlqENS0_8RegisterES2_(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler22DecompressTaggedSignedENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler23DecompressTaggedPointerENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler19DecompressAnyTaggedENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler16StoreTaggedFieldENS0_7OperandENS0_9ImmediateE(%"class.v8::internal::TurboAssembler"*, i64, i32, i64) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler4MovqENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler4MovqENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5pushqENS0_9ImmediateE(%"class.v8::internal::Assembler"*, i64) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5pushqENS0_7OperandE(%"class.v8::internal::Assembler"*, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal20SharedTurboAssembler16F64x2ExtractLaneENS0_11XMMRegisterES2_h(%"class.v8::internal::SharedTurboAssembler"*, i32, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal20SharedTurboAssembler16F64x2ReplaceLaneENS0_11XMMRegisterES2_S2_h(%"class.v8::internal::SharedTurboAssembler"*, i32, i32, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal20SharedTurboAssembler8F64x2MinENS0_11XMMRegisterES2_S2_S2_(%"class.v8::internal::SharedTurboAssembler"*, i32, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal20SharedTurboAssembler8F64x2MaxENS0_11XMMRegisterES2_S2_S2_(%"class.v8::internal::SharedTurboAssembler"*, i32, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler21F64x2ConvertLowI32x4UENS0_11XMMRegisterES2_(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler23I32x4TruncSatF64x2SZeroENS0_11XMMRegisterES2_(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler23I32x4TruncSatF64x2UZeroENS0_11XMMRegisterES2_(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal20SharedTurboAssembler10F32x4SplatENS0_11XMMRegisterES2_(%"class.v8::internal::SharedTurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal20SharedTurboAssembler16F32x4ExtractLaneENS0_11XMMRegisterES2_h(%"class.v8::internal::SharedTurboAssembler"*, i32, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal20SharedTurboAssembler8I64x2AbsENS0_11XMMRegisterES2_S2_(%"class.v8::internal::SharedTurboAssembler"*, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal20SharedTurboAssembler8I64x2NegENS0_11XMMRegisterES2_S2_(%"class.v8::internal::SharedTurboAssembler"*, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler6MovdqaENS0_11XMMRegisterES2_(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal20SharedTurboAssembler8I64x2GtSENS0_11XMMRegisterES2_S2_S2_(%"class.v8::internal::SharedTurboAssembler"*, i32, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal20SharedTurboAssembler8I64x2GeSENS0_11XMMRegisterES2_S2_S2_(%"class.v8::internal::SharedTurboAssembler"*, i32, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal20SharedTurboAssembler11I64x2ExtMulENS0_11XMMRegisterES2_S2_S2_bb(%"class.v8::internal::SharedTurboAssembler"*, i32, i32, i32, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal20SharedTurboAssembler22I64x2SConvertI32x4HighENS0_11XMMRegisterES2_(%"class.v8::internal::SharedTurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal20SharedTurboAssembler22I64x2UConvertI32x4HighENS0_11XMMRegisterES2_S2_(%"class.v8::internal::SharedTurboAssembler"*, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal20SharedTurboAssembler22I32x4SConvertI16x8HighENS0_11XMMRegisterES2_(%"class.v8::internal::SharedTurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal20SharedTurboAssembler22I32x4UConvertI16x8HighENS0_11XMMRegisterES2_S2_(%"class.v8::internal::SharedTurboAssembler"*, i32, i32, i32) local_unnamed_addr #1

declare { i64, i32 } @_ZN2v88internal14TurboAssembler26ExternalReferenceAsOperandENS0_17ExternalReferenceENS0_8RegisterE(%"class.v8::internal::TurboAssembler"*, i64, i32) local_unnamed_addr #1

declare i64 @_ZN2v88internal17ExternalReference34address_of_wasm_i16x8_splat_0x0001Ev() local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler7PmaddwdENS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::TurboAssembler"*, i32, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler25I32x4ExtAddPairwiseI16x8UENS0_11XMMRegisterES2_(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88internal20SharedTurboAssembler22I16x8SConvertI8x16HighENS0_11XMMRegisterES2_(%"class.v8::internal::SharedTurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal20SharedTurboAssembler22I16x8UConvertI8x16HighENS0_11XMMRegisterES2_S2_(%"class.v8::internal::SharedTurboAssembler"*, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal20SharedTurboAssembler14I16x8ExtMulLowENS0_11XMMRegisterES2_S2_S2_b(%"class.v8::internal::SharedTurboAssembler"*, i32, i32, i32, i32, i1 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal20SharedTurboAssembler16I16x8ExtMulHighSENS0_11XMMRegisterES2_S2_S2_(%"class.v8::internal::SharedTurboAssembler"*, i32, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal20SharedTurboAssembler16I16x8ExtMulHighUENS0_11XMMRegisterES2_S2_S2_(%"class.v8::internal::SharedTurboAssembler"*, i32, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler25I16x8ExtAddPairwiseI8x16SENS0_11XMMRegisterES2_(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare i64 @_ZN2v88internal17ExternalReference32address_of_wasm_i8x16_splat_0x01Ev() local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler9PmaddubswENS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::TurboAssembler"*, i32, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler16I16x8Q15MulRSatSENS0_11XMMRegisterES2_S2_(%"class.v8::internal::TurboAssembler"*, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5vmovdENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler6PinsrbENS0_11XMMRegisterES2_NS0_7OperandEh(%"class.v8::internal::TurboAssembler"*, i32, i32, i64, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler6PinsrbENS0_11XMMRegisterES2_NS0_8RegisterEh(%"class.v8::internal::TurboAssembler"*, i32, i32, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler6PinsrwENS0_11XMMRegisterES2_NS0_7OperandEh(%"class.v8::internal::TurboAssembler"*, i32, i32, i64, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler6PinsrwENS0_11XMMRegisterES2_NS0_8RegisterEh(%"class.v8::internal::TurboAssembler"*, i32, i32, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler6PinsrdENS0_11XMMRegisterES2_NS0_7OperandEh(%"class.v8::internal::TurboAssembler"*, i32, i32, i64, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler6PinsrdENS0_11XMMRegisterES2_NS0_8RegisterEh(%"class.v8::internal::TurboAssembler"*, i32, i32, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler6PinsrqENS0_11XMMRegisterES2_NS0_7OperandEh(%"class.v8::internal::TurboAssembler"*, i32, i32, i64, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler6PinsrqENS0_11XMMRegisterES2_NS0_8RegisterEh(%"class.v8::internal::TurboAssembler"*, i32, i32, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal20SharedTurboAssembler11I32x4ExtMulENS0_11XMMRegisterES2_S2_S2_bb(%"class.v8::internal::SharedTurboAssembler"*, i32, i32, i32, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal20SharedTurboAssembler7S128NotENS0_11XMMRegisterES2_S2_(%"class.v8::internal::SharedTurboAssembler"*, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal20SharedTurboAssembler10S128SelectENS0_11XMMRegisterES2_S2_S2_S2_(%"class.v8::internal::SharedTurboAssembler"*, i32, i32, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler12I8x16SwizzleENS0_11XMMRegisterES2_S2_b(%"class.v8::internal::TurboAssembler"*, i32, i32, i32, i1 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler11I8x16PopcntENS0_11XMMRegisterES2_S2_(%"class.v8::internal::TurboAssembler"*, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler12vbroadcastssENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5movssENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler6shufpsENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"*, i32, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal20SharedTurboAssembler15S128Store32LaneENS0_7OperandENS0_11XMMRegisterEh(%"class.v8::internal::SharedTurboAssembler"*, i64, i32, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler15S128Store64LaneENS0_7OperandENS0_11XMMRegisterEh(%"class.v8::internal::TurboAssembler"*, i64, i32, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal20SharedTurboAssembler6ShufpsENS0_11XMMRegisterES2_S2_h(%"class.v8::internal::SharedTurboAssembler"*, i32, i32, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler7pblendwENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"*, i32, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler7pblendwENS0_11XMMRegisterENS0_7OperandEh(%"class.v8::internal::Assembler"*, i32, i64, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler7palignrENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"*, i32, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler7palignrENS0_11XMMRegisterENS0_7OperandEh(%"class.v8::internal::Assembler"*, i32, i64, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5setccENS0_9ConditionENS0_8RegisterE(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5xchgbENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5xchgwENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler4lockEv(%"class.v8::internal::Assembler"*) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler8cmpxchgbENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"*, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler8cmpxchgwENS0_7OperandENS0_8RegisterE(%"class.v8::internal::Assembler"*, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler4movbENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler4movwENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"*, i32, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13CodeGenerator18AssembleArchBranchEPNS1_11InstructionEPNS1_10BranchInfoE(%"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::Instruction"* nocapture readnone, %"struct.v8::internal::compiler::BranchInfo"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.v8::internal::compiler::BranchInfo", %"struct.v8::internal::compiler::BranchInfo"* %2, i64 0, i32 3
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = xor i8 %5, 1
  %7 = zext i8 %6 to i32
  %8 = getelementptr inbounds %"struct.v8::internal::compiler::BranchInfo", %"struct.v8::internal::compiler::BranchInfo"* %2, i64 0, i32 1
  %9 = load %"class.v8::internal::Label"*, %"class.v8::internal::Label"** %8, align 8
  %10 = getelementptr inbounds %"struct.v8::internal::compiler::BranchInfo", %"struct.v8::internal::compiler::BranchInfo"* %2, i64 0, i32 2
  %11 = load %"class.v8::internal::Label"*, %"class.v8::internal::Label"** %10, align 8
  %12 = getelementptr inbounds %"struct.v8::internal::compiler::BranchInfo", %"struct.v8::internal::compiler::BranchInfo"* %2, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  switch i32 %13, label %20 [
    i32 18, label %14
    i32 19, label %16
  ]

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %15, i32 10, %"class.v8::internal::Label"* %11, i32 %7) #11
  br label %18

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %17, i32 10, %"class.v8::internal::Label"* %9, i32 1) #11
  br label %18

18:                                               ; preds = %14, %16
  %19 = load i32, i32* %12, align 8
  br label %20

20:                                               ; preds = %18, %3
  %21 = phi i32 [ %19, %18 ], [ %13, %3 ]
  %22 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %23 = icmp ult i32 %21, 22
  br i1 %23, label %25, label %24

24:                                               ; preds = %25, %20
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #12
  unreachable

25:                                               ; preds = %20
  %26 = lshr i32 3933183, %21
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %24, label %29

29:                                               ; preds = %25
  %30 = sext i32 %21 to i64
  %31 = getelementptr inbounds [22 x i32], [22 x i32]* @switch.table._ZN2v88internal8compiler13CodeGenerator18AssembleArchSelectEPNS1_11InstructionENS1_14FlagsConditionE, i64 0, i64 %30
  %32 = load i32, i32* %31, align 4
  tail call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %22, i32 %32, %"class.v8::internal::Label"* %9, i32 1) #11
  %33 = load i8, i8* %4, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %29
  tail call void @_ZN2v88internal9Assembler3jmpEPNS0_5LabelENS2_8DistanceE(%"class.v8::internal::Assembler"* %22, %"class.v8::internal::Label"* %11, i32 %7) #11
  br label %36

36:                                               ; preds = %29, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13CodeGenerator23AssembleBranchPoisoningENS1_14FlagsConditionEPNS1_11InstructionE(%"class.v8::internal::compiler::CodeGenerator"*, i32, %"class.v8::internal::compiler::Instruction"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %4 = or i32 %1, 1
  %5 = icmp eq i32 %4, 19
  br i1 %5, label %19, label %6

6:                                                ; preds = %3
  %7 = xor i32 %1, 1
  %8 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %8, i32 10, i64 0, i32 4) #11
  %9 = icmp ult i32 %7, 22
  br i1 %9, label %11, label %10

10:                                               ; preds = %11, %6
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #12
  unreachable

11:                                               ; preds = %6
  %12 = lshr i32 3933183, %7
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %10, label %15

15:                                               ; preds = %11
  %16 = sext i32 %7 to i64
  %17 = getelementptr inbounds [22 x i32], [22 x i32]* @switch.table._ZN2v88internal8compiler13CodeGenerator18AssembleArchSelectEPNS1_11InstructionENS1_14FlagsConditionE, i64 0, i64 %16
  %18 = load i32, i32* %17, align 4
  tail call void @_ZN2v88internal9Assembler5cmovqENS0_9ConditionENS0_8RegisterES3_(%"class.v8::internal::Assembler"* %8, i32 %18, i32 11, i32 10) #11
  br label %19

19:                                               ; preds = %3, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13CodeGenerator23AssembleArchDeoptBranchEPNS1_11InstructionEPNS1_10BranchInfoE(%"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::Instruction"* nocapture readnone, %"struct.v8::internal::compiler::BranchInfo"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Label", align 4
  %5 = getelementptr inbounds %"struct.v8::internal::compiler::BranchInfo", %"struct.v8::internal::compiler::BranchInfo"* %2, i64 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = xor i8 %6, 1
  %8 = zext i8 %7 to i32
  %9 = getelementptr inbounds %"struct.v8::internal::compiler::BranchInfo", %"struct.v8::internal::compiler::BranchInfo"* %2, i64 0, i32 1
  %10 = load %"class.v8::internal::Label"*, %"class.v8::internal::Label"** %9, align 8
  %11 = getelementptr inbounds %"struct.v8::internal::compiler::BranchInfo", %"struct.v8::internal::compiler::BranchInfo"* %2, i64 0, i32 2
  %12 = load %"class.v8::internal::Label"*, %"class.v8::internal::Label"** %11, align 8
  %13 = bitcast %"class.v8::internal::Label"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %4, i64 0, i32 0
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %4, i64 0, i32 1
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"struct.v8::internal::compiler::BranchInfo", %"struct.v8::internal::compiler::BranchInfo"* %2, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  switch i32 %17, label %24 [
    i32 18, label %18
    i32 19, label %20
  ]

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %19, i32 10, %"class.v8::internal::Label"* %12, i32 %8) #11
  br label %22

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %21, i32 10, %"class.v8::internal::Label"* %10, i32 1) #11
  br label %22

22:                                               ; preds = %18, %20
  %23 = load i32, i32* %16, align 8
  br label %24

24:                                               ; preds = %22, %3
  %25 = phi i32 [ %23, %22 ], [ %17, %3 ]
  %26 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %27 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = icmp ult i32 %25, 22
  br i1 %28, label %30, label %29

29:                                               ; preds = %30, %24
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #12
  unreachable

30:                                               ; preds = %24
  %31 = lshr i32 3933183, %25
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %29, label %34

34:                                               ; preds = %30
  %35 = sext i32 %25 to i64
  %36 = getelementptr inbounds [22 x i32], [22 x i32]* @switch.table._ZN2v88internal8compiler13CodeGenerator18AssembleArchSelectEPNS1_11InstructionENS1_14FlagsConditionE, i64 0, i64 %35
  %37 = load i32, i32* %36, align 4
  tail call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %27, i32 %37, %"class.v8::internal::Label"* %10, i32 1) #11
  %38 = load i32, i32* @_ZN2v88internal24FLAG_deopt_every_n_timesE, align 4
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %40, label %46

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 2
  %42 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %41, align 8
  %43 = tail call i64 @_ZN2v88internal17ExternalReference18stress_deopt_countEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %42) #11
  tail call void @_ZN2v88internal9Assembler6pushfqEv(%"class.v8::internal::Assembler"* %27) #11
  tail call void @_ZN2v88internal9Assembler5pushqENS0_8RegisterE(%"class.v8::internal::Assembler"* %27, i32 0) #11
  tail call void @_ZN2v88internal9Assembler8load_raxENS0_17ExternalReferenceE(%"class.v8::internal::Assembler"* %27, i64 %43) #11
  tail call void @_ZN2v88internal9Assembler8emit_decENS0_8RegisterEi(%"class.v8::internal::Assembler"* %27, i32 0, i32 4) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %27, i32 5, %"class.v8::internal::Label"* nonnull %4, i32 0) #11
  %44 = load i32, i32* @_ZN2v88internal24FLAG_deopt_every_n_timesE, align 4
  %45 = sext i32 %44 to i64
  call void @_ZN2v88internal14TurboAssembler4MoveENS0_8RegisterEl(%"class.v8::internal::TurboAssembler"* %26, i32 0, i64 %45)
  call void @_ZN2v88internal9Assembler9store_raxENS0_17ExternalReferenceE(%"class.v8::internal::Assembler"* %27, i64 %43) #11
  call void @_ZN2v88internal9Assembler4popqENS0_8RegisterE(%"class.v8::internal::Assembler"* %27, i32 0) #11
  call void @_ZN2v88internal9Assembler5popfqEv(%"class.v8::internal::Assembler"* %27) #11
  call void @_ZN2v88internal9Assembler3jmpEPNS0_5LabelENS2_8DistanceE(%"class.v8::internal::Assembler"* %27, %"class.v8::internal::Label"* %10, i32 1) #11
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %27, %"class.v8::internal::Label"* nonnull %4) #11
  call void @_ZN2v88internal9Assembler9store_raxENS0_17ExternalReferenceE(%"class.v8::internal::Assembler"* %27, i64 %43) #11
  call void @_ZN2v88internal9Assembler4popqENS0_8RegisterE(%"class.v8::internal::Assembler"* %27, i32 0) #11
  call void @_ZN2v88internal9Assembler5popfqEv(%"class.v8::internal::Assembler"* %27) #11
  br label %46

46:                                               ; preds = %40, %34
  %47 = load i8, i8* %5, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  call void @_ZN2v88internal9Assembler3jmpEPNS0_5LabelENS2_8DistanceE(%"class.v8::internal::Assembler"* %27, %"class.v8::internal::Label"* %12, i32 %8) #11
  br label %50

50:                                               ; preds = %46, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  ret void
}

declare i64 @_ZN2v88internal17ExternalReference18stress_deopt_countEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler6pushfqEv(%"class.v8::internal::Assembler"*) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler8load_raxENS0_17ExternalReferenceE(%"class.v8::internal::Assembler"*, i64) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler9store_raxENS0_17ExternalReferenceE(%"class.v8::internal::Assembler"*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v88internal8compiler13CodeGenerator21IsNextInAssemblyOrderENS1_9RpoNumberE(%"class.v8::internal::compiler::CodeGenerator"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13CodeGenerator16AssembleArchTrapEPNS1_11InstructionENS1_14FlagsConditionE(%"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::Instruction"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Label", align 4
  %5 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %6 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %7 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %7, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %7, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %9
  %13 = icmp ult i64 %12, 64
  br i1 %13, label %14, label %16, !prof !3

14:                                               ; preds = %3
  %15 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %7, i64 64) #11
  br label %18

16:                                               ; preds = %3
  %17 = add i64 %9, 64
  store i64 %17, i64* %8, align 8
  br label %18

18:                                               ; preds = %14, %16
  %19 = phi i64 [ %15, %14 ], [ %9, %16 ]
  %20 = inttoptr i64 %19 to %"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap"*
  %21 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap"* %20, i64 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"* %21, %"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %22 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap"* %20, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler12_GLOBAL__N_117WasmOutOfLineTrapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap"* %20, i64 0, i32 1
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap"* %20, i64 0, i32 2
  %25 = bitcast %"class.v8::internal::compiler::Instruction"** %24 to i64*
  store i64 %5, i64* %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap"* %20, i64 0, i32 0, i32 1
  %27 = bitcast %"class.v8::internal::Label"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  %28 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %4, i64 0, i32 0
  store i32 0, i32* %28, align 4
  %29 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %4, i64 0, i32 1
  store i32 0, i32* %29, align 4
  switch i32 %2, label %34 [
    i32 18, label %30
    i32 19, label %32
  ]

30:                                               ; preds = %18
  %31 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %31, i32 10, %"class.v8::internal::Label"* nonnull %4, i32 0) #11
  br label %49

32:                                               ; preds = %18
  %33 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %33, i32 10, %"class.v8::internal::Label"* %26, i32 1) #11
  br label %36

34:                                               ; preds = %18
  %35 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  switch i32 %2, label %48 [
    i32 21, label %47
    i32 0, label %49
    i32 20, label %46
    i32 1, label %36
    i32 2, label %38
    i32 3, label %39
    i32 4, label %40
    i32 5, label %41
    i32 6, label %42
    i32 7, label %43
    i32 8, label %44
    i32 9, label %45
  ]

36:                                               ; preds = %32, %34
  %37 = phi %"class.v8::internal::Assembler"* [ %33, %32 ], [ %35, %34 ]
  br label %49

38:                                               ; preds = %34
  br label %49

39:                                               ; preds = %34
  br label %49

40:                                               ; preds = %34
  br label %49

41:                                               ; preds = %34
  br label %49

42:                                               ; preds = %34
  br label %49

43:                                               ; preds = %34
  br label %49

44:                                               ; preds = %34
  br label %49

45:                                               ; preds = %34
  br label %49

46:                                               ; preds = %34
  br label %49

47:                                               ; preds = %34
  br label %49

48:                                               ; preds = %34
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #12
  unreachable

49:                                               ; preds = %30, %34, %36, %38, %39, %40, %41, %42, %43, %44, %45, %46, %47
  %50 = phi %"class.v8::internal::Assembler"* [ %35, %47 ], [ %35, %46 ], [ %35, %45 ], [ %35, %44 ], [ %35, %43 ], [ %35, %42 ], [ %35, %41 ], [ %35, %40 ], [ %35, %39 ], [ %35, %38 ], [ %37, %36 ], [ %35, %34 ], [ %31, %30 ]
  %51 = phi i32 [ 1, %47 ], [ 0, %46 ], [ 7, %45 ], [ 6, %44 ], [ 3, %43 ], [ 2, %42 ], [ 15, %41 ], [ 14, %40 ], [ 13, %39 ], [ 12, %38 ], [ 5, %36 ], [ 4, %34 ], [ 4, %30 ]
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %50, i32 %51, %"class.v8::internal::Label"* %26, i32 1) #11
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %50, %"class.v8::internal::Label"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13CodeGenerator19AssembleArchBooleanEPNS1_11InstructionENS1_14FlagsConditionE(%"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::Instruction"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Label", align 4
  %5 = alloca %"class.v8::internal::Label", align 4
  %6 = bitcast %"class.v8::internal::Label"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %4, i64 0, i32 0
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %4, i64 0, i32 1
  store i32 0, i32* %8, align 4
  %9 = bitcast %"class.v8::internal::Label"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %5, i64 0, i32 0
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %5, i64 0, i32 1
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 255
  %15 = zext i32 %14 to i64
  %16 = add nsw i64 %15, -1
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %16, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = ashr i64 %18, 35
  %20 = trunc i64 %19 to i32
  switch i32 %2, label %25 [
    i32 18, label %21
    i32 19, label %23
  ]

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %22, i32 11, %"class.v8::internal::Label"* nonnull %5, i32 0) #11
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %22, i32 %20, i64 0, i32 4) #11
  call void @_ZN2v88internal9Assembler3jmpEPNS0_5LabelENS2_8DistanceE(%"class.v8::internal::Assembler"* %22, %"class.v8::internal::Label"* nonnull %4, i32 0) #11
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %22, %"class.v8::internal::Label"* nonnull %5) #11
  br label %40

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %24, i32 11, %"class.v8::internal::Label"* nonnull %5, i32 0) #11
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %24, i32 %20, i64 1, i32 4) #11
  call void @_ZN2v88internal9Assembler3jmpEPNS0_5LabelENS2_8DistanceE(%"class.v8::internal::Assembler"* %24, %"class.v8::internal::Label"* nonnull %4, i32 0) #11
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %24, %"class.v8::internal::Label"* nonnull %5) #11
  br label %27

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %26, %"class.v8::internal::Label"* nonnull %5) #11
  switch i32 %2, label %39 [
    i32 21, label %38
    i32 0, label %40
    i32 20, label %37
    i32 1, label %27
    i32 2, label %29
    i32 3, label %30
    i32 4, label %31
    i32 5, label %32
    i32 6, label %33
    i32 7, label %34
    i32 8, label %35
    i32 9, label %36
  ]

27:                                               ; preds = %23, %25
  %28 = phi %"class.v8::internal::Assembler"* [ %24, %23 ], [ %26, %25 ]
  br label %40

29:                                               ; preds = %25
  br label %40

30:                                               ; preds = %25
  br label %40

31:                                               ; preds = %25
  br label %40

32:                                               ; preds = %25
  br label %40

33:                                               ; preds = %25
  br label %40

34:                                               ; preds = %25
  br label %40

35:                                               ; preds = %25
  br label %40

36:                                               ; preds = %25
  br label %40

37:                                               ; preds = %25
  br label %40

38:                                               ; preds = %25
  br label %40

39:                                               ; preds = %25
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #12
  unreachable

40:                                               ; preds = %21, %25, %27, %29, %30, %31, %32, %33, %34, %35, %36, %37, %38
  %41 = phi %"class.v8::internal::Assembler"* [ %26, %38 ], [ %26, %37 ], [ %26, %36 ], [ %26, %35 ], [ %26, %34 ], [ %26, %33 ], [ %26, %32 ], [ %26, %31 ], [ %26, %30 ], [ %26, %29 ], [ %28, %27 ], [ %26, %25 ], [ %22, %21 ]
  %42 = phi i32 [ 1, %38 ], [ 0, %37 ], [ 7, %36 ], [ 6, %35 ], [ 3, %34 ], [ 2, %33 ], [ 15, %32 ], [ 14, %31 ], [ 13, %30 ], [ 12, %29 ], [ 5, %27 ], [ 4, %25 ], [ 4, %21 ]
  call void @_ZN2v88internal9Assembler5setccENS0_9ConditionENS0_8RegisterE(%"class.v8::internal::Assembler"* %41, i32 %42, i32 %20) #11
  call void @_ZN2v88internal9Assembler11emit_movzxbENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %41, i32 %20, i32 %20, i32 4) #11
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %41, %"class.v8::internal::Label"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  ret void
}

declare void @_ZN2v88internal8compiler13CodeGenerator35AssembleArchBinarySearchSwitchRangeENS0_8RegisterENS1_9RpoNumberEPNSt3__14pairIiPNS0_5LabelEEESA_(%"class.v8::internal::compiler::CodeGenerator"*, i32, i32, %"struct.std::__1::pair.922"*, %"struct.std::__1::pair.922"*) local_unnamed_addr #1

declare %"class.v8::internal::Label"* @_ZN2v88internal8compiler13CodeGenerator12AddJumpTableEPPNS0_5LabelEm(%"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::Label"**, i64) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler3jmpENS0_7OperandE(%"class.v8::internal::Assembler"*, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13CodeGenerator18AssembleArchSelectEPNS1_11InstructionENS1_14FlagsConditionE(%"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::Instruction"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::compiler::X64OperandConverter", align 8
  %5 = bitcast %"class.v8::internal::compiler::X64OperandConverter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %4, i64 0, i32 0, i32 0
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %4, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::Instruction"* %1, %"class.v8::internal::compiler::Instruction"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i32 %2, 22
  br i1 %10, label %12, label %11

11:                                               ; preds = %12, %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #12
  unreachable

12:                                               ; preds = %3
  %13 = lshr i32 3933183, %2
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %11, label %16

16:                                               ; preds = %12
  %17 = sext i32 %2 to i64
  %18 = getelementptr inbounds [22 x i32], [22 x i32]* @switch.table._ZN2v88internal8compiler13CodeGenerator18AssembleArchSelectEPNS1_11InstructionENS1_14FlagsConditionE, i64 0, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = lshr i32 %21, 8
  %23 = and i32 %22, 65535
  %24 = zext i32 %23 to i64
  %25 = add nsw i64 %24, -1
  %26 = and i64 %9, 8160
  %27 = icmp eq i64 %26, 128
  %28 = and i32 %21, 255
  %29 = zext i32 %28 to i64
  %30 = add nsw i64 %25, %29
  %31 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %30, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %32, 7
  %34 = icmp ugt i64 %33, 4
  %35 = and i64 %32, 24
  %36 = icmp eq i64 %35, 0
  %37 = and i1 %34, %36
  br i1 %37, label %38, label %42

38:                                               ; preds = %16
  %39 = lshr i64 %32, 5
  %40 = trunc i64 %39 to i8
  %41 = icmp ult i8 %40, 12
  br label %42

42:                                               ; preds = %16, %38
  %43 = phi i1 [ false, %16 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %45 = ashr i64 %9, 35
  %46 = trunc i64 %45 to i32
  %47 = ashr i64 %32, 35
  %48 = trunc i64 %47 to i32
  br i1 %27, label %49, label %87

49:                                               ; preds = %42
  br i1 %43, label %50, label %64

50:                                               ; preds = %49
  tail call void @_ZN2v88internal9Assembler5cmovlENS0_9ConditionENS0_8RegisterES3_(%"class.v8::internal::Assembler"* %44, i32 %19, i32 %46, i32 %48) #11
  %51 = icmp eq i32 %2, 19
  br i1 %51, label %52, label %125

52:                                               ; preds = %50
  %53 = load i64, i64* %8, align 8
  %54 = ashr i64 %53, 35
  %55 = trunc i64 %54 to i32
  %56 = load i32, i32* %20, align 4
  %57 = and i32 %56, 255
  %58 = zext i32 %57 to i64
  %59 = add nsw i64 %25, %58
  %60 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %59, i32 0
  %61 = load i64, i64* %60, align 8
  %62 = ashr i64 %61, 35
  %63 = trunc i64 %62 to i32
  tail call void @_ZN2v88internal9Assembler5cmovlENS0_9ConditionENS0_8RegisterES3_(%"class.v8::internal::Assembler"* %44, i32 10, i32 %55, i32 %63) #11
  br label %125

64:                                               ; preds = %49
  %65 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %4, i32 %48, i32 0) #11
  %66 = extractvalue { i64, i32 } %65, 0
  %67 = extractvalue { i64, i32 } %65, 1
  call void @_ZN2v88internal9Assembler5cmovlENS0_9ConditionENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %44, i32 %19, i32 %46, i64 %66, i32 %67) #11
  %68 = icmp eq i32 %2, 19
  br i1 %68, label %69, label %125

69:                                               ; preds = %64
  %70 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %7, align 8
  %71 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %70, i64 0, i32 5, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = ashr i64 %72, 35
  %74 = trunc i64 %73 to i32
  %75 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %70, i64 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = and i32 %76, 255
  %78 = zext i32 %77 to i64
  %79 = add nsw i64 %25, %78
  %80 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %70, i64 0, i32 5, i64 %79, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = ashr i64 %81, 35
  %83 = trunc i64 %82 to i32
  %84 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %4, i32 %83, i32 0) #11
  %85 = extractvalue { i64, i32 } %84, 0
  %86 = extractvalue { i64, i32 } %84, 1
  call void @_ZN2v88internal9Assembler5cmovlENS0_9ConditionENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %44, i32 10, i32 %74, i64 %85, i32 %86) #11
  br label %125

87:                                               ; preds = %42
  br i1 %43, label %88, label %102

88:                                               ; preds = %87
  tail call void @_ZN2v88internal9Assembler5cmovqENS0_9ConditionENS0_8RegisterES3_(%"class.v8::internal::Assembler"* %44, i32 %19, i32 %46, i32 %48) #11
  %89 = icmp eq i32 %2, 19
  br i1 %89, label %90, label %125

90:                                               ; preds = %88
  %91 = load i64, i64* %8, align 8
  %92 = ashr i64 %91, 35
  %93 = trunc i64 %92 to i32
  %94 = load i32, i32* %20, align 4
  %95 = and i32 %94, 255
  %96 = zext i32 %95 to i64
  %97 = add nsw i64 %25, %96
  %98 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %97, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = ashr i64 %99, 35
  %101 = trunc i64 %100 to i32
  tail call void @_ZN2v88internal9Assembler5cmovqENS0_9ConditionENS0_8RegisterES3_(%"class.v8::internal::Assembler"* %44, i32 10, i32 %93, i32 %101) #11
  br label %125

102:                                              ; preds = %87
  %103 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %4, i32 %48, i32 0) #11
  %104 = extractvalue { i64, i32 } %103, 0
  %105 = extractvalue { i64, i32 } %103, 1
  call void @_ZN2v88internal9Assembler5cmovqENS0_9ConditionENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %44, i32 %19, i32 %46, i64 %104, i32 %105) #11
  %106 = icmp eq i32 %2, 19
  br i1 %106, label %107, label %125

107:                                              ; preds = %102
  %108 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %7, align 8
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %108, i64 0, i32 5, i64 0, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = ashr i64 %110, 35
  %112 = trunc i64 %111 to i32
  %113 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %108, i64 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = and i32 %114, 255
  %116 = zext i32 %115 to i64
  %117 = add nsw i64 %25, %116
  %118 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %108, i64 0, i32 5, i64 %117, i32 0
  %119 = load i64, i64* %118, align 8
  %120 = ashr i64 %119, 35
  %121 = trunc i64 %120 to i32
  %122 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %4, i32 %121, i32 0) #11
  %123 = extractvalue { i64, i32 } %122, 0
  %124 = extractvalue { i64, i32 } %122, 1
  call void @_ZN2v88internal9Assembler5cmovqENS0_9ConditionENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %44, i32 10, i32 %112, i64 %123, i32 %124) #11
  br label %125

125:                                              ; preds = %90, %88, %107, %102, %52, %50, %69, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  ret void
}

declare void @_ZN2v88internal9Assembler5cmovlENS0_9ConditionENS0_8RegisterES3_(%"class.v8::internal::Assembler"*, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5cmovlENS0_9ConditionENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"*, i32, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5cmovqENS0_9ConditionENS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"*, i32, i32, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13CodeGenerator11FinishFrameEPNS1_5FrameE(%"class.v8::internal::compiler::CodeGenerator"* nocapture readonly, %"class.v8::internal::compiler::Frame"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 4
  %4 = load %"class.v8::internal::compiler::Linkage"*, %"class.v8::internal::compiler::Linkage"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Linkage", %"class.v8::internal::compiler::Linkage"* %4, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %6, i64 0, i32 9
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %1, i64 0, i32 3
  %12 = tail call i32 @_ZN2v88internal20AlignedSlotAllocator5AlignEi(%"class.v8::internal::AlignedSlotAllocator"* %11, i32 1) #11
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = add nsw i32 %14, %12
  store i32 %15, i32* %13, align 4
  %16 = tail call i32 @llvm.ctpop.i32(i32 %8) #11, !range !5
  %17 = shl nuw nsw i32 %16, 1
  %18 = tail call i32 @_ZN2v88internal20AlignedSlotAllocator17AllocateUnalignedEi(%"class.v8::internal::AlignedSlotAllocator"* %11, i32 %17) #11
  br label %19

19:                                               ; preds = %2, %10
  %20 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %6, i64 0, i32 8
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %67, label %23

23:                                               ; preds = %19
  %24 = lshr i32 %21, 15
  %25 = lshr i32 %21, 14
  %26 = lshr i32 %21, 13
  %27 = lshr i32 %21, 12
  %28 = lshr i32 %21, 11
  %29 = lshr i32 %21, 10
  %30 = lshr i32 %21, 9
  %31 = lshr i32 %21, 8
  %32 = lshr i32 %21, 7
  %33 = lshr i32 %21, 6
  %34 = lshr i32 %21, 5
  %35 = lshr i32 %21, 4
  %36 = lshr i32 %21, 3
  %37 = lshr i32 %21, 2
  %38 = lshr i32 %21, 1
  %39 = insertelement <16 x i32> undef, i32 %24, i32 0
  %40 = insertelement <16 x i32> %39, i32 %25, i32 1
  %41 = insertelement <16 x i32> %40, i32 %26, i32 2
  %42 = insertelement <16 x i32> %41, i32 %27, i32 3
  %43 = insertelement <16 x i32> %42, i32 %28, i32 4
  %44 = insertelement <16 x i32> %43, i32 %29, i32 5
  %45 = insertelement <16 x i32> %44, i32 %30, i32 6
  %46 = insertelement <16 x i32> %45, i32 %31, i32 7
  %47 = insertelement <16 x i32> %46, i32 %32, i32 8
  %48 = insertelement <16 x i32> %47, i32 %33, i32 9
  %49 = insertelement <16 x i32> %48, i32 %34, i32 10
  %50 = insertelement <16 x i32> %49, i32 %35, i32 11
  %51 = insertelement <16 x i32> %50, i32 %36, i32 12
  %52 = insertelement <16 x i32> %51, i32 %37, i32 13
  %53 = insertelement <16 x i32> %52, i32 %38, i32 14
  %54 = insertelement <16 x i32> %53, i32 %21, i32 15
  %55 = and <16 x i32> %54, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %56 = shufflevector <16 x i32> %55, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %57 = add nuw nsw <16 x i32> %55, %56
  %58 = shufflevector <16 x i32> %57, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %59 = add nuw nsw <16 x i32> %57, %58
  %60 = shufflevector <16 x i32> %59, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %61 = add nuw nsw <16 x i32> %59, %60
  %62 = shufflevector <16 x i32> %61, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %63 = add nuw nsw <16 x i32> %61, %62
  %64 = extractelement <16 x i32> %63, i32 0
  %65 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %1, i64 0, i32 3
  %66 = tail call i32 @_ZN2v88internal20AlignedSlotAllocator17AllocateUnalignedEi(%"class.v8::internal::AlignedSlotAllocator"* %65, i32 %64) #11
  br label %67

67:                                               ; preds = %19, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13CodeGenerator22AssembleConstructFrameEv(%"class.v8::internal::compiler::CodeGenerator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Label", align 4
  %3 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 4
  %4 = load %"class.v8::internal::compiler::Linkage"*, %"class.v8::internal::compiler::Linkage"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Linkage", %"class.v8::internal::compiler::Linkage"* %4, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 3
  %8 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %8, i64 0, i32 4
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %47, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %14 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %16, %19
  %21 = trunc i64 %20 to i32
  %22 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %6, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  switch i32 %23, label %32 [
    i32 2, label %24
    i32 1, label %31
  ]

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %13, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler5pushqENS0_8RegisterE(%"class.v8::internal::Assembler"* %25, i32 5) #11
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %25, i32 5, i32 4, i32 8) #11
  %26 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 7
  %27 = load %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::OptimizedCompilationInfo"** %26, align 8
  %28 = tail call i32 @_ZNK2v88internal24OptimizedCompilationInfo23GetOutputStackFrameTypeEv(%"class.v8::internal::OptimizedCompilationInfo"* %27) #11
  %29 = icmp eq i32 %28, 8
  br i1 %29, label %30, label %44

30:                                               ; preds = %24
  tail call void @_ZN2v88internal14TurboAssembler4PushENS0_9ImmediateE(%"class.v8::internal::TurboAssembler"* %13, i64 16) #11
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %25, i8 zeroext 5, i32 4, i64 8, i32 8) #11
  br label %44

31:                                               ; preds = %12
  tail call void @_ZN2v88internal14TurboAssembler8PrologueEv(%"class.v8::internal::TurboAssembler"* %13) #11
  br label %44

32:                                               ; preds = %12
  %33 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 7
  %34 = load %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::OptimizedCompilationInfo"** %33, align 8
  %35 = tail call i32 @_ZNK2v88internal24OptimizedCompilationInfo23GetOutputStackFrameTypeEv(%"class.v8::internal::OptimizedCompilationInfo"* %34) #11
  tail call void @_ZN2v88internal14TurboAssembler12StubPrologueENS0_10StackFrame4TypeE(%"class.v8::internal::TurboAssembler"* %13, i32 %35) #11
  %36 = load i32, i32* %22, align 8
  switch i32 %36, label %44 [
    i32 4, label %37
    i32 5, label %39
    i32 3, label %39
  ]

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %13, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler5pushqENS0_8RegisterE(%"class.v8::internal::Assembler"* %38, i32 6) #11
  br label %44

39:                                               ; preds = %32, %32
  tail call void @_ZN2v88internal14TurboAssembler22LoadTaggedPointerFieldENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %13, i32 7, i64 476672, i32 131072) #11
  tail call void @_ZN2v88internal14TurboAssembler22LoadTaggedPointerFieldENS0_8RegisterENS0_7OperandE(%"class.v8::internal::TurboAssembler"* %13, i32 6, i64 214528, i32 131072) #11
  %40 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %13, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler5pushqENS0_8RegisterE(%"class.v8::internal::Assembler"* %40, i32 6) #11
  %41 = load i32, i32* %22, align 8
  %42 = icmp eq i32 %41, 3
  br i1 %42, label %43, label %44

43:                                               ; preds = %39
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %40, i8 zeroext 5, i32 4, i64 8, i32 8) #11
  br label %44

44:                                               ; preds = %32, %31, %43, %39, %37, %24, %30
  %45 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6
  tail call void @_ZN2v88internal8compiler19UnwindingInfoWriter20MarkFrameConstructedEi(%"class.v8::internal::compiler::UnwindingInfoWriter"* %45, i32 %21) #11
  %46 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %7, align 8
  br label %47

47:                                               ; preds = %1, %44
  %48 = phi %"class.v8::internal::compiler::FrameAccessState"* [ %8, %1 ], [ %46, %44 ]
  %49 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %48, i64 0, i32 0
  %50 = load %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::Frame"** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %50, i64 0, i32 3, i32 3
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %50, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  %55 = add nsw i32 %54, %52
  %56 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %50, i64 0, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = sub i32 %55, %57
  %59 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 7
  %60 = load %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::OptimizedCompilationInfo"** %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::OptimizedCompilationInfo", %"class.v8::internal::OptimizedCompilationInfo"* %60, i64 0, i32 10, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, -1
  br i1 %63, label %79, label %64

64:                                               ; preds = %47
  %65 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  tail call void @_ZN2v88internal14TurboAssembler5AbortENS0_11AbortReasonE(%"class.v8::internal::TurboAssembler"* %65, i8 zeroext 35) #11
  %66 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %67 = bitcast i8** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %70 = bitcast i8** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = sub i64 %68, %71
  %73 = trunc i64 %72 to i32
  %74 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 35
  store i32 %73, i32* %74, align 8
  %75 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 34, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = trunc i64 %76 to i32
  %78 = sub nsw i32 %58, %77
  tail call void @_ZN2v88internal8compiler13CodeGenerator22ResetSpeculationPoisonEv(%"class.v8::internal::compiler::CodeGenerator"* %0) #11
  br label %79

79:                                               ; preds = %47, %64
  %80 = phi i32 [ %78, %64 ], [ %58, %47 ]
  %81 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %6, i64 0, i32 8
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %6, i64 0, i32 9
  %84 = load i32, i32* %83, align 8
  %85 = icmp sgt i32 %80, 0
  br i1 %85, label %86, label %162

86:                                               ; preds = %79
  %87 = load %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::OptimizedCompilationInfo"** %59, align 8
  %88 = getelementptr inbounds %"class.v8::internal::OptimizedCompilationInfo", %"class.v8::internal::OptimizedCompilationInfo"* %87, i64 0, i32 2
  %89 = load i32, i32* %88, align 8
  %90 = icmp eq i32 %89, 4
  %91 = icmp sgt i32 %80, 128
  %92 = and i1 %91, %90
  br i1 %92, label %93, label %145

93:                                               ; preds = %86
  %94 = bitcast %"class.v8::internal::Label"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #11
  %95 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %2, i64 0, i32 0
  store i32 0, i32* %95, align 4
  %96 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %2, i64 0, i32 1
  store i32 0, i32* %96, align 4
  %97 = shl nsw i32 %80, 3
  %98 = load i32, i32* @_ZN2v88internal15FLAG_stack_sizeE, align 4
  %99 = shl nsw i32 %98, 10
  %100 = icmp slt i32 %97, %99
  br i1 %100, label %101, label %104

101:                                              ; preds = %93
  %102 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %102, i32 10, i64 10716672, i32 327680, i32 8) #11
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %102, i32 10, i64 513, i32 65536, i32 8) #11
  %103 = zext i32 %97 to i64
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %102, i8 zeroext 0, i32 10, i64 %103, i32 8) #11
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %102, i8 zeroext 59, i32 4, i32 10, i32 8) #11
  call void @_ZN2v88internal9Assembler1jENS0_9ConditionEPNS0_5LabelENS3_8DistanceE(%"class.v8::internal::Assembler"* %102, i32 3, %"class.v8::internal::Label"* nonnull %2, i32 0) #11
  br label %104

104:                                              ; preds = %101, %93
  %105 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %106 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %105, i64 0, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler9near_callElNS0_9RelocInfo4ModeE(%"class.v8::internal::Assembler"* %106, i64 40, i8 signext 7) #11
  %107 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 1
  %108 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %107, align 8
  %109 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %108, i64 0, i32 2
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %108, i64 0, i32 3
  %112 = load i64, i64* %111, align 8
  %113 = sub i64 %112, %110
  %114 = icmp ult i64 %113, 40
  br i1 %114, label %115, label %117, !prof !3

115:                                              ; preds = %104
  %116 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %108, i64 40) #11
  br label %119

117:                                              ; preds = %104
  %118 = add i64 %110, 40
  store i64 %118, i64* %109, align 8
  br label %119

119:                                              ; preds = %117, %115
  %120 = phi i64 [ %116, %115 ], [ %110, %117 ]
  %121 = inttoptr i64 %120 to i8*
  %122 = inttoptr i64 %120 to %"class.v8::internal::compiler::ReferenceMap"*
  %123 = ptrtoint %"class.v8::internal::Zone"* %108 to i64
  %124 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap", %"class.v8::internal::compiler::ReferenceMap"* %122, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %125 = bitcast %"struct.std::__1::__compressed_pair_elem.719"* %124 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %121, i8 0, i64 24, i1 false) #11
  store i64 %123, i64* %125, align 8
  %126 = load i64, i64* %109, align 8
  %127 = load i64, i64* %111, align 8
  %128 = sub i64 %127, %126
  %129 = icmp ult i64 %128, 64
  br i1 %129, label %130, label %132, !prof !3

130:                                              ; preds = %119
  %131 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %108, i64 64) #11
  br label %134

132:                                              ; preds = %119
  %133 = add i64 %126, 64
  store i64 %133, i64* %109, align 8
  br label %134

134:                                              ; preds = %130, %132
  %135 = phi i64 [ %131, %130 ], [ %126, %132 ]
  %136 = inttoptr i64 %135 to %"class.v8::internal::compiler::InstructionOperand"*
  %137 = inttoptr i64 %135 to i8*
  %138 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap", %"class.v8::internal::compiler::ReferenceMap"* %122, i64 0, i32 0, i32 0, i32 0, i32 1
  %139 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap", %"class.v8::internal::compiler::ReferenceMap"* %122, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::InstructionOperand"* %136, %"class.v8::internal::compiler::InstructionOperand"** %139, align 8
  %140 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %136, i64 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap", %"class.v8::internal::compiler::ReferenceMap"* %122, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::InstructionOperand"* %140, %"class.v8::internal::compiler::InstructionOperand"** %141, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %137, i8 0, i64 64, i1 false) #11
  %142 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %138 to i64*
  %143 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %140 to i64
  store i64 %143, i64* %142, align 8
  %144 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap", %"class.v8::internal::compiler::ReferenceMap"* %122, i64 0, i32 1
  store i32 -1, i32* %144, align 8
  call void @_ZN2v88internal8compiler13CodeGenerator15RecordSafepointEPNS1_12ReferenceMapE(%"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::ReferenceMap"* %122) #11
  call void @_ZN2v88internal14TurboAssembler17AssertUnreachableENS0_11AbortReasonE(%"class.v8::internal::TurboAssembler"* %105, i8 zeroext 49) #11
  call void @_ZN2v88internal9Assembler4bindEPNS0_5LabelE(%"class.v8::internal::Assembler"* %106, %"class.v8::internal::Label"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #11
  br label %145

145:                                              ; preds = %134, %86
  %146 = call i32 @llvm.ctpop.i32(i32 %82) #11, !range !5
  %147 = sub i32 %80, %146
  %148 = call i32 @llvm.ctpop.i32(i32 %84) #11, !range !5
  %149 = shl nuw nsw i32 %148, 1
  %150 = sub i32 %147, %149
  %151 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %7, align 8
  %152 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %151, i64 0, i32 0
  %153 = load %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::Frame"** %152, align 8
  %154 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %153, i64 0, i32 2
  %155 = load i32, i32* %154, align 8
  %156 = sub i32 %150, %155
  %157 = icmp sgt i32 %156, 0
  br i1 %157, label %158, label %162

158:                                              ; preds = %145
  %159 = shl nsw i32 %156, 3
  %160 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %161 = zext i32 %159 to i64
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %160, i8 zeroext 5, i32 4, i64 %161, i32 8) #11
  br label %162

162:                                              ; preds = %158, %145, %79
  %163 = icmp eq i32 %84, 0
  br i1 %163, label %212, label %164

164:                                              ; preds = %162
  %165 = call i32 @llvm.ctpop.i32(i32 %84) #11, !range !5
  %166 = shl nuw nsw i32 %165, 4
  %167 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %168 = zext i32 %166 to i64
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %167, i8 zeroext 5, i32 4, i64 %168, i32 8) #11
  br label %169

169:                                              ; preds = %206, %164
  %170 = phi i32 [ 0, %164 ], [ %209, %206 ]
  %171 = phi i32 [ 0, %164 ], [ %210, %206 ]
  %172 = phi i24 [ undef, %164 ], [ %208, %206 ]
  %173 = phi i8 [ undef, %164 ], [ %207, %206 ]
  %174 = shl i32 1, %171
  %175 = and i32 %174, %84
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %206, label %177

177:                                              ; preds = %169
  %178 = shl nsw i32 %170, 4
  %179 = icmp eq i32 %170, 0
  br i1 %179, label %188, label %180

180:                                              ; preds = %177
  %181 = sext i32 %178 to i64
  %182 = add nsw i64 %181, 128
  %183 = icmp ult i64 %182, 256
  %184 = trunc i32 %178 to i8
  br i1 %183, label %188, label %185

185:                                              ; preds = %180
  %186 = lshr i32 %170, 4
  %187 = trunc i32 %186 to i24
  br label %188

188:                                              ; preds = %180, %177, %185
  %189 = phi i8 [ %184, %185 ], [ %173, %177 ], [ %184, %180 ]
  %190 = phi i24 [ %187, %185 ], [ %172, %177 ], [ %172, %180 ]
  %191 = phi i32 [ 393216, %185 ], [ 131072, %177 ], [ 196608, %180 ]
  %192 = phi i64 [ 2393088, %185 ], [ 2360320, %177 ], [ 2376704, %180 ]
  %193 = zext i24 %190 to i64
  %194 = shl nuw nsw i64 %193, 8
  %195 = zext i8 %189 to i64
  %196 = or i64 %194, %195
  %197 = shl nuw nsw i64 %196, 24
  %198 = or i64 %192, %197
  %199 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %200 = and i32 %199, 32
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %203, label %202

202:                                              ; preds = %188
  call void @_ZN2v88internal9Assembler7vmovdquENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %167, i64 %198, i32 %191, i32 %171) #11
  br label %204

203:                                              ; preds = %188
  call void @_ZN2v88internal9Assembler6movupsENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %167, i64 %198, i32 %191, i32 %171) #11
  br label %204

204:                                              ; preds = %202, %203
  %205 = add nsw i32 %170, 1
  br label %206

206:                                              ; preds = %169, %204
  %207 = phi i8 [ %173, %169 ], [ %189, %204 ]
  %208 = phi i24 [ %172, %169 ], [ %190, %204 ]
  %209 = phi i32 [ %170, %169 ], [ %205, %204 ]
  %210 = add nuw nsw i32 %171, 1
  %211 = icmp eq i32 %210, 16
  br i1 %211, label %212, label %169

212:                                              ; preds = %206, %162
  %213 = icmp eq i32 %82, 0
  br i1 %213, label %222, label %214

214:                                              ; preds = %212
  %215 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %216 = trunc i32 %82 to i16
  %217 = icmp sgt i16 %216, -1
  br i1 %217, label %219, label %218

218:                                              ; preds = %214
  call void @_ZN2v88internal9Assembler5pushqENS0_8RegisterE(%"class.v8::internal::Assembler"* %215, i32 15) #11
  br label %219

219:                                              ; preds = %214, %218
  %220 = and i32 %82, 16384
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %235, label %234

222:                                              ; preds = %287, %290, %212
  %223 = load %"class.v8::internal::compiler::FrameAccessState"*, %"class.v8::internal::compiler::FrameAccessState"** %7, align 8
  %224 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %223, i64 0, i32 0
  %225 = load %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::Frame"** %224, align 8
  %226 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %225, i64 0, i32 2
  %227 = load i32, i32* %226, align 8
  %228 = icmp sgt i32 %227, 0
  br i1 %228, label %229, label %233

229:                                              ; preds = %222
  %230 = shl nsw i32 %227, 3
  %231 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %232 = zext i32 %230 to i64
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %231, i8 zeroext 5, i32 4, i64 %232, i32 8) #11
  br label %233

233:                                              ; preds = %229, %222
  ret void

234:                                              ; preds = %219
  call void @_ZN2v88internal9Assembler5pushqENS0_8RegisterE(%"class.v8::internal::Assembler"* %215, i32 14) #11
  br label %235

235:                                              ; preds = %234, %219
  %236 = and i32 %82, 8192
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %239, label %238

238:                                              ; preds = %235
  call void @_ZN2v88internal9Assembler5pushqENS0_8RegisterE(%"class.v8::internal::Assembler"* %215, i32 13) #11
  br label %239

239:                                              ; preds = %238, %235
  %240 = and i32 %82, 4096
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %243, label %242

242:                                              ; preds = %239
  call void @_ZN2v88internal9Assembler5pushqENS0_8RegisterE(%"class.v8::internal::Assembler"* %215, i32 12) #11
  br label %243

243:                                              ; preds = %242, %239
  %244 = and i32 %82, 2048
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %247, label %246

246:                                              ; preds = %243
  call void @_ZN2v88internal9Assembler5pushqENS0_8RegisterE(%"class.v8::internal::Assembler"* %215, i32 11) #11
  br label %247

247:                                              ; preds = %246, %243
  %248 = and i32 %82, 1024
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %251, label %250

250:                                              ; preds = %247
  call void @_ZN2v88internal9Assembler5pushqENS0_8RegisterE(%"class.v8::internal::Assembler"* %215, i32 10) #11
  br label %251

251:                                              ; preds = %250, %247
  %252 = and i32 %82, 512
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %255, label %254

254:                                              ; preds = %251
  call void @_ZN2v88internal9Assembler5pushqENS0_8RegisterE(%"class.v8::internal::Assembler"* %215, i32 9) #11
  br label %255

255:                                              ; preds = %254, %251
  %256 = and i32 %82, 256
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %259, label %258

258:                                              ; preds = %255
  call void @_ZN2v88internal9Assembler5pushqENS0_8RegisterE(%"class.v8::internal::Assembler"* %215, i32 8) #11
  br label %259

259:                                              ; preds = %258, %255
  %260 = trunc i32 %82 to i8
  %261 = icmp sgt i8 %260, -1
  br i1 %261, label %263, label %262

262:                                              ; preds = %259
  call void @_ZN2v88internal9Assembler5pushqENS0_8RegisterE(%"class.v8::internal::Assembler"* %215, i32 7) #11
  br label %263

263:                                              ; preds = %262, %259
  %264 = and i32 %82, 64
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %267, label %266

266:                                              ; preds = %263
  call void @_ZN2v88internal9Assembler5pushqENS0_8RegisterE(%"class.v8::internal::Assembler"* %215, i32 6) #11
  br label %267

267:                                              ; preds = %266, %263
  %268 = and i32 %82, 32
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %271, label %270

270:                                              ; preds = %267
  call void @_ZN2v88internal9Assembler5pushqENS0_8RegisterE(%"class.v8::internal::Assembler"* %215, i32 5) #11
  br label %271

271:                                              ; preds = %270, %267
  %272 = and i32 %82, 16
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %275, label %274

274:                                              ; preds = %271
  call void @_ZN2v88internal9Assembler5pushqENS0_8RegisterE(%"class.v8::internal::Assembler"* %215, i32 4) #11
  br label %275

275:                                              ; preds = %274, %271
  %276 = and i32 %82, 8
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %279, label %278

278:                                              ; preds = %275
  call void @_ZN2v88internal9Assembler5pushqENS0_8RegisterE(%"class.v8::internal::Assembler"* %215, i32 3) #11
  br label %279

279:                                              ; preds = %278, %275
  %280 = and i32 %82, 4
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %283, label %282

282:                                              ; preds = %279
  call void @_ZN2v88internal9Assembler5pushqENS0_8RegisterE(%"class.v8::internal::Assembler"* %215, i32 2) #11
  br label %283

283:                                              ; preds = %282, %279
  %284 = and i32 %82, 2
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %287, label %286

286:                                              ; preds = %283
  call void @_ZN2v88internal9Assembler5pushqENS0_8RegisterE(%"class.v8::internal::Assembler"* %215, i32 1) #11
  br label %287

287:                                              ; preds = %286, %283
  %288 = and i32 %82, 1
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %222, label %290

290:                                              ; preds = %287
  call void @_ZN2v88internal9Assembler5pushqENS0_8RegisterE(%"class.v8::internal::Assembler"* %215, i32 0) #11
  br label %222
}

declare i32 @_ZNK2v88internal24OptimizedCompilationInfo23GetOutputStackFrameTypeEv(%"class.v8::internal::OptimizedCompilationInfo"*) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler8PrologueEv(%"class.v8::internal::TurboAssembler"*) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler12StubPrologueENS0_10StackFrame4TypeE(%"class.v8::internal::TurboAssembler"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal8compiler19UnwindingInfoWriter20MarkFrameConstructedEi(%"class.v8::internal::compiler::UnwindingInfoWriter"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler5AbortENS0_11AbortReasonE(%"class.v8::internal::TurboAssembler"*, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal8compiler13CodeGenerator22ResetSpeculationPoisonEv(%"class.v8::internal::compiler::CodeGenerator"*) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler17AssertUnreachableENS0_11AbortReasonE(%"class.v8::internal::TurboAssembler"*, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler3RetEiNS0_8RegisterE(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler3RetEv(%"class.v8::internal::TurboAssembler"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13CodeGenerator10FinishCodeEv(%"class.v8::internal::compiler::CodeGenerator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler14PatchConstPoolEv(%"class.v8::internal::Assembler"* %2) #11
  ret void
}

declare void @_ZN2v88internal9Assembler14PatchConstPoolEv(%"class.v8::internal::Assembler"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2v88internal8compiler13CodeGenerator29PrepareForDeoptimizationExitsEPNS0_9ZoneDequeIPNS1_18DeoptimizationExitEEE(%"class.v8::internal::compiler::CodeGenerator"* nocapture, %"class.v8::internal::ZoneDeque.870"* nocapture) local_unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13CodeGenerator27IncrementStackAccessCounterEPNS1_18InstructionOperandES4_(%"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::InstructionOperand"* nocapture readonly, %"class.v8::internal::compiler::InstructionOperand"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 7
  %5 = load %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::OptimizedCompilationInfo"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::OptimizedCompilationInfo", %"class.v8::internal::OptimizedCompilationInfo"* %5, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %42 [
    i32 13, label %8
    i32 12, label %8
    i32 4, label %8
  ]

8:                                                ; preds = %3, %3, %3
  %9 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 7
  %12 = icmp ugt i64 %11, 4
  %13 = and i64 %10, 24
  %14 = icmp eq i64 %13, 8
  %15 = and i1 %12, %14
  br i1 %15, label %16, label %25

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 44
  %18 = load i8*, i8** %17, align 8
  %19 = tail call i64 @_ZN2v88internal17ExternalReference32address_of_load_from_stack_countEPKc(i8* %18) #11
  %20 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %21 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = tail call { i64, i32 } @_ZN2v88internal14TurboAssembler26ExternalReferenceAsOperandENS0_17ExternalReferenceENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %20, i64 %19, i32 10) #11
  %23 = extractvalue { i64, i32 } %22, 0
  %24 = extractvalue { i64, i32 } %22, 1
  tail call void @_ZN2v88internal9Assembler8emit_incENS0_7OperandEi(%"class.v8::internal::Assembler"* %21, i64 %23, i32 %24, i32 4) #11
  br label %25

25:                                               ; preds = %16, %8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = and i64 %27, 7
  %29 = icmp ugt i64 %28, 4
  %30 = and i64 %27, 24
  %31 = icmp eq i64 %30, 8
  %32 = and i1 %29, %31
  br i1 %32, label %33, label %42

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 44
  %35 = load i8*, i8** %34, align 8
  %36 = tail call i64 @_ZN2v88internal17ExternalReference31address_of_store_to_stack_countEPKc(i8* %35) #11
  %37 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %38 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = tail call { i64, i32 } @_ZN2v88internal14TurboAssembler26ExternalReferenceAsOperandENS0_17ExternalReferenceENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %37, i64 %36, i32 10) #11
  %40 = extractvalue { i64, i32 } %39, 0
  %41 = extractvalue { i64, i32 } %39, 1
  tail call void @_ZN2v88internal9Assembler8emit_incENS0_7OperandEi(%"class.v8::internal::Assembler"* %38, i64 %40, i32 %41, i32 4) #11
  br label %42

42:                                               ; preds = %3, %25, %33
  ret void
}

declare i64 @_ZN2v88internal17ExternalReference32address_of_load_from_stack_countEPKc(i8*) local_unnamed_addr #1

declare i64 @_ZN2v88internal17ExternalReference31address_of_store_to_stack_countEPKc(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13CodeGenerator12AssembleMoveEPNS1_18InstructionOperandES4_(%"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::compiler::X64OperandConverter", align 8
  %5 = bitcast %"class.v8::internal::compiler::X64OperandConverter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %4, i64 0, i32 0, i32 0
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %4, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::Instruction"* null, %"class.v8::internal::compiler::Instruction"** %7, align 8
  %8 = load i8, i8* @_ZN2v88internal31FLAG_trace_turbo_stack_accessesE, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %3
  tail call void @_ZN2v88internal8compiler13CodeGenerator27IncrementStackAccessCounterEPNS1_18InstructionOperandES4_(%"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::InstructionOperand"* %1, %"class.v8::internal::compiler::InstructionOperand"* %2)
  br label %11

11:                                               ; preds = %3, %10
  %12 = tail call i32 @_ZN2v88internal8compiler13CodeGenerator8MoveType9InferMoveEPNS1_18InstructionOperandES5_(%"class.v8::internal::compiler::InstructionOperand"* %1, %"class.v8::internal::compiler::InstructionOperand"* %2) #11
  switch i32 %12, label %241 [
    i32 0, label %13
    i32 1, label %45
    i32 2, label %82
    i32 3, label %122
    i32 4, label %173
    i32 5, label %201
  ]

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, 7
  %17 = icmp ugt i64 %16, 4
  %18 = and i64 %15, 24
  %19 = icmp eq i64 %18, 0
  %20 = and i1 %17, %19
  br i1 %20, label %23, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  br label %36

23:                                               ; preds = %13
  %24 = lshr i64 %15, 5
  %25 = trunc i64 %24 to i8
  %26 = icmp ult i8 %25, 12
  %27 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  br i1 %26, label %28, label %36

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %27, i64 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = ashr i64 %31, 35
  %33 = trunc i64 %32 to i32
  %34 = ashr i64 %15, 35
  %35 = trunc i64 %34 to i32
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %29, i32 %33, i32 %35, i32 8) #11
  br label %242

36:                                               ; preds = %21, %23
  %37 = phi %"class.v8::internal::TurboAssembler"* [ %22, %21 ], [ %27, %23 ]
  %38 = bitcast %"class.v8::internal::TurboAssembler"* %37 to %"class.v8::internal::SharedTurboAssembler"*
  %39 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = ashr i64 %40, 35
  %42 = trunc i64 %41 to i32
  %43 = ashr i64 %15, 35
  %44 = trunc i64 %43 to i32
  tail call void @_ZN2v88internal20SharedTurboAssembler6MovapdENS0_11XMMRegisterES2_(%"class.v8::internal::SharedTurboAssembler"* %38, i32 %42, i32 %44) #11
  br label %242

45:                                               ; preds = %11
  %46 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = ashr i64 %47, 35
  %49 = trunc i64 %48 to i32
  %50 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %4, i32 %49, i32 0) #11
  %51 = extractvalue { i64, i32 } %50, 0
  %52 = extractvalue { i64, i32 } %50, 1
  %53 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = and i64 %54, 7
  %56 = icmp ugt i64 %55, 4
  %57 = and i64 %54, 24
  %58 = icmp eq i64 %57, 0
  %59 = and i1 %56, %58
  %60 = lshr i64 %54, 5
  %61 = trunc i64 %60 to i8
  %62 = icmp ult i8 %61, 12
  %63 = and i1 %59, %62
  br i1 %63, label %64, label %68

64:                                               ; preds = %45
  %65 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %66 = ashr i64 %54, 35
  %67 = trunc i64 %66 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %65, i64 %51, i32 %52, i32 %67, i32 8) #11
  br label %242

68:                                               ; preds = %45
  %69 = ashr i64 %54, 35
  %70 = trunc i64 %69 to i32
  %71 = icmp eq i8 %61, 14
  %72 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %73 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %74 = and i32 %73, 32
  %75 = icmp eq i32 %74, 0
  br i1 %71, label %79, label %76

76:                                               ; preds = %68
  br i1 %75, label %78, label %77

77:                                               ; preds = %76
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %72, i8 zeroext 17, i32 %70, i32 0, i64 %51, i32 %52, i32 3, i32 1, i32 0, i32 5) #11
  br label %242

78:                                               ; preds = %76
  call void @_ZN2v88internal9Assembler5movsdENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %72, i64 %51, i32 %52, i32 %70) #11
  br label %242

79:                                               ; preds = %68
  br i1 %75, label %81, label %80

80:                                               ; preds = %79
  call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"* %72, i8 zeroext 17, i32 %70, i32 0, i64 %51, i32 %52) #11
  br label %242

81:                                               ; preds = %79
  call void @_ZN2v88internal9Assembler6movupsENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %72, i64 %51, i32 %52, i32 %70) #11
  br label %242

82:                                               ; preds = %11
  %83 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = ashr i64 %84, 35
  %86 = trunc i64 %85 to i32
  %87 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %4, i32 %86, i32 0) #11
  %88 = extractvalue { i64, i32 } %87, 0
  %89 = extractvalue { i64, i32 } %87, 1
  %90 = load i64, i64* %83, align 8
  %91 = and i64 %90, 7
  %92 = icmp ugt i64 %91, 4
  %93 = and i64 %90, 24
  %94 = icmp eq i64 %93, 8
  %95 = and i1 %92, %94
  %96 = lshr i64 %90, 5
  %97 = trunc i64 %96 to i8
  %98 = icmp ult i8 %97, 12
  %99 = and i1 %95, %98
  br i1 %99, label %100, label %106

100:                                              ; preds = %82
  %101 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 0, i32 0
  %103 = load i64, i64* %102, align 8
  %104 = ashr i64 %103, 35
  %105 = trunc i64 %104 to i32
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %101, i32 %105, i64 %88, i32 %89, i32 8) #11
  br label %242

106:                                              ; preds = %82
  %107 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 0, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = ashr i64 %108, 35
  %110 = trunc i64 %109 to i32
  %111 = icmp eq i8 %97, 14
  %112 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %113 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %114 = and i32 %113, 32
  %115 = icmp eq i32 %114, 0
  br i1 %111, label %119, label %116

116:                                              ; preds = %106
  br i1 %115, label %118, label %117

117:                                              ; preds = %116
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %112, i8 zeroext 16, i32 %110, i32 0, i64 %88, i32 %89, i32 3, i32 1, i32 0, i32 5) #11
  br label %242

118:                                              ; preds = %116
  call void @_ZN2v88internal9Assembler5movsdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %112, i32 %110, i64 %88, i32 %89) #11
  br label %242

119:                                              ; preds = %106
  br i1 %115, label %121, label %120

120:                                              ; preds = %119
  call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"* %112, i8 zeroext 16, i32 %110, i32 0, i64 %88, i32 %89) #11
  br label %242

121:                                              ; preds = %119
  call void @_ZN2v88internal9Assembler6movupsENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %112, i32 %110, i64 %88, i32 %89) #11
  br label %242

122:                                              ; preds = %11
  %123 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 0, i32 0
  %124 = load i64, i64* %123, align 8
  %125 = ashr i64 %124, 35
  %126 = trunc i64 %125 to i32
  %127 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %4, i32 %126, i32 0) #11
  %128 = extractvalue { i64, i32 } %127, 0
  %129 = extractvalue { i64, i32 } %127, 1
  %130 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 0, i32 0
  %131 = load i64, i64* %130, align 8
  %132 = ashr i64 %131, 35
  %133 = trunc i64 %132 to i32
  %134 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %4, i32 %133, i32 0) #11
  %135 = extractvalue { i64, i32 } %134, 0
  %136 = extractvalue { i64, i32 } %134, 1
  %137 = load i64, i64* %123, align 8
  %138 = and i64 %137, 7
  %139 = icmp ugt i64 %138, 4
  %140 = and i64 %137, 24
  %141 = icmp eq i64 %140, 8
  %142 = and i1 %139, %141
  %143 = lshr i64 %137, 5
  %144 = trunc i64 %143 to i8
  %145 = icmp ult i8 %144, 12
  %146 = and i1 %142, %145
  br i1 %146, label %147, label %149

147:                                              ; preds = %122
  %148 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %148, i32 10, i64 %128, i32 %129, i32 8) #11
  call void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %148, i64 %135, i32 %136, i32 10, i32 8) #11
  br label %242

149:                                              ; preds = %122
  %150 = icmp eq i8 %144, 14
  %151 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %152 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %153 = and i32 %152, 32
  %154 = icmp eq i32 %153, 0
  br i1 %150, label %164, label %155

155:                                              ; preds = %149
  br i1 %154, label %157, label %156

156:                                              ; preds = %155
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %151, i8 zeroext 16, i32 15, i32 0, i64 %128, i32 %129, i32 3, i32 1, i32 0, i32 5) #11
  br label %158

157:                                              ; preds = %155
  call void @_ZN2v88internal9Assembler5movsdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %151, i32 15, i64 %128, i32 %129) #11
  br label %158

158:                                              ; preds = %156, %157
  %159 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %160 = and i32 %159, 32
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %163, label %162

162:                                              ; preds = %158
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %151, i8 zeroext 17, i32 15, i32 0, i64 %135, i32 %136, i32 3, i32 1, i32 0, i32 5) #11
  br label %242

163:                                              ; preds = %158
  call void @_ZN2v88internal9Assembler5movsdENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %151, i64 %135, i32 %136, i32 15) #11
  br label %242

164:                                              ; preds = %149
  br i1 %154, label %166, label %165

165:                                              ; preds = %164
  call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"* %151, i8 zeroext 16, i32 15, i32 0, i64 %128, i32 %129) #11
  br label %167

166:                                              ; preds = %164
  call void @_ZN2v88internal9Assembler6movupsENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %151, i32 15, i64 %128, i32 %129) #11
  br label %167

167:                                              ; preds = %165, %166
  %168 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %169 = and i32 %168, 32
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %172, label %171

171:                                              ; preds = %167
  call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"* %151, i8 zeroext 17, i32 15, i32 0, i64 %135, i32 %136) #11
  br label %242

172:                                              ; preds = %167
  call void @_ZN2v88internal9Assembler6movupsENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %151, i64 %135, i32 %136, i32 15) #11
  br label %242

173:                                              ; preds = %11
  %174 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %4, i64 0, i32 0
  %175 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %174, %"class.v8::internal::compiler::InstructionOperand"* %1)
  %176 = extractvalue { i64, i64 } %175, 0
  %177 = trunc i64 %176 to i32
  %178 = extractvalue { i64, i64 } %175, 1
  %179 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 0, i32 0
  %180 = load i64, i64* %179, align 8
  %181 = and i64 %180, 7
  %182 = icmp ugt i64 %181, 4
  %183 = and i64 %180, 24
  %184 = icmp eq i64 %183, 0
  %185 = and i1 %182, %184
  br i1 %185, label %186, label %193

186:                                              ; preds = %173
  %187 = lshr i64 %180, 5
  %188 = trunc i64 %187 to i8
  %189 = icmp ult i8 %188, 12
  br i1 %189, label %190, label %193

190:                                              ; preds = %186
  %191 = ashr i64 %180, 35
  %192 = trunc i64 %191 to i32
  call fastcc void @"_ZZN2v88internal8compiler13CodeGenerator12AssembleMoveEPNS1_18InstructionOperandES4_ENK3$_1clENS0_8RegisterENS1_8ConstantE"(%"class.v8::internal::compiler::CodeGenerator"* %0, i32 %192, i64 %176, i64 %178)
  br label %242

193:                                              ; preds = %173, %186
  %194 = ashr i64 %180, 35
  %195 = trunc i64 %194 to i32
  %196 = icmp eq i32 %177, 2
  %197 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  br i1 %196, label %198, label %200

198:                                              ; preds = %193
  %199 = trunc i64 %178 to i32
  call void @_ZN2v88internal14TurboAssembler4MoveENS0_11XMMRegisterEj(%"class.v8::internal::TurboAssembler"* %197, i32 %195, i32 %199) #11
  br label %242

200:                                              ; preds = %193
  call void @_ZN2v88internal14TurboAssembler4MoveENS0_11XMMRegisterEm(%"class.v8::internal::TurboAssembler"* %197, i32 %195, i64 %178) #11
  br label %242

201:                                              ; preds = %11
  %202 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %4, i64 0, i32 0
  %203 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %202, %"class.v8::internal::compiler::InstructionOperand"* %1)
  %204 = extractvalue { i64, i64 } %203, 0
  %205 = trunc i64 %204 to i32
  %206 = extractvalue { i64, i64 } %203, 1
  %207 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 0, i32 0
  %208 = load i64, i64* %207, align 8
  %209 = ashr i64 %208, 35
  %210 = trunc i64 %209 to i32
  %211 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %4, i32 %210, i32 0) #11
  %212 = extractvalue { i64, i32 } %211, 0
  %213 = extractvalue { i64, i32 } %211, 1
  %214 = load i64, i64* %207, align 8
  %215 = and i64 %214, 7
  %216 = icmp ugt i64 %215, 4
  %217 = and i64 %214, 24
  %218 = icmp eq i64 %217, 8
  %219 = and i1 %216, %218
  br i1 %219, label %220, label %235

220:                                              ; preds = %201
  %221 = lshr i64 %214, 5
  %222 = trunc i64 %221 to i8
  %223 = icmp ult i8 %222, 12
  br i1 %223, label %224, label %235

224:                                              ; preds = %220
  %225 = and i64 %204, 1095216660480
  %226 = icmp eq i64 %225, 25769803776
  br i1 %226, label %233, label %227

227:                                              ; preds = %224
  switch i32 %205, label %233 [
    i32 0, label %228
    i32 1, label %231
  ]

228:                                              ; preds = %227
  %229 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %230 = and i64 %206, 4294967295
  call void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %229, i64 %212, i32 %213, i64 %230, i32 8) #11
  br label %242

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  call void @_ZN2v88internal14TurboAssembler4MoveENS0_7OperandEl(%"class.v8::internal::TurboAssembler"* %232, i64 %212, i32 %213, i64 %206) #11
  br label %242

233:                                              ; preds = %227, %224
  call fastcc void @"_ZZN2v88internal8compiler13CodeGenerator12AssembleMoveEPNS1_18InstructionOperandES4_ENK3$_1clENS0_8RegisterENS1_8ConstantE"(%"class.v8::internal::compiler::CodeGenerator"* %0, i32 10, i64 %204, i64 %206) #11
  %234 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %234, i64 %212, i32 %213, i32 10, i32 8) #11
  br label %242

235:                                              ; preds = %201, %220
  %236 = icmp eq i32 %205, 2
  %237 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %236, label %238, label %240

238:                                              ; preds = %235
  %239 = and i64 %206, 4294967295
  call void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %237, i64 %212, i32 %213, i64 %239, i32 4) #11
  br label %242

240:                                              ; preds = %235
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_11Immediate64Ei(%"class.v8::internal::Assembler"* %237, i32 10, i64 %206, i8 0, i32 8) #11
  call void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %237, i64 %212, i32 %213, i32 10, i32 8) #11
  br label %242

241:                                              ; preds = %11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #12
  unreachable

242:                                              ; preds = %240, %238, %228, %231, %233, %190, %200, %198, %172, %171, %163, %162, %121, %120, %118, %117, %81, %80, %78, %77, %147, %100, %64, %28, %36
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  ret void
}

declare i32 @_ZN2v88internal8compiler13CodeGenerator8MoveType9InferMoveEPNS1_18InstructionOperandES5_(%"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @"_ZZN2v88internal8compiler13CodeGenerator12AssembleMoveEPNS1_18InstructionOperandES4_ENK3$_1clENS0_8RegisterENS1_8ConstantE"(%"class.v8::internal::compiler::CodeGenerator"*, i32, i64, i64) unnamed_addr #5 align 2 {
  %5 = alloca %"class.v8::internal::compiler::Constant", align 8
  %6 = alloca i16, align 2
  %7 = alloca i16, align 2
  %8 = bitcast %"class.v8::internal::compiler::Constant"* %5 to i64*
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %5, i64 0, i32 2
  store i64 %3, i64* %9, align 8
  %10 = trunc i64 %2 to i32
  %11 = lshr i64 %2, 32
  %12 = trunc i64 %11 to i8
  switch i32 %10, label %73 [
    i32 0, label %13
    i32 1, label %26
    i32 2, label %32
    i32 3, label %37
    i32 4, label %40
    i32 6, label %43
    i32 5, label %56
    i32 8, label %69
    i32 7, label %72
  ]

13:                                               ; preds = %4
  %14 = icmp eq i8 %12, 6
  br i1 %14, label %15, label %19

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %17 = shl i64 %3, 32
  %18 = ashr exact i64 %17, 32
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_11Immediate64Ei(%"class.v8::internal::Assembler"* %16, i32 %1, i64 %18, i8 6, i32 8) #11
  br label %73

19:                                               ; preds = %13
  %20 = trunc i64 %3 to i32
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %21, label %23, label %24

23:                                               ; preds = %19
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %22, i8 zeroext 51, i32 %1, i32 %1, i32 4) #11
  br label %73

24:                                               ; preds = %19
  %25 = and i64 %3, 4294967295
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %22, i32 %1, i64 %25, i32 4) #11
  br label %73

26:                                               ; preds = %4
  %27 = icmp eq i8 %12, 6
  %28 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  br i1 %27, label %29, label %31

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %28, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_11Immediate64Ei(%"class.v8::internal::Assembler"* %30, i32 %1, i64 %3, i8 6, i32 8) #11
  br label %73

31:                                               ; preds = %26
  tail call void @_ZN2v88internal14TurboAssembler4MoveENS0_8RegisterEl(%"class.v8::internal::TurboAssembler"* %28, i32 %1, i64 %3)
  br label %73

32:                                               ; preds = %4
  %33 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %34 = trunc i64 %3 to i32
  %35 = bitcast i32 %34 to float
  %36 = fpext float %35 to double
  tail call void @_ZN2v88internal14TurboAssembler10MoveNumberENS0_8RegisterEd(%"class.v8::internal::TurboAssembler"* %33, i32 %1, double %36) #11
  br label %73

37:                                               ; preds = %4
  %38 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %39 = bitcast i64 %3 to double
  tail call void @_ZN2v88internal14TurboAssembler10MoveNumberENS0_8RegisterEd(%"class.v8::internal::TurboAssembler"* %38, i32 %1, double %39) #11
  br label %73

40:                                               ; preds = %4
  %41 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %42 = tail call i64 @_ZN2v88internal17ExternalReference14FromRawAddressEm(i64 %3) #11
  tail call void @_ZN2v88internal14TurboAssembler4MoveENS0_8RegisterENS0_17ExternalReferenceE(%"class.v8::internal::TurboAssembler"* %41, i32 %1, i64 %42) #11
  br label %73

43:                                               ; preds = %4
  %44 = call i64* @_ZNK2v88internal8compiler8Constant12ToHeapObjectEv(%"class.v8::internal::compiler::Constant"* nonnull %5) #11
  %45 = bitcast i16* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %45) #11
  %46 = call zeroext i1 @_ZN2v88internal8compiler13CodeGenerator24IsMaterializableFromRootENS0_6HandleINS0_10HeapObjectEEEPNS0_9RootIndexE(%"class.v8::internal::compiler::CodeGenerator"* %0, i64* %44, i16* nonnull %6) #11
  %47 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  br i1 %46, label %48, label %54

48:                                               ; preds = %43
  %49 = load i16, i16* %6, align 2
  %50 = bitcast %"class.v8::internal::TurboAssembler"* %47 to void (%"class.v8::internal::TurboAssembler"*, i32, i16)***
  %51 = load void (%"class.v8::internal::TurboAssembler"*, i32, i16)**, void (%"class.v8::internal::TurboAssembler"*, i32, i16)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.v8::internal::TurboAssembler"*, i32, i16)*, void (%"class.v8::internal::TurboAssembler"*, i32, i16)** %51, i64 11
  %53 = load void (%"class.v8::internal::TurboAssembler"*, i32, i16)*, void (%"class.v8::internal::TurboAssembler"*, i32, i16)** %52, align 8
  call void %53(%"class.v8::internal::TurboAssembler"* %47, i32 %1, i16 zeroext %49) #11
  br label %55

54:                                               ; preds = %43
  call void @_ZN2v88internal14TurboAssembler4MoveENS0_8RegisterENS0_6HandleINS0_10HeapObjectEEENS0_9RelocInfo4ModeE(%"class.v8::internal::TurboAssembler"* %47, i32 %1, i64* %44, i8 signext 4) #11
  br label %55

55:                                               ; preds = %54, %48
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %45) #11
  br label %73

56:                                               ; preds = %4
  %57 = call i64* @_ZNK2v88internal8compiler8Constant12ToHeapObjectEv(%"class.v8::internal::compiler::Constant"* nonnull %5) #11
  %58 = bitcast i16* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %58) #11
  %59 = call zeroext i1 @_ZN2v88internal8compiler13CodeGenerator24IsMaterializableFromRootENS0_6HandleINS0_10HeapObjectEEEPNS0_9RootIndexE(%"class.v8::internal::compiler::CodeGenerator"* %0, i64* %57, i16* nonnull %7) #11
  %60 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  br i1 %59, label %61, label %67

61:                                               ; preds = %56
  %62 = load i16, i16* %7, align 2
  %63 = bitcast %"class.v8::internal::TurboAssembler"* %60 to void (%"class.v8::internal::TurboAssembler"*, i32, i16)***
  %64 = load void (%"class.v8::internal::TurboAssembler"*, i32, i16)**, void (%"class.v8::internal::TurboAssembler"*, i32, i16)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.v8::internal::TurboAssembler"*, i32, i16)*, void (%"class.v8::internal::TurboAssembler"*, i32, i16)** %64, i64 11
  %66 = load void (%"class.v8::internal::TurboAssembler"*, i32, i16)*, void (%"class.v8::internal::TurboAssembler"*, i32, i16)** %65, align 8
  call void %66(%"class.v8::internal::TurboAssembler"* %60, i32 %1, i16 zeroext %62) #11
  br label %68

67:                                               ; preds = %56
  call void @_ZN2v88internal14TurboAssembler4MoveENS0_8RegisterENS0_6HandleINS0_10HeapObjectEEENS0_9RelocInfo4ModeE(%"class.v8::internal::TurboAssembler"* %60, i32 %1, i64* %57, i8 signext 3) #11
  br label %68

68:                                               ; preds = %67, %61
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %58) #11
  br label %73

69:                                               ; preds = %4
  %70 = call %"class.v8::internal::StringConstantBase"* @_ZNK2v88internal8compiler8Constant23ToDelayedStringConstantEv(%"class.v8::internal::compiler::Constant"* nonnull %5) #11
  %71 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  call void @_ZN2v88internal14TurboAssembler18MoveStringConstantENS0_8RegisterEPKNS0_18StringConstantBaseENS0_9RelocInfo4ModeE(%"class.v8::internal::TurboAssembler"* %71, i32 %1, %"class.v8::internal::StringConstantBase"* %70, i8 signext 4) #11
  br label %73

72:                                               ; preds = %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #12
  unreachable

73:                                               ; preds = %23, %24, %29, %31, %15, %4, %69, %68, %55, %40, %37, %32
  ret void
}

declare void @_ZN2v88internal14TurboAssembler4MoveENS0_11XMMRegisterEj(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler4MoveENS0_11XMMRegisterEm(%"class.v8::internal::TurboAssembler"*, i32, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13CodeGenerator12AssembleSwapEPNS1_18InstructionOperandES4_(%"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::compiler::X64OperandConverter", align 8
  %5 = load i8, i8* @_ZN2v88internal31FLAG_trace_turbo_stack_accessesE, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZN2v88internal8compiler13CodeGenerator27IncrementStackAccessCounterEPNS1_18InstructionOperandES4_(%"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::InstructionOperand"* %1, %"class.v8::internal::compiler::InstructionOperand"* %2)
  tail call void @_ZN2v88internal8compiler13CodeGenerator27IncrementStackAccessCounterEPNS1_18InstructionOperandES4_(%"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::InstructionOperand"* %2, %"class.v8::internal::compiler::InstructionOperand"* %1)
  br label %8

8:                                                ; preds = %3, %7
  %9 = bitcast %"class.v8::internal::compiler::X64OperandConverter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %4, i64 0, i32 0, i32 0
  store %"class.v8::internal::compiler::CodeGenerator"* %0, %"class.v8::internal::compiler::CodeGenerator"** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %4, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::Instruction"* null, %"class.v8::internal::compiler::Instruction"** %11, align 8
  %12 = tail call i32 @_ZN2v88internal8compiler13CodeGenerator8MoveType9InferSwapEPNS1_18InstructionOperandES5_(%"class.v8::internal::compiler::InstructionOperand"* %1, %"class.v8::internal::compiler::InstructionOperand"* %2) #11
  switch i32 %12, label %251 [
    i32 0, label %13
    i32 1, label %42
    i32 3, label %113
  ]

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, 7
  %17 = icmp ugt i64 %16, 4
  %18 = and i64 %15, 24
  %19 = icmp eq i64 %18, 0
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %33

21:                                               ; preds = %13
  %22 = lshr i64 %15, 5
  %23 = trunc i64 %22 to i8
  %24 = icmp ult i8 %23, 12
  br i1 %24, label %25, label %33

25:                                               ; preds = %21
  %26 = ashr i64 %15, 35
  %27 = trunc i64 %26 to i32
  %28 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = ashr i64 %29, 35
  %31 = trunc i64 %30 to i32
  %32 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %32, i32 10, i32 %27, i32 8) #11
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %32, i32 %27, i32 %31, i32 8) #11
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %32, i32 %31, i32 10, i32 8) #11
  br label %252

33:                                               ; preds = %13, %21
  %34 = ashr i64 %15, 35
  %35 = trunc i64 %34 to i32
  %36 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = ashr i64 %37, 35
  %39 = trunc i64 %38 to i32
  %40 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13
  %41 = bitcast %"class.v8::internal::TurboAssembler"* %40 to %"class.v8::internal::SharedTurboAssembler"*
  tail call void @_ZN2v88internal20SharedTurboAssembler6MovapdENS0_11XMMRegisterES2_(%"class.v8::internal::SharedTurboAssembler"* %41, i32 15, i32 %35) #11
  tail call void @_ZN2v88internal20SharedTurboAssembler6MovapdENS0_11XMMRegisterES2_(%"class.v8::internal::SharedTurboAssembler"* %41, i32 %35, i32 %39) #11
  tail call void @_ZN2v88internal20SharedTurboAssembler6MovapdENS0_11XMMRegisterES2_(%"class.v8::internal::SharedTurboAssembler"* %41, i32 %39, i32 15) #11
  br label %252

42:                                               ; preds = %8
  %43 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = and i64 %44, 7
  %46 = icmp ugt i64 %45, 4
  %47 = and i64 %44, 24
  %48 = icmp eq i64 %47, 0
  %49 = and i1 %46, %48
  br i1 %49, label %50, label %65

50:                                               ; preds = %42
  %51 = lshr i64 %44, 5
  %52 = trunc i64 %51 to i8
  %53 = icmp ult i8 %52, 12
  br i1 %53, label %54, label %65

54:                                               ; preds = %50
  %55 = ashr i64 %44, 35
  %56 = trunc i64 %55 to i32
  %57 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = ashr i64 %58, 35
  %60 = trunc i64 %59 to i32
  %61 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %4, i32 %60, i32 0) #11
  %62 = extractvalue { i64, i32 } %61, 0
  %63 = extractvalue { i64, i32 } %61, 1
  %64 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %64, i32 10, i32 %56, i32 8) #11
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %64, i32 %56, i64 %62, i32 %63, i32 8) #11
  call void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %64, i64 %62, i32 %63, i32 10, i32 8) #11
  br label %252

65:                                               ; preds = %42, %50
  %66 = ashr i64 %44, 35
  %67 = trunc i64 %66 to i32
  %68 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = ashr i64 %69, 35
  %71 = trunc i64 %70 to i32
  %72 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %4, i32 %71, i32 0) #11
  %73 = extractvalue { i64, i32 } %72, 0
  %74 = extractvalue { i64, i32 } %72, 1
  %75 = load i64, i64* %43, align 8
  %76 = lshr i64 %75, 5
  %77 = trunc i64 %76 to i8
  %78 = icmp eq i8 %77, 14
  %79 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %80 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %81 = and i32 %80, 32
  %82 = icmp eq i32 %81, 0
  br i1 %78, label %98, label %83

83:                                               ; preds = %65
  br i1 %82, label %85, label %84

84:                                               ; preds = %83
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %79, i8 zeroext 16, i32 15, i32 15, i32 %67, i32 3, i32 1, i32 0, i32 5) #11
  br label %86

85:                                               ; preds = %83
  call void @_ZN2v88internal9Assembler5movsdENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %79, i32 15, i32 %67) #11
  br label %86

86:                                               ; preds = %84, %85
  %87 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %88 = and i32 %87, 32
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %91, label %90

90:                                               ; preds = %86
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %79, i8 zeroext 16, i32 %67, i32 0, i64 %73, i32 %74, i32 3, i32 1, i32 0, i32 5) #11
  br label %92

91:                                               ; preds = %86
  call void @_ZN2v88internal9Assembler5movsdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %79, i32 %67, i64 %73, i32 %74) #11
  br label %92

92:                                               ; preds = %90, %91
  %93 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %94 = and i32 %93, 32
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %97, label %96

96:                                               ; preds = %92
  call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %79, i8 zeroext 17, i32 15, i32 0, i64 %73, i32 %74, i32 3, i32 1, i32 0, i32 5) #11
  br label %252

97:                                               ; preds = %92
  call void @_ZN2v88internal9Assembler5movsdENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %79, i64 %73, i32 %74, i32 15) #11
  br label %252

98:                                               ; preds = %65
  br i1 %82, label %100, label %99

99:                                               ; preds = %98
  call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %79, i8 zeroext 16, i32 15, i32 0, i32 %67) #11
  br label %101

100:                                              ; preds = %98
  call void @_ZN2v88internal9Assembler6movupsENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %79, i32 15, i32 %67) #11
  br label %101

101:                                              ; preds = %99, %100
  %102 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %103 = and i32 %102, 32
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %106, label %105

105:                                              ; preds = %101
  call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"* %79, i8 zeroext 16, i32 %67, i32 0, i64 %73, i32 %74) #11
  br label %107

106:                                              ; preds = %101
  call void @_ZN2v88internal9Assembler6movupsENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %79, i32 %67, i64 %73, i32 %74) #11
  br label %107

107:                                              ; preds = %105, %106
  %108 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %109 = and i32 %108, 32
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %112, label %111

111:                                              ; preds = %107
  call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"* %79, i8 zeroext 17, i32 15, i32 0, i64 %73, i32 %74) #11
  br label %252

112:                                              ; preds = %107
  call void @_ZN2v88internal9Assembler6movupsENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %79, i64 %73, i32 %74, i32 15) #11
  br label %252

113:                                              ; preds = %8
  %114 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 0, i32 0
  %115 = load i64, i64* %114, align 8
  %116 = ashr i64 %115, 35
  %117 = trunc i64 %116 to i32
  %118 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %4, i32 %117, i32 0) #11
  %119 = extractvalue { i64, i32 } %118, 0
  %120 = extractvalue { i64, i32 } %118, 1
  %121 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 0, i32 0
  %122 = load i64, i64* %121, align 8
  %123 = ashr i64 %122, 35
  %124 = trunc i64 %123 to i32
  %125 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %4, i32 %124, i32 0) #11
  %126 = extractvalue { i64, i32 } %125, 0
  %127 = extractvalue { i64, i32 } %125, 1
  %128 = load i64, i64* %114, align 8
  %129 = lshr i64 %128, 5
  %130 = trunc i64 %129 to i8
  %131 = icmp eq i8 %130, 14
  %132 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br i1 %131, label %170, label %133

133:                                              ; preds = %113
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %132, i32 10, i64 %126, i32 %127, i32 8) #11
  call void @_ZN2v88internal9Assembler5pushqENS0_7OperandE(%"class.v8::internal::Assembler"* %132, i64 %119, i32 %120) #11
  %134 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %135 = bitcast i8** %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %138 = bitcast i8** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = sub i64 %136, %139
  %141 = trunc i64 %140 to i32
  %142 = load i8, i8* @_ZN2v88internal29FLAG_perf_prof_unwinding_infoE, align 1, !range !2
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %153, label %144

144:                                              ; preds = %133
  %145 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 2
  %146 = load i8, i8* %145, align 8, !range !2
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %148, label %153

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 1
  call void @_ZN2v88internal13EhFrameWriter15AdvanceLocationEi(%"class.v8::internal::EhFrameWriter"* %149, i32 %141) #11
  %150 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 1, i32 4
  %151 = load i32, i32* %150, align 8
  %152 = add nsw i32 %151, 8
  call void @_ZN2v88internal13EhFrameWriter20SetBaseAddressOffsetEi(%"class.v8::internal::EhFrameWriter"* %149, i32 %152) #11
  br label %153

153:                                              ; preds = %133, %144, %148
  call void @_ZN2v88internal9Assembler4popqENS0_7OperandE(%"class.v8::internal::Assembler"* %132, i64 %126, i32 %127) #11
  %154 = load i64, i64* %135, align 8
  %155 = load i64, i64* %138, align 8
  %156 = sub i64 %154, %155
  %157 = trunc i64 %156 to i32
  %158 = load i8, i8* @_ZN2v88internal29FLAG_perf_prof_unwinding_infoE, align 1, !range !2
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %169, label %160

160:                                              ; preds = %153
  %161 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 2
  %162 = load i8, i8* %161, align 8, !range !2
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %164, label %169

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 1
  call void @_ZN2v88internal13EhFrameWriter15AdvanceLocationEi(%"class.v8::internal::EhFrameWriter"* %165, i32 %157) #11
  %166 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 1, i32 4
  %167 = load i32, i32* %166, align 8
  %168 = add nsw i32 %167, -8
  call void @_ZN2v88internal13EhFrameWriter20SetBaseAddressOffsetEi(%"class.v8::internal::EhFrameWriter"* %165, i32 %168) #11
  br label %169

169:                                              ; preds = %153, %160, %164
  call void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %132, i64 %119, i32 %120, i32 10, i32 8) #11
  br label %252

170:                                              ; preds = %113
  call void @_ZN2v88internal9Assembler6movupsENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %132, i32 15, i64 %126, i32 %127) #11
  call void @_ZN2v88internal9Assembler5pushqENS0_7OperandE(%"class.v8::internal::Assembler"* %132, i64 %119, i32 %120) #11
  %171 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 4
  %172 = bitcast i8** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %175 = bitcast i8** %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %173, %176
  %178 = trunc i64 %177 to i32
  %179 = load i8, i8* @_ZN2v88internal29FLAG_perf_prof_unwinding_infoE, align 1, !range !2
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %190, label %181

181:                                              ; preds = %170
  %182 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 2
  %183 = load i8, i8* %182, align 8, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %185, label %190

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 1
  call void @_ZN2v88internal13EhFrameWriter15AdvanceLocationEi(%"class.v8::internal::EhFrameWriter"* %186, i32 %178) #11
  %187 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 1, i32 4
  %188 = load i32, i32* %187, align 8
  %189 = add nsw i32 %188, 8
  call void @_ZN2v88internal13EhFrameWriter20SetBaseAddressOffsetEi(%"class.v8::internal::EhFrameWriter"* %186, i32 %189) #11
  br label %190

190:                                              ; preds = %170, %181, %185
  call void @_ZN2v88internal9Assembler4popqENS0_7OperandE(%"class.v8::internal::Assembler"* %132, i64 %126, i32 %127) #11
  %191 = load i64, i64* %172, align 8
  %192 = load i64, i64* %175, align 8
  %193 = sub i64 %191, %192
  %194 = trunc i64 %193 to i32
  %195 = load i8, i8* @_ZN2v88internal29FLAG_perf_prof_unwinding_infoE, align 1, !range !2
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %206, label %197

197:                                              ; preds = %190
  %198 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 2
  %199 = load i8, i8* %198, align 8, !range !2
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %201, label %206

201:                                              ; preds = %197
  %202 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 1
  call void @_ZN2v88internal13EhFrameWriter15AdvanceLocationEi(%"class.v8::internal::EhFrameWriter"* %202, i32 %194) #11
  %203 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 1, i32 4
  %204 = load i32, i32* %203, align 8
  %205 = add nsw i32 %204, -8
  call void @_ZN2v88internal13EhFrameWriter20SetBaseAddressOffsetEi(%"class.v8::internal::EhFrameWriter"* %202, i32 %205) #11
  br label %206

206:                                              ; preds = %190, %197, %201
  %207 = load i64, i64* %114, align 8
  %208 = ashr i64 %207, 35
  %209 = trunc i64 %208 to i32
  %210 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %4, i32 %209, i32 8) #11
  %211 = extractvalue { i64, i32 } %210, 0
  %212 = extractvalue { i64, i32 } %210, 1
  call void @_ZN2v88internal9Assembler5pushqENS0_7OperandE(%"class.v8::internal::Assembler"* %132, i64 %211, i32 %212) #11
  %213 = load i64, i64* %172, align 8
  %214 = load i64, i64* %175, align 8
  %215 = sub i64 %213, %214
  %216 = trunc i64 %215 to i32
  %217 = load i8, i8* @_ZN2v88internal29FLAG_perf_prof_unwinding_infoE, align 1, !range !2
  %218 = icmp eq i8 %217, 0
  br i1 %218, label %228, label %219

219:                                              ; preds = %206
  %220 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 2
  %221 = load i8, i8* %220, align 8, !range !2
  %222 = icmp eq i8 %221, 0
  br i1 %222, label %223, label %228

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 1
  call void @_ZN2v88internal13EhFrameWriter15AdvanceLocationEi(%"class.v8::internal::EhFrameWriter"* %224, i32 %216) #11
  %225 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 1, i32 4
  %226 = load i32, i32* %225, align 8
  %227 = add nsw i32 %226, 8
  call void @_ZN2v88internal13EhFrameWriter20SetBaseAddressOffsetEi(%"class.v8::internal::EhFrameWriter"* %224, i32 %227) #11
  br label %228

228:                                              ; preds = %206, %219, %223
  %229 = load i64, i64* %121, align 8
  %230 = ashr i64 %229, 35
  %231 = trunc i64 %230 to i32
  %232 = call { i64, i32 } @_ZN2v88internal8compiler19X64OperandConverter13SlotToOperandEii(%"class.v8::internal::compiler::X64OperandConverter"* nonnull %4, i32 %231, i32 8) #11
  %233 = extractvalue { i64, i32 } %232, 0
  %234 = extractvalue { i64, i32 } %232, 1
  call void @_ZN2v88internal9Assembler4popqENS0_7OperandE(%"class.v8::internal::Assembler"* %132, i64 %233, i32 %234) #11
  %235 = load i64, i64* %172, align 8
  %236 = load i64, i64* %175, align 8
  %237 = sub i64 %235, %236
  %238 = trunc i64 %237 to i32
  %239 = load i8, i8* @_ZN2v88internal29FLAG_perf_prof_unwinding_infoE, align 1, !range !2
  %240 = icmp eq i8 %239, 0
  br i1 %240, label %250, label %241

241:                                              ; preds = %228
  %242 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 2
  %243 = load i8, i8* %242, align 8, !range !2
  %244 = icmp eq i8 %243, 0
  br i1 %244, label %245, label %250

245:                                              ; preds = %241
  %246 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 1
  call void @_ZN2v88internal13EhFrameWriter15AdvanceLocationEi(%"class.v8::internal::EhFrameWriter"* %246, i32 %238) #11
  %247 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 1, i32 4
  %248 = load i32, i32* %247, align 8
  %249 = add nsw i32 %248, -8
  call void @_ZN2v88internal13EhFrameWriter20SetBaseAddressOffsetEi(%"class.v8::internal::EhFrameWriter"* %246, i32 %249) #11
  br label %250

250:                                              ; preds = %228, %241, %245
  call void @_ZN2v88internal9Assembler6movupsENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %132, i64 %119, i32 %120, i32 15) #11
  br label %252

251:                                              ; preds = %8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #12
  unreachable

252:                                              ; preds = %112, %111, %97, %96, %169, %250, %54, %25, %33
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  ret void
}

declare i32 @_ZN2v88internal8compiler13CodeGenerator8MoveType9InferSwapEPNS1_18InstructionOperandES5_(%"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"*) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler4popqENS0_7OperandE(%"class.v8::internal::Assembler"*, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler6movupsENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler6movupsENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"*, i64, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13CodeGenerator17AssembleJumpTableEPPNS0_5LabelEm(%"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::Label"** nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %8

7:                                                ; preds = %8, %3
  ret void

8:                                                ; preds = %8, %5
  %9 = phi i64 [ 0, %5 ], [ %12, %8 ]
  %10 = getelementptr inbounds %"class.v8::internal::Label"*, %"class.v8::internal::Label"** %1, i64 %9
  %11 = load %"class.v8::internal::Label"*, %"class.v8::internal::Label"** %10, align 8
  tail call void @_ZN2v88internal9Assembler2dqEPNS0_5LabelE(%"class.v8::internal::Assembler"* %6, %"class.v8::internal::Label"* %11) #11
  %12 = add nuw i64 %9, 1
  %13 = icmp eq i64 %12, %2
  br i1 %13, label %7, label %8
}

declare void @_ZN2v88internal9Assembler2dqEPNS0_5LabelE(%"class.v8::internal::Assembler"*, %"class.v8::internal::Label"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler13CodeGeneratorD2Ev(%"class.v8::internal::compiler::CodeGenerator"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal8compiler13CodeGeneratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 43, i32 0, i32 0, i32 0
  %4 = load %"struct.v8::internal::compiler::TurbolizerInstructionStartInfo"*, %"struct.v8::internal::compiler::TurbolizerInstructionStartInfo"** %3, align 8
  %5 = icmp eq %"struct.v8::internal::compiler::TurbolizerInstructionStartInfo"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.v8::internal::compiler::TurbolizerInstructionStartInfo"* %4 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 43, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.v8::internal::compiler::TurbolizerInstructionStartInfo"** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 41, i32 0, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = icmp eq i32* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = ptrtoint i32* %12 to i64
  %16 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 41, i32 0, i32 0, i32 1
  %17 = bitcast i32** %16 to i64*
  store i64 %15, i64* %17, align 8
  br label %18

18:                                               ; preds = %10, %14
  %19 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 38, i32 0, i32 0, i32 0
  %20 = load %"struct.v8::internal::trap_handler::ProtectedInstructionData"*, %"struct.v8::internal::trap_handler::ProtectedInstructionData"** %19, align 8
  %21 = icmp eq %"struct.v8::internal::trap_handler::ProtectedInstructionData"* %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %18
  %23 = ptrtoint %"struct.v8::internal::trap_handler::ProtectedInstructionData"* %20 to i64
  %24 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 38, i32 0, i32 0, i32 1
  %25 = bitcast %"struct.v8::internal::trap_handler::ProtectedInstructionData"** %24 to i64*
  store i64 %23, i64* %25, align 8
  br label %26

26:                                               ; preds = %18, %22
  %27 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 37, i32 1, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i8* %28 to i64
  %32 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 37, i32 1, i32 0, i32 0, i32 1
  %33 = bitcast i8** %32 to i64*
  store i64 %31, i64* %33, align 8
  br label %34

34:                                               ; preds = %26, %30
  %35 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 24, i32 1, i32 0, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = icmp eq i32* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %34
  %39 = ptrtoint i32* %36 to i64
  %40 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 24, i32 1, i32 0, i32 0, i32 1
  %41 = bitcast i32** %40 to i64*
  store i64 %39, i64* %41, align 8
  br label %42

42:                                               ; preds = %38, %34
  %43 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %50, label %46

46:                                               ; preds = %42
  %47 = ptrtoint i8* %44 to i64
  %48 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 24, i32 0, i32 0, i32 0, i32 1
  %49 = bitcast i8** %48 to i64*
  store i64 %47, i64* %49, align 8
  br label %50

50:                                               ; preds = %42, %46
  %51 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 22, i32 0, i32 0, i32 0, i32 1
  %52 = load %"class.v8::internal::compiler::DeoptimizationLiteral"**, %"class.v8::internal::compiler::DeoptimizationLiteral"*** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 22, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = lshr i64 %54, 7
  %56 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationLiteral"*, %"class.v8::internal::compiler::DeoptimizationLiteral"** %52, i64 %55
  %57 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 22, i32 0, i32 0, i32 0, i32 2
  %58 = load %"class.v8::internal::compiler::DeoptimizationLiteral"**, %"class.v8::internal::compiler::DeoptimizationLiteral"*** %57, align 8
  %59 = icmp eq %"class.v8::internal::compiler::DeoptimizationLiteral"** %58, %52
  %60 = ptrtoint %"class.v8::internal::compiler::DeoptimizationLiteral"** %58 to i64
  %61 = ptrtoint %"class.v8::internal::compiler::DeoptimizationLiteral"** %52 to i64
  br i1 %59, label %62, label %64

62:                                               ; preds = %50
  %63 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 22, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %77

64:                                               ; preds = %50
  %65 = load %"class.v8::internal::compiler::DeoptimizationLiteral"*, %"class.v8::internal::compiler::DeoptimizationLiteral"** %56, align 8
  %66 = and i64 %54, 127
  %67 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationLiteral", %"class.v8::internal::compiler::DeoptimizationLiteral"* %65, i64 %66
  %68 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 22, i32 0, i32 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, %54
  %71 = lshr i64 %70, 7
  %72 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationLiteral"*, %"class.v8::internal::compiler::DeoptimizationLiteral"** %52, i64 %71
  %73 = load %"class.v8::internal::compiler::DeoptimizationLiteral"*, %"class.v8::internal::compiler::DeoptimizationLiteral"** %72, align 8
  %74 = and i64 %70, 127
  %75 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationLiteral", %"class.v8::internal::compiler::DeoptimizationLiteral"* %73, i64 %74
  %76 = icmp eq %"class.v8::internal::compiler::DeoptimizationLiteral"* %75, %67
  br i1 %76, label %77, label %88

77:                                               ; preds = %101, %64, %62
  %78 = phi i64* [ %63, %62 ], [ %68, %64 ], [ %68, %101 ]
  store i64 0, i64* %78, align 8
  %79 = bitcast %"class.v8::internal::compiler::DeoptimizationLiteral"*** %57 to i64*
  %80 = sub i64 %60, %61
  %81 = ashr exact i64 %80, 3
  %82 = icmp ugt i64 %81, 2
  br i1 %82, label %83, label %136

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 22, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %85 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock"** %84 to i64*
  %86 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock"** %84 to %"class.v8::internal::compiler::DeoptimizationLiteral"**
  %87 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock"** %84, align 8
  br label %106

88:                                               ; preds = %64, %101
  %89 = phi %"class.v8::internal::compiler::DeoptimizationLiteral"* [ %104, %101 ], [ %67, %64 ]
  %90 = phi %"class.v8::internal::compiler::DeoptimizationLiteral"** [ %102, %101 ], [ %56, %64 ]
  %91 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationLiteral", %"class.v8::internal::compiler::DeoptimizationLiteral"* %89, i64 1
  %92 = ptrtoint %"class.v8::internal::compiler::DeoptimizationLiteral"* %91 to i64
  %93 = bitcast %"class.v8::internal::compiler::DeoptimizationLiteral"** %90 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %92, %94
  %96 = icmp eq i64 %95, 4096
  br i1 %96, label %97, label %101

97:                                               ; preds = %88
  %98 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationLiteral"*, %"class.v8::internal::compiler::DeoptimizationLiteral"** %90, i64 1
  %99 = bitcast %"class.v8::internal::compiler::DeoptimizationLiteral"** %98 to i64*
  %100 = load i64, i64* %99, align 8
  br label %101

101:                                              ; preds = %97, %88
  %102 = phi %"class.v8::internal::compiler::DeoptimizationLiteral"** [ %98, %97 ], [ %90, %88 ]
  %103 = phi i64 [ %100, %97 ], [ %92, %88 ]
  %104 = inttoptr i64 %103 to %"class.v8::internal::compiler::DeoptimizationLiteral"*
  %105 = icmp eq %"class.v8::internal::compiler::DeoptimizationLiteral"* %75, %104
  br i1 %105, label %77, label %88

106:                                              ; preds = %126, %83
  %107 = phi %"class.v8::internal::compiler::DeoptimizationLiteral"** [ %58, %83 ], [ %127, %126 ]
  %108 = phi i64 [ %60, %83 ], [ %128, %126 ]
  %109 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock"* [ %87, %83 ], [ %130, %126 ]
  %110 = phi %"class.v8::internal::compiler::DeoptimizationLiteral"** [ %52, %83 ], [ %131, %126 ]
  %111 = load %"class.v8::internal::compiler::DeoptimizationLiteral"*, %"class.v8::internal::compiler::DeoptimizationLiteral"** %110, align 8
  %112 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock"* %109, null
  br i1 %112, label %117, label %113

113:                                              ; preds = %106
  %114 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock"* %109, i64 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = icmp ugt i64 %115, 128
  br i1 %116, label %126, label %117

117:                                              ; preds = %113, %106
  %118 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationLiteral", %"class.v8::internal::compiler::DeoptimizationLiteral"* %111, i64 0, i32 1
  %119 = bitcast %"class.v8::internal::Handle.888"* %118 to i64*
  store i64 128, i64* %119, align 8
  %120 = load i64, i64* %85, align 8
  %121 = bitcast %"class.v8::internal::compiler::DeoptimizationLiteral"* %111 to i64*
  store i64 %120, i64* %121, align 8
  store %"class.v8::internal::compiler::DeoptimizationLiteral"* %111, %"class.v8::internal::compiler::DeoptimizationLiteral"** %86, align 8
  %122 = bitcast %"class.v8::internal::compiler::DeoptimizationLiteral"* %111 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock"*
  %123 = load %"class.v8::internal::compiler::DeoptimizationLiteral"**, %"class.v8::internal::compiler::DeoptimizationLiteral"*** %51, align 8
  %124 = load i64, i64* %79, align 8
  %125 = inttoptr i64 %124 to %"class.v8::internal::compiler::DeoptimizationLiteral"**
  br label %126

126:                                              ; preds = %117, %113
  %127 = phi %"class.v8::internal::compiler::DeoptimizationLiteral"** [ %107, %113 ], [ %125, %117 ]
  %128 = phi i64 [ %108, %113 ], [ %124, %117 ]
  %129 = phi %"class.v8::internal::compiler::DeoptimizationLiteral"** [ %110, %113 ], [ %123, %117 ]
  %130 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock"* [ %109, %113 ], [ %122, %117 ]
  %131 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationLiteral"*, %"class.v8::internal::compiler::DeoptimizationLiteral"** %129, i64 1
  store %"class.v8::internal::compiler::DeoptimizationLiteral"** %131, %"class.v8::internal::compiler::DeoptimizationLiteral"*** %51, align 8
  %132 = ptrtoint %"class.v8::internal::compiler::DeoptimizationLiteral"** %131 to i64
  %133 = sub i64 %128, %132
  %134 = ashr exact i64 %133, 3
  %135 = icmp ugt i64 %134, 2
  br i1 %135, label %106, label %136

136:                                              ; preds = %126, %77
  %137 = phi %"class.v8::internal::compiler::DeoptimizationLiteral"** [ %58, %77 ], [ %127, %126 ]
  %138 = phi %"class.v8::internal::compiler::DeoptimizationLiteral"** [ %52, %77 ], [ %131, %126 ]
  %139 = phi i64 [ %81, %77 ], [ %134, %126 ]
  %140 = ptrtoint %"class.v8::internal::compiler::DeoptimizationLiteral"** %138 to i64
  switch i64 %139, label %144 [
    i64 1, label %142
    i64 2, label %141
  ]

141:                                              ; preds = %136
  br label %142

142:                                              ; preds = %136, %141
  %143 = phi i64 [ 128, %141 ], [ 64, %136 ]
  store i64 %143, i64* %53, align 8
  br label %144

144:                                              ; preds = %142, %136
  %145 = icmp eq %"class.v8::internal::compiler::DeoptimizationLiteral"** %138, %137
  br i1 %145, label %208, label %146

146:                                              ; preds = %144
  %147 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 22, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %148 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock"** %147 to i64*
  %149 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock"** %147 to %"class.v8::internal::compiler::DeoptimizationLiteral"**
  %150 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock"** %147, align 8
  %151 = getelementptr %"class.v8::internal::compiler::DeoptimizationLiteral"*, %"class.v8::internal::compiler::DeoptimizationLiteral"** %137, i64 -1
  %152 = ptrtoint %"class.v8::internal::compiler::DeoptimizationLiteral"** %151 to i64
  %153 = sub i64 %152, %140
  %154 = and i64 %153, 8
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %172

156:                                              ; preds = %146
  %157 = load %"class.v8::internal::compiler::DeoptimizationLiteral"*, %"class.v8::internal::compiler::DeoptimizationLiteral"** %138, align 8
  %158 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock"* %150, null
  br i1 %158, label %163, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock"* %150, i64 0, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = icmp ugt i64 %161, 128
  br i1 %162, label %169, label %163

163:                                              ; preds = %159, %156
  %164 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationLiteral", %"class.v8::internal::compiler::DeoptimizationLiteral"* %157, i64 0, i32 1
  %165 = bitcast %"class.v8::internal::Handle.888"* %164 to i64*
  store i64 128, i64* %165, align 8
  %166 = load i64, i64* %148, align 8
  %167 = bitcast %"class.v8::internal::compiler::DeoptimizationLiteral"* %157 to i64*
  store i64 %166, i64* %167, align 8
  store %"class.v8::internal::compiler::DeoptimizationLiteral"* %157, %"class.v8::internal::compiler::DeoptimizationLiteral"** %149, align 8
  %168 = bitcast %"class.v8::internal::compiler::DeoptimizationLiteral"* %157 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock"*
  br label %169

169:                                              ; preds = %163, %159
  %170 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock"* [ %150, %159 ], [ %168, %163 ]
  %171 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationLiteral"*, %"class.v8::internal::compiler::DeoptimizationLiteral"** %138, i64 1
  br label %172

172:                                              ; preds = %169, %146
  %173 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock"* [ %150, %146 ], [ %170, %169 ]
  %174 = phi %"class.v8::internal::compiler::DeoptimizationLiteral"** [ %138, %146 ], [ %171, %169 ]
  %175 = icmp ult i64 %153, 8
  br i1 %175, label %196, label %176

176:                                              ; preds = %172, %482
  %177 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock"* [ %483, %482 ], [ %173, %172 ]
  %178 = phi %"class.v8::internal::compiler::DeoptimizationLiteral"** [ %484, %482 ], [ %174, %172 ]
  %179 = load %"class.v8::internal::compiler::DeoptimizationLiteral"*, %"class.v8::internal::compiler::DeoptimizationLiteral"** %178, align 8
  %180 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock"* %177, null
  br i1 %180, label %185, label %181

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock"* %177, i64 0, i32 1
  %183 = load i64, i64* %182, align 8
  %184 = icmp ugt i64 %183, 128
  br i1 %184, label %191, label %185

185:                                              ; preds = %181, %176
  %186 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationLiteral", %"class.v8::internal::compiler::DeoptimizationLiteral"* %179, i64 0, i32 1
  %187 = bitcast %"class.v8::internal::Handle.888"* %186 to i64*
  store i64 128, i64* %187, align 8
  %188 = load i64, i64* %148, align 8
  %189 = bitcast %"class.v8::internal::compiler::DeoptimizationLiteral"* %179 to i64*
  store i64 %188, i64* %189, align 8
  store %"class.v8::internal::compiler::DeoptimizationLiteral"* %179, %"class.v8::internal::compiler::DeoptimizationLiteral"** %149, align 8
  %190 = bitcast %"class.v8::internal::compiler::DeoptimizationLiteral"* %179 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock"*
  br label %191

191:                                              ; preds = %185, %181
  %192 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock"* [ %177, %181 ], [ %190, %185 ]
  %193 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationLiteral"*, %"class.v8::internal::compiler::DeoptimizationLiteral"** %178, i64 1
  %194 = load %"class.v8::internal::compiler::DeoptimizationLiteral"*, %"class.v8::internal::compiler::DeoptimizationLiteral"** %193, align 8
  %195 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock"* %192, null
  br i1 %195, label %476, label %472

196:                                              ; preds = %482, %172
  %197 = load %"class.v8::internal::compiler::DeoptimizationLiteral"**, %"class.v8::internal::compiler::DeoptimizationLiteral"*** %51, align 8
  %198 = load %"class.v8::internal::compiler::DeoptimizationLiteral"**, %"class.v8::internal::compiler::DeoptimizationLiteral"*** %57, align 8
  %199 = icmp eq %"class.v8::internal::compiler::DeoptimizationLiteral"** %198, %197
  br i1 %199, label %208, label %200

200:                                              ; preds = %196
  %201 = ptrtoint %"class.v8::internal::compiler::DeoptimizationLiteral"** %197 to i64
  %202 = getelementptr %"class.v8::internal::compiler::DeoptimizationLiteral"*, %"class.v8::internal::compiler::DeoptimizationLiteral"** %198, i64 -1
  %203 = ptrtoint %"class.v8::internal::compiler::DeoptimizationLiteral"** %202 to i64
  %204 = sub i64 %203, %201
  %205 = lshr i64 %204, 3
  %206 = xor i64 %205, -1
  %207 = getelementptr %"class.v8::internal::compiler::DeoptimizationLiteral"*, %"class.v8::internal::compiler::DeoptimizationLiteral"** %198, i64 %206
  store %"class.v8::internal::compiler::DeoptimizationLiteral"** %207, %"class.v8::internal::compiler::DeoptimizationLiteral"*** %57, align 8
  br label %208

208:                                              ; preds = %200, %196, %144
  %209 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 22, i32 0, i32 0, i32 0, i32 0
  %210 = load %"class.v8::internal::compiler::DeoptimizationLiteral"**, %"class.v8::internal::compiler::DeoptimizationLiteral"*** %209, align 8
  %211 = icmp eq %"class.v8::internal::compiler::DeoptimizationLiteral"** %210, null
  br i1 %211, label %235, label %212

212:                                              ; preds = %208
  %213 = ptrtoint %"class.v8::internal::compiler::DeoptimizationLiteral"** %210 to i64
  %214 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 22, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %215 = bitcast %"class.v8::internal::compiler::DeoptimizationLiteral"*** %214 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = sub i64 %216, %213
  %218 = ashr exact i64 %217, 3
  %219 = icmp ult i64 %217, 16
  br i1 %219, label %235, label %220

220:                                              ; preds = %212
  %221 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 22, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %222 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral *>::FreeBlock"** %221, align 8
  %223 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral *>::FreeBlock"* %222, null
  br i1 %223, label %228, label %224

224:                                              ; preds = %220
  %225 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral *>::FreeBlock"* %222, i64 0, i32 1
  %226 = load i64, i64* %225, align 8
  %227 = icmp ugt i64 %226, %218
  br i1 %227, label %235, label %228

228:                                              ; preds = %224, %220
  %229 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationLiteral"*, %"class.v8::internal::compiler::DeoptimizationLiteral"** %210, i64 1
  %230 = bitcast %"class.v8::internal::compiler::DeoptimizationLiteral"** %229 to i64*
  store i64 %218, i64* %230, align 8
  %231 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral *>::FreeBlock"** %221 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = bitcast %"class.v8::internal::compiler::DeoptimizationLiteral"** %210 to i64*
  store i64 %232, i64* %233, align 8
  %234 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral *>::FreeBlock"** %221 to %"class.v8::internal::compiler::DeoptimizationLiteral"***
  store %"class.v8::internal::compiler::DeoptimizationLiteral"** %210, %"class.v8::internal::compiler::DeoptimizationLiteral"*** %234, align 8
  br label %235

235:                                              ; preds = %208, %212, %224, %228
  %236 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1
  %237 = load %"class.v8::internal::compiler::DeoptimizationExit"***, %"class.v8::internal::compiler::DeoptimizationExit"**** %236, align 8
  %238 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 21, i32 0, i32 0, i32 1
  %239 = load i64, i64* %238, align 8
  %240 = lshr i64 %239, 9
  %241 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationExit"**, %"class.v8::internal::compiler::DeoptimizationExit"*** %237, i64 %240
  %242 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 2
  %243 = load %"class.v8::internal::compiler::DeoptimizationExit"***, %"class.v8::internal::compiler::DeoptimizationExit"**** %242, align 8
  %244 = icmp eq %"class.v8::internal::compiler::DeoptimizationExit"*** %243, %237
  %245 = ptrtoint %"class.v8::internal::compiler::DeoptimizationExit"*** %243 to i64
  %246 = ptrtoint %"class.v8::internal::compiler::DeoptimizationExit"*** %237 to i64
  br i1 %244, label %247, label %249

247:                                              ; preds = %235
  %248 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 21, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %262

249:                                              ; preds = %235
  %250 = load %"class.v8::internal::compiler::DeoptimizationExit"**, %"class.v8::internal::compiler::DeoptimizationExit"*** %241, align 8
  %251 = and i64 %239, 511
  %252 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationExit"*, %"class.v8::internal::compiler::DeoptimizationExit"** %250, i64 %251
  %253 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 21, i32 0, i32 0, i32 2, i32 0, i32 0
  %254 = load i64, i64* %253, align 8
  %255 = add i64 %254, %239
  %256 = lshr i64 %255, 9
  %257 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationExit"**, %"class.v8::internal::compiler::DeoptimizationExit"*** %237, i64 %256
  %258 = load %"class.v8::internal::compiler::DeoptimizationExit"**, %"class.v8::internal::compiler::DeoptimizationExit"*** %257, align 8
  %259 = and i64 %255, 511
  %260 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationExit"*, %"class.v8::internal::compiler::DeoptimizationExit"** %258, i64 %259
  %261 = icmp eq %"class.v8::internal::compiler::DeoptimizationExit"** %260, %252
  br i1 %261, label %262, label %273

262:                                              ; preds = %286, %249, %247
  %263 = phi i64* [ %248, %247 ], [ %253, %249 ], [ %253, %286 ]
  store i64 0, i64* %263, align 8
  %264 = bitcast %"class.v8::internal::compiler::DeoptimizationExit"**** %242 to i64*
  %265 = sub i64 %245, %246
  %266 = ashr exact i64 %265, 3
  %267 = icmp ugt i64 %266, 2
  br i1 %267, label %268, label %321

268:                                              ; preds = %262
  %269 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 21, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %270 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock"** %269 to i64*
  %271 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock"** %269 to %"class.v8::internal::compiler::DeoptimizationExit"***
  %272 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock"** %269, align 8
  br label %291

273:                                              ; preds = %249, %286
  %274 = phi %"class.v8::internal::compiler::DeoptimizationExit"** [ %289, %286 ], [ %252, %249 ]
  %275 = phi %"class.v8::internal::compiler::DeoptimizationExit"*** [ %287, %286 ], [ %241, %249 ]
  %276 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationExit"*, %"class.v8::internal::compiler::DeoptimizationExit"** %274, i64 1
  %277 = ptrtoint %"class.v8::internal::compiler::DeoptimizationExit"** %276 to i64
  %278 = bitcast %"class.v8::internal::compiler::DeoptimizationExit"*** %275 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = sub i64 %277, %279
  %281 = icmp eq i64 %280, 4096
  br i1 %281, label %282, label %286

282:                                              ; preds = %273
  %283 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationExit"**, %"class.v8::internal::compiler::DeoptimizationExit"*** %275, i64 1
  %284 = bitcast %"class.v8::internal::compiler::DeoptimizationExit"*** %283 to i64*
  %285 = load i64, i64* %284, align 8
  br label %286

286:                                              ; preds = %282, %273
  %287 = phi %"class.v8::internal::compiler::DeoptimizationExit"*** [ %283, %282 ], [ %275, %273 ]
  %288 = phi i64 [ %285, %282 ], [ %277, %273 ]
  %289 = inttoptr i64 %288 to %"class.v8::internal::compiler::DeoptimizationExit"**
  %290 = icmp eq %"class.v8::internal::compiler::DeoptimizationExit"** %260, %289
  br i1 %290, label %262, label %273

291:                                              ; preds = %311, %268
  %292 = phi %"class.v8::internal::compiler::DeoptimizationExit"*** [ %243, %268 ], [ %312, %311 ]
  %293 = phi i64 [ %245, %268 ], [ %313, %311 ]
  %294 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock"* [ %272, %268 ], [ %315, %311 ]
  %295 = phi %"class.v8::internal::compiler::DeoptimizationExit"*** [ %237, %268 ], [ %316, %311 ]
  %296 = load %"class.v8::internal::compiler::DeoptimizationExit"**, %"class.v8::internal::compiler::DeoptimizationExit"*** %295, align 8
  %297 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock"* %294, null
  br i1 %297, label %302, label %298

298:                                              ; preds = %291
  %299 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock"* %294, i64 0, i32 1
  %300 = load i64, i64* %299, align 8
  %301 = icmp ugt i64 %300, 512
  br i1 %301, label %311, label %302

302:                                              ; preds = %298, %291
  %303 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationExit"*, %"class.v8::internal::compiler::DeoptimizationExit"** %296, i64 1
  %304 = bitcast %"class.v8::internal::compiler::DeoptimizationExit"** %303 to i64*
  store i64 512, i64* %304, align 8
  %305 = load i64, i64* %270, align 8
  %306 = bitcast %"class.v8::internal::compiler::DeoptimizationExit"** %296 to i64*
  store i64 %305, i64* %306, align 8
  store %"class.v8::internal::compiler::DeoptimizationExit"** %296, %"class.v8::internal::compiler::DeoptimizationExit"*** %271, align 8
  %307 = bitcast %"class.v8::internal::compiler::DeoptimizationExit"** %296 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock"*
  %308 = load %"class.v8::internal::compiler::DeoptimizationExit"***, %"class.v8::internal::compiler::DeoptimizationExit"**** %236, align 8
  %309 = load i64, i64* %264, align 8
  %310 = inttoptr i64 %309 to %"class.v8::internal::compiler::DeoptimizationExit"***
  br label %311

311:                                              ; preds = %302, %298
  %312 = phi %"class.v8::internal::compiler::DeoptimizationExit"*** [ %292, %298 ], [ %310, %302 ]
  %313 = phi i64 [ %293, %298 ], [ %309, %302 ]
  %314 = phi %"class.v8::internal::compiler::DeoptimizationExit"*** [ %295, %298 ], [ %308, %302 ]
  %315 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock"* [ %294, %298 ], [ %307, %302 ]
  %316 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationExit"**, %"class.v8::internal::compiler::DeoptimizationExit"*** %314, i64 1
  store %"class.v8::internal::compiler::DeoptimizationExit"*** %316, %"class.v8::internal::compiler::DeoptimizationExit"**** %236, align 8
  %317 = ptrtoint %"class.v8::internal::compiler::DeoptimizationExit"*** %316 to i64
  %318 = sub i64 %313, %317
  %319 = ashr exact i64 %318, 3
  %320 = icmp ugt i64 %319, 2
  br i1 %320, label %291, label %321

321:                                              ; preds = %311, %262
  %322 = phi %"class.v8::internal::compiler::DeoptimizationExit"*** [ %243, %262 ], [ %312, %311 ]
  %323 = phi %"class.v8::internal::compiler::DeoptimizationExit"*** [ %237, %262 ], [ %316, %311 ]
  %324 = phi i64 [ %266, %262 ], [ %319, %311 ]
  %325 = ptrtoint %"class.v8::internal::compiler::DeoptimizationExit"*** %323 to i64
  switch i64 %324, label %329 [
    i64 1, label %327
    i64 2, label %326
  ]

326:                                              ; preds = %321
  br label %327

327:                                              ; preds = %321, %326
  %328 = phi i64 [ 512, %326 ], [ 256, %321 ]
  store i64 %328, i64* %238, align 8
  br label %329

329:                                              ; preds = %327, %321
  %330 = icmp eq %"class.v8::internal::compiler::DeoptimizationExit"*** %323, %322
  br i1 %330, label %393, label %331

331:                                              ; preds = %329
  %332 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 21, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %333 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock"** %332 to i64*
  %334 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock"** %332 to %"class.v8::internal::compiler::DeoptimizationExit"***
  %335 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock"** %332, align 8
  %336 = getelementptr %"class.v8::internal::compiler::DeoptimizationExit"**, %"class.v8::internal::compiler::DeoptimizationExit"*** %322, i64 -1
  %337 = ptrtoint %"class.v8::internal::compiler::DeoptimizationExit"*** %336 to i64
  %338 = sub i64 %337, %325
  %339 = and i64 %338, 8
  %340 = icmp eq i64 %339, 0
  br i1 %340, label %341, label %357

341:                                              ; preds = %331
  %342 = load %"class.v8::internal::compiler::DeoptimizationExit"**, %"class.v8::internal::compiler::DeoptimizationExit"*** %323, align 8
  %343 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock"* %335, null
  br i1 %343, label %348, label %344

344:                                              ; preds = %341
  %345 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock"* %335, i64 0, i32 1
  %346 = load i64, i64* %345, align 8
  %347 = icmp ugt i64 %346, 512
  br i1 %347, label %354, label %348

348:                                              ; preds = %344, %341
  %349 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationExit"*, %"class.v8::internal::compiler::DeoptimizationExit"** %342, i64 1
  %350 = bitcast %"class.v8::internal::compiler::DeoptimizationExit"** %349 to i64*
  store i64 512, i64* %350, align 8
  %351 = load i64, i64* %333, align 8
  %352 = bitcast %"class.v8::internal::compiler::DeoptimizationExit"** %342 to i64*
  store i64 %351, i64* %352, align 8
  store %"class.v8::internal::compiler::DeoptimizationExit"** %342, %"class.v8::internal::compiler::DeoptimizationExit"*** %334, align 8
  %353 = bitcast %"class.v8::internal::compiler::DeoptimizationExit"** %342 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock"*
  br label %354

354:                                              ; preds = %348, %344
  %355 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock"* [ %335, %344 ], [ %353, %348 ]
  %356 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationExit"**, %"class.v8::internal::compiler::DeoptimizationExit"*** %323, i64 1
  br label %357

357:                                              ; preds = %354, %331
  %358 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock"* [ %335, %331 ], [ %355, %354 ]
  %359 = phi %"class.v8::internal::compiler::DeoptimizationExit"*** [ %323, %331 ], [ %356, %354 ]
  %360 = icmp ult i64 %338, 8
  br i1 %360, label %381, label %361

361:                                              ; preds = %357, %468
  %362 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock"* [ %469, %468 ], [ %358, %357 ]
  %363 = phi %"class.v8::internal::compiler::DeoptimizationExit"*** [ %470, %468 ], [ %359, %357 ]
  %364 = load %"class.v8::internal::compiler::DeoptimizationExit"**, %"class.v8::internal::compiler::DeoptimizationExit"*** %363, align 8
  %365 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock"* %362, null
  br i1 %365, label %370, label %366

366:                                              ; preds = %361
  %367 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock"* %362, i64 0, i32 1
  %368 = load i64, i64* %367, align 8
  %369 = icmp ugt i64 %368, 512
  br i1 %369, label %376, label %370

370:                                              ; preds = %366, %361
  %371 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationExit"*, %"class.v8::internal::compiler::DeoptimizationExit"** %364, i64 1
  %372 = bitcast %"class.v8::internal::compiler::DeoptimizationExit"** %371 to i64*
  store i64 512, i64* %372, align 8
  %373 = load i64, i64* %333, align 8
  %374 = bitcast %"class.v8::internal::compiler::DeoptimizationExit"** %364 to i64*
  store i64 %373, i64* %374, align 8
  store %"class.v8::internal::compiler::DeoptimizationExit"** %364, %"class.v8::internal::compiler::DeoptimizationExit"*** %334, align 8
  %375 = bitcast %"class.v8::internal::compiler::DeoptimizationExit"** %364 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock"*
  br label %376

376:                                              ; preds = %370, %366
  %377 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock"* [ %362, %366 ], [ %375, %370 ]
  %378 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationExit"**, %"class.v8::internal::compiler::DeoptimizationExit"*** %363, i64 1
  %379 = load %"class.v8::internal::compiler::DeoptimizationExit"**, %"class.v8::internal::compiler::DeoptimizationExit"*** %378, align 8
  %380 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock"* %377, null
  br i1 %380, label %462, label %458

381:                                              ; preds = %468, %357
  %382 = load %"class.v8::internal::compiler::DeoptimizationExit"***, %"class.v8::internal::compiler::DeoptimizationExit"**** %236, align 8
  %383 = load %"class.v8::internal::compiler::DeoptimizationExit"***, %"class.v8::internal::compiler::DeoptimizationExit"**** %242, align 8
  %384 = icmp eq %"class.v8::internal::compiler::DeoptimizationExit"*** %383, %382
  br i1 %384, label %393, label %385

385:                                              ; preds = %381
  %386 = ptrtoint %"class.v8::internal::compiler::DeoptimizationExit"*** %382 to i64
  %387 = getelementptr %"class.v8::internal::compiler::DeoptimizationExit"**, %"class.v8::internal::compiler::DeoptimizationExit"*** %383, i64 -1
  %388 = ptrtoint %"class.v8::internal::compiler::DeoptimizationExit"*** %387 to i64
  %389 = sub i64 %388, %386
  %390 = lshr i64 %389, 3
  %391 = xor i64 %390, -1
  %392 = getelementptr %"class.v8::internal::compiler::DeoptimizationExit"**, %"class.v8::internal::compiler::DeoptimizationExit"*** %383, i64 %391
  store %"class.v8::internal::compiler::DeoptimizationExit"*** %392, %"class.v8::internal::compiler::DeoptimizationExit"**** %242, align 8
  br label %393

393:                                              ; preds = %385, %381, %329
  %394 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0
  %395 = load %"class.v8::internal::compiler::DeoptimizationExit"***, %"class.v8::internal::compiler::DeoptimizationExit"**** %394, align 8
  %396 = icmp eq %"class.v8::internal::compiler::DeoptimizationExit"*** %395, null
  br i1 %396, label %420, label %397

397:                                              ; preds = %393
  %398 = ptrtoint %"class.v8::internal::compiler::DeoptimizationExit"*** %395 to i64
  %399 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %400 = bitcast %"class.v8::internal::compiler::DeoptimizationExit"**** %399 to i64*
  %401 = load i64, i64* %400, align 8
  %402 = sub i64 %401, %398
  %403 = ashr exact i64 %402, 3
  %404 = icmp ult i64 %402, 16
  br i1 %404, label %420, label %405

405:                                              ; preds = %397
  %406 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %407 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit **>::FreeBlock"** %406, align 8
  %408 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit **>::FreeBlock"* %407, null
  br i1 %408, label %413, label %409

409:                                              ; preds = %405
  %410 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit **>::FreeBlock"* %407, i64 0, i32 1
  %411 = load i64, i64* %410, align 8
  %412 = icmp ugt i64 %411, %403
  br i1 %412, label %420, label %413

413:                                              ; preds = %409, %405
  %414 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationExit"**, %"class.v8::internal::compiler::DeoptimizationExit"*** %395, i64 1
  %415 = bitcast %"class.v8::internal::compiler::DeoptimizationExit"*** %414 to i64*
  store i64 %403, i64* %415, align 8
  %416 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit **>::FreeBlock"** %406 to i64*
  %417 = load i64, i64* %416, align 8
  %418 = bitcast %"class.v8::internal::compiler::DeoptimizationExit"*** %395 to i64*
  store i64 %417, i64* %418, align 8
  %419 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit **>::FreeBlock"** %406 to %"class.v8::internal::compiler::DeoptimizationExit"****
  store %"class.v8::internal::compiler::DeoptimizationExit"*** %395, %"class.v8::internal::compiler::DeoptimizationExit"**** %419, align 8
  br label %420

420:                                              ; preds = %393, %397, %409, %413
  %421 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %422 = load %"struct.v8::internal::compiler::CodeGenerator::HandlerInfo"*, %"struct.v8::internal::compiler::CodeGenerator::HandlerInfo"** %421, align 8
  %423 = icmp eq %"struct.v8::internal::compiler::CodeGenerator::HandlerInfo"* %422, null
  br i1 %423, label %428, label %424

424:                                              ; preds = %420
  %425 = ptrtoint %"struct.v8::internal::compiler::CodeGenerator::HandlerInfo"* %422 to i64
  %426 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 16, i32 0, i32 0, i32 1
  %427 = bitcast %"struct.v8::internal::compiler::CodeGenerator::HandlerInfo"** %426 to i64*
  store i64 %425, i64* %427, align 8
  br label %428

428:                                              ; preds = %420, %424
  %429 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %430 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %429, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal9AssemblerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %430, align 8
  %431 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 6, i32 1, i32 0
  %432 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 6, i32 1, i32 0, i32 1, i32 0, i32 0
  %433 = bitcast %"class.std::__1::__tree_end_node"* %432 to %"class.std::__1::__tree_node.935"**
  %434 = load %"class.std::__1::__tree_node.935"*, %"class.std::__1::__tree_node.935"** %433, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImiEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.854"* %431, %"class.std::__1::__tree_node.935"* %434) #11
  %435 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 5, i32 0
  %436 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %437 = bitcast %"class.std::__1::__tree_end_node"* %436 to %"class.std::__1::__tree_node.938"**
  %438 = load %"class.std::__1::__tree_node.938"*, %"class.std::__1::__tree_node.938"** %437, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal5LabelENS_6vectorIiNS_9allocatorIiEEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.844"* %435, %"class.std::__1::__tree_node.938"* %438) #11
  %439 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 4, i32 0
  tail call void @_ZNSt3__112__deque_baseIiNS_9allocatorIiEEED2Ev(%"class.std::__1::__deque_base.835"* %439) #11
  %440 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNSt3__112__deque_baseIiNS_9allocatorIiEEED2Ev(%"class.std::__1::__deque_base.835"* %440) #11
  %441 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %429, i64 0, i32 0
  tail call void @_ZN2v88internal13AssemblerBaseD2Ev(%"class.v8::internal::AssemblerBase"* %441) #11
  %442 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 4, i32 0, i32 0, i32 0
  %443 = load %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"**, %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"*** %442, align 8
  %444 = icmp eq %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"** %443, null
  br i1 %444, label %449, label %445

445:                                              ; preds = %428
  %446 = ptrtoint %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"** %443 to i64
  %447 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 4, i32 0, i32 0, i32 1
  %448 = bitcast %"class.v8::internal::compiler::UnwindingInfoWriter::BlockInitialState"*** %447 to i64*
  store i64 %446, i64* %448, align 8
  br label %449

449:                                              ; preds = %445, %428
  %450 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 1, i32 5, i32 0, i32 0, i32 0
  %451 = load i8*, i8** %450, align 8
  %452 = icmp eq i8* %451, null
  br i1 %452, label %457, label %453

453:                                              ; preds = %449
  %454 = ptrtoint i8* %451 to i64
  %455 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %0, i64 0, i32 6, i32 1, i32 5, i32 0, i32 0, i32 1
  %456 = bitcast i8** %455 to i64*
  store i64 %454, i64* %456, align 8
  br label %457

457:                                              ; preds = %449, %453
  ret void

458:                                              ; preds = %376
  %459 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock"* %377, i64 0, i32 1
  %460 = load i64, i64* %459, align 8
  %461 = icmp ugt i64 %460, 512
  br i1 %461, label %468, label %462

462:                                              ; preds = %458, %376
  %463 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationExit"*, %"class.v8::internal::compiler::DeoptimizationExit"** %379, i64 1
  %464 = bitcast %"class.v8::internal::compiler::DeoptimizationExit"** %463 to i64*
  store i64 512, i64* %464, align 8
  %465 = load i64, i64* %333, align 8
  %466 = bitcast %"class.v8::internal::compiler::DeoptimizationExit"** %379 to i64*
  store i64 %465, i64* %466, align 8
  store %"class.v8::internal::compiler::DeoptimizationExit"** %379, %"class.v8::internal::compiler::DeoptimizationExit"*** %334, align 8
  %467 = bitcast %"class.v8::internal::compiler::DeoptimizationExit"** %379 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock"*
  br label %468

468:                                              ; preds = %462, %458
  %469 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationExit *>::FreeBlock"* [ %377, %458 ], [ %467, %462 ]
  %470 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationExit"**, %"class.v8::internal::compiler::DeoptimizationExit"*** %363, i64 2
  %471 = icmp eq %"class.v8::internal::compiler::DeoptimizationExit"*** %470, %322
  br i1 %471, label %381, label %361

472:                                              ; preds = %191
  %473 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock"* %192, i64 0, i32 1
  %474 = load i64, i64* %473, align 8
  %475 = icmp ugt i64 %474, 128
  br i1 %475, label %482, label %476

476:                                              ; preds = %472, %191
  %477 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationLiteral", %"class.v8::internal::compiler::DeoptimizationLiteral"* %194, i64 0, i32 1
  %478 = bitcast %"class.v8::internal::Handle.888"* %477 to i64*
  store i64 128, i64* %478, align 8
  %479 = load i64, i64* %148, align 8
  %480 = bitcast %"class.v8::internal::compiler::DeoptimizationLiteral"* %194 to i64*
  store i64 %479, i64* %480, align 8
  store %"class.v8::internal::compiler::DeoptimizationLiteral"* %194, %"class.v8::internal::compiler::DeoptimizationLiteral"** %149, align 8
  %481 = bitcast %"class.v8::internal::compiler::DeoptimizationLiteral"* %194 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock"*
  br label %482

482:                                              ; preds = %476, %472
  %483 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::DeoptimizationLiteral>::FreeBlock"* [ %192, %472 ], [ %481, %476 ]
  %484 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizationLiteral"*, %"class.v8::internal::compiler::DeoptimizationLiteral"** %178, i64 2
  %485 = icmp eq %"class.v8::internal::compiler::DeoptimizationLiteral"** %484, %137
  br i1 %485, label %196, label %176
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler13CodeGeneratorD0Ev(%"class.v8::internal::compiler::CodeGenerator"*) unnamed_addr #5 comdat align 2 {
  tail call void @_ZN2v88internal8compiler13CodeGeneratorD2Ev(%"class.v8::internal::compiler::CodeGenerator"* %0) #11
  %2 = bitcast %"class.v8::internal::compiler::CodeGenerator"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

declare i64* @_ZNK2v88internal8compiler8Constant6ToCodeEv(%"class.v8::internal::compiler::Constant"*) local_unnamed_addr #1

declare void @_ZN2v88internal8compiler8ConstantC1Ei(%"class.v8::internal::compiler::Constant"*, i32) unnamed_addr #1

declare void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_11Immediate64Ei(%"class.v8::internal::Assembler"*, i32, i64, i8, i32) local_unnamed_addr #1

declare i64 @_ZN2v88internal17ExternalReference14FromRawAddressEm(i64) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler10LeaveFrameENS0_10StackFrame4TypeE(%"class.v8::internal::TurboAssembler"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler25immediate_arithmetic_op_8EhNS0_7OperandENS0_9ImmediateE(%"class.v8::internal::Assembler"*, i8 zeroext, i64, i32, i64) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler15arithmetic_op_8EhNS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"*, i8 zeroext, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler25immediate_arithmetic_op_8EhNS0_8RegisterENS0_9ImmediateE(%"class.v8::internal::Assembler"*, i8 zeroext, i32, i64) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler15arithmetic_op_8EhNS0_8RegisterES2_(%"class.v8::internal::Assembler"*, i8 zeroext, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler26immediate_arithmetic_op_16EhNS0_7OperandENS0_9ImmediateE(%"class.v8::internal::Assembler"*, i8 zeroext, i64, i32, i64) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler16arithmetic_op_16EhNS0_8RegisterENS0_7OperandE(%"class.v8::internal::Assembler"*, i8 zeroext, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler26immediate_arithmetic_op_16EhNS0_8RegisterENS0_9ImmediateE(%"class.v8::internal::Assembler"*, i8 zeroext, i32, i64) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler16arithmetic_op_16EhNS0_8RegisterES2_(%"class.v8::internal::Assembler"*, i8 zeroext, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5shiftENS0_8RegisterENS0_9ImmediateEii(%"class.v8::internal::Assembler"*, i32, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5shiftENS0_7OperandENS0_9ImmediateEii(%"class.v8::internal::Assembler"*, i64, i32, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5shiftENS0_8RegisterEii(%"class.v8::internal::Assembler"*, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5shiftENS0_7OperandEii(%"class.v8::internal::Assembler"*, i64, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterENS0_7OperandEhhh(%"class.v8::internal::Assembler"*, i32, i64, i32, i8 zeroext, i8 zeroext, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"*, i32, i32, i8 zeroext, i8 zeroext, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal13EhFrameWriter15AdvanceLocationEi(%"class.v8::internal::EhFrameWriter"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal13EhFrameWriter20SetBaseAddressOffsetEi(%"class.v8::internal::EhFrameWriter"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler4movbENS0_8RegisterENS0_9ImmediateE(%"class.v8::internal::Assembler"*, i32, i64) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"*, i8 zeroext, i32, i32, i64, i32, i32, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"*, i8 zeroext, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler3vpdEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"*, i8 zeroext, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler3vpdEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"*, i8 zeroext, i32, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"*, i8 zeroext, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"*, i8 zeroext, i32, i32, i64, i32) local_unnamed_addr #1

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrapD0Ev(%"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeD2Ev(%"class.v8::internal::compiler::OutOfLineCode"* %2) #11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2v88internal8compiler12_GLOBAL__N_128WasmProtectedInstructionTrap8GenerateEv(%"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::CodeGenerator"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmProtectedInstructionTrap"* %0, i64 0, i32 0, i32 0, i32 4
  %8 = load %"class.v8::internal::TurboAssembler"*, %"class.v8::internal::TurboAssembler"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %11, %14
  %16 = trunc i64 %15 to i32
  tail call void @_ZN2v88internal8compiler13CodeGenerator30AddProtectedInstructionLandingEjj(%"class.v8::internal::compiler::CodeGenerator"* %4, i32 %6, i32 %16) #11
  tail call fastcc void @_ZN2v88internal8compiler12_GLOBAL__N_117WasmOutOfLineTrap18GenerateWithTrapIdENS1_6TrapIdE(%"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap"* %2, i32 1)
  ret void
}

declare void @_ZN2v88internal8compiler13OutOfLineCodeC2EPNS1_13CodeGeneratorE(%"class.v8::internal::compiler::OutOfLineCode"*, %"class.v8::internal::compiler::CodeGenerator"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2v88internal8compiler12_GLOBAL__N_117WasmOutOfLineTrapD0Ev(%"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap"* %0, i64 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeD2Ev(%"class.v8::internal::compiler::OutOfLineCode"* %2) #11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2v88internal8compiler12_GLOBAL__N_117WasmOutOfLineTrap8GenerateEv(%"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::compiler::X64OperandConverter", align 8
  %3 = bitcast %"class.v8::internal::compiler::X64OperandConverter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #11
  %4 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap"* %0, i64 0, i32 1
  %5 = bitcast %"class.v8::internal::compiler::CodeGenerator"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap"* %0, i64 0, i32 2
  %8 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %7, align 8
  %9 = bitcast %"class.v8::internal::compiler::X64OperandConverter"* %2 to i64*
  store i64 %6, i64* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %2, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::Instruction"* %8, %"class.v8::internal::compiler::Instruction"** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::X64OperandConverter", %"class.v8::internal::compiler::X64OperandConverter"* %2, i64 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = lshr i32 %13, 8
  %15 = and i32 %14, 65535
  %16 = zext i32 %15 to i64
  %17 = add nsw i64 %16, -1
  %18 = and i32 %13, 255
  %19 = zext i32 %18 to i64
  %20 = add nsw i64 %17, %19
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %8, i64 0, i32 5, i64 %20
  %22 = call { i64, i64 } @_ZNK2v88internal8compiler27InstructionOperandConverter10ToConstantEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperandConverter"* nonnull %11, %"class.v8::internal::compiler::InstructionOperand"* %21) #11
  %23 = extractvalue { i64, i64 } %22, 1
  %24 = trunc i64 %23 to i32
  call fastcc void @_ZN2v88internal8compiler12_GLOBAL__N_117WasmOutOfLineTrap18GenerateWithTrapIdENS1_6TrapIdE(%"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap"* %0, i32 %24)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal8compiler12_GLOBAL__N_117WasmOutOfLineTrap18GenerateWithTrapIdENS1_6TrapIdE(%"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::CodeGenerator"** %3, align 8
  %5 = tail call zeroext i1 @_ZNK2v88internal8compiler13CodeGenerator30wasm_runtime_exception_supportEv(%"class.v8::internal::compiler::CodeGenerator"* %4) #11
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap"* %0, i64 0, i32 0, i32 4
  %8 = load %"class.v8::internal::TurboAssembler"*, %"class.v8::internal::TurboAssembler"** %7, align 8
  tail call void @_ZN2v88internal14TurboAssembler20PrepareCallCFunctionEi(%"class.v8::internal::TurboAssembler"* %8, i32 0) #11
  %9 = load %"class.v8::internal::TurboAssembler"*, %"class.v8::internal::TurboAssembler"** %7, align 8
  %10 = tail call i64 @_ZN2v88internal17ExternalReference35wasm_call_trap_callback_for_testingEv() #11
  tail call void @_ZN2v88internal14TurboAssembler13CallCFunctionENS0_17ExternalReferenceEi(%"class.v8::internal::TurboAssembler"* %9, i64 %10, i32 0) #11
  %11 = load %"class.v8::internal::TurboAssembler"*, %"class.v8::internal::TurboAssembler"** %7, align 8
  tail call void @_ZN2v88internal14TurboAssembler10LeaveFrameENS0_10StackFrame4TypeE(%"class.v8::internal::TurboAssembler"* %11, i32 4) #11
  %12 = load %"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::CodeGenerator"** %3, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %12, i64 0, i32 4
  %14 = load %"class.v8::internal::compiler::Linkage"*, %"class.v8::internal::compiler::Linkage"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Linkage", %"class.v8::internal::compiler::Linkage"* %14, i64 0, i32 0
  %16 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %16, i64 0, i32 5
  %18 = load i64, i64* %17, align 8
  %19 = load %"class.v8::internal::TurboAssembler"*, %"class.v8::internal::TurboAssembler"** %7, align 8
  %20 = trunc i64 %18 to i32
  %21 = shl i32 %20, 3
  tail call void @_ZN2v88internal14TurboAssembler3RetEiNS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %19, i32 %21, i32 1) #11
  br label %71

22:                                               ; preds = %2
  %23 = load %"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::CodeGenerator"** %3, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap"* %0, i64 0, i32 2
  %25 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %24, align 8
  tail call void @_ZN2v88internal8compiler13CodeGenerator22AssembleSourcePositionEPNS1_11InstructionE(%"class.v8::internal::compiler::CodeGenerator"* %23, %"class.v8::internal::compiler::Instruction"* %25) #11
  %26 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap", %"class.v8::internal::compiler::(anonymous namespace)::WasmOutOfLineTrap"* %0, i64 0, i32 0, i32 4
  %27 = load %"class.v8::internal::TurboAssembler"*, %"class.v8::internal::TurboAssembler"** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = zext i32 %1 to i64
  tail call void @_ZN2v88internal9Assembler9near_callElNS0_9RelocInfo4ModeE(%"class.v8::internal::Assembler"* %28, i64 %29, i8 signext 7) #11
  %30 = load %"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::CodeGenerator"** %3, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::CodeGenerator", %"class.v8::internal::compiler::CodeGenerator"* %30, i64 0, i32 1
  %32 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %32, i64 0, i32 2
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %32, i64 0, i32 3
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %36, %34
  %38 = icmp ult i64 %37, 40
  br i1 %38, label %39, label %41, !prof !3

39:                                               ; preds = %22
  %40 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %32, i64 40) #11
  br label %43

41:                                               ; preds = %22
  %42 = add i64 %34, 40
  store i64 %42, i64* %33, align 8
  br label %43

43:                                               ; preds = %41, %39
  %44 = phi i64 [ %40, %39 ], [ %34, %41 ]
  %45 = inttoptr i64 %44 to i8*
  %46 = inttoptr i64 %44 to %"class.v8::internal::compiler::ReferenceMap"*
  %47 = ptrtoint %"class.v8::internal::Zone"* %32 to i64
  %48 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap", %"class.v8::internal::compiler::ReferenceMap"* %46, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %49 = bitcast %"struct.std::__1::__compressed_pair_elem.719"* %48 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 24, i1 false) #11
  store i64 %47, i64* %49, align 8
  %50 = load i64, i64* %33, align 8
  %51 = load i64, i64* %35, align 8
  %52 = sub i64 %51, %50
  %53 = icmp ult i64 %52, 64
  br i1 %53, label %54, label %56, !prof !3

54:                                               ; preds = %43
  %55 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %32, i64 64) #11
  br label %58

56:                                               ; preds = %43
  %57 = add i64 %50, 64
  store i64 %57, i64* %33, align 8
  br label %58

58:                                               ; preds = %56, %54
  %59 = phi i64 [ %55, %54 ], [ %50, %56 ]
  %60 = inttoptr i64 %59 to %"class.v8::internal::compiler::InstructionOperand"*
  %61 = inttoptr i64 %59 to i8*
  %62 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap", %"class.v8::internal::compiler::ReferenceMap"* %46, i64 0, i32 0, i32 0, i32 0, i32 1
  %63 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap", %"class.v8::internal::compiler::ReferenceMap"* %46, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::InstructionOperand"* %60, %"class.v8::internal::compiler::InstructionOperand"** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %60, i64 8
  %65 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap", %"class.v8::internal::compiler::ReferenceMap"* %46, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::InstructionOperand"* %64, %"class.v8::internal::compiler::InstructionOperand"** %65, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 64, i1 false) #11
  %66 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %62 to i64*
  %67 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %64 to i64
  store i64 %67, i64* %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap", %"class.v8::internal::compiler::ReferenceMap"* %46, i64 0, i32 1
  store i32 -1, i32* %68, align 8
  %69 = load %"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::CodeGenerator"** %3, align 8
  tail call void @_ZN2v88internal8compiler13CodeGenerator15RecordSafepointEPNS1_12ReferenceMapE(%"class.v8::internal::compiler::CodeGenerator"* %69, %"class.v8::internal::compiler::ReferenceMap"* %46) #11
  %70 = load %"class.v8::internal::TurboAssembler"*, %"class.v8::internal::TurboAssembler"** %26, align 8
  tail call void @_ZN2v88internal14TurboAssembler17AssertUnreachableENS0_11AbortReasonE(%"class.v8::internal::TurboAssembler"* %70, i8 zeroext 49) #11
  br label %71

71:                                               ; preds = %6, %58
  ret void
}

declare zeroext i1 @_ZNK2v88internal8compiler13CodeGenerator30wasm_runtime_exception_supportEv(%"class.v8::internal::compiler::CodeGenerator"*) local_unnamed_addr #1

declare i64 @_ZN2v88internal17ExternalReference35wasm_call_trap_callback_for_testingEv() local_unnamed_addr #1

declare void @_ZN2v88internal8compiler13CodeGenerator22AssembleSourcePositionEPNS1_11InstructionE(%"class.v8::internal::compiler::CodeGenerator"*, %"class.v8::internal::compiler::Instruction"*) local_unnamed_addr #1

declare void @_ZN2v88internal8compiler13CodeGenerator30AddProtectedInstructionLandingEjj(%"class.v8::internal::compiler::CodeGenerator"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5cmppdENS0_11XMMRegisterES2_a(%"class.v8::internal::Assembler"*, i32, i32, i8 signext) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler9fma_instrEhNS0_11XMMRegisterES2_S2_NS1_12VectorLengthENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWE(%"class.v8::internal::Assembler"*, i8 zeroext, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"*, i32, i32, i8 zeroext, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5cmppsENS0_11XMMRegisterES2_a(%"class.v8::internal::Assembler"*, i32, i32, i8 signext) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"*, i32, i32, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler4MoveENS0_11XMMRegisterEmm(%"class.v8::internal::TurboAssembler"*, i32, i64, i64) local_unnamed_addr #1

declare i32 @_ZN2v88internal20AlignedSlotAllocator5AlignEi(%"class.v8::internal::AlignedSlotAllocator"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctpop.i32(i32) #6

declare i32 @_ZN2v88internal20AlignedSlotAllocator17AllocateUnalignedEi(%"class.v8::internal::AlignedSlotAllocator"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler8emit_incENS0_7OperandEi(%"class.v8::internal::Assembler"*, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler10MoveNumberENS0_8RegisterEd(%"class.v8::internal::TurboAssembler"*, i32, double) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler4MoveENS0_8RegisterENS0_17ExternalReferenceE(%"class.v8::internal::TurboAssembler"*, i32, i64) local_unnamed_addr #1

declare i64* @_ZNK2v88internal8compiler8Constant12ToHeapObjectEv(%"class.v8::internal::compiler::Constant"*) local_unnamed_addr #1

declare zeroext i1 @_ZN2v88internal8compiler13CodeGenerator24IsMaterializableFromRootENS0_6HandleINS0_10HeapObjectEEEPNS0_9RootIndexE(%"class.v8::internal::compiler::CodeGenerator"*, i64*, i16*) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler4MoveENS0_8RegisterENS0_6HandleINS0_10HeapObjectEEENS0_9RelocInfo4ModeE(%"class.v8::internal::TurboAssembler"*, i32, i64*, i8 signext) local_unnamed_addr #1

declare %"class.v8::internal::StringConstantBase"* @_ZNK2v88internal8compiler8Constant23ToDelayedStringConstantEv(%"class.v8::internal::compiler::Constant"*) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler18MoveStringConstantENS0_8RegisterEPKNS0_18StringConstantBaseENS0_9RelocInfo4ModeE(%"class.v8::internal::TurboAssembler"*, i32, %"class.v8::internal::StringConstantBase"*, i8 signext) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler4MoveENS0_7OperandEl(%"class.v8::internal::TurboAssembler"*, i64, i32, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal9AssemblerD2Ev(%"class.v8::internal::Assembler"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal9AssemblerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 6, i32 1, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 6, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.935"**
  %6 = load %"class.std::__1::__tree_node.935"*, %"class.std::__1::__tree_node.935"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImiEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.854"* %3, %"class.std::__1::__tree_node.935"* %6) #11
  %7 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 5, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node.938"**
  %10 = load %"class.std::__1::__tree_node.938"*, %"class.std::__1::__tree_node.938"** %9, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal5LabelENS_6vectorIiNS_9allocatorIiEEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.844"* %7, %"class.std::__1::__tree_node.938"* %10) #11
  %11 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 4, i32 0
  tail call void @_ZNSt3__112__deque_baseIiNS_9allocatorIiEEED2Ev(%"class.std::__1::__deque_base.835"* %11) #11
  %12 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 2, i32 0
  tail call void @_ZNSt3__112__deque_baseIiNS_9allocatorIiEEED2Ev(%"class.std::__1::__deque_base.835"* %12) #11
  %13 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 0
  tail call void @_ZN2v88internal13AssemblerBaseD2Ev(%"class.v8::internal::AssemblerBase"* %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseIiNS_9allocatorIiEEED2Ev(%"class.std::__1::__deque_base.835"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__deque_base.835", %"class.std::__1::__deque_base.835"* %0, i64 0, i32 0, i32 1
  %3 = load i32**, i32*** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__deque_base.835", %"class.std::__1::__deque_base.835"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 10
  %7 = getelementptr inbounds i32*, i32** %3, i64 %6
  %8 = getelementptr inbounds %"class.std::__1::__deque_base.835", %"class.std::__1::__deque_base.835"* %0, i64 0, i32 0, i32 2
  %9 = load i32**, i32*** %8, align 8
  %10 = icmp eq i32** %9, %3
  %11 = ptrtoint i32** %9 to i64
  %12 = ptrtoint i32** %3 to i64
  br i1 %10, label %13, label %15

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::__deque_base.835", %"class.std::__1::__deque_base.835"* %0, i64 0, i32 2, i32 0, i32 0
  br label %28

15:                                               ; preds = %1
  %16 = load i32*, i32** %7, align 8
  %17 = and i64 %5, 1023
  %18 = getelementptr inbounds i32, i32* %16, i64 %17
  %19 = getelementptr inbounds %"class.std::__1::__deque_base.835", %"class.std::__1::__deque_base.835"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %5
  %22 = lshr i64 %21, 10
  %23 = getelementptr inbounds i32*, i32** %3, i64 %22
  %24 = load i32*, i32** %23, align 8
  %25 = and i64 %21, 1023
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  %27 = icmp eq i32* %26, %18
  br i1 %27, label %28, label %34

28:                                               ; preds = %47, %15, %13
  %29 = phi i64* [ %14, %13 ], [ %19, %15 ], [ %19, %47 ]
  store i64 0, i64* %29, align 8
  %30 = bitcast i32*** %8 to i64*
  %31 = sub i64 %11, %12
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, 2
  br i1 %33, label %52, label %65

34:                                               ; preds = %15, %47
  %35 = phi i32* [ %50, %47 ], [ %18, %15 ]
  %36 = phi i32** [ %48, %47 ], [ %7, %15 ]
  %37 = getelementptr inbounds i32, i32* %35, i64 1
  %38 = ptrtoint i32* %37 to i64
  %39 = bitcast i32** %36 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = icmp eq i64 %41, 4096
  br i1 %42, label %43, label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds i32*, i32** %36, i64 1
  %45 = bitcast i32** %44 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %43, %34
  %48 = phi i32** [ %44, %43 ], [ %36, %34 ]
  %49 = phi i64 [ %46, %43 ], [ %38, %34 ]
  %50 = inttoptr i64 %49 to i32*
  %51 = icmp eq i32* %26, %50
  br i1 %51, label %28, label %34

52:                                               ; preds = %28, %52
  %53 = phi i32** [ %57, %52 ], [ %3, %28 ]
  %54 = bitcast i32** %53 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #13
  %56 = load i32**, i32*** %2, align 8
  %57 = getelementptr inbounds i32*, i32** %56, i64 1
  store i32** %57, i32*** %2, align 8
  %58 = load i64, i64* %30, align 8
  %59 = ptrtoint i32** %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = icmp ugt i64 %61, 2
  br i1 %62, label %52, label %63

63:                                               ; preds = %52
  %64 = inttoptr i64 %58 to i32**
  br label %65

65:                                               ; preds = %63, %28
  %66 = phi i32** [ %9, %28 ], [ %64, %63 ]
  %67 = phi i32** [ %3, %28 ], [ %57, %63 ]
  %68 = phi i64 [ %32, %28 ], [ %61, %63 ]
  switch i64 %68, label %72 [
    i64 1, label %70
    i64 2, label %69
  ]

69:                                               ; preds = %65
  br label %70

70:                                               ; preds = %65, %69
  %71 = phi i64 [ 1024, %69 ], [ 512, %65 ]
  store i64 %71, i64* %4, align 8
  br label %72

72:                                               ; preds = %70, %65
  %73 = icmp eq i32** %67, %66
  br i1 %73, label %83, label %74

74:                                               ; preds = %72, %74
  %75 = phi i32** [ %78, %74 ], [ %67, %72 ]
  %76 = bitcast i32** %75 to i8**
  %77 = load i8*, i8** %76, align 8
  tail call void @_ZdlPv(i8* %77) #13
  %78 = getelementptr inbounds i32*, i32** %75, i64 1
  %79 = icmp eq i32** %78, %66
  br i1 %79, label %80, label %74

80:                                               ; preds = %74
  %81 = load i32**, i32*** %2, align 8
  %82 = load i32**, i32*** %8, align 8
  br label %83

83:                                               ; preds = %80, %72
  %84 = phi i32** [ %82, %80 ], [ %66, %72 ]
  %85 = phi i32** [ %81, %80 ], [ %66, %72 ]
  %86 = icmp eq i32** %84, %85
  br i1 %86, label %95, label %87

87:                                               ; preds = %83
  %88 = ptrtoint i32** %85 to i64
  %89 = getelementptr i32*, i32** %84, i64 -1
  %90 = ptrtoint i32** %89 to i64
  %91 = sub i64 %90, %88
  %92 = lshr i64 %91, 3
  %93 = xor i64 %92, -1
  %94 = getelementptr i32*, i32** %84, i64 %93
  store i32** %94, i32*** %8, align 8
  br label %95

95:                                               ; preds = %87, %83
  %96 = getelementptr inbounds %"class.std::__1::__deque_base.835", %"class.std::__1::__deque_base.835"* %0, i64 0, i32 0, i32 0
  %97 = load i32**, i32*** %96, align 8
  %98 = icmp eq i32** %97, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %95
  %100 = bitcast i32** %97 to i8*
  tail call void @_ZdlPv(i8* %100) #13
  br label %101

101:                                              ; preds = %95, %99
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v88internal13AssemblerBaseD2Ev(%"class.v8::internal::AssemblerBase"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal9AssemblerD0Ev(%"class.v8::internal::Assembler"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal9AssemblerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 6, i32 1, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 6, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.935"**
  %6 = load %"class.std::__1::__tree_node.935"*, %"class.std::__1::__tree_node.935"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImiEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.854"* %3, %"class.std::__1::__tree_node.935"* %6) #11
  %7 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 5, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node.938"**
  %10 = load %"class.std::__1::__tree_node.938"*, %"class.std::__1::__tree_node.938"** %9, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal5LabelENS_6vectorIiNS_9allocatorIiEEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.844"* %7, %"class.std::__1::__tree_node.938"* %10) #11
  %11 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 4, i32 0
  tail call void @_ZNSt3__112__deque_baseIiNS_9allocatorIiEEED2Ev(%"class.std::__1::__deque_base.835"* %11) #11
  %12 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 2, i32 0
  tail call void @_ZNSt3__112__deque_baseIiNS_9allocatorIiEEED2Ev(%"class.std::__1::__deque_base.835"* %12) #11
  %13 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 0
  tail call void @_ZN2v88internal13AssemblerBaseD2Ev(%"class.v8::internal::AssemblerBase"* %13) #11
  %14 = bitcast %"class.v8::internal::Assembler"* %0 to i8*
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* %14) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13AssemblerBase21AbortedCodeGenerationEv(%"class.v8::internal::AssemblerBase"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeImiEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.854"*, %"class.std::__1::__tree_node.935"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.935"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.935"* %1 to %"class.std::__1::__tree_node.935"**
  %6 = load %"class.std::__1::__tree_node.935"*, %"class.std::__1::__tree_node.935"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImiEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.854"* %0, %"class.std::__1::__tree_node.935"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.935", %"class.std::__1::__tree_node.935"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.935"**
  %9 = load %"class.std::__1::__tree_node.935"*, %"class.std::__1::__tree_node.935"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImiEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.854"* %0, %"class.std::__1::__tree_node.935"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node.935"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal5LabelENS_6vectorIiNS_9allocatorIiEEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.844"*, %"class.std::__1::__tree_node.938"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.938"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.938"* %1 to %"class.std::__1::__tree_node.938"**
  %6 = load %"class.std::__1::__tree_node.938"*, %"class.std::__1::__tree_node.938"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal5LabelENS_6vectorIiNS_9allocatorIiEEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.844"* %0, %"class.std::__1::__tree_node.938"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.938", %"class.std::__1::__tree_node.938"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.938"**
  %9 = load %"class.std::__1::__tree_node.938"*, %"class.std::__1::__tree_node.938"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal5LabelENS_6vectorIiNS_9allocatorIiEEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.844"* %0, %"class.std::__1::__tree_node.938"* %9) #11
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.938", %"class.std::__1::__tree_node.938"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = icmp eq i32* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %4
  %14 = ptrtoint i32* %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.938", %"class.std::__1::__tree_node.938"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %16 = bitcast i32** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast i32* %11 to i8*
  tail call void @_ZdlPv(i8* %17) #13
  br label %18

18:                                               ; preds = %4, %13
  %19 = bitcast %"class.std::__1::__tree_node.938"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v88internal8MalloceddlEPv(i8*) local_unnamed_addr #7

declare void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"*, i64, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"*, i8 zeroext, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"*, i8 zeroext, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5movsdENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"*, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"*, i32, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler8emit_leaENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"*, i32, i64, i32, i32) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

declare void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"*, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler9emit_testENS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"*, i64, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"*, i8 zeroext, i32, i64, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2v88internal8compiler12_GLOBAL__N_126OutOfLineTruncateDoubleToID0Ev(%"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI"* %0, i64 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeD2Ev(%"class.v8::internal::compiler::OutOfLineCode"* %2) #11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2v88internal8compiler12_GLOBAL__N_126OutOfLineTruncateDoubleToI8GenerateEv(%"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI"* %0, i64 0, i32 0, i32 4
  %3 = load %"class.v8::internal::TurboAssembler"*, %"class.v8::internal::TurboAssembler"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %4, i8 zeroext 5, i32 4, i64 8, i32 8) #11
  %5 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI"* %0, i64 0, i32 4
  %6 = load %"class.v8::internal::compiler::UnwindingInfoWriter"*, %"class.v8::internal::compiler::UnwindingInfoWriter"** %5, align 8
  %7 = load %"class.v8::internal::TurboAssembler"*, %"class.v8::internal::TurboAssembler"** %2, align 8
  %8 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %10, %13
  %15 = trunc i64 %14 to i32
  %16 = load i8, i8* @_ZN2v88internal29FLAG_perf_prof_unwinding_infoE, align 1, !range !2
  %17 = icmp eq i8 %16, 0
  %18 = bitcast %"class.v8::internal::TurboAssembler"* %7 to %"class.v8::internal::SharedTurboAssembler"*
  br i1 %17, label %30, label %19

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter", %"class.v8::internal::compiler::UnwindingInfoWriter"* %6, i64 0, i32 2
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %30

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter", %"class.v8::internal::compiler::UnwindingInfoWriter"* %6, i64 0, i32 1
  tail call void @_ZN2v88internal13EhFrameWriter15AdvanceLocationEi(%"class.v8::internal::EhFrameWriter"* %24, i32 %15) #11
  %25 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter", %"class.v8::internal::compiler::UnwindingInfoWriter"* %6, i64 0, i32 1, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = add nsw i32 %26, 8
  tail call void @_ZN2v88internal13EhFrameWriter20SetBaseAddressOffsetEi(%"class.v8::internal::EhFrameWriter"* %24, i32 %27) #11
  %28 = bitcast %"class.v8::internal::TurboAssembler"** %2 to %"class.v8::internal::SharedTurboAssembler"**
  %29 = load %"class.v8::internal::SharedTurboAssembler"*, %"class.v8::internal::SharedTurboAssembler"** %28, align 8
  br label %30

30:                                               ; preds = %1, %19, %23
  %31 = phi %"class.v8::internal::SharedTurboAssembler"* [ %18, %1 ], [ %18, %19 ], [ %29, %23 ]
  %32 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI"* %0, i64 0, i32 2, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %31, i64 0, i32 0, i32 0
  %35 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %36 = and i32 %35, 32
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %30
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %34, i8 zeroext 17, i32 %33, i32 0, i64 2360320, i32 131072, i32 3, i32 1, i32 0, i32 5) #11
  br label %40

39:                                               ; preds = %30
  tail call void @_ZN2v88internal9Assembler5movsdENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %34, i64 2360320, i32 131072, i32 %33) #11
  br label %40

40:                                               ; preds = %38, %39
  %41 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI"* %0, i64 0, i32 3
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 1
  %44 = load %"class.v8::internal::TurboAssembler"*, %"class.v8::internal::TurboAssembler"** %2, align 8
  br i1 %43, label %45, label %47

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %44, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler9near_callElNS0_9RelocInfo4ModeE(%"class.v8::internal::Assembler"* %46, i64 49, i8 signext 7) #11
  br label %57

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9, i32 5
  %49 = load i8, i8* %48, align 1, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %52, label %51

51:                                               ; preds = %47
  tail call void @_ZN2v88internal14TurboAssembler11CallBuiltinEi(%"class.v8::internal::TurboAssembler"* %44, i32 629) #11
  br label %57

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI"* %0, i64 0, i32 5
  %54 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %54, i64 0, i32 41
  %56 = tail call i64* @_ZN2v88internal8Builtins14builtin_handleEi(%"class.v8::internal::Builtins"* %55, i32 629) #11
  tail call void @_ZN2v88internal14TurboAssembler4CallENS0_6HandleINS0_4CodeEEENS0_9RelocInfo4ModeE(%"class.v8::internal::TurboAssembler"* %44, i64* %56, i8 signext 1) #11
  br label %57

57:                                               ; preds = %51, %52, %45
  %58 = load %"class.v8::internal::TurboAssembler"*, %"class.v8::internal::TurboAssembler"** %2, align 8
  %59 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineTruncateDoubleToI"* %0, i64 0, i32 1, i32 0, i32 0
  %61 = load i32, i32* %60, align 8
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %59, i32 %61, i64 2360320, i32 131072, i32 4) #11
  %62 = load %"class.v8::internal::TurboAssembler"*, %"class.v8::internal::TurboAssembler"** %2, align 8
  %63 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %62, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %63, i8 zeroext 0, i32 4, i64 8, i32 8) #11
  %64 = load %"class.v8::internal::compiler::UnwindingInfoWriter"*, %"class.v8::internal::compiler::UnwindingInfoWriter"** %5, align 8
  %65 = load %"class.v8::internal::TurboAssembler"*, %"class.v8::internal::TurboAssembler"** %2, align 8
  %66 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %67 = bitcast i8** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %70 = bitcast i8** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = sub i64 %68, %71
  %73 = trunc i64 %72 to i32
  %74 = load i8, i8* @_ZN2v88internal29FLAG_perf_prof_unwinding_infoE, align 1, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %85, label %76

76:                                               ; preds = %57
  %77 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter", %"class.v8::internal::compiler::UnwindingInfoWriter"* %64, i64 0, i32 2
  %78 = load i8, i8* %77, align 8, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %85

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter", %"class.v8::internal::compiler::UnwindingInfoWriter"* %64, i64 0, i32 1
  tail call void @_ZN2v88internal13EhFrameWriter15AdvanceLocationEi(%"class.v8::internal::EhFrameWriter"* %81, i32 %73) #11
  %82 = getelementptr inbounds %"class.v8::internal::compiler::UnwindingInfoWriter", %"class.v8::internal::compiler::UnwindingInfoWriter"* %64, i64 0, i32 1, i32 4
  %83 = load i32, i32* %82, align 8
  %84 = add nsw i32 %83, -8
  tail call void @_ZN2v88internal13EhFrameWriter20SetBaseAddressOffsetEi(%"class.v8::internal::EhFrameWriter"* %81, i32 %84) #11
  br label %85

85:                                               ; preds = %57, %76, %80
  ret void
}

declare void @_ZN2v88internal14TurboAssembler11CallBuiltinEi(%"class.v8::internal::TurboAssembler"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88internal8compiler13OutOfLineCodeD2Ev(%"class.v8::internal::compiler::OutOfLineCode"*) unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2v88internal8compiler12_GLOBAL__N_120OutOfLineRecordWriteD0Ev(%"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"* %0, i64 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeD2Ev(%"class.v8::internal::compiler::OutOfLineCode"* %2) #11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2v88internal8compiler12_GLOBAL__N_120OutOfLineRecordWrite8GenerateEv(%"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"* %0, i64 0, i32 0, i32 4
  %3 = load %"class.v8::internal::TurboAssembler"*, %"class.v8::internal::TurboAssembler"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  tail call void @_ZN2v88internal14TurboAssembler23DecompressTaggedPointerENS0_8RegisterES2_(%"class.v8::internal::TurboAssembler"* %3, i32 %5, i32 %5) #11
  %6 = load %"class.v8::internal::TurboAssembler"*, %"class.v8::internal::TurboAssembler"** %2, align 8
  %7 = load i32, i32* %4, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"* %0, i64 0, i32 4, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"* %0, i64 0, i32 0, i32 2
  tail call void @_ZN2v88internal14TurboAssembler13CheckPageFlagENS0_8RegisterES2_iNS0_9ConditionEPNS0_5LabelENS4_8DistanceE(%"class.v8::internal::TurboAssembler"* %6, i32 %7, i32 %9, i32 2, i32 4, %"class.v8::internal::Label"* %10, i32 1) #11
  %11 = load %"class.v8::internal::TurboAssembler"*, %"class.v8::internal::TurboAssembler"** %2, align 8
  %12 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"* %0, i64 0, i32 5, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"* %0, i64 0, i32 2
  %16 = bitcast %"class.v8::internal::Operand"* %15 to i64*
  %17 = load i64, i64* %16, align 4
  %18 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"* %0, i64 0, i32 2, i32 0, i32 1, i64 7
  %19 = bitcast i8* %18 to i32*
  %20 = load i32, i32* %19, align 4
  tail call void @_ZN2v88internal9Assembler8emit_leaENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %12, i32 %14, i64 %17, i32 %20, i32 8) #11
  %21 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"* %0, i64 0, i32 6
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %22, 0
  %24 = zext i1 %23 to i32
  %25 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"* %0, i64 0, i32 0, i32 3
  %26 = load %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::Frame"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %26, i64 0, i32 5
  %28 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %28, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %38, label %32

32:                                               ; preds = %1
  %33 = icmp sgt i32 %30, 0
  br i1 %33, label %34, label %52

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %28, i64 0, i32 2, i32 0
  %36 = load i64*, i64** %35, align 8
  %37 = zext i32 %30 to i64
  br label %46

38:                                               ; preds = %1
  %39 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %28, i64 0, i32 2
  %40 = bitcast %"union.v8::internal::BitVector::DataStorage"* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = icmp ne i64 %41, 0
  %43 = zext i1 %42 to i32
  br label %52

44:                                               ; preds = %46
  %45 = icmp eq i64 %51, %37
  br i1 %45, label %52, label %46

46:                                               ; preds = %44, %34
  %47 = phi i64 [ 0, %34 ], [ %51, %44 ]
  %48 = getelementptr inbounds i64, i64* %36, i64 %47
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, 0
  %51 = add nuw nsw i64 %47, 1
  br i1 %50, label %44, label %52

52:                                               ; preds = %44, %46, %32, %38
  %53 = phi i32 [ %43, %38 ], [ 0, %32 ], [ 0, %44 ], [ 1, %46 ]
  %54 = icmp eq i32 %22, 2
  br i1 %54, label %55, label %60

55:                                               ; preds = %52
  %56 = load %"class.v8::internal::TurboAssembler"*, %"class.v8::internal::TurboAssembler"** %2, align 8
  %57 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"* %0, i64 0, i32 1, i32 0, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = load i32, i32* %13, align 8
  tail call void @_ZN2v88internal14TurboAssembler23CallEphemeronKeyBarrierENS0_8RegisterES2_NS0_14SaveFPRegsModeE(%"class.v8::internal::TurboAssembler"* %56, i32 %58, i32 %59, i32 %53) #11
  br label %70

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"* %0, i64 0, i32 7
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 1
  %64 = load %"class.v8::internal::TurboAssembler"*, %"class.v8::internal::TurboAssembler"** %2, align 8
  %65 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineRecordWrite"* %0, i64 0, i32 1, i32 0, i32 0
  %66 = load i32, i32* %65, align 8
  %67 = load i32, i32* %13, align 8
  br i1 %63, label %68, label %69

68:                                               ; preds = %60
  tail call void @_ZN2v88internal14TurboAssembler19CallRecordWriteStubENS0_8RegisterES2_NS0_19RememberedSetActionENS0_14SaveFPRegsModeENS0_12StubCallModeE(%"class.v8::internal::TurboAssembler"* %64, i32 %66, i32 %67, i32 %24, i32 %53, i32 1) #11
  br label %70

69:                                               ; preds = %60
  tail call void @_ZN2v88internal14TurboAssembler19CallRecordWriteStubENS0_8RegisterES2_NS0_19RememberedSetActionENS0_14SaveFPRegsModeENS0_12StubCallModeE(%"class.v8::internal::TurboAssembler"* %64, i32 %66, i32 %67, i32 %24, i32 %53, i32 2) #11
  br label %70

70:                                               ; preds = %68, %69, %55
  ret void
}

declare void @_ZN2v88internal14TurboAssembler23DecompressTaggedPointerENS0_8RegisterES2_(%"class.v8::internal::TurboAssembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler23CallEphemeronKeyBarrierENS0_8RegisterES2_NS0_14SaveFPRegsModeE(%"class.v8::internal::TurboAssembler"*, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14TurboAssembler19CallRecordWriteStubENS0_8RegisterES2_NS0_19RememberedSetActionENS0_14SaveFPRegsModeENS0_12StubCallModeE(%"class.v8::internal::TurboAssembler"*, i32, i32, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"*, i8 zeroext, i64, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler9emit_testENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"*, i64, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler9emit_testENS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler9emit_testENS0_8RegisterES2_i(%"class.v8::internal::Assembler"*, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler9emit_imulENS0_8RegisterES2_NS0_9ImmediateEi(%"class.v8::internal::Assembler"*, i32, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler9emit_imulENS0_8RegisterENS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"*, i32, i64, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler9emit_imulENS0_8RegisterES2_i(%"class.v8::internal::Assembler"*, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler9emit_imulENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"*, i32, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler9emit_imulENS0_8RegisterEi(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler9emit_imulENS0_7OperandEi(%"class.v8::internal::Assembler"*, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler9emit_idivENS0_8RegisterEi(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler8emit_divENS0_8RegisterEi(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler8emit_notENS0_8RegisterEi(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler8emit_notENS0_7OperandEi(%"class.v8::internal::Assembler"*, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler7ucomissENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler7ucomissENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler7roundssENS0_11XMMRegisterES2_NS0_12RoundingModeE(%"class.v8::internal::Assembler"*, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5movsdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"*, i32, i64, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2v88internal8compiler12_GLOBAL__N_123OutOfLineLoadFloat32NaND0Ev(%"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN"* %0, i64 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeD2Ev(%"class.v8::internal::compiler::OutOfLineCode"* %2) #11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2v88internal8compiler12_GLOBAL__N_123OutOfLineLoadFloat32NaN8GenerateEv(%"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN"* %0, i64 0, i32 0, i32 4
  %3 = bitcast %"class.v8::internal::TurboAssembler"** %2 to %"class.v8::internal::SharedTurboAssembler"**
  %4 = load %"class.v8::internal::SharedTurboAssembler"*, %"class.v8::internal::SharedTurboAssembler"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat32NaN"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %4, i64 0, i32 0, i32 0
  %8 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %9 = and i32 %8, 32
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %1
  tail call void @_ZN2v88internal9Assembler3vpsEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %7, i8 zeroext 87, i32 %6, i32 %6, i32 %6) #11
  br label %13

12:                                               ; preds = %1
  tail call void @_ZN2v88internal9Assembler9sse_instrENS0_11XMMRegisterES2_hh(%"class.v8::internal::Assembler"* %7, i32 %6, i32 %6, i8 zeroext 15, i8 zeroext 87) #11
  br label %13

13:                                               ; preds = %11, %12
  %14 = load %"class.v8::internal::TurboAssembler"*, %"class.v8::internal::TurboAssembler"** %2, align 8
  %15 = load i32, i32* %5, align 8
  %16 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %14, i64 0, i32 0, i32 0, i32 0
  %17 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %18 = and i32 %17, 32
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %13
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16, i8 zeroext 94, i32 %15, i32 %15, i32 %15, i32 2, i32 1, i32 0, i32 5) #11
  br label %22

21:                                               ; preds = %13
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16, i32 %15, i32 %15, i8 zeroext -13, i8 zeroext 15, i8 zeroext 94) #11
  br label %22

22:                                               ; preds = %20, %21
  ret void
}

declare void @_ZN2v88internal9Assembler8movmskpsENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5movssENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler3vssEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"*, i8 zeroext, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler3vssEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"*, i8 zeroext, i32, i32, i64, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2v88internal8compiler12_GLOBAL__N_123OutOfLineLoadFloat64NaND0Ev(%"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN"* %0, i64 0, i32 0
  tail call void @_ZN2v88internal8compiler13OutOfLineCodeD2Ev(%"class.v8::internal::compiler::OutOfLineCode"* %2) #11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2v88internal8compiler12_GLOBAL__N_123OutOfLineLoadFloat64NaN8GenerateEv(%"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN"* %0, i64 0, i32 0, i32 4
  %3 = bitcast %"class.v8::internal::TurboAssembler"** %2 to %"class.v8::internal::SharedTurboAssembler"**
  %4 = load %"class.v8::internal::SharedTurboAssembler"*, %"class.v8::internal::SharedTurboAssembler"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN", %"class.v8::internal::compiler::(anonymous namespace)::OutOfLineLoadFloat64NaN"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::SharedTurboAssembler", %"class.v8::internal::SharedTurboAssembler"* %4, i64 0, i32 0, i32 0
  %8 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %9 = and i32 %8, 32
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %1
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %7, i8 zeroext 87, i32 %6, i32 %6, i32 %6, i32 1, i32 1, i32 0, i32 5) #11
  br label %13

12:                                               ; preds = %1
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %7, i32 %6, i32 %6, i8 zeroext 102, i8 zeroext 15, i8 zeroext 87) #11
  br label %13

13:                                               ; preds = %11, %12
  %14 = load %"class.v8::internal::TurboAssembler"*, %"class.v8::internal::TurboAssembler"** %2, align 8
  %15 = load i32, i32* %5, align 8
  %16 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %14, i64 0, i32 0, i32 0, i32 0
  %17 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %18 = and i32 %17, 32
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %13
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %16, i8 zeroext 94, i32 %15, i32 %15, i32 %15, i32 3, i32 1, i32 0, i32 5) #11
  br label %22

21:                                               ; preds = %13
  tail call void @_ZN2v88internal9Assembler10sse2_instrENS0_11XMMRegisterES2_hhh(%"class.v8::internal::Assembler"* %16, i32 %15, i32 %15, i8 zeroext -14, i8 zeroext 15, i8 zeroext 94) #11
  br label %22

22:                                               ; preds = %20, %21
  ret void
}

declare void @_ZN2v88internal9Assembler8movmskpdENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5movsdENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler7roundsdENS0_11XMMRegisterES2_NS0_12RoundingModeE(%"class.v8::internal::Assembler"*, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5vmovdENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler4movdENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler4movdENS0_11XMMRegisterENS0_8RegisterE(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5vmovdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler4movdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler11emit_movzxbENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"*, i32, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler11emit_movzxbENS0_8RegisterES2_i(%"class.v8::internal::Assembler"*, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler11emit_movzxwENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"*, i32, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler11emit_movzxwENS0_8RegisterES2_i(%"class.v8::internal::Assembler"*, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"*, i64, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler5movssENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"*, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler7vmovdquENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler7vmovdquENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"*, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler8emit_decENS0_8RegisterEi(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler8emit_incENS0_8RegisterEi(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler8vmovddupENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler7movddupENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler8vmovddupENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler7movddupENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"*, i32, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler8cvtdq2pdENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler8insertpsENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"*, i32, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler8insertpsENS0_11XMMRegisterENS0_7OperandEh(%"class.v8::internal::Assembler"*, i32, i64, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler7roundpsENS0_11XMMRegisterES2_NS0_12RoundingModeE(%"class.v8::internal::Assembler"*, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler7roundpdENS0_11XMMRegisterES2_NS0_12RoundingModeE(%"class.v8::internal::Assembler"*, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler6pextrqENS0_8RegisterENS0_11XMMRegisterEa(%"class.v8::internal::Assembler"*, i32, i32, i8 signext) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler6pinsrqENS0_11XMMRegisterENS0_8RegisterEh(%"class.v8::internal::Assembler"*, i32, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler6pshufdENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"*, i32, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler9cvttps2dqENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler11ssse3_instrENS0_11XMMRegisterES2_hhhh(%"class.v8::internal::Assembler"*, i32, i32, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler7pshuflwENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"*, i32, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler10sse4_instrENS0_8RegisterENS0_11XMMRegisterEhhhha(%"class.v8::internal::Assembler"*, i32, i32, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext, i8 signext) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler9vpmovmskbENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler8pmovmskbENS0_8RegisterENS0_11XMMRegisterE(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler10sse4_instrENS0_7OperandENS0_11XMMRegisterEhhhha(%"class.v8::internal::Assembler"*, i64, i32, i32, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext, i8 signext) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler7vmovdquENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler6movupsENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler10sse4_instrENS0_11XMMRegisterENS0_7OperandEhhhh(%"class.v8::internal::Assembler"*, i32, i64, i32, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler6pshufdENS0_11XMMRegisterENS0_7OperandEh(%"class.v8::internal::Assembler"*, i32, i64, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler7pshuflwENS0_11XMMRegisterENS0_7OperandEh(%"class.v8::internal::Assembler"*, i32, i64, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler7pshufhwENS0_11XMMRegisterES2_h(%"class.v8::internal::Assembler"*, i32, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler7pshufhwENS0_11XMMRegisterENS0_7OperandEh(%"class.v8::internal::Assembler"*, i32, i64, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler9emit_xchgENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"*, i32, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler12emit_cmpxchgENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"*, i64, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{i32 0, i32 33}
