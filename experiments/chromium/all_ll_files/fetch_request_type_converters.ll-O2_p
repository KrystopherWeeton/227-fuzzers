; ModuleID = '../../content/common/fetch/fetch_request_type_converters.cc'
source_filename = "../../content/common/fetch/fetch_request_type_converters.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.mojo::StructPtr.118" = type { %"class.std::__1::unique_ptr.119" }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::mojom::FetchAPIRequest"* }
%"class.blink::mojom::FetchAPIRequest" = type { i32, i8, i32, i32, %class.GURL, %"class.std::__1::basic_string", %"class.base::flat_map", %"class.mojo::StructPtr.129", %class.scoped_refptr, %"class.mojo::StructPtr.137", i32, i32, i32, %"class.absl::optional.41", i32, %"class.absl::optional.36", i8, i8, i8, %"class.absl::optional.41" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.122" }
%"class.std::__1::vector.122" = type { %"class.std::__1::__vector_base.123" }
%"class.std::__1::__vector_base.123" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.124" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::pair"* }
%"class.mojo::StructPtr.129" = type { %"class.std::__1::unique_ptr.130" }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::mojom::SerializedBlob"* }
%"class.blink::mojom::SerializedBlob" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i64, %"class.mojo::PendingRemote.133" }
%"class.mojo::PendingRemote.133" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr = type { %"class.network::ResourceRequestBody"* }
%"class.network::ResourceRequestBody" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.std::__1::vector.16", i64, i8, i8, [6 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"class.network::DataElement"*, %"class.network::DataElement"*, %"class.std::__1::__compressed_pair.31" }
%"class.network::DataElement" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.18" }
%"union.absl::variant_internal::DestructibleUnionImpl.18" = type { %"union.absl::variant_internal::DestructibleUnionImpl.26" }
%"union.absl::variant_internal::DestructibleUnionImpl.26" = type { %"union.absl::variant_internal::DestructibleUnionImpl.27" }
%"union.absl::variant_internal::DestructibleUnionImpl.27" = type { %"union.absl::variant_internal::DestructibleUnionImpl.29" }
%"union.absl::variant_internal::DestructibleUnionImpl.29" = type { %"class.network::DataElementFile" }
%"class.network::DataElementFile" = type { %"class.base::FilePath", i64, i64, %"class.base::Time" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.network::DataElement"* }
%"class.mojo::StructPtr.137" = type { %"class.std::__1::unique_ptr.138" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::mojom::Referrer"* }
%"class.blink::mojom::Referrer" = type <{ %class.GURL, i32, [4 x i8] }>
%"class.absl::optional.36" = type { %"class.absl::optional_internal::optional_data.37" }
%"class.absl::optional_internal::optional_data.37" = type { %"class.absl::optional_internal::optional_data_base.38" }
%"class.absl::optional_internal::optional_data_base.38" = type { %"class.absl::optional_internal::optional_data_dtor_base.39" }
%"class.absl::optional_internal::optional_data_dtor_base.39" = type { i8, %union.anon.40 }
%union.anon.40 = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.41" = type { %"class.absl::optional_internal::optional_data.42" }
%"class.absl::optional_internal::optional_data.42" = type { %"class.absl::optional_internal::optional_data_base.43" }
%"class.absl::optional_internal::optional_data_base.43" = type { %"class.absl::optional_internal::optional_data_dtor_base.44" }
%"class.absl::optional_internal::optional_data_dtor_base.44" = type { i8, %union.anon.45 }
%union.anon.45 = type { %"class.std::__1::basic_string" }
%"struct.network::ResourceRequest" = type { %"class.std::__1::basic_string", %class.GURL, %"class.net::SiteForCookies", i8, %"class.absl::optional.5", %"class.absl::optional.5", %class.GURL, i32, %"class.net::HttpRequestHeaders", %"class.net::HttpRequestHeaders", i32, i32, i32, i8, i8, i32, i8, i8, i8, i32, i32, i32, %"class.std::__1::basic_string", i32, %class.scoped_refptr, i8, i8, i8, i8, i8, i8, i32, i8, i32, i8, i8, %"class.absl::optional.36", %"class.net::HttpRequestHeaders", %"class.net::HttpRequestHeaders", %"class.absl::optional.36", %"class.absl::optional.41", %"class.absl::optional.41", i8, i8, i8, i8, %"class.absl::optional.36", %"class.absl::optional.46", %"class.network::OptionalTrustTokenParams", %"class.absl::optional.100", %"class.absl::optional.106" }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.absl::optional.5" = type { %"class.absl::optional_internal::optional_data.6" }
%"class.absl::optional_internal::optional_data.6" = type { %"class.absl::optional_internal::optional_data_base.7" }
%"class.absl::optional_internal::optional_data_base.7" = type { %"class.absl::optional_internal::optional_data_dtor_base.8" }
%"class.absl::optional_internal::optional_data_dtor_base.8" = type { i8, %union.anon.9 }
%union.anon.9 = type { %"class.url::Origin" }
%"class.net::HttpRequestHeaders" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"class.std::__1::__compressed_pair.10" }
%"struct.net::HttpRequestHeaders::HeaderKeyValuePair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* }
%"class.absl::optional.46" = type { %"class.absl::optional_internal::optional_data.47" }
%"class.absl::optional_internal::optional_data.47" = type { %"class.absl::optional_internal::optional_data_base.48" }
%"class.absl::optional_internal::optional_data_base.48" = type { %"class.absl::optional_internal::optional_data_dtor_base.49" }
%"class.absl::optional_internal::optional_data_dtor_base.49" = type { i8, %union.anon.50 }
%union.anon.50 = type { %"struct.network::ResourceRequest::TrustedParams" }
%"struct.network::ResourceRequest::TrustedParams" = type { %"class.net::IsolationInfo", i8, i8, %"class.mojo::PendingRemote.69", %"class.mojo::PendingRemote.70", %"class.mojo::PendingRemote.71", %"class.mojo::StructPtr", %"class.mojo::PendingRemote.78" }
%"class.net::IsolationInfo" = type { i32, %"class.absl::optional.5", %"class.absl::optional.5", %"class.net::NetworkIsolationKey", %"class.net::SiteForCookies", i8, %"class.absl::optional.56" }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional.51", %"class.absl::optional.51" }
%"class.absl::optional.51" = type { %"class.absl::optional_internal::optional_data.52" }
%"class.absl::optional_internal::optional_data.52" = type { %"class.absl::optional_internal::optional_data_base.53" }
%"class.absl::optional_internal::optional_data_base.53" = type { %"class.absl::optional_internal::optional_data_dtor_base.54" }
%"class.absl::optional_internal::optional_data_dtor_base.54" = type { i8, %union.anon.55 }
%union.anon.55 = type { %"class.net::SchemefulSite" }
%"class.absl::optional.56" = type { %"class.absl::optional_internal::optional_data.57" }
%"class.absl::optional_internal::optional_data.57" = type { %"class.absl::optional_internal::optional_data_base.58" }
%"class.absl::optional_internal::optional_data_base.58" = type { %"class.absl::optional_internal::optional_data_dtor_base.59" }
%"class.absl::optional_internal::optional_data_dtor_base.59" = type { i8, %union.anon.60 }
%union.anon.60 = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { i64 }
%"class.mojo::PendingRemote.69" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingRemote.70" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingRemote.71" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.72" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.network::mojom::ClientSecurityState"* }
%"class.network::mojom::ClientSecurityState" = type <{ %"struct.network::CrossOriginEmbedderPolicy", i8, [3 x i8], i32, i32, [4 x i8] }>
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.41", i32, %"class.absl::optional.41" }
%"class.mojo::PendingRemote.78" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.network::OptionalTrustTokenParams" = type { %"class.mojo::StructPtr.79" }
%"class.mojo::StructPtr.79" = type { %"class.std::__1::unique_ptr.80" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.network::mojom::TrustTokenParams"* }
%"class.network::mojom::TrustTokenParams" = type { i32, i32, i32, i8, %"class.std::__1::vector.83", %"class.std::__1::vector.90", %"class.absl::optional.41" }
%"class.std::__1::vector.83" = type { %"class.std::__1::__vector_base.84" }
%"class.std::__1::__vector_base.84" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.url::Origin"* }
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.std::__1::basic_string"* }
%"class.absl::optional.100" = type { %"class.absl::optional_internal::optional_data.101" }
%"class.absl::optional_internal::optional_data.101" = type { %"class.absl::optional_internal::optional_data_base.102" }
%"class.absl::optional_internal::optional_data_base.102" = type { %"class.absl::optional_internal::optional_data_dtor_base.103" }
%"class.absl::optional_internal::optional_data_dtor_base.103" = type { i8, [7 x i8], %union.anon.104 }
%union.anon.104 = type { %"struct.network::ResourceRequest::WebBundleTokenParams" }
%"struct.network::ResourceRequest::WebBundleTokenParams" = type <{ %class.GURL, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.105", i32, [4 x i8] }>
%"class.mojo::PendingRemote.105" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.absl::optional.106" = type { %"class.absl::optional_internal::optional_data.107" }
%"class.absl::optional_internal::optional_data.107" = type { %"class.absl::optional_internal::optional_data_base.108" }
%"class.absl::optional_internal::optional_data_base.108" = type { %"class.absl::optional_internal::optional_data_dtor_base.109" }
%"class.absl::optional_internal::optional_data_dtor_base.109" = type { i8, %union.anon.110 }
%union.anon.110 = type { %"class.std::__1::vector.111" }
%"class.std::__1::vector.111" = type { %"class.std::__1::__vector_base.112" }
%"class.std::__1::__vector_base.112" = type { i32*, i32*, %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { i32* }
%"class.net::HttpRequestHeaders::Iterator" = type { i8, %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter" }
%"class.std::__1::__wrap_iter" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.125", %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.std::__1::allocator.127"* }
%"class.std::__1::allocator.127" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN4base8internal9flat_treeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS0_8GetFirstEN5blink29FetchAPIRequestHeadersCompareENS2_6vectorINS2_4pairIS8_S8_EENS6_ISE_EEEEE16emplace_key_argsIS8_JSE_EEENSD_INS2_11__wrap_iterIPSE_EEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16vectorINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS5_IS8_EEE7emplaceIJS8_EEENS_11__wrap_iterIPS8_EENSC_IPKS8_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EERNS5_IS8_EEE12emplace_backIJS8_EEEvDpOT_ = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo13TypeConverterINS_9StructPtrIN5blink5mojom15FetchAPIRequestEEEN7network15ResourceRequestEE7ConvertERKS7_(%"class.mojo::StructPtr.118"* noalias nocapture sret, %"struct.network::ResourceRequest"* dereferenceable(1640)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.net::HttpRequestHeaders::Iterator", align 8
  %4 = alloca %"struct.std::__1::pair", align 8
  %5 = getelementptr inbounds %"class.mojo::StructPtr.118", %"class.mojo::StructPtr.118"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call i8* @_Znwm(i64 328) #8, !noalias !2
  %7 = bitcast i8* %6 to %"class.blink::mojom::FetchAPIRequest"*
  tail call void @_ZN5blink5mojom15FetchAPIRequestC1Ev(%"class.blink::mojom::FetchAPIRequest"* nonnull %7) #9, !noalias !2
  %8 = ptrtoint i8* %6 to i64
  %9 = bitcast %"class.mojo::StructPtr.118"* %0 to i64*
  store i64 %8, i64* %9, align 8, !alias.scope !2
  %10 = getelementptr inbounds %"struct.network::ResourceRequest", %"struct.network::ResourceRequest"* %1, i64 0, i32 1
  %11 = getelementptr inbounds i8, i8* %6, i64 16
  %12 = bitcast i8* %11 to %class.GURL*
  %13 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %12, %class.GURL* dereferenceable(120) %10) #9
  %14 = getelementptr inbounds %"struct.network::ResourceRequest", %"struct.network::ResourceRequest"* %1, i64 0, i32 0
  %15 = getelementptr inbounds i8, i8* %6, i64 136
  %16 = bitcast i8* %15 to %"class.std::__1::basic_string"*
  %17 = icmp eq %"class.std::__1::basic_string"* %14, %16
  br i1 %17, label %45, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds i8, i8* %6, i64 159
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = bitcast %"struct.network::ResourceRequest"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %21, label %35, label %26

26:                                               ; preds = %18
  br i1 %25, label %29, label %27

27:                                               ; preds = %26
  %28 = bitcast %"struct.network::ResourceRequest"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %28, i64 24, i1 false) #9
  br label %45

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"struct.network::ResourceRequest", %"struct.network::ResourceRequest"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"struct.network::ResourceRequest", %"struct.network::ResourceRequest"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %16, i8* %31, i64 %33) #9
  br label %45

35:                                               ; preds = %18
  %36 = getelementptr inbounds %"struct.network::ResourceRequest", %"struct.network::ResourceRequest"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"struct.network::ResourceRequest", %"struct.network::ResourceRequest"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"struct.network::ResourceRequest"* %1 to i8*
  %41 = zext i8 %24 to i64
  %42 = select i1 %25, i8* %37, i8* %40
  %43 = select i1 %25, i64 %39, i64 %41
  %44 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %16, i8* %42, i64 %43) #9
  br label %45

45:                                               ; preds = %2, %27, %29, %35
  %46 = getelementptr inbounds %"struct.network::ResourceRequest", %"struct.network::ResourceRequest"* %1, i64 0, i32 8
  %47 = getelementptr inbounds %"class.net::HttpRequestHeaders", %"class.net::HttpRequestHeaders"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"** %47, align 8
  %49 = getelementptr inbounds %"struct.network::ResourceRequest", %"struct.network::ResourceRequest"* %1, i64 0, i32 8, i32 0, i32 0, i32 1
  %50 = load %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"** %49, align 8
  %51 = icmp eq %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %48, %50
  br i1 %51, label %109, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.net::HttpRequestHeaders::Iterator", %"class.net::HttpRequestHeaders::Iterator"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 24, i1 false)
  call void @_ZN3net18HttpRequestHeaders8IteratorC1ERKS0_(%"class.net::HttpRequestHeaders::Iterator"* nonnull %3, %"class.net::HttpRequestHeaders"* dereferenceable(24) %46) #9
  %54 = call zeroext i1 @_ZN3net18HttpRequestHeaders8Iterator7GetNextEv(%"class.net::HttpRequestHeaders::Iterator"* nonnull %3) #9
  br i1 %54, label %55, label %69

55:                                               ; preds = %52
  %56 = getelementptr inbounds i8, i8* %6, i64 160
  %57 = bitcast i8* %56 to %"class.base::internal::flat_tree"*
  %58 = bitcast %"struct.std::__1::pair"* %4 to i8*
  %59 = getelementptr inbounds %"class.net::HttpRequestHeaders::Iterator", %"class.net::HttpRequestHeaders::Iterator"* %3, i64 0, i32 1, i32 0
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 0
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1
  %62 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %63 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = bitcast %"struct.std::__1::pair"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %70

69:                                               ; preds = %107, %52
  call void @_ZN3net18HttpRequestHeaders8IteratorD1Ev(%"class.net::HttpRequestHeaders::Iterator"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #9
  br label %109

70:                                               ; preds = %55, %107
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %58) #9
  %71 = load %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"** %59, align 8
  %72 = getelementptr inbounds %"struct.net::HttpRequestHeaders::HeaderKeyValuePair", %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %71, i64 0, i32 1
  %73 = bitcast %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1, !noalias !5
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %79, label %77

77:                                               ; preds = %70
  %78 = bitcast %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %58, i8* align 8 %78, i64 24, i1 false) #9
  br label %84

79:                                               ; preds = %70
  %80 = getelementptr inbounds %"struct.net::HttpRequestHeaders::HeaderKeyValuePair", %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8, !noalias !5
  %82 = getelementptr inbounds %"struct.net::HttpRequestHeaders::HeaderKeyValuePair", %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %83 = load i64, i64* %82, align 8, !noalias !5
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %60, i8* %81, i64 %83) #9
  br label %84

84:                                               ; preds = %79, %77
  %85 = bitcast %"class.std::__1::basic_string"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1, !noalias !5
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %91, label %89

89:                                               ; preds = %84
  %90 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %90, i64 24, i1 false) #9
  br label %96

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8, !noalias !5
  %94 = getelementptr inbounds %"struct.net::HttpRequestHeaders::HeaderKeyValuePair", %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %71, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = load i64, i64* %94, align 8, !noalias !5
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %61, i8* %93, i64 %95) #9
  br label %96

96:                                               ; preds = %89, %91
  %97 = call { %"struct.std::__1::pair"*, i8 } @_ZN4base8internal9flat_treeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS0_8GetFirstEN5blink29FetchAPIRequestHeadersCompareENS2_6vectorINS2_4pairIS8_S8_EENS6_ISE_EEEEE16emplace_key_argsIS8_JSE_EEENSD_INS2_11__wrap_iterIPSE_EEbEERKT_DpOT0_(%"class.base::internal::flat_tree"* %57, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %60, %"struct.std::__1::pair"* nonnull dereferenceable(48) %4) #9
  %98 = load i8, i8* %64, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %96
  %101 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %101) #8
  br label %102

102:                                              ; preds = %100, %96
  %103 = load i8, i8* %67, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %102
  %106 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %106) #8
  br label %107

107:                                              ; preds = %102, %105
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %58) #9
  %108 = call zeroext i1 @_ZN3net18HttpRequestHeaders8Iterator7GetNextEv(%"class.net::HttpRequestHeaders::Iterator"* nonnull %3) #9
  br i1 %108, label %70, label %69

109:                                              ; preds = %69, %45
  %110 = getelementptr inbounds %"struct.network::ResourceRequest", %"struct.network::ResourceRequest"* %1, i64 0, i32 24, i32 0
  %111 = load %"class.network::ResourceRequestBody"*, %"class.network::ResourceRequestBody"** %110, align 8
  %112 = icmp eq %"class.network::ResourceRequestBody"* %111, null
  br i1 %112, label %128, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.network::ResourceRequestBody", %"class.network::ResourceRequestBody"* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = atomicrmw add i32* %114, i32 1 monotonic
  %116 = getelementptr inbounds i8, i8* %6, i64 192
  %117 = ptrtoint %"class.network::ResourceRequestBody"* %111 to i64
  %118 = bitcast i8* %116 to i64*
  %119 = bitcast i8* %116 to %"class.network::ResourceRequestBody"**
  %120 = load %"class.network::ResourceRequestBody"*, %"class.network::ResourceRequestBody"** %119, align 8
  store i64 %117, i64* %118, align 8
  %121 = icmp eq %"class.network::ResourceRequestBody"* %120, null
  br i1 %121, label %128, label %122

122:                                              ; preds = %113
  %123 = getelementptr inbounds %"class.network::ResourceRequestBody", %"class.network::ResourceRequestBody"* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = atomicrmw sub i32* %123, i32 1 acq_rel
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %126, label %128

126:                                              ; preds = %122
  call void @_ZN7network19ResourceRequestBodyD1Ev(%"class.network::ResourceRequestBody"* nonnull %120) #9
  %127 = bitcast %"class.network::ResourceRequestBody"* %120 to i8*
  call void @_ZdlPv(i8* %127) #8
  br label %128

128:                                              ; preds = %109, %126, %122, %113
  %129 = getelementptr inbounds %"struct.network::ResourceRequest", %"struct.network::ResourceRequest"* %1, i64 0, i32 6
  %130 = getelementptr inbounds %"struct.network::ResourceRequest", %"struct.network::ResourceRequest"* %1, i64 0, i32 7
  %131 = load i32, i32* %130, align 8
  %132 = call i32 @_ZN5blink13ReferrerUtils23NetToMojoReferrerPolicyEN3net14ReferrerPolicyE(i32 %131) #9
  %133 = call i8* @_Znwm(i64 128) #8, !noalias !8
  %134 = bitcast i8* %133 to %"class.blink::mojom::Referrer"*
  call void @_ZN5blink5mojom8ReferrerC1ERK4GURLN7network5mojom14ReferrerPolicyE(%"class.blink::mojom::Referrer"* nonnull %134, %class.GURL* dereferenceable(120) %129, i32 %132) #9, !noalias !8
  %135 = ptrtoint i8* %133 to i64
  %136 = load %"class.blink::mojom::FetchAPIRequest"*, %"class.blink::mojom::FetchAPIRequest"** %5, align 8
  %137 = getelementptr inbounds %"class.blink::mojom::FetchAPIRequest", %"class.blink::mojom::FetchAPIRequest"* %136, i64 0, i32 9
  %138 = getelementptr inbounds %"class.mojo::StructPtr.137", %"class.mojo::StructPtr.137"* %137, i64 0, i32 0, i32 0, i32 0, i32 0
  %139 = load %"class.blink::mojom::Referrer"*, %"class.blink::mojom::Referrer"** %138, align 8
  store %"class.blink::mojom::Referrer"* null, %"class.blink::mojom::Referrer"** %138, align 8
  %140 = icmp eq %"class.blink::mojom::Referrer"* %139, null
  br i1 %140, label %141, label %143

141:                                              ; preds = %128
  %142 = bitcast %"class.mojo::StructPtr.137"* %137 to i64*
  store i64 %135, i64* %142, align 8
  br label %150

143:                                              ; preds = %128
  call void @_ZN5blink5mojom8ReferrerD1Ev(%"class.blink::mojom::Referrer"* nonnull %139) #9
  %144 = bitcast %"class.blink::mojom::Referrer"* %139 to i8*
  call void @_ZdlPv(i8* %144) #8
  %145 = bitcast %"class.mojo::StructPtr.137"* %137 to i64*
  %146 = load %"class.blink::mojom::Referrer"*, %"class.blink::mojom::Referrer"** %138, align 8
  store i64 %135, i64* %145, align 8
  %147 = icmp eq %"class.blink::mojom::Referrer"* %146, null
  br i1 %147, label %150, label %148

148:                                              ; preds = %143
  call void @_ZN5blink5mojom8ReferrerD1Ev(%"class.blink::mojom::Referrer"* nonnull %146) #9
  %149 = bitcast %"class.blink::mojom::Referrer"* %146 to i8*
  call void @_ZdlPv(i8* %149) #8
  br label %150

150:                                              ; preds = %141, %143, %148
  %151 = getelementptr inbounds %"struct.network::ResourceRequest", %"struct.network::ResourceRequest"* %1, i64 0, i32 19
  %152 = load i32, i32* %151, align 8
  %153 = getelementptr inbounds %"class.blink::mojom::FetchAPIRequest", %"class.blink::mojom::FetchAPIRequest"* %136, i64 0, i32 0
  store i32 %152, i32* %153, align 8
  %154 = getelementptr inbounds %"struct.network::ResourceRequest", %"struct.network::ResourceRequest"* %1, i64 0, i32 23
  %155 = load i32, i32* %154, align 8
  %156 = call zeroext i1 @_ZN7content18ServiceWorkerUtils24IsMainRequestDestinationEN7network5mojom18RequestDestinationE(i32 %155) #9
  %157 = getelementptr inbounds %"class.blink::mojom::FetchAPIRequest", %"class.blink::mojom::FetchAPIRequest"* %136, i64 0, i32 1
  %158 = zext i1 %156 to i8
  store i8 %158, i8* %157, align 4
  %159 = getelementptr inbounds %"struct.network::ResourceRequest", %"struct.network::ResourceRequest"* %1, i64 0, i32 20
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds %"class.blink::mojom::FetchAPIRequest", %"class.blink::mojom::FetchAPIRequest"* %136, i64 0, i32 10
  store i32 %160, i32* %161, align 8
  %162 = getelementptr inbounds %"struct.network::ResourceRequest", %"struct.network::ResourceRequest"* %1, i64 0, i32 10
  %163 = load i32, i32* %162, align 8
  %164 = call i32 @_ZN7content18ServiceWorkerUtils25GetCacheModeFromLoadFlagsEi(i32 %163) #9
  %165 = getelementptr inbounds %"class.blink::mojom::FetchAPIRequest", %"class.blink::mojom::FetchAPIRequest"* %136, i64 0, i32 11
  store i32 %164, i32* %165, align 4
  %166 = getelementptr inbounds %"struct.network::ResourceRequest", %"struct.network::ResourceRequest"* %1, i64 0, i32 21
  %167 = load i32, i32* %166, align 8
  %168 = getelementptr inbounds %"class.blink::mojom::FetchAPIRequest", %"class.blink::mojom::FetchAPIRequest"* %136, i64 0, i32 12
  store i32 %167, i32* %168, align 8
  %169 = load i32, i32* %154, align 8
  %170 = getelementptr inbounds %"class.blink::mojom::FetchAPIRequest", %"class.blink::mojom::FetchAPIRequest"* %136, i64 0, i32 2
  store i32 %169, i32* %170, align 8
  %171 = getelementptr inbounds %"struct.network::ResourceRequest", %"struct.network::ResourceRequest"* %1, i64 0, i32 31
  %172 = load i32, i32* %171, align 8
  %173 = call zeroext i1 @_ZN2ui24PageTransitionCoreTypeIsENS_14PageTransitionES0_(i32 %172, i32 8) #9
  %174 = getelementptr inbounds %"class.blink::mojom::FetchAPIRequest", %"class.blink::mojom::FetchAPIRequest"* %136, i64 0, i32 17
  %175 = zext i1 %173 to i8
  store i8 %175, i8* %174, align 1
  %176 = getelementptr inbounds %"struct.network::ResourceRequest", %"struct.network::ResourceRequest"* %1, i64 0, i32 22
  %177 = getelementptr inbounds %"class.blink::mojom::FetchAPIRequest", %"class.blink::mojom::FetchAPIRequest"* %136, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %178 = load i8, i8* %177, align 8, !range !11
  %179 = icmp eq i8 %178, 0
  %180 = getelementptr inbounds %"class.blink::mojom::FetchAPIRequest", %"class.blink::mojom::FetchAPIRequest"* %136, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %179, label %212, label %181

181:                                              ; preds = %150
  %182 = icmp eq %"class.std::__1::basic_string"* %180, %176
  br i1 %182, label %226, label %183

183:                                              ; preds = %181
  %184 = bitcast %"class.std::__1::basic_string"* %180 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %185 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %184, i64 0, i32 1, i32 0
  %186 = load i8, i8* %185, align 1
  %187 = icmp slt i8 %186, 0
  %188 = bitcast %"class.std::__1::basic_string"* %176 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %189 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %188, i64 0, i32 1, i32 0
  %190 = load i8, i8* %189, align 1
  %191 = icmp slt i8 %190, 0
  br i1 %187, label %202, label %192

192:                                              ; preds = %183
  br i1 %191, label %196, label %193

193:                                              ; preds = %192
  %194 = bitcast %"class.std::__1::basic_string"* %180 to i8*
  %195 = bitcast %"class.std::__1::basic_string"* %176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %194, i8* align 8 %195, i64 24, i1 false) #9
  br label %226

196:                                              ; preds = %192
  %197 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %176, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load i8*, i8** %197, align 8
  %199 = getelementptr inbounds %"struct.network::ResourceRequest", %"struct.network::ResourceRequest"* %1, i64 0, i32 22, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %200 = load i64, i64* %199, align 8
  %201 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %180, i8* %198, i64 %200) #9
  br label %226

202:                                              ; preds = %183
  %203 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %176, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load i8*, i8** %203, align 8
  %205 = getelementptr inbounds %"struct.network::ResourceRequest", %"struct.network::ResourceRequest"* %1, i64 0, i32 22, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %206 = load i64, i64* %205, align 8
  %207 = bitcast %"class.std::__1::basic_string"* %176 to i8*
  %208 = zext i8 %190 to i64
  %209 = select i1 %191, i8* %204, i8* %207
  %210 = select i1 %191, i64 %206, i64 %208
  %211 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %180, i8* %209, i64 %210) #9
  br label %226

212:                                              ; preds = %150
  %213 = bitcast %"class.std::__1::basic_string"* %176 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %214 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %213, i64 0, i32 1, i32 0
  %215 = load i8, i8* %214, align 1
  %216 = icmp slt i8 %215, 0
  br i1 %216, label %220, label %217

217:                                              ; preds = %212
  %218 = bitcast %"class.std::__1::basic_string"* %180 to i8*
  %219 = bitcast %"class.std::__1::basic_string"* %176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 24, i1 false) #9
  br label %225

220:                                              ; preds = %212
  %221 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %176, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = load i8*, i8** %221, align 8
  %223 = getelementptr inbounds %"struct.network::ResourceRequest", %"struct.network::ResourceRequest"* %1, i64 0, i32 22, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %224 = load i64, i64* %223, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %180, i8* %222, i64 %224) #9
  br label %225

225:                                              ; preds = %220, %217
  store i8 1, i8* %177, align 8
  br label %226

226:                                              ; preds = %181, %193, %196, %202, %225
  %227 = getelementptr inbounds %"struct.network::ResourceRequest", %"struct.network::ResourceRequest"* %1, i64 0, i32 12
  %228 = load i32, i32* %227, align 8
  %229 = getelementptr inbounds %"class.blink::mojom::FetchAPIRequest", %"class.blink::mojom::FetchAPIRequest"* %136, i64 0, i32 14
  store i32 %228, i32* %229, align 8
  %230 = getelementptr inbounds %"class.blink::mojom::FetchAPIRequest", %"class.blink::mojom::FetchAPIRequest"* %136, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %231 = getelementptr inbounds %"struct.network::ResourceRequest", %"struct.network::ResourceRequest"* %1, i64 0, i32 39, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %230, i8* align 8 %231, i64 24, i1 false)
  %232 = getelementptr inbounds %"struct.network::ResourceRequest", %"struct.network::ResourceRequest"* %1, i64 0, i32 25
  %233 = load i8, i8* %232, align 8, !range !11
  %234 = getelementptr inbounds %"class.blink::mojom::FetchAPIRequest", %"class.blink::mojom::FetchAPIRequest"* %136, i64 0, i32 16
  store i8 %233, i8* %234, align 8
  %235 = load i32, i32* %171, align 8
  %236 = getelementptr inbounds %"class.blink::mojom::FetchAPIRequest", %"class.blink::mojom::FetchAPIRequest"* %136, i64 0, i32 18
  %237 = lshr i32 %235, 24
  %238 = trunc i32 %237 to i8
  %239 = and i8 %238, 1
  store i8 %239, i8* %236, align 2
  %240 = getelementptr inbounds %"class.blink::mojom::FetchAPIRequest", %"class.blink::mojom::FetchAPIRequest"* %136, i64 0, i32 19
  %241 = getelementptr inbounds %"struct.network::ResourceRequest", %"struct.network::ResourceRequest"* %1, i64 0, i32 41, i32 0, i32 0, i32 0, i32 0
  %242 = load i8, i8* %241, align 8, !range !11
  %243 = icmp eq i8 %242, 0
  br i1 %243, label %295, label %244

244:                                              ; preds = %226
  %245 = getelementptr inbounds %"struct.network::ResourceRequest", %"struct.network::ResourceRequest"* %1, i64 0, i32 41, i32 0, i32 0, i32 0, i32 1, i32 0
  %246 = getelementptr inbounds %"class.absl::optional.41", %"class.absl::optional.41"* %240, i64 0, i32 0, i32 0, i32 0, i32 0
  %247 = load i8, i8* %246, align 8, !range !11
  %248 = icmp eq i8 %247, 0
  %249 = getelementptr inbounds %"class.blink::mojom::FetchAPIRequest", %"class.blink::mojom::FetchAPIRequest"* %136, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %248, label %281, label %250

250:                                              ; preds = %244
  %251 = icmp eq %"class.std::__1::basic_string"* %249, %245
  br i1 %251, label %309, label %252

252:                                              ; preds = %250
  %253 = bitcast %"class.std::__1::basic_string"* %249 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %254 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %253, i64 0, i32 1, i32 0
  %255 = load i8, i8* %254, align 1
  %256 = icmp slt i8 %255, 0
  %257 = bitcast %"class.std::__1::basic_string"* %245 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %258 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %257, i64 0, i32 1, i32 0
  %259 = load i8, i8* %258, align 1
  %260 = icmp slt i8 %259, 0
  br i1 %256, label %271, label %261

261:                                              ; preds = %252
  br i1 %260, label %265, label %262

262:                                              ; preds = %261
  %263 = bitcast %"class.std::__1::basic_string"* %249 to i8*
  %264 = bitcast %"class.std::__1::basic_string"* %245 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %263, i8* align 8 %264, i64 24, i1 false) #9
  br label %309

265:                                              ; preds = %261
  %266 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %245, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = load i8*, i8** %266, align 8
  %268 = getelementptr inbounds %"struct.network::ResourceRequest", %"struct.network::ResourceRequest"* %1, i64 0, i32 41, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %269 = load i64, i64* %268, align 8
  %270 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %249, i8* %267, i64 %269) #9
  br label %309

271:                                              ; preds = %252
  %272 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %245, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %273 = load i8*, i8** %272, align 8
  %274 = getelementptr inbounds %"struct.network::ResourceRequest", %"struct.network::ResourceRequest"* %1, i64 0, i32 41, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %275 = load i64, i64* %274, align 8
  %276 = bitcast %"class.std::__1::basic_string"* %245 to i8*
  %277 = zext i8 %259 to i64
  %278 = select i1 %260, i8* %273, i8* %276
  %279 = select i1 %260, i64 %275, i64 %277
  %280 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %249, i8* %278, i64 %279) #9
  br label %309

281:                                              ; preds = %244
  %282 = bitcast %"class.std::__1::basic_string"* %245 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %283 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %282, i64 0, i32 1, i32 0
  %284 = load i8, i8* %283, align 1
  %285 = icmp slt i8 %284, 0
  br i1 %285, label %289, label %286

286:                                              ; preds = %281
  %287 = bitcast %"class.std::__1::basic_string"* %249 to i8*
  %288 = bitcast %"class.std::__1::basic_string"* %245 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %287, i8* align 8 %288, i64 24, i1 false) #9
  br label %294

289:                                              ; preds = %281
  %290 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %245, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %291 = load i8*, i8** %290, align 8
  %292 = getelementptr inbounds %"struct.network::ResourceRequest", %"struct.network::ResourceRequest"* %1, i64 0, i32 41, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %293 = load i64, i64* %292, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %249, i8* %291, i64 %293) #9
  br label %294

294:                                              ; preds = %289, %286
  store i8 1, i8* %246, align 8
  br label %309

295:                                              ; preds = %226
  %296 = getelementptr inbounds %"class.absl::optional.41", %"class.absl::optional.41"* %240, i64 0, i32 0, i32 0, i32 0, i32 0
  %297 = load i8, i8* %296, align 8, !range !11
  %298 = icmp eq i8 %297, 0
  br i1 %298, label %309, label %299

299:                                              ; preds = %295
  %300 = getelementptr inbounds %"class.blink::mojom::FetchAPIRequest", %"class.blink::mojom::FetchAPIRequest"* %136, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1, i32 0
  %301 = bitcast %"class.std::__1::basic_string"* %300 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %302 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %301, i64 0, i32 1, i32 0
  %303 = load i8, i8* %302, align 1
  %304 = icmp slt i8 %303, 0
  br i1 %304, label %305, label %308

305:                                              ; preds = %299
  %306 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %300, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %307 = load i8*, i8** %306, align 8
  call void @_ZdlPv(i8* %307) #8
  br label %308

308:                                              ; preds = %305, %299
  store i8 0, i8* %296, align 8
  br label %309

309:                                              ; preds = %294, %271, %265, %262, %250, %295, %308
  ret void
}

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN3net18HttpRequestHeaders8IteratorC1ERKS0_(%"class.net::HttpRequestHeaders::Iterator"*, %"class.net::HttpRequestHeaders"* dereferenceable(24)) unnamed_addr #1

declare zeroext i1 @_ZN3net18HttpRequestHeaders8Iterator7GetNextEv(%"class.net::HttpRequestHeaders::Iterator"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @_ZN3net18HttpRequestHeaders8IteratorD1Ev(%"class.net::HttpRequestHeaders::Iterator"*) unnamed_addr #3

declare i32 @_ZN5blink13ReferrerUtils23NetToMojoReferrerPolicyEN3net14ReferrerPolicyE(i32) local_unnamed_addr #1

declare zeroext i1 @_ZN7content18ServiceWorkerUtils24IsMainRequestDestinationEN7network5mojom18RequestDestinationE(i32) local_unnamed_addr #1

declare i32 @_ZN7content18ServiceWorkerUtils25GetCacheModeFromLoadFlagsEi(i32) local_unnamed_addr #1

declare zeroext i1 @_ZN2ui24PageTransitionCoreTypeIsENS_14PageTransitionES0_(i32, i32) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink5mojom8ReferrerD1Ev(%"class.blink::mojom::Referrer"*) unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN5blink5mojom15FetchAPIRequestC1Ev(%"class.blink::mojom::FetchAPIRequest"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::pair"*, i8 } @_ZN4base8internal9flat_treeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS0_8GetFirstEN5blink29FetchAPIRequestHeadersCompareENS2_6vectorINS2_4pairIS8_S8_EENS6_ISE_EEEEE16emplace_key_argsIS8_JSE_EEENSD_INS2_11__wrap_iterIPSE_EEbEERKT_DpOT0_(%"class.base::internal::flat_tree"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::pair"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::pair"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint %"struct.std::__1::pair"* %5 to i64
  %10 = sub i64 %8, %9
  %11 = icmp eq i64 %10, 0
  %12 = inttoptr i64 %8 to %"struct.std::__1::pair"*
  br i1 %11, label %54, label %13

13:                                               ; preds = %3
  %14 = sdiv exact i64 %10, 48
  %15 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %20

20:                                               ; preds = %20, %13
  %21 = phi %"struct.std::__1::pair"* [ %5, %13 ], [ %50, %20 ]
  %22 = phi i64 [ %14, %13 ], [ %49, %20 ]
  %23 = lshr i64 %22, 1
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 %23
  %25 = bitcast %"struct.std::__1::pair"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = bitcast %"struct.std::__1::pair"* %24 to i8*
  %32 = select i1 %28, i8* %30, i8* %31
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 %23, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = zext i8 %27 to i64
  %36 = select i1 %28, i64 %34, i64 %35
  %37 = load i8, i8* %16, align 1
  %38 = icmp slt i8 %37, 0
  %39 = load i8*, i8** %17, align 8
  %40 = select i1 %38, i8* %39, i8* %18
  %41 = load i64, i64* %19, align 8
  %42 = zext i8 %37 to i64
  %43 = select i1 %38, i64 %41, i64 %42
  %44 = tail call i32 @_ZN4base27CompareCaseInsensitiveASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %32, i64 %36, i8* %40, i64 %43) #9
  %45 = icmp slt i32 %44, 0
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 1
  %47 = xor i64 %23, -1
  %48 = add i64 %22, %47
  %49 = select i1 %45, i64 %48, i64 %23
  %50 = select i1 %45, %"struct.std::__1::pair"* %46, %"struct.std::__1::pair"* %21
  %51 = icmp eq i64 %49, 0
  br i1 %51, label %52, label %20

52:                                               ; preds = %20
  %53 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  br label %54

54:                                               ; preds = %52, %3
  %55 = phi %"struct.std::__1::pair"* [ %12, %3 ], [ %53, %52 ]
  %56 = phi %"struct.std::__1::pair"* [ %5, %3 ], [ %50, %52 ]
  %57 = icmp eq %"struct.std::__1::pair"* %56, %55
  br i1 %57, label %85, label %58

58:                                               ; preds = %54
  %59 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %66 = select i1 %62, i8* %64, i8* %65
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = zext i8 %61 to i64
  %70 = select i1 %62, i64 %68, i64 %69
  %71 = bitcast %"struct.std::__1::pair"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  %75 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = bitcast %"struct.std::__1::pair"* %56 to i8*
  %78 = select i1 %74, i8* %76, i8* %77
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = zext i8 %73 to i64
  %82 = select i1 %74, i64 %80, i64 %81
  %83 = tail call i32 @_ZN4base27CompareCaseInsensitiveASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %66, i64 %70, i8* %78, i64 %82) #9
  %84 = icmp slt i32 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %54, %58
  %86 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0
  %87 = tail call %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS5_IS8_EEE7emplaceIJS8_EEENS_11__wrap_iterIPS8_EENSC_IPKS8_EEDpOT_(%"class.std::__1::vector.122"* %86, %"struct.std::__1::pair"* %56, %"struct.std::__1::pair"* dereferenceable(48) %2) #9
  br label %88

88:                                               ; preds = %58, %85
  %89 = phi %"struct.std::__1::pair"* [ %87, %85 ], [ %56, %58 ]
  %90 = phi i8 [ 1, %85 ], [ 0, %58 ]
  %91 = insertvalue { %"struct.std::__1::pair"*, i8 } undef, %"struct.std::__1::pair"* %89, 0
  %92 = insertvalue { %"struct.std::__1::pair"*, i8 } %91, i8 %90, 1
  ret { %"struct.std::__1::pair"*, i8 } %92
}

declare i32 @_ZN4base27CompareCaseInsensitiveASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8*, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS5_IS8_EEE7emplaceIJS8_EEENS_11__wrap_iterIPS8_EENSC_IPKS8_EEDpOT_(%"class.std::__1::vector.122"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca [15 x i8], align 8
  %5 = alloca [15 x i8], align 8
  %6 = alloca %"struct.std::__1::__split_buffer", align 8
  %7 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %0, i64 0, i32 0, i32 1
  %10 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %13 = icmp ult %"struct.std::__1::pair"* %10, %12
  %14 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  br i1 %13, label %15, label %132

15:                                               ; preds = %3
  %16 = icmp eq %"struct.std::__1::pair"* %10, %1
  br i1 %16, label %17, label %27

17:                                               ; preds = %15
  %18 = bitcast %"struct.std::__1::pair"* %1 to i8*
  %19 = bitcast %"struct.std::__1::pair"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #9
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %22 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %23 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #9
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %25 = ptrtoint %"struct.std::__1::pair"* %24 to i64
  %26 = bitcast %"struct.std::__1::pair"** %9 to i64*
  store i64 %25, i64* %26, align 8
  br label %272

27:                                               ; preds = %15
  %28 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %28)
  %29 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %29)
  %30 = bitcast %"struct.std::__1::pair"* %2 to i8*
  %31 = bitcast %"struct.std::__1::pair"* %2 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = bitcast i64* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 8 %34, i64 15, i1 false)
  %35 = getelementptr inbounds i8, i8* %30, i64 23
  %36 = load i8, i8* %35, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #9
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %38 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = bitcast i8** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = bitcast i64* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 8 %43, i64 15, i1 false)
  %44 = getelementptr inbounds i8, i8* %30, i64 47
  %45 = load i8, i8* %44, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #9
  %46 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %47 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %48 = ptrtoint %"struct.std::__1::pair"* %46 to i64
  %49 = ptrtoint %"struct.std::__1::pair"* %47 to i64
  %50 = sub i64 %48, %49
  %51 = sdiv exact i64 %50, 48
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 %51
  %53 = bitcast %"struct.std::__1::pair"** %9 to i64*
  %54 = icmp ult %"struct.std::__1::pair"* %52, %46
  br i1 %54, label %92, label %57

55:                                               ; preds = %92
  %56 = ptrtoint %"struct.std::__1::pair"* %102 to i64
  br label %57

57:                                               ; preds = %55, %27
  %58 = phi i64 [ %56, %55 ], [ %48, %27 ]
  store i64 %58, i64* %53, align 8
  %59 = icmp eq i64 %50, 0
  br i1 %59, label %104, label %60

60:                                               ; preds = %57, %86
  %61 = phi %"struct.std::__1::pair"* [ %64, %86 ], [ %46, %57 ]
  %62 = phi %"struct.std::__1::pair"* [ %63, %86 ], [ %52, %57 ]
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %62, i64 -1
  %64 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %61, i64 -1
  %65 = bitcast %"struct.std::__1::pair"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  tail call void @_ZdlPv(i8* %71) #8
  br label %72

72:                                               ; preds = %69, %60
  %73 = bitcast %"struct.std::__1::pair"* %64 to i8*
  %74 = bitcast %"struct.std::__1::pair"* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 24, i1 false) #9
  %75 = bitcast %"struct.std::__1::pair"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  store i8 0, i8* %76, align 1
  store i8 0, i8* %74, align 1
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %62, i64 -1, i32 1
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %61, i64 -1, i32 1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %72
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #8
  br label %86

86:                                               ; preds = %83, %72
  %87 = bitcast %"class.std::__1::basic_string"* %78 to i8*
  %88 = bitcast %"class.std::__1::basic_string"* %77 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 24, i1 false) #9
  %89 = bitcast %"class.std::__1::basic_string"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  store i8 0, i8* %90, align 1
  store i8 0, i8* %88, align 1
  %91 = icmp eq %"struct.std::__1::pair"* %63, %1
  br i1 %91, label %104, label %60

92:                                               ; preds = %27, %92
  %93 = phi %"struct.std::__1::pair"* [ %102, %92 ], [ %46, %27 ]
  %94 = phi %"struct.std::__1::pair"* [ %101, %92 ], [ %52, %27 ]
  %95 = bitcast %"struct.std::__1::pair"* %93 to i8*
  %96 = bitcast %"struct.std::__1::pair"* %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 24, i1 false) #9
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %93, i64 0, i32 1
  %98 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %94, i64 0, i32 1
  %99 = bitcast %"class.std::__1::basic_string"* %97 to i8*
  %100 = bitcast %"class.std::__1::basic_string"* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 24, i1 false) #9
  %101 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %94, i64 1
  %102 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %93, i64 1
  %103 = icmp ult %"struct.std::__1::pair"* %101, %46
  br i1 %103, label %92, label %55

104:                                              ; preds = %86, %57
  %105 = bitcast %"struct.std::__1::pair"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  %107 = load i8, i8* %106, align 1
  %108 = icmp slt i8 %107, 0
  br i1 %108, label %109, label %112

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load i8*, i8** %110, align 8
  tail call void @_ZdlPv(i8* %111) #8
  br label %112

112:                                              ; preds = %109, %104
  %113 = bitcast %"struct.std::__1::pair"* %1 to i64*
  store i64 %32, i64* %113, align 8
  %114 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %115 = bitcast i64* %114 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* nonnull align 8 %28, i64 15, i1 false)
  %116 = bitcast %"struct.std::__1::pair"* %1 to i8*
  %117 = getelementptr inbounds i8, i8* %116, i64 23
  store i8 %36, i8* %117, align 1
  %118 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %119 = bitcast %"class.std::__1::basic_string"* %118 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %119, i64 0, i32 1, i32 0
  %121 = load i8, i8* %120, align 1
  %122 = icmp slt i8 %121, 0
  br i1 %122, label %123, label %126

123:                                              ; preds = %112
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %118, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8
  tail call void @_ZdlPv(i8* %125) #8
  br label %126

126:                                              ; preds = %112, %123
  %127 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = bitcast i8** %127 to i64*
  store i64 %41, i64* %128, align 8
  %129 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %130 = bitcast i64* %129 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* nonnull align 8 %29, i64 15, i1 false)
  %131 = getelementptr inbounds i8, i8* %116, i64 47
  store i8 %45, i8* %131, align 1
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %28)
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %29)
  br label %272

132:                                              ; preds = %3
  %133 = ptrtoint %"struct.std::__1::pair"* %10 to i64
  %134 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %0, i64 0, i32 0, i32 2
  %135 = bitcast %"struct.std::__1::__split_buffer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %135) #9
  %136 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 0
  %137 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 1
  %138 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 2
  %139 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 3, i32 0, i32 0
  %140 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 3, i32 1, i32 0
  %141 = bitcast %"struct.std::__1::pair"** %9 to i64*
  %142 = bitcast %"class.std::__1::vector.122"* %0 to i64*
  %143 = bitcast %"struct.std::__1::__split_buffer"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %143, i8 -86, i64 40, i1 false)
  %144 = load i64, i64* %142, align 8
  %145 = sub i64 %133, %144
  %146 = sdiv exact i64 %145, 48
  %147 = add nsw i64 %146, 1
  %148 = icmp ugt i64 %147, 384307168202282325
  br i1 %148, label %149, label %151

149:                                              ; preds = %132
  %150 = bitcast %"class.std::__1::vector.122"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %150) #10
  unreachable

151:                                              ; preds = %132
  %152 = bitcast %"struct.std::__1::pair"** %11 to i64*
  %153 = sub i64 %14, %144
  %154 = sdiv exact i64 %153, 48
  %155 = icmp ult i64 %154, 192153584101141162
  br i1 %155, label %160, label %156

156:                                              ; preds = %151
  %157 = sub i64 %7, %144
  %158 = sdiv exact i64 %157, 48
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %139, align 8
  %159 = bitcast %"class.std::__1::allocator.127"** %140 to %"class.std::__1::__compressed_pair.124"**
  store %"class.std::__1::__compressed_pair.124"* %134, %"class.std::__1::__compressed_pair.124"** %159, align 8
  br label %168

160:                                              ; preds = %151
  %161 = shl nsw i64 %154, 1
  %162 = icmp ult i64 %161, %147
  %163 = select i1 %162, i64 %147, i64 %161
  %164 = sub i64 %7, %144
  %165 = sdiv exact i64 %164, 48
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %139, align 8
  %166 = bitcast %"class.std::__1::allocator.127"** %140 to %"class.std::__1::__compressed_pair.124"**
  store %"class.std::__1::__compressed_pair.124"* %134, %"class.std::__1::__compressed_pair.124"** %166, align 8
  %167 = icmp eq i64 %163, 0
  br i1 %167, label %174, label %168

168:                                              ; preds = %160, %156
  %169 = phi i64 [ %158, %156 ], [ %165, %160 ]
  %170 = phi i64 [ 384307168202282325, %156 ], [ %163, %160 ]
  %171 = mul i64 %170, 48
  %172 = tail call i8* @_Znwm(i64 %171) #8
  %173 = bitcast i8* %172 to %"struct.std::__1::pair"*
  br label %174

174:                                              ; preds = %160, %168
  %175 = phi i64 [ %169, %168 ], [ %165, %160 ]
  %176 = phi i64 [ %170, %168 ], [ 0, %160 ]
  %177 = phi %"struct.std::__1::pair"* [ %173, %168 ], [ null, %160 ]
  store %"struct.std::__1::pair"* %177, %"struct.std::__1::pair"** %136, align 8
  %178 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %177, i64 %175
  store %"struct.std::__1::pair"* %178, %"struct.std::__1::pair"** %138, align 8
  store %"struct.std::__1::pair"* %178, %"struct.std::__1::pair"** %137, align 8
  %179 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %177, i64 %176
  store %"struct.std::__1::pair"* %179, %"struct.std::__1::pair"** %139, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EERNS5_IS8_EEE12emplace_backIJS8_EEEvDpOT_(%"struct.std::__1::__split_buffer"* nonnull %6, %"struct.std::__1::pair"* dereferenceable(48) %2)
  %180 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %137, align 8
  %181 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %182 = icmp eq %"struct.std::__1::pair"* %181, %1
  br i1 %182, label %197, label %183

183:                                              ; preds = %174, %183
  %184 = phi %"struct.std::__1::pair"* [ %195, %183 ], [ %180, %174 ]
  %185 = phi %"struct.std::__1::pair"* [ %187, %183 ], [ %1, %174 ]
  %186 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %184, i64 -1
  %187 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %185, i64 -1
  %188 = bitcast %"struct.std::__1::pair"* %186 to i8*
  %189 = bitcast %"struct.std::__1::pair"* %187 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %188, i8* align 8 %189, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %189, i8 0, i64 24, i1 false) #9
  %190 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %184, i64 -1, i32 1
  %191 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %185, i64 -1, i32 1
  %192 = bitcast %"class.std::__1::basic_string"* %190 to i8*
  %193 = bitcast %"class.std::__1::basic_string"* %191 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %192, i8* align 8 %193, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %193, i8 0, i64 24, i1 false) #9
  %194 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %137, align 8
  %195 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %194, i64 -1
  store %"struct.std::__1::pair"* %195, %"struct.std::__1::pair"** %137, align 8
  %196 = icmp eq %"struct.std::__1::pair"* %187, %181
  br i1 %196, label %197, label %183

197:                                              ; preds = %183, %174
  %198 = phi %"struct.std::__1::pair"* [ %180, %174 ], [ %195, %183 ]
  %199 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %200 = icmp eq %"struct.std::__1::pair"* %199, %1
  br i1 %200, label %201, label %207

201:                                              ; preds = %197
  %202 = ptrtoint %"struct.std::__1::pair"* %199 to i64
  %203 = ptrtoint %"struct.std::__1::pair"* %198 to i64
  %204 = bitcast %"struct.std::__1::pair"** %137 to i64*
  %205 = bitcast %"struct.std::__1::pair"** %138 to i64*
  %206 = load i64, i64* %205, align 8
  br label %228

207:                                              ; preds = %197
  %208 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %138, align 8
  br label %209

209:                                              ; preds = %209, %207
  %210 = phi %"struct.std::__1::pair"* [ %220, %209 ], [ %208, %207 ]
  %211 = phi %"struct.std::__1::pair"* [ %218, %209 ], [ %1, %207 ]
  %212 = bitcast %"struct.std::__1::pair"* %210 to i8*
  %213 = bitcast %"struct.std::__1::pair"* %211 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %212, i8* align 8 %213, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %213, i8 0, i64 24, i1 false) #9
  %214 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %210, i64 0, i32 1
  %215 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %211, i64 0, i32 1
  %216 = bitcast %"class.std::__1::basic_string"* %214 to i8*
  %217 = bitcast %"class.std::__1::basic_string"* %215 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %216, i8* align 8 %217, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %217, i8 0, i64 24, i1 false) #9
  %218 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %211, i64 1
  %219 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %138, align 8
  %220 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %219, i64 1
  store %"struct.std::__1::pair"* %220, %"struct.std::__1::pair"** %138, align 8
  %221 = icmp eq %"struct.std::__1::pair"* %218, %199
  br i1 %221, label %222, label %209

222:                                              ; preds = %209
  %223 = ptrtoint %"struct.std::__1::pair"* %220 to i64
  %224 = bitcast %"struct.std::__1::pair"** %137 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = load i64, i64* %141, align 8
  %227 = bitcast %"struct.std::__1::pair"** %138 to i64*
  br label %228

228:                                              ; preds = %201, %222
  %229 = phi i64* [ %205, %201 ], [ %227, %222 ]
  %230 = phi i64 [ %206, %201 ], [ %223, %222 ]
  %231 = phi i64 [ %202, %201 ], [ %226, %222 ]
  %232 = phi i64* [ %204, %201 ], [ %224, %222 ]
  %233 = phi i64 [ %203, %201 ], [ %225, %222 ]
  %234 = load i64, i64* %142, align 8
  store i64 %233, i64* %142, align 8
  store i64 %234, i64* %232, align 8
  store i64 %230, i64* %141, align 8
  store i64 %231, i64* %229, align 8
  %235 = load i64, i64* %152, align 8
  %236 = bitcast %"struct.std::__1::pair"** %139 to i64*
  %237 = load i64, i64* %236, align 8
  store i64 %237, i64* %152, align 8
  store i64 %235, i64* %236, align 8
  %238 = bitcast %"struct.std::__1::__split_buffer"* %6 to i64*
  store i64 %234, i64* %238, align 8
  %239 = inttoptr i64 %234 to %"struct.std::__1::pair"*
  %240 = inttoptr i64 %231 to %"struct.std::__1::pair"*
  %241 = icmp eq %"struct.std::__1::pair"* %240, %239
  br i1 %241, label %266, label %242

242:                                              ; preds = %228, %261
  %243 = phi %"struct.std::__1::pair"* [ %262, %261 ], [ %240, %228 ]
  %244 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %243, i64 -1
  store %"struct.std::__1::pair"* %244, %"struct.std::__1::pair"** %138, align 8
  %245 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %243, i64 -1, i32 1
  %246 = bitcast %"class.std::__1::basic_string"* %245 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %247 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %246, i64 0, i32 1, i32 0
  %248 = load i8, i8* %247, align 1
  %249 = icmp slt i8 %248, 0
  br i1 %249, label %250, label %253

250:                                              ; preds = %242
  %251 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %245, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %252 = load i8*, i8** %251, align 8
  call void @_ZdlPv(i8* %252) #8
  br label %253

253:                                              ; preds = %250, %242
  %254 = bitcast %"struct.std::__1::pair"* %244 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %255 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %254, i64 0, i32 1, i32 0
  %256 = load i8, i8* %255, align 1
  %257 = icmp slt i8 %256, 0
  br i1 %257, label %258, label %261

258:                                              ; preds = %253
  %259 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %244, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %260 = load i8*, i8** %259, align 8
  call void @_ZdlPv(i8* %260) #8
  br label %261

261:                                              ; preds = %258, %253
  %262 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %138, align 8
  %263 = icmp eq %"struct.std::__1::pair"* %262, %239
  br i1 %263, label %264, label %242

264:                                              ; preds = %261
  %265 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %136, align 8
  br label %266

266:                                              ; preds = %264, %228
  %267 = phi %"struct.std::__1::pair"* [ %265, %264 ], [ %239, %228 ]
  %268 = icmp eq %"struct.std::__1::pair"* %267, null
  br i1 %268, label %271, label %269

269:                                              ; preds = %266
  %270 = bitcast %"struct.std::__1::pair"* %267 to i8*
  call void @_ZdlPv(i8* %270) #8
  br label %271

271:                                              ; preds = %266, %269
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %135) #9
  br label %272

272:                                              ; preds = %17, %126, %271
  %273 = phi %"struct.std::__1::pair"* [ %1, %17 ], [ %1, %126 ], [ %180, %271 ]
  ret %"struct.std::__1::pair"* %273
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EERNS5_IS8_EEE12emplace_backIJS8_EEEvDpOT_(%"struct.std::__1::__split_buffer"*, %"struct.std::__1::pair"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair"* %4, %6
  %8 = ptrtoint %"struct.std::__1::pair"* %6 to i64
  br i1 %7, label %9, label %140

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %11 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %13 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %12, align 8
  %14 = icmp ugt %"struct.std::__1::pair"* %11, %13
  %15 = ptrtoint %"struct.std::__1::pair"* %13 to i64
  br i1 %14, label %16, label %62

16:                                               ; preds = %9
  %17 = ptrtoint %"struct.std::__1::pair"* %11 to i64
  %18 = sub i64 %17, %15
  %19 = sdiv exact i64 %18, 48
  %20 = add nsw i64 %19, 1
  %21 = sdiv i64 %20, -2
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 %21
  %23 = icmp eq %"struct.std::__1::pair"* %11, %4
  br i1 %23, label %58, label %24

24:                                               ; preds = %16, %48
  %25 = phi %"struct.std::__1::pair"* [ %54, %48 ], [ %22, %16 ]
  %26 = phi %"struct.std::__1::pair"* [ %53, %48 ], [ %11, %16 ]
  %27 = bitcast %"struct.std::__1::pair"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  tail call void @_ZdlPv(i8* %33) #8
  br label %34

34:                                               ; preds = %31, %24
  %35 = bitcast %"struct.std::__1::pair"* %25 to i8*
  %36 = bitcast %"struct.std::__1::pair"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false) #9
  %37 = bitcast %"struct.std::__1::pair"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  store i8 0, i8* %38, align 1
  store i8 0, i8* %36, align 1
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 0, i32 1
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 0, i32 1
  %41 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %34
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  tail call void @_ZdlPv(i8* %47) #8
  br label %48

48:                                               ; preds = %45, %34
  %49 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  %50 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false) #9
  %51 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  store i8 0, i8* %52, align 1
  store i8 0, i8* %50, align 1
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 1
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 1
  %55 = icmp eq %"struct.std::__1::pair"* %53, %4
  br i1 %55, label %56, label %24

56:                                               ; preds = %48
  %57 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %10, align 8
  br label %58

58:                                               ; preds = %56, %16
  %59 = phi %"struct.std::__1::pair"* [ %4, %16 ], [ %57, %56 ]
  %60 = phi %"struct.std::__1::pair"* [ %22, %16 ], [ %54, %56 ]
  store %"struct.std::__1::pair"* %60, %"struct.std::__1::pair"** %3, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %59, i64 %21
  store %"struct.std::__1::pair"* %61, %"struct.std::__1::pair"** %10, align 8
  br label %140

62:                                               ; preds = %9
  %63 = bitcast %"struct.std::__1::pair"** %5 to i64*
  %64 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %65 = sub i64 %8, %15
  %66 = sdiv exact i64 %65, 48
  %67 = shl nsw i64 %66, 1
  %68 = icmp eq i64 %65, 0
  %69 = select i1 %68, i64 1, i64 %67
  %70 = icmp ugt i64 %69, 384307168202282325
  br i1 %70, label %71, label %72

71:                                               ; preds = %62
  tail call void @abort() #10
  unreachable

72:                                               ; preds = %62
  %73 = lshr i64 %69, 2
  %74 = mul i64 %69, 48
  %75 = tail call i8* @_Znwm(i64 %74) #8
  %76 = bitcast i8* %75 to %"struct.std::__1::pair"*
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %76, i64 %73
  %79 = ptrtoint %"struct.std::__1::pair"* %78 to i64
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %76, i64 %69
  %81 = ptrtoint %"struct.std::__1::pair"* %80 to i64
  %82 = ptrtoint %"struct.std::__1::pair"* %11 to i64
  %83 = ptrtoint %"struct.std::__1::pair"* %4 to i64
  %84 = sub i64 %83, %82
  %85 = sdiv exact i64 %84, 48
  %86 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %78, i64 %85
  %87 = icmp eq i64 %84, 0
  br i1 %87, label %107, label %88

88:                                               ; preds = %72, %88
  %89 = phi %"struct.std::__1::pair"* [ %98, %88 ], [ %78, %72 ]
  %90 = phi i64 [ %99, %88 ], [ %79, %72 ]
  %91 = phi %"struct.std::__1::pair"* [ %100, %88 ], [ %11, %72 ]
  %92 = inttoptr i64 %90 to i8*
  %93 = bitcast %"struct.std::__1::pair"* %91 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 24, i1 false) #9
  %94 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %89, i64 0, i32 1
  %95 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %91, i64 0, i32 1
  %96 = bitcast %"class.std::__1::basic_string"* %94 to i8*
  %97 = bitcast %"class.std::__1::basic_string"* %95 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 24, i1 false) #9
  %98 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %89, i64 1
  %99 = ptrtoint %"struct.std::__1::pair"* %98 to i64
  %100 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %91, i64 1
  %101 = icmp eq %"struct.std::__1::pair"* %86, %98
  br i1 %101, label %102, label %88

102:                                              ; preds = %88
  %103 = ptrtoint %"struct.std::__1::pair"* %86 to i64
  %104 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %12, align 8
  %105 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %10, align 8
  %106 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  br label %107

107:                                              ; preds = %72, %102
  %108 = phi %"struct.std::__1::pair"* [ %106, %102 ], [ %4, %72 ]
  %109 = phi %"struct.std::__1::pair"* [ %105, %102 ], [ %11, %72 ]
  %110 = phi %"struct.std::__1::pair"* [ %104, %102 ], [ %13, %72 ]
  %111 = phi i64 [ %103, %102 ], [ %79, %72 ]
  store i64 %77, i64* %64, align 8
  %112 = bitcast %"struct.std::__1::pair"** %10 to i64*
  store i64 %79, i64* %112, align 8
  %113 = bitcast %"struct.std::__1::pair"** %3 to i64*
  store i64 %111, i64* %113, align 8
  store i64 %81, i64* %63, align 8
  %114 = icmp eq %"struct.std::__1::pair"* %108, %109
  br i1 %114, label %136, label %115

115:                                              ; preds = %107, %134
  %116 = phi %"struct.std::__1::pair"* [ %117, %134 ], [ %108, %107 ]
  %117 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %116, i64 -1
  %118 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %116, i64 -1, i32 1
  %119 = bitcast %"class.std::__1::basic_string"* %118 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %119, i64 0, i32 1, i32 0
  %121 = load i8, i8* %120, align 1
  %122 = icmp slt i8 %121, 0
  br i1 %122, label %123, label %126

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %118, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8
  tail call void @_ZdlPv(i8* %125) #8
  br label %126

126:                                              ; preds = %123, %115
  %127 = bitcast %"struct.std::__1::pair"* %117 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %128 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %127, i64 0, i32 1, i32 0
  %129 = load i8, i8* %128, align 1
  %130 = icmp slt i8 %129, 0
  br i1 %130, label %131, label %134

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %117, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load i8*, i8** %132, align 8
  tail call void @_ZdlPv(i8* %133) #8
  br label %134

134:                                              ; preds = %131, %126
  %135 = icmp eq %"struct.std::__1::pair"* %117, %109
  br i1 %135, label %136, label %115

136:                                              ; preds = %134, %107
  %137 = icmp eq %"struct.std::__1::pair"* %110, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %136
  %139 = bitcast %"struct.std::__1::pair"* %110 to i8*
  tail call void @_ZdlPv(i8* %139) #8
  br label %140

140:                                              ; preds = %138, %136, %58, %2
  %141 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %142 = bitcast %"struct.std::__1::pair"* %141 to i8*
  %143 = bitcast %"struct.std::__1::pair"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %142, i8* align 8 %143, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %143, i8 0, i64 24, i1 false) #9
  %144 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %141, i64 0, i32 1
  %145 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %146 = bitcast %"class.std::__1::basic_string"* %144 to i8*
  %147 = bitcast %"class.std::__1::basic_string"* %145 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %147, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %147, i8 0, i64 24, i1 false) #9
  %148 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %149 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %148, i64 1
  store %"struct.std::__1::pair"* %149, %"struct.std::__1::pair"** %3, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN7network19ResourceRequestBodyD1Ev(%"class.network::ResourceRequestBody"*) unnamed_addr #3

declare void @_ZN5blink5mojom8ReferrerC1ERK4GURLN7network5mojom14ReferrerPolicyE(%"class.blink::mojom::Referrer"*, %class.GURL* dereferenceable(120), i32) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink5mojom15FetchAPIRequest3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZN5blink5mojom15FetchAPIRequest3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__19make_pairIRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_EENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSA_IT0_E4typeEEEOSB_OSE_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__19make_pairIRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_EENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSA_IT0_E4typeEEEOSB_OSE_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink5mojom8Referrer3NewIJRK4GURLN7network5mojom14ReferrerPolicyEEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!10 = distinct !{!10, !"_ZN5blink5mojom8Referrer3NewIJRK4GURLN7network5mojom14ReferrerPolicyEEEEN4mojo9StructPtrIS1_EEDpOT_"}
!11 = !{i8 0, i8 2}
