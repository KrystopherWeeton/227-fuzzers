; ModuleID = '../../third_party/boringssl/src/crypto/asn1/a_object.c'
source_filename = "../../third_party/boringssl/src/crypto/asn1/a_object.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }

@.str = private unnamed_addr constant [55 x i8] c"../../third_party/boringssl/src/crypto/asn1/a_object.c\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"NULL\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"<INVALID>\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_ASN1_OBJECT(%struct.asn1_object_st* readonly, i8**) local_unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #3
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %5 = icmp eq %struct.asn1_object_st* %0, null
  br i1 %5, label %44, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.asn1_object_st, %struct.asn1_object_st* %0, i64 0, i32 4
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %44, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.asn1_object_st, %struct.asn1_object_st* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = tail call i32 @ASN1_object_size(i32 0, i32 %12, i32 6) #3
  %14 = icmp eq i8** %1, null
  %15 = icmp eq i32 %13, -1
  %16 = or i1 %14, %15
  br i1 %16, label %44, label %17

17:                                               ; preds = %10
  %18 = load i8*, i8** %1, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %25

20:                                               ; preds = %17
  %21 = sext i32 %13 to i64
  %22 = tail call i8* @OPENSSL_malloc(i64 %21) #3
  store i8* %22, i8** %3, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  tail call void @ERR_put_error(i32 12, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 83) #3
  br label %44

25:                                               ; preds = %17
  store i8* %18, i8** %3, align 8
  br label %26

26:                                               ; preds = %20, %25
  %27 = phi i8* [ %22, %20 ], [ null, %25 ]
  %28 = load i32, i32* %11, align 4
  call void @ASN1_put_object(i8** nonnull %3, i32 0, i32 %28, i32 6, i32 0) #3
  %29 = load i32, i32* %11, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %26
  %32 = sext i32 %29 to i64
  %33 = load i8*, i8** %7, align 8
  %34 = load i8*, i8** %3, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 1 %33, i64 %32, i1 false) #3
  br label %35

35:                                               ; preds = %26, %31
  %36 = icmp eq i8* %27, null
  br i1 %36, label %37, label %42

37:                                               ; preds = %35
  %38 = load i8*, i8** %3, align 8
  %39 = load i32, i32* %11, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %38, i64 %40
  br label %42

42:                                               ; preds = %35, %37
  %43 = phi i8* [ %41, %37 ], [ %27, %35 ]
  store i8* %43, i8** %1, align 8
  br label %44

44:                                               ; preds = %10, %2, %6, %42, %24
  %45 = phi i32 [ 0, %24 ], [ %13, %42 ], [ 0, %6 ], [ 0, %2 ], [ %13, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #3
  ret i32 %45
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @ASN1_object_size(i32, i32, i32) local_unnamed_addr #2

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #2

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare void @ASN1_put_object(i8**, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2t_ASN1_OBJECT(i8*, i32, %struct.asn1_object_st*) local_unnamed_addr #0 {
  %4 = tail call i32 @OBJ_obj2txt(i8* %0, i32 %1, %struct.asn1_object_st* %2, i32 0) #3
  ret i32 %4
}

declare i32 @OBJ_obj2txt(i8*, i32, %struct.asn1_object_st*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2a_ASN1_OBJECT(%struct.bio_st*, %struct.asn1_object_st*) local_unnamed_addr #0 {
  %3 = alloca [80 x i8], align 16
  %4 = getelementptr inbounds [80 x i8], [80 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %4) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 80, i1 false)
  %5 = icmp eq %struct.asn1_object_st* %1, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.asn1_object_st, %struct.asn1_object_st* %1, i64 0, i32 4
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %6, %2
  %11 = tail call i32 @BIO_write(%struct.bio_st* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i32 4) #3
  br label %31

12:                                               ; preds = %6
  %13 = call i32 @OBJ_obj2txt(i8* nonnull %4, i32 80, %struct.asn1_object_st* nonnull %1, i32 0) #3
  %14 = icmp sgt i32 %13, 79
  br i1 %14, label %15, label %20

15:                                               ; preds = %12
  %16 = add nuw nsw i32 %13, 1
  %17 = sext i32 %16 to i64
  %18 = call i8* @OPENSSL_malloc(i64 %17) #3
  %19 = icmp eq i8* %18, null
  br i1 %19, label %31, label %26

20:                                               ; preds = %12
  %21 = icmp slt i32 %13, 1
  br i1 %21, label %24, label %22

22:                                               ; preds = %20
  %23 = call i32 @BIO_write(%struct.bio_st* %0, i8* nonnull %4, i32 %13) #3
  br label %31

24:                                               ; preds = %20
  %25 = call i32 @BIO_write(%struct.bio_st* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i32 9) #3
  br label %31

26:                                               ; preds = %15
  %27 = call i32 @OBJ_obj2txt(i8* nonnull %18, i32 %16, %struct.asn1_object_st* nonnull %1, i32 0) #3
  %28 = call i32 @BIO_write(%struct.bio_st* %0, i8* nonnull %18, i32 %13) #3
  %29 = icmp eq i8* %18, %4
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  call void @OPENSSL_free(i8* nonnull %18) #3
  br label %31

31:                                               ; preds = %22, %30, %26, %15, %24, %10
  %32 = phi i32 [ %11, %10 ], [ %25, %24 ], [ -1, %15 ], [ %13, %26 ], [ %13, %30 ], [ %13, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %4) #3
  ret i32 %32
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @BIO_write(%struct.bio_st*, i8*, i32) local_unnamed_addr #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.asn1_object_st* @d2i_ASN1_OBJECT(%struct.asn1_object_st**, i8** nocapture, i64) local_unnamed_addr #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #3
  %9 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #3
  store i64 -6148914691236517206, i64* %5, align 8
  %10 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #3
  store i32 -1431655766, i32* %6, align 4
  %11 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #3
  store i32 -1431655766, i32* %7, align 4
  %12 = bitcast i8** %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast i8** %4 to i64*
  store i64 %13, i64* %14, align 8
  %15 = call i32 @ASN1_get_object(i8** nonnull %4, i64* nonnull %5, i32* nonnull %6, i32* nonnull %7, i64 %2) #3
  %16 = trunc i32 %15 to i8
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %3
  %19 = load i32, i32* %6, align 4
  %20 = icmp eq i32 %19, 6
  br i1 %20, label %21, label %27

21:                                               ; preds = %18
  %22 = load i64, i64* %5, align 8
  %23 = call %struct.asn1_object_st* @c2i_ASN1_OBJECT(%struct.asn1_object_st** %0, i8** nonnull %4, i64 %22)
  %24 = icmp eq %struct.asn1_object_st* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = load i64, i64* %14, align 8
  store i64 %26, i64* %12, align 8
  br label %29

27:                                               ; preds = %18, %3
  %28 = phi i32 [ 103, %3 ], [ 116, %18 ]
  call void @ERR_put_error(i32 12, i32 0, i32 %28, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 152) #3
  br label %29

29:                                               ; preds = %25, %21, %27
  %30 = phi %struct.asn1_object_st* [ null, %27 ], [ null, %21 ], [ %23, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #3
  ret %struct.asn1_object_st* %30
}

declare i32 @ASN1_get_object(i8**, i64*, i32*, i32*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.asn1_object_st* @c2i_ASN1_OBJECT(%struct.asn1_object_st**, i8**, i64) local_unnamed_addr #0 {
  %4 = add i64 %2, -1
  %5 = icmp ugt i64 %4, 2147483646
  %6 = icmp eq i8** %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = load i8*, i8** %1, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %9, i64 %4
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %11, %8, %3
  tail call void @ERR_put_error(i32 12, i32 0, i32 146, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 171) #3
  br label %130

16:                                               ; preds = %11
  %17 = trunc i64 %2 to i32
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %19, label %35

19:                                               ; preds = %16, %31
  %20 = phi i32 [ %32, %31 ], [ 0, %16 ]
  %21 = phi i8* [ %33, %31 ], [ %9, %16 ]
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, -128
  br i1 %23, label %24, label %31

24:                                               ; preds = %19
  %25 = icmp eq i32 %20, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds i8, i8* %21, i64 -1
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %24, %26
  tail call void @ERR_put_error(i32 12, i32 0, i32 146, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 178) #3
  br label %130

31:                                               ; preds = %19, %26
  %32 = add nuw nsw i32 %20, 1
  %33 = getelementptr inbounds i8, i8* %21, i64 1
  %34 = icmp eq i32 %32, %17
  br i1 %34, label %35, label %19

35:                                               ; preds = %31, %16
  %36 = icmp eq %struct.asn1_object_st** %0, null
  br i1 %36, label %45, label %37

37:                                               ; preds = %35
  %38 = load %struct.asn1_object_st*, %struct.asn1_object_st** %0, align 8
  %39 = icmp eq %struct.asn1_object_st* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct.asn1_object_st, %struct.asn1_object_st* %38, i64 0, i32 5
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 1
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %54

45:                                               ; preds = %40, %37, %35
  %46 = tail call i8* @OPENSSL_malloc(i64 40) #3
  %47 = icmp eq i8* %46, null
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @ERR_put_error(i32 12, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 238) #3
  br label %130

49:                                               ; preds = %45
  %50 = bitcast i8* %46 to %struct.asn1_object_st*
  %51 = getelementptr inbounds i8, i8* %46, i64 32
  %52 = bitcast i8* %51 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 32, i1 false) #3
  store i32 1, i32* %52, align 8
  %53 = load i8*, i8** %1, align 8
  br label %54

54:                                               ; preds = %49, %40
  %55 = phi i8* [ %53, %49 ], [ %9, %40 ]
  %56 = phi %struct.asn1_object_st* [ %50, %49 ], [ %38, %40 ]
  %57 = getelementptr inbounds %struct.asn1_object_st, %struct.asn1_object_st* %56, i64 0, i32 4
  %58 = load i8*, i8** %57, align 8
  store i8* null, i8** %57, align 8
  %59 = icmp eq i8* %58, null
  %60 = getelementptr inbounds %struct.asn1_object_st, %struct.asn1_object_st* %56, i64 0, i32 3
  br i1 %59, label %61, label %62

61:                                               ; preds = %54
  store i32 0, i32* %60, align 4
  br label %69

62:                                               ; preds = %54
  %63 = load i32, i32* %60, align 4
  %64 = icmp slt i32 %63, %17
  br i1 %64, label %68, label %65

65:                                               ; preds = %62
  %66 = shl i64 %2, 32
  %67 = ashr exact i64 %66, 32
  br label %78

68:                                               ; preds = %62
  store i32 0, i32* %60, align 4
  tail call void @OPENSSL_free(i8* nonnull %58) #3
  br label %69

69:                                               ; preds = %61, %68
  %70 = shl i64 %2, 32
  %71 = ashr exact i64 %70, 32
  %72 = tail call i8* @OPENSSL_malloc(i64 %71) #3
  %73 = icmp eq i8* %72, null
  br i1 %73, label %101, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %struct.asn1_object_st, %struct.asn1_object_st* %56, i64 0, i32 5
  %76 = load i32, i32* %75, align 8
  %77 = or i32 %76, 8
  store i32 %77, i32* %75, align 8
  br label %78

78:                                               ; preds = %65, %74
  %79 = phi i64 [ %67, %65 ], [ %71, %74 ]
  %80 = phi i64 [ %66, %65 ], [ %70, %74 ]
  %81 = phi i8* [ %58, %65 ], [ %72, %74 ]
  %82 = icmp eq i64 %80, 0
  br i1 %82, label %84, label %83

83:                                               ; preds = %78
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %81, i8* align 1 %55, i64 %79, i1 false) #3
  br label %84

84:                                               ; preds = %78, %83
  %85 = getelementptr inbounds %struct.asn1_object_st, %struct.asn1_object_st* %56, i64 0, i32 5
  %86 = load i32, i32* %85, align 8
  %87 = and i32 %86, 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %96, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %struct.asn1_object_st, %struct.asn1_object_st* %56, i64 0, i32 0
  %91 = load i8*, i8** %90, align 8
  tail call void @OPENSSL_free(i8* %91) #3
  %92 = getelementptr inbounds %struct.asn1_object_st, %struct.asn1_object_st* %56, i64 0, i32 1
  %93 = load i8*, i8** %92, align 8
  tail call void @OPENSSL_free(i8* %93) #3
  %94 = load i32, i32* %85, align 8
  %95 = and i32 %94, -5
  store i32 %95, i32* %85, align 8
  br label %96

96:                                               ; preds = %84, %89
  store i8* %81, i8** %57, align 8
  store i32 %17, i32* %60, align 4
  %97 = getelementptr inbounds i8, i8* %55, i64 %79
  %98 = bitcast %struct.asn1_object_st* %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 16, i1 false)
  br i1 %36, label %100, label %99

99:                                               ; preds = %96
  store %struct.asn1_object_st* %56, %struct.asn1_object_st** %0, align 8
  br label %100

100:                                              ; preds = %96, %99
  store i8* %97, i8** %1, align 8
  br label %130

101:                                              ; preds = %69
  tail call void @ERR_put_error(i32 12, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 226) #3
  br i1 %36, label %105, label %102

102:                                              ; preds = %101
  %103 = load %struct.asn1_object_st*, %struct.asn1_object_st** %0, align 8
  %104 = icmp eq %struct.asn1_object_st* %103, %56
  br i1 %104, label %130, label %105

105:                                              ; preds = %101, %102
  %106 = getelementptr inbounds %struct.asn1_object_st, %struct.asn1_object_st* %56, i64 0, i32 5
  %107 = load i32, i32* %106, align 8
  %108 = and i32 %107, 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %117, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %struct.asn1_object_st, %struct.asn1_object_st* %56, i64 0, i32 0
  %112 = load i8*, i8** %111, align 8
  tail call void @OPENSSL_free(i8* %112) #3
  %113 = getelementptr inbounds %struct.asn1_object_st, %struct.asn1_object_st* %56, i64 0, i32 1
  %114 = load i8*, i8** %113, align 8
  tail call void @OPENSSL_free(i8* %114) #3
  %115 = bitcast %struct.asn1_object_st* %56 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %115, i8 0, i64 16, i1 false) #3
  %116 = load i32, i32* %106, align 8
  br label %117

117:                                              ; preds = %110, %105
  %118 = phi i32 [ %107, %105 ], [ %116, %110 ]
  %119 = and i32 %118, 8
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %124, label %121

121:                                              ; preds = %117
  %122 = load i8*, i8** %57, align 8
  tail call void @OPENSSL_free(i8* %122) #3
  store i8* null, i8** %57, align 8
  store i32 0, i32* %60, align 4
  %123 = load i32, i32* %106, align 8
  br label %124

124:                                              ; preds = %121, %117
  %125 = phi i32 [ %118, %117 ], [ %123, %121 ]
  %126 = and i32 %125, 1
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %124
  %129 = bitcast %struct.asn1_object_st* %56 to i8*
  tail call void @OPENSSL_free(i8* nonnull %129) #3
  br label %130

130:                                              ; preds = %128, %124, %48, %102, %100, %30, %15
  %131 = phi %struct.asn1_object_st* [ null, %15 ], [ null, %30 ], [ %56, %100 ], [ null, %102 ], [ null, %48 ], [ null, %124 ], [ null, %128 ]
  ret %struct.asn1_object_st* %131
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.asn1_object_st* @ASN1_OBJECT_new() local_unnamed_addr #0 {
  %1 = tail call i8* @OPENSSL_malloc(i64 40) #3
  %2 = icmp eq i8* %1, null
  br i1 %2, label %3, label %4

3:                                                ; preds = %0
  tail call void @ERR_put_error(i32 12, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 238) #3
  br label %8

4:                                                ; preds = %0
  %5 = bitcast i8* %1 to %struct.asn1_object_st*
  %6 = getelementptr inbounds i8, i8* %1, i64 32
  %7 = bitcast i8* %6 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1, i8 0, i64 32, i1 false)
  store i32 1, i32* %7, align 8
  br label %8

8:                                                ; preds = %4, %3
  %9 = phi %struct.asn1_object_st* [ null, %3 ], [ %5, %4 ]
  ret %struct.asn1_object_st* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ASN1_OBJECT_free(%struct.asn1_object_st*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.asn1_object_st* %0, null
  br i1 %2, label %30, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.asn1_object_st, %struct.asn1_object_st* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.asn1_object_st, %struct.asn1_object_st* %0, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @OPENSSL_free(i8* %10) #3
  %11 = getelementptr inbounds %struct.asn1_object_st, %struct.asn1_object_st* %0, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  tail call void @OPENSSL_free(i8* %12) #3
  %13 = bitcast %struct.asn1_object_st* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 16, i1 false)
  %14 = load i32, i32* %4, align 8
  br label %15

15:                                               ; preds = %3, %8
  %16 = phi i32 [ %5, %3 ], [ %14, %8 ]
  %17 = and i32 %16, 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.asn1_object_st, %struct.asn1_object_st* %0, i64 0, i32 4
  %21 = load i8*, i8** %20, align 8
  tail call void @OPENSSL_free(i8* %21) #3
  store i8* null, i8** %20, align 8
  %22 = getelementptr inbounds %struct.asn1_object_st, %struct.asn1_object_st* %0, i64 0, i32 3
  store i32 0, i32* %22, align 4
  %23 = load i32, i32* %4, align 8
  br label %24

24:                                               ; preds = %15, %19
  %25 = phi i32 [ %16, %15 ], [ %23, %19 ]
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %struct.asn1_object_st* %0 to i8*
  tail call void @OPENSSL_free(i8* nonnull %29) #3
  br label %30

30:                                               ; preds = %24, %1, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.asn1_object_st* @ASN1_OBJECT_create(i32, i8*, i32, i8*, i8*) local_unnamed_addr #0 {
  %6 = alloca %struct.asn1_object_st, align 8
  %7 = bitcast %struct.asn1_object_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 40, i1 false)
  %8 = getelementptr inbounds %struct.asn1_object_st, %struct.asn1_object_st* %6, i64 0, i32 0
  store i8* %3, i8** %8, align 8
  %9 = getelementptr inbounds %struct.asn1_object_st, %struct.asn1_object_st* %6, i64 0, i32 1
  store i8* %4, i8** %9, align 8
  %10 = getelementptr inbounds %struct.asn1_object_st, %struct.asn1_object_st* %6, i64 0, i32 4
  store i8* %1, i8** %10, align 8
  %11 = getelementptr inbounds %struct.asn1_object_st, %struct.asn1_object_st* %6, i64 0, i32 2
  store i32 %0, i32* %11, align 8
  %12 = getelementptr inbounds %struct.asn1_object_st, %struct.asn1_object_st* %6, i64 0, i32 3
  store i32 %2, i32* %12, align 4
  %13 = getelementptr inbounds %struct.asn1_object_st, %struct.asn1_object_st* %6, i64 0, i32 5
  store i32 13, i32* %13, align 8
  %14 = call %struct.asn1_object_st* @OBJ_dup(%struct.asn1_object_st* nonnull %6) #3
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #3
  ret %struct.asn1_object_st* %14
}

declare %struct.asn1_object_st* @OBJ_dup(%struct.asn1_object_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
