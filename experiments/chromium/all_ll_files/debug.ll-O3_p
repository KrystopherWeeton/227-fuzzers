; ModuleID = '../../v8/src/debug/debug.cc'
source_filename = "../../v8/src/debug/debug.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.570" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.168", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.49", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.49", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.49", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.49", i64, i64, %"struct.std::__1::atomic.49", %"struct.std::__1::atomic.59", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.175", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.190", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.49", i64, i8, %"struct.std::__1::atomic.49", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.194", %"class.std::__1::vector.194", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.201", %"class.std::__1::unique_ptr.207", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.337", %"class.std::__1::unique_ptr.343", %"class.std::__1::unique_ptr.349", %"class.std::__1::unique_ptr.388", %"class.std::__1::unique_ptr.427", %"class.std::__1::unique_ptr.457", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.473", %"class.std::__1::unique_ptr.479", %"class.std::__1::unique_ptr.479", %"class.std::__1::unique_ptr.485", %"class.std::__1::unique_ptr.491", %"class.std::__1::unique_ptr.491", %"class.std::__1::unique_ptr.497", %"class.std::__1::unique_ptr.503", %"class.std::__1::shared_ptr.509", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.532", %"class.std::__1::unique_ptr.558", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.564", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.577", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.359", i8, [7 x i8], %"class.std::__1::unordered_map.583", %"class.std::__1::unordered_map.609", %"class.std::__1::unordered_map.583", %"class.std::__1::unordered_map.633", %"class.std::__1::vector.661", i8, %"class.std::__1::unique_ptr.668", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.26" }
%"class.std::__1::__hash_table.26" = type <{ %"class.std::__1::unique_ptr.27", %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.44", [4 x i8] }>
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29", %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::__hash_node_base.30"** }
%"struct.std::__1::__hash_node_base.30" = type { %"struct.std::__1::__hash_node_base.30"* }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.std::__1::__bucket_list_deallocator.32" }
%"class.std::__1::__bucket_list_deallocator.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i64 }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::__hash_node_base.30" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.54", %"struct.std::__1::atomic.54", %"struct.std::__1::atomic.54" }
%"struct.std::__1::atomic.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__cxx_atomic_impl.57" }
%"struct.std::__1::__cxx_atomic_impl.57" = type { %"struct.std::__1::__cxx_atomic_base_impl.58" }
%"struct.std::__1::__cxx_atomic_base_impl.58" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.20", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.674", %"class.std::__1::unique_ptr.695", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.705", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.894", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.907", void (i32, %"class.v8::SharedArrayBuffer"*, i64, i64, double, %"class.v8::Isolate::AtomicsWaitWakeHandle"*, i8*)*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.917", void (%"class.v8::Context"*, %"class.v8::Module"*, %"class.v8::Object"*)*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.928", %"struct.std::__1::atomic.181", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.995", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.1046"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1057", i32, i8, i8, i32, i32, %"class.std::__1::vector.1063", %"class.std::__1::vector.1063", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1070", i64, %"class.std::__1::unordered_map.1071", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.570", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.189", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1127", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1165", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, %"class.v8::Value"* (%"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Array"*)*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1199", %"class.std::__1::vector.1203", %"class.std::__1::vector.1203", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.18", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.18" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.674" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.168", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.675", %"class.std::__1::unique_ptr.689" }
%"class.std::__1::unique_ptr.675" = type { %"class.std::__1::__compressed_pair.676" }
%"class.std::__1::__compressed_pair.676" = type { %"struct.std::__1::__compressed_pair_elem.677" }
%"struct.std::__1::__compressed_pair_elem.677" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.678" }
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"class.std::__1::unique_ptr.680"*, %"class.std::__1::unique_ptr.680"*, %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::unique_ptr.680" = type { %"class.std::__1::__compressed_pair.1603" }
%"class.std::__1::__compressed_pair.1603" = type { %"struct.std::__1::__compressed_pair_elem.1604" }
%"struct.std::__1::__compressed_pair_elem.1604" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::unique_ptr.680"* }
%"class.std::__1::unique_ptr.689" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.695" = type { %"class.std::__1::__compressed_pair.696" }
%"class.std::__1::__compressed_pair.696" = type { %"struct.std::__1::__compressed_pair_elem.697" }
%"struct.std::__1::__compressed_pair_elem.697" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.698", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.698" = type { %"struct.std::__1::__atomic_base.699" }
%"struct.std::__1::__atomic_base.699" = type { %"struct.std::__1::__cxx_atomic_impl.700" }
%"struct.std::__1::__cxx_atomic_impl.700" = type { %"struct.std::__1::__cxx_atomic_base_impl.701" }
%"struct.std::__1::__cxx_atomic_base_impl.701" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type { %"class.v8::internal::ThreadId", i8*, %"class.v8::internal::ThreadState"*, %"class.v8::internal::ThreadState"*, %"class.v8::internal::ThreadManager"* }
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::CompilationCacheScript", %"class.v8::internal::CompilationCacheEval", %"class.v8::internal::CompilationCacheEval", %"class.v8::internal::CompilationCacheRegExp", [4 x %"class.v8::internal::CompilationSubCache"*], i8, [7 x i8] }>
%"class.v8::internal::CompilationCacheScript" = type { %"class.v8::internal::CompilationSubCache" }
%"class.v8::internal::CompilationSubCache" = type { i32 (...)**, %"class.v8::internal::Isolate"*, i32, [2 x %"class.v8::internal::Object"] }
%"class.v8::internal::CompilationCacheEval" = type { %"class.v8::internal::CompilationSubCache" }
%"class.v8::internal::CompilationCacheRegExp" = type { %"class.v8::internal::CompilationSubCache" }
%"class.std::__1::shared_ptr.705" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.706", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.706" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.707", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.707" = type { %"class.std::__1::__vector_base.708" }
%"class.std::__1::__vector_base.708" = type { %"class.std::__1::unique_ptr.709"*, %"class.std::__1::unique_ptr.709"*, %"class.std::__1::__compressed_pair.710" }
%"class.std::__1::unique_ptr.709" = type opaque
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.711" }
%"struct.std::__1::__compressed_pair_elem.711" = type { %"class.std::__1::unique_ptr.709"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.715", %"class.std::__1::unique_ptr.721", %"struct.std::__1::atomic.181", %"class.std::__1::unique_ptr.727", %"class.std::__1::unique_ptr.733", %"class.std::__1::unique_ptr.739", %"class.std::__1::unique_ptr.745", %"class.std::__1::unique_ptr.751", %"class.std::__1::set.757", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.715" = type { %"class.std::__1::__compressed_pair.716" }
%"class.std::__1::__compressed_pair.716" = type { %"struct.std::__1::__compressed_pair_elem.717" }
%"struct.std::__1::__compressed_pair_elem.717" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.721" = type { %"class.std::__1::__compressed_pair.722" }
%"class.std::__1::__compressed_pair.722" = type { %"struct.std::__1::__compressed_pair_elem.723" }
%"struct.std::__1::__compressed_pair_elem.723" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.727" = type { %"class.std::__1::__compressed_pair.728" }
%"class.std::__1::__compressed_pair.728" = type { %"struct.std::__1::__compressed_pair_elem.729" }
%"struct.std::__1::__compressed_pair_elem.729" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.739" = type { %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.745" = type { %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.751" = type { %"class.std::__1::__compressed_pair.752" }
%"class.std::__1::__compressed_pair.752" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"struct.std::__1::__compressed_pair_elem.753" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.757" = type { %"class.std::__1::__tree.758" }
%"class.std::__1::__tree.758" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.759", %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.759" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.766" }
%"class.v8::internal::TaggedImpl.766" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.765" }
%"class.v8::internal::TaggedImpl.765" = type { i32 }
%"class.v8::internal::Deoptimizer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::JSFunction", %"class.v8::internal::Code", i32, i8, i64, i32, i8, i32, i32, %"class.v8::internal::FrameDescription"*, i32, %"class.v8::internal::FrameDescription"**, i64, i64, i64, i64, i32, i64, %"class.v8::internal::TranslatedState", %"class.std::__1::vector.804", %"class.std::__1::unique_ptr.811" }
%"class.v8::internal::JSFunction" = type { %"class.v8::internal::JSFunctionOrBoundFunction" }
%"class.v8::internal::JSFunctionOrBoundFunction" = type { %"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" }
%"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Code" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FrameDescription" = type { i64, i32, %"class.v8::internal::RegisterValues", i64, i64, i64, i64, i64, i64, [1 x i64] }
%"class.v8::internal::RegisterValues" = type { [16 x i64], [16 x %"class.v8::internal::Float64"] }
%"class.v8::internal::Float64" = type { i64 }
%"class.v8::internal::TranslatedState" = type <{ i32, [4 x i8], %"class.std::__1::vector.767", %"class.v8::internal::Isolate"*, i64, i32, i32, %"class.std::__1::deque.791", %"class.v8::internal::Handle.803", %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.std::__1::vector.767" = type { %"class.std::__1::__vector_base.768" }
%"class.std::__1::__vector_base.768" = type { %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"*, %"class.std::__1::__compressed_pair.786" }
%"class.v8::internal::TranslatedFrame" = type <{ i32, %"class.v8::internal::BytecodeOffset", %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::Handle.769", i32, i32, i32, [4 x i8], %"class.std::__1::deque", %"class.v8::base::Optional.781", [6 x i8] }>
%"class.v8::internal::BytecodeOffset" = type { i32 }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle.769" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.777" }
%"struct.std::__1::__split_buffer" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.std::__1::__compressed_pair.772" }
%"class.v8::internal::TranslatedValue" = type { i8, i8, %"class.v8::internal::TranslatedState"*, %"class.v8::internal::Handle.770", %union.anon.771 }
%"class.v8::internal::Handle.770" = type { %"class.v8::internal::HandleBase" }
%union.anon.771 = type { %"class.v8::internal::Object" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"class.v8::internal::TranslatedValue"** }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.v8::base::Optional.781" = type { %"class.v8::base::internal::OptionalBase.782" }
%"class.v8::base::internal::OptionalBase.782" = type { %"struct.v8::base::internal::OptionalStorage.783" }
%"struct.v8::base::internal::OptionalStorage.783" = type { %"struct.v8::base::internal::OptionalStorageBase.784" }
%"struct.v8::base::internal::OptionalStorageBase.784" = type { i8, %union.anon.785 }
%union.anon.785 = type { i8 }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"class.v8::internal::TranslatedFrame"* }
%"class.std::__1::deque.791" = type { %"class.std::__1::__deque_base.792" }
%"class.std::__1::__deque_base.792" = type { %"struct.std::__1::__split_buffer.793", i64, %"class.std::__1::__compressed_pair.799" }
%"struct.std::__1::__split_buffer.793" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"class.std::__1::__compressed_pair.794" }
%"struct.v8::internal::TranslatedState::ObjectPosition" = type { i32, i32 }
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.795" }
%"struct.std::__1::__compressed_pair_elem.795" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"** }
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.v8::internal::Handle.803" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackVector" = type { %"class.v8::internal::TorqueGeneratedFeedbackVector" }
%"class.v8::internal::TorqueGeneratedFeedbackVector" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FeedbackSlot" = type { i32 }
%"class.std::__1::vector.804" = type { %"class.std::__1::__vector_base.805" }
%"class.std::__1::__vector_base.805" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"class.std::__1::__compressed_pair.806" }
%"struct.v8::internal::Deoptimizer::ValueToMaterialize" = type { i64, %"class.v8::internal::TranslatedFrame::iterator" }
%"class.v8::internal::TranslatedFrame::iterator" = type <{ %"class.std::__1::__deque_iterator", i32, [4 x i8] }>
%"class.std::__1::__deque_iterator" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"* }
%"class.std::__1::__compressed_pair.806" = type { %"struct.std::__1::__compressed_pair_elem.807" }
%"struct.std::__1::__compressed_pair_elem.807" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"* }
%"class.std::__1::unique_ptr.811" = type { %"class.std::__1::__compressed_pair.812" }
%"class.std::__1::__compressed_pair.812" = type { %"struct.std::__1::__compressed_pair_elem.813" }
%"struct.std::__1::__compressed_pair_elem.813" = type { %"class.v8::internal::CodeTracer::Scope"* }
%"class.v8::internal::CodeTracer::Scope" = type { %"class.v8::internal::CodeTracer"* }
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.823", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.823" = type { %"class.std::__1::__compressed_pair.824" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.829", %"class.v8::internal::DetachableVector.830", %"class.v8::internal::DetachableVector.829", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.830" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.829" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.49", %"struct.std::__1::atomic.49", %"class.std::__1::unique_ptr.817", %"class.std::__1::unique_ptr.510" }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.512" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.513", %"class.std::__1::set.521" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.513" = type { %"class.std::__1::__tree.514" }
%"class.std::__1::__tree.514" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.519" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::set.521" = type { %"class.std::__1::__tree.522" }
%"class.std::__1::__tree.522" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.v8::internal::InnerPointerToCodeCache" = type { %"class.v8::internal::Isolate"*, [1024 x %"struct.v8::internal::InnerPointerToCodeCache::InnerPointerToCodeCacheEntry"] }
%"struct.v8::internal::InnerPointerToCodeCache::InnerPointerToCodeCacheEntry" = type { i64, %"class.v8::internal::Code", %"class.v8::internal::SafepointEntry" }
%"class.v8::internal::SafepointEntry" = type <{ i32, [4 x i8], i8*, i8*, i32, [4 x i8] }>
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.831", %"class.std::__1::vector.837", %"class.std::__1::unique_ptr.844", %"class.std::__1::vector.851", %"class.std::__1::unique_ptr.858", i64, %"class.std::__1::vector.864", %"class.std::__1::vector.872", %"class.std::__1::vector.880", i8, i8, i32 }
%"class.std::__1::unique_ptr.831" = type { %"class.std::__1::__compressed_pair.832" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.837" = type { %"class.std::__1::__vector_base.838" }
%"class.std::__1::__vector_base.838" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.839" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.844" = type { %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"class.v8::internal::GlobalHandles::NodeSpace.847"* }
%"class.v8::internal::GlobalHandles::NodeSpace.847" = type opaque
%"class.std::__1::vector.851" = type { %"class.std::__1::__vector_base.852" }
%"class.std::__1::__vector_base.852" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.853" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854" }
%"struct.std::__1::__compressed_pair_elem.854" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.858" = type { %"class.std::__1::__compressed_pair.859" }
%"class.std::__1::__compressed_pair.859" = type { %"struct.std::__1::__compressed_pair_elem.860" }
%"struct.std::__1::__compressed_pair_elem.860" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.864" = type { %"class.std::__1::__vector_base.865" }
%"class.std::__1::__vector_base.865" = type { %"struct.std::__1::pair.866"*, %"struct.std::__1::pair.866"*, %"class.std::__1::__compressed_pair.867" }
%"struct.std::__1::pair.866" = type opaque
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868" }
%"struct.std::__1::__compressed_pair_elem.868" = type { %"struct.std::__1::pair.866"* }
%"class.std::__1::vector.872" = type { %"class.std::__1::__vector_base.873" }
%"class.std::__1::__vector_base.873" = type { %"struct.std::__1::pair.874"*, %"struct.std::__1::pair.874"*, %"class.std::__1::__compressed_pair.875" }
%"struct.std::__1::pair.874" = type opaque
%"class.std::__1::__compressed_pair.875" = type { %"struct.std::__1::__compressed_pair_elem.876" }
%"struct.std::__1::__compressed_pair_elem.876" = type { %"struct.std::__1::pair.874"* }
%"class.std::__1::vector.880" = type { %"class.std::__1::__vector_base.881" }
%"class.std::__1::__vector_base.881" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.882" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.882" = type { %"struct.std::__1::__compressed_pair_elem.883" }
%"struct.std::__1::__compressed_pair_elem.883" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.887", %"class.std::__1::vector.894" }
%"class.std::__1::vector.887" = type { %"class.std::__1::__vector_base.888" }
%"class.std::__1::__vector_base.888" = type { i64**, i64**, %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { i64** }
%"class.v8::internal::ThreadManager" = type { %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"class.v8::internal::ThreadId", %"class.v8::internal::ThreadState"*, %"class.v8::internal::ThreadState"*, %"class.v8::internal::ThreadState"*, %"class.v8::internal::Isolate"* }
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.901" }
%"class.std::__1::unique_ptr.901" = type { %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.894" = type { %"class.std::__1::__vector_base.895" }
%"class.std::__1::__vector_base.895" = type { i32*, i32*, %"class.std::__1::__compressed_pair.896" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.897" }
%"struct.std::__1::__compressed_pair_elem.897" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.907" = type { %"struct.std::__1::__atomic_base.908" }
%"struct.std::__1::__atomic_base.908" = type { %"struct.std::__1::__cxx_atomic_impl.909" }
%"struct.std::__1::__cxx_atomic_impl.909" = type { %"struct.std::__1::__cxx_atomic_base_impl.910" }
%"struct.std::__1::__cxx_atomic_base_impl.910" = type { i32 }
%"class.v8::SharedArrayBuffer" = type { i8 }
%"class.v8::Isolate::AtomicsWaitWakeHandle" = type { i8 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.917" = type { %"struct.std::__1::__atomic_base.918" }
%"struct.std::__1::__atomic_base.918" = type { %"struct.std::__1::__cxx_atomic_impl.919" }
%"struct.std::__1::__cxx_atomic_impl.919" = type { %"struct.std::__1::__cxx_atomic_base_impl.920" }
%"struct.std::__1::__cxx_atomic_base_impl.920" = type { i32 }
%"class.v8::Context" = type { i8 }
%"class.v8::Module" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.922" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.924 }
%union.anon.924 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.928" = type { %"class.std::__1::__hash_table.929" }
%"class.std::__1::__hash_table.929" = type <{ %"class.std::__1::unique_ptr.930", %"class.std::__1::__compressed_pair.940", %"class.std::__1::__compressed_pair.945", %"class.std::__1::__compressed_pair.948", [4 x i8] }>
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932", %"struct.std::__1::__compressed_pair_elem.934" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"struct.std::__1::__hash_node_base.933"** }
%"struct.std::__1::__hash_node_base.933" = type { %"struct.std::__1::__hash_node_base.933"* }
%"struct.std::__1::__compressed_pair_elem.934" = type { %"class.std::__1::__bucket_list_deallocator.935" }
%"class.std::__1::__bucket_list_deallocator.935" = type { %"class.std::__1::__compressed_pair.936" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"struct.std::__1::__hash_node_base.933" }
%"class.std::__1::__compressed_pair.945" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::atomic.181" = type { %"struct.std::__1::__atomic_base.182" }
%"struct.std::__1::__atomic_base.182" = type { %"struct.std::__1::__cxx_atomic_impl.183" }
%"struct.std::__1::__cxx_atomic_impl.183" = type { %"struct.std::__1::__cxx_atomic_base_impl.184" }
%"struct.std::__1::__cxx_atomic_base_impl.184" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr", %"class.v8::internal::Handle", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.1210", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type { %"class.v8::internal::HeapObjectAllocationTracker", i8, [7 x i8], %"class.std::__1::unordered_set", %"class.v8::base::Mutex" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.0", %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.12", %"class.std::__1::__compressed_pair.14", [4 x i8] }>
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2", %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.1210" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.954", %"class.std::__1::vector.960", %"class.std::__1::unique_ptr.968", %"class.std::__1::unique_ptr.974", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.980", %"class.std::__1::vector.986", %"struct.std::__1::pair.994" }
%"class.std::__1::unique_ptr.954" = type { %"class.std::__1::__compressed_pair.955" }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.956" }
%"struct.std::__1::__compressed_pair_elem.956" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.960" = type { %"class.std::__1::__vector_base.961" }
%"class.std::__1::__vector_base.961" = type { %"class.std::__1::unique_ptr.962"*, %"class.std::__1::unique_ptr.962"*, %"class.std::__1::__compressed_pair.963" }
%"class.std::__1::unique_ptr.962" = type opaque
%"class.std::__1::__compressed_pair.963" = type { %"struct.std::__1::__compressed_pair_elem.964" }
%"struct.std::__1::__compressed_pair_elem.964" = type { %"class.std::__1::unique_ptr.962"* }
%"class.std::__1::unique_ptr.968" = type { %"class.std::__1::__compressed_pair.969" }
%"class.std::__1::__compressed_pair.969" = type { %"struct.std::__1::__compressed_pair_elem.970" }
%"struct.std::__1::__compressed_pair_elem.970" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.974" = type { %"class.std::__1::__compressed_pair.975" }
%"class.std::__1::__compressed_pair.975" = type { %"struct.std::__1::__compressed_pair_elem.976" }
%"struct.std::__1::__compressed_pair_elem.976" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.980" = type { %"class.std::__1::__compressed_pair.981" }
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.982" }
%"struct.std::__1::__compressed_pair_elem.982" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.986" = type { %"class.std::__1::__vector_base.987" }
%"class.std::__1::__vector_base.987" = type { %"struct.std::__1::pair.988"*, %"struct.std::__1::pair.988"*, %"class.std::__1::__compressed_pair.989" }
%"struct.std::__1::pair.988" = type opaque
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"struct.std::__1::pair.988"* }
%"struct.std::__1::pair.994" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.19"*, i16, i8*)*, i8* }
%"class.v8::Local.19" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.995" = type { %"class.std::__1::__compressed_pair.996" }
%"class.std::__1::__compressed_pair.996" = type { %"struct.std::__1::__compressed_pair_elem.997" }
%"struct.std::__1::__compressed_pair_elem.997" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.998", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.998" = type { %"class.std::__1::__hash_table.999" }
%"class.std::__1::__hash_table.999" = type <{ %"class.std::__1::unique_ptr.1000", %"class.std::__1::__compressed_pair.1010", %"class.std::__1::__compressed_pair.1015", %"class.std::__1::__compressed_pair.1019", [4 x i8] }>
%"class.std::__1::unique_ptr.1000" = type { %"class.std::__1::__compressed_pair.1001" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.1002", %"struct.std::__1::__compressed_pair_elem.1004" }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"struct.std::__1::__hash_node_base.1003"** }
%"struct.std::__1::__hash_node_base.1003" = type { %"struct.std::__1::__hash_node_base.1003"* }
%"struct.std::__1::__compressed_pair_elem.1004" = type { %"class.std::__1::__bucket_list_deallocator.1005" }
%"class.std::__1::__bucket_list_deallocator.1005" = type { %"class.std::__1::__compressed_pair.1006" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.1010" = type { %"struct.std::__1::__compressed_pair_elem.1011" }
%"struct.std::__1::__compressed_pair_elem.1011" = type { %"struct.std::__1::__hash_node_base.1003" }
%"class.std::__1::__compressed_pair.1015" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type { i32 (...)**, %"class.v8::internal::Isolate"*, [768 x i64], %"class.std::__1::unique_ptr.1027", i64 }
%"class.std::__1::unique_ptr.1027" = type { %"class.std::__1::__compressed_pair.1028" }
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { i64* }
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque.1032" }
%"class.std::__1::deque.1032" = type { %"class.std::__1::__deque_base.1033" }
%"class.std::__1::__deque_base.1033" = type { %"struct.std::__1::__split_buffer.1034", i64, %"class.std::__1::__compressed_pair.1041" }
%"struct.std::__1::__split_buffer.1034" = type { %"struct.std::__1::pair.1035"**, %"struct.std::__1::pair.1035"**, %"struct.std::__1::pair.1035"**, %"class.std::__1::__compressed_pair.1036" }
%"struct.std::__1::pair.1035" = type opaque
%"class.std::__1::__compressed_pair.1036" = type { %"struct.std::__1::__compressed_pair_elem.1037" }
%"struct.std::__1::__compressed_pair_elem.1037" = type { %"struct.std::__1::pair.1035"** }
%"class.std::__1::__compressed_pair.1041" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.v8::String" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.1046" = type { %"class.std::__1::__vector_base.1047" }
%"class.std::__1::__vector_base.1047" = type { %"class.v8::internal::Handle.770"*, %"class.v8::internal::Handle.770"*, %"class.std::__1::__compressed_pair.1048" }
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.1049" }
%"struct.std::__1::__compressed_pair_elem.1049" = type { %"class.v8::internal::Handle.770"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type { %"class.v8::MicrotaskQueue", i64, i64, i64, i64*, i64, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"*, i32, i32, i32, i8, %"class.std::__1::vector.1053" }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.std::__1::vector.1053" = type { %"class.std::__1::__vector_base.1054" }
%"class.std::__1::__vector_base.1054" = type { %"struct.std::__1::pair.1035"*, %"struct.std::__1::pair.1035"*, %"class.std::__1::__compressed_pair.1055" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"struct.std::__1::__compressed_pair_elem.1056" = type { %"struct.std::__1::pair.1035"* }
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.912", i32, %"class.v8::Local.19" }
%"class.v8::Local.912" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1057" = type { %"class.std::__1::__compressed_pair.1058" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.1059" }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.887", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1063" = type { %"class.std::__1::__vector_base.1064" }
%"class.std::__1::__vector_base.1064" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1065" }
%"class.std::__1::__compressed_pair.1065" = type { %"struct.std::__1::__compressed_pair_elem.1066" }
%"struct.std::__1::__compressed_pair_elem.1066" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1070" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1071" = type { %"class.std::__1::__hash_table.1072" }
%"class.std::__1::__hash_table.1072" = type <{ %"class.std::__1::unique_ptr.1073", %"class.std::__1::__compressed_pair.1083", %"class.std::__1::__compressed_pair.1088", %"class.std::__1::__compressed_pair.1091", [4 x i8] }>
%"class.std::__1::unique_ptr.1073" = type { %"class.std::__1::__compressed_pair.1074" }
%"class.std::__1::__compressed_pair.1074" = type { %"struct.std::__1::__compressed_pair_elem.1075", %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1075" = type { %"struct.std::__1::__hash_node_base.1076"** }
%"struct.std::__1::__hash_node_base.1076" = type { %"struct.std::__1::__hash_node_base.1076"* }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.std::__1::__bucket_list_deallocator.1078" }
%"class.std::__1::__bucket_list_deallocator.1078" = type { %"class.std::__1::__compressed_pair.1079" }
%"class.std::__1::__compressed_pair.1079" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.1083" = type { %"struct.std::__1::__compressed_pair_elem.1084" }
%"struct.std::__1::__compressed_pair_elem.1084" = type { %"struct.std::__1::__hash_node_base.1076" }
%"class.std::__1::__compressed_pair.1088" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.1091" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.189" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1095", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1124", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1125", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1095" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1120, %union.anon.1122, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1120 = type { i64 }
%union.anon.1122 = type { i64 }
%"class.std::__1::weak_ptr.1124" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.49", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.189" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1125" = type { %"class.v8::PersistentBase.1126" }
%"class.v8::PersistentBase.1126" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1096", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1096" = type { %"class.std::__1::__hash_table.1097" }
%"class.std::__1::__hash_table.1097" = type <{ %"class.std::__1::unique_ptr.1098", %"class.std::__1::__compressed_pair.1108", %"class.std::__1::__compressed_pair.1113", %"class.std::__1::__compressed_pair.1116", [4 x i8] }>
%"class.std::__1::unique_ptr.1098" = type { %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.1100", %"struct.std::__1::__compressed_pair_elem.1102" }
%"struct.std::__1::__compressed_pair_elem.1100" = type { %"struct.std::__1::__hash_node_base.1101"** }
%"struct.std::__1::__hash_node_base.1101" = type { %"struct.std::__1::__hash_node_base.1101"* }
%"struct.std::__1::__compressed_pair_elem.1102" = type { %"class.std::__1::__bucket_list_deallocator.1103" }
%"class.std::__1::__bucket_list_deallocator.1103" = type { %"class.std::__1::__compressed_pair.1104" }
%"class.std::__1::__compressed_pair.1104" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.1109" }
%"struct.std::__1::__compressed_pair_elem.1109" = type { %"struct.std::__1::__hash_node_base.1101" }
%"class.std::__1::__compressed_pair.1113" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.1116" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1127" = type { %"class.std::__1::__compressed_pair.1128" }
%"class.std::__1::__compressed_pair.1128" = type { %"struct.std::__1::__compressed_pair_elem.1129" }
%"struct.std::__1::__compressed_pair_elem.1129" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1156", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1132", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1136", %"class.std::__1::unique_ptr.1142", %"class.std::__1::unique_ptr.503", %"class.std::__1::vector.1148", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1132" = type { %"struct.std::__1::__atomic_base.1133" }
%"struct.std::__1::__atomic_base.1133" = type { %"struct.std::__1::__cxx_atomic_impl.1134" }
%"struct.std::__1::__cxx_atomic_impl.1134" = type { %"struct.std::__1::__cxx_atomic_base_impl.1135" }
%"struct.std::__1::__cxx_atomic_base_impl.1135" = type { i32 }
%"class.std::__1::unique_ptr.1136" = type { %"class.std::__1::__compressed_pair.1137" }
%"class.std::__1::__compressed_pair.1137" = type { %"struct.std::__1::__compressed_pair_elem.1138" }
%"struct.std::__1::__compressed_pair_elem.1138" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.887" }
%"class.std::__1::unique_ptr.1142" = type { %"class.std::__1::__compressed_pair.1143" }
%"class.std::__1::__compressed_pair.1143" = type { %"struct.std::__1::__compressed_pair_elem.1144" }
%"struct.std::__1::__compressed_pair_elem.1144" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1148" = type { %"class.std::__1::__vector_base.1149" }
%"class.std::__1::__vector_base.1149" = type { %"struct.std::__1::pair.1150"*, %"struct.std::__1::pair.1150"*, %"class.std::__1::__compressed_pair.1151" }
%"struct.std::__1::pair.1150" = type opaque
%"class.std::__1::__compressed_pair.1151" = type { %"struct.std::__1::__compressed_pair_elem.1152" }
%"struct.std::__1::__compressed_pair_elem.1152" = type { %"struct.std::__1::pair.1150"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.49"*, %"class.std::__1::unique_ptr.130" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.68", %"class.std::__1::vector.68", %"class.std::__1::unordered_set.75", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.70" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set.75" = type { %"class.std::__1::__hash_table.76" }
%"class.std::__1::__hash_table.76" = type <{ %"class.std::__1::unique_ptr.77", %"class.std::__1::__compressed_pair.87", %"class.std::__1::__compressed_pair.92", %"class.std::__1::__compressed_pair.96", [4 x i8] }>
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79", %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"struct.std::__1::__hash_node_base.80"** }
%"struct.std::__1::__hash_node_base.80" = type { %"struct.std::__1::__hash_node_base.80"* }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.std::__1::__bucket_list_deallocator.82" }
%"class.std::__1::__bucket_list_deallocator.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"struct.std::__1::__hash_node_base.80" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.49", %"struct.std::__1::atomic.54", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.119", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.49"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.54", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.54", %"struct.std::__1::atomic.101", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.101" = type { %"struct.std::__1::__atomic_base.102" }
%"struct.std::__1::__atomic_base.102" = type { %"struct.std::__1::__cxx_atomic_impl.103" }
%"struct.std::__1::__cxx_atomic_impl.103" = type { %"struct.std::__1::__cxx_atomic_base_impl.104" }
%"struct.std::__1::__cxx_atomic_base_impl.104" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.105" }
%"class.std::__1::vector.105" = type { %"class.std::__1::__vector_base.106" }
%"class.std::__1::__vector_base.106" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.107" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::atomic.119" = type { %"struct.std::__1::__atomic_base.120" }
%"struct.std::__1::__atomic_base.120" = type { %"struct.std::__1::__cxx_atomic_impl.121" }
%"struct.std::__1::__cxx_atomic_impl.121" = type { %"struct.std::__1::__cxx_atomic_base_impl.122" }
%"struct.std::__1::__cxx_atomic_base_impl.122" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.123", i8, [7 x i8] }>
%"class.std::__1::vector.123" = type { %"class.std::__1::__vector_base.124" }
%"class.std::__1::__vector_base.124" = type { i64*, i64*, %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.49", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1156" = type { %"class.std::__1::__compressed_pair.1157" }
%"class.std::__1::__compressed_pair.1157" = type { %"struct.std::__1::__compressed_pair_elem.1158" }
%"struct.std::__1::__compressed_pair_elem.1158" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1165" = type { %"class.std::__1::__compressed_pair.1166" }
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.1167" }
%"struct.std::__1::__compressed_pair_elem.1167" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.913", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.913" = type { %"class.v8::Context"* }
%"class.v8::Array" = type { i8 }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1173" }
%"class.std::__1::unordered_map.1173" = type { %"class.std::__1::__hash_table.1174" }
%"class.std::__1::__hash_table.1174" = type <{ %"class.std::__1::unique_ptr.1175", %"class.std::__1::__compressed_pair.1185", %"class.std::__1::__compressed_pair.1190", %"class.std::__1::__compressed_pair.1193", [4 x i8] }>
%"class.std::__1::unique_ptr.1175" = type { %"class.std::__1::__compressed_pair.1176" }
%"class.std::__1::__compressed_pair.1176" = type { %"struct.std::__1::__compressed_pair_elem.1177", %"struct.std::__1::__compressed_pair_elem.1179" }
%"struct.std::__1::__compressed_pair_elem.1177" = type { %"struct.std::__1::__hash_node_base.1178"** }
%"struct.std::__1::__hash_node_base.1178" = type { %"struct.std::__1::__hash_node_base.1178"* }
%"struct.std::__1::__compressed_pair_elem.1179" = type { %"class.std::__1::__bucket_list_deallocator.1180" }
%"class.std::__1::__bucket_list_deallocator.1180" = type { %"class.std::__1::__compressed_pair.1181" }
%"class.std::__1::__compressed_pair.1181" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.1185" = type { %"struct.std::__1::__compressed_pair_elem.1186" }
%"struct.std::__1::__compressed_pair_elem.1186" = type { %"struct.std::__1::__hash_node_base.1178" }
%"class.std::__1::__compressed_pair.1190" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.1193" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::atomic.1199" = type { %"struct.std::__1::__atomic_base.1200" }
%"struct.std::__1::__atomic_base.1200" = type { %"struct.std::__1::__cxx_atomic_impl.1201" }
%"struct.std::__1::__cxx_atomic_impl.1201" = type { %"struct.std::__1::__cxx_atomic_base_impl.1202" }
%"struct.std::__1::__cxx_atomic_base_impl.1202" = type { %"class.std::__1::vector.1203"* }
%"class.std::__1::vector.1203" = type { %"class.std::__1::__vector_base.1204" }
%"class.std::__1::__vector_base.1204" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1205" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1205" = type { %"struct.std::__1::__compressed_pair_elem.1206" }
%"struct.std::__1::__compressed_pair_elem.1206" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.59" = type { %"struct.std::__1::__atomic_base.60" }
%"struct.std::__1::__atomic_base.60" = type { %"struct.std::__1::__cxx_atomic_impl.61" }
%"struct.std::__1::__cxx_atomic_impl.61" = type { %"struct.std::__1::__cxx_atomic_base_impl.62" }
%"struct.std::__1::__cxx_atomic_base_impl.62" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.63" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.49", %"struct.std::__1::atomic.49", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.136" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.136" = type { %"class.std::__1::__vector_base.137" }
%"class.std::__1::__vector_base.137" = type { %"struct.std::__1::pair.138"*, %"struct.std::__1::pair.138"*, %"class.std::__1::__compressed_pair.139" }
%"struct.std::__1::pair.138" = type { i32, i64 }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"struct.std::__1::pair.138"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.49", i32, %"struct.std::__1::atomic.49", %"class.v8::base::Mutex", %"struct.std::__1::atomic.49" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.144" }
%"class.std::__1::unordered_map.144" = type { %"class.std::__1::__hash_table.145" }
%"class.std::__1::__hash_table.145" = type <{ %"class.std::__1::unique_ptr.146", %"class.std::__1::__compressed_pair.156", %"class.std::__1::__compressed_pair.161", %"class.std::__1::__compressed_pair.164", [4 x i8] }>
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148", %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"struct.std::__1::__hash_node_base.149"** }
%"struct.std::__1::__hash_node_base.149" = type { %"struct.std::__1::__hash_node_base.149"* }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.std::__1::__bucket_list_deallocator.151" }
%"class.std::__1::__bucket_list_deallocator.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base.149" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.181", %"struct.std::__1::atomic.185", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.49" }
%"struct.std::__1::atomic.185" = type { %"struct.std::__1::__atomic_base.186" }
%"struct.std::__1::__atomic_base.186" = type { %"struct.std::__1::__cxx_atomic_impl.187" }
%"struct.std::__1::__cxx_atomic_impl.187" = type { %"struct.std::__1::__cxx_atomic_base_impl.188" }
%"struct.std::__1::__cxx_atomic_base_impl.188" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.190" = type { %"struct.std::__1::__atomic_base.191" }
%"struct.std::__1::__atomic_base.191" = type { %"struct.std::__1::__cxx_atomic_impl.192" }
%"struct.std::__1::__cxx_atomic_impl.192" = type { %"struct.std::__1::__cxx_atomic_base_impl.193" }
%"struct.std::__1::__cxx_atomic_base_impl.193" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.196" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.255", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.309", %"class.std::__1::vector.309", %"class.std::__1::vector.309", %"class.std::__1::vector.316", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.210", %"class.std::__1::vector.211", %"class.std::__1::vector.218", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.210" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.211" = type { %"class.std::__1::__vector_base.212" }
%"class.std::__1::__vector_base.212" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.213" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.218" = type { %"class.std::__1::__vector_base.219" }
%"class.std::__1::__vector_base.219" = type { %"class.std::__1::unique_ptr.220"*, %"class.std::__1::unique_ptr.220"*, %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::unique_ptr.220" = type opaque
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.std::__1::unique_ptr.220"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.226", %"class.v8::internal::Worklist.228", %"class.v8::internal::Worklist.228", %"class.v8::internal::Worklist.228", %"class.v8::internal::Worklist.230", %"class.v8::internal::Worklist.232", %"class.v8::internal::Worklist.234", %"class.v8::internal::Worklist.236", %"class.v8::internal::Worklist.238", %"class.v8::internal::Worklist.240" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.v8::internal::Worklist.226" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.v8::internal::Worklist.228" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.v8::internal::Worklist.230" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.v8::internal::Worklist.232" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.v8::internal::Worklist.234" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.v8::internal::Worklist.236" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.v8::internal::Worklist.238" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.v8::internal::Worklist.240" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.49" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.242", i8, i64 }
%"class.std::__1::vector.242" = type { %"class.std::__1::__vector_base.243" }
%"class.std::__1::__vector_base.243" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.258" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.210"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.258" = type { %"class.std::__1::__hash_table.259" }
%"class.std::__1::__hash_table.259" = type <{ %"class.std::__1::unique_ptr.260", %"class.std::__1::__compressed_pair.270", %"class.std::__1::__compressed_pair.275", %"class.std::__1::__compressed_pair.278", [4 x i8] }>
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262", %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.263"** }
%"struct.std::__1::__hash_node_base.263" = type { %"struct.std::__1::__hash_node_base.263"* }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.std::__1::__bucket_list_deallocator.265" }
%"class.std::__1::__bucket_list_deallocator.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.std::__1::__hash_node_base.263" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.285" }
%"class.std::__1::unordered_map.285" = type { %"class.std::__1::__hash_table.286" }
%"class.std::__1::__hash_table.286" = type <{ %"class.std::__1::unique_ptr.287", %"class.std::__1::__compressed_pair.297", %"class.std::__1::__compressed_pair.302", %"class.std::__1::__compressed_pair.305", [4 x i8] }>
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289", %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.290"** }
%"struct.std::__1::__hash_node_base.290" = type { %"struct.std::__1::__hash_node_base.290"* }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.std::__1::__bucket_list_deallocator.292" }
%"class.std::__1::__bucket_list_deallocator.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"struct.std::__1::__hash_node_base.290" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::vector.309" = type { %"class.std::__1::__vector_base.310" }
%"class.std::__1::__vector_base.310" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.316" = type { %"class.std::__1::__vector_base.317" }
%"class.std::__1::__vector_base.317" = type { %"struct.std::__1::pair.318"*, %"struct.std::__1::pair.318"*, %"class.std::__1::__compressed_pair.319" }
%"struct.std::__1::pair.318" = type opaque
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"struct.std::__1::pair.318"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.324", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.309"], [3 x %"class.std::__1::vector.309"], i8, %"struct.std::__1::atomic.181", [6 x i8], %"class.std::__1::vector.309", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.334"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.309", %"class.std::__1::vector.309", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.334" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.49", %"struct.std::__1::atomic.49", %"struct.std::__1::atomic.49", %"struct.std::__1::atomic.49", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.359", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.352"], %"class.std::__1::unique_ptr.324" }
%"class.std::__1::vector.352" = type { %"class.std::__1::__vector_base.353" }
%"class.std::__1::__vector_base.353" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.354" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.388" = type { %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.391", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.395", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.400" }
%"struct.std::__1::atomic.391" = type { %"struct.std::__1::__atomic_base.392" }
%"struct.std::__1::__atomic_base.392" = type { %"struct.std::__1::__cxx_atomic_impl.393" }
%"struct.std::__1::__cxx_atomic_impl.393" = type { %"struct.std::__1::__cxx_atomic_base_impl.394" }
%"struct.std::__1::__cxx_atomic_base_impl.394" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.395" = type { %"struct.std::__1::__atomic_base.396" }
%"struct.std::__1::__atomic_base.396" = type { %"struct.std::__1::__cxx_atomic_impl.397" }
%"struct.std::__1::__cxx_atomic_impl.397" = type { %"struct.std::__1::__cxx_atomic_base_impl.398" }
%"struct.std::__1::__cxx_atomic_base_impl.398" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.400" = type { %"class.std::__1::__hash_table.401" }
%"class.std::__1::__hash_table.401" = type <{ %"class.std::__1::unique_ptr.402", %"class.std::__1::__compressed_pair.412", %"class.std::__1::__compressed_pair.417", %"class.std::__1::__compressed_pair.420", [4 x i8] }>
%"class.std::__1::unique_ptr.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404", %"struct.std::__1::__compressed_pair_elem.406" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"struct.std::__1::__hash_node_base.405"** }
%"struct.std::__1::__hash_node_base.405" = type { %"struct.std::__1::__hash_node_base.405"* }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"class.std::__1::__bucket_list_deallocator.407" }
%"class.std::__1::__bucket_list_deallocator.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"struct.std::__1::__hash_node_base.405" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::unique_ptr.427" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.324", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.49", %"struct.std::__1::atomic.181", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.430", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.430" = type { %"class.std::__1::__hash_table.431" }
%"class.std::__1::__hash_table.431" = type <{ %"class.std::__1::unique_ptr.432", %"class.std::__1::__compressed_pair.442", %"class.std::__1::__compressed_pair.447", %"class.std::__1::__compressed_pair.450", [4 x i8] }>
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434", %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"struct.std::__1::__hash_node_base.435"** }
%"struct.std::__1::__hash_node_base.435" = type { %"struct.std::__1::__hash_node_base.435"* }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.std::__1::__bucket_list_deallocator.437" }
%"class.std::__1::__bucket_list_deallocator.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"struct.std::__1::__hash_node_base.435" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.466" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::unique_ptr.473" = type { %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.479" = type { %"class.std::__1::__compressed_pair.480" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.491" = type { %"class.std::__1::__compressed_pair.492" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.497" = type { %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.503" = type { %"class.std::__1::__compressed_pair.504" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.505" }
%"struct.std::__1::__compressed_pair_elem.505" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.509" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.528", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.510", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.528" = type { %"struct.std::__1::__atomic_base.529" }
%"struct.std::__1::__atomic_base.529" = type { %"struct.std::__1::__cxx_atomic_impl.530" }
%"struct.std::__1::__cxx_atomic_impl.530" = type { %"struct.std::__1::__cxx_atomic_base_impl.531" }
%"struct.std::__1::__cxx_atomic_base_impl.531" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.532" = type { %"class.std::__1::__hash_table.533" }
%"class.std::__1::__hash_table.533" = type <{ %"class.std::__1::unique_ptr.534", %"class.std::__1::__compressed_pair.544", %"class.std::__1::__compressed_pair.549", %"class.std::__1::__compressed_pair.552", [4 x i8] }>
%"class.std::__1::unique_ptr.534" = type { %"class.std::__1::__compressed_pair.535" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.536", %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.536" = type { %"struct.std::__1::__hash_node_base.537"** }
%"struct.std::__1::__hash_node_base.537" = type { %"struct.std::__1::__hash_node_base.537"* }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.std::__1::__bucket_list_deallocator.539" }
%"class.std::__1::__bucket_list_deallocator.539" = type { %"class.std::__1::__compressed_pair.540" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"struct.std::__1::__hash_node_base.537" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.570", %"class.std::__1::vector.570" }
%"class.std::__1::unique_ptr.577" = type { %"class.std::__1::__compressed_pair.578" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.359" = type { %"class.std::__1::__hash_table.360" }
%"class.std::__1::__hash_table.360" = type <{ %"class.std::__1::unique_ptr.361", %"class.std::__1::__compressed_pair.371", %"class.std::__1::__compressed_pair.376", %"class.std::__1::__compressed_pair.380", [4 x i8] }>
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363", %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"struct.std::__1::__hash_node_base.364"** }
%"struct.std::__1::__hash_node_base.364" = type { %"struct.std::__1::__hash_node_base.364"* }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"class.std::__1::__bucket_list_deallocator.366" }
%"class.std::__1::__bucket_list_deallocator.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"struct.std::__1::__hash_node_base.364" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::unordered_map.609" = type { %"class.std::__1::__hash_table.610" }
%"class.std::__1::__hash_table.610" = type <{ %"class.std::__1::unique_ptr.611", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.626", %"class.std::__1::__compressed_pair.629", [4 x i8] }>
%"class.std::__1::unique_ptr.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.613", %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.613" = type { %"struct.std::__1::__hash_node_base.614"** }
%"struct.std::__1::__hash_node_base.614" = type { %"struct.std::__1::__hash_node_base.614"* }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.std::__1::__bucket_list_deallocator.616" }
%"class.std::__1::__bucket_list_deallocator.616" = type { %"class.std::__1::__compressed_pair.617" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.622" }
%"struct.std::__1::__compressed_pair_elem.622" = type { %"struct.std::__1::__hash_node_base.614" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::unordered_map.583" = type { %"class.std::__1::__hash_table.584" }
%"class.std::__1::__hash_table.584" = type <{ %"class.std::__1::unique_ptr.585", %"class.std::__1::__compressed_pair.595", %"class.std::__1::__compressed_pair.600", %"class.std::__1::__compressed_pair.603", [4 x i8] }>
%"class.std::__1::unique_ptr.585" = type { %"class.std::__1::__compressed_pair.586" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.587", %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"struct.std::__1::__hash_node_base.588"** }
%"struct.std::__1::__hash_node_base.588" = type { %"struct.std::__1::__hash_node_base.588"* }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"class.std::__1::__bucket_list_deallocator.590" }
%"class.std::__1::__bucket_list_deallocator.590" = type { %"class.std::__1::__compressed_pair.591" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"struct.std::__1::__compressed_pair_elem.596" = type { %"struct.std::__1::__hash_node_base.588" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::unordered_map.633" = type { %"class.std::__1::__hash_table.634" }
%"class.std::__1::__hash_table.634" = type <{ %"class.std::__1::unique_ptr.635", %"class.std::__1::__compressed_pair.645", %"class.std::__1::__compressed_pair.650", %"class.std::__1::__compressed_pair.655", [4 x i8] }>
%"class.std::__1::unique_ptr.635" = type { %"class.std::__1::__compressed_pair.636" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637", %"struct.std::__1::__compressed_pair_elem.639" }
%"struct.std::__1::__compressed_pair_elem.637" = type { %"struct.std::__1::__hash_node_base.638"** }
%"struct.std::__1::__hash_node_base.638" = type { %"struct.std::__1::__hash_node_base.638"* }
%"struct.std::__1::__compressed_pair_elem.639" = type { %"class.std::__1::__bucket_list_deallocator.640" }
%"class.std::__1::__bucket_list_deallocator.640" = type { %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"struct.std::__1::__compressed_pair_elem.646" = type { %"struct.std::__1::__hash_node_base.638" }
%"class.std::__1::__compressed_pair.650" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.655" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::vector.661" = type { %"class.std::__1::__vector_base.662" }
%"class.std::__1::__vector_base.662" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.663" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.668" = type { %"class.std::__1::__compressed_pair.669" }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.670" }
%"struct.std::__1::__compressed_pair_elem.670" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.49" = type { %"struct.std::__1::__atomic_base.50" }
%"struct.std::__1::__atomic_base.50" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__cxx_atomic_impl.52" }
%"struct.std::__1::__cxx_atomic_impl.52" = type { %"struct.std::__1::__cxx_atomic_base_impl.53" }
%"struct.std::__1::__cxx_atomic_base_impl.53" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.49", i64, %"struct.std::__1::atomic.49" }
%"class.std::__1::vector.168" = type { %"class.std::__1::__vector_base.169" }
%"class.std::__1::__vector_base.169" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.170" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.570" = type { %"class.std::__1::__vector_base.571" }
%"class.std::__1::__vector_base.571" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.572" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.573" }
%"struct.std::__1::__compressed_pair_elem.573" = type { %"class.v8::internal::Object"* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.v8::internal::BreakIterator" = type { %"class.v8::internal::Handle.1211", i32, i32, i32, %"class.v8::internal::SourcePositionTableIterator" }
%"class.v8::internal::Handle.1211" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::SourcePositionTableIterator" = type { %"class.v8::internal::Vector.1509", %"class.v8::internal::Handle.1510", i32, [4 x i8], %"struct.v8::internal::PositionTableEntry", i32, i32 }
%"class.v8::internal::Vector.1509" = type { i8*, i64 }
%"class.v8::internal::Handle.1510" = type { %"class.v8::internal::HandleBase" }
%"struct.v8::internal::PositionTableEntry" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.v8::internal::DebugScope" = type <{ %"class.v8::internal::Debug"*, %"class.v8::internal::DebugScope"*, i32, [4 x i8], %"class.v8::internal::PostponeInterruptsScope", i8, [7 x i8] }>
%"class.v8::internal::PostponeInterruptsScope" = type { %"class.v8::internal::InterruptsScope" }
%"class.v8::internal::ReturnValueScope" = type { %"class.v8::internal::Debug"*, %"class.v8::internal::Handle.1213" }
%"class.v8::internal::Handle.1213" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::BreakLocation" = type { %"class.v8::internal::Handle.1212", i32, i32, i32, i32 }
%"class.v8::internal::Handle.1212" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::JavaScriptFrame" = type { %"class.v8::internal::CommonFrameWithJSLinkage" }
%"class.v8::internal::CommonFrameWithJSLinkage" = type { %"class.v8::internal::CommonFrame" }
%"class.v8::internal::CommonFrame" = type { %"class.v8::internal::StackFrame" }
%"class.v8::internal::StackFrame" = type { i32 (...)**, %"class.v8::internal::StackFrameIteratorBase"*, %"class.v8::internal::Isolate"*, %"struct.v8::internal::StackFrame::State" }
%"class.v8::internal::StackFrameIteratorBase" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::EntryFrame", %"class.v8::internal::ConstructEntryFrame", %"class.v8::internal::ExitFrame", %"class.v8::internal::WasmFrame", %"class.v8::internal::WasmToJsFrame", %"class.v8::internal::JsToWasmFrame", %"class.v8::internal::WasmDebugBreakFrame", %"class.v8::internal::CWasmEntryFrame", %"class.v8::internal::WasmExitFrame", %"class.v8::internal::WasmCompileLazyFrame", %"class.v8::internal::InterpretedFrame", %"class.v8::internal::BaselineFrame", %"class.v8::internal::OptimizedFrame", %"class.v8::internal::StubFrame", %"class.v8::internal::BuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame", %"class.v8::internal::InternalFrame", %"class.v8::internal::ConstructFrame", %"class.v8::internal::BuiltinFrame", %"class.v8::internal::BuiltinExitFrame", %"class.v8::internal::NativeFrame", %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackHandler"*, i8, [7 x i8] }>
%"class.v8::internal::EntryFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::TypedFrame" = type { %"class.v8::internal::CommonFrame" }
%"class.v8::internal::ConstructEntryFrame" = type { %"class.v8::internal::EntryFrame" }
%"class.v8::internal::ExitFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::WasmFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::WasmToJsFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::JsToWasmFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::WasmDebugBreakFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::CWasmEntryFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::WasmExitFrame" = type { %"class.v8::internal::WasmFrame" }
%"class.v8::internal::WasmCompileLazyFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::InterpretedFrame" = type { %"class.v8::internal::UnoptimizedFrame" }
%"class.v8::internal::UnoptimizedFrame" = type { %"class.v8::internal::JavaScriptFrame" }
%"class.v8::internal::BaselineFrame" = type { %"class.v8::internal::UnoptimizedFrame" }
%"class.v8::internal::OptimizedFrame" = type { %"class.v8::internal::JavaScriptFrame" }
%"class.v8::internal::StubFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::BuiltinContinuationFrame" = type { %"class.v8::internal::InternalFrame" }
%"class.v8::internal::JavaScriptBuiltinContinuationFrame" = type { %"class.v8::internal::TypedFrameWithJSLinkage" }
%"class.v8::internal::TypedFrameWithJSLinkage" = type { %"class.v8::internal::CommonFrameWithJSLinkage" }
%"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame" = type { %"class.v8::internal::JavaScriptBuiltinContinuationFrame" }
%"class.v8::internal::InternalFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::ConstructFrame" = type { %"class.v8::internal::InternalFrame" }
%"class.v8::internal::BuiltinFrame" = type { %"class.v8::internal::TypedFrameWithJSLinkage" }
%"class.v8::internal::BuiltinExitFrame" = type { %"class.v8::internal::ExitFrame" }
%"class.v8::internal::NativeFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::StackHandler" = type { i8 }
%"struct.v8::internal::StackFrame::State" = type { i64, i64, i64*, i64, i64*, i64* }
%"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef" = type { %"class.v8::internal::DebugInfo" }
%"class.v8::internal::DebugInfo" = type { %"class.v8::internal::TorqueGeneratedDebugInfo" }
%"class.v8::internal::TorqueGeneratedDebugInfo" = type { %"class.v8::internal::Struct" }
%"class.v8::internal::Struct" = type { %"class.v8::internal::TorqueGeneratedStruct" }
%"class.v8::internal::TorqueGeneratedStruct" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FrameSummary" = type { %union.anon.1216 }
%union.anon.1216 = type { %"class.v8::internal::FrameSummary::JavaScriptFrameSummary" }
%"class.v8::internal::FrameSummary::JavaScriptFrameSummary" = type { %"class.v8::internal::FrameSummary::FrameSummaryBase.base", %"class.v8::internal::Handle.1213", %"class.v8::internal::Handle.1214", %"class.v8::internal::Handle.1212", i32, i8, %"class.v8::internal::Handle.1215" }
%"class.v8::internal::FrameSummary::FrameSummaryBase.base" = type <{ %"class.v8::internal::Isolate"*, i32 }>
%"class.v8::internal::Handle.1214" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1215" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::interpreter::BytecodeArrayIterator" = type { %"class.v8::internal::Handle.1521", i8*, i8*, i8*, i8, i32, %"class.v8::internal::LocalHeap"* }
%"class.v8::internal::Handle.1521" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::vector.1511" = type { %"class.std::__1::__vector_base.1512" }
%"class.std::__1::__vector_base.1512" = type { %"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*, %"class.std::__1::__compressed_pair.1513" }
%"class.std::__1::__compressed_pair.1513" = type { %"struct.std::__1::__compressed_pair_elem.1514" }
%"struct.std::__1::__compressed_pair_elem.1514" = type { %"class.v8::internal::BreakLocation"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::StackTraceFrameIterator" = type { %"class.v8::internal::StackFrameIterator" }
%"class.v8::internal::StackFrameIterator" = type { %"class.v8::internal::StackFrameIteratorBase.base", [7 x i8] }
%"class.v8::internal::StackFrameIteratorBase.base" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::EntryFrame", %"class.v8::internal::ConstructEntryFrame", %"class.v8::internal::ExitFrame", %"class.v8::internal::WasmFrame", %"class.v8::internal::WasmToJsFrame", %"class.v8::internal::JsToWasmFrame", %"class.v8::internal::WasmDebugBreakFrame", %"class.v8::internal::CWasmEntryFrame", %"class.v8::internal::WasmExitFrame", %"class.v8::internal::WasmCompileLazyFrame", %"class.v8::internal::InterpretedFrame", %"class.v8::internal::BaselineFrame", %"class.v8::internal::OptimizedFrame", %"class.v8::internal::StubFrame", %"class.v8::internal::BuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame", %"class.v8::internal::InternalFrame", %"class.v8::internal::ConstructFrame", %"class.v8::internal::BuiltinFrame", %"class.v8::internal::BuiltinExitFrame", %"class.v8::internal::NativeFrame", %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackHandler"*, i8 }>
%"class.v8::internal::Handle<v8::internal::AbstractCode>::ObjectRef" = type { %"class.v8::internal::AbstractCode" }
%"class.v8::internal::AbstractCode" = type { %"class.v8::internal::HeapObject" }
%"class.std::__1::vector.1542" = type { %"class.std::__1::__vector_base.1543" }
%"class.std::__1::__vector_base.1543" = type { %"class.v8::internal::Handle.769"*, %"class.v8::internal::Handle.769"*, %"class.std::__1::__compressed_pair.1544" }
%"class.std::__1::__compressed_pair.1544" = type { %"struct.std::__1::__compressed_pair_elem.1545" }
%"struct.std::__1::__compressed_pair_elem.1545" = type { %"class.v8::internal::Handle.769"* }
%"class.v8::internal::wasm::NativeModule" = type { %"class.v8::internal::wasm::WasmEngine"*, %"class.v8::internal::OperationsBarrier::Token", %"class.v8::internal::wasm::WasmCodeAllocator", %"class.v8::internal::wasm::WasmFeatures", %"class.std::__1::shared_ptr.1240", %"class.std::__1::unique_ptr.1424", %"class.std::__1::shared_ptr.1437", %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"*, %"class.std::__1::unique_ptr.1438", %"class.std::__1::unique_ptr.1444", %"class.std::__1::unique_ptr.1450", %"class.v8::base::RecursiveMutex", %"class.std::__1::map.1455", %"class.std::__1::vector.1464", %"class.std::__1::unique_ptr.1472", %"class.std::__1::vector.1478", %"class.std::__1::unique_ptr.1485", i8, %"class.std::__1::unique_ptr.1497", i8, i8, %"struct.std::__1::atomic.49", %"struct.std::__1::atomic.49", %"struct.std::__1::atomic.49" }
%"class.v8::internal::OperationsBarrier::Token" = type { %"class.v8::internal::OperationsBarrier"* }
%"class.v8::internal::OperationsBarrier" = type { %"class.v8::base::Mutex", %"class.v8::base::ConditionVariable", i8, i64 }
%"class.v8::internal::wasm::WasmCodeAllocator" = type { %"class.v8::internal::wasm::WasmCodeManager"*, %"class.v8::internal::wasm::DisjointAllocationPool", %"class.v8::internal::wasm::DisjointAllocationPool", %"class.v8::internal::wasm::DisjointAllocationPool", %"class.std::__1::vector.1234", i32, %"struct.std::__1::atomic.49", %"struct.std::__1::atomic.49", %"struct.std::__1::atomic.49", %"class.std::__1::shared_ptr.705" }
%"class.v8::internal::wasm::WasmCodeManager" = type { i64, %"struct.std::__1::atomic.49", %"struct.std::__1::atomic.49", i32, %"class.v8::base::Mutex", %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.1218" }
%"class.std::__1::__tree.1218" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1219", %"class.std::__1::__compressed_pair.1223" }
%"class.std::__1::__compressed_pair.1219" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.1223" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.v8::internal::wasm::DisjointAllocationPool" = type { %"class.std::__1::set.1226" }
%"class.std::__1::set.1226" = type { %"class.std::__1::__tree.1227" }
%"class.std::__1::__tree.1227" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1228", %"class.std::__1::__compressed_pair.1232" }
%"class.std::__1::__compressed_pair.1228" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.1232" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::vector.1234" = type { %"class.std::__1::__vector_base.1235" }
%"class.std::__1::__vector_base.1235" = type { %"class.v8::internal::VirtualMemory"*, %"class.v8::internal::VirtualMemory"*, %"class.std::__1::__compressed_pair.1236" }
%"class.std::__1::__compressed_pair.1236" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"class.v8::internal::wasm::WasmFeatures" = type { %"class.v8::base::EnumSet" }
%"class.v8::base::EnumSet" = type { i32 }
%"class.std::__1::shared_ptr.1240" = type { %"struct.v8::internal::wasm::WasmModule"*, %"class.std::__1::__shared_weak_count"* }
%"struct.v8::internal::wasm::WasmModule" = type { %"class.std::__1::unique_ptr.1241", i32, i32, i8, i8, i8, i8, i8, i32, %"class.std::__1::vector.1247", i32, i32, i32, i32, i32, i32, i32, i32, %"class.v8::internal::wasm::WireBytesRef", %"class.v8::internal::wasm::WireBytesRef", %"class.std::__1::vector.1261", %"class.std::__1::vector.1269", %"class.std::__1::vector.1276", %"class.std::__1::vector.1283", %"class.std::__1::vector.1290", %"class.std::__1::vector.1297", %"class.std::__1::vector.1304", %"class.std::__1::vector.1311", %"class.std::__1::vector.1318", %"class.std::__1::vector.1325", %"class.std::__1::vector.1338", %"class.std::__1::unordered_map.1345", %"class.v8::internal::wasm::SignatureMap", i8, %"class.v8::internal::wasm::LazilyGeneratedNames", %"struct.v8::internal::wasm::WasmDebugSymbols", %"class.std::__1::unique_ptr.1406" }
%"class.std::__1::unique_ptr.1241" = type { %"class.std::__1::__compressed_pair.1242" }
%"class.std::__1::__compressed_pair.1242" = type { %"struct.std::__1::__compressed_pair_elem.1243" }
%"struct.std::__1::__compressed_pair_elem.1243" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::vector.1247" = type { %"class.std::__1::__vector_base.1248" }
%"class.std::__1::__vector_base.1248" = type { %"struct.v8::internal::wasm::WasmGlobal"*, %"struct.v8::internal::wasm::WasmGlobal"*, %"class.std::__1::__compressed_pair.1256" }
%"struct.v8::internal::wasm::WasmGlobal" = type <{ %"class.v8::internal::wasm::ValueType", i8, [3 x i8], %"class.v8::internal::wasm::WasmInitExpr", %union.anon.1255, i8, i8, [2 x i8] }>
%"class.v8::internal::wasm::ValueType" = type { i32 }
%"class.v8::internal::wasm::WasmInitExpr" = type { %"union.v8::internal::wasm::WasmInitExpr::Immediate", i32, %"class.std::__1::unique_ptr.1249" }
%"union.v8::internal::wasm::WasmInitExpr::Immediate" = type { i64, [8 x i8] }
%"class.std::__1::unique_ptr.1249" = type { %"class.std::__1::__compressed_pair.1250" }
%"class.std::__1::__compressed_pair.1250" = type { %"struct.std::__1::__compressed_pair_elem.1251" }
%"struct.std::__1::__compressed_pair_elem.1251" = type { %"class.v8::internal::wasm::WasmInitExpr"* }
%union.anon.1255 = type { i32 }
%"class.std::__1::__compressed_pair.1256" = type { %"struct.std::__1::__compressed_pair_elem.1257" }
%"struct.std::__1::__compressed_pair_elem.1257" = type { %"struct.v8::internal::wasm::WasmGlobal"* }
%"class.v8::internal::wasm::WireBytesRef" = type { i32, i32 }
%"class.std::__1::vector.1261" = type { %"class.std::__1::__vector_base.1262" }
%"class.std::__1::__vector_base.1262" = type { %"struct.v8::internal::wasm::TypeDefinition"*, %"struct.v8::internal::wasm::TypeDefinition"*, %"class.std::__1::__compressed_pair.1264" }
%"struct.v8::internal::wasm::TypeDefinition" = type { %union.anon.1263 }
%union.anon.1263 = type { %"class.v8::internal::Signature"* }
%"class.v8::internal::Signature" = type { i64, i64, %"class.v8::internal::wasm::ValueType"* }
%"class.std::__1::__compressed_pair.1264" = type { %"struct.std::__1::__compressed_pair_elem.1265" }
%"struct.std::__1::__compressed_pair_elem.1265" = type { %"struct.v8::internal::wasm::TypeDefinition"* }
%"class.std::__1::vector.1269" = type { %"class.std::__1::__vector_base.1270" }
%"class.std::__1::__vector_base.1270" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1271" }
%"class.std::__1::__compressed_pair.1271" = type { %"struct.std::__1::__compressed_pair_elem.1272" }
%"struct.std::__1::__compressed_pair_elem.1272" = type { i8* }
%"class.std::__1::vector.1276" = type { %"class.std::__1::__vector_base.1277" }
%"class.std::__1::__vector_base.1277" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1278" }
%"class.std::__1::__compressed_pair.1278" = type { %"struct.std::__1::__compressed_pair_elem.1279" }
%"struct.std::__1::__compressed_pair_elem.1279" = type { i32* }
%"class.std::__1::vector.1283" = type { %"class.std::__1::__vector_base.1284" }
%"class.std::__1::__vector_base.1284" = type { %"struct.v8::internal::wasm::WasmFunction"*, %"struct.v8::internal::wasm::WasmFunction"*, %"class.std::__1::__compressed_pair.1285" }
%"struct.v8::internal::wasm::WasmFunction" = type <{ %"class.v8::internal::Signature"*, i32, i32, %"class.v8::internal::wasm::WireBytesRef", i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.1285" = type { %"struct.std::__1::__compressed_pair_elem.1286" }
%"struct.std::__1::__compressed_pair_elem.1286" = type { %"struct.v8::internal::wasm::WasmFunction"* }
%"class.std::__1::vector.1290" = type { %"class.std::__1::__vector_base.1291" }
%"class.std::__1::__vector_base.1291" = type { %"struct.v8::internal::wasm::WasmDataSegment"*, %"struct.v8::internal::wasm::WasmDataSegment"*, %"class.std::__1::__compressed_pair.1292" }
%"struct.v8::internal::wasm::WasmDataSegment" = type <{ %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WireBytesRef", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1292" = type { %"struct.std::__1::__compressed_pair_elem.1293" }
%"struct.std::__1::__compressed_pair_elem.1293" = type { %"struct.v8::internal::wasm::WasmDataSegment"* }
%"class.std::__1::vector.1297" = type { %"class.std::__1::__vector_base.1298" }
%"class.std::__1::__vector_base.1298" = type { %"struct.v8::internal::wasm::WasmTable"*, %"struct.v8::internal::wasm::WasmTable"*, %"class.std::__1::__compressed_pair.1299" }
%"struct.v8::internal::wasm::WasmTable" = type { %"class.v8::internal::wasm::ValueType", i32, i32, i8, i8, i8, %"class.v8::internal::wasm::WasmInitExpr" }
%"class.std::__1::__compressed_pair.1299" = type { %"struct.std::__1::__compressed_pair_elem.1300" }
%"struct.std::__1::__compressed_pair_elem.1300" = type { %"struct.v8::internal::wasm::WasmTable"* }
%"class.std::__1::vector.1304" = type { %"class.std::__1::__vector_base.1305" }
%"class.std::__1::__vector_base.1305" = type { %"struct.v8::internal::wasm::WasmImport"*, %"struct.v8::internal::wasm::WasmImport"*, %"class.std::__1::__compressed_pair.1306" }
%"struct.v8::internal::wasm::WasmImport" = type { %"class.v8::internal::wasm::WireBytesRef", %"class.v8::internal::wasm::WireBytesRef", i8, i32 }
%"class.std::__1::__compressed_pair.1306" = type { %"struct.std::__1::__compressed_pair_elem.1307" }
%"struct.std::__1::__compressed_pair_elem.1307" = type { %"struct.v8::internal::wasm::WasmImport"* }
%"class.std::__1::vector.1311" = type { %"class.std::__1::__vector_base.1312" }
%"class.std::__1::__vector_base.1312" = type { %"struct.v8::internal::wasm::WasmExport"*, %"struct.v8::internal::wasm::WasmExport"*, %"class.std::__1::__compressed_pair.1313" }
%"struct.v8::internal::wasm::WasmExport" = type { %"class.v8::internal::wasm::WireBytesRef", i8, i32 }
%"class.std::__1::__compressed_pair.1313" = type { %"struct.std::__1::__compressed_pair_elem.1314" }
%"struct.std::__1::__compressed_pair_elem.1314" = type { %"struct.v8::internal::wasm::WasmExport"* }
%"class.std::__1::vector.1318" = type { %"class.std::__1::__vector_base.1319" }
%"class.std::__1::__vector_base.1319" = type { %"struct.v8::internal::wasm::WasmException"*, %"struct.v8::internal::wasm::WasmException"*, %"class.std::__1::__compressed_pair.1320" }
%"struct.v8::internal::wasm::WasmException" = type { %"class.v8::internal::Signature"* }
%"class.std::__1::__compressed_pair.1320" = type { %"struct.std::__1::__compressed_pair_elem.1321" }
%"struct.std::__1::__compressed_pair_elem.1321" = type { %"struct.v8::internal::wasm::WasmException"* }
%"class.std::__1::vector.1325" = type { %"class.std::__1::__vector_base.1326" }
%"class.std::__1::__vector_base.1326" = type { %"struct.v8::internal::wasm::WasmElemSegment"*, %"struct.v8::internal::wasm::WasmElemSegment"*, %"class.std::__1::__compressed_pair.1333" }
%"struct.v8::internal::wasm::WasmElemSegment" = type <{ %"class.v8::internal::wasm::ValueType", i32, %"class.v8::internal::wasm::WasmInitExpr", %"class.std::__1::vector.1327", i32, [4 x i8] }>
%"class.std::__1::vector.1327" = type { %"class.std::__1::__vector_base.1328" }
%"class.std::__1::__vector_base.1328" = type { %"class.v8::internal::wasm::WasmInitExpr"*, %"class.v8::internal::wasm::WasmInitExpr"*, %"class.std::__1::__compressed_pair.1329" }
%"class.std::__1::__compressed_pair.1329" = type { %"struct.std::__1::__compressed_pair_elem.1251" }
%"class.std::__1::__compressed_pair.1333" = type { %"struct.std::__1::__compressed_pair_elem.1334" }
%"struct.std::__1::__compressed_pair_elem.1334" = type { %"struct.v8::internal::wasm::WasmElemSegment"* }
%"class.std::__1::vector.1338" = type { %"class.std::__1::__vector_base.1339" }
%"class.std::__1::__vector_base.1339" = type { %"struct.v8::internal::wasm::WasmCompilationHint"*, %"struct.v8::internal::wasm::WasmCompilationHint"*, %"class.std::__1::__compressed_pair.1340" }
%"struct.v8::internal::wasm::WasmCompilationHint" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.1340" = type { %"struct.std::__1::__compressed_pair_elem.1341" }
%"struct.std::__1::__compressed_pair_elem.1341" = type { %"struct.v8::internal::wasm::WasmCompilationHint"* }
%"class.std::__1::unordered_map.1345" = type { %"class.std::__1::__hash_table.1346" }
%"class.std::__1::__hash_table.1346" = type <{ %"class.std::__1::unique_ptr.1347", %"class.std::__1::__compressed_pair.1357", %"class.std::__1::__compressed_pair.1362", %"class.std::__1::__compressed_pair.1367", [4 x i8] }>
%"class.std::__1::unique_ptr.1347" = type { %"class.std::__1::__compressed_pair.1348" }
%"class.std::__1::__compressed_pair.1348" = type { %"struct.std::__1::__compressed_pair_elem.1349", %"struct.std::__1::__compressed_pair_elem.1351" }
%"struct.std::__1::__compressed_pair_elem.1349" = type { %"struct.std::__1::__hash_node_base.1350"** }
%"struct.std::__1::__hash_node_base.1350" = type { %"struct.std::__1::__hash_node_base.1350"* }
%"struct.std::__1::__compressed_pair_elem.1351" = type { %"class.std::__1::__bucket_list_deallocator.1352" }
%"class.std::__1::__bucket_list_deallocator.1352" = type { %"class.std::__1::__compressed_pair.1353" }
%"class.std::__1::__compressed_pair.1353" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.1357" = type { %"struct.std::__1::__compressed_pair_elem.1358" }
%"struct.std::__1::__compressed_pair_elem.1358" = type { %"struct.std::__1::__hash_node_base.1350" }
%"class.std::__1::__compressed_pair.1362" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.1367" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.v8::internal::wasm::SignatureMap" = type { i8, [7 x i8], %"class.std::__1::unordered_map.1373" }
%"class.std::__1::unordered_map.1373" = type { %"class.std::__1::__hash_table.1374" }
%"class.std::__1::__hash_table.1374" = type <{ %"class.std::__1::unique_ptr.1375", %"class.std::__1::__compressed_pair.1385", %"class.std::__1::__compressed_pair.1390", %"class.std::__1::__compressed_pair.1393", [4 x i8] }>
%"class.std::__1::unique_ptr.1375" = type { %"class.std::__1::__compressed_pair.1376" }
%"class.std::__1::__compressed_pair.1376" = type { %"struct.std::__1::__compressed_pair_elem.1377", %"struct.std::__1::__compressed_pair_elem.1379" }
%"struct.std::__1::__compressed_pair_elem.1377" = type { %"struct.std::__1::__hash_node_base.1378"** }
%"struct.std::__1::__hash_node_base.1378" = type { %"struct.std::__1::__hash_node_base.1378"* }
%"struct.std::__1::__compressed_pair_elem.1379" = type { %"class.std::__1::__bucket_list_deallocator.1380" }
%"class.std::__1::__bucket_list_deallocator.1380" = type { %"class.std::__1::__compressed_pair.1381" }
%"class.std::__1::__compressed_pair.1381" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.1385" = type { %"struct.std::__1::__compressed_pair_elem.1386" }
%"struct.std::__1::__compressed_pair_elem.1386" = type { %"struct.std::__1::__hash_node_base.1378" }
%"class.std::__1::__compressed_pair.1390" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.1393" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.v8::internal::wasm::LazilyGeneratedNames" = type { %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.1399" }
%"class.std::__1::unique_ptr.1399" = type { %"class.std::__1::__compressed_pair.1400" }
%"class.std::__1::__compressed_pair.1400" = type { %"struct.std::__1::__compressed_pair_elem.1401" }
%"struct.std::__1::__compressed_pair_elem.1401" = type { %"class.std::__1::unordered_map.1402"* }
%"class.std::__1::unordered_map.1402" = type opaque
%"struct.v8::internal::wasm::WasmDebugSymbols" = type { i32, %"class.v8::internal::wasm::WireBytesRef" }
%"class.std::__1::unique_ptr.1406" = type { %"class.std::__1::__compressed_pair.1407" }
%"class.std::__1::__compressed_pair.1407" = type { %"struct.std::__1::__compressed_pair_elem.1408" }
%"struct.std::__1::__compressed_pair_elem.1408" = type { %"class.v8::internal::wasm::AsmJsOffsetInformation"* }
%"class.v8::internal::wasm::AsmJsOffsetInformation" = type { %"class.v8::base::Mutex", %"class.v8::internal::OwnedVector", %"class.std::__1::unique_ptr.1415" }
%"class.v8::internal::OwnedVector" = type { %"class.std::__1::unique_ptr.1409", i64 }
%"class.std::__1::unique_ptr.1409" = type { %"class.std::__1::__compressed_pair.1410" }
%"class.std::__1::__compressed_pair.1410" = type { %"struct.std::__1::__compressed_pair_elem.1411" }
%"struct.std::__1::__compressed_pair_elem.1411" = type { i8* }
%"class.std::__1::unique_ptr.1415" = type { %"class.std::__1::__compressed_pair.1416" }
%"class.std::__1::__compressed_pair.1416" = type { %"struct.std::__1::__compressed_pair_elem.1417" }
%"struct.std::__1::__compressed_pair_elem.1417" = type { %"struct.v8::internal::wasm::AsmJsOffsets"* }
%"struct.v8::internal::wasm::AsmJsOffsets" = type opaque
%"class.std::__1::unique_ptr.1424" = type { %"class.std::__1::__compressed_pair.1425" }
%"class.std::__1::__compressed_pair.1425" = type { %"struct.std::__1::__compressed_pair_elem.1426" }
%"struct.std::__1::__compressed_pair_elem.1426" = type { %"class.v8::internal::wasm::WasmModuleSourceMap"* }
%"class.v8::internal::wasm::WasmModuleSourceMap" = type <{ %"class.std::__1::vector.123", %"class.std::__1::vector.1427", %"class.std::__1::vector.123", %"class.std::__1::vector.123", i8, [7 x i8] }>
%"class.std::__1::vector.1427" = type { %"class.std::__1::__vector_base.1428" }
%"class.std::__1::__vector_base.1428" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1429" }
%"class.std::__1::__compressed_pair.1429" = type { %"struct.std::__1::__compressed_pair_elem.1430" }
%"struct.std::__1::__compressed_pair_elem.1430" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::shared_ptr.1437" = type { %"class.v8::internal::OwnedVector"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::WasmCode" = type { %"class.v8::internal::wasm::NativeModule"*, i8*, i8, %"class.std::__1::unique_ptr.1409", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::atomic.1504" }
%"struct.std::__1::atomic.1504" = type { %"struct.std::__1::__atomic_base.1505" }
%"struct.std::__1::__atomic_base.1505" = type { %"struct.std::__1::__atomic_base.1506" }
%"struct.std::__1::__atomic_base.1506" = type { %"struct.std::__1::__cxx_atomic_impl.1507" }
%"struct.std::__1::__cxx_atomic_impl.1507" = type { %"struct.std::__1::__cxx_atomic_base_impl.1508" }
%"struct.std::__1::__cxx_atomic_base_impl.1508" = type { i32 }
%"class.std::__1::unique_ptr.1438" = type { %"class.std::__1::__compressed_pair.1439" }
%"class.std::__1::__compressed_pair.1439" = type { %"struct.std::__1::__compressed_pair_elem.1440" }
%"struct.std::__1::__compressed_pair_elem.1440" = type { %"class.v8::internal::wasm::CompilationState"* }
%"class.v8::internal::wasm::CompilationState" = type { i8 }
%"class.std::__1::unique_ptr.1444" = type { %"class.std::__1::__compressed_pair.1445" }
%"class.std::__1::__compressed_pair.1445" = type { %"struct.std::__1::__compressed_pair_elem.1446" }
%"struct.std::__1::__compressed_pair_elem.1446" = type { %"class.v8::internal::wasm::WasmImportWrapperCache"* }
%"class.v8::internal::wasm::WasmImportWrapperCache" = type opaque
%"class.std::__1::unique_ptr.1450" = type { %"class.std::__1::__compressed_pair.1451" }
%"class.std::__1::__compressed_pair.1451" = type { %"struct.std::__1::__compressed_pair_elem.1279" }
%"class.std::__1::map.1455" = type { %"class.std::__1::__tree.1456" }
%"class.std::__1::__tree.1456" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1457", %"class.std::__1::__compressed_pair.1461" }
%"class.std::__1::__compressed_pair.1457" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.1461" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::vector.1464" = type { %"class.std::__1::__vector_base.1465" }
%"class.std::__1::__vector_base.1465" = type { %"class.std::__1::unique_ptr.1466"*, %"class.std::__1::unique_ptr.1466"*, %"class.std::__1::__compressed_pair.1467" }
%"class.std::__1::unique_ptr.1466" = type opaque
%"class.std::__1::__compressed_pair.1467" = type { %"struct.std::__1::__compressed_pair_elem.1468" }
%"struct.std::__1::__compressed_pair_elem.1468" = type { %"class.std::__1::unique_ptr.1466"* }
%"class.std::__1::unique_ptr.1472" = type { %"class.std::__1::__compressed_pair.1473" }
%"class.std::__1::__compressed_pair.1473" = type { %"struct.std::__1::__compressed_pair_elem.1474" }
%"struct.std::__1::__compressed_pair_elem.1474" = type { %"class.v8::internal::wasm::WasmCode"** }
%"class.std::__1::vector.1478" = type { %"class.std::__1::__vector_base.1479" }
%"class.std::__1::__vector_base.1479" = type { %"struct.v8::internal::wasm::NativeModule::CodeSpaceData"*, %"struct.v8::internal::wasm::NativeModule::CodeSpaceData"*, %"class.std::__1::__compressed_pair.1480" }
%"struct.v8::internal::wasm::NativeModule::CodeSpaceData" = type { %"class.v8::base::AddressRegion", %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"* }
%"class.std::__1::__compressed_pair.1480" = type { %"struct.std::__1::__compressed_pair_elem.1481" }
%"struct.std::__1::__compressed_pair_elem.1481" = type { %"struct.v8::internal::wasm::NativeModule::CodeSpaceData"* }
%"class.std::__1::unique_ptr.1485" = type { %"class.std::__1::__compressed_pair.1486" }
%"class.std::__1::__compressed_pair.1486" = type { %"struct.std::__1::__compressed_pair_elem.1487" }
%"struct.std::__1::__compressed_pair_elem.1487" = type { %"class.v8::internal::wasm::DebugInfo"* }
%"class.v8::internal::wasm::DebugInfo" = type { %"class.std::__1::unique_ptr.1488" }
%"class.std::__1::unique_ptr.1488" = type { %"class.std::__1::__compressed_pair.1489" }
%"class.std::__1::__compressed_pair.1489" = type { %"struct.std::__1::__compressed_pair_elem.1490" }
%"struct.std::__1::__compressed_pair_elem.1490" = type { %"class.v8::internal::wasm::DebugInfoImpl"* }
%"class.v8::internal::wasm::DebugInfoImpl" = type opaque
%"class.std::__1::unique_ptr.1497" = type { %"class.std::__1::__compressed_pair.1498" }
%"class.std::__1::__compressed_pair.1498" = type { %"struct.std::__1::__compressed_pair_elem.1499" }
%"struct.std::__1::__compressed_pair_elem.1499" = type { %"class.std::__1::map.1500"* }
%"class.std::__1::map.1500" = type opaque
%"class.v8::internal::RootVisitor" = type { i32 (...)** }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1211"*)* }
%"class.std::__1::shared_ptr.1613" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Script" = type { %"class.v8::internal::TorqueGeneratedScript" }
%"class.v8::internal::TorqueGeneratedScript" = type { %"class.v8::internal::Struct" }
%"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef" = type { %"class.v8::internal::SharedFunctionInfo" }
%"class.v8::internal::IsCompiledScope" = type <{ %"class.v8::internal::MaybeHandle.1570", i8, [7 x i8] }>
%"class.v8::internal::MaybeHandle.1570" = type { i64* }
%"class.v8::internal::RedirectActiveFunctions" = type <{ %"class.v8::internal::ThreadVisitor", %"class.v8::internal::SharedFunctionInfo", i32, [4 x i8] }>
%"class.v8::internal::ThreadVisitor" = type { i32 (...)** }
%"class.v8::internal::Handle<v8::internal::FixedArray>::ObjectRef" = type { %"class.v8::internal::FixedArray" }
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.v8::internal::Handle<v8::internal::Object>::ObjectRef" = type { %"class.v8::internal::Object" }
%"class.v8::internal::BreakPointInfo" = type { %"class.v8::internal::TorqueGeneratedBreakPointInfo" }
%"class.v8::internal::TorqueGeneratedBreakPointInfo" = type { %"class.v8::internal::Struct" }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::MaybeObjectHandle" = type { i32, %"class.v8::internal::MaybeHandle.1524" }
%"class.v8::internal::MaybeHandle.1524" = type { i64* }
%"class.v8::internal::SharedFunctionInfoFinder" = type { %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::JSFunction", i32, i32 }
%"class.v8::internal::SharedFunctionInfo::ScriptIterator" = type <{ %"class.v8::internal::Handle.1579", i32, [4 x i8] }>
%"class.v8::internal::Handle.1579" = type { %"class.v8::internal::HandleBase" }
%"class.v8::debug::Location" = type <{ i32, i32, i8, [3 x i8] }>
%"struct.v8::internal::Script::PositionInfo" = type { i32, i32, i32, i32 }
%"class.v8::debug::Script" = type { i8 }
%"class.v8::internal::JavaScriptFrameIterator" = type { %"class.v8::internal::StackFrameIterator" }
%"class.std::__1::vector.1528" = type { %"class.std::__1::__vector_base.1529" }
%"class.std::__1::__vector_base.1529" = type { %"class.v8::internal::SharedFunctionInfo"*, %"class.v8::internal::SharedFunctionInfo"*, %"class.std::__1::__compressed_pair.1530" }
%"class.std::__1::__compressed_pair.1530" = type { %"struct.std::__1::__compressed_pair_elem.1531" }
%"struct.std::__1::__compressed_pair_elem.1531" = type { %"class.v8::internal::SharedFunctionInfo"* }
%"class.std::__1::vector.1535" = type { %"class.std::__1::__vector_base.1536" }
%"class.std::__1::__vector_base.1536" = type { %"class.v8::internal::FrameSummary"*, %"class.v8::internal::FrameSummary"*, %"class.std::__1::__compressed_pair.1537" }
%"class.std::__1::__compressed_pair.1537" = type { %"struct.std::__1::__compressed_pair_elem.1538" }
%"struct.std::__1::__compressed_pair_elem.1538" = type { %"class.v8::internal::FrameSummary"* }
%"class.v8::internal::HandlerTable" = type { i32, i64 }
%"class.v8::internal::(anonymous namespace)::DiscardBaselineCodeVisitor" = type { %"class.v8::internal::ThreadVisitor", %"class.v8::internal::SharedFunctionInfo" }
%"class.v8::internal::HeapObjectIterator" = type { %"class.v8::internal::Heap"*, %"class.std::__1::unique_ptr.1550", i32, %"class.v8::internal::HeapObjectsFilter"*, %"class.v8::internal::SpaceIterator"*, %"class.std::__1::unique_ptr.1556" }
%"class.std::__1::unique_ptr.1550" = type { %"class.std::__1::__compressed_pair.1551" }
%"class.std::__1::__compressed_pair.1551" = type { %"struct.std::__1::__compressed_pair_elem.1552" }
%"struct.std::__1::__compressed_pair_elem.1552" = type { %"class.v8::internal::SafepointScope"* }
%"class.v8::internal::SafepointScope" = type opaque
%"class.v8::internal::HeapObjectsFilter" = type opaque
%"class.v8::internal::SpaceIterator" = type <{ i32 (...)**, %"class.v8::internal::Heap"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1556" = type { %"class.std::__1::__compressed_pair.1557" }
%"class.std::__1::__compressed_pair.1557" = type { %"struct.std::__1::__compressed_pair_elem.1558" }
%"struct.std::__1::__compressed_pair_elem.1558" = type { %"class.v8::internal::ObjectIterator"* }
%"class.v8::internal::ObjectIterator" = type { i32 (...)** }
%"class.v8::internal::Handle<v8::internal::Code>::ObjectRef" = type { %"class.v8::internal::Code" }
%"class.v8::internal::Code::OptimizedCodeIterator" = type { %"class.v8::internal::NativeContext", %"class.v8::internal::Code", %"class.v8::internal::Isolate"* }
%"class.v8::internal::NativeContext" = type { %"class.v8::internal::Context" }
%"class.std::__1::vector.1563" = type { %"class.std::__1::__vector_base.1564" }
%"class.std::__1::__vector_base.1564" = type { %"class.v8::internal::Handle.1214"*, %"class.v8::internal::Handle.1214"*, %"class.std::__1::__compressed_pair.1565" }
%"class.std::__1::__compressed_pair.1565" = type { %"struct.std::__1::__compressed_pair_elem.1566" }
%"struct.std::__1::__compressed_pair_elem.1566" = type { %"class.v8::internal::Handle.1214"* }
%"class.std::__1::vector.1572" = type { %"class.std::__1::__vector_base.1573" }
%"class.std::__1::__vector_base.1573" = type { %"class.v8::internal::IsCompiledScope"*, %"class.v8::internal::IsCompiledScope"*, %"class.std::__1::__compressed_pair.1574" }
%"class.std::__1::__compressed_pair.1574" = type { %"struct.std::__1::__compressed_pair_elem.1575" }
%"struct.std::__1::__compressed_pair_elem.1575" = type { %"class.v8::internal::IsCompiledScope"* }
%"class.v8::internal::UnoptimizedCompileState" = type { i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::PendingCompilationErrorHandler", %"class.v8::internal::Logger"*, %"class.std::__1::unique_ptr.1627" }
%"class.v8::internal::PendingCompilationErrorHandler" = type { i8, i8, i8, [5 x i8], %"class.v8::internal::PendingCompilationErrorHandler::MessageDetails", %"class.std::__1::forward_list" }
%"class.v8::internal::PendingCompilationErrorHandler::MessageDetails" = type <{ i32, i32, i32, [4 x i8], %union.anon.1621, i32, [4 x i8] }>
%union.anon.1621 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::AstRawString" = type opaque
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.1622" }
%"class.std::__1::__compressed_pair.1622" = type { %"struct.std::__1::__compressed_pair_elem.1623" }
%"struct.std::__1::__compressed_pair_elem.1623" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.v8::internal::PendingCompilationErrorHandler::MessageDetails" }
%"class.std::__1::unique_ptr.1627" = type { %"class.std::__1::__compressed_pair.1628" }
%"class.std::__1::__compressed_pair.1628" = type { %"struct.std::__1::__compressed_pair_elem.1629" }
%"struct.std::__1::__compressed_pair_elem.1629" = type { %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* }
%"class.v8::internal::UnoptimizedCompileState::ParallelTasks" = type { %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::forward_list.1630" }
%"class.std::__1::forward_list.1630" = type { %"class.std::__1::__forward_list_base.1631" }
%"class.std::__1::__forward_list_base.1631" = type { %"class.std::__1::__compressed_pair.1632" }
%"class.std::__1::__compressed_pair.1632" = type { %"struct.std::__1::__compressed_pair_elem.1633" }
%"struct.std::__1::__compressed_pair_elem.1633" = type { %"struct.std::__1::__forward_begin_node.1634" }
%"struct.std::__1::__forward_begin_node.1634" = type { %"struct.std::__1::__forward_list_node.1635"* }
%"struct.std::__1::__forward_list_node.1635" = type { %"struct.std::__1::__forward_begin_node.1634", %"struct.std::__1::pair.1642" }
%"struct.std::__1::pair.1642" = type { %"class.v8::internal::FunctionLiteral"*, i64 }
%"class.v8::internal::FunctionLiteral" = type opaque
%"class.v8::internal::ParseInfo" = type <{ %"class.v8::internal::UnoptimizedCompileFlags", [4 x i8], %"class.v8::internal::UnoptimizedCompileState"*, %"class.std::__1::unique_ptr.1241", %"class.v8::Extension"*, %"class.v8::internal::DeclarationScope"*, i64, i32, i32, %"class.std::__1::unique_ptr.1643", %"class.std::__1::unique_ptr.1649", %"class.std::__1::unique_ptr.1655", %"class.v8::internal::AstRawString"*, %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::SourceRangeMap"*, %"class.v8::internal::FunctionLiteral"*, i8, [7 x i8] }>
%"class.v8::internal::UnoptimizedCompileFlags" = type <{ i32, i32, i8, i8, [2 x i8] }>
%"class.v8::Extension" = type <{ i32 (...)**, i8*, i64, %"class.v8::String::ExternalOneByteStringResource"*, i32, [4 x i8], i8**, i8, [7 x i8] }>
%"class.v8::String::ExternalOneByteStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i8* }
%"class.v8::String::ExternalStringResourceBase" = type { i32 (...)** }
%"class.v8::internal::DeclarationScope" = type opaque
%"class.std::__1::unique_ptr.1643" = type { %"class.std::__1::__compressed_pair.1644" }
%"class.std::__1::__compressed_pair.1644" = type { %"struct.std::__1::__compressed_pair_elem.1645" }
%"struct.std::__1::__compressed_pair_elem.1645" = type { %"class.v8::internal::Utf16CharacterStream"* }
%"class.v8::internal::Utf16CharacterStream" = type opaque
%"class.std::__1::unique_ptr.1649" = type { %"class.std::__1::__compressed_pair.1650" }
%"class.std::__1::__compressed_pair.1650" = type { %"struct.std::__1::__compressed_pair_elem.1651" }
%"struct.std::__1::__compressed_pair_elem.1651" = type { %"class.v8::internal::ConsumedPreparseData"* }
%"class.v8::internal::ConsumedPreparseData" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1655" = type { %"class.std::__1::__compressed_pair.1656" }
%"class.std::__1::__compressed_pair.1656" = type { %"struct.std::__1::__compressed_pair_elem.1657" }
%"struct.std::__1::__compressed_pair_elem.1657" = type { %"class.v8::internal::AstValueFactory"* }
%"class.v8::internal::AstValueFactory" = type opaque
%"class.v8::internal::SourceRangeMap" = type opaque
%"class.v8::internal::Script::Iterator" = type { %"class.v8::internal::WeakArrayList::Iterator" }
%"class.v8::internal::WeakArrayList::Iterator" = type { i32, %"class.v8::internal::WeakArrayList" }
%"class.v8::internal::WeakArrayList" = type { %"class.v8::internal::TorqueGeneratedWeakArrayList" }
%"class.v8::internal::TorqueGeneratedWeakArrayList" = type { %"class.v8::internal::HeapObject" }
%"class.v8::String::ExternalStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i16* }
%"class.v8::internal::StackLimitCheck" = type { %"class.v8::internal::Isolate"* }
%"class.v8::internal::LookupIterator" = type { i32, i32, i8, i32, %"class.v8::internal::PropertyDetails", %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1590", %"class.v8::internal::Handle.1213", %"class.v8::internal::Handle.1213", %"class.v8::internal::Handle.1589", %"class.v8::internal::Handle.1213", i64, %"class.v8::internal::InternalIndex" }
%"class.v8::internal::PropertyDetails" = type { i32 }
%"class.v8::internal::Handle.1590" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1589" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::InternalIndex" = type { i64 }
%"struct.v8::debug::LiveEditResult" = type { i32, i8, %"class.v8::Local.1594", %"class.v8::Local.915", i32, i32 }
%"class.v8::Local.1594" = type { %"class.v8::debug::Script"* }
%"class.v8::Local.915" = type { %"class.v8::String"* }
%"class.v8::internal::Handle<v8::internal::Script>::ObjectRef" = type { %"class.v8::internal::Script" }
%"class.v8::internal::PerIsolateAssertScope" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::MessageLocation" = type { %"class.v8::internal::Handle.1525", i32, i32, i32, %"class.v8::internal::Handle.769" }
%"class.v8::internal::Handle.1525" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::PerIsolateAssertScope.1595" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1665" = type { %"class.std::__1::__compressed_pair.1666" }
%"class.std::__1::__compressed_pair.1666" = type { %"struct.std::__1::__compressed_pair_elem.1667", %"struct.std::__1::__compressed_pair_elem.1668" }
%"struct.std::__1::__compressed_pair_elem.1667" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, i64 }
%"struct.std::__1::__compressed_pair_elem.1668" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.10"*, i8, [7 x i8] }>
%"class.std::__1::allocator.10" = type { i8 }

$_ZN2v88internal13ThreadVisitorD2Ev = comdat any

$_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE = comdat any

$_ZNK2v88internal18SharedFunctionInfo16GetBytecodeArrayINS0_7IsolateEEENS0_13BytecodeArrayEPT_ = comdat any

$_ZNK2v88internal5Debug23TemporaryObjectsTracker9HasObjectENS0_6HandleINS0_10HeapObjectEEE = comdat any

$_ZN2v88internal24SharedFunctionInfoFinder12NewCandidateENS0_18SharedFunctionInfoENS0_10JSFunctionE = comdat any

$_ZN2v88internal23PostponeInterruptsScopeD0Ev = comdat any

$_ZN2v88internal15InterruptsScopeD2Ev = comdat any

$_ZN2v88internal15InterruptsScopeD0Ev = comdat any

$_ZN2v88internal5Debug23TemporaryObjectsTracker15AllocationEventEmi = comdat any

$_ZN2v88internal5Debug23TemporaryObjectsTracker9MoveEventEmmi = comdat any

$_ZN2v88internal27HeapObjectAllocationTracker21UpdateObjectSizeEventEmi = comdat any

$_ZN2v88internal5Debug23TemporaryObjectsTrackerD2Ev = comdat any

$_ZN2v88internal5Debug23TemporaryObjectsTrackerD0Ev = comdat any

$_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE25__emplace_unique_key_argsImJRKmEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeImPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeImPvEEEE = comdat any

$_ZN2v88internal15IsCompiledScopeC2ENS0_18SharedFunctionInfoEPNS0_7IsolateE = comdat any

$_ZTVN2v88internal23PostponeInterruptsScopeE = comdat any

$_ZTVN2v88internal15InterruptsScopeE = comdat any

$_ZTVN2v88internal5Debug23TemporaryObjectsTrackerE = comdat any

@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [62 x i8] c"last_step_action() >= StepIn || break_on_next_function_call()\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"has_suspended_generator()\00", align 1
@.str.3 = private unnamed_addr constant [47 x i8] c"CodeKind::INTERPRETED_FUNCTION == code->kind()\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"candidate->HasBreakInfo()\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"outer_shared->HasBreakInfo()\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"(scope) != nullptr\00", align 1
@_ZN2v88internal42FLAG_trace_side_effect_free_debug_evaluateE = external local_unnamed_addr global i8, align 1
@.str.8 = private unnamed_addr constant [56 x i8] c"[debug-evaluate] Function %s failed side effect check.\0A\00", align 1
@.str.9 = private unnamed_addr constant [32 x i8] c"[debug-evaluate] API Callback '\00", align 1
@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.10 = private unnamed_addr constant [26 x i8] c"' may cause side effect.\0A\00", align 1
@.str.11 = private unnamed_addr constant [57 x i8] c"[debug-evaluate] API Interceptor may cause side effect.\0A\00", align 1
@.str.12 = private unnamed_addr constant [61 x i8] c"[debug-evaluate] API CallHandlerInfo may cause side effect.\0A\00", align 1
@.str.13 = private unnamed_addr constant [52 x i8] c"[debug-evaluate] failed runtime side effect check.\0A\00", align 1
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@_ZTVN2v88internal12_GLOBAL__N_126DiscardBaselineCodeVisitorE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::DiscardBaselineCodeVisitor"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadLocalTop"*)* @_ZN2v88internal12_GLOBAL__N_126DiscardBaselineCodeVisitor11VisitThreadEPNS0_7IsolateEPNS0_14ThreadLocalTopE to i8*), i8* bitcast (void (%"class.v8::internal::ThreadVisitor"*)* @_ZN2v88internal13ThreadVisitorD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::DiscardBaselineCodeVisitor"*)* @_ZN2v88internal12_GLOBAL__N_126DiscardBaselineCodeVisitorD0Ev to i8*)] }, align 8
@_ZTVN2v88internal23PostponeInterruptsScopeE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::InterruptsScope"*)* @_ZN2v88internal15InterruptsScopeD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::PostponeInterruptsScope"*)* @_ZN2v88internal23PostponeInterruptsScopeD0Ev to i8*)] }, comdat, align 8
@_ZTVN2v88internal15InterruptsScopeE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::InterruptsScope"*)* @_ZN2v88internal15InterruptsScopeD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::InterruptsScope"*)* @_ZN2v88internal15InterruptsScopeD0Ev to i8*)] }, comdat, align 8
@_ZTVN2v88internal5Debug23TemporaryObjectsTrackerE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::Debug::TemporaryObjectsTracker"*, i64, i32)* @_ZN2v88internal5Debug23TemporaryObjectsTracker15AllocationEventEmi to i8*), i8* bitcast (void (%"class.v8::internal::Debug::TemporaryObjectsTracker"*, i64, i64, i32)* @_ZN2v88internal5Debug23TemporaryObjectsTracker9MoveEventEmmi to i8*), i8* bitcast (void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)* @_ZN2v88internal27HeapObjectAllocationTracker21UpdateObjectSizeEventEmi to i8*), i8* bitcast (void (%"class.v8::internal::Debug::TemporaryObjectsTracker"*)* @_ZN2v88internal5Debug23TemporaryObjectsTrackerD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::Debug::TemporaryObjectsTracker"*)* @_ZN2v88internal5Debug23TemporaryObjectsTrackerD0Ev to i8*)] }, comdat, align 8
@_ZN2v88internal11interpreter9Bytecodes14kBytecodeSizesE = external local_unnamed_addr constant [3 x [197 x i8]], align 16
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal5Debug19ClearAllBreakPointsEvE3$_0FvNS5_6HandleINS5_9DebugInfoEEEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal5Debug22RemoveAllCoverageInfosEvE3$_1FvNS5_6HandleINS5_9DebugInfoEEEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal5Debug21ClearAllDebuggerHintsEvE3$_2FvNS5_6HandleINS5_9DebugInfoEEEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@switch.table._ZNK2v88internal13BreakLocation4typeEv = private unnamed_addr constant [4 x i32] [i32 2, i32 3, i32 0, i32 1], align 4

@_ZN2v88internal5DebugC1EPNS0_7IsolateE = hidden unnamed_addr alias void (%"class.v8::internal::Debug"*, %"class.v8::internal::Isolate"*), void (%"class.v8::internal::Debug"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal5DebugC2EPNS0_7IsolateE
@_ZN2v88internal5DebugD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::Debug"*), void (%"class.v8::internal::Debug"*)* @_ZN2v88internal5DebugD2Ev
@_ZN2v88internal13BreakIteratorC1ENS0_6HandleINS0_9DebugInfoEEE = hidden unnamed_addr alias void (%"class.v8::internal::BreakIterator"*, i64*), void (%"class.v8::internal::BreakIterator"*, i64*)* @_ZN2v88internal13BreakIteratorC2ENS0_6HandleINS0_9DebugInfoEEE
@_ZN2v88internal17DebugInfoListNodeC1EPNS0_7IsolateENS0_9DebugInfoE = hidden unnamed_addr alias void (%"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::Isolate"*, i64), void (%"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::Isolate"*, i64)* @_ZN2v88internal17DebugInfoListNodeC2EPNS0_7IsolateENS0_9DebugInfoE
@_ZN2v88internal17DebugInfoListNodeD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::DebugInfoListNode"*), void (%"class.v8::internal::DebugInfoListNode"*)* @_ZN2v88internal17DebugInfoListNodeD2Ev
@_ZN2v88internal10DebugScopeC1EPNS0_5DebugE = hidden unnamed_addr alias void (%"class.v8::internal::DebugScope"*, %"class.v8::internal::Debug"*), void (%"class.v8::internal::DebugScope"*, %"class.v8::internal::Debug"*)* @_ZN2v88internal10DebugScopeC2EPNS0_5DebugE
@_ZN2v88internal10DebugScopeD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::DebugScope"*), void (%"class.v8::internal::DebugScope"*)* @_ZN2v88internal10DebugScopeD2Ev
@_ZN2v88internal16ReturnValueScopeC1EPNS0_5DebugE = hidden unnamed_addr alias void (%"class.v8::internal::ReturnValueScope"*, %"class.v8::internal::Debug"*), void (%"class.v8::internal::ReturnValueScope"*, %"class.v8::internal::Debug"*)* @_ZN2v88internal16ReturnValueScopeC2EPNS0_5DebugE
@_ZN2v88internal16ReturnValueScopeD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::ReturnValueScope"*), void (%"class.v8::internal::ReturnValueScope"*)* @_ZN2v88internal16ReturnValueScopeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5DebugC2EPNS0_7IsolateE(%"class.v8::internal::Debug"*, %"class.v8::internal::Isolate"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 6
  %5 = bitcast %"class.v8::internal::Debug"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 13, i1 false)
  store i8 1, i8* %4, align 1
  %6 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 7
  store i8 0, i8* %6, align 2
  %7 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 8
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 9
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 10
  %10 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 13, i32 0
  %11 = bitcast %"class.v8::internal::DebugInfoListNode"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false)
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 13, i32 1
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 4, i32 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 10, i32 0, i32 0
  %15 = bitcast i64* %14 to i8*
  %16 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 15, i32 0, i32 0
  store i64* null, i64** %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 1
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 2
  store i8 -1, i8* %19, align 4
  %20 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 7
  store i32 -1, i32* %20, align 4
  %21 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 8
  store i32 -1, i32* %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 5
  store i8 0, i8* %22, align 8
  store i64 0, i64* %13, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 9
  store i32 -1, i32* %23, align 4
  %24 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 20, i1 false) #13
  store atomic volatile i64 0, i64* %24 monotonic, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 13
  store i8 0, i8* %25, align 4
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 108
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 32
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %3, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug10ThreadInitEv(%"class.v8::internal::Debug"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 1
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 2
  store i8 -1, i8* %3, align 4
  %4 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 7
  store i32 -1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 8
  store i32 -1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 5
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 4, i32 0, i32 0
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 9
  store i32 -1, i32* %8, align 4
  %9 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 10, i32 0, i32 0
  %10 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 0
  %11 = bitcast i64* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 20, i1 false)
  store atomic volatile i64 0, i64* %10 monotonic, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 13
  store i8 0, i8* %12, align 4
  %13 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 108
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 32
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 2
  store i8 %18, i8* %19, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5DebugD2Ev(%"class.v8::internal::Debug"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::Debug::TemporaryObjectsTracker"*, %"class.v8::internal::Debug::TemporaryObjectsTracker"** %2, align 8
  store %"class.v8::internal::Debug::TemporaryObjectsTracker"* null, %"class.v8::internal::Debug::TemporaryObjectsTracker"** %2, align 8
  %4 = icmp eq %"class.v8::internal::Debug::TemporaryObjectsTracker"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::internal::Debug::TemporaryObjectsTracker"* %3 to void (%"class.v8::internal::Debug::TemporaryObjectsTracker"*)***
  %7 = load void (%"class.v8::internal::Debug::TemporaryObjectsTracker"*)**, void (%"class.v8::internal::Debug::TemporaryObjectsTracker"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.v8::internal::Debug::TemporaryObjectsTracker"*)*, void (%"class.v8::internal::Debug::TemporaryObjectsTracker"*)** %7, i64 4
  %9 = load void (%"class.v8::internal::Debug::TemporaryObjectsTracker"*)*, void (%"class.v8::internal::Debug::TemporaryObjectsTracker"*)** %8, align 8
  tail call void %9(%"class.v8::internal::Debug::TemporaryObjectsTracker"* nonnull %3) #13
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13BreakLocation9FromFrameENS0_6HandleINS0_9DebugInfoEEEPNS0_15JavaScriptFrameE(%"class.v8::internal::BreakLocation"* noalias nocapture sret, i64*, %"class.v8::internal::JavaScriptFrame"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %5 = alloca %"class.v8::internal::FrameSummary", align 8
  %6 = alloca %"class.v8::internal::BreakIterator", align 8
  %7 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = load i64, i64* %1, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4, i64 0, i32 0
  %11 = call zeroext i1 @_ZNK2v88internal9DebugInfo15CanBreakAtEntryEv(%"class.v8::internal::DebugInfo"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  br i1 %11, label %12, label %16

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %0, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %0, i64 0, i32 1
  %15 = bitcast i32* %14 to <4 x i32>*
  store <4 x i32> <i32 0, i32 6, i32 0, i32 0>, <4 x i32>* %15, align 8
  br label %63

16:                                               ; preds = %3
  %17 = bitcast %"class.v8::internal::FrameSummary"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.v8::internal::JavaScriptFrame", %"class.v8::internal::JavaScriptFrame"* %2, i64 0, i32 0, i32 0
  call void @_ZN2v88internal12FrameSummary6GetTopEPKNS0_11CommonFrameE(%"class.v8::internal::FrameSummary"* nonnull sret %5, %"class.v8::internal::CommonFrame"* %18) #13
  %19 = getelementptr inbounds %"class.v8::internal::FrameSummary", %"class.v8::internal::FrameSummary"* %5, i64 0, i32 0, i32 0, i32 4
  %20 = load i32, i32* %19, align 8
  call void @_ZN2v88internal12FrameSummaryD1Ev(%"class.v8::internal::FrameSummary"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %17) #13
  %21 = bitcast %"class.v8::internal::BreakIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %21) #13
  call void @_ZN2v88internal13BreakIteratorC2ENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::BreakIterator"* nonnull %6, i64* %1)
  %22 = call i32 @_ZN2v88internal13BreakLocation24BreakIndexFromCodeOffsetENS0_6HandleINS0_9DebugInfoEEENS2_INS0_12AbstractCodeEEEi(i64* %1, i64* undef, i32 %20)
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %62

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 1
  %26 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 4, i32 2
  %27 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 4
  %28 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 4, i32 4, i32 2
  %29 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 2
  %30 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 4, i32 4, i32 3
  %31 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 3
  br label %32

32:                                               ; preds = %60, %24
  %33 = phi i32 [ %22, %24 ], [ %34, %60 ]
  %34 = add nsw i32 %33, -1
  %35 = load i32, i32* %25, align 8
  %36 = icmp eq i32 %35, -1
  br label %37

37:                                               ; preds = %54, %32
  %38 = phi i1 [ %36, %32 ], [ false, %54 ]
  %39 = load i32, i32* %26, align 8
  %40 = icmp eq i32 %39, -1
  br i1 %40, label %57, label %41

41:                                               ; preds = %37
  br i1 %38, label %45, label %42

42:                                               ; preds = %41
  call void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"* %27) #13
  %43 = load i32, i32* %26, align 8
  %44 = icmp eq i32 %43, -1
  br i1 %44, label %60, label %45

45:                                               ; preds = %42, %41
  %46 = load i64, i64* %28, align 8
  %47 = lshr i64 %46, 1
  %48 = trunc i64 %47 to i32
  %49 = and i32 %48, 1073741823
  %50 = add nsw i32 %49, -1
  store i32 %50, i32* %29, align 4
  %51 = load i8, i8* %30, align 8, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %54, label %53

53:                                               ; preds = %45
  store i32 %50, i32* %31, align 8
  br label %54

54:                                               ; preds = %53, %45
  %55 = call i32 @_ZN2v88internal13BreakIterator17GetDebugBreakTypeEv(%"class.v8::internal::BreakIterator"* nonnull %6) #13
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %37, label %57

57:                                               ; preds = %54, %37
  %58 = load i32, i32* %25, align 8
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %25, align 8
  br label %60

60:                                               ; preds = %42, %57
  %61 = icmp sgt i32 %34, 0
  br i1 %61, label %32, label %62

62:                                               ; preds = %60, %16
  call void @_ZN2v88internal13BreakIterator16GetBreakLocationEv(%"class.v8::internal::BreakLocation"* sret %0, %"class.v8::internal::BreakIterator"* nonnull %6)
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %21) #13
  br label %63

63:                                               ; preds = %62, %12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZNK2v88internal9DebugInfo15CanBreakAtEntryEv(%"class.v8::internal::DebugInfo"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN2v88internal12FrameSummary6GetTopEPKNS0_11CommonFrameE(%"class.v8::internal::FrameSummary"* sret, %"class.v8::internal::CommonFrame"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN2v88internal12FrameSummaryD1Ev(%"class.v8::internal::FrameSummary"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal13BreakLocation24BreakIndexFromCodeOffsetENS0_6HandleINS0_9DebugInfoEEENS2_INS0_12AbstractCodeEEEi(i64*, i64* nocapture readnone, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::BreakIterator", align 8
  %5 = bitcast %"class.v8::internal::BreakIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %5) #13
  call void @_ZN2v88internal13BreakIteratorC2ENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::BreakIterator"* nonnull %4, i64* %0)
  %6 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %4, i64 0, i32 1
  %7 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %4, i64 0, i32 4, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %60, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %4, i64 0, i32 4, i32 4, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %4, i64 0, i32 4
  %13 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %4, i64 0, i32 4, i32 4, i32 2
  %14 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %4, i64 0, i32 2
  %15 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %4, i64 0, i32 4, i32 4, i32 3
  %16 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %4, i64 0, i32 3
  br label %17

17:                                               ; preds = %10, %55
  %18 = phi i32 [ %8, %10 ], [ %56, %55 ]
  %19 = phi i32 [ 0, %10 ], [ %31, %55 ]
  %20 = phi i32 [ 2147483647, %10 ], [ %30, %55 ]
  %21 = load i32, i32* %11, align 8
  %22 = icmp sgt i32 %21, %2
  br i1 %22, label %29, label %23

23:                                               ; preds = %17
  %24 = sub nsw i32 %2, %21
  %25 = icmp slt i32 %24, %20
  br i1 %25, label %26, label %29

26:                                               ; preds = %23
  %27 = load i32, i32* %6, align 8
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %60, label %29

29:                                               ; preds = %17, %23, %26
  %30 = phi i32 [ %24, %26 ], [ %20, %23 ], [ %20, %17 ]
  %31 = phi i32 [ %27, %26 ], [ %19, %23 ], [ %19, %17 ]
  %32 = load i32, i32* %6, align 8
  %33 = icmp eq i32 %32, -1
  br label %34

34:                                               ; preds = %51, %29
  %35 = phi i32 [ %18, %29 ], [ %54, %51 ]
  %36 = phi i1 [ %33, %29 ], [ false, %51 ]
  %37 = icmp eq i32 %35, -1
  br i1 %37, label %55, label %38

38:                                               ; preds = %34
  br i1 %36, label %42, label %39

39:                                               ; preds = %38
  call void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"* %12) #13
  %40 = load i32, i32* %7, align 8
  %41 = icmp eq i32 %40, -1
  br i1 %41, label %60, label %42

42:                                               ; preds = %39, %38
  %43 = load i64, i64* %13, align 8
  %44 = lshr i64 %43, 1
  %45 = trunc i64 %44 to i32
  %46 = and i32 %45, 1073741823
  %47 = add nsw i32 %46, -1
  store i32 %47, i32* %14, align 4
  %48 = load i8, i8* %15, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %51, label %50

50:                                               ; preds = %42
  store i32 %47, i32* %16, align 8
  br label %51

51:                                               ; preds = %50, %42
  %52 = call i32 @_ZN2v88internal13BreakIterator17GetDebugBreakTypeEv(%"class.v8::internal::BreakIterator"* nonnull %4) #13
  %53 = icmp eq i32 %52, 0
  %54 = load i32, i32* %7, align 8
  br i1 %53, label %34, label %55

55:                                               ; preds = %34, %51
  %56 = phi i32 [ %54, %51 ], [ %35, %34 ]
  %57 = load i32, i32* %6, align 8
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %6, align 8
  %59 = icmp eq i32 %56, -1
  br i1 %59, label %60, label %17

60:                                               ; preds = %55, %26, %39, %3
  %61 = phi i32 [ 0, %3 ], [ %31, %39 ], [ %27, %26 ], [ %31, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %5) #13
  ret i32 %61
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13BreakIterator16GetBreakLocationEv(%"class.v8::internal::BreakLocation"* noalias nocapture sret, %"class.v8::internal::BreakIterator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::interpreter::BytecodeArrayIterator", align 8
  %4 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, 19
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 acquire, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = load i64*, i64** %4, align 8
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, -262144
  %16 = or i64 %15, 16
  %17 = inttoptr i64 %16 to i64*
  %18 = load i64, i64* %17, align 16
  %19 = add i64 %18, -41416
  %20 = inttoptr i64 %19 to %"class.v8::internal::Isolate"*
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %20, i64 0, i32 31, i32 4
  %22 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %21, align 8
  %23 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %2
  %25 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %22, i64 %12) #13
  br label %39

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %20, i64 0, i32 31, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %20, i64 0, i32 31, i32 1
  %30 = load i64*, i64** %29, align 8
  %31 = icmp eq i64* %28, %30
  br i1 %31, label %32, label %34

32:                                               ; preds = %26
  %33 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %20) #13
  br label %34

34:                                               ; preds = %32, %26
  %35 = phi i64* [ %33, %32 ], [ %28, %26 ]
  %36 = ptrtoint i64* %35 to i64
  %37 = add i64 %36, 8
  %38 = inttoptr i64 %37 to i64*
  store i64* %38, i64** %27, align 8
  store i64 %12, i64* %35, align 8
  br label %39

39:                                               ; preds = %24, %34
  %40 = phi i64* [ %25, %24 ], [ %35, %34 ]
  %41 = tail call i32 @_ZN2v88internal13BreakIterator17GetDebugBreakTypeEv(%"class.v8::internal::BreakIterator"* %1)
  %42 = icmp eq i32 %41, 5
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %1, i64 0, i32 4, i32 4, i32 0
  br label %86

45:                                               ; preds = %39
  %46 = load i64*, i64** %4, align 8
  %47 = load i64, i64* %46, align 8
  %48 = and i64 %47, -4294967296
  %49 = add i64 %47, 15
  %50 = inttoptr i64 %49 to i32*
  %51 = load atomic i32, i32* %50 acquire, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %48, %52
  %54 = bitcast %"class.v8::internal::interpreter::BytecodeArrayIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %54) #13
  %55 = load i64*, i64** %4, align 8
  %56 = load i64, i64* %55, align 8
  %57 = and i64 %56, -262144
  %58 = or i64 %57, 16
  %59 = inttoptr i64 %58 to i64*
  %60 = load i64, i64* %59, align 16
  %61 = add i64 %60, -41416
  %62 = inttoptr i64 %61 to %"class.v8::internal::Isolate"*
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %62, i64 0, i32 31, i32 4
  %64 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %63, align 8
  %65 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %45
  %67 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %64, i64 %53) #13
  br label %81

68:                                               ; preds = %45
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %62, i64 0, i32 31, i32 0
  %70 = load i64*, i64** %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %62, i64 0, i32 31, i32 1
  %72 = load i64*, i64** %71, align 8
  %73 = icmp eq i64* %70, %72
  br i1 %73, label %74, label %76

74:                                               ; preds = %68
  %75 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %62) #13
  br label %76

76:                                               ; preds = %74, %68
  %77 = phi i64* [ %75, %74 ], [ %70, %68 ]
  %78 = ptrtoint i64* %77 to i64
  %79 = add i64 %78, 8
  %80 = inttoptr i64 %79 to i64*
  store i64* %80, i64** %69, align 8
  store i64 %53, i64* %77, align 8
  br label %81

81:                                               ; preds = %66, %76
  %82 = phi i64* [ %67, %66 ], [ %77, %76 ]
  %83 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %1, i64 0, i32 4, i32 4, i32 0
  %84 = load i32, i32* %83, align 8
  call void @_ZN2v88internal11interpreter21BytecodeArrayIteratorC1ENS0_6HandleINS0_13BytecodeArrayEEEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %3, i64* %82, i32 %84) #13
  %85 = call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator18GetRegisterOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %3, i32 0) #13
  call void @_ZN2v88internal11interpreter21BytecodeArrayIteratorD1Ev(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %54) #13
  br label %86

86:                                               ; preds = %43, %81
  %87 = phi i32* [ %44, %43 ], [ %83, %81 ]
  %88 = phi i32 [ %41, %43 ], [ 5, %81 ]
  %89 = phi i32 [ -1, %43 ], [ %85, %81 ]
  %90 = load i32, i32* %87, align 8
  %91 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %1, i64 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %0, i64 0, i32 0, i32 0, i32 0
  store i64* %40, i64** %93, align 8
  %94 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %0, i64 0, i32 1
  store i32 %90, i32* %94, align 8
  %95 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %0, i64 0, i32 2
  store i32 %88, i32* %95, align 4
  %96 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %0, i64 0, i32 3
  store i32 %92, i32* %96, align 8
  %97 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %0, i64 0, i32 4
  store i32 %89, i32* %97, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13BreakLocation21AllAtCurrentStatementENS0_6HandleINS0_9DebugInfoEEEPNS0_15JavaScriptFrameEPNSt3__16vectorIS1_NS7_9allocatorIS1_EEEE(i64*, %"class.v8::internal::JavaScriptFrame"*, %"class.std::__1::vector.1511"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::FrameSummary", align 8
  %5 = alloca %"class.v8::internal::BreakIterator", align 8
  %6 = alloca %"class.v8::internal::BreakIterator", align 8
  %7 = alloca %"class.v8::internal::BreakLocation", align 8
  %8 = bitcast %"class.v8::internal::FrameSummary"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #13
  %9 = getelementptr inbounds %"class.v8::internal::JavaScriptFrame", %"class.v8::internal::JavaScriptFrame"* %1, i64 0, i32 0, i32 0
  call void @_ZN2v88internal12FrameSummary6GetTopEPKNS0_11CommonFrameE(%"class.v8::internal::FrameSummary"* nonnull sret %4, %"class.v8::internal::CommonFrame"* %9) #13
  %10 = getelementptr inbounds %"class.v8::internal::FrameSummary", %"class.v8::internal::FrameSummary"* %4, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::FrameSummary", %"class.v8::internal::FrameSummary"* %4, i64 0, i32 0, i32 0, i32 4
  %13 = load i32, i32* %12, align 8
  call void @_ZN2v88internal12FrameSummaryD1Ev(%"class.v8::internal::FrameSummary"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #13
  %14 = load i64, i64* %11, align 8
  %15 = and i64 %14, -4294967296
  %16 = add i64 %14, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %15, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = icmp eq i16 %23, 162
  %25 = zext i1 %24 to i32
  %26 = sub i32 %13, %25
  %27 = bitcast %"class.v8::internal::BreakIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %27) #13
  call void @_ZN2v88internal13BreakIteratorC2ENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::BreakIterator"* nonnull %5, i64* %0)
  %28 = call i32 @_ZN2v88internal13BreakLocation24BreakIndexFromCodeOffsetENS0_6HandleINS0_9DebugInfoEEENS2_INS0_12AbstractCodeEEEi(i64* %0, i64* undef, i32 %26)
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %68

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %5, i64 0, i32 1
  %32 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %5, i64 0, i32 4, i32 2
  %33 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %5, i64 0, i32 4
  %34 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %5, i64 0, i32 4, i32 4, i32 2
  %35 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %5, i64 0, i32 2
  %36 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %5, i64 0, i32 4, i32 4, i32 3
  %37 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %5, i64 0, i32 3
  br label %38

38:                                               ; preds = %66, %30
  %39 = phi i32 [ %28, %30 ], [ %40, %66 ]
  %40 = add nsw i32 %39, -1
  %41 = load i32, i32* %31, align 8
  %42 = icmp eq i32 %41, -1
  br label %43

43:                                               ; preds = %60, %38
  %44 = phi i1 [ %42, %38 ], [ false, %60 ]
  %45 = load i32, i32* %32, align 8
  %46 = icmp eq i32 %45, -1
  br i1 %46, label %63, label %47

47:                                               ; preds = %43
  br i1 %44, label %51, label %48

48:                                               ; preds = %47
  call void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"* %33) #13
  %49 = load i32, i32* %32, align 8
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %66, label %51

51:                                               ; preds = %48, %47
  %52 = load i64, i64* %34, align 8
  %53 = lshr i64 %52, 1
  %54 = trunc i64 %53 to i32
  %55 = and i32 %54, 1073741823
  %56 = add nsw i32 %55, -1
  store i32 %56, i32* %35, align 4
  %57 = load i8, i8* %36, align 8, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %60, label %59

59:                                               ; preds = %51
  store i32 %56, i32* %37, align 8
  br label %60

60:                                               ; preds = %59, %51
  %61 = call i32 @_ZN2v88internal13BreakIterator17GetDebugBreakTypeEv(%"class.v8::internal::BreakIterator"* nonnull %5) #13
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %43, label %63

63:                                               ; preds = %60, %43
  %64 = load i32, i32* %31, align 8
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %31, align 8
  br label %66

66:                                               ; preds = %48, %63
  %67 = icmp sgt i32 %40, 0
  br i1 %67, label %38, label %68

68:                                               ; preds = %66, %3
  %69 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %5, i64 0, i32 3
  %70 = load i32, i32* %69, align 8
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %27) #13
  %71 = bitcast %"class.v8::internal::BreakIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %71) #13
  call void @_ZN2v88internal13BreakIteratorC2ENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::BreakIterator"* nonnull %6, i64* %0)
  %72 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 4, i32 2
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, -1
  br i1 %74, label %89, label %75

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 3
  %77 = bitcast %"class.v8::internal::BreakLocation"* %7 to i8*
  %78 = getelementptr inbounds %"class.std::__1::vector.1511", %"class.std::__1::vector.1511"* %2, i64 0, i32 0, i32 1
  %79 = getelementptr inbounds %"class.std::__1::vector.1511", %"class.std::__1::vector.1511"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %80 = bitcast %"class.v8::internal::BreakLocation"** %78 to i64*
  %81 = bitcast %"class.std::__1::vector.1511"* %2 to i64*
  %82 = bitcast %"class.v8::internal::BreakLocation"** %79 to i64*
  %83 = getelementptr inbounds %"class.std::__1::vector.1511", %"class.std::__1::vector.1511"* %2, i64 0, i32 0, i32 0
  %84 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 1
  %85 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 4
  %86 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 4, i32 4, i32 2
  %87 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 2
  %88 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 4, i32 4, i32 3
  br label %90

89:                                               ; preds = %178, %163, %159, %68
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %71) #13
  ret void

90:                                               ; preds = %75, %178
  %91 = load i32, i32* %76, align 8
  %92 = icmp eq i32 %91, %70
  br i1 %92, label %93, label %152

93:                                               ; preds = %90
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #13
  call void @_ZN2v88internal13BreakIterator16GetBreakLocationEv(%"class.v8::internal::BreakLocation"* nonnull sret %7, %"class.v8::internal::BreakIterator"* nonnull %6)
  %94 = load %"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"** %78, align 8
  %95 = load %"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"** %79, align 8
  %96 = icmp ult %"class.v8::internal::BreakLocation"* %94, %95
  %97 = ptrtoint %"class.v8::internal::BreakLocation"* %95 to i64
  br i1 %96, label %98, label %102

98:                                               ; preds = %93
  %99 = bitcast %"class.v8::internal::BreakLocation"* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* nonnull align 8 %77, i64 24, i1 false) #13
  %100 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %94, i64 1
  %101 = ptrtoint %"class.v8::internal::BreakLocation"* %100 to i64
  store i64 %101, i64* %80, align 8
  br label %151

102:                                              ; preds = %93
  %103 = ptrtoint %"class.v8::internal::BreakLocation"* %94 to i64
  %104 = load i64, i64* %81, align 8
  %105 = sub i64 %103, %104
  %106 = sdiv exact i64 %105, 24
  %107 = add nsw i64 %106, 1
  %108 = icmp ugt i64 %107, 768614336404564650
  br i1 %108, label %109, label %111

109:                                              ; preds = %102
  %110 = bitcast %"class.std::__1::vector.1511"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %110) #16
  unreachable

111:                                              ; preds = %102
  %112 = sub i64 %97, %104
  %113 = sdiv exact i64 %112, 24
  %114 = icmp ult i64 %113, 384307168202282325
  br i1 %114, label %115, label %120

115:                                              ; preds = %111
  %116 = shl nsw i64 %113, 1
  %117 = icmp ult i64 %116, %107
  %118 = select i1 %117, i64 %107, i64 %116
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %125, label %120

120:                                              ; preds = %115, %111
  %121 = phi i64 [ %118, %115 ], [ 768614336404564650, %111 ]
  %122 = mul i64 %121, 24
  %123 = call i8* @_Znwm(i64 %122) #17
  %124 = bitcast i8* %123 to %"class.v8::internal::BreakLocation"*
  br label %125

125:                                              ; preds = %120, %115
  %126 = phi i64 [ %121, %120 ], [ 0, %115 ]
  %127 = phi %"class.v8::internal::BreakLocation"* [ %124, %120 ], [ null, %115 ]
  %128 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %127, i64 %106
  %129 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %127, i64 %126
  %130 = ptrtoint %"class.v8::internal::BreakLocation"* %129 to i64
  %131 = bitcast %"class.v8::internal::BreakLocation"* %128 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* nonnull align 8 %77, i64 24, i1 false) #13
  %132 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %128, i64 1
  %133 = ptrtoint %"class.v8::internal::BreakLocation"* %132 to i64
  %134 = load %"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"** %83, align 8
  %135 = load i64, i64* %80, align 8
  %136 = ptrtoint %"class.v8::internal::BreakLocation"* %134 to i64
  %137 = sub i64 %135, %136
  %138 = sdiv exact i64 %137, -24
  %139 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %128, i64 %138
  %140 = ptrtoint %"class.v8::internal::BreakLocation"* %139 to i64
  %141 = icmp sgt i64 %137, 0
  br i1 %141, label %142, label %146

142:                                              ; preds = %125
  %143 = bitcast %"class.v8::internal::BreakLocation"* %139 to i8*
  %144 = bitcast %"class.v8::internal::BreakLocation"* %134 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* align 8 %144, i64 %137, i1 false) #13
  %145 = load %"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"** %83, align 8
  br label %146

146:                                              ; preds = %142, %125
  %147 = phi %"class.v8::internal::BreakLocation"* [ %134, %125 ], [ %145, %142 ]
  store i64 %140, i64* %81, align 8
  store i64 %133, i64* %80, align 8
  store i64 %130, i64* %82, align 8
  %148 = icmp eq %"class.v8::internal::BreakLocation"* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %146
  %150 = bitcast %"class.v8::internal::BreakLocation"* %147 to i8*
  call void @_ZdlPv(i8* %150) #17
  br label %151

151:                                              ; preds = %98, %146, %149
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #13
  br label %152

152:                                              ; preds = %90, %151
  %153 = load i32, i32* %84, align 8
  %154 = icmp eq i32 %153, -1
  br label %155

155:                                              ; preds = %175, %152
  %156 = phi i1 [ %154, %152 ], [ false, %175 ]
  %157 = load i32, i32* %72, align 8
  %158 = icmp eq i32 %157, -1
  br i1 %158, label %159, label %162

159:                                              ; preds = %155
  %160 = load i32, i32* %84, align 8
  %161 = add nsw i32 %160, 1
  store i32 %161, i32* %84, align 8
  br label %89

162:                                              ; preds = %155
  br i1 %156, label %166, label %163

163:                                              ; preds = %162
  call void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"* %85) #13
  %164 = load i32, i32* %72, align 8
  %165 = icmp eq i32 %164, -1
  br i1 %165, label %89, label %166

166:                                              ; preds = %163, %162
  %167 = load i64, i64* %86, align 8
  %168 = lshr i64 %167, 1
  %169 = trunc i64 %168 to i32
  %170 = and i32 %169, 1073741823
  %171 = add nsw i32 %170, -1
  store i32 %171, i32* %87, align 4
  %172 = load i8, i8* %88, align 8, !range !2
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %175, label %174

174:                                              ; preds = %166
  store i32 %171, i32* %76, align 8
  br label %175

175:                                              ; preds = %174, %166
  %176 = call i32 @_ZN2v88internal13BreakIterator17GetDebugBreakTypeEv(%"class.v8::internal::BreakIterator"* nonnull %6) #13
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %155, label %178

178:                                              ; preds = %175
  %179 = load i32, i32* %72, align 8
  %180 = load i32, i32* %84, align 8
  %181 = add nsw i32 %180, 1
  store i32 %181, i32* %84, align 8
  %182 = icmp eq i32 %179, -1
  br i1 %182, label %89, label %90
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13BreakIterator4NextEv(%"class.v8::internal::BreakIterator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, -1
  %5 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 4, i32 2
  %6 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 4, i32 4, i32 2
  %8 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 4, i32 4, i32 3
  %10 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 3
  br label %11

11:                                               ; preds = %28, %1
  %12 = phi i1 [ %4, %1 ], [ false, %28 ]
  %13 = load i32, i32* %5, align 8
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %31, label %15

15:                                               ; preds = %11
  br i1 %12, label %19, label %16

16:                                               ; preds = %15
  tail call void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"* %6) #13
  %17 = load i32, i32* %5, align 8
  %18 = icmp eq i32 %17, -1
  br i1 %18, label %34, label %19

19:                                               ; preds = %15, %16
  %20 = load i64, i64* %7, align 8
  %21 = lshr i64 %20, 1
  %22 = trunc i64 %21 to i32
  %23 = and i32 %22, 1073741823
  %24 = add nsw i32 %23, -1
  store i32 %24, i32* %8, align 4
  %25 = load i8, i8* %9, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %19
  store i32 %24, i32* %10, align 8
  br label %28

28:                                               ; preds = %19, %27
  %29 = tail call i32 @_ZN2v88internal13BreakIterator17GetDebugBreakTypeEv(%"class.v8::internal::BreakIterator"* %0)
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %11, label %31

31:                                               ; preds = %11, %28
  %32 = load i32, i32* %2, align 8
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %2, align 8
  br label %34

34:                                               ; preds = %16, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal13BreakLocation35GetGeneratorObjectForSuspendedFrameEPNS0_15JavaScriptFrameE(%"class.v8::internal::BreakLocation"* nocapture readonly, %"class.v8::internal::JavaScriptFrame"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.v8::internal::JavaScriptFrame"* %1 to %"class.v8::internal::UnoptimizedFrame"*
  %4 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 4
  %6 = tail call i64 @_ZNK2v88internal16UnoptimizedFrame23ReadInterpreterRegisterEi(%"class.v8::internal::UnoptimizedFrame"* %3, i32 %5) #13
  ret i64 %6
}

declare i64 @_ZNK2v88internal16UnoptimizedFrame23ReadInterpreterRegisterEi(%"class.v8::internal::UnoptimizedFrame"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal13BreakLocation13HasBreakPointEPNS0_7IsolateENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::BreakLocation"* nocapture readonly, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %5 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %6 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %7 = alloca %"class.v8::internal::BreakIterator", align 8
  %8 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #13
  %9 = load i64, i64* %2, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4, i64 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %0, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = call zeroext i1 @_ZN2v88internal9DebugInfo13HasBreakPointEPNS0_7IsolateEi(%"class.v8::internal::DebugInfo"* nonnull %11, %"class.v8::internal::Isolate"* %1, i32 %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13
  br i1 %14, label %15, label %35

15:                                               ; preds = %3
  %16 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = load i64, i64* %2, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %5, i64 0, i32 0
  %20 = call zeroext i1 @_ZNK2v88internal9DebugInfo15CanBreakAtEntryEv(%"class.v8::internal::DebugInfo"* nonnull %19) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br i1 %20, label %21, label %27

21:                                               ; preds = %15
  %22 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  %23 = load i64, i64* %2, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %6, i64 0, i32 0
  %26 = call zeroext i1 @_ZNK2v88internal9DebugInfo12BreakAtEntryEv(%"class.v8::internal::DebugInfo"* nonnull %25) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  br label %35

27:                                               ; preds = %15
  %28 = bitcast %"class.v8::internal::BreakIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %28) #13
  call void @_ZN2v88internal13BreakIteratorC2ENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::BreakIterator"* nonnull %7, i64* %2)
  %29 = load i32, i32* %12, align 8
  call void @_ZN2v88internal13BreakIterator14SkipToPositionEi(%"class.v8::internal::BreakIterator"* nonnull %7, i32 %29)
  %30 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %7, i64 0, i32 4, i32 4, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %0, i64 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %31, %33
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %28) #13
  br label %35

35:                                               ; preds = %3, %27, %21
  %36 = phi i1 [ %26, %21 ], [ %34, %27 ], [ false, %3 ]
  ret i1 %36
}

declare zeroext i1 @_ZN2v88internal9DebugInfo13HasBreakPointEPNS0_7IsolateEi(%"class.v8::internal::DebugInfo"*, %"class.v8::internal::Isolate"*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v88internal9DebugInfo12BreakAtEntryEv(%"class.v8::internal::DebugInfo"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13BreakIterator14SkipToPositionEi(%"class.v8::internal::BreakIterator"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::BreakIterator", align 8
  %4 = bitcast %"class.v8::internal::BreakIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  call void @_ZN2v88internal13BreakIteratorC2ENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::BreakIterator"* nonnull %3, i64* %6)
  %7 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %3, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %3, i64 0, i32 4, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %61, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %3, i64 0, i32 2
  %14 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %3, i64 0, i32 4
  %15 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %3, i64 0, i32 4, i32 4, i32 2
  %16 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %3, i64 0, i32 4, i32 4, i32 3
  %17 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %3, i64 0, i32 3
  br label %18

18:                                               ; preds = %57, %12
  %19 = phi i32 [ %8, %12 ], [ %59, %57 ]
  %20 = phi i32 [ %10, %12 ], [ %56, %57 ]
  %21 = phi i8 [ 1, %12 ], [ %31, %57 ]
  %22 = phi i32 [ %8, %12 ], [ %30, %57 ]
  %23 = load i32, i32* %13, align 4
  %24 = icmp eq i32 %23, %1
  br i1 %24, label %61, label %25

25:                                               ; preds = %18
  %26 = icmp slt i32 %23, %1
  %27 = and i8 %21, 1
  %28 = icmp eq i8 %27, 0
  %29 = or i1 %28, %26
  %30 = select i1 %29, i32 %22, i32 %19
  %31 = select i1 %29, i8 %21, i8 0
  %32 = icmp eq i32 %19, -1
  br label %33

33:                                               ; preds = %53, %25
  %34 = phi i32 [ %20, %25 ], [ %56, %53 ]
  %35 = phi i1 [ %32, %25 ], [ false, %53 ]
  %36 = icmp eq i32 %34, -1
  br i1 %36, label %37, label %40

37:                                               ; preds = %33
  %38 = load i32, i32* %7, align 8
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %7, align 8
  br label %61

40:                                               ; preds = %33
  br i1 %35, label %44, label %41

41:                                               ; preds = %40
  call void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"* %14) #13
  %42 = load i32, i32* %9, align 8
  %43 = icmp eq i32 %42, -1
  br i1 %43, label %61, label %44

44:                                               ; preds = %41, %40
  %45 = load i64, i64* %15, align 8
  %46 = lshr i64 %45, 1
  %47 = trunc i64 %46 to i32
  %48 = and i32 %47, 1073741823
  %49 = add nsw i32 %48, -1
  store i32 %49, i32* %13, align 4
  %50 = load i8, i8* %16, align 8, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %44
  store i32 %49, i32* %17, align 8
  br label %53

53:                                               ; preds = %52, %44
  %54 = call i32 @_ZN2v88internal13BreakIterator17GetDebugBreakTypeEv(%"class.v8::internal::BreakIterator"* nonnull %3) #13
  %55 = icmp eq i32 %54, 0
  %56 = load i32, i32* %9, align 8
  br i1 %55, label %33, label %57

57:                                               ; preds = %53
  %58 = load i32, i32* %7, align 8
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %7, align 8
  %60 = icmp eq i32 %56, -1
  br i1 %60, label %61, label %18

61:                                               ; preds = %57, %18, %41, %37, %2
  %62 = phi i32 [ %8, %2 ], [ %30, %37 ], [ %30, %41 ], [ %30, %57 ], [ %19, %18 ]
  %63 = icmp sgt i32 %62, 0
  br i1 %63, label %64, label %102

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 1
  %66 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 4, i32 2
  %67 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 4
  %68 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 4, i32 4, i32 2
  %69 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 2
  %70 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 4, i32 4, i32 3
  %71 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 3
  br label %72

72:                                               ; preds = %100, %64
  %73 = phi i32 [ %62, %64 ], [ %74, %100 ]
  %74 = add nsw i32 %73, -1
  %75 = load i32, i32* %65, align 8
  %76 = icmp eq i32 %75, -1
  br label %77

77:                                               ; preds = %94, %72
  %78 = phi i1 [ %76, %72 ], [ false, %94 ]
  %79 = load i32, i32* %66, align 8
  %80 = icmp eq i32 %79, -1
  br i1 %80, label %97, label %81

81:                                               ; preds = %77
  br i1 %78, label %85, label %82

82:                                               ; preds = %81
  call void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"* %67) #13
  %83 = load i32, i32* %66, align 8
  %84 = icmp eq i32 %83, -1
  br i1 %84, label %100, label %85

85:                                               ; preds = %82, %81
  %86 = load i64, i64* %68, align 8
  %87 = lshr i64 %86, 1
  %88 = trunc i64 %87 to i32
  %89 = and i32 %88, 1073741823
  %90 = add nsw i32 %89, -1
  store i32 %90, i32* %69, align 4
  %91 = load i8, i8* %70, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %94, label %93

93:                                               ; preds = %85
  store i32 %90, i32* %71, align 8
  br label %94

94:                                               ; preds = %93, %85
  %95 = call i32 @_ZN2v88internal13BreakIterator17GetDebugBreakTypeEv(%"class.v8::internal::BreakIterator"* %0) #13
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %77, label %97

97:                                               ; preds = %94, %77
  %98 = load i32, i32* %65, align 8
  %99 = add nsw i32 %98, 1
  store i32 %99, i32* %65, align 8
  br label %100

100:                                              ; preds = %82, %97
  %101 = icmp sgt i32 %74, 0
  br i1 %101, label %72, label %102

102:                                              ; preds = %100, %61
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %4) #13
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal13BreakLocation4typeEv(%"class.v8::internal::BreakLocation"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -1
  %5 = icmp ult i32 %4, 4
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZNK2v88internal13BreakLocation4typeEv, i64 0, i64 %7
  %9 = load i32, i32* %8, align 4
  ret i32 %9

10:                                               ; preds = %1
  ret i32 3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13BreakIteratorC2ENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::BreakIterator"*, i64*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %4 = bitcast %"class.v8::internal::BreakIterator"* %0 to i64*
  %5 = ptrtoint i64* %1 to i64
  store i64 %5, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 1
  store i32 -1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 4
  %8 = load i64, i64* %1, align 8
  %9 = and i64 %8, -4294967296
  %10 = add i64 %8, 19
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 acquire, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = add i64 %14, 15
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 acquire, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %9, %18
  %20 = and i64 %18, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %32, label %22

22:                                               ; preds = %2
  %23 = add i64 %19, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %9, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = icmp eq i16 %30, 132
  br i1 %31, label %53, label %32

32:                                               ; preds = %22, %2
  %33 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %34 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %33, i64 0, i32 0, i32 1
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %33, i64 0, i32 1, i64 0
  br label %49

41:                                               ; preds = %35, %32
  %42 = and i64 %14, -262144
  %43 = or i64 %42, 16
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 16
  %46 = add i64 %45, -41416
  %47 = inttoptr i64 %46 to %"class.v8::internal::Isolate"*
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %47, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %49

49:                                               ; preds = %41, %39
  %50 = phi i64* [ %48, %41 ], [ %40, %39 ]
  %51 = getelementptr inbounds i64, i64* %50, i64 107
  %52 = load i64, i64* %51, align 8
  br label %53

53:                                               ; preds = %22, %49
  %54 = phi i64 [ %52, %49 ], [ %19, %22 ]
  tail call void @_ZN2v88internal27SourcePositionTableIteratorC1ENS0_9ByteArrayENS1_15IterationFilterENS1_19FunctionEntryFilterE(%"class.v8::internal::SourcePositionTableIterator"* %7, i64 %54, i32 0, i32 0) #13
  %55 = bitcast %"class.v8::internal::SharedFunctionInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #13
  %56 = load i64, i64* %1, align 8
  %57 = and i64 %56, -4294967296
  %58 = add i64 %56, 3
  %59 = inttoptr i64 %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %57, %61
  %63 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %62, i64* %63, align 8
  %64 = call i32 @_ZNK2v88internal18SharedFunctionInfo13StartPositionEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %3) #13
  %65 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 2
  store i32 %64, i32* %65, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #13
  %66 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 3
  store i32 %64, i32* %66, align 8
  %67 = load i32, i32* %6, align 8
  %68 = icmp eq i32 %67, -1
  %69 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 4, i32 2
  %70 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 4, i32 4, i32 2
  %71 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 4, i32 4, i32 3
  br label %72

72:                                               ; preds = %89, %53
  %73 = phi i1 [ %68, %53 ], [ false, %89 ]
  %74 = load i32, i32* %69, align 8
  %75 = icmp eq i32 %74, -1
  br i1 %75, label %92, label %76

76:                                               ; preds = %72
  br i1 %73, label %80, label %77

77:                                               ; preds = %76
  call void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"* %7) #13
  %78 = load i32, i32* %69, align 8
  %79 = icmp eq i32 %78, -1
  br i1 %79, label %95, label %80

80:                                               ; preds = %77, %76
  %81 = load i64, i64* %70, align 8
  %82 = lshr i64 %81, 1
  %83 = trunc i64 %82 to i32
  %84 = and i32 %83, 1073741823
  %85 = add nsw i32 %84, -1
  store i32 %85, i32* %65, align 4
  %86 = load i8, i8* %71, align 8, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %89, label %88

88:                                               ; preds = %80
  store i32 %85, i32* %66, align 8
  br label %89

89:                                               ; preds = %88, %80
  %90 = call i32 @_ZN2v88internal13BreakIterator17GetDebugBreakTypeEv(%"class.v8::internal::BreakIterator"* %0) #13
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %72, label %92

92:                                               ; preds = %89, %72
  %93 = load i32, i32* %6, align 8
  %94 = add nsw i32 %93, 1
  store i32 %94, i32* %6, align 8
  br label %95

95:                                               ; preds = %77, %92
  ret void
}

declare void @_ZN2v88internal27SourcePositionTableIteratorC1ENS0_9ByteArrayENS1_15IterationFilterENS1_19FunctionEntryFilterE(%"class.v8::internal::SourcePositionTableIterator"*, i64, i32, i32) unnamed_addr #3

declare i32 @_ZNK2v88internal18SharedFunctionInfo13StartPositionEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal13BreakIterator22BreakIndexFromPositionEi(%"class.v8::internal::BreakIterator"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 4, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %57, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 4
  %11 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 4, i32 4, i32 2
  %12 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 4, i32 4, i32 3
  %13 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 3
  br label %14

14:                                               ; preds = %8, %52
  %15 = phi i32 [ %6, %8 ], [ %53, %52 ]
  %16 = phi i8 [ 1, %8 ], [ %29, %52 ]
  %17 = phi i32 [ %4, %8 ], [ %28, %52 ]
  %18 = load i32, i32* %9, align 4
  %19 = icmp eq i32 %18, %1
  br i1 %19, label %20, label %22

20:                                               ; preds = %14
  %21 = load i32, i32* %3, align 8
  br label %57

22:                                               ; preds = %14
  %23 = icmp slt i32 %18, %1
  %24 = and i8 %16, 1
  %25 = icmp eq i8 %24, 0
  %26 = or i1 %25, %23
  %27 = load i32, i32* %3, align 8
  %28 = select i1 %26, i32 %17, i32 %27
  %29 = select i1 %26, i8 %16, i8 0
  %30 = icmp eq i32 %27, -1
  br label %31

31:                                               ; preds = %48, %22
  %32 = phi i32 [ %15, %22 ], [ %51, %48 ]
  %33 = phi i1 [ %30, %22 ], [ false, %48 ]
  %34 = icmp eq i32 %32, -1
  br i1 %34, label %52, label %35

35:                                               ; preds = %31
  br i1 %33, label %39, label %36

36:                                               ; preds = %35
  tail call void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"* %10) #13
  %37 = load i32, i32* %5, align 8
  %38 = icmp eq i32 %37, -1
  br i1 %38, label %57, label %39

39:                                               ; preds = %36, %35
  %40 = load i64, i64* %11, align 8
  %41 = lshr i64 %40, 1
  %42 = trunc i64 %41 to i32
  %43 = and i32 %42, 1073741823
  %44 = add nsw i32 %43, -1
  store i32 %44, i32* %9, align 4
  %45 = load i8, i8* %12, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %48, label %47

47:                                               ; preds = %39
  store i32 %44, i32* %13, align 8
  br label %48

48:                                               ; preds = %47, %39
  %49 = tail call i32 @_ZN2v88internal13BreakIterator17GetDebugBreakTypeEv(%"class.v8::internal::BreakIterator"* %0) #13
  %50 = icmp eq i32 %49, 0
  %51 = load i32, i32* %5, align 8
  br i1 %50, label %31, label %52

52:                                               ; preds = %31, %48
  %53 = phi i32 [ %51, %48 ], [ %32, %31 ]
  %54 = load i32, i32* %3, align 8
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %3, align 8
  %56 = icmp eq i32 %53, -1
  br i1 %56, label %57, label %14

57:                                               ; preds = %52, %36, %2, %20
  %58 = phi i32 [ %21, %20 ], [ %4, %2 ], [ %28, %36 ], [ %28, %52 ]
  ret i32 %58
}

declare void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal13BreakIterator17GetDebugBreakTypeEv(%"class.v8::internal::BreakIterator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 15
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 acquire, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 4, i32 4, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = sext i32 %12 to i64
  %14 = add nsw i64 %13, 33
  %15 = add i64 %14, %10
  %16 = inttoptr i64 %15 to i8*
  %17 = load i8, i8* %16, align 1
  %18 = icmp ult i8 %17, 4
  br i1 %18, label %19, label %24

19:                                               ; preds = %1
  %20 = add nsw i64 %13, 34
  %21 = add i64 %20, %10
  %22 = inttoptr i64 %21 to i8*
  %23 = load i8, i8* %22, align 1
  br label %24

24:                                               ; preds = %19, %1
  %25 = phi i8 [ %23, %19 ], [ %17, %1 ]
  switch i8 %25, label %28 [
    i8 -79, label %34
    i8 -88, label %26
    i8 -82, label %27
    i8 105, label %33
    i8 104, label %33
    i8 99, label %33
    i8 98, label %33
    i8 97, label %33
    i8 96, label %33
    i8 95, label %33
    i8 94, label %33
    i8 93, label %33
    i8 92, label %33
    i8 91, label %33
    i8 90, label %33
    i8 102, label %33
  ]

26:                                               ; preds = %24
  br label %34

27:                                               ; preds = %24
  br label %34

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 4, i32 4, i32 3
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  %32 = select i1 %31, i32 0, i32 2
  br label %34

33:                                               ; preds = %24, %24, %24, %24, %24, %24, %24, %24, %24, %24, %24, %24, %24
  br label %34

34:                                               ; preds = %24, %33, %28, %27, %26
  %35 = phi i32 [ 4, %26 ], [ 5, %27 ], [ 1, %24 ], [ %32, %28 ], [ 3, %33 ]
  ret i32 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13BreakIterator13SetDebugBreakEv(%"class.v8::internal::BreakIterator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::interpreter::BytecodeArrayIterator", align 8
  %3 = tail call i32 @_ZN2v88internal13BreakIterator17GetDebugBreakTypeEv(%"class.v8::internal::BreakIterator"* %0)
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %76, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, -262144
  %10 = or i64 %9, 16
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11, align 16
  %13 = add i64 %12, -41416
  %14 = inttoptr i64 %13 to %"class.v8::internal::Isolate"*
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 31
  %16 = bitcast %"struct.v8::internal::HandleScopeData"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 31, i32 1
  %19 = load i64*, i64** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 31, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %20, align 8
  %23 = load i64*, i64** %6, align 8
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, -4294967296
  %26 = add i64 %24, 19
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 acquire, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %25, %29
  %31 = load i64*, i64** %6, align 8
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %32, -262144
  %34 = or i64 %33, 16
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 16
  %37 = add i64 %36, -41416
  %38 = inttoptr i64 %37 to %"class.v8::internal::Isolate"*
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %38, i64 0, i32 31, i32 4
  %40 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %39, align 8
  %41 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %5
  %43 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %40, i64 %30) #13
  br label %57

44:                                               ; preds = %5
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %38, i64 0, i32 31, i32 0
  %46 = load i64*, i64** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %38, i64 0, i32 31, i32 1
  %48 = load i64*, i64** %47, align 8
  %49 = icmp eq i64* %46, %48
  br i1 %49, label %50, label %52

50:                                               ; preds = %44
  %51 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %38) #13
  br label %52

52:                                               ; preds = %50, %44
  %53 = phi i64* [ %51, %50 ], [ %46, %44 ]
  %54 = ptrtoint i64* %53 to i64
  %55 = add i64 %54, 8
  %56 = inttoptr i64 %55 to i64*
  store i64* %56, i64** %45, align 8
  store i64 %30, i64* %53, align 8
  br label %57

57:                                               ; preds = %42, %52
  %58 = phi i64* [ %43, %42 ], [ %53, %52 ]
  %59 = bitcast %"class.v8::internal::interpreter::BytecodeArrayIterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %59) #13
  %60 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 4, i32 4, i32 0
  %61 = load i32, i32* %60, align 8
  call void @_ZN2v88internal11interpreter21BytecodeArrayIteratorC1ENS0_6HandleINS0_13BytecodeArrayEEEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %2, i64* %58, i32 %61) #13
  call void @_ZN2v88internal11interpreter21BytecodeArrayIterator15ApplyDebugBreakEv(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %2) #13
  call void @_ZN2v88internal11interpreter21BytecodeArrayIteratorD1Ev(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %59) #13
  %62 = icmp eq i64 %13, 0
  br i1 %62, label %76, label %63

63:                                               ; preds = %57
  %64 = inttoptr i64 %17 to i64*
  %65 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %15, i64 0, i32 0
  %66 = load i64*, i64** %65, align 8
  store i64 %17, i64* %16, align 8
  %67 = load i32, i32* %20, align 8
  %68 = add nsw i32 %67, -1
  store i32 %68, i32* %20, align 8
  %69 = load i64*, i64** %18, align 8
  %70 = icmp eq i64* %69, %19
  br i1 %70, label %73, label %71

71:                                               ; preds = %63
  store i64* %19, i64** %18, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %14) #13
  %72 = load i64*, i64** %65, align 8
  br label %73

73:                                               ; preds = %71, %63
  %74 = phi i64* [ %72, %71 ], [ %64, %63 ]
  %75 = phi i64* [ %19, %71 ], [ %66, %63 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %74, i64* %75) #13
  br label %76

76:                                               ; preds = %73, %57, %1
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.v8::internal::Isolate"* @_ZN2v88internal13BreakIterator7isolateEv(%"class.v8::internal::BreakIterator"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -262144
  %6 = or i64 %5, 16
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 16
  %9 = add i64 %8, -41416
  %10 = inttoptr i64 %9 to %"class.v8::internal::Isolate"*
  ret %"class.v8::internal::Isolate"* %10
}

declare void @_ZN2v88internal11interpreter21BytecodeArrayIteratorC1ENS0_6HandleINS0_13BytecodeArrayEEEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"*, i64*, i32) unnamed_addr #3

declare void @_ZN2v88internal11interpreter21BytecodeArrayIterator15ApplyDebugBreakEv(%"class.v8::internal::interpreter::BytecodeArrayIterator"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v88internal11interpreter21BytecodeArrayIteratorD1Ev(%"class.v8::internal::interpreter::BytecodeArrayIterator"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13BreakIterator15ClearDebugBreakEv(%"class.v8::internal::BreakIterator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZN2v88internal13BreakIterator17GetDebugBreakTypeEv(%"class.v8::internal::BreakIterator"* %0)
  %3 = icmp eq i32 %2, 1
  br i1 %3, label %31, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, -4294967296
  %9 = add i64 %7, 19
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 acquire, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = load i64*, i64** %5, align 8
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, -4294967296
  %17 = add i64 %15, 15
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 acquire, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %16, %20
  %22 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %0, i64 0, i32 4, i32 4, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = sext i32 %23 to i64
  %25 = add nsw i64 %24, 33
  %26 = add i64 %25, %21
  %27 = inttoptr i64 %26 to i8*
  %28 = load i8, i8* %27, align 1
  %29 = add i64 %25, %13
  %30 = inttoptr i64 %29 to i8*
  store i8 %28, i8* %30, align 1
  br label %31

31:                                               ; preds = %1, %4
  ret void
}

declare i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator18GetRegisterOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19DebugFeatureTracker5TrackENS1_7FeatureE(%"class.v8::internal::DebugFeatureTracker"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = shl i32 1, %1
  %4 = getelementptr inbounds %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::DebugFeatureTracker"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, %3
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %16

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::DebugFeatureTracker"* %0, i64 0, i32 0
  %10 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 14, i32 0
  %12 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %12, i64 0, i32 6
  tail call void @_ZN2v88internal9Histogram9AddSampleEi(%"class.v8::internal::Histogram"* %13, i32 %1) #13
  %14 = load i32, i32* %4, align 8
  %15 = or i32 %14, %3
  store i32 %15, i32* %4, align 8
  br label %16

16:                                               ; preds = %2, %8
  ret void
}

declare void @_ZN2v88internal9Histogram9AddSampleEi(%"class.v8::internal::Histogram"*, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug24UpdateHookOnFunctionCallEv(%"class.v8::internal::Debug"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 2
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %7 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 108
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 32
  br i1 %10, label %14, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 13
  %13 = load i8, i8* %12, align 4, !range !2
  br label %14

14:                                               ; preds = %11, %5, %1
  %15 = phi i8 [ 1, %5 ], [ 1, %1 ], [ %13, %11 ]
  %16 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 2
  store i8 %15, i8* %16, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal5Debug12ArchiveDebugEPc(%"class.v8::internal::Debug"* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14
  %4 = bitcast %"class.v8::internal::Debug::ThreadLocal"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %4, i64 64, i1 false) #13
  %5 = getelementptr inbounds i8, i8* %1, i64 64
  ret i8* %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2v88internal5Debug21ArchiveSpacePerThreadEv() local_unnamed_addr #7 align 2 {
  ret i32 64
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal5Debug12RestoreDebugEPc(%"class.v8::internal::Debug"*, i8* readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::StackTraceFrameIterator", align 8
  %4 = alloca %"class.v8::internal::DebugScope", align 8
  %5 = alloca %"class.v8::internal::StackTraceFrameIterator", align 8
  %6 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14
  %7 = bitcast %"class.v8::internal::Debug::ThreadLocal"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %1, i64 64, i1 false) #13
  %8 = bitcast %"class.v8::internal::DebugScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %8) #13
  call void @_ZN2v88internal10DebugScopeC2EPNS0_5DebugE(%"class.v8::internal::DebugScope"* nonnull %4, %"class.v8::internal::Debug"* %0)
  %9 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 10
  %10 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %9, align 8
  %11 = icmp eq %"class.v8::internal::DebugInfoListNode"* %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %2, %12
  %13 = phi %"class.v8::internal::DebugInfoListNode"* [ %17, %12 ], [ %10, %2 ]
  %14 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %13, i64 0, i32 0
  %15 = load i64*, i64** %14, align 8
  call void @_ZN2v88internal5Debug16ClearBreakPointsENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* undef, i64* %15) #13
  call void @_ZN2v88internal5Debug16ApplyBreakPointsENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* %0, i64* %15) #13
  %16 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %13, i64 0, i32 1
  %17 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %16, align 8
  %18 = icmp eq %"class.v8::internal::DebugInfoListNode"* %17, null
  br i1 %18, label %19, label %12

19:                                               ; preds = %12, %2
  %20 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 2
  %21 = load i8, i8* %20, align 4
  %22 = icmp eq i8 %21, -1
  br i1 %22, label %81, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.v8::internal::StackTraceFrameIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1616, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %26 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %25, align 8
  call void @_ZN2v88internal23StackTraceFrameIteratorC1EPNS0_7IsolateE(%"class.v8::internal::StackTraceFrameIterator"* nonnull %3, %"class.v8::internal::Isolate"* %26) #13
  %27 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.v8::internal::StackTraceFrameIterator", %"class.v8::internal::StackTraceFrameIterator"* %3, i64 0, i32 0, i32 0, i32 23
  %32 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %31, align 8
  %33 = icmp eq %"class.v8::internal::StackFrame"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %30, %44
  %35 = phi %"class.v8::internal::StackFrame"* [ %45, %44 ], [ %32, %30 ]
  %36 = bitcast %"class.v8::internal::StackFrame"* %35 to i64 (%"class.v8::internal::StackFrame"*)***
  %37 = load i64 (%"class.v8::internal::StackFrame"*)**, i64 (%"class.v8::internal::StackFrame"*)*** %36, align 8
  %38 = getelementptr inbounds i64 (%"class.v8::internal::StackFrame"*)*, i64 (%"class.v8::internal::StackFrame"*)** %37, i64 6
  %39 = load i64 (%"class.v8::internal::StackFrame"*)*, i64 (%"class.v8::internal::StackFrame"*)** %38, align 8
  %40 = call i64 %39(%"class.v8::internal::StackFrame"* nonnull %35) #13
  %41 = trunc i64 %40 to i32
  %42 = load i32, i32* %27, align 8
  %43 = icmp eq i32 %42, %41
  br i1 %43, label %47, label %44

44:                                               ; preds = %34
  call void @_ZN2v88internal23StackTraceFrameIterator7AdvanceEv(%"class.v8::internal::StackTraceFrameIterator"* nonnull %3) #13
  %45 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %31, align 8
  %46 = icmp eq %"class.v8::internal::StackFrame"* %45, null
  br i1 %46, label %47, label %34

47:                                               ; preds = %44, %34, %30, %23
  %48 = getelementptr inbounds %"class.v8::internal::StackTraceFrameIterator", %"class.v8::internal::StackTraceFrameIterator"* %3, i64 0, i32 0, i32 0, i32 23
  %49 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %48, align 8
  %50 = icmp eq %"class.v8::internal::StackFrame"* %49, null
  br i1 %50, label %57, label %51

51:                                               ; preds = %47, %51
  %52 = phi i32 [ %54, %51 ], [ 0, %47 ]
  %53 = call i32 @_ZNK2v88internal23StackTraceFrameIterator18FrameFunctionCountEv(%"class.v8::internal::StackTraceFrameIterator"* nonnull %3) #13
  %54 = add nsw i32 %53, %52
  call void @_ZN2v88internal23StackTraceFrameIterator7AdvanceEv(%"class.v8::internal::StackTraceFrameIterator"* nonnull %3) #13
  %55 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %48, align 8
  %56 = icmp eq %"class.v8::internal::StackFrame"* %55, null
  br i1 %56, label %57, label %51

57:                                               ; preds = %51, %47
  %58 = phi i32 [ 0, %47 ], [ %54, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 1616, i8* nonnull %24) #13
  %59 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 9
  %60 = load i32, i32* %59, align 4
  %61 = bitcast %"class.v8::internal::StackTraceFrameIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1616, i8* nonnull %61) #13
  %62 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %25, align 8
  call void @_ZN2v88internal23StackTraceFrameIteratorC1EPNS0_7IsolateE(%"class.v8::internal::StackTraceFrameIterator"* nonnull %5, %"class.v8::internal::Isolate"* %62) #13
  %63 = icmp sgt i32 %58, %60
  br i1 %63, label %64, label %69

64:                                               ; preds = %57, %64
  %65 = phi i32 [ %67, %64 ], [ %58, %57 ]
  %66 = call i32 @_ZNK2v88internal23StackTraceFrameIterator18FrameFunctionCountEv(%"class.v8::internal::StackTraceFrameIterator"* nonnull %5) #13
  %67 = sub nsw i32 %65, %66
  call void @_ZN2v88internal23StackTraceFrameIterator7AdvanceEv(%"class.v8::internal::StackTraceFrameIterator"* nonnull %5) #13
  %68 = icmp sgt i32 %67, %60
  br i1 %68, label %64, label %69

69:                                               ; preds = %64, %57
  %70 = getelementptr inbounds %"class.v8::internal::StackTraceFrameIterator", %"class.v8::internal::StackTraceFrameIterator"* %5, i64 0, i32 0, i32 0, i32 23
  %71 = bitcast %"class.v8::internal::StackFrame"** %70 to %"class.v8::internal::CommonFrame"**
  %72 = load %"class.v8::internal::CommonFrame"*, %"class.v8::internal::CommonFrame"** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::CommonFrame", %"class.v8::internal::CommonFrame"* %72, i64 0, i32 0
  %74 = bitcast %"class.v8::internal::CommonFrame"* %72 to i64 (%"class.v8::internal::StackFrame"*)***
  %75 = load i64 (%"class.v8::internal::StackFrame"*)**, i64 (%"class.v8::internal::StackFrame"*)*** %74, align 8
  %76 = getelementptr inbounds i64 (%"class.v8::internal::StackFrame"*)*, i64 (%"class.v8::internal::StackFrame"*)** %75, i64 6
  %77 = load i64 (%"class.v8::internal::StackFrame"*)*, i64 (%"class.v8::internal::StackFrame"*)** %76, align 8
  %78 = call i64 %77(%"class.v8::internal::StackFrame"* %73) #13
  %79 = trunc i64 %78 to i32
  store i32 %79, i32* %27, align 8
  %80 = load i8, i8* %20, align 4
  call void @_ZN2v88internal5Debug11PrepareStepENS0_10StepActionE(%"class.v8::internal::Debug"* %0, i8 signext %80)
  call void @llvm.lifetime.end.p0i8(i64 1616, i8* nonnull %61) #13
  br label %81

81:                                               ; preds = %19, %69
  %82 = getelementptr inbounds i8, i8* %1, i64 64
  call void @_ZN2v88internal10DebugScopeD2Ev(%"class.v8::internal::DebugScope"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %8) #13
  ret i8* %82
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug12ClearOneShotEv(%"class.v8::internal::Debug"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 10
  %3 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %2, align 8
  %4 = icmp eq %"class.v8::internal::DebugInfoListNode"* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %6, %1
  ret void

6:                                                ; preds = %1, %6
  %7 = phi %"class.v8::internal::DebugInfoListNode"* [ %11, %6 ], [ %3, %1 ]
  %8 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %7, i64 0, i32 0
  %9 = load i64*, i64** %8, align 8
  tail call void @_ZN2v88internal5Debug16ClearBreakPointsENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* undef, i64* %9)
  tail call void @_ZN2v88internal5Debug16ApplyBreakPointsENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* %0, i64* %9)
  %10 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %7, i64 0, i32 1
  %11 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %10, align 8
  %12 = icmp eq %"class.v8::internal::DebugInfoListNode"* %11, null
  br i1 %12, label %5, label %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal5Debug17CurrentFrameCountEv(%"class.v8::internal::Debug"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::StackTraceFrameIterator", align 8
  %3 = bitcast %"class.v8::internal::StackTraceFrameIterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1616, i8* nonnull %3) #13
  %4 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  call void @_ZN2v88internal23StackTraceFrameIteratorC1EPNS0_7IsolateE(%"class.v8::internal::StackTraceFrameIterator"* nonnull %2, %"class.v8::internal::Isolate"* %5) #13
  %6 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %26, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.v8::internal::StackTraceFrameIterator", %"class.v8::internal::StackTraceFrameIterator"* %2, i64 0, i32 0, i32 0, i32 23
  %11 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %10, align 8
  %12 = icmp eq %"class.v8::internal::StackFrame"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %9, %23
  %14 = phi %"class.v8::internal::StackFrame"* [ %24, %23 ], [ %11, %9 ]
  %15 = bitcast %"class.v8::internal::StackFrame"* %14 to i64 (%"class.v8::internal::StackFrame"*)***
  %16 = load i64 (%"class.v8::internal::StackFrame"*)**, i64 (%"class.v8::internal::StackFrame"*)*** %15, align 8
  %17 = getelementptr inbounds i64 (%"class.v8::internal::StackFrame"*)*, i64 (%"class.v8::internal::StackFrame"*)** %16, i64 6
  %18 = load i64 (%"class.v8::internal::StackFrame"*)*, i64 (%"class.v8::internal::StackFrame"*)** %17, align 8
  %19 = call i64 %18(%"class.v8::internal::StackFrame"* nonnull %14) #13
  %20 = trunc i64 %19 to i32
  %21 = load i32, i32* %6, align 8
  %22 = icmp eq i32 %21, %20
  br i1 %22, label %26, label %23

23:                                               ; preds = %13
  call void @_ZN2v88internal23StackTraceFrameIterator7AdvanceEv(%"class.v8::internal::StackTraceFrameIterator"* nonnull %2) #13
  %24 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %10, align 8
  %25 = icmp eq %"class.v8::internal::StackFrame"* %24, null
  br i1 %25, label %26, label %13

26:                                               ; preds = %23, %13, %9, %1
  %27 = getelementptr inbounds %"class.v8::internal::StackTraceFrameIterator", %"class.v8::internal::StackTraceFrameIterator"* %2, i64 0, i32 0, i32 0, i32 23
  %28 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %27, align 8
  %29 = icmp eq %"class.v8::internal::StackFrame"* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %26, %30
  %31 = phi i32 [ %33, %30 ], [ 0, %26 ]
  %32 = call i32 @_ZNK2v88internal23StackTraceFrameIterator18FrameFunctionCountEv(%"class.v8::internal::StackTraceFrameIterator"* nonnull %2) #13
  %33 = add nsw i32 %32, %31
  call void @_ZN2v88internal23StackTraceFrameIterator7AdvanceEv(%"class.v8::internal::StackTraceFrameIterator"* nonnull %2) #13
  %34 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %27, align 8
  %35 = icmp eq %"class.v8::internal::StackFrame"* %34, null
  br i1 %35, label %36, label %30

36:                                               ; preds = %30, %26
  %37 = phi i32 [ 0, %26 ], [ %33, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 1616, i8* nonnull %3) #13
  ret i32 %37
}

declare void @_ZN2v88internal23StackTraceFrameIteratorC1EPNS0_7IsolateE(%"class.v8::internal::StackTraceFrameIterator"*, %"class.v8::internal::Isolate"*) unnamed_addr #3

declare i32 @_ZNK2v88internal23StackTraceFrameIterator18FrameFunctionCountEv(%"class.v8::internal::StackTraceFrameIterator"*) local_unnamed_addr #3

declare void @_ZN2v88internal23StackTraceFrameIterator7AdvanceEv(%"class.v8::internal::StackTraceFrameIterator"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug11PrepareStepENS0_10StepActionE(%"class.v8::internal::Debug"*, i8 signext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::StackTraceFrameIterator", align 8
  %4 = alloca %"class.v8::internal::StackTraceFrameIterator", align 8
  %5 = alloca %"class.v8::internal::FrameSummary", align 8
  %6 = alloca %"class.v8::internal::BreakLocation", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::AbstractCode>::ObjectRef", align 8
  %8 = alloca %"class.std::__1::vector.1542", align 8
  %9 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %10 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31
  %12 = bitcast %"struct.v8::internal::HandleScopeData"* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 1
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %16, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %347, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 13, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %35

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 13, i32 0
  %29 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 14, i32 0
  %31 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %31, i64 0, i32 6
  tail call void @_ZN2v88internal9Histogram9AddSampleEi(%"class.v8::internal::Histogram"* %32, i32 3) #13
  %33 = load i32, i32* %23, align 8
  %34 = or i32 %33, 8
  store i32 %34, i32* %23, align 8
  br label %35

35:                                               ; preds = %22, %27
  %36 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 2
  store i8 %1, i8* %36, align 4
  %37 = bitcast %"class.v8::internal::StackTraceFrameIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1616, i8* nonnull %37) #13
  %38 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  call void @_ZN2v88internal23StackTraceFrameIteratorC1EPNS0_7IsolateENS0_12StackFrameIdE(%"class.v8::internal::StackTraceFrameIterator"* nonnull %4, %"class.v8::internal::Isolate"* %38, i32 %20) #13
  %39 = getelementptr inbounds %"class.v8::internal::StackTraceFrameIterator", %"class.v8::internal::StackTraceFrameIterator"* %4, i64 0, i32 0, i32 0, i32 23
  %40 = bitcast %"class.v8::internal::StackFrame"** %39 to %"class.v8::internal::CommonFrame"**
  %41 = load %"class.v8::internal::CommonFrame"*, %"class.v8::internal::CommonFrame"** %40, align 8
  %42 = bitcast %"class.v8::internal::StackTraceFrameIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1616, i8* nonnull %42) #13
  %43 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  call void @_ZN2v88internal23StackTraceFrameIteratorC1EPNS0_7IsolateE(%"class.v8::internal::StackTraceFrameIterator"* nonnull %3, %"class.v8::internal::Isolate"* %43) #13
  %44 = load i32, i32* %19, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %63, label %46

46:                                               ; preds = %35
  %47 = getelementptr inbounds %"class.v8::internal::StackTraceFrameIterator", %"class.v8::internal::StackTraceFrameIterator"* %3, i64 0, i32 0, i32 0, i32 23
  %48 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %47, align 8
  %49 = icmp eq %"class.v8::internal::StackFrame"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46, %60
  %51 = phi %"class.v8::internal::StackFrame"* [ %61, %60 ], [ %48, %46 ]
  %52 = bitcast %"class.v8::internal::StackFrame"* %51 to i64 (%"class.v8::internal::StackFrame"*)***
  %53 = load i64 (%"class.v8::internal::StackFrame"*)**, i64 (%"class.v8::internal::StackFrame"*)*** %52, align 8
  %54 = getelementptr inbounds i64 (%"class.v8::internal::StackFrame"*)*, i64 (%"class.v8::internal::StackFrame"*)** %53, i64 6
  %55 = load i64 (%"class.v8::internal::StackFrame"*)*, i64 (%"class.v8::internal::StackFrame"*)** %54, align 8
  %56 = call i64 %55(%"class.v8::internal::StackFrame"* nonnull %51) #13
  %57 = trunc i64 %56 to i32
  %58 = load i32, i32* %19, align 8
  %59 = icmp eq i32 %58, %57
  br i1 %59, label %63, label %60

60:                                               ; preds = %50
  call void @_ZN2v88internal23StackTraceFrameIterator7AdvanceEv(%"class.v8::internal::StackTraceFrameIterator"* nonnull %3) #13
  %61 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %47, align 8
  %62 = icmp eq %"class.v8::internal::StackFrame"* %61, null
  br i1 %62, label %63, label %50

63:                                               ; preds = %60, %50, %46, %35
  %64 = getelementptr inbounds %"class.v8::internal::StackTraceFrameIterator", %"class.v8::internal::StackTraceFrameIterator"* %3, i64 0, i32 0, i32 0, i32 23
  %65 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %64, align 8
  %66 = icmp eq %"class.v8::internal::StackFrame"* %65, null
  br i1 %66, label %73, label %67

67:                                               ; preds = %63, %67
  %68 = phi i32 [ %70, %67 ], [ 0, %63 ]
  %69 = call i32 @_ZNK2v88internal23StackTraceFrameIterator18FrameFunctionCountEv(%"class.v8::internal::StackTraceFrameIterator"* nonnull %3) #13
  %70 = add nsw i32 %69, %68
  call void @_ZN2v88internal23StackTraceFrameIterator7AdvanceEv(%"class.v8::internal::StackTraceFrameIterator"* nonnull %3) #13
  %71 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %64, align 8
  %72 = icmp eq %"class.v8::internal::StackFrame"* %71, null
  br i1 %72, label %73, label %67

73:                                               ; preds = %67, %63
  %74 = phi i32 [ 0, %63 ], [ %70, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 1616, i8* nonnull %42) #13
  %75 = getelementptr inbounds %"class.v8::internal::CommonFrame", %"class.v8::internal::CommonFrame"* %41, i64 0, i32 0
  %76 = bitcast %"class.v8::internal::CommonFrame"* %41 to i32 (%"class.v8::internal::StackFrame"*)***
  %77 = load i32 (%"class.v8::internal::StackFrame"*)**, i32 (%"class.v8::internal::StackFrame"*)*** %76, align 8
  %78 = load i32 (%"class.v8::internal::StackFrame"*)*, i32 (%"class.v8::internal::StackFrame"*)** %77, align 8
  %79 = call i32 %78(%"class.v8::internal::StackFrame"* %75) #13
  %80 = add i32 %79, -11
  %81 = icmp ult i32 %80, 3
  br i1 %81, label %82, label %197

82:                                               ; preds = %73
  %83 = bitcast %"class.v8::internal::FrameSummary"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %83) #13
  call void @_ZN2v88internal12FrameSummary6GetTopEPKNS0_11CommonFrameE(%"class.v8::internal::FrameSummary"* nonnull sret %5, %"class.v8::internal::CommonFrame"* %41) #13
  %84 = getelementptr inbounds %"class.v8::internal::FrameSummary", %"class.v8::internal::FrameSummary"* %5, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %85 = load i64*, i64** %84, align 8
  %86 = getelementptr inbounds %"class.v8::internal::FrameSummary", %"class.v8::internal::FrameSummary"* %5, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %87 = load i64*, i64** %86, align 8
  %88 = getelementptr inbounds %"class.v8::internal::FrameSummary", %"class.v8::internal::FrameSummary"* %5, i64 0, i32 0, i32 0, i32 4
  %89 = load i32, i32* %88, align 8
  call void @_ZN2v88internal12FrameSummaryD1Ev(%"class.v8::internal::FrameSummary"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %83) #13
  %90 = load i64, i64* %85, align 8
  %91 = add i64 %90, 11
  %92 = inttoptr i64 %91 to i32*
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i64 %90, -4294967296
  %95 = zext i32 %93 to i64
  %96 = or i64 %94, %95
  %97 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 31, i32 4
  %99 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %98, align 8
  %100 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %82
  %102 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %99, i64 %96) #13
  br label %116

103:                                              ; preds = %82
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 31, i32 0
  %105 = load i64*, i64** %104, align 8
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 31, i32 1
  %107 = load i64*, i64** %106, align 8
  %108 = icmp eq i64* %105, %107
  br i1 %108, label %109, label %111

109:                                              ; preds = %103
  %110 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %97) #13
  br label %111

111:                                              ; preds = %109, %103
  %112 = phi i64* [ %110, %109 ], [ %105, %103 ]
  %113 = ptrtoint i64* %112 to i64
  %114 = add i64 %113, 8
  %115 = inttoptr i64 %114 to i64*
  store i64* %115, i64** %104, align 8
  store i64 %96, i64* %112, align 8
  br label %116

116:                                              ; preds = %101, %111
  %117 = phi i64* [ %102, %101 ], [ %112, %111 ]
  %118 = call zeroext i1 @_ZN2v88internal5Debug15EnsureBreakInfoENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %117)
  br i1 %118, label %119, label %346

119:                                              ; preds = %116
  call void @_ZN2v88internal5Debug32PrepareFunctionForDebugExecutionENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %117)
  %120 = getelementptr inbounds %"class.v8::internal::StackTraceFrameIterator", %"class.v8::internal::StackTraceFrameIterator"* %4, i64 0, i32 0
  %121 = call %"class.v8::internal::StackFrame"* @_ZN2v88internal18StackFrameIterator7ReframeEv(%"class.v8::internal::StackFrameIterator"* nonnull %120) #13
  %122 = bitcast %"class.v8::internal::StackFrame"** %39 to %"class.v8::internal::JavaScriptFrame"**
  %123 = load %"class.v8::internal::JavaScriptFrame"*, %"class.v8::internal::JavaScriptFrame"** %122, align 8
  %124 = load i64, i64* %117, align 8
  %125 = and i64 %124, -4294967296
  %126 = add i64 %124, 15
  %127 = inttoptr i64 %126 to i32*
  %128 = load atomic i32, i32* %127 acquire, align 4
  %129 = zext i32 %128 to i64
  %130 = or i64 %125, %129
  %131 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %132 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %131, i64 0, i32 31, i32 4
  %133 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %132, align 8
  %134 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %133, null
  br i1 %134, label %137, label %135

135:                                              ; preds = %119
  %136 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %133, i64 %130) #13
  br label %150

137:                                              ; preds = %119
  %138 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %131, i64 0, i32 31, i32 0
  %139 = load i64*, i64** %138, align 8
  %140 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %131, i64 0, i32 31, i32 1
  %141 = load i64*, i64** %140, align 8
  %142 = icmp eq i64* %139, %141
  br i1 %142, label %143, label %145

143:                                              ; preds = %137
  %144 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %131) #13
  br label %145

145:                                              ; preds = %143, %137
  %146 = phi i64* [ %144, %143 ], [ %139, %137 ]
  %147 = ptrtoint i64* %146 to i64
  %148 = add i64 %147, 8
  %149 = inttoptr i64 %148 to i64*
  store i64* %149, i64** %138, align 8
  store i64 %130, i64* %146, align 8
  br label %150

150:                                              ; preds = %135, %145
  %151 = phi i64* [ %136, %135 ], [ %146, %145 ]
  %152 = bitcast %"class.v8::internal::BreakLocation"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %152) #13
  call void @_ZN2v88internal13BreakLocation9FromFrameENS0_6HandleINS0_9DebugInfoEEEPNS0_15JavaScriptFrameE(%"class.v8::internal::BreakLocation"* nonnull sret %6, i64* %151, %"class.v8::internal::JavaScriptFrame"* %123)
  %153 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %6, i64 0, i32 2
  %154 = load i32, i32* %153, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %152) #13
  %155 = icmp eq i32 %154, 4
  br i1 %155, label %160, label %156

156:                                              ; preds = %150
  %157 = icmp eq i32 %154, 5
  %158 = icmp eq i8 %1, 0
  %159 = and i1 %158, %157
  br i1 %159, label %160, label %168

160:                                              ; preds = %156, %150
  %161 = load i8, i8* %36, align 4
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %163, label %166

163:                                              ; preds = %160
  %164 = load i64, i64* %85, align 8
  %165 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 4, i32 0, i32 0
  store i64 %164, i64* %165, align 8
  br label %166

166:                                              ; preds = %163, %160
  store i8 2, i8* %36, align 4
  %167 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 2
  store i8 1, i8* %167, align 1
  br label %187

168:                                              ; preds = %156
  %169 = load i8, i8* %36, align 4
  %170 = icmp eq i8 %169, 2
  br i1 %170, label %179, label %171

171:                                              ; preds = %168
  %172 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %172, i64 0, i32 108
  %174 = load i8, i8* %173, align 1
  %175 = icmp eq i8 %174, 32
  br i1 %175, label %179, label %176

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 13
  %178 = load i8, i8* %177, align 4, !range !2
  br label %179

179:                                              ; preds = %168, %171, %176
  %180 = phi i8 [ 1, %171 ], [ 1, %168 ], [ %178, %176 ]
  %181 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 2
  store i8 %180, i8* %181, align 1
  %182 = icmp eq i8 %1, 1
  br i1 %182, label %183, label %187

183:                                              ; preds = %179
  %184 = call zeroext i1 @_ZN2v88internal5Debug12IsBlackboxedENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %117)
  %185 = xor i1 %184, true
  %186 = zext i1 %185 to i8
  br label %187

187:                                              ; preds = %179, %183, %166
  %188 = phi i8 [ %1, %179 ], [ %186, %183 ], [ 0, %166 ]
  %189 = bitcast %"class.v8::internal::Handle<v8::internal::AbstractCode>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #13
  %190 = load i64, i64* %87, align 8
  %191 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AbstractCode>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AbstractCode>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %190, i64* %191, align 8
  %192 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AbstractCode>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AbstractCode>::ObjectRef"* %7, i64 0, i32 0
  %193 = call i32 @_ZN2v88internal12AbstractCode23SourceStatementPositionEi(%"class.v8::internal::AbstractCode"* nonnull %192, i32 %89) #13
  %194 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 7
  store i32 %193, i32* %194, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #13
  %195 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 8
  store i32 %74, i32* %195, align 8
  %196 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 11, i32 0, i32 0
  store i64 0, i64* %196, align 8
  br label %222

197:                                              ; preds = %73
  %198 = load i32 (%"class.v8::internal::StackFrame"*)**, i32 (%"class.v8::internal::StackFrame"*)*** %76, align 8
  %199 = load i32 (%"class.v8::internal::StackFrame"*)*, i32 (%"class.v8::internal::StackFrame"*)** %198, align 8
  %200 = call i32 %199(%"class.v8::internal::StackFrame"* %75) #13
  %201 = icmp ne i32 %200, 4
  %202 = icmp eq i8 %1, 0
  %203 = or i1 %202, %201
  br i1 %203, label %222, label %204

204:                                              ; preds = %197
  %205 = bitcast %"class.v8::internal::CommonFrame"* %41 to %"class.v8::internal::WasmFrame"*
  %206 = call %"class.v8::internal::wasm::NativeModule"* @_ZNK2v88internal9WasmFrame13native_moduleEv(%"class.v8::internal::WasmFrame"* %205) #13
  %207 = call %"class.v8::internal::wasm::DebugInfo"* @_ZN2v88internal4wasm12NativeModule12GetDebugInfoEv(%"class.v8::internal::wasm::NativeModule"* %206) #13
  %208 = call zeroext i1 @_ZN2v88internal4wasm9DebugInfo11PrepareStepEPNS0_9WasmFrameE(%"class.v8::internal::wasm::DebugInfo"* %207, %"class.v8::internal::WasmFrame"* %205) #13
  %209 = load i8, i8* %36, align 4
  %210 = icmp eq i8 %209, 2
  br i1 %210, label %219, label %211

211:                                              ; preds = %204
  %212 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %213 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %212, i64 0, i32 108
  %214 = load i8, i8* %213, align 1
  %215 = icmp eq i8 %214, 32
  br i1 %215, label %219, label %216

216:                                              ; preds = %211
  %217 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 13
  %218 = load i8, i8* %217, align 4, !range !2
  br label %219

219:                                              ; preds = %204, %211, %216
  %220 = phi i8 [ 1, %211 ], [ 1, %204 ], [ %218, %216 ]
  %221 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 2
  store i8 %220, i8* %221, align 1
  br i1 %208, label %346, label %222

222:                                              ; preds = %219, %187, %197
  %223 = phi i64* [ null, %197 ], [ null, %219 ], [ %117, %187 ]
  %224 = phi i32 [ 0, %197 ], [ 0, %219 ], [ %154, %187 ]
  %225 = phi i8 [ %1, %197 ], [ 0, %219 ], [ %188, %187 ]
  %226 = sext i8 %225 to i32
  switch i32 %226, label %346 [
    i32 -1, label %227
    i32 0, label %228
    i32 1, label %343
    i32 2, label %345
  ]

227:                                              ; preds = %222
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

228:                                              ; preds = %222
  %229 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 7
  store i32 -1, i32* %229, align 4
  %230 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 8
  store i32 -1, i32* %230, align 8
  %231 = icmp eq i64* %223, null
  %232 = icmp sgt i32 %224, 3
  %233 = or i1 %231, %232
  br i1 %233, label %239, label %234

234:                                              ; preds = %228
  %235 = call zeroext i1 @_ZN2v88internal5Debug12IsBlackboxedENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* nonnull %223)
  br i1 %235, label %239, label %236

236:                                              ; preds = %234
  %237 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 9
  store i32 %74, i32* %237, align 4
  %238 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 5
  store i8 1, i8* %238, align 8
  call void @_ZN2v88internal5Debug16FloodWithOneShotENS0_6HandleINS0_18SharedFunctionInfoEEEb(%"class.v8::internal::Debug"* %0, i64* nonnull %223, i1 zeroext true)
  br label %346

239:                                              ; preds = %234, %228
  %240 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %39, align 8
  %241 = icmp eq %"class.v8::internal::StackFrame"* %240, null
  br i1 %241, label %346, label %242

242:                                              ; preds = %239
  %243 = bitcast %"class.v8::internal::StackFrame"** %39 to %"class.v8::internal::JavaScriptFrame"**
  %244 = bitcast %"class.std::__1::vector.1542"* %8 to i8*
  %245 = getelementptr inbounds %"class.std::__1::vector.1542", %"class.std::__1::vector.1542"* %8, i64 0, i32 0, i32 0
  %246 = getelementptr inbounds %"class.std::__1::vector.1542", %"class.std::__1::vector.1542"* %8, i64 0, i32 0, i32 1
  %247 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 9
  %248 = bitcast %"class.v8::internal::Handle.769"** %246 to i64*
  br label %249

249:                                              ; preds = %242, %338
  %250 = phi %"class.v8::internal::StackFrame"* [ %240, %242 ], [ %341, %338 ]
  %251 = phi i32 [ %74, %242 ], [ %340, %338 ]
  %252 = phi i8 [ 1, %242 ], [ %339, %338 ]
  %253 = bitcast %"class.v8::internal::StackFrame"* %250 to i32 (%"class.v8::internal::StackFrame"*)***
  %254 = load i32 (%"class.v8::internal::StackFrame"*)**, i32 (%"class.v8::internal::StackFrame"*)*** %253, align 8
  %255 = load i32 (%"class.v8::internal::StackFrame"*)*, i32 (%"class.v8::internal::StackFrame"*)** %254, align 8
  %256 = call i32 %255(%"class.v8::internal::StackFrame"* nonnull %250) #13
  %257 = icmp eq i32 %256, 4
  br i1 %257, label %258, label %266

258:                                              ; preds = %249
  %259 = and i8 %252, 1
  %260 = icmp eq i8 %259, 0
  br i1 %260, label %261, label %338

261:                                              ; preds = %258
  %262 = bitcast %"class.v8::internal::StackFrame"** %39 to %"class.v8::internal::WasmFrame"**
  %263 = load %"class.v8::internal::WasmFrame"*, %"class.v8::internal::WasmFrame"** %262, align 8
  %264 = call %"class.v8::internal::wasm::NativeModule"* @_ZNK2v88internal9WasmFrame13native_moduleEv(%"class.v8::internal::WasmFrame"* %263) #13
  %265 = call %"class.v8::internal::wasm::DebugInfo"* @_ZN2v88internal4wasm12NativeModule12GetDebugInfoEv(%"class.v8::internal::wasm::NativeModule"* %264) #13
  call void @_ZN2v88internal4wasm9DebugInfo16PrepareStepOutToEPNS0_9WasmFrameE(%"class.v8::internal::wasm::DebugInfo"* %265, %"class.v8::internal::WasmFrame"* %263) #13
  br label %346

266:                                              ; preds = %249
  %267 = load %"class.v8::internal::JavaScriptFrame"*, %"class.v8::internal::JavaScriptFrame"** %243, align 8
  %268 = load i8, i8* %36, align 4
  %269 = icmp eq i8 %268, 2
  br i1 %269, label %270, label %276

270:                                              ; preds = %266
  %271 = bitcast %"class.v8::internal::JavaScriptFrame"* %267 to i64 (%"class.v8::internal::JavaScriptFrame"*)***
  %272 = load i64 (%"class.v8::internal::JavaScriptFrame"*)**, i64 (%"class.v8::internal::JavaScriptFrame"*)*** %271, align 8
  %273 = getelementptr inbounds i64 (%"class.v8::internal::JavaScriptFrame"*)*, i64 (%"class.v8::internal::JavaScriptFrame"*)** %272, i64 13
  %274 = load i64 (%"class.v8::internal::JavaScriptFrame"*)*, i64 (%"class.v8::internal::JavaScriptFrame"*)** %273, align 8
  %275 = call i64 %274(%"class.v8::internal::JavaScriptFrame"* %267) #13
  call void @_ZN2v88internal11Deoptimizer18DeoptimizeFunctionENS0_10JSFunctionENS0_4CodeE(i64 %275, i64 0) #13
  br label %276

276:                                              ; preds = %270, %266
  %277 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %278 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %277, i64 0, i32 31
  %279 = bitcast %"struct.v8::internal::HandleScopeData"* %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %277, i64 0, i32 31, i32 1
  %282 = load i64*, i64** %281, align 8
  %283 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %277, i64 0, i32 31, i32 2
  %284 = load i32, i32* %283, align 8
  %285 = add nsw i32 %284, 1
  store i32 %285, i32* %283, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %244) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %244, i8 0, i64 24, i1 false) #13
  call void @_ZNK2v88internal15JavaScriptFrame12GetFunctionsEPNSt3__16vectorINS0_6HandleINS0_18SharedFunctionInfoEEENS2_9allocatorIS6_EEEE(%"class.v8::internal::JavaScriptFrame"* %267, %"class.std::__1::vector.1542"* nonnull %8) #13
  %286 = load %"class.v8::internal::Handle.769"*, %"class.v8::internal::Handle.769"** %245, align 8
  %287 = load %"class.v8::internal::Handle.769"*, %"class.v8::internal::Handle.769"** %246, align 8
  %288 = icmp eq %"class.v8::internal::Handle.769"* %286, %287
  br i1 %288, label %312, label %289

289:                                              ; preds = %276, %306
  %290 = phi %"class.v8::internal::Handle.769"* [ %308, %306 ], [ %286, %276 ]
  %291 = phi %"class.v8::internal::Handle.769"* [ %307, %306 ], [ %287, %276 ]
  %292 = phi i32 [ %310, %306 ], [ %251, %276 ]
  %293 = phi i8 [ %309, %306 ], [ %252, %276 ]
  %294 = getelementptr inbounds %"class.v8::internal::Handle.769", %"class.v8::internal::Handle.769"* %291, i64 -1
  %295 = getelementptr inbounds %"class.v8::internal::Handle.769", %"class.v8::internal::Handle.769"* %294, i64 0, i32 0, i32 0
  %296 = load i64*, i64** %295, align 8
  store %"class.v8::internal::Handle.769"* %294, %"class.v8::internal::Handle.769"** %246, align 8
  %297 = and i8 %293, 1
  %298 = icmp eq i8 %297, 0
  br i1 %298, label %299, label %306

299:                                              ; preds = %289
  %300 = call zeroext i1 @_ZN2v88internal5Debug12IsBlackboxedENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %296)
  br i1 %300, label %301, label %304

301:                                              ; preds = %299
  %302 = load %"class.v8::internal::Handle.769"*, %"class.v8::internal::Handle.769"** %245, align 8
  %303 = load %"class.v8::internal::Handle.769"*, %"class.v8::internal::Handle.769"** %246, align 8
  br label %306

304:                                              ; preds = %299
  call void @_ZN2v88internal5Debug16FloodWithOneShotENS0_6HandleINS0_18SharedFunctionInfoEEEb(%"class.v8::internal::Debug"* %0, i64* %296, i1 zeroext false)
  store i32 %292, i32* %247, align 4
  %305 = load %"class.v8::internal::Handle.769"*, %"class.v8::internal::Handle.769"** %245, align 8
  br label %312

306:                                              ; preds = %301, %289
  %307 = phi %"class.v8::internal::Handle.769"* [ %303, %301 ], [ %294, %289 ]
  %308 = phi %"class.v8::internal::Handle.769"* [ %302, %301 ], [ %290, %289 ]
  %309 = phi i8 [ %293, %301 ], [ 0, %289 ]
  %310 = add nsw i32 %292, -1
  %311 = icmp eq %"class.v8::internal::Handle.769"* %308, %307
  br i1 %311, label %312, label %289

312:                                              ; preds = %306, %276, %304
  %313 = phi i8 [ %293, %304 ], [ %252, %276 ], [ %309, %306 ]
  %314 = phi i32 [ %292, %304 ], [ %251, %276 ], [ %310, %306 ]
  %315 = phi %"class.v8::internal::Handle.769"* [ %305, %304 ], [ %286, %276 ], [ %307, %306 ]
  %316 = phi i32 [ 1, %304 ], [ 0, %276 ], [ 0, %306 ]
  %317 = icmp eq %"class.v8::internal::Handle.769"* %315, null
  br i1 %317, label %321, label %318

318:                                              ; preds = %312
  %319 = ptrtoint %"class.v8::internal::Handle.769"* %315 to i64
  store i64 %319, i64* %248, align 8
  %320 = bitcast %"class.v8::internal::Handle.769"* %315 to i8*
  call void @_ZdlPv(i8* %320) #17
  br label %321

321:                                              ; preds = %312, %318
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %244) #13
  %322 = icmp eq %"class.v8::internal::Isolate"* %277, null
  br i1 %322, label %336, label %323

323:                                              ; preds = %321
  %324 = inttoptr i64 %280 to i64*
  %325 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %278, i64 0, i32 0
  %326 = load i64*, i64** %325, align 8
  store i64 %280, i64* %279, align 8
  %327 = load i32, i32* %283, align 8
  %328 = add nsw i32 %327, -1
  store i32 %328, i32* %283, align 8
  %329 = load i64*, i64** %281, align 8
  %330 = icmp eq i64* %329, %282
  br i1 %330, label %333, label %331

331:                                              ; preds = %323
  store i64* %282, i64** %281, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %277) #13
  %332 = load i64*, i64** %325, align 8
  br label %333

333:                                              ; preds = %331, %323
  %334 = phi i64* [ %332, %331 ], [ %324, %323 ]
  %335 = phi i64* [ %282, %331 ], [ %326, %323 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %334, i64* %335) #13
  br label %336

336:                                              ; preds = %321, %333
  %337 = icmp eq i32 %316, 0
  br i1 %337, label %338, label %346

338:                                              ; preds = %258, %336
  %339 = phi i8 [ %313, %336 ], [ 0, %258 ]
  %340 = phi i32 [ %314, %336 ], [ %251, %258 ]
  call void @_ZN2v88internal23StackTraceFrameIterator7AdvanceEv(%"class.v8::internal::StackTraceFrameIterator"* nonnull %4) #13
  %341 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %39, align 8
  %342 = icmp eq %"class.v8::internal::StackFrame"* %341, null
  br i1 %342, label %346, label %249

343:                                              ; preds = %222
  %344 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 9
  store i32 %74, i32* %344, align 4
  br label %345

345:                                              ; preds = %222, %343
  call void @_ZN2v88internal5Debug16FloodWithOneShotENS0_6HandleINS0_18SharedFunctionInfoEEEb(%"class.v8::internal::Debug"* %0, i64* %223, i1 zeroext false)
  br label %346

346:                                              ; preds = %338, %336, %239, %116, %219, %261, %345, %222, %236
  call void @llvm.lifetime.end.p0i8(i64 1616, i8* nonnull %37) #13
  br label %347

347:                                              ; preds = %2, %346
  %348 = icmp eq %"class.v8::internal::Isolate"* %10, null
  br i1 %348, label %362, label %349

349:                                              ; preds = %347
  %350 = inttoptr i64 %13 to i64*
  %351 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %11, i64 0, i32 0
  %352 = load i64*, i64** %351, align 8
  store i64 %13, i64* %12, align 8
  %353 = load i32, i32* %16, align 8
  %354 = add nsw i32 %353, -1
  store i32 %354, i32* %16, align 8
  %355 = load i64*, i64** %14, align 8
  %356 = icmp eq i64* %355, %15
  br i1 %356, label %359, label %357

357:                                              ; preds = %349
  store i64* %15, i64** %14, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %10) #13
  %358 = load i64*, i64** %351, align 8
  br label %359

359:                                              ; preds = %357, %349
  %360 = phi i64* [ %358, %357 ], [ %350, %349 ]
  %361 = phi i64* [ %15, %357 ], [ %352, %349 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %360, i64* %361) #13
  br label %362

362:                                              ; preds = %347, %359
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug7IterateEPNS0_11RootVisitorE(%"class.v8::internal::Debug"*, %"class.v8::internal::RootVisitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 10
  %4 = ptrtoint %"class.v8::internal::Object"* %3 to i64
  %5 = bitcast %"class.v8::internal::RootVisitor"* %1 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)***
  %6 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %6, i64 3
  %8 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %7, align 8
  tail call void %8(%"class.v8::internal::RootVisitor"* %1, i32 8, i8* null, i64 %4) #13
  %9 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 11
  %10 = ptrtoint %"class.v8::internal::Object"* %9 to i64
  %11 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*** %5, align 8
  %12 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %11, i64 3
  %13 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %12, align 8
  tail call void %13(%"class.v8::internal::RootVisitor"* %1, i32 8, i8* null, i64 %10) #13
  %14 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 4
  %15 = ptrtoint %"class.v8::internal::Object"* %14 to i64
  %16 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*** %5, align 8
  %17 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %16, i64 3
  %18 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %17, align 8
  tail call void %18(%"class.v8::internal::RootVisitor"* %1, i32 8, i8* null, i64 %15) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug7IterateEPNS0_11RootVisitorEPNS1_11ThreadLocalE(%"class.v8::internal::RootVisitor"*, %"class.v8::internal::Debug::ThreadLocal"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Debug::ThreadLocal"* %1, i64 0, i32 10
  %4 = ptrtoint %"class.v8::internal::Object"* %3 to i64
  %5 = bitcast %"class.v8::internal::RootVisitor"* %0 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)***
  %6 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %6, i64 3
  %8 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %7, align 8
  tail call void %8(%"class.v8::internal::RootVisitor"* %0, i32 8, i8* null, i64 %4) #13
  %9 = getelementptr inbounds %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Debug::ThreadLocal"* %1, i64 0, i32 11
  %10 = ptrtoint %"class.v8::internal::Object"* %9 to i64
  %11 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*** %5, align 8
  %12 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %11, i64 3
  %13 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %12, align 8
  tail call void %13(%"class.v8::internal::RootVisitor"* %0, i32 8, i8* null, i64 %10) #13
  %14 = getelementptr inbounds %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Debug::ThreadLocal"* %1, i64 0, i32 4
  %15 = ptrtoint %"class.v8::internal::Object"* %14 to i64
  %16 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*** %5, align 8
  %17 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %16, i64 3
  %18 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %17, align 8
  tail call void %18(%"class.v8::internal::RootVisitor"* %0, i32 8, i8* null, i64 %15) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal5Debug7IterateEPNS0_11RootVisitorEPc(%"class.v8::internal::RootVisitor"*, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 40
  %4 = ptrtoint i8* %3 to i64
  %5 = bitcast %"class.v8::internal::RootVisitor"* %0 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)***
  %6 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %6, i64 3
  %8 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %7, align 8
  tail call void %8(%"class.v8::internal::RootVisitor"* %0, i32 8, i8* null, i64 %4) #13
  %9 = getelementptr inbounds i8, i8* %1, i64 48
  %10 = ptrtoint i8* %9 to i64
  %11 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*** %5, align 8
  %12 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %11, i64 3
  %13 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %12, align 8
  tail call void %13(%"class.v8::internal::RootVisitor"* %0, i32 8, i8* null, i64 %10) #13
  %14 = getelementptr inbounds i8, i8* %1, i64 16
  %15 = ptrtoint i8* %14 to i64
  %16 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*** %5, align 8
  %17 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %16, i64 3
  %18 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %17, align 8
  tail call void %18(%"class.v8::internal::RootVisitor"* %0, i32 8, i8* null, i64 %15) #13
  %19 = getelementptr inbounds i8, i8* %1, i64 64
  ret i8* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17DebugInfoListNodeC2EPNS0_7IsolateENS0_9DebugInfoE(%"class.v8::internal::DebugInfoListNode"* nocapture, %"class.v8::internal::Isolate"* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %0, i64 0, i32 1
  store %"class.v8::internal::DebugInfoListNode"* null, %"class.v8::internal::DebugInfoListNode"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 36
  %6 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %5, align 8
  %7 = tail call i64* @_ZN2v88internal13GlobalHandles6CreateENS0_6ObjectE(%"class.v8::internal::GlobalHandles"* %6, i64 %2) #13
  %8 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %0, i64 0, i32 0
  store i64* %7, i64** %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17DebugInfoListNodeD2Ev(%"class.v8::internal::DebugInfoListNode"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = icmp eq i64* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN2v88internal13GlobalHandles7DestroyEPm(i64* nonnull %3) #13
  store i64* null, i64** %2, align 8
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

declare void @_ZN2v88internal13GlobalHandles7DestroyEPm(i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug6UnloadEv(%"class.v8::internal::Debug"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Handle.1211", align 8
  %3 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %4 = alloca %"class.std::__1::function", align 8
  %5 = alloca %"class.v8::internal::Handle.1211", align 8
  %6 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %7 = alloca %"class.std::__1::function", align 8
  tail call void @_ZN2v88internal5Debug19ClearAllBreakPointsEv(%"class.v8::internal::Debug"* %0)
  %8 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 10
  %9 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %8, align 8
  %10 = icmp eq %"class.v8::internal::DebugInfoListNode"* %9, null
  br i1 %10, label %20, label %11

11:                                               ; preds = %1, %11
  %12 = phi %"class.v8::internal::DebugInfoListNode"* [ %16, %11 ], [ %9, %1 ]
  %13 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %12, i64 0, i32 0
  %14 = load i64*, i64** %13, align 8
  tail call void @_ZN2v88internal5Debug16ClearBreakPointsENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* undef, i64* %14) #13
  tail call void @_ZN2v88internal5Debug16ApplyBreakPointsENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* %0, i64* %14) #13
  %15 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %12, i64 0, i32 1
  %16 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %15, align 8
  %17 = icmp eq %"class.v8::internal::DebugInfoListNode"* %16, null
  br i1 %17, label %18, label %11

18:                                               ; preds = %11
  %19 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %8, align 8
  br label %20

20:                                               ; preds = %18, %1
  %21 = phi %"class.v8::internal::DebugInfoListNode"* [ %19, %18 ], [ null, %1 ]
  %22 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 2
  store i8 -1, i8* %22, align 4
  %23 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 7
  store i32 -1, i32* %23, align 4
  %24 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 4, i32 0, i32 0
  store i64 0, i64* %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 5
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 8
  store i32 -1, i32* %26, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 9
  store i32 -1, i32* %27, align 4
  %28 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 13
  store i8 0, i8* %28, align 4
  %29 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %30 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 108
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 32
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 2
  store i8 %34, i8* %35, align 1
  %36 = bitcast %"class.std::__1::function"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #13
  %37 = ptrtoint %"class.v8::internal::Debug"* %0 to i64
  %38 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1211"*)* @"_ZNSt3__110__function16__policy_invokerIFvN2v88internal6HandleINS3_9DebugInfoEEEEE11__call_implINS0_20__default_alloc_funcIZNS3_5Debug22RemoveAllCoverageInfosEvE3$_1S7_EEEEvPKNS0_16__policy_storageEOS6_", void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1211"*)** %38, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal5Debug22RemoveAllCoverageInfosEvE3$_1FvNS5_6HandleINS5_9DebugInfoEEEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %39, align 8
  %40 = bitcast %"class.std::__1::function"* %7 to i64*
  store i64 %37, i64* %40, align 8
  %41 = icmp eq %"class.v8::internal::DebugInfoListNode"* %21, null
  br i1 %41, label %67, label %42

42:                                               ; preds = %20
  %43 = bitcast %"class.v8::internal::Handle.1211"* %5 to i8*
  %44 = getelementptr inbounds %"class.v8::internal::Handle.1211", %"class.v8::internal::Handle.1211"* %5, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 0
  %46 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %6 to i8*
  %47 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %6, i64 0, i32 0
  br label %49

49:                                               ; preds = %63, %42
  %50 = phi void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1211"*)* [ @"_ZNSt3__110__function16__policy_invokerIFvN2v88internal6HandleINS3_9DebugInfoEEEEE11__call_implINS0_20__default_alloc_funcIZNS3_5Debug22RemoveAllCoverageInfosEvE3$_1S7_EEEEvPKNS0_16__policy_storageEOS6_", %42 ], [ %64, %63 ]
  %51 = phi %"class.v8::internal::DebugInfoListNode"* [ null, %42 ], [ %61, %63 ]
  %52 = phi %"class.v8::internal::DebugInfoListNode"* [ %21, %42 ], [ %54, %63 ]
  %53 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %52, i64 0, i32 1
  %54 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %52, i64 0, i32 0
  %56 = load i64*, i64** %55, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #13
  store i64* %56, i64** %44, align 8
  call void %50(%"union.std::__1::__function::__policy_storage"* nonnull %45, %"class.v8::internal::Handle.1211"* nonnull dereferenceable(8) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #13
  %57 = load i64, i64* %56, align 8
  store i64 %57, i64* %47, align 8
  %58 = call zeroext i1 @_ZNK2v88internal9DebugInfo7IsEmptyEv(%"class.v8::internal::DebugInfo"* nonnull %48) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #13
  br i1 %58, label %59, label %60

59:                                               ; preds = %49
  call void @_ZN2v88internal5Debug21FreeDebugInfoListNodeEPNS0_17DebugInfoListNodeES3_(%"class.v8::internal::Debug"* %0, %"class.v8::internal::DebugInfoListNode"* %51, %"class.v8::internal::DebugInfoListNode"* nonnull %52) #13
  br label %60

60:                                               ; preds = %59, %49
  %61 = phi %"class.v8::internal::DebugInfoListNode"* [ %51, %59 ], [ %52, %49 ]
  %62 = icmp eq %"class.v8::internal::DebugInfoListNode"* %54, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %60
  %64 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1211"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1211"*)** %38, align 8
  br label %49

65:                                               ; preds = %60
  %66 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %39, align 8
  br label %67

67:                                               ; preds = %65, %20
  %68 = phi %"struct.std::__1::__function::__policy"* [ %66, %65 ], [ @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal5Debug22RemoveAllCoverageInfosEvE3$_1FvNS5_6HandleINS5_9DebugInfoEEEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %20 ]
  %69 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %68, i64 0, i32 1
  %70 = load void (i8*)*, void (i8*)** %69, align 8
  %71 = icmp eq void (i8*)* %70, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  call void %70(i8* %74) #13
  br label %75

75:                                               ; preds = %67, %72
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #13
  %76 = bitcast %"class.std::__1::function"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %76) #13
  %77 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 1, i32 0
  %78 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1211"*)* @"_ZNSt3__110__function16__policy_invokerIFvN2v88internal6HandleINS3_9DebugInfoEEEEE11__call_implINS0_20__default_alloc_funcIZNS3_5Debug21ClearAllDebuggerHintsEvE3$_2S7_EEEEvPKNS0_16__policy_storageEOS6_", void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1211"*)** %77, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal5Debug21ClearAllDebuggerHintsEvE3$_2FvNS5_6HandleINS5_9DebugInfoEEEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %78, align 8
  %79 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %8, align 8
  %80 = icmp eq %"class.v8::internal::DebugInfoListNode"* %79, null
  br i1 %80, label %106, label %81

81:                                               ; preds = %75
  %82 = bitcast %"class.v8::internal::Handle.1211"* %2 to i8*
  %83 = getelementptr inbounds %"class.v8::internal::Handle.1211", %"class.v8::internal::Handle.1211"* %2, i64 0, i32 0, i32 0
  %84 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 0
  %85 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3 to i8*
  %86 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3, i64 0, i32 0
  br label %88

88:                                               ; preds = %102, %81
  %89 = phi void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1211"*)* [ @"_ZNSt3__110__function16__policy_invokerIFvN2v88internal6HandleINS3_9DebugInfoEEEEE11__call_implINS0_20__default_alloc_funcIZNS3_5Debug21ClearAllDebuggerHintsEvE3$_2S7_EEEEvPKNS0_16__policy_storageEOS6_", %81 ], [ %103, %102 ]
  %90 = phi %"class.v8::internal::DebugInfoListNode"* [ null, %81 ], [ %100, %102 ]
  %91 = phi %"class.v8::internal::DebugInfoListNode"* [ %79, %81 ], [ %93, %102 ]
  %92 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %91, i64 0, i32 1
  %93 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %92, align 8
  %94 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %91, i64 0, i32 0
  %95 = load i64*, i64** %94, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #13
  store i64* %95, i64** %83, align 8
  call void %89(%"union.std::__1::__function::__policy_storage"* nonnull %84, %"class.v8::internal::Handle.1211"* nonnull dereferenceable(8) %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #13
  %96 = load i64, i64* %95, align 8
  store i64 %96, i64* %86, align 8
  %97 = call zeroext i1 @_ZNK2v88internal9DebugInfo7IsEmptyEv(%"class.v8::internal::DebugInfo"* nonnull %87) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #13
  br i1 %97, label %98, label %99

98:                                               ; preds = %88
  call void @_ZN2v88internal5Debug21FreeDebugInfoListNodeEPNS0_17DebugInfoListNodeES3_(%"class.v8::internal::Debug"* %0, %"class.v8::internal::DebugInfoListNode"* %90, %"class.v8::internal::DebugInfoListNode"* nonnull %91) #13
  br label %99

99:                                               ; preds = %98, %88
  %100 = phi %"class.v8::internal::DebugInfoListNode"* [ %90, %98 ], [ %91, %88 ]
  %101 = icmp eq %"class.v8::internal::DebugInfoListNode"* %93, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %99
  %103 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1211"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1211"*)** %77, align 8
  br label %88

104:                                              ; preds = %99
  %105 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %78, align 8
  br label %106

106:                                              ; preds = %104, %75
  %107 = phi %"struct.std::__1::__function::__policy"* [ %105, %104 ], [ @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal5Debug21ClearAllDebuggerHintsEvE3$_2FvNS5_6HandleINS5_9DebugInfoEEEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %75 ]
  %108 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %107, i64 0, i32 1
  %109 = load void (i8*)*, void (i8*)** %108, align 8
  %110 = icmp eq void (i8*)* %109, null
  br i1 %110, label %114, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  call void %109(i8* %113) #13
  br label %114

114:                                              ; preds = %106, %111
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %76) #13
  %115 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 0
  store %"class.v8::debug::DebugDelegate"* null, %"class.v8::debug::DebugDelegate"** %115, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug19ClearAllBreakPointsEv(%"class.v8::internal::Debug"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Handle.1211", align 8
  %3 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %4 = alloca %"class.std::__1::function", align 8
  %5 = bitcast %"class.std::__1::function"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #13
  %6 = ptrtoint %"class.v8::internal::Debug"* %0 to i64
  %7 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1211"*)* @"_ZNSt3__110__function16__policy_invokerIFvN2v88internal6HandleINS3_9DebugInfoEEEEE11__call_implINS0_20__default_alloc_funcIZNS3_5Debug19ClearAllBreakPointsEvE3$_0S7_EEEEvPKNS0_16__policy_storageEOS6_", void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1211"*)** %7, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal5Debug19ClearAllBreakPointsEvE3$_0FvNS5_6HandleINS5_9DebugInfoEEEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %8, align 8
  %9 = bitcast %"class.std::__1::function"* %4 to i64*
  store i64 %6, i64* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 10
  %11 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %10, align 8
  %12 = icmp eq %"class.v8::internal::DebugInfoListNode"* %11, null
  br i1 %12, label %38, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.v8::internal::Handle.1211"* %2 to i8*
  %15 = getelementptr inbounds %"class.v8::internal::Handle.1211", %"class.v8::internal::Handle.1211"* %2, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 0
  %17 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3 to i8*
  %18 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3, i64 0, i32 0
  br label %20

20:                                               ; preds = %34, %13
  %21 = phi void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1211"*)* [ @"_ZNSt3__110__function16__policy_invokerIFvN2v88internal6HandleINS3_9DebugInfoEEEEE11__call_implINS0_20__default_alloc_funcIZNS3_5Debug19ClearAllBreakPointsEvE3$_0S7_EEEEvPKNS0_16__policy_storageEOS6_", %13 ], [ %35, %34 ]
  %22 = phi %"class.v8::internal::DebugInfoListNode"* [ null, %13 ], [ %32, %34 ]
  %23 = phi %"class.v8::internal::DebugInfoListNode"* [ %11, %13 ], [ %25, %34 ]
  %24 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %23, i64 0, i32 1
  %25 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %23, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  store i64* %27, i64** %15, align 8
  call void %21(%"union.std::__1::__function::__policy_storage"* nonnull %16, %"class.v8::internal::Handle.1211"* nonnull dereferenceable(8) %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %18, align 8
  %29 = call zeroext i1 @_ZNK2v88internal9DebugInfo7IsEmptyEv(%"class.v8::internal::DebugInfo"* nonnull %19) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br i1 %29, label %30, label %31

30:                                               ; preds = %20
  call void @_ZN2v88internal5Debug21FreeDebugInfoListNodeEPNS0_17DebugInfoListNodeES3_(%"class.v8::internal::Debug"* %0, %"class.v8::internal::DebugInfoListNode"* %22, %"class.v8::internal::DebugInfoListNode"* nonnull %23) #13
  br label %31

31:                                               ; preds = %30, %20
  %32 = phi %"class.v8::internal::DebugInfoListNode"* [ %22, %30 ], [ %23, %20 ]
  %33 = icmp eq %"class.v8::internal::DebugInfoListNode"* %25, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1211"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1211"*)** %7, align 8
  br label %20

36:                                               ; preds = %31
  %37 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %8, align 8
  br label %38

38:                                               ; preds = %36, %1
  %39 = phi %"struct.std::__1::__function::__policy"* [ %37, %36 ], [ @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal5Debug19ClearAllBreakPointsEvE3$_0FvNS5_6HandleINS5_9DebugInfoEEEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %1 ]
  %40 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %39, i64 0, i32 1
  %41 = load void (i8*)*, void (i8*)** %40, align 8
  %42 = icmp eq void (i8*)* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void %41(i8* %45) #13
  br label %46

46:                                               ; preds = %38, %43
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #13
  %47 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 15
  %48 = getelementptr inbounds %"class.v8::internal::Handle.1210", %"class.v8::internal::Handle.1210"* %47, i64 0, i32 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = icmp eq i64* %49, null
  br i1 %50, label %103, label %51

51:                                               ; preds = %46
  %52 = load i64, i64* %49, align 8
  %53 = add i64 %52, 7
  %54 = inttoptr i64 %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = icmp sgt i32 %55, 1
  br i1 %56, label %57, label %61

57:                                               ; preds = %51
  %58 = lshr i32 %55, 1
  %59 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %60 = zext i32 %58 to i64
  br label %63

61:                                               ; preds = %98, %51
  %62 = bitcast %"class.v8::internal::Handle.1210"* %47 to i64*
  store i64 0, i64* %62, align 8
  br label %103

63:                                               ; preds = %100, %57
  %64 = phi i64 [ %52, %57 ], [ %102, %100 ]
  %65 = phi i64 [ %60, %57 ], [ %66, %100 ]
  %66 = add nsw i64 %65, -1
  %67 = trunc i64 %66 to i32
  %68 = shl i32 %67, 2
  %69 = sext i32 %68 to i64
  %70 = add nsw i64 %69, 11
  %71 = add i64 %70, %64
  %72 = inttoptr i64 %71 to i32*
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = zext i32 %73 to i64
  %75 = and i64 %74, 1
  %76 = icmp ne i64 %75, 0
  %77 = icmp ne i32 %73, 3
  %78 = and i1 %77, %76
  br i1 %78, label %79, label %98

79:                                               ; preds = %63
  %80 = and i64 %64, -4294967296
  %81 = and i64 %74, 4294967293
  %82 = or i64 %81, %80
  call void @_ZN2v88internal10WasmScript19ClearAllBreakpointsENS0_6ScriptE(i64 %82) #13
  %83 = add i64 %82, 39
  %84 = inttoptr i64 %83 to i32*
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i64
  %87 = or i64 %80, %86
  %88 = add i64 %87, 3
  %89 = inttoptr i64 %88 to %"struct.v8::internal::ManagedPtrDestructor"**
  %90 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %89, align 1
  %91 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %90, i64 0, i32 3
  %92 = bitcast i8** %91 to %"class.std::__1::shared_ptr.1613"**
  %93 = load %"class.std::__1::shared_ptr.1613"*, %"class.std::__1::shared_ptr.1613"** %92, align 8
  %94 = getelementptr inbounds %"class.std::__1::shared_ptr.1613", %"class.std::__1::shared_ptr.1613"* %93, i64 0, i32 0
  %95 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %94, align 8
  %96 = call %"class.v8::internal::wasm::DebugInfo"* @_ZN2v88internal4wasm12NativeModule12GetDebugInfoEv(%"class.v8::internal::wasm::NativeModule"* %95) #13
  %97 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %59, align 8
  call void @_ZN2v88internal4wasm9DebugInfo13RemoveIsolateEPNS0_7IsolateE(%"class.v8::internal::wasm::DebugInfo"* %96, %"class.v8::internal::Isolate"* %97) #13
  br label %98

98:                                               ; preds = %63, %79
  %99 = icmp sgt i64 %66, 0
  br i1 %99, label %100, label %61

100:                                              ; preds = %98
  %101 = load i64*, i64** %48, align 8
  %102 = load i64, i64* %101, align 8
  br label %63

103:                                              ; preds = %61, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug13ClearSteppingEv(%"class.v8::internal::Debug"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 10
  %3 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %2, align 8
  %4 = icmp eq %"class.v8::internal::DebugInfoListNode"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"class.v8::internal::DebugInfoListNode"* [ %10, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %6, i64 0, i32 0
  %8 = load i64*, i64** %7, align 8
  tail call void @_ZN2v88internal5Debug16ClearBreakPointsENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* undef, i64* %8) #13
  tail call void @_ZN2v88internal5Debug16ApplyBreakPointsENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* %0, i64* %8) #13
  %9 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %6, i64 0, i32 1
  %10 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %9, align 8
  %11 = icmp eq %"class.v8::internal::DebugInfoListNode"* %10, null
  br i1 %11, label %12, label %5

12:                                               ; preds = %5, %1
  %13 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 2
  store i8 -1, i8* %13, align 4
  %14 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 7
  store i32 -1, i32* %14, align 4
  %15 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 4, i32 0, i32 0
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 5
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 8
  store i32 -1, i32* %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 9
  store i32 -1, i32* %18, align 4
  %19 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 13
  store i8 0, i8* %19, align 4
  %20 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %21 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 108
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 32
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 2
  store i8 %25, i8* %26, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug22RemoveAllCoverageInfosEv(%"class.v8::internal::Debug"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Handle.1211", align 8
  %3 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %4 = alloca %"class.std::__1::function", align 8
  %5 = bitcast %"class.std::__1::function"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #13
  %6 = ptrtoint %"class.v8::internal::Debug"* %0 to i64
  %7 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1211"*)* @"_ZNSt3__110__function16__policy_invokerIFvN2v88internal6HandleINS3_9DebugInfoEEEEE11__call_implINS0_20__default_alloc_funcIZNS3_5Debug22RemoveAllCoverageInfosEvE3$_1S7_EEEEvPKNS0_16__policy_storageEOS6_", void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1211"*)** %7, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal5Debug22RemoveAllCoverageInfosEvE3$_1FvNS5_6HandleINS5_9DebugInfoEEEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %8, align 8
  %9 = bitcast %"class.std::__1::function"* %4 to i64*
  store i64 %6, i64* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 10
  %11 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %10, align 8
  %12 = icmp eq %"class.v8::internal::DebugInfoListNode"* %11, null
  br i1 %12, label %38, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.v8::internal::Handle.1211"* %2 to i8*
  %15 = getelementptr inbounds %"class.v8::internal::Handle.1211", %"class.v8::internal::Handle.1211"* %2, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 0
  %17 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3 to i8*
  %18 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3, i64 0, i32 0
  br label %20

20:                                               ; preds = %34, %13
  %21 = phi void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1211"*)* [ @"_ZNSt3__110__function16__policy_invokerIFvN2v88internal6HandleINS3_9DebugInfoEEEEE11__call_implINS0_20__default_alloc_funcIZNS3_5Debug22RemoveAllCoverageInfosEvE3$_1S7_EEEEvPKNS0_16__policy_storageEOS6_", %13 ], [ %35, %34 ]
  %22 = phi %"class.v8::internal::DebugInfoListNode"* [ null, %13 ], [ %32, %34 ]
  %23 = phi %"class.v8::internal::DebugInfoListNode"* [ %11, %13 ], [ %25, %34 ]
  %24 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %23, i64 0, i32 1
  %25 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %23, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  store i64* %27, i64** %15, align 8
  call void %21(%"union.std::__1::__function::__policy_storage"* nonnull %16, %"class.v8::internal::Handle.1211"* nonnull dereferenceable(8) %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %18, align 8
  %29 = call zeroext i1 @_ZNK2v88internal9DebugInfo7IsEmptyEv(%"class.v8::internal::DebugInfo"* nonnull %19) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br i1 %29, label %30, label %31

30:                                               ; preds = %20
  call void @_ZN2v88internal5Debug21FreeDebugInfoListNodeEPNS0_17DebugInfoListNodeES3_(%"class.v8::internal::Debug"* %0, %"class.v8::internal::DebugInfoListNode"* %22, %"class.v8::internal::DebugInfoListNode"* nonnull %23) #13
  br label %31

31:                                               ; preds = %30, %20
  %32 = phi %"class.v8::internal::DebugInfoListNode"* [ %22, %30 ], [ %23, %20 ]
  %33 = icmp eq %"class.v8::internal::DebugInfoListNode"* %25, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1211"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1211"*)** %7, align 8
  br label %20

36:                                               ; preds = %31
  %37 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %8, align 8
  br label %38

38:                                               ; preds = %36, %1
  %39 = phi %"struct.std::__1::__function::__policy"* [ %37, %36 ], [ @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal5Debug22RemoveAllCoverageInfosEvE3$_1FvNS5_6HandleINS5_9DebugInfoEEEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %1 ]
  %40 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %39, i64 0, i32 1
  %41 = load void (i8*)*, void (i8*)** %40, align 8
  %42 = icmp eq void (i8*)* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void %41(i8* %45) #13
  br label %46

46:                                               ; preds = %38, %43
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug21ClearAllDebuggerHintsEv(%"class.v8::internal::Debug"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Handle.1211", align 8
  %3 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %4 = alloca %"class.std::__1::function", align 8
  %5 = bitcast %"class.std::__1::function"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1211"*)* @"_ZNSt3__110__function16__policy_invokerIFvN2v88internal6HandleINS3_9DebugInfoEEEEE11__call_implINS0_20__default_alloc_funcIZNS3_5Debug21ClearAllDebuggerHintsEvE3$_2S7_EEEEvPKNS0_16__policy_storageEOS6_", void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1211"*)** %6, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal5Debug21ClearAllDebuggerHintsEvE3$_2FvNS5_6HandleINS5_9DebugInfoEEEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 10
  %9 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %8, align 8
  %10 = icmp eq %"class.v8::internal::DebugInfoListNode"* %9, null
  br i1 %10, label %36, label %11

11:                                               ; preds = %1
  %12 = bitcast %"class.v8::internal::Handle.1211"* %2 to i8*
  %13 = getelementptr inbounds %"class.v8::internal::Handle.1211", %"class.v8::internal::Handle.1211"* %2, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 0
  %15 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3 to i8*
  %16 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3, i64 0, i32 0
  br label %18

18:                                               ; preds = %32, %11
  %19 = phi void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1211"*)* [ @"_ZNSt3__110__function16__policy_invokerIFvN2v88internal6HandleINS3_9DebugInfoEEEEE11__call_implINS0_20__default_alloc_funcIZNS3_5Debug21ClearAllDebuggerHintsEvE3$_2S7_EEEEvPKNS0_16__policy_storageEOS6_", %11 ], [ %33, %32 ]
  %20 = phi %"class.v8::internal::DebugInfoListNode"* [ null, %11 ], [ %30, %32 ]
  %21 = phi %"class.v8::internal::DebugInfoListNode"* [ %9, %11 ], [ %23, %32 ]
  %22 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %21, i64 0, i32 1
  %23 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %21, i64 0, i32 0
  %25 = load i64*, i64** %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #13
  store i64* %25, i64** %13, align 8
  call void %19(%"union.std::__1::__function::__policy_storage"* nonnull %14, %"class.v8::internal::Handle.1211"* nonnull dereferenceable(8) %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #13
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %16, align 8
  %27 = call zeroext i1 @_ZNK2v88internal9DebugInfo7IsEmptyEv(%"class.v8::internal::DebugInfo"* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #13
  br i1 %27, label %28, label %29

28:                                               ; preds = %18
  call void @_ZN2v88internal5Debug21FreeDebugInfoListNodeEPNS0_17DebugInfoListNodeES3_(%"class.v8::internal::Debug"* %0, %"class.v8::internal::DebugInfoListNode"* %20, %"class.v8::internal::DebugInfoListNode"* nonnull %21) #13
  br label %29

29:                                               ; preds = %28, %18
  %30 = phi %"class.v8::internal::DebugInfoListNode"* [ %20, %28 ], [ %21, %18 ]
  %31 = icmp eq %"class.v8::internal::DebugInfoListNode"* %23, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %29
  %33 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1211"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1211"*)** %6, align 8
  br label %18

34:                                               ; preds = %29
  %35 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %7, align 8
  br label %36

36:                                               ; preds = %34, %1
  %37 = phi %"struct.std::__1::__function::__policy"* [ %35, %34 ], [ @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal5Debug21ClearAllDebuggerHintsEvE3$_2FvNS5_6HandleINS5_9DebugInfoEEEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %1 ]
  %38 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %37, i64 0, i32 1
  %39 = load void (i8*)*, void (i8*)** %38, align 8
  %40 = icmp eq void (i8*)* %39, null
  br i1 %40, label %44, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void %39(i8* %43) #13
  br label %44

44:                                               ; preds = %36, %41
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug5BreakEPNS0_15JavaScriptFrameENS0_6HandleINS0_10JSFunctionEEE(%"class.v8::internal::Debug"*, %"class.v8::internal::JavaScriptFrame"*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::StackTraceFrameIterator", align 8
  %5 = alloca %"class.v8::internal::DebugScope", align 8
  %6 = alloca %"class.v8::internal::BreakLocation", align 8
  %7 = alloca %"class.v8::internal::FrameSummary", align 8
  %8 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 5
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %251

11:                                               ; preds = %3
  %12 = bitcast %"class.v8::internal::DebugScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %12) #13
  call void @_ZN2v88internal10DebugScopeC2EPNS0_5DebugE(%"class.v8::internal::DebugScope"* nonnull %5, %"class.v8::internal::Debug"* %0)
  %13 = load i8, i8* %8, align 4, !range !2
  store i8 1, i8* %8, align 4
  %14 = load i64, i64* %2, align 8
  %15 = add i64 %14, 11
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i64 %14, -4294967296
  %19 = zext i32 %17 to i64
  %20 = or i64 %18, %19
  %21 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %22 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 31, i32 4
  %24 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %23, align 8
  %25 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %11
  %27 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %24, i64 %20) #13
  br label %41

28:                                               ; preds = %11
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 31, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 31, i32 1
  %32 = load i64*, i64** %31, align 8
  %33 = icmp eq i64* %30, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %28
  %35 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %22) #13
  br label %36

36:                                               ; preds = %34, %28
  %37 = phi i64* [ %35, %34 ], [ %30, %28 ]
  %38 = ptrtoint i64* %37 to i64
  %39 = add i64 %38, 8
  %40 = inttoptr i64 %39 to i64*
  store i64* %40, i64** %29, align 8
  store i64 %20, i64* %37, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i64* [ %27, %26 ], [ %37, %36 ]
  %43 = call zeroext i1 @_ZN2v88internal5Debug15EnsureBreakInfoENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %42)
  br i1 %43, label %44, label %250

44:                                               ; preds = %41
  call void @_ZN2v88internal5Debug32PrepareFunctionForDebugExecutionENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %42)
  %45 = load i64, i64* %42, align 8
  %46 = and i64 %45, -4294967296
  %47 = add i64 %45, 15
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 acquire, align 4
  %50 = zext i32 %49 to i64
  %51 = or i64 %46, %50
  %52 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %21, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %52, i64 0, i32 31, i32 4
  %54 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %53, align 8
  %55 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %44
  %57 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %54, i64 %51) #13
  br label %71

58:                                               ; preds = %44
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %52, i64 0, i32 31, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %52, i64 0, i32 31, i32 1
  %62 = load i64*, i64** %61, align 8
  %63 = icmp eq i64* %60, %62
  br i1 %63, label %64, label %66

64:                                               ; preds = %58
  %65 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %52) #13
  br label %66

66:                                               ; preds = %64, %58
  %67 = phi i64* [ %65, %64 ], [ %60, %58 ]
  %68 = ptrtoint i64* %67 to i64
  %69 = add i64 %68, 8
  %70 = inttoptr i64 %69 to i64*
  store i64* %70, i64** %59, align 8
  store i64 %51, i64* %67, align 8
  br label %71

71:                                               ; preds = %56, %66
  %72 = phi i64* [ %57, %56 ], [ %67, %66 ]
  %73 = bitcast %"class.v8::internal::BreakLocation"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #13
  call void @_ZN2v88internal13BreakLocation9FromFrameENS0_6HandleINS0_9DebugInfoEEEPNS0_15JavaScriptFrameE(%"class.v8::internal::BreakLocation"* nonnull sret %6, i64* %72, %"class.v8::internal::JavaScriptFrame"* %1)
  %74 = call i64* @_ZN2v88internal5Debug16CheckBreakPointsENS0_6HandleINS0_9DebugInfoEEEPNS0_13BreakLocationEPb(%"class.v8::internal::Debug"* %0, i64* %72, %"class.v8::internal::BreakLocation"* nonnull %6, i8* null)
  %75 = icmp eq i64* %74, null
  br i1 %75, label %76, label %80

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 13
  %78 = load i8, i8* %77, align 4, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %108, label %80

80:                                               ; preds = %76, %71
  %81 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 2
  %82 = load i8, i8* %81, align 4
  %83 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 10
  %84 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %83, align 8
  %85 = icmp eq %"class.v8::internal::DebugInfoListNode"* %84, null
  br i1 %85, label %93, label %86

86:                                               ; preds = %80, %86
  %87 = phi %"class.v8::internal::DebugInfoListNode"* [ %91, %86 ], [ %84, %80 ]
  %88 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %87, i64 0, i32 0
  %89 = load i64*, i64** %88, align 8
  call void @_ZN2v88internal5Debug16ClearBreakPointsENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* undef, i64* %89) #13
  call void @_ZN2v88internal5Debug16ApplyBreakPointsENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* %0, i64* %89) #13
  %90 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %87, i64 0, i32 1
  %91 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %90, align 8
  %92 = icmp eq %"class.v8::internal::DebugInfoListNode"* %91, null
  br i1 %92, label %93, label %86

93:                                               ; preds = %86, %80
  store i8 -1, i8* %81, align 4
  %94 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 7
  store i32 -1, i32* %94, align 4
  %95 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 4, i32 0, i32 0
  store i64 0, i64* %95, align 8
  %96 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 5
  store i8 0, i8* %96, align 8
  %97 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 8
  store i32 -1, i32* %97, align 8
  %98 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 9
  store i32 -1, i32* %98, align 4
  %99 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 13
  store i8 0, i8* %99, align 4
  %100 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %21, align 8
  %101 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %100, i64 0, i32 108
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 32
  %104 = zext i1 %103 to i8
  %105 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 2
  store i8 %104, i8* %105, align 1
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %100, i64 0, i32 0, i32 7, i32 0, i64 29
  %107 = select i1 %75, i64* %106, i64* %74
  call void @_ZN2v88internal5Debug12OnDebugBreakENS0_6HandleINS0_10FixedArrayEEENS0_10StepActionE(%"class.v8::internal::Debug"* %0, i64* %107, i8 signext %82)
  br label %249

108:                                              ; preds = %76
  %109 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %6, i64 0, i32 2
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %110, 6
  br i1 %111, label %249, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 2
  %114 = load i8, i8* %113, align 4
  %115 = bitcast %"class.v8::internal::StackTraceFrameIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1616, i8* nonnull %115) #13
  %116 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %21, align 8
  call void @_ZN2v88internal23StackTraceFrameIteratorC1EPNS0_7IsolateE(%"class.v8::internal::StackTraceFrameIterator"* nonnull %4, %"class.v8::internal::Isolate"* %116) #13
  %117 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 1
  %118 = load i32, i32* %117, align 8
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %137, label %120

120:                                              ; preds = %112
  %121 = getelementptr inbounds %"class.v8::internal::StackTraceFrameIterator", %"class.v8::internal::StackTraceFrameIterator"* %4, i64 0, i32 0, i32 0, i32 23
  %122 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %121, align 8
  %123 = icmp eq %"class.v8::internal::StackFrame"* %122, null
  br i1 %123, label %137, label %124

124:                                              ; preds = %120, %134
  %125 = phi %"class.v8::internal::StackFrame"* [ %135, %134 ], [ %122, %120 ]
  %126 = bitcast %"class.v8::internal::StackFrame"* %125 to i64 (%"class.v8::internal::StackFrame"*)***
  %127 = load i64 (%"class.v8::internal::StackFrame"*)**, i64 (%"class.v8::internal::StackFrame"*)*** %126, align 8
  %128 = getelementptr inbounds i64 (%"class.v8::internal::StackFrame"*)*, i64 (%"class.v8::internal::StackFrame"*)** %127, i64 6
  %129 = load i64 (%"class.v8::internal::StackFrame"*)*, i64 (%"class.v8::internal::StackFrame"*)** %128, align 8
  %130 = call i64 %129(%"class.v8::internal::StackFrame"* nonnull %125) #13
  %131 = trunc i64 %130 to i32
  %132 = load i32, i32* %117, align 8
  %133 = icmp eq i32 %132, %131
  br i1 %133, label %137, label %134

134:                                              ; preds = %124
  call void @_ZN2v88internal23StackTraceFrameIterator7AdvanceEv(%"class.v8::internal::StackTraceFrameIterator"* nonnull %4) #13
  %135 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %121, align 8
  %136 = icmp eq %"class.v8::internal::StackFrame"* %135, null
  br i1 %136, label %137, label %124

137:                                              ; preds = %134, %124, %120, %112
  %138 = getelementptr inbounds %"class.v8::internal::StackTraceFrameIterator", %"class.v8::internal::StackTraceFrameIterator"* %4, i64 0, i32 0, i32 0, i32 23
  %139 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %138, align 8
  %140 = icmp eq %"class.v8::internal::StackFrame"* %139, null
  br i1 %140, label %147, label %141

141:                                              ; preds = %137, %141
  %142 = phi i32 [ %144, %141 ], [ 0, %137 ]
  %143 = call i32 @_ZNK2v88internal23StackTraceFrameIterator18FrameFunctionCountEv(%"class.v8::internal::StackTraceFrameIterator"* nonnull %4) #13
  %144 = add nsw i32 %143, %142
  call void @_ZN2v88internal23StackTraceFrameIterator7AdvanceEv(%"class.v8::internal::StackTraceFrameIterator"* nonnull %4) #13
  %145 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %138, align 8
  %146 = icmp eq %"class.v8::internal::StackFrame"* %145, null
  br i1 %146, label %147, label %141

147:                                              ; preds = %141, %137
  %148 = phi i32 [ 0, %137 ], [ %144, %141 ]
  call void @llvm.lifetime.end.p0i8(i64 1616, i8* nonnull %115) #13
  %149 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 9
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 8
  %152 = load i32, i32* %151, align 8
  %153 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 5
  %154 = load i8, i8* %153, align 8, !range !2
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %178, label %156

156:                                              ; preds = %147
  %157 = icmp sgt i32 %148, %150
  br i1 %157, label %249, label %158

158:                                              ; preds = %156
  %159 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 10
  %160 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %159, align 8
  %161 = icmp eq %"class.v8::internal::DebugInfoListNode"* %160, null
  br i1 %161, label %169, label %162

162:                                              ; preds = %158, %162
  %163 = phi %"class.v8::internal::DebugInfoListNode"* [ %167, %162 ], [ %160, %158 ]
  %164 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %163, i64 0, i32 0
  %165 = load i64*, i64** %164, align 8
  call void @_ZN2v88internal5Debug16ClearBreakPointsENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* undef, i64* %165) #13
  call void @_ZN2v88internal5Debug16ApplyBreakPointsENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* %0, i64* %165) #13
  %166 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %163, i64 0, i32 1
  %167 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %166, align 8
  %168 = icmp eq %"class.v8::internal::DebugInfoListNode"* %167, null
  br i1 %168, label %169, label %162

169:                                              ; preds = %162, %158
  store i8 -1, i8* %113, align 4
  %170 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 7
  store i32 -1, i32* %170, align 4
  %171 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 4, i32 0, i32 0
  store i64 0, i64* %171, align 8
  store i8 0, i8* %153, align 8
  store i32 -1, i32* %151, align 8
  store i32 -1, i32* %149, align 4
  store i8 0, i8* %77, align 4
  %172 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %21, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %172, i64 0, i32 108
  %174 = load i8, i8* %173, align 1
  %175 = icmp eq i8 %174, 32
  %176 = zext i1 %175 to i8
  %177 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 2
  store i8 %176, i8* %177, align 1
  call void @_ZN2v88internal5Debug11PrepareStepENS0_10StepActionE(%"class.v8::internal::Debug"* %0, i8 signext 0)
  br label %249

178:                                              ; preds = %147
  %179 = sext i8 %114 to i32
  switch i32 %179, label %224 [
    i32 -1, label %249
    i32 0, label %180
    i32 1, label %182
    i32 2, label %184
  ]

180:                                              ; preds = %178
  %181 = icmp sgt i32 %148, %150
  br i1 %181, label %249, label %224

182:                                              ; preds = %178
  %183 = icmp sgt i32 %148, %150
  br i1 %183, label %249, label %184

184:                                              ; preds = %182, %178
  %185 = icmp eq i32 %110, 5
  br i1 %185, label %186, label %211

186:                                              ; preds = %184
  %187 = bitcast %"class.v8::internal::JavaScriptFrame"* %1 to %"class.v8::internal::UnoptimizedFrame"*
  %188 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %6, i64 0, i32 4
  %189 = load i32, i32* %188, align 4
  %190 = call i64 @_ZNK2v88internal16UnoptimizedFrame23ReadInterpreterRegisterEi(%"class.v8::internal::UnoptimizedFrame"* %187, i32 %189) #13
  %191 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 11, i32 0, i32 0
  store i64 %190, i64* %191, align 8
  %192 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 10
  %193 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %192, align 8
  %194 = icmp eq %"class.v8::internal::DebugInfoListNode"* %193, null
  br i1 %194, label %202, label %195

195:                                              ; preds = %186, %195
  %196 = phi %"class.v8::internal::DebugInfoListNode"* [ %200, %195 ], [ %193, %186 ]
  %197 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %196, i64 0, i32 0
  %198 = load i64*, i64** %197, align 8
  call void @_ZN2v88internal5Debug16ClearBreakPointsENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* undef, i64* %198) #13
  call void @_ZN2v88internal5Debug16ApplyBreakPointsENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* %0, i64* %198) #13
  %199 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %196, i64 0, i32 1
  %200 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %199, align 8
  %201 = icmp eq %"class.v8::internal::DebugInfoListNode"* %200, null
  br i1 %201, label %202, label %195

202:                                              ; preds = %195, %186
  store i8 -1, i8* %113, align 4
  %203 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 7
  store i32 -1, i32* %203, align 4
  %204 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 4, i32 0, i32 0
  store i64 0, i64* %204, align 8
  store i8 0, i8* %153, align 8
  store i32 -1, i32* %151, align 8
  store i32 -1, i32* %149, align 4
  store i8 0, i8* %77, align 4
  %205 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %21, align 8
  %206 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %205, i64 0, i32 108
  %207 = load i8, i8* %206, align 1
  %208 = icmp eq i8 %207, 32
  %209 = zext i1 %208 to i8
  %210 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 2
  store i8 %209, i8* %210, align 1
  br label %249

211:                                              ; preds = %184
  %212 = bitcast %"class.v8::internal::FrameSummary"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %212) #13
  %213 = getelementptr inbounds %"class.v8::internal::JavaScriptFrame", %"class.v8::internal::JavaScriptFrame"* %1, i64 0, i32 0, i32 0
  call void @_ZN2v88internal12FrameSummary6GetTopEPKNS0_11CommonFrameE(%"class.v8::internal::FrameSummary"* nonnull sret %7, %"class.v8::internal::CommonFrame"* %213) #13
  %214 = icmp ne i32 %110, 4
  %215 = icmp eq i32 %148, %152
  %216 = and i1 %214, %215
  br i1 %216, label %217, label %222

217:                                              ; preds = %211
  %218 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 7
  %219 = load i32, i32* %218, align 4
  %220 = call i32 @_ZNK2v88internal12FrameSummary23SourceStatementPositionEv(%"class.v8::internal::FrameSummary"* nonnull %7) #13
  %221 = icmp ne i32 %219, %220
  br label %222

222:                                              ; preds = %211, %217
  %223 = phi i1 [ true, %211 ], [ %221, %217 ]
  call void @_ZN2v88internal12FrameSummaryD1Ev(%"class.v8::internal::FrameSummary"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %212) #13
  br label %224

224:                                              ; preds = %180, %178, %222
  %225 = phi i1 [ false, %178 ], [ %223, %222 ], [ true, %180 ]
  %226 = load i8, i8* %113, align 4
  %227 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 10
  %228 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %227, align 8
  %229 = icmp eq %"class.v8::internal::DebugInfoListNode"* %228, null
  br i1 %229, label %237, label %230

230:                                              ; preds = %224, %230
  %231 = phi %"class.v8::internal::DebugInfoListNode"* [ %235, %230 ], [ %228, %224 ]
  %232 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %231, i64 0, i32 0
  %233 = load i64*, i64** %232, align 8
  call void @_ZN2v88internal5Debug16ClearBreakPointsENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* undef, i64* %233) #13
  call void @_ZN2v88internal5Debug16ApplyBreakPointsENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* %0, i64* %233) #13
  %234 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %231, i64 0, i32 1
  %235 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %234, align 8
  %236 = icmp eq %"class.v8::internal::DebugInfoListNode"* %235, null
  br i1 %236, label %237, label %230

237:                                              ; preds = %230, %224
  store i8 -1, i8* %113, align 4
  %238 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 7
  store i32 -1, i32* %238, align 4
  %239 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 4, i32 0, i32 0
  store i64 0, i64* %239, align 8
  store i8 0, i8* %153, align 8
  store i32 -1, i32* %151, align 8
  store i32 -1, i32* %149, align 4
  store i8 0, i8* %77, align 4
  %240 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %21, align 8
  %241 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %240, i64 0, i32 108
  %242 = load i8, i8* %241, align 1
  %243 = icmp eq i8 %242, 32
  %244 = zext i1 %243 to i8
  %245 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 2
  store i8 %244, i8* %245, align 1
  br i1 %225, label %246, label %248

246:                                              ; preds = %237
  %247 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %240, i64 0, i32 0, i32 7, i32 0, i64 29
  call void @_ZN2v88internal5Debug12OnDebugBreakENS0_6HandleINS0_10FixedArrayEEENS0_10StepActionE(%"class.v8::internal::Debug"* %0, i64* %247, i8 signext %226)
  br label %249

248:                                              ; preds = %237
  call void @_ZN2v88internal5Debug11PrepareStepENS0_10StepActionE(%"class.v8::internal::Debug"* %0, i8 signext %114)
  br label %249

249:                                              ; preds = %169, %156, %246, %248, %182, %180, %178, %202, %108, %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #13
  br label %250

250:                                              ; preds = %41, %249
  store i8 %13, i8* %8, align 4
  call void @_ZN2v88internal10DebugScopeD2Ev(%"class.v8::internal::DebugScope"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %12) #13
  br label %251

251:                                              ; preds = %3, %250
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal5Debug15EnsureBreakInfoENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* nocapture, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Script", align 8
  %4 = alloca { i64*, i8 }, align 8
  %5 = alloca %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", align 8
  %6 = alloca { i64*, i8 }, align 8
  %7 = bitcast { i64*, i8 }* %6 to %"class.v8::internal::IsCompiledScope"*
  %8 = bitcast %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #13
  %9 = load i64, i64* %1, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %5, i64 0, i32 0
  %12 = call zeroext i1 @_ZNK2v88internal18SharedFunctionInfo12HasBreakInfoEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13
  br i1 %12, label %132, label %13

13:                                               ; preds = %2
  %14 = load i64, i64* %1, align 8
  %15 = and i64 %14, -4294967296
  %16 = add i64 %14, 3
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 acquire, align 4
  %19 = zext i32 %18 to i64
  %20 = and i64 %19, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %33, label %22

22:                                               ; preds = %13
  %23 = or i64 %15, %19
  %24 = add i64 %23, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %15, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = icmp eq i16 %31, 92
  br i1 %32, label %86, label %33

33:                                               ; preds = %22, %13
  %34 = add i64 %14, 15
  %35 = inttoptr i64 %34 to i32*
  %36 = load atomic i32, i32* %35 acquire, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %15, %37
  %39 = add i64 %38, -1
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %15, %42
  %44 = add i64 %43, 7
  %45 = inttoptr i64 %44 to i16*
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = icmp eq i16 %46, 100
  br i1 %47, label %48, label %54

48:                                               ; preds = %33
  %49 = add i64 %38, 11
  %50 = inttoptr i64 %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %15, %52
  br label %54

54:                                               ; preds = %48, %33
  %55 = phi i64 [ %53, %48 ], [ %38, %33 ]
  %56 = and i64 %55, 1
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %82, label %58

58:                                               ; preds = %54
  %59 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %60 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %59, null
  br i1 %60, label %67, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %59, i64 0, i32 0, i32 1
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %59, i64 0, i32 1, i64 0
  br label %75

67:                                               ; preds = %61, %58
  %68 = and i64 %55, -262144
  %69 = or i64 %68, 16
  %70 = inttoptr i64 %69 to i64*
  %71 = load i64, i64* %70, align 16
  %72 = add i64 %71, -41416
  %73 = inttoptr i64 %72 to %"class.v8::internal::Isolate"*
  %74 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %73, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %75

75:                                               ; preds = %67, %65
  %76 = phi i64* [ %74, %67 ], [ %66, %65 ]
  %77 = getelementptr inbounds i64, i64* %76, i64 4
  %78 = load i64, i64* %77, align 8
  %79 = trunc i64 %55 to i32
  %80 = trunc i64 %78 to i32
  %81 = icmp eq i32 %79, %80
  br i1 %81, label %86, label %82

82:                                               ; preds = %54, %75
  %83 = bitcast %"class.v8::internal::Script"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #13
  %84 = getelementptr inbounds %"class.v8::internal::Script", %"class.v8::internal::Script"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %55, i64* %84, align 8
  %85 = call zeroext i1 @_ZNK2v88internal6Script16IsUserJavaScriptEv(%"class.v8::internal::Script"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #13
  br i1 %85, label %112, label %86

86:                                               ; preds = %75, %22, %82
  %87 = load i64, i64* %1, align 8
  %88 = add i64 %87, 27
  %89 = inttoptr i64 %88 to i32*
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 32
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %112

93:                                               ; preds = %86
  %94 = and i64 %87, -4294967296
  %95 = add i64 %87, 3
  %96 = inttoptr i64 %95 to i32*
  %97 = load atomic i32, i32* %96 acquire, align 4
  %98 = zext i32 %97 to i64
  %99 = and i64 %98, 1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %132, label %101

101:                                              ; preds = %93
  %102 = or i64 %94, %98
  %103 = add i64 %102, -1
  %104 = inttoptr i64 %103 to i32*
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = zext i32 %105 to i64
  %107 = or i64 %94, %106
  %108 = add i64 %107, 7
  %109 = inttoptr i64 %108 to i16*
  %110 = load atomic i16, i16* %109 monotonic, align 2
  %111 = icmp eq i16 %110, 83
  br i1 %111, label %112, label %132

112:                                              ; preds = %86, %82, %101
  %113 = bitcast { i64*, i8 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %113) #13
  %114 = load i64, i64* %1, align 8
  %115 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %116 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %115, align 8
  %117 = bitcast { i64*, i8 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %117)
  %118 = bitcast { i64*, i8 }* %4 to %"class.v8::internal::IsCompiledScope"*
  call void @_ZN2v88internal15IsCompiledScopeC2ENS0_18SharedFunctionInfoEPNS0_7IsolateE(%"class.v8::internal::IsCompiledScope"* nonnull %118, i64 %114, %"class.v8::internal::Isolate"* %116) #13
  %119 = bitcast { i64*, i8 }* %4 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %4, i64 0, i32 1
  %122 = load i8, i8* %121, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117)
  %123 = bitcast { i64*, i8 }* %6 to i64*
  store i64 %120, i64* %123, align 8
  %124 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %6, i64 0, i32 1
  store i8 %122, i8* %124, align 8
  %125 = icmp eq i8 %122, 0
  br i1 %125, label %126, label %129

126:                                              ; preds = %112
  %127 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %115, align 8
  %128 = call zeroext i1 @_ZN2v88internal8Compiler7CompileEPNS0_7IsolateENS0_6HandleINS0_18SharedFunctionInfoEEENS1_18ClearExceptionFlagEPNS0_15IsCompiledScopeE(%"class.v8::internal::Isolate"* %127, i64* %1, i32 1, %"class.v8::internal::IsCompiledScope"* nonnull %7) #13
  br i1 %128, label %129, label %130

129:                                              ; preds = %112, %126
  call void @_ZN2v88internal5Debug15CreateBreakInfoENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %1)
  br label %130

130:                                              ; preds = %126, %129
  %131 = phi i1 [ true, %129 ], [ false, %126 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %113) #13
  br label %132

132:                                              ; preds = %93, %101, %2, %130
  %133 = phi i1 [ %131, %130 ], [ true, %2 ], [ false, %101 ], [ false, %93 ]
  ret i1 %133
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug32PrepareFunctionForDebugExecutionENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* nocapture, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %4 = alloca %"class.v8::internal::RedirectActiveFunctions", align 8
  %5 = tail call i64* @_ZN2v88internal5Debug20GetOrCreateDebugInfoENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %1)
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 27
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %77

12:                                               ; preds = %2
  %13 = load i64, i64* %1, align 8
  %14 = and i64 %13, -4294967296
  %15 = add i64 %13, 3
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 acquire, align 4
  %18 = zext i32 %17 to i64
  %19 = and i64 %18, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %51, label %21

21:                                               ; preds = %12
  %22 = or i64 %14, %18
  %23 = add i64 %22, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %14, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = icmp eq i16 %30, 133
  br i1 %31, label %48, label %32

32:                                               ; preds = %21
  %33 = load atomic i32, i32* %24 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %14, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = icmp eq i16 %38, 105
  br i1 %39, label %48, label %40

40:                                               ; preds = %32
  %41 = load atomic i32, i32* %24 monotonic, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %14, %42
  %44 = add i64 %43, 7
  %45 = inttoptr i64 %44 to i16*
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = icmp eq i16 %46, 94
  br i1 %47, label %48, label %51

48:                                               ; preds = %21, %32, %40
  %49 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %50 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %49, align 8
  tail call void @_ZN2v88internal18SharedFunctionInfo20InstallDebugBytecodeENS0_6HandleIS1_EEPNS0_7IsolateE(i64* %1, %"class.v8::internal::Isolate"* %50) #13
  br label %51

51:                                               ; preds = %12, %48, %40
  %52 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #13
  %53 = load i64, i64* %5, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3, i64 0, i32 0
  %56 = call zeroext i1 @_ZNK2v88internal9DebugInfo15CanBreakAtEntryEv(%"class.v8::internal::DebugInfo"* nonnull %55) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #13
  br i1 %56, label %57, label %60

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %59 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %58, align 8
  call void @_ZN2v88internal11Deoptimizer13DeoptimizeAllEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %59) #13
  call void @_ZN2v88internal5Debug22DiscardAllBaselineCodeEv(%"class.v8::internal::Debug"* %0)
  call void @_ZN2v88internal5Debug27InstallDebugBreakTrampolineEv(%"class.v8::internal::Debug"* %0)
  br label %70

60:                                               ; preds = %51
  call void @_ZN2v88internal5Debug18DeoptimizeFunctionENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %1)
  %61 = bitcast %"class.v8::internal::RedirectActiveFunctions"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #13
  %62 = load i64, i64* %1, align 8
  call void @_ZN2v88internal23RedirectActiveFunctionsC1ENS0_18SharedFunctionInfoENS1_4ModeE(%"class.v8::internal::RedirectActiveFunctions"* nonnull %4, i64 %62, i32 1) #13
  %63 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %64 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 0, i32 9
  call void @_ZN2v88internal23RedirectActiveFunctions11VisitThreadEPNS0_7IsolateEPNS0_14ThreadLocalTopE(%"class.v8::internal::RedirectActiveFunctions"* nonnull %4, %"class.v8::internal::Isolate"* %64, %"class.v8::internal::ThreadLocalTop"* %65) #13
  %66 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %63, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %66, i64 0, i32 38
  %68 = load %"class.v8::internal::ThreadManager"*, %"class.v8::internal::ThreadManager"** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::RedirectActiveFunctions", %"class.v8::internal::RedirectActiveFunctions"* %4, i64 0, i32 0
  call void @_ZN2v88internal13ThreadManager22IterateArchivedThreadsEPNS0_13ThreadVisitorE(%"class.v8::internal::ThreadManager"* %68, %"class.v8::internal::ThreadVisitor"* nonnull %69) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #13
  br label %70

70:                                               ; preds = %60, %57
  %71 = load i64, i64* %5, align 8
  %72 = add i64 %71, 27
  %73 = inttoptr i64 %72 to i32*
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, -6
  %76 = or i32 %75, 4
  store atomic volatile i32 %76, i32* %73 monotonic, align 4
  br label %77

77:                                               ; preds = %2, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal5Debug16CheckBreakPointsENS0_6HandleINS0_9DebugInfoEEEPNS0_13BreakLocationEPb(%"class.v8::internal::Debug"* nocapture readonly, i64*, %"class.v8::internal::BreakLocation"* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %6 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %8 = alloca %"class.v8::internal::BreakIterator", align 8
  %9 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 6
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %42, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %15 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #13
  %16 = load i64, i64* %1, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %5, i64 0, i32 0
  %19 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %2, i64 0, i32 3
  %20 = load i32, i32* %19, align 8
  %21 = call zeroext i1 @_ZN2v88internal9DebugInfo13HasBreakPointEPNS0_7IsolateEi(%"class.v8::internal::DebugInfo"* nonnull %18, %"class.v8::internal::Isolate"* %14, i32 %20) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #13
  br i1 %21, label %22, label %42

22:                                               ; preds = %12
  %23 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  %24 = load i64, i64* %1, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %6, i64 0, i32 0
  %27 = call zeroext i1 @_ZNK2v88internal9DebugInfo15CanBreakAtEntryEv(%"class.v8::internal::DebugInfo"* nonnull %26) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br i1 %27, label %28, label %34

28:                                               ; preds = %22
  %29 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  %30 = load i64, i64* %1, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %7, i64 0, i32 0
  %33 = call zeroext i1 @_ZNK2v88internal9DebugInfo12BreakAtEntryEv(%"class.v8::internal::DebugInfo"* nonnull %32) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  br label %42

34:                                               ; preds = %22
  %35 = bitcast %"class.v8::internal::BreakIterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %35) #13
  call void @_ZN2v88internal13BreakIteratorC2ENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::BreakIterator"* nonnull %8, i64* %1) #13
  %36 = load i32, i32* %19, align 8
  call void @_ZN2v88internal13BreakIterator14SkipToPositionEi(%"class.v8::internal::BreakIterator"* nonnull %8, i32 %36) #13
  %37 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %8, i64 0, i32 4, i32 4, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %2, i64 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %38, %40
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %35) #13
  br label %42

42:                                               ; preds = %34, %28, %12, %4
  %43 = phi i1 [ false, %4 ], [ %33, %28 ], [ %41, %34 ], [ false, %12 ]
  %44 = icmp eq i8* %3, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %42
  %46 = zext i1 %43 to i8
  store i8 %46, i8* %3, align 1
  br label %47

47:                                               ; preds = %42, %45
  br i1 %43, label %48, label %52

48:                                               ; preds = %47
  %49 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %2, i64 0, i32 3
  %50 = load i32, i32* %49, align 8
  %51 = call i64* @_ZN2v88internal5Debug17GetHitBreakPointsENS0_6HandleINS0_9DebugInfoEEEi(%"class.v8::internal::Debug"* %0, i64* %1, i32 %50)
  br label %52

52:                                               ; preds = %47, %48
  %53 = phi i64* [ %51, %48 ], [ null, %47 ]
  ret i64* %53
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug12OnDebugBreakENS0_6HandleINS0_10FixedArrayEEENS0_10StepActionE(%"class.v8::internal::Debug"*, i64*, i8 signext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.894", align 8
  %5 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 2, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %201

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 1
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %201, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 108
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 32
  br i1 %17, label %201, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 0
  %20 = load %"class.v8::debug::DebugDelegate"*, %"class.v8::debug::DebugDelegate"** %19, align 8
  %21 = icmp eq %"class.v8::debug::DebugDelegate"* %20, null
  br i1 %21, label %201, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 31
  %24 = bitcast %"struct.v8::internal::HandleScopeData"* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 31, i32 1
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 31, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %28, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 5
  %32 = load i8, i8* %31, align 4, !range !2
  store i8 1, i8* %31, align 4
  %33 = add i8 %2, -1
  %34 = icmp ult i8 %33, 2
  br i1 %34, label %35, label %38

35:                                               ; preds = %22
  %36 = tail call zeroext i1 @_ZN2v88internal5Debug15ShouldBeSkippedEv(%"class.v8::internal::Debug"* %0)
  br i1 %36, label %37, label %38

37:                                               ; preds = %35
  tail call void @_ZN2v88internal5Debug11PrepareStepENS0_10StepActionE(%"class.v8::internal::Debug"* %0, i8 signext %2)
  br label %186

38:                                               ; preds = %22, %35
  %39 = bitcast %"class.std::__1::vector.894"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 24, i1 false) #13
  %40 = load i64, i64* %1, align 8
  %41 = add i64 %40, 3
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = icmp sgt i32 %43, 1
  br i1 %44, label %45, label %51

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.std::__1::vector.894", %"class.std::__1::vector.894"* %4, i64 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.std::__1::vector.894", %"class.std::__1::vector.894"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %48 = bitcast i32** %46 to i64*
  %49 = bitcast %"class.std::__1::vector.894"* %4 to i64*
  %50 = bitcast i32** %47 to i64*
  br label %101

51:                                               ; preds = %173, %38
  %52 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %52, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = and i64 %54, -4294967296
  %56 = add i64 %54, -1
  %57 = inttoptr i64 %56 to i32*
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %55, %59
  %61 = add i64 %60, 19
  %62 = inttoptr i64 %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %55, %64
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %52, i64 0, i32 31, i32 4
  %67 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %66, align 8
  %68 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %51
  %70 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %67, i64 %65) #13
  br label %84

71:                                               ; preds = %51
  %72 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %52, i64 0, i32 31, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %52, i64 0, i32 31, i32 1
  %75 = load i64*, i64** %74, align 8
  %76 = icmp eq i64* %73, %75
  br i1 %76, label %77, label %79

77:                                               ; preds = %71
  %78 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %52) #13
  br label %79

79:                                               ; preds = %77, %71
  %80 = phi i64* [ %78, %77 ], [ %73, %71 ]
  %81 = ptrtoint i64* %80 to i64
  %82 = add i64 %81, 8
  %83 = inttoptr i64 %82 to i64*
  store i64* %83, i64** %72, align 8
  store i64 %65, i64* %80, align 8
  br label %84

84:                                               ; preds = %69, %79
  %85 = phi i64* [ %70, %69 ], [ %80, %79 ]
  %86 = load %"class.v8::debug::DebugDelegate"*, %"class.v8::debug::DebugDelegate"** %19, align 8
  %87 = bitcast i64* %85 to %"class.v8::Context"*
  %88 = bitcast %"class.v8::debug::DebugDelegate"* %86 to void (%"class.v8::debug::DebugDelegate"*, %"class.v8::Context"*, %"class.std::__1::vector.894"*)***
  %89 = load void (%"class.v8::debug::DebugDelegate"*, %"class.v8::Context"*, %"class.std::__1::vector.894"*)**, void (%"class.v8::debug::DebugDelegate"*, %"class.v8::Context"*, %"class.std::__1::vector.894"*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.v8::debug::DebugDelegate"*, %"class.v8::Context"*, %"class.std::__1::vector.894"*)*, void (%"class.v8::debug::DebugDelegate"*, %"class.v8::Context"*, %"class.std::__1::vector.894"*)** %89, i64 3
  %91 = load void (%"class.v8::debug::DebugDelegate"*, %"class.v8::Context"*, %"class.std::__1::vector.894"*)*, void (%"class.v8::debug::DebugDelegate"*, %"class.v8::Context"*, %"class.std::__1::vector.894"*)** %90, align 8
  call void %91(%"class.v8::debug::DebugDelegate"* %86, %"class.v8::Context"* %87, %"class.std::__1::vector.894"* nonnull dereferenceable(24) %4) #13
  %92 = getelementptr inbounds %"class.std::__1::vector.894", %"class.std::__1::vector.894"* %4, i64 0, i32 0, i32 0
  %93 = load i32*, i32** %92, align 8
  %94 = icmp eq i32* %93, null
  br i1 %94, label %100, label %95

95:                                               ; preds = %84
  %96 = ptrtoint i32* %93 to i64
  %97 = getelementptr inbounds %"class.std::__1::vector.894", %"class.std::__1::vector.894"* %4, i64 0, i32 0, i32 1
  %98 = bitcast i32** %97 to i64*
  store i64 %96, i64* %98, align 8
  %99 = bitcast i32* %93 to i8*
  call void @_ZdlPv(i8* %99) #17
  br label %100

100:                                              ; preds = %84, %95
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #13
  br label %186

101:                                              ; preds = %184, %45
  %102 = phi i64 [ 0, %45 ], [ %174, %184 ]
  %103 = phi i32* [ null, %45 ], [ %185, %184 ]
  %104 = phi i32* [ null, %45 ], [ %175, %184 ]
  %105 = phi i64 [ 0, %45 ], [ %176, %184 ]
  %106 = phi i64 [ %40, %45 ], [ %177, %184 ]
  %107 = and i64 %106, -4294967296
  %108 = trunc i64 %105 to i32
  %109 = shl i32 %108, 2
  %110 = sext i32 %109 to i64
  %111 = add i64 %106, 7
  %112 = add i64 %111, %110
  %113 = inttoptr i64 %112 to i32*
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = zext i32 %114 to i64
  %116 = or i64 %107, %115
  %117 = add i64 %116, 3
  %118 = inttoptr i64 %117 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = ashr i32 %119, 1
  %121 = icmp ult i32* %104, %103
  %122 = ptrtoint i32* %103 to i64
  br i1 %121, label %123, label %126

123:                                              ; preds = %101
  store i32 %120, i32* %104, align 4
  %124 = getelementptr inbounds i32, i32* %104, i64 1
  %125 = ptrtoint i32* %124 to i64
  store i64 %125, i64* %48, align 8
  br label %173

126:                                              ; preds = %101
  %127 = ptrtoint i32* %104 to i64
  %128 = load i64, i64* %49, align 8
  %129 = sub i64 %127, %128
  %130 = ashr exact i64 %129, 2
  %131 = add nsw i64 %130, 1
  %132 = icmp ugt i64 %131, 4611686018427387903
  br i1 %132, label %133, label %135

133:                                              ; preds = %126
  %134 = bitcast %"class.std::__1::vector.894"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %134) #16
  unreachable

135:                                              ; preds = %126
  %136 = sub i64 %122, %128
  %137 = ashr exact i64 %136, 2
  %138 = icmp ult i64 %137, 2305843009213693951
  br i1 %138, label %139, label %147

139:                                              ; preds = %135
  %140 = ashr exact i64 %136, 1
  %141 = icmp ult i64 %140, %131
  %142 = select i1 %141, i64 %131, i64 %140
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %152, label %144

144:                                              ; preds = %139
  %145 = icmp ugt i64 %142, 4611686018427387903
  br i1 %145, label %146, label %147

146:                                              ; preds = %144
  tail call void @abort() #16
  unreachable

147:                                              ; preds = %144, %135
  %148 = phi i64 [ %142, %144 ], [ 4611686018427387903, %135 ]
  %149 = shl i64 %148, 2
  %150 = tail call i8* @_Znwm(i64 %149) #17
  %151 = bitcast i8* %150 to i32*
  br label %152

152:                                              ; preds = %147, %139
  %153 = phi i64 [ %148, %147 ], [ 0, %139 ]
  %154 = phi i32* [ %151, %147 ], [ null, %139 ]
  %155 = getelementptr inbounds i32, i32* %154, i64 %130
  %156 = getelementptr inbounds i32, i32* %154, i64 %153
  %157 = ptrtoint i32* %156 to i64
  store i32 %120, i32* %155, align 4
  %158 = getelementptr inbounds i32, i32* %155, i64 1
  %159 = ptrtoint i32* %158 to i64
  %160 = sub i64 %102, %128
  %161 = ashr exact i64 %160, 2
  %162 = sub nsw i64 0, %161
  %163 = getelementptr inbounds i32, i32* %155, i64 %162
  %164 = ptrtoint i32* %163 to i64
  %165 = icmp sgt i64 %160, 0
  br i1 %165, label %166, label %169

166:                                              ; preds = %152
  %167 = bitcast i32* %163 to i8*
  %168 = inttoptr i64 %128 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %167, i8* align 4 %168, i64 %160, i1 false) #13
  br label %169

169:                                              ; preds = %166, %152
  store i64 %164, i64* %49, align 8
  store i64 %159, i64* %48, align 8
  store i64 %157, i64* %50, align 8
  %170 = icmp eq i64 %128, 0
  br i1 %170, label %173, label %171

171:                                              ; preds = %169
  %172 = inttoptr i64 %128 to i8*
  tail call void @_ZdlPv(i8* %172) #17
  br label %173

173:                                              ; preds = %123, %169, %171
  %174 = phi i64 [ %125, %123 ], [ %159, %169 ], [ %159, %171 ]
  %175 = phi i32* [ %124, %123 ], [ %158, %169 ], [ %158, %171 ]
  %176 = add nuw nsw i64 %105, 1
  %177 = load i64, i64* %1, align 8
  %178 = add i64 %177, 3
  %179 = inttoptr i64 %178 to i32*
  %180 = load i32, i32* %179, align 4
  %181 = ashr i32 %180, 1
  %182 = sext i32 %181 to i64
  %183 = icmp slt i64 %176, %182
  br i1 %183, label %184, label %51

184:                                              ; preds = %173
  %185 = load i32*, i32** %47, align 8
  br label %101

186:                                              ; preds = %100, %37
  store i8 %32, i8* %31, align 4
  %187 = icmp eq %"class.v8::internal::Isolate"* %14, null
  br i1 %187, label %201, label %188

188:                                              ; preds = %186
  %189 = inttoptr i64 %25 to i64*
  %190 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %23, i64 0, i32 0
  %191 = load i64*, i64** %190, align 8
  store i64 %25, i64* %24, align 8
  %192 = load i32, i32* %28, align 8
  %193 = add nsw i32 %192, -1
  store i32 %193, i32* %28, align 8
  %194 = load i64*, i64** %26, align 8
  %195 = icmp eq i64* %194, %27
  br i1 %195, label %198, label %196

196:                                              ; preds = %188
  store i64* %27, i64** %26, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %14) #13
  %197 = load i64*, i64** %190, align 8
  br label %198

198:                                              ; preds = %196, %188
  %199 = phi i64* [ %197, %196 ], [ %189, %188 ]
  %200 = phi i64* [ %27, %196 ], [ %191, %188 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %199, i64* %200) #13
  br label %201

201:                                              ; preds = %3, %8, %198, %186, %18, %12
  ret void
}

declare i32 @_ZNK2v88internal12FrameSummary23SourceStatementPositionEv(%"class.v8::internal::FrameSummary"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal5Debug17GetHitBreakPointsENS0_6HandleINS0_9DebugInfoEEEi(%"class.v8::internal::Debug"* nocapture readonly, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %5 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %6 = alloca %"class.v8::internal::Handle<v8::internal::FixedArray>::ObjectRef", align 8
  %7 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = load i64, i64* %1, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4, i64 0, i32 0
  %11 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = call i64* @_ZN2v88internal9DebugInfo14GetBreakPointsEPNS0_7IsolateEi(%"class.v8::internal::DebugInfo"* nonnull %10, %"class.v8::internal::Isolate"* %12, i32 %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  %14 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = load i64, i64* %1, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %5, i64 0, i32 0
  %18 = call zeroext i1 @_ZNK2v88internal9DebugInfo12BreakAtEntryEv(%"class.v8::internal::DebugInfo"* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  %19 = load i64, i64* %13, align 8
  %20 = and i64 %19, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %34, label %22

22:                                               ; preds = %3
  %23 = and i64 %19, -4294967296
  %24 = add i64 %19, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %23, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = add i16 %31, -119
  %33 = icmp ult i16 %32, 13
  br i1 %33, label %72, label %34

34:                                               ; preds = %3, %22
  %35 = call zeroext i1 @_ZN2v88internal5Debug15CheckBreakPointENS0_6HandleINS0_10BreakPointEEEb(%"class.v8::internal::Debug"* %0, i64* %13, i1 zeroext %18)
  br i1 %35, label %36, label %190

36:                                               ; preds = %34
  %37 = bitcast %"class.v8::internal::Isolate"** %11 to %"class.v8::internal::FactoryBase"**
  %38 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %37, align 8
  %39 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %38, i32 1, i8 zeroext 0) #13
  %40 = load i64, i64* %39, align 8
  %41 = load i64, i64* %13, align 8
  %42 = add i64 %40, 7
  %43 = inttoptr i64 %42 to i32*
  %44 = trunc i64 %41 to i32
  store atomic volatile i32 %44, i32* %43 monotonic, align 4
  %45 = and i64 %41, 1
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %70, label %47

47:                                               ; preds = %36
  %48 = and i64 %40, -262144
  %49 = or i64 %48, 8
  %50 = inttoptr i64 %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = and i64 %51, 262144
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %58, label %54

54:                                               ; preds = %47
  %55 = or i64 %48, 16
  %56 = inttoptr i64 %55 to %"class.v8::internal::Heap"**
  %57 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %56, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %57, i64 %40, i64 %42, i64 %41) #13
  br label %58

58:                                               ; preds = %54, %47
  %59 = and i64 %41, -262144
  %60 = or i64 %59, 8
  %61 = inttoptr i64 %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = and i64 %62, 24
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %70, label %65

65:                                               ; preds = %58
  %66 = load i64, i64* %50, align 8
  %67 = and i64 %66, 24
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %65
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %40, i64 %42, i64 %41) #13
  br label %70

70:                                               ; preds = %36, %58, %65, %69
  %71 = ptrtoint i64* %39 to i64
  br label %190

72:                                               ; preds = %22
  %73 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %73, i64 0, i32 31, i32 4
  %75 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %74, align 8
  %76 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %75, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %72
  %78 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %75, i64 %19) #13
  %79 = load i64, i64* %78, align 8
  br label %93

80:                                               ; preds = %72
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %73, i64 0, i32 31, i32 0
  %82 = load i64*, i64** %81, align 8
  %83 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %73, i64 0, i32 31, i32 1
  %84 = load i64*, i64** %83, align 8
  %85 = icmp eq i64* %82, %84
  br i1 %85, label %86, label %88

86:                                               ; preds = %80
  %87 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %73) #13
  br label %88

88:                                               ; preds = %86, %80
  %89 = phi i64* [ %87, %86 ], [ %82, %80 ]
  %90 = ptrtoint i64* %89 to i64
  %91 = add i64 %90, 8
  %92 = inttoptr i64 %91 to i64*
  store i64* %92, i64** %81, align 8
  store i64 %19, i64* %89, align 8
  br label %93

93:                                               ; preds = %77, %88
  %94 = phi i64 [ %79, %77 ], [ %19, %88 ]
  %95 = phi i64* [ %78, %77 ], [ %89, %88 ]
  %96 = add i64 %94, 3
  %97 = inttoptr i64 %96 to i32*
  %98 = load i32, i32* %97, align 4
  %99 = ashr i32 %98, 1
  %100 = bitcast %"class.v8::internal::Isolate"** %11 to %"class.v8::internal::FactoryBase"**
  %101 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %100, align 8
  %102 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %101, i32 %99, i8 zeroext 0) #13
  %103 = icmp sgt i32 %98, 1
  br i1 %103, label %104, label %190

104:                                              ; preds = %93
  %105 = sext i32 %99 to i64
  br label %108

106:                                              ; preds = %179
  %107 = icmp eq i32 %180, 0
  br i1 %107, label %190, label %183

108:                                              ; preds = %104, %179
  %109 = phi i64 [ 0, %104 ], [ %181, %179 ]
  %110 = phi i32 [ 0, %104 ], [ %180, %179 ]
  %111 = load i64, i64* %95, align 8
  %112 = and i64 %111, -4294967296
  %113 = trunc i64 %109 to i32
  %114 = shl i32 %113, 2
  %115 = sext i32 %114 to i64
  %116 = add nsw i64 %115, 7
  %117 = add i64 %116, %111
  %118 = inttoptr i64 %117 to i32*
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = zext i32 %119 to i64
  %121 = or i64 %112, %120
  %122 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %123 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %122, i64 0, i32 31, i32 4
  %124 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %123, align 8
  %125 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %124, null
  br i1 %125, label %128, label %126

126:                                              ; preds = %108
  %127 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %124, i64 %121) #13
  br label %141

128:                                              ; preds = %108
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %122, i64 0, i32 31, i32 0
  %130 = load i64*, i64** %129, align 8
  %131 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %122, i64 0, i32 31, i32 1
  %132 = load i64*, i64** %131, align 8
  %133 = icmp eq i64* %130, %132
  br i1 %133, label %134, label %136

134:                                              ; preds = %128
  %135 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %122) #13
  br label %136

136:                                              ; preds = %134, %128
  %137 = phi i64* [ %135, %134 ], [ %130, %128 ]
  %138 = ptrtoint i64* %137 to i64
  %139 = add i64 %138, 8
  %140 = inttoptr i64 %139 to i64*
  store i64* %140, i64** %129, align 8
  store i64 %121, i64* %137, align 8
  br label %141

141:                                              ; preds = %126, %136
  %142 = phi i64* [ %127, %126 ], [ %137, %136 ]
  %143 = call zeroext i1 @_ZN2v88internal5Debug15CheckBreakPointENS0_6HandleINS0_10BreakPointEEEb(%"class.v8::internal::Debug"* %0, i64* %142, i1 zeroext %18)
  br i1 %143, label %144, label %179

144:                                              ; preds = %141
  %145 = load i64, i64* %102, align 8
  %146 = add nsw i32 %110, 1
  %147 = load i64, i64* %142, align 8
  %148 = shl i32 %110, 2
  %149 = sext i32 %148 to i64
  %150 = add nsw i64 %149, 7
  %151 = add i64 %150, %145
  %152 = inttoptr i64 %151 to i32*
  %153 = trunc i64 %147 to i32
  store atomic volatile i32 %153, i32* %152 monotonic, align 4
  %154 = and i64 %147, 1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %179, label %156

156:                                              ; preds = %144
  %157 = and i64 %145, -262144
  %158 = or i64 %157, 8
  %159 = inttoptr i64 %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = and i64 %160, 262144
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %167, label %163

163:                                              ; preds = %156
  %164 = or i64 %157, 16
  %165 = inttoptr i64 %164 to %"class.v8::internal::Heap"**
  %166 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %165, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %166, i64 %145, i64 %151, i64 %147) #13
  br label %167

167:                                              ; preds = %163, %156
  %168 = and i64 %147, -262144
  %169 = or i64 %168, 8
  %170 = inttoptr i64 %169 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = and i64 %171, 24
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %179, label %174

174:                                              ; preds = %167
  %175 = load i64, i64* %159, align 8
  %176 = and i64 %175, 24
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %179

178:                                              ; preds = %174
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %145, i64 %151, i64 %147) #13
  br label %179

179:                                              ; preds = %178, %174, %167, %144, %141
  %180 = phi i32 [ %110, %141 ], [ %146, %144 ], [ %146, %167 ], [ %146, %174 ], [ %146, %178 ]
  %181 = add nuw nsw i64 %109, 1
  %182 = icmp slt i64 %181, %105
  br i1 %182, label %108, label %106

183:                                              ; preds = %106
  %184 = bitcast %"class.v8::internal::Handle<v8::internal::FixedArray>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184) #13
  %185 = load i64, i64* %102, align 8
  %186 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FixedArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FixedArray>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %185, i64* %186, align 8
  %187 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FixedArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FixedArray>::ObjectRef"* %6, i64 0, i32 0
  %188 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  call void @_ZN2v88internal10FixedArray6ShrinkEPNS0_7IsolateEi(%"class.v8::internal::FixedArray"* nonnull %187, %"class.v8::internal::Isolate"* %188, i32 %180) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #13
  %189 = ptrtoint i64* %102 to i64
  br label %190

190:                                              ; preds = %93, %183, %106, %34, %70
  %191 = phi i64 [ %71, %70 ], [ 0, %34 ], [ %189, %183 ], [ 0, %106 ], [ 0, %93 ]
  %192 = inttoptr i64 %191 to i64*
  ret i64* %192
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal5Debug24IsMutedAtCurrentLocationEPNS0_15JavaScriptFrameE(%"class.v8::internal::Debug"*, %"class.v8::internal::JavaScriptFrame"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::FrameSummary", align 8
  %4 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %5 = alloca %"class.v8::internal::DebugScope", align 8
  %6 = alloca %"class.std::__1::vector.1511", align 8
  %7 = alloca i8, align 1
  %8 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %9 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31
  %11 = bitcast %"struct.v8::internal::HandleScopeData"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 8
  %18 = bitcast %"class.v8::internal::FrameSummary"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %18) #13
  %19 = getelementptr inbounds %"class.v8::internal::JavaScriptFrame", %"class.v8::internal::JavaScriptFrame"* %1, i64 0, i32 0, i32 0
  call void @_ZN2v88internal12FrameSummary6GetTopEPKNS0_11CommonFrameE(%"class.v8::internal::FrameSummary"* nonnull sret %3, %"class.v8::internal::CommonFrame"* %19) #13
  %20 = getelementptr inbounds %"class.v8::internal::FrameSummary", %"class.v8::internal::FrameSummary"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = bitcast %"class.v8::internal::SharedFunctionInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  %23 = load i64, i64* %21, align 8
  %24 = add i64 %23, 11
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i64 %23, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %29, i64* %30, align 8
  %31 = call zeroext i1 @_ZNK2v88internal18SharedFunctionInfo12HasBreakInfoEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  br i1 %31, label %32, label %110

32:                                               ; preds = %2
  %33 = load i64, i64* %21, align 8
  %34 = add i64 %33, 11
  %35 = inttoptr i64 %34 to i32*
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i64 %33, -4294967296
  %38 = zext i32 %36 to i64
  %39 = or i64 %37, %38
  %40 = add i64 %39, 15
  %41 = inttoptr i64 %40 to i32*
  %42 = load atomic i32, i32* %41 acquire, align 4
  %43 = zext i32 %42 to i64
  %44 = or i64 %37, %43
  %45 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %45, i64 0, i32 31, i32 4
  %47 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %46, align 8
  %48 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %32
  %50 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %47, i64 %44) #13
  br label %64

51:                                               ; preds = %32
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %45, i64 0, i32 31, i32 0
  %53 = load i64*, i64** %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %45, i64 0, i32 31, i32 1
  %55 = load i64*, i64** %54, align 8
  %56 = icmp eq i64* %53, %55
  br i1 %56, label %57, label %59

57:                                               ; preds = %51
  %58 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %45) #13
  br label %59

59:                                               ; preds = %57, %51
  %60 = phi i64* [ %58, %57 ], [ %53, %51 ]
  %61 = ptrtoint i64* %60 to i64
  %62 = add i64 %61, 8
  %63 = inttoptr i64 %62 to i64*
  store i64* %63, i64** %52, align 8
  store i64 %44, i64* %60, align 8
  br label %64

64:                                               ; preds = %49, %59
  %65 = phi i64* [ %50, %49 ], [ %60, %59 ]
  %66 = bitcast %"class.v8::internal::DebugScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %66) #13
  call void @_ZN2v88internal10DebugScopeC2EPNS0_5DebugE(%"class.v8::internal::DebugScope"* nonnull %5, %"class.v8::internal::Debug"* %0)
  %67 = bitcast %"class.std::__1::vector.1511"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 0, i64 24, i1 false) #13
  call void @_ZN2v88internal13BreakLocation21AllAtCurrentStatementENS0_6HandleINS0_9DebugInfoEEEPNS0_15JavaScriptFrameEPNSt3__16vectorIS1_NS7_9allocatorIS1_EEEE(i64* %65, %"class.v8::internal::JavaScriptFrame"* %1, %"class.std::__1::vector.1511"* nonnull %6)
  %68 = getelementptr inbounds %"class.std::__1::vector.1511", %"class.std::__1::vector.1511"* %6, i64 0, i32 0, i32 1
  %69 = bitcast %"class.v8::internal::BreakLocation"** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.std::__1::vector.1511"* %6 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %70, %72
  %74 = inttoptr i64 %72 to %"class.v8::internal::BreakLocation"*
  br i1 %73, label %102, label %75

75:                                               ; preds = %64
  %76 = getelementptr inbounds %"class.std::__1::vector.1511", %"class.std::__1::vector.1511"* %6, i64 0, i32 0, i32 0
  br label %77

77:                                               ; preds = %75, %87
  %78 = phi %"class.v8::internal::BreakLocation"* [ %74, %75 ], [ %95, %87 ]
  %79 = phi i64 [ 0, %75 ], [ %89, %87 ]
  %80 = phi i8 [ 0, %75 ], [ %88, %87 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #13
  %81 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %78, i64 %79
  %82 = call i64* @_ZN2v88internal5Debug16CheckBreakPointsENS0_6HandleINS0_9DebugInfoEEEPNS0_13BreakLocationEPb(%"class.v8::internal::Debug"* %0, i64* %65, %"class.v8::internal::BreakLocation"* %81, i8* nonnull %7)
  %83 = load i8, i8* %7, align 1, !range !2
  %84 = icmp eq i8 %83, 0
  %85 = icmp eq i64* %82, null
  %86 = or i1 %85, %84
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #13
  br i1 %86, label %87, label %100

87:                                               ; preds = %77
  %88 = or i8 %83, %80
  %89 = add nuw i64 %79, 1
  %90 = load i64, i64* %69, align 8
  %91 = load i64, i64* %71, align 8
  %92 = sub i64 %90, %91
  %93 = sdiv exact i64 %92, 24
  %94 = icmp ult i64 %89, %93
  %95 = inttoptr i64 %91 to %"class.v8::internal::BreakLocation"*
  br i1 %94, label %77, label %96

96:                                               ; preds = %87
  %97 = inttoptr i64 %91 to %"class.v8::internal::BreakLocation"*
  %98 = and i8 %88, 1
  %99 = icmp ne i8 %98, 0
  br label %102

100:                                              ; preds = %77
  %101 = load %"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"** %76, align 8
  br label %102

102:                                              ; preds = %64, %96, %100
  %103 = phi %"class.v8::internal::BreakLocation"* [ %101, %100 ], [ %74, %64 ], [ %97, %96 ]
  %104 = phi i1 [ false, %100 ], [ false, %64 ], [ %99, %96 ]
  %105 = icmp eq %"class.v8::internal::BreakLocation"* %103, null
  br i1 %105, label %109, label %106

106:                                              ; preds = %102
  %107 = ptrtoint %"class.v8::internal::BreakLocation"* %103 to i64
  store i64 %107, i64* %69, align 8
  %108 = bitcast %"class.v8::internal::BreakLocation"* %103 to i8*
  call void @_ZdlPv(i8* %108) #17
  br label %109

109:                                              ; preds = %102, %106
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #13
  call void @_ZN2v88internal10DebugScopeD2Ev(%"class.v8::internal::DebugScope"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %66) #13
  br label %110

110:                                              ; preds = %2, %109
  %111 = phi i1 [ %104, %109 ], [ false, %2 ]
  call void @_ZN2v88internal12FrameSummaryD1Ev(%"class.v8::internal::FrameSummary"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %18) #13
  %112 = icmp eq %"class.v8::internal::Isolate"* %9, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %110
  %114 = inttoptr i64 %12 to i64*
  %115 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %10, i64 0, i32 0
  %116 = load i64*, i64** %115, align 8
  store i64 %12, i64* %11, align 8
  %117 = load i32, i32* %15, align 8
  %118 = add nsw i32 %117, -1
  store i32 %118, i32* %15, align 8
  %119 = load i64*, i64** %13, align 8
  %120 = icmp eq i64* %119, %14
  br i1 %120, label %123, label %121

121:                                              ; preds = %113
  store i64* %14, i64** %13, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %9) #13
  %122 = load i64*, i64** %115, align 8
  br label %123

123:                                              ; preds = %121, %113
  %124 = phi i64* [ %122, %121 ], [ %114, %113 ]
  %125 = phi i64* [ %14, %121 ], [ %116, %113 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %124, i64* %125) #13
  br label %126

126:                                              ; preds = %110, %123
  ret i1 %111
}

declare zeroext i1 @_ZNK2v88internal18SharedFunctionInfo12HasBreakInfoEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal5Debug15CheckBreakPointENS0_6HandleINS0_10BreakPointEEEb(%"class.v8::internal::Debug"* nocapture readonly, i64*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %5 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %6 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31
  %8 = bitcast %"struct.v8::internal::HandleScopeData"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31, i32 1
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %12, align 8
  %15 = load i64, i64* %1, align 8
  %16 = and i64 %15, -4294967296
  %17 = add i64 %15, 7
  %18 = inttoptr i64 %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %16, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %75, label %26

26:                                               ; preds = %3
  %27 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %27, i64 0, i32 31, i32 4
  %29 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %28, align 8
  %30 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %26
  %32 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %29, i64 %21) #13
  br label %46

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %27, i64 0, i32 31, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %27, i64 0, i32 31, i32 1
  %37 = load i64*, i64** %36, align 8
  %38 = icmp eq i64* %35, %37
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %27) #13
  br label %41

41:                                               ; preds = %39, %33
  %42 = phi i64* [ %40, %39 ], [ %35, %33 ]
  %43 = ptrtoint i64* %42 to i64
  %44 = add i64 %43, 8
  %45 = inttoptr i64 %44 to i64*
  store i64* %45, i64** %34, align 8
  store i64 %21, i64* %42, align 8
  br label %46

46:                                               ; preds = %31, %41
  %47 = phi i64* [ %32, %31 ], [ %42, %41 ]
  %48 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  br i1 %2, label %49, label %51

49:                                               ; preds = %46
  %50 = tail call i64* @_ZN2v88internal13DebugEvaluate20WithTopmostArgumentsEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::Isolate"* %48, i64* %47) #13
  br label %55

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = tail call i64* @_ZN2v88internal13DebugEvaluate5LocalEPNS0_7IsolateENS0_12StackFrameIdEiNS0_6HandleINS0_6StringEEEb(%"class.v8::internal::Isolate"* %48, i32 %53, i32 0, i64* %47, i1 zeroext false) #13
  br label %55

55:                                               ; preds = %51, %49
  %56 = phi i64* [ %50, %49 ], [ %54, %51 ]
  %57 = icmp eq i64* %56, null
  br i1 %57, label %58, label %68

58:                                               ; preds = %55
  %59 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %59, i64 0, i32 0, i32 7, i32 0, i64 5
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %59, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = trunc i64 %63 to i32
  %65 = trunc i64 %61 to i32
  %66 = icmp eq i32 %64, %65
  br i1 %66, label %75, label %67

67:                                               ; preds = %58
  store i64 %61, i64* %62, align 8
  br label %75

68:                                               ; preds = %55
  %69 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #13
  %70 = load i64, i64* %56, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %4, i64 0, i32 0
  %73 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %74 = call zeroext i1 @_ZN2v88internal6Object12BooleanValueEPNS0_7IsolateE(%"class.v8::internal::Object"* nonnull %72, %"class.v8::internal::Isolate"* %73) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #13
  br label %75

75:                                               ; preds = %58, %68, %67, %3
  %76 = phi i1 [ true, %3 ], [ %74, %68 ], [ false, %67 ], [ false, %58 ]
  %77 = icmp eq %"class.v8::internal::Isolate"* %6, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %75
  %79 = inttoptr i64 %9 to i64*
  %80 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %7, i64 0, i32 0
  %81 = load i64*, i64** %80, align 8
  store i64 %9, i64* %8, align 8
  %82 = load i32, i32* %12, align 8
  %83 = add nsw i32 %82, -1
  store i32 %83, i32* %12, align 8
  %84 = load i64*, i64** %10, align 8
  %85 = icmp eq i64* %84, %11
  br i1 %85, label %88, label %86

86:                                               ; preds = %78
  store i64* %11, i64** %10, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %6) #13
  %87 = load i64*, i64** %80, align 8
  br label %88

88:                                               ; preds = %86, %78
  %89 = phi i64* [ %87, %86 ], [ %79, %78 ]
  %90 = phi i64* [ %11, %86 ], [ %81, %78 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %89, i64* %90) #13
  br label %91

91:                                               ; preds = %75, %88
  ret i1 %76
}

declare i64* @_ZN2v88internal13DebugEvaluate20WithTopmostArgumentsEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal13DebugEvaluate5LocalEPNS0_7IsolateENS0_12StackFrameIdEiNS0_6HandleINS0_6StringEEEb(%"class.v8::internal::Isolate"*, i32, i32, i64*, i1 zeroext) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal6Object12BooleanValueEPNS0_7IsolateE(%"class.v8::internal::Object"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal5Debug13SetBreakpointENS0_6HandleINS0_18SharedFunctionInfoEEENS2_INS0_10BreakPointEEEPi(%"class.v8::internal::Debug"* nocapture, i64*, i64*, i32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %6 = alloca %"class.v8::internal::BreakIterator", align 8
  %7 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31
  %10 = bitcast %"struct.v8::internal::HandleScopeData"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %14, align 8
  %17 = tail call zeroext i1 @_ZN2v88internal5Debug15EnsureBreakInfoENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %1)
  br i1 %17, label %18, label %73

18:                                               ; preds = %4
  tail call void @_ZN2v88internal5Debug32PrepareFunctionForDebugExecutionENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %1)
  %19 = load i64, i64* %1, align 8
  %20 = and i64 %19, -4294967296
  %21 = add i64 %19, 15
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 acquire, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %20, %24
  %26 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %26, i64 0, i32 31, i32 4
  %28 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %27, align 8
  %29 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %18
  %31 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %28, i64 %25) #13
  %32 = load i64, i64* %31, align 8
  br label %46

33:                                               ; preds = %18
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %26, i64 0, i32 31, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %26, i64 0, i32 31, i32 1
  %37 = load i64*, i64** %36, align 8
  %38 = icmp eq i64* %35, %37
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %26) #13
  br label %41

41:                                               ; preds = %39, %33
  %42 = phi i64* [ %40, %39 ], [ %35, %33 ]
  %43 = ptrtoint i64* %42 to i64
  %44 = add i64 %43, 8
  %45 = inttoptr i64 %44 to i64*
  store i64* %45, i64** %34, align 8
  store i64 %25, i64* %42, align 8
  br label %46

46:                                               ; preds = %30, %41
  %47 = phi i64 [ %32, %30 ], [ %25, %41 ]
  %48 = phi i64* [ %31, %30 ], [ %42, %41 ]
  %49 = load i32, i32* %3, align 4
  %50 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #13
  %51 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %47, i64* %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %5, i64 0, i32 0
  %53 = call zeroext i1 @_ZNK2v88internal9DebugInfo15CanBreakAtEntryEv(%"class.v8::internal::DebugInfo"* nonnull %52) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #13
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.v8::internal::BreakIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %55) #13
  call void @_ZN2v88internal13BreakIteratorC2ENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::BreakIterator"* nonnull %6, i64* %48) #13
  call void @_ZN2v88internal13BreakIterator14SkipToPositionEi(%"class.v8::internal::BreakIterator"* nonnull %6, i32 %49) #13
  %56 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 2
  %57 = load i32, i32* %56, align 4
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %55) #13
  br label %58

58:                                               ; preds = %46, %54
  %59 = phi i32 [ %57, %54 ], [ 0, %46 ]
  store i32 %59, i32* %3, align 4
  %60 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  call void @_ZN2v88internal9DebugInfo13SetBreakPointEPNS0_7IsolateENS0_6HandleIS1_EEiNS4_INS0_10BreakPointEEE(%"class.v8::internal::Isolate"* %60, i64* %48, i32 %59, i64* %2) #13
  call void @_ZN2v88internal5Debug16ClearBreakPointsENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* undef, i64* %48)
  call void @_ZN2v88internal5Debug16ApplyBreakPointsENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* %0, i64* %48)
  %61 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 13, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = and i32 %62, 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %73

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 13, i32 0
  %67 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %67, i64 0, i32 14, i32 0
  %69 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %69, i64 0, i32 6
  call void @_ZN2v88internal9Histogram9AddSampleEi(%"class.v8::internal::Histogram"* %70, i32 2) #13
  %71 = load i32, i32* %61, align 8
  %72 = or i32 %71, 4
  store i32 %72, i32* %61, align 8
  br label %73

73:                                               ; preds = %65, %58, %4
  %74 = phi i1 [ false, %4 ], [ true, %58 ], [ true, %65 ]
  %75 = icmp eq %"class.v8::internal::Isolate"* %8, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %73
  %77 = inttoptr i64 %11 to i64*
  %78 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %9, i64 0, i32 0
  %79 = load i64*, i64** %78, align 8
  store i64 %11, i64* %10, align 8
  %80 = load i32, i32* %14, align 8
  %81 = add nsw i32 %80, -1
  store i32 %81, i32* %14, align 8
  %82 = load i64*, i64** %12, align 8
  %83 = icmp eq i64* %82, %13
  br i1 %83, label %86, label %84

84:                                               ; preds = %76
  store i64* %13, i64** %12, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %8) #13
  %85 = load i64*, i64** %78, align 8
  br label %86

86:                                               ; preds = %84, %76
  %87 = phi i64* [ %85, %84 ], [ %77, %76 ]
  %88 = phi i64* [ %13, %84 ], [ %79, %76 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %87, i64* %88) #13
  br label %89

89:                                               ; preds = %73, %86
  ret i1 %74
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal5Debug21FindBreakablePositionENS0_6HandleINS0_9DebugInfoEEEi(%"class.v8::internal::Debug"* nocapture readnone, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %5 = alloca %"class.v8::internal::BreakIterator", align 8
  %6 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = load i64, i64* %1, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4, i64 0, i32 0
  %10 = call zeroext i1 @_ZNK2v88internal9DebugInfo15CanBreakAtEntryEv(%"class.v8::internal::DebugInfo"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  br i1 %10, label %15, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.v8::internal::BreakIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %12) #13
  call void @_ZN2v88internal13BreakIteratorC2ENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::BreakIterator"* nonnull %5, i64* %1)
  call void @_ZN2v88internal13BreakIterator14SkipToPositionEi(%"class.v8::internal::BreakIterator"* nonnull %5, i32 %2)
  %13 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %5, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %12) #13
  br label %15

15:                                               ; preds = %3, %11
  %16 = phi i32 [ %14, %11 ], [ 0, %3 ]
  ret i32 %16
}

declare void @_ZN2v88internal9DebugInfo13SetBreakPointEPNS0_7IsolateENS0_6HandleIS1_EEiNS4_INS0_10BreakPointEEE(%"class.v8::internal::Isolate"*, i64*, i32, i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug16ClearBreakPointsENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* nocapture readnone, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %4 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %5 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %6 = alloca %"class.v8::internal::BreakIterator", align 8
  %7 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = load i64, i64* %1, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3, i64 0, i32 0
  %11 = call zeroext i1 @_ZNK2v88internal9DebugInfo15CanBreakAtEntryEv(%"class.v8::internal::DebugInfo"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  br i1 %11, label %12, label %17

12:                                               ; preds = %2
  %13 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #13
  %14 = load i64, i64* %1, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4, i64 0, i32 0
  call void @_ZN2v88internal9DebugInfo17ClearBreakAtEntryEv(%"class.v8::internal::DebugInfo"* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #13
  br label %115

17:                                               ; preds = %2
  %18 = load i64, i64* %1, align 8
  %19 = and i64 %18, -4294967296
  %20 = add i64 %18, 19
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 acquire, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %19, %23
  %25 = add i64 %24, -1
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %19, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = icmp eq i16 %32, 133
  %34 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #13
  br i1 %33, label %35, label %40

35:                                               ; preds = %17
  %36 = load i64, i64* %1, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %5, i64 0, i32 0
  %39 = call zeroext i1 @_ZNK2v88internal9DebugInfo12HasBreakInfoEv(%"class.v8::internal::DebugInfo"* nonnull %38) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #13
  br i1 %39, label %41, label %115

40:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #13
  br label %115

41:                                               ; preds = %35
  %42 = bitcast %"class.v8::internal::BreakIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %42) #13
  call void @_ZN2v88internal13BreakIteratorC2ENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::BreakIterator"* nonnull %6, i64* %1)
  %43 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 4, i32 2
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, -1
  br i1 %45, label %55, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 4, i32 4, i32 0
  %49 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 1
  %50 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 4
  %51 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 4, i32 4, i32 2
  %52 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 2
  %53 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 4, i32 4, i32 3
  %54 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 3
  br label %56

55:                                               ; preds = %110, %95, %91, %41
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %42) #13
  br label %115

56:                                               ; preds = %46, %110
  %57 = call i32 @_ZN2v88internal13BreakIterator17GetDebugBreakTypeEv(%"class.v8::internal::BreakIterator"* nonnull %6) #13
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %84, label %59

59:                                               ; preds = %56
  %60 = load i64*, i64** %47, align 8
  %61 = load i64, i64* %60, align 8
  %62 = and i64 %61, -4294967296
  %63 = add i64 %61, 19
  %64 = inttoptr i64 %63 to i32*
  %65 = load atomic i32, i32* %64 acquire, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %62, %66
  %68 = load i64*, i64** %47, align 8
  %69 = load i64, i64* %68, align 8
  %70 = and i64 %69, -4294967296
  %71 = add i64 %69, 15
  %72 = inttoptr i64 %71 to i32*
  %73 = load atomic i32, i32* %72 acquire, align 4
  %74 = zext i32 %73 to i64
  %75 = or i64 %70, %74
  %76 = load i32, i32* %48, align 8
  %77 = sext i32 %76 to i64
  %78 = add nsw i64 %77, 33
  %79 = add i64 %78, %75
  %80 = inttoptr i64 %79 to i8*
  %81 = load i8, i8* %80, align 1
  %82 = add i64 %78, %67
  %83 = inttoptr i64 %82 to i8*
  store i8 %81, i8* %83, align 1
  br label %84

84:                                               ; preds = %56, %59
  %85 = load i32, i32* %49, align 8
  %86 = icmp eq i32 %85, -1
  br label %87

87:                                               ; preds = %107, %84
  %88 = phi i1 [ %86, %84 ], [ false, %107 ]
  %89 = load i32, i32* %43, align 8
  %90 = icmp eq i32 %89, -1
  br i1 %90, label %91, label %94

91:                                               ; preds = %87
  %92 = load i32, i32* %49, align 8
  %93 = add nsw i32 %92, 1
  store i32 %93, i32* %49, align 8
  br label %55

94:                                               ; preds = %87
  br i1 %88, label %98, label %95

95:                                               ; preds = %94
  call void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"* %50) #13
  %96 = load i32, i32* %43, align 8
  %97 = icmp eq i32 %96, -1
  br i1 %97, label %55, label %98

98:                                               ; preds = %95, %94
  %99 = load i64, i64* %51, align 8
  %100 = lshr i64 %99, 1
  %101 = trunc i64 %100 to i32
  %102 = and i32 %101, 1073741823
  %103 = add nsw i32 %102, -1
  store i32 %103, i32* %52, align 4
  %104 = load i8, i8* %53, align 8, !range !2
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %107, label %106

106:                                              ; preds = %98
  store i32 %103, i32* %54, align 8
  br label %107

107:                                              ; preds = %106, %98
  %108 = call i32 @_ZN2v88internal13BreakIterator17GetDebugBreakTypeEv(%"class.v8::internal::BreakIterator"* nonnull %6) #13
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %87, label %110

110:                                              ; preds = %107
  %111 = load i32, i32* %43, align 8
  %112 = load i32, i32* %49, align 8
  %113 = add nsw i32 %112, 1
  store i32 %113, i32* %49, align 8
  %114 = icmp eq i32 %111, -1
  br i1 %114, label %55, label %56

115:                                              ; preds = %35, %40, %55, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug16ApplyBreakPointsENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* nocapture readonly, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %4 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %5 = alloca %"class.v8::internal::BreakPointInfo", align 8
  %6 = alloca %"class.v8::internal::BreakIterator", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %8 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #13
  %9 = load i64, i64* %1, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3, i64 0, i32 0
  %12 = call zeroext i1 @_ZNK2v88internal9DebugInfo15CanBreakAtEntryEv(%"class.v8::internal::DebugInfo"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13
  br i1 %12, label %13, label %18

13:                                               ; preds = %2
  %14 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = load i64, i64* %1, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4, i64 0, i32 0
  call void @_ZN2v88internal9DebugInfo15SetBreakAtEntryEv(%"class.v8::internal::DebugInfo"* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  br label %87

18:                                               ; preds = %2
  %19 = load i64, i64* %1, align 8
  %20 = and i64 %19, -4294967296
  %21 = add i64 %19, 19
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 acquire, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %20, %24
  %26 = add i64 %25, -1
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %20, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = icmp eq i16 %33, 133
  br i1 %34, label %35, label %92

35:                                               ; preds = %18
  %36 = load i64, i64* %1, align 8
  %37 = and i64 %36, -4294967296
  %38 = add i64 %36, 23
  %39 = inttoptr i64 %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i64
  %42 = or i64 %37, %41
  %43 = add i64 %42, 3
  %44 = inttoptr i64 %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = icmp sgt i32 %45, 1
  br i1 %46, label %47, label %87

47:                                               ; preds = %35
  %48 = add i64 %42, 7
  %49 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %50 = bitcast %"class.v8::internal::BreakPointInfo"* %5 to i8*
  %51 = getelementptr inbounds %"class.v8::internal::BreakPointInfo", %"class.v8::internal::BreakPointInfo"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = bitcast %"class.v8::internal::BreakIterator"* %6 to i8*
  br label %53

53:                                               ; preds = %47, %81
  %54 = phi i32 [ %45, %47 ], [ %82, %81 ]
  %55 = phi i64 [ 0, %47 ], [ %83, %81 ]
  %56 = trunc i64 %55 to i32
  %57 = shl i32 %56, 2
  %58 = sext i32 %57 to i64
  %59 = add i64 %48, %58
  %60 = inttoptr i64 %59 to i32*
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %49, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %62, i64 0, i32 0, i32 7, i32 0, i64 4
  %64 = load i64, i64* %63, align 8
  %65 = trunc i64 %64 to i32
  %66 = icmp eq i32 %61, %65
  br i1 %66, label %81, label %67

67:                                               ; preds = %53
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #13
  %68 = load atomic i32, i32* %60 monotonic, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %37, %69
  store i64 %70, i64* %51, align 8
  %71 = call i32 @_ZN2v88internal14BreakPointInfo18GetBreakPointCountEPNS0_7IsolateE(%"class.v8::internal::BreakPointInfo"* nonnull %5, %"class.v8::internal::Isolate"* %62) #13
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %79, label %73

73:                                               ; preds = %67
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %52) #13
  call void @_ZN2v88internal13BreakIteratorC2ENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::BreakIterator"* nonnull %6, i64* %1)
  %74 = load i64, i64* %51, align 8
  %75 = add i64 %74, 3
  %76 = inttoptr i64 %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = ashr i32 %77, 1
  call void @_ZN2v88internal13BreakIterator14SkipToPositionEi(%"class.v8::internal::BreakIterator"* nonnull %6, i32 %78)
  call void @_ZN2v88internal13BreakIterator13SetDebugBreakEv(%"class.v8::internal::BreakIterator"* nonnull %6)
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %52) #13
  br label %79

79:                                               ; preds = %67, %73
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #13
  %80 = load i32, i32* %44, align 4
  br label %81

81:                                               ; preds = %79, %53
  %82 = phi i32 [ %80, %79 ], [ %54, %53 ]
  %83 = add nuw nsw i64 %55, 1
  %84 = ashr i32 %82, 1
  %85 = sext i32 %84 to i64
  %86 = icmp slt i64 %83, %85
  br i1 %86, label %53, label %87

87:                                               ; preds = %81, %35, %13
  %88 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #13
  %89 = load i64, i64* %1, align 8
  %90 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %7, i64 0, i32 0
  call void @_ZN2v88internal9DebugInfo21SetDebugExecutionModeENS1_13ExecutionModeE(%"class.v8::internal::DebugInfo"* nonnull %91, i8 zeroext 0) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #13
  br label %92

92:                                               ; preds = %18, %87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal5Debug22SetBreakPointForScriptENS0_6HandleINS0_6ScriptEEENS2_INS0_6StringEEEPiS7_(%"class.v8::internal::Debug"* nocapture, i64*, i64*, i32*, i32* nocapture) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 12
  %7 = load i32, i32* %6, align 8
  %8 = add nsw i32 %7, 1
  store i32 %8, i32* %6, align 8
  store i32 %8, i32* %4, align 4
  %9 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %10 = bitcast %"class.v8::internal::Isolate"** %9 to %"class.v8::internal::Factory"**
  %11 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %10, align 8
  %12 = tail call i64* @_ZN2v88internal7Factory13NewBreakPointEiNS0_6HandleINS0_6StringEEE(%"class.v8::internal::Factory"* %11, i32 %8, i64* %2) #13
  %13 = load i64, i64* %1, align 8
  %14 = add i64 %13, 23
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, -2
  %18 = icmp eq i32 %17, 6
  br i1 %18, label %19, label %21

19:                                               ; preds = %5
  tail call void @_ZN2v88internal5Debug31RecordWasmScriptWithBreakpointsENS0_6HandleINS0_6ScriptEEE(%"class.v8::internal::Debug"* %0, i64* %1)
  %20 = tail call zeroext i1 @_ZN2v88internal10WasmScript13SetBreakPointENS0_6HandleINS0_6ScriptEEEPiNS2_INS0_10BreakPointEEE(i64* %1, i32* %3, i64* %12) #13
  br label %62

21:                                               ; preds = %5
  %22 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 31
  %24 = bitcast %"struct.v8::internal::HandleScopeData"* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 31, i32 1
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 31, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %28, align 8
  %31 = load i32, i32* %3, align 4
  %32 = tail call i64* @_ZN2v88internal5Debug35FindInnermostContainingFunctionInfoENS0_6HandleINS0_6ScriptEEEi(%"class.v8::internal::Debug"* %0, i64* %1, i32 %31)
  %33 = load i64, i64* %32, align 8
  %34 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 0, i32 7, i32 0, i64 4
  %36 = load i64, i64* %35, align 8
  %37 = trunc i64 %33 to i32
  %38 = trunc i64 %36 to i32
  %39 = icmp eq i32 %37, %38
  br i1 %39, label %46, label %40

40:                                               ; preds = %21
  %41 = tail call zeroext i1 @_ZN2v88internal5Debug15EnsureBreakInfoENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %32)
  br i1 %41, label %42, label %46

42:                                               ; preds = %40
  tail call void @_ZN2v88internal5Debug32PrepareFunctionForDebugExecutionENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %32)
  %43 = load i32, i32* %3, align 4
  %44 = tail call i64* @_ZN2v88internal5Debug41FindClosestSharedFunctionInfoFromPositionEiNS0_6HandleINS0_6ScriptEEENS2_INS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i32 %43, i64* %1, i64* %32)
  %45 = tail call zeroext i1 @_ZN2v88internal5Debug13SetBreakpointENS0_6HandleINS0_18SharedFunctionInfoEEENS2_INS0_10BreakPointEEEPi(%"class.v8::internal::Debug"* %0, i64* %44, i64* %12, i32* %3)
  br label %46

46:                                               ; preds = %42, %40, %21
  %47 = phi i1 [ false, %21 ], [ %45, %42 ], [ false, %40 ]
  %48 = icmp eq %"class.v8::internal::Isolate"* %22, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %46
  %50 = inttoptr i64 %25 to i64*
  %51 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %23, i64 0, i32 0
  %52 = load i64*, i64** %51, align 8
  store i64 %25, i64* %24, align 8
  %53 = load i32, i32* %28, align 8
  %54 = add nsw i32 %53, -1
  store i32 %54, i32* %28, align 8
  %55 = load i64*, i64** %26, align 8
  %56 = icmp eq i64* %55, %27
  br i1 %56, label %59, label %57

57:                                               ; preds = %49
  store i64* %27, i64** %26, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %22) #13
  %58 = load i64*, i64** %51, align 8
  br label %59

59:                                               ; preds = %57, %49
  %60 = phi i64* [ %58, %57 ], [ %50, %49 ]
  %61 = phi i64* [ %27, %57 ], [ %52, %49 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %60, i64* %61) #13
  br label %62

62:                                               ; preds = %59, %46, %19
  %63 = phi i1 [ %20, %19 ], [ %47, %46 ], [ %47, %59 ]
  ret i1 %63
}

declare i64* @_ZN2v88internal7Factory13NewBreakPointEiNS0_6HandleINS0_6StringEEE(%"class.v8::internal::Factory"*, i32, i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug31RecordWasmScriptWithBreakpointsENS0_6HandleINS0_6ScriptEEE(%"class.v8::internal::Debug"* nocapture, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::MaybeObjectHandle", align 8
  %4 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 15, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = icmp eq i64* %5, null
  br i1 %6, label %7, label %18

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %9 = bitcast %"class.v8::internal::Isolate"** %8 to %"class.v8::internal::Factory"**
  %10 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %9, align 8
  %11 = tail call i64* @_ZN2v88internal7Factory16NewWeakArrayListEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %10, i32 4, i8 zeroext 0) #13
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 36
  %14 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %13, align 8
  %15 = load i64, i64* %11, align 8
  %16 = tail call i64* @_ZN2v88internal13GlobalHandles6CreateENS0_6ObjectE(%"class.v8::internal::GlobalHandles"* %14, i64 %15) #13
  %17 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 15, i32 0, i32 0
  store i64* %16, i64** %17, align 8
  br label %18

18:                                               ; preds = %7, %2
  %19 = phi i64* [ %16, %7 ], [ %5, %2 ]
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %23, 1
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  %26 = lshr i32 %23, 1
  %27 = add i64 %20, 11
  %28 = zext i32 %26 to i64
  br label %29

29:                                               ; preds = %25, %47
  %30 = phi i64 [ %28, %25 ], [ %31, %47 ]
  %31 = add nsw i64 %30, -1
  %32 = trunc i64 %31 to i32
  %33 = shl i32 %32, 2
  %34 = sext i32 %33 to i64
  %35 = add i64 %27, %34
  %36 = inttoptr i64 %35 to i32*
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 1
  %39 = icmp ne i32 %38, 0
  %40 = icmp ne i32 %37, 3
  %41 = and i1 %40, %39
  br i1 %41, label %42, label %47

42:                                               ; preds = %29
  %43 = and i32 %37, -3
  %44 = load i64, i64* %1, align 8
  %45 = trunc i64 %44 to i32
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %69, label %47

47:                                               ; preds = %42, %29
  %48 = icmp sgt i64 %31, 0
  br i1 %48, label %29, label %49

49:                                               ; preds = %47, %18
  %50 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %51 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %50, align 8
  %52 = bitcast %"class.v8::internal::MaybeObjectHandle"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #13
  %53 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %3, i64 0, i32 0
  store i32 1, i32* %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %3, i64 0, i32 1, i32 0
  store i64* %1, i64** %54, align 8
  %55 = call i64* @_ZN2v88internal13WeakArrayList6AppendEPNS0_7IsolateENS0_6HandleIS1_EERKNS0_17MaybeObjectHandleENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %51, i64* %19, %"class.v8::internal::MaybeObjectHandle"* nonnull dereferenceable(16) %3, i8 zeroext 0) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #13
  %56 = load i64, i64* %55, align 8
  %57 = load i64*, i64** %4, align 8
  %58 = load i64, i64* %57, align 8
  %59 = trunc i64 %56 to i32
  %60 = trunc i64 %58 to i32
  %61 = icmp eq i32 %59, %60
  br i1 %61, label %69, label %62

62:                                               ; preds = %49
  %63 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 15, i32 0, i32 0
  call void @_ZN2v88internal13GlobalHandles7DestroyEPm(i64* %57) #13
  %64 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %50, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 36
  %66 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %65, align 8
  %67 = load i64, i64* %55, align 8
  %68 = call i64* @_ZN2v88internal13GlobalHandles6CreateENS0_6ObjectE(%"class.v8::internal::GlobalHandles"* %66, i64 %67) #13
  store i64* %68, i64** %63, align 8
  br label %69

69:                                               ; preds = %42, %49, %62
  ret void
}

declare zeroext i1 @_ZN2v88internal10WasmScript13SetBreakPointENS0_6HandleINS0_6ScriptEEEPiNS2_INS0_10BreakPointEEE(i64*, i32*, i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal5Debug35FindInnermostContainingFunctionInfoENS0_6HandleINS0_6ScriptEEEi(%"class.v8::internal::Debug"* nocapture, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca { i64*, i8 }, align 8
  %5 = alloca %"class.v8::internal::SharedFunctionInfoFinder", align 8
  %6 = alloca %"class.v8::internal::SharedFunctionInfo::ScriptIterator", align 8
  %7 = alloca %"class.v8::internal::IsCompiledScope", align 8
  %8 = bitcast %"class.v8::internal::IsCompiledScope"* %7 to i8*
  %9 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %10 = bitcast %"class.v8::internal::SharedFunctionInfoFinder"* %5 to i8*
  %11 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfoFinder", %"class.v8::internal::SharedFunctionInfoFinder"* %5, i64 0, i32 2
  %12 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfoFinder", %"class.v8::internal::SharedFunctionInfoFinder"* %5, i64 0, i32 3
  %13 = bitcast %"class.v8::internal::SharedFunctionInfo::ScriptIterator"* %6 to i8*
  %14 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfoFinder", %"class.v8::internal::SharedFunctionInfoFinder"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast { i64*, i8 }* %4 to i8*
  %16 = bitcast { i64*, i8 }* %4 to %"class.v8::internal::IsCompiledScope"*
  %17 = bitcast { i64*, i8 }* %4 to i64*
  %18 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %4, i64 0, i32 1
  %19 = bitcast %"class.v8::internal::IsCompiledScope"* %7 to i64*
  %20 = getelementptr inbounds %"class.v8::internal::IsCompiledScope", %"class.v8::internal::IsCompiledScope"* %7, i64 0, i32 1
  br label %21

21:                                               ; preds = %121, %3
  %22 = phi i32 [ 0, %3 ], [ %122, %121 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 9, i1 false) #13
  %23 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false) #13
  store i32 -1, i32* %11, align 8
  store i32 %2, i32* %12, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #13
  %24 = load i64, i64* %1, align 8
  call void @_ZN2v88internal18SharedFunctionInfo14ScriptIteratorC1EPNS0_7IsolateENS0_6ScriptE(%"class.v8::internal::SharedFunctionInfo::ScriptIterator"* nonnull %6, %"class.v8::internal::Isolate"* %23, i64 %24) #13
  %25 = call i64 @_ZN2v88internal18SharedFunctionInfo14ScriptIterator4NextEv(%"class.v8::internal::SharedFunctionInfo::ScriptIterator"* nonnull %6) #13
  %26 = trunc i64 %25 to i32
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #13
  br label %38

29:                                               ; preds = %21, %29
  %30 = phi i64 [ %31, %29 ], [ %25, %21 ]
  call void @_ZN2v88internal24SharedFunctionInfoFinder12NewCandidateENS0_18SharedFunctionInfoENS0_10JSFunctionE(%"class.v8::internal::SharedFunctionInfoFinder"* nonnull %5, i64 %30, i64 0) #13
  %31 = call i64 @_ZN2v88internal18SharedFunctionInfo14ScriptIterator4NextEv(%"class.v8::internal::SharedFunctionInfo::ScriptIterator"* nonnull %6) #13
  %32 = trunc i64 %31 to i32
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %29

34:                                               ; preds = %29
  %35 = load i64, i64* %14, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #13
  %36 = trunc i64 %35 to i32
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %43

38:                                               ; preds = %28, %34
  %39 = icmp eq i32 %22, 0
  br i1 %39, label %40, label %119

40:                                               ; preds = %38
  %41 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %42 = call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_115CompileTopLevelEPNS0_7IsolateENS0_6HandleINS0_6ScriptEEE(%"class.v8::internal::Isolate"* %41, i64* %1)
  br i1 %42, label %117, label %119

43:                                               ; preds = %34
  %44 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15)
  call void @_ZN2v88internal15IsCompiledScopeC2ENS0_18SharedFunctionInfoEPNS0_7IsolateE(%"class.v8::internal::IsCompiledScope"* nonnull %16, i64 %35, %"class.v8::internal::Isolate"* %44) #13
  %45 = load i64, i64* %17, align 8
  %46 = load i8, i8* %18, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15)
  store i64 %45, i64* %19, align 8
  store i8 %46, i8* %20, align 8
  %47 = icmp eq i8 %46, 0
  %48 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  br i1 %47, label %72, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 4
  %51 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %50, align 8
  %52 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %49
  %54 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %51, i64 %35) #13
  br label %68

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 0
  %57 = load i64*, i64** %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 1
  %59 = load i64*, i64** %58, align 8
  %60 = icmp eq i64* %57, %59
  br i1 %60, label %61, label %63

61:                                               ; preds = %55
  %62 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %48) #13
  br label %63

63:                                               ; preds = %61, %55
  %64 = phi i64* [ %62, %61 ], [ %57, %55 ]
  %65 = ptrtoint i64* %64 to i64
  %66 = add i64 %65, 8
  %67 = inttoptr i64 %66 to i64*
  store i64* %67, i64** %56, align 8
  store i64 %35, i64* %64, align 8
  br label %68

68:                                               ; preds = %53, %63
  %69 = phi i64* [ %54, %53 ], [ %64, %63 ]
  %70 = icmp ugt i32 %22, 1
  br i1 %70, label %71, label %118

71:                                               ; preds = %68
  call void @_ZN2v88internal5Debug15CreateBreakInfoENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %69)
  br label %118

72:                                               ; preds = %43
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31
  %74 = bitcast %"struct.v8::internal::HandleScopeData"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 1
  %77 = load i64*, i64** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 2
  %79 = load i32, i32* %78, align 8
  %80 = add nsw i32 %79, 1
  store i32 %80, i32* %78, align 8
  %81 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %82 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %81, i64 0, i32 31, i32 4
  %83 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %82, align 8
  %84 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %72
  %86 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %83, i64 %35) #13
  br label %100

87:                                               ; preds = %72
  %88 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %81, i64 0, i32 31, i32 0
  %89 = load i64*, i64** %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %81, i64 0, i32 31, i32 1
  %91 = load i64*, i64** %90, align 8
  %92 = icmp eq i64* %89, %91
  br i1 %92, label %93, label %95

93:                                               ; preds = %87
  %94 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %81) #13
  br label %95

95:                                               ; preds = %93, %87
  %96 = phi i64* [ %94, %93 ], [ %89, %87 ]
  %97 = ptrtoint i64* %96 to i64
  %98 = add i64 %97, 8
  %99 = inttoptr i64 %98 to i64*
  store i64* %99, i64** %88, align 8
  store i64 %35, i64* %96, align 8
  br label %100

100:                                              ; preds = %85, %95
  %101 = phi i64* [ %86, %85 ], [ %96, %95 ]
  %102 = call zeroext i1 @_ZN2v88internal8Compiler7CompileEPNS0_7IsolateENS0_6HandleINS0_18SharedFunctionInfoEEENS1_18ClearExceptionFlagEPNS0_15IsCompiledScopeE(%"class.v8::internal::Isolate"* %81, i64* %101, i32 1, %"class.v8::internal::IsCompiledScope"* nonnull %7) #13
  %103 = icmp eq %"class.v8::internal::Isolate"* %48, null
  br i1 %103, label %120, label %104

104:                                              ; preds = %100
  %105 = inttoptr i64 %75 to i64*
  %106 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %73, i64 0, i32 0
  %107 = load i64*, i64** %106, align 8
  store i64 %75, i64* %74, align 8
  %108 = load i32, i32* %78, align 8
  %109 = add nsw i32 %108, -1
  store i32 %109, i32* %78, align 8
  %110 = load i64*, i64** %76, align 8
  %111 = icmp eq i64* %110, %77
  br i1 %111, label %114, label %112

112:                                              ; preds = %104
  store i64* %77, i64** %76, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %48) #13
  %113 = load i64*, i64** %106, align 8
  br label %114

114:                                              ; preds = %112, %104
  %115 = phi i64* [ %113, %112 ], [ %105, %104 ]
  %116 = phi i64* [ %77, %112 ], [ %107, %104 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %115, i64* %116) #13
  br label %120

117:                                              ; preds = %40
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  br label %121

118:                                              ; preds = %71, %68
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  br label %128

119:                                              ; preds = %40, %38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  br label %123

120:                                              ; preds = %114, %100
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  br i1 %102, label %121, label %123

121:                                              ; preds = %120, %117
  %122 = add nuw nsw i32 %22, 1
  br label %21

123:                                              ; preds = %120, %119
  %124 = bitcast %"class.v8::internal::Isolate"** %9 to %"class.v8::internal::Factory"**
  %125 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %124, align 8
  %126 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %125, i64 160
  %127 = bitcast %"class.v8::internal::Factory"* %126 to i64*
  br label %128

128:                                              ; preds = %118, %123
  %129 = phi i64* [ %127, %123 ], [ %69, %118 ]
  ret i64* %129
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal5Debug41FindClosestSharedFunctionInfoFromPositionEiNS0_6HandleINS0_6ScriptEEENS2_INS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* nocapture, i32, i64*, i64*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %6 = alloca %"class.v8::internal::BreakIterator", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %8 = alloca %"class.v8::internal::BreakIterator", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", align 8
  %10 = alloca %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", align 8
  %11 = alloca %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", align 8
  %12 = alloca %"class.std::__1::vector.1542", align 8
  %13 = alloca %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", align 8
  %14 = bitcast %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = load i64, i64* %3, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %9, i64 0, i32 0
  %18 = call zeroext i1 @_ZNK2v88internal18SharedFunctionInfo12HasBreakInfoEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  br i1 %18, label %20, label %19, !prof !3

19:                                               ; preds = %4
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0)) #16
  unreachable

20:                                               ; preds = %4
  %21 = load i64, i64* %3, align 8
  %22 = and i64 %21, -4294967296
  %23 = add i64 %21, 15
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 acquire, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %22, %26
  %28 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %29 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 31, i32 4
  %31 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %30, align 8
  %32 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %20
  %34 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %31, i64 %27) #13
  %35 = load i64, i64* %34, align 8
  br label %49

36:                                               ; preds = %20
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 31, i32 0
  %38 = load i64*, i64** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 31, i32 1
  %40 = load i64*, i64** %39, align 8
  %41 = icmp eq i64* %38, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  %43 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %29) #13
  br label %44

44:                                               ; preds = %42, %36
  %45 = phi i64* [ %43, %42 ], [ %38, %36 ]
  %46 = ptrtoint i64* %45 to i64
  %47 = add i64 %46, 8
  %48 = inttoptr i64 %47 to i64*
  store i64* %48, i64** %37, align 8
  store i64 %27, i64* %45, align 8
  br label %49

49:                                               ; preds = %33, %44
  %50 = phi i64 [ %35, %33 ], [ %27, %44 ]
  %51 = phi i64* [ %34, %33 ], [ %45, %44 ]
  %52 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #13
  %53 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %50, i64* %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %5, i64 0, i32 0
  %55 = call zeroext i1 @_ZNK2v88internal9DebugInfo15CanBreakAtEntryEv(%"class.v8::internal::DebugInfo"* nonnull %54) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #13
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = bitcast %"class.v8::internal::BreakIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %57) #13
  call void @_ZN2v88internal13BreakIteratorC2ENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::BreakIterator"* nonnull %6, i64* %51) #13
  call void @_ZN2v88internal13BreakIterator14SkipToPositionEi(%"class.v8::internal::BreakIterator"* nonnull %6, i32 %1) #13
  %58 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 2
  %59 = load i32, i32* %58, align 4
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %57) #13
  br label %60

60:                                               ; preds = %49, %56
  %61 = phi i32 [ %59, %56 ], [ 0, %49 ]
  %62 = icmp eq i32 %61, %1
  br i1 %62, label %160, label %63

63:                                               ; preds = %60
  %64 = bitcast %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #13
  %65 = load i64, i64* %3, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %10, i64 0, i32 0
  %68 = call i32 @_ZNK2v88internal18SharedFunctionInfo13StartPositionEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %67) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #13
  %69 = bitcast %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #13
  %70 = load i64, i64* %3, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %11, i64 0, i32 0
  %73 = call i32 @_ZNK2v88internal18SharedFunctionInfo11EndPositionEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %72) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #13
  %74 = icmp eq i32 %68, %73
  br i1 %74, label %160, label %75

75:                                               ; preds = %63
  %76 = icmp eq i32 %61, 0
  %77 = select i1 %76, i32 %73, i32 %61
  %78 = bitcast %"class.std::__1::vector.1542"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 0, i64 24, i1 false) #13
  %79 = call zeroext i1 @_ZN2v88internal5Debug40FindSharedFunctionInfosIntersectingRangeENS0_6HandleINS0_6ScriptEEEiiPNSt3__16vectorINS2_INS0_18SharedFunctionInfoEEENS5_9allocatorIS8_EEEE(%"class.v8::internal::Debug"* %0, i64* %2, i32 %1, i32 %77, %"class.std::__1::vector.1542"* nonnull %12)
  br i1 %79, label %80, label %149

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.std::__1::vector.1542", %"class.std::__1::vector.1542"* %12, i64 0, i32 0, i32 0
  %82 = load %"class.v8::internal::Handle.769"*, %"class.v8::internal::Handle.769"** %81, align 8
  %83 = getelementptr inbounds %"class.std::__1::vector.1542", %"class.std::__1::vector.1542"* %12, i64 0, i32 0, i32 1
  %84 = load %"class.v8::internal::Handle.769"*, %"class.v8::internal::Handle.769"** %83, align 8
  %85 = icmp eq %"class.v8::internal::Handle.769"* %82, %84
  br i1 %85, label %149, label %86

86:                                               ; preds = %80
  %87 = bitcast %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %13 to i8*
  %88 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %13, i64 0, i32 0
  %90 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %7 to i8*
  %91 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %7, i64 0, i32 0
  %93 = bitcast %"class.v8::internal::BreakIterator"* %8 to i8*
  %94 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %8, i64 0, i32 2
  br label %95

95:                                               ; preds = %138, %86
  %96 = phi i32 [ %77, %86 ], [ %144, %138 ]
  %97 = phi i64* [ %3, %86 ], [ %143, %138 ]
  %98 = phi %"class.v8::internal::Handle.769"* [ %82, %86 ], [ %146, %138 ]
  %99 = getelementptr inbounds %"class.v8::internal::Handle.769", %"class.v8::internal::Handle.769"* %98, i64 0, i32 0, i32 0
  %100 = load i64*, i64** %99, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #13
  %101 = load i64, i64* %100, align 8
  store i64 %101, i64* %88, align 8
  %102 = call zeroext i1 @_ZNK2v88internal18SharedFunctionInfo12HasBreakInfoEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %89) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #13
  br i1 %102, label %104, label %103, !prof !3

103:                                              ; preds = %95
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0)) #16
  unreachable

104:                                              ; preds = %95
  %105 = load i64, i64* %100, align 8
  %106 = and i64 %105, -4294967296
  %107 = add i64 %105, 15
  %108 = inttoptr i64 %107 to i32*
  %109 = load atomic i32, i32* %108 acquire, align 4
  %110 = zext i32 %109 to i64
  %111 = or i64 %106, %110
  %112 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %112, i64 0, i32 31, i32 4
  %114 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %113, align 8
  %115 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %114, null
  br i1 %115, label %119, label %116

116:                                              ; preds = %104
  %117 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %114, i64 %111) #13
  %118 = load i64, i64* %117, align 8
  br label %132

119:                                              ; preds = %104
  %120 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %112, i64 0, i32 31, i32 0
  %121 = load i64*, i64** %120, align 8
  %122 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %112, i64 0, i32 31, i32 1
  %123 = load i64*, i64** %122, align 8
  %124 = icmp eq i64* %121, %123
  br i1 %124, label %125, label %127

125:                                              ; preds = %119
  %126 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %112) #13
  br label %127

127:                                              ; preds = %125, %119
  %128 = phi i64* [ %126, %125 ], [ %121, %119 ]
  %129 = ptrtoint i64* %128 to i64
  %130 = add i64 %129, 8
  %131 = inttoptr i64 %130 to i64*
  store i64* %131, i64** %120, align 8
  store i64 %111, i64* %128, align 8
  br label %132

132:                                              ; preds = %116, %127
  %133 = phi i64 [ %118, %116 ], [ %111, %127 ]
  %134 = phi i64* [ %117, %116 ], [ %128, %127 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #13
  store i64 %133, i64* %91, align 8
  %135 = call zeroext i1 @_ZNK2v88internal9DebugInfo15CanBreakAtEntryEv(%"class.v8::internal::DebugInfo"* nonnull %92) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #13
  br i1 %135, label %138, label %136

136:                                              ; preds = %132
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %93) #13
  call void @_ZN2v88internal13BreakIteratorC2ENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::BreakIterator"* nonnull %8, i64* %134) #13
  call void @_ZN2v88internal13BreakIterator14SkipToPositionEi(%"class.v8::internal::BreakIterator"* nonnull %8, i32 %1) #13
  %137 = load i32, i32* %94, align 4
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %93) #13
  br label %138

138:                                              ; preds = %132, %136
  %139 = phi i32 [ %137, %136 ], [ 0, %132 ]
  %140 = icmp sge i32 %139, %1
  %141 = icmp slt i32 %139, %96
  %142 = and i1 %140, %141
  %143 = select i1 %142, i64* %100, i64* %97
  %144 = select i1 %142, i32 %139, i32 %96
  %145 = icmp eq i32 %144, %1
  %146 = getelementptr inbounds %"class.v8::internal::Handle.769", %"class.v8::internal::Handle.769"* %98, i64 1
  %147 = icmp eq %"class.v8::internal::Handle.769"* %146, %84
  %148 = or i1 %145, %147
  br i1 %148, label %149, label %95

149:                                              ; preds = %138, %80, %75
  %150 = phi i64* [ %3, %75 ], [ %3, %80 ], [ %143, %138 ]
  %151 = getelementptr inbounds %"class.std::__1::vector.1542", %"class.std::__1::vector.1542"* %12, i64 0, i32 0, i32 0
  %152 = load %"class.v8::internal::Handle.769"*, %"class.v8::internal::Handle.769"** %151, align 8
  %153 = icmp eq %"class.v8::internal::Handle.769"* %152, null
  br i1 %153, label %159, label %154

154:                                              ; preds = %149
  %155 = ptrtoint %"class.v8::internal::Handle.769"* %152 to i64
  %156 = getelementptr inbounds %"class.std::__1::vector.1542", %"class.std::__1::vector.1542"* %12, i64 0, i32 0, i32 1
  %157 = bitcast %"class.v8::internal::Handle.769"** %156 to i64*
  store i64 %155, i64* %157, align 8
  %158 = bitcast %"class.v8::internal::Handle.769"* %152 to i8*
  call void @_ZdlPv(i8* %158) #17
  br label %159

159:                                              ; preds = %149, %154
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #13
  br label %160

160:                                              ; preds = %63, %159, %60
  %161 = phi i64* [ %3, %60 ], [ %150, %159 ], [ %3, %63 ]
  ret i64* %161
}

declare void @_ZN2v88internal9DebugInfo15SetBreakAtEntryEv(%"class.v8::internal::DebugInfo"*) local_unnamed_addr #3

declare i32 @_ZN2v88internal14BreakPointInfo18GetBreakPointCountEPNS0_7IsolateE(%"class.v8::internal::BreakPointInfo"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare void @_ZN2v88internal9DebugInfo21SetDebugExecutionModeENS1_13ExecutionModeE(%"class.v8::internal::DebugInfo"*, i8 zeroext) local_unnamed_addr #3

declare void @_ZN2v88internal9DebugInfo17ClearBreakAtEntryEv(%"class.v8::internal::DebugInfo"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v88internal9DebugInfo12HasBreakInfoEv(%"class.v8::internal::DebugInfo"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug15ClearBreakPointENS0_6HandleINS0_10BreakPointEEE(%"class.v8::internal::Debug"* nocapture, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %4 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %5 = alloca %"class.v8::internal::DebugInfoListNode"*, align 8
  %6 = alloca %"class.v8::internal::DebugInfoListNode"*, align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %8 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %9 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %10 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31
  %12 = bitcast %"struct.v8::internal::HandleScopeData"* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 1
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %16, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 10
  %20 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %19, align 8
  %21 = icmp eq %"class.v8::internal::DebugInfoListNode"* %20, null
  br i1 %21, label %75, label %22

22:                                               ; preds = %2
  %23 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %7 to i8*
  %24 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %7, i64 0, i32 0
  br label %26

26:                                               ; preds = %22, %71
  %27 = phi %"class.v8::internal::DebugInfoListNode"* [ %20, %22 ], [ %73, %71 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  %28 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %27, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %24, align 8
  %31 = call zeroext i1 @_ZNK2v88internal9DebugInfo12HasBreakInfoEv(%"class.v8::internal::DebugInfo"* nonnull %25) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br i1 %31, label %32, label %71

32:                                               ; preds = %26
  %33 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %34 = load i64*, i64** %28, align 8
  %35 = call i64* @_ZN2v88internal9DebugInfo18FindBreakPointInfoEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_10BreakPointEEE(%"class.v8::internal::Isolate"* %33, i64* %34, i64* %1) #13
  %36 = load i64, i64* %35, align 8
  %37 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %37, i64 0, i32 0, i32 7, i32 0, i64 4
  %39 = load i64, i64* %38, align 8
  %40 = trunc i64 %36 to i32
  %41 = trunc i64 %39 to i32
  %42 = icmp eq i32 %40, %41
  br i1 %42, label %71, label %43

43:                                               ; preds = %32
  %44 = load i64*, i64** %28, align 8
  %45 = call zeroext i1 @_ZN2v88internal9DebugInfo15ClearBreakPointEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_10BreakPointEEE(%"class.v8::internal::Isolate"* %37, i64* %44, i64* %1) #13
  br i1 %45, label %46, label %71

46:                                               ; preds = %43
  call void @_ZN2v88internal5Debug16ClearBreakPointsENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* undef, i64* %44)
  %47 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #13
  %48 = load i64, i64* %44, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %8, i64 0, i32 0
  %51 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %52 = call i32 @_ZN2v88internal9DebugInfo18GetBreakPointCountEPNS0_7IsolateE(%"class.v8::internal::DebugInfo"* nonnull %50, %"class.v8::internal::Isolate"* %51) #13
  %53 = icmp eq i32 %52, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #13
  br i1 %53, label %54, label %70

54:                                               ; preds = %46
  %55 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #13
  %56 = load i64, i64* %44, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3, i64 0, i32 0
  %59 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  call void @_ZN2v88internal9DebugInfo14ClearBreakInfoEPNS0_7IsolateE(%"class.v8::internal::DebugInfo"* nonnull %58, %"class.v8::internal::Isolate"* %59) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #13
  %60 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #13
  %61 = load i64, i64* %44, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4, i64 0, i32 0
  %64 = call zeroext i1 @_ZNK2v88internal9DebugInfo7IsEmptyEv(%"class.v8::internal::DebugInfo"* nonnull %63) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #13
  br i1 %64, label %65, label %75

65:                                               ; preds = %54
  %66 = bitcast %"class.v8::internal::DebugInfoListNode"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #13
  %67 = bitcast %"class.v8::internal::DebugInfoListNode"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #13
  call void @_ZN2v88internal5Debug13FindDebugInfoENS0_6HandleINS0_9DebugInfoEEEPPNS0_17DebugInfoListNodeES7_(%"class.v8::internal::Debug"* %0, i64* %44, %"class.v8::internal::DebugInfoListNode"** nonnull %5, %"class.v8::internal::DebugInfoListNode"** nonnull %6) #13
  %68 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %5, align 8
  %69 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %6, align 8
  call void @_ZN2v88internal5Debug21FreeDebugInfoListNodeEPNS0_17DebugInfoListNodeES3_(%"class.v8::internal::Debug"* %0, %"class.v8::internal::DebugInfoListNode"* %68, %"class.v8::internal::DebugInfoListNode"* %69) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #13
  br label %75

70:                                               ; preds = %46
  call void @_ZN2v88internal5Debug16ApplyBreakPointsENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* %0, i64* %44)
  br label %75

71:                                               ; preds = %32, %43, %26
  %72 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %27, i64 0, i32 1
  %73 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %72, align 8
  %74 = icmp eq %"class.v8::internal::DebugInfoListNode"* %73, null
  br i1 %74, label %75, label %26

75:                                               ; preds = %71, %2, %65, %54, %70
  %76 = icmp eq %"class.v8::internal::Isolate"* %10, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %75
  %78 = inttoptr i64 %13 to i64*
  %79 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %11, i64 0, i32 0
  %80 = load i64*, i64** %79, align 8
  store i64 %13, i64* %12, align 8
  %81 = load i32, i32* %16, align 8
  %82 = add nsw i32 %81, -1
  store i32 %82, i32* %16, align 8
  %83 = load i64*, i64** %14, align 8
  %84 = icmp eq i64* %83, %15
  br i1 %84, label %87, label %85

85:                                               ; preds = %77
  store i64* %15, i64** %14, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %10) #13
  %86 = load i64*, i64** %79, align 8
  br label %87

87:                                               ; preds = %85, %77
  %88 = phi i64* [ %86, %85 ], [ %78, %77 ]
  %89 = phi i64* [ %15, %85 ], [ %80, %77 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %88, i64* %89) #13
  br label %90

90:                                               ; preds = %75, %87
  ret void
}

declare i64* @_ZN2v88internal9DebugInfo18FindBreakPointInfoEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_10BreakPointEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal9DebugInfo15ClearBreakPointEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_10BreakPointEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #3

declare i32 @_ZN2v88internal9DebugInfo18GetBreakPointCountEPNS0_7IsolateE(%"class.v8::internal::DebugInfo"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug27RemoveBreakInfoAndMaybeFreeENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* nocapture, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %4 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %5 = alloca %"class.v8::internal::DebugInfoListNode"*, align 8
  %6 = alloca %"class.v8::internal::DebugInfoListNode"*, align 8
  %7 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = load i64, i64* %1, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3, i64 0, i32 0
  %11 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  call void @_ZN2v88internal9DebugInfo14ClearBreakInfoEPNS0_7IsolateE(%"class.v8::internal::DebugInfo"* nonnull %10, %"class.v8::internal::Isolate"* %12) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  %13 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #13
  %14 = load i64, i64* %1, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4, i64 0, i32 0
  %17 = call zeroext i1 @_ZNK2v88internal9DebugInfo7IsEmptyEv(%"class.v8::internal::DebugInfo"* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #13
  br i1 %17, label %18, label %23

18:                                               ; preds = %2
  %19 = bitcast %"class.v8::internal::DebugInfoListNode"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  %20 = bitcast %"class.v8::internal::DebugInfoListNode"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN2v88internal5Debug13FindDebugInfoENS0_6HandleINS0_9DebugInfoEEEPPNS0_17DebugInfoListNodeES7_(%"class.v8::internal::Debug"* %0, i64* %1, %"class.v8::internal::DebugInfoListNode"** nonnull %5, %"class.v8::internal::DebugInfoListNode"** nonnull %6)
  %21 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %5, align 8
  %22 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %6, align 8
  call void @_ZN2v88internal5Debug21FreeDebugInfoListNodeEPNS0_17DebugInfoListNodeES3_(%"class.v8::internal::Debug"* %0, %"class.v8::internal::DebugInfoListNode"* %21, %"class.v8::internal::DebugInfoListNode"* %22)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  br label %23

23:                                               ; preds = %18, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal5Debug22GetFunctionDebuggingIdENS0_6HandleINS0_10JSFunctionEEE(%"class.v8::internal::Debug"* nocapture, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = add i64 %3, 11
  %5 = inttoptr i64 %4 to i32*
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = and i64 %3, -4294967296
  %8 = zext i32 %6 to i64
  %9 = or i64 %7, %8
  %10 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 4
  %13 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %12, align 8
  %14 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %2
  %16 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %13, i64 %9) #13
  br label %30

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = icmp eq i64* %19, %21
  br i1 %22, label %23, label %25

23:                                               ; preds = %17
  %24 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %11) #13
  br label %25

25:                                               ; preds = %23, %17
  %26 = phi i64* [ %24, %23 ], [ %19, %17 ]
  %27 = ptrtoint i64* %26 to i64
  %28 = add i64 %27, 8
  %29 = inttoptr i64 %28 to i64*
  store i64* %29, i64** %18, align 8
  store i64 %9, i64* %26, align 8
  br label %30

30:                                               ; preds = %15, %25
  %31 = phi i64* [ %16, %15 ], [ %26, %25 ]
  %32 = tail call i64* @_ZN2v88internal5Debug20GetOrCreateDebugInfoENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %31)
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = lshr i32 %36, 5
  %38 = and i32 %37, 1048575
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %62

40:                                               ; preds = %30
  %41 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %41, i64 0, i32 2
  %43 = ptrtoint %"class.v8::internal::Heap"* %42 to i64
  %44 = add i64 %43, -41416
  %45 = inttoptr i64 %44 to %"class.v8::internal::Isolate"*
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %45, i64 0, i32 0, i32 7, i32 0, i64 664
  %47 = load i64, i64* %46, align 8
  %48 = trunc i64 %47 to i32
  %49 = ashr i32 %48, 1
  %50 = icmp eq i32 %49, 1048575
  %51 = add nsw i32 %49, 1
  %52 = select i1 %50, i32 1, i32 %51
  %53 = sext i32 %52 to i64
  %54 = shl nsw i64 %53, 1
  store i64 %54, i64* %46, align 8
  %55 = load i64, i64* %32, align 8
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = and i32 %58, -33554402
  %60 = shl i32 %52, 5
  %61 = or i32 %60, %59
  store atomic volatile i32 %61, i32* %57 monotonic, align 4
  br label %62

62:                                               ; preds = %40, %30
  %63 = phi i32 [ %52, %40 ], [ %38, %30 ]
  ret i32 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal5Debug20GetOrCreateDebugInfoENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* nocapture, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 15
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 acquire, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %4, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = icmp eq i16 %17, 100
  br i1 %18, label %19, label %47

19:                                               ; preds = %2
  %20 = load i64, i64* %1, align 8
  %21 = and i64 %20, -4294967296
  %22 = add i64 %20, 15
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 acquire, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %21, %25
  %27 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %28 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %28, i64 0, i32 31, i32 4
  %30 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %29, align 8
  %31 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %19
  %33 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %30, i64 %26) #13
  br label %66

34:                                               ; preds = %19
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %28, i64 0, i32 31, i32 0
  %36 = load i64*, i64** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %28, i64 0, i32 31, i32 1
  %38 = load i64*, i64** %37, align 8
  %39 = icmp eq i64* %36, %38
  br i1 %39, label %40, label %42

40:                                               ; preds = %34
  %41 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %28) #13
  br label %42

42:                                               ; preds = %40, %34
  %43 = phi i64* [ %41, %40 ], [ %36, %34 ]
  %44 = ptrtoint i64* %43 to i64
  %45 = add i64 %44, 8
  %46 = inttoptr i64 %45 to i64*
  store i64* %46, i64** %35, align 8
  store i64 %26, i64* %43, align 8
  br label %66

47:                                               ; preds = %2
  %48 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %49 = bitcast %"class.v8::internal::Isolate"** %48 to %"class.v8::internal::Factory"**
  %50 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %49, align 8
  %51 = tail call i64* @_ZN2v88internal7Factory12NewDebugInfoENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Factory"* %50, i64* %1) #13
  %52 = tail call i8* @_Znwm(i64 16) #17
  %53 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %48, align 8
  %54 = load i64, i64* %51, align 8
  %55 = getelementptr inbounds i8, i8* %52, i64 8
  %56 = bitcast i8* %55 to %"class.v8::internal::DebugInfoListNode"**
  store %"class.v8::internal::DebugInfoListNode"* null, %"class.v8::internal::DebugInfoListNode"** %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %53, i64 0, i32 36
  %58 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %57, align 8
  %59 = tail call i64* @_ZN2v88internal13GlobalHandles6CreateENS0_6ObjectE(%"class.v8::internal::GlobalHandles"* %58, i64 %54) #13
  %60 = bitcast i8* %52 to i64**
  store i64* %59, i64** %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 10
  %62 = bitcast %"class.v8::internal::DebugInfoListNode"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast i8* %55 to i64*
  store i64 %63, i64* %64, align 8
  %65 = bitcast %"class.v8::internal::DebugInfoListNode"** %61 to i8**
  store i8* %52, i8** %65, align 8
  br label %66

66:                                               ; preds = %42, %32, %47
  %67 = phi i64* [ %51, %47 ], [ %33, %32 ], [ %43, %42 ]
  ret i64* %67
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal5Debug24SetBreakpointForFunctionENS0_6HandleINS0_18SharedFunctionInfoEEENS2_INS0_6StringEEEPi(%"class.v8::internal::Debug"* nocapture, i64*, i64*, i32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", align 8
  %8 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 12
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, 1
  store i32 %10, i32* %8, align 8
  store i32 %10, i32* %3, align 4
  %11 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %12 = bitcast %"class.v8::internal::Isolate"** %11 to %"class.v8::internal::Factory"**
  %13 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %12, align 8
  %14 = tail call i64* @_ZN2v88internal7Factory13NewBreakPointEiNS0_6HandleINS0_6StringEEE(%"class.v8::internal::Factory"* %13, i32 %10, i64* %2) #13
  %15 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #13
  store i32 0, i32* %5, align 4
  %16 = load i64, i64* %1, align 8
  %17 = and i64 %16, -4294967296
  %18 = add i64 %16, 3
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 acquire, align 4
  %21 = zext i32 %20 to i64
  %22 = and i64 %21, 1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %111, label %24

24:                                               ; preds = %4
  %25 = or i64 %17, %21
  %26 = add i64 %25, -1
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %17, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = icmp eq i16 %33, 73
  br i1 %34, label %35, label %111

35:                                               ; preds = %24
  %36 = bitcast %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  %37 = load i64, i64* %1, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %6, i64 0, i32 0
  %40 = call i64 @_ZNK2v88internal18SharedFunctionInfo27wasm_exported_function_dataEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %39) #13
  %41 = add i64 %40, 23
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = ashr i32 %43, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  %45 = bitcast %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #13
  %46 = load i64, i64* %1, align 8
  %47 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %7, i64 0, i32 0
  %49 = call i64 @_ZNK2v88internal18SharedFunctionInfo27wasm_exported_function_dataEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %48) #13
  %50 = and i64 %49, -4294967296
  %51 = add i64 %49, 19
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i64
  %55 = or i64 %50, %54
  %56 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %56, i64 0, i32 31, i32 4
  %58 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %57, align 8
  %59 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %35
  %61 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %58, i64 %55) #13
  br label %75

62:                                               ; preds = %35
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %56, i64 0, i32 31, i32 0
  %64 = load i64*, i64** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %56, i64 0, i32 31, i32 1
  %66 = load i64*, i64** %65, align 8
  %67 = icmp eq i64* %64, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %62
  %69 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %56) #13
  br label %70

70:                                               ; preds = %68, %62
  %71 = phi i64* [ %69, %68 ], [ %64, %62 ]
  %72 = ptrtoint i64* %71 to i64
  %73 = add i64 %72, 8
  %74 = inttoptr i64 %73 to i64*
  store i64* %74, i64** %63, align 8
  store i64 %55, i64* %71, align 8
  br label %75

75:                                               ; preds = %60, %70
  %76 = phi i64* [ %61, %60 ], [ %71, %70 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #13
  %77 = load i64, i64* %76, align 8
  %78 = and i64 %77, -4294967296
  %79 = add i64 %77, 111
  %80 = inttoptr i64 %79 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = or i64 %78, %82
  %84 = add i64 %83, 19
  %85 = inttoptr i64 %84 to i32*
  %86 = load i32, i32* %85, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %78, %87
  %89 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %90 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %89, i64 0, i32 31, i32 4
  %91 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %90, align 8
  %92 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %91, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %75
  %94 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %91, i64 %88) #13
  br label %108

95:                                               ; preds = %75
  %96 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %89, i64 0, i32 31, i32 0
  %97 = load i64*, i64** %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %89, i64 0, i32 31, i32 1
  %99 = load i64*, i64** %98, align 8
  %100 = icmp eq i64* %97, %99
  br i1 %100, label %101, label %103

101:                                              ; preds = %95
  %102 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %89) #13
  br label %103

103:                                              ; preds = %101, %95
  %104 = phi i64* [ %102, %101 ], [ %97, %95 ]
  %105 = ptrtoint i64* %104 to i64
  %106 = add i64 %105, 8
  %107 = inttoptr i64 %106 to i64*
  store i64* %107, i64** %96, align 8
  store i64 %88, i64* %104, align 8
  br label %108

108:                                              ; preds = %93, %103
  %109 = phi i64* [ %94, %93 ], [ %104, %103 ]
  %110 = call zeroext i1 @_ZN2v88internal10WasmScript40SetBreakPointOnFirstBreakableForFunctionENS0_6HandleINS0_6ScriptEEEiNS2_INS0_10BreakPointEEE(i64* %109, i32 %44, i64* %14) #13
  br label %113

111:                                              ; preds = %4, %24
  %112 = call zeroext i1 @_ZN2v88internal5Debug13SetBreakpointENS0_6HandleINS0_18SharedFunctionInfoEEENS2_INS0_10BreakPointEEEPi(%"class.v8::internal::Debug"* %0, i64* %1, i64* %14, i32* nonnull %5)
  br label %113

113:                                              ; preds = %111, %108
  %114 = phi i1 [ %110, %108 ], [ %112, %111 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #13
  ret i1 %114
}

declare i64 @_ZNK2v88internal18SharedFunctionInfo27wasm_exported_function_dataEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal10WasmScript40SetBreakPointOnFirstBreakableForFunctionENS0_6HandleINS0_6ScriptEEEiNS2_INS0_10BreakPointEEE(i64*, i32, i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug16RemoveBreakpointEi(%"class.v8::internal::Debug"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %4 = bitcast %"class.v8::internal::Isolate"** %3 to %"class.v8::internal::Factory"**
  %5 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %5, i64 200
  %7 = bitcast %"class.v8::internal::Factory"* %6 to i64*
  %8 = tail call i64* @_ZN2v88internal7Factory13NewBreakPointEiNS0_6HandleINS0_6StringEEE(%"class.v8::internal::Factory"* %5, i32 %1, i64* %7) #13
  tail call void @_ZN2v88internal5Debug15ClearBreakPointENS0_6HandleINS0_10BreakPointEEE(%"class.v8::internal::Debug"* %0, i64* %8)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug29RemoveBreakpointForWasmScriptENS0_6HandleINS0_6ScriptEEEi(%"class.v8::internal::Debug"* nocapture readnone, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = add i64 %4, 23
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, -2
  %9 = icmp eq i32 %8, 6
  br i1 %9, label %10, label %12

10:                                               ; preds = %3
  %11 = tail call zeroext i1 @_ZN2v88internal10WasmScript19ClearBreakPointByIdENS0_6HandleINS0_6ScriptEEEi(i64* %1, i32 %2) #13
  br label %12

12:                                               ; preds = %10, %3
  ret void
}

declare zeroext i1 @_ZN2v88internal10WasmScript19ClearBreakPointByIdENS0_6HandleINS0_6ScriptEEEi(i64*, i32) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory16NewWeakArrayListEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i32, i8 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal13WeakArrayList6AppendEPNS0_7IsolateENS0_6HandleIS1_EERKNS0_17MaybeObjectHandleENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::MaybeObjectHandle"* dereferenceable(16), i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug18ClearAllDebugInfosERKNSt3__18functionIFvNS0_6HandleINS0_9DebugInfoEEEEEE(%"class.v8::internal::Debug"* nocapture, %"class.std::__1::function"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle.1211", align 8
  %4 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %5 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 10
  %6 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %5, align 8
  %7 = icmp eq %"class.v8::internal::DebugInfoListNode"* %6, null
  br i1 %7, label %30, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.v8::internal::Handle.1211"* %3 to i8*
  %10 = getelementptr inbounds %"class.v8::internal::Handle.1211", %"class.v8::internal::Handle.1211"* %3, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 0
  %13 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4 to i8*
  %14 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4, i64 0, i32 0
  br label %16

16:                                               ; preds = %8, %27
  %17 = phi %"class.v8::internal::DebugInfoListNode"* [ null, %8 ], [ %28, %27 ]
  %18 = phi %"class.v8::internal::DebugInfoListNode"* [ %6, %8 ], [ %20, %27 ]
  %19 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %18, i64 0, i32 1
  %20 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %18, i64 0, i32 0
  %22 = load i64*, i64** %21, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  store i64* %22, i64** %10, align 8
  %23 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1211"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1211"*)** %11, align 8
  call void %23(%"union.std::__1::__function::__policy_storage"* %12, %"class.v8::internal::Handle.1211"* nonnull dereferenceable(8) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #13
  %24 = load i64, i64* %22, align 8
  store i64 %24, i64* %14, align 8
  %25 = call zeroext i1 @_ZNK2v88internal9DebugInfo7IsEmptyEv(%"class.v8::internal::DebugInfo"* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #13
  br i1 %25, label %26, label %27

26:                                               ; preds = %16
  call void @_ZN2v88internal5Debug21FreeDebugInfoListNodeEPNS0_17DebugInfoListNodeES3_(%"class.v8::internal::Debug"* %0, %"class.v8::internal::DebugInfoListNode"* %17, %"class.v8::internal::DebugInfoListNode"* nonnull %18)
  br label %27

27:                                               ; preds = %16, %26
  %28 = phi %"class.v8::internal::DebugInfoListNode"* [ %17, %26 ], [ %18, %16 ]
  %29 = icmp eq %"class.v8::internal::DebugInfoListNode"* %20, null
  br i1 %29, label %30, label %16

30:                                               ; preds = %27, %2
  ret void
}

declare void @_ZN2v88internal10WasmScript19ClearAllBreakpointsENS0_6ScriptE(i64) local_unnamed_addr #3

declare %"class.v8::internal::wasm::DebugInfo"* @_ZN2v88internal4wasm12NativeModule12GetDebugInfoEv(%"class.v8::internal::wasm::NativeModule"*) local_unnamed_addr #3

declare void @_ZN2v88internal4wasm9DebugInfo13RemoveIsolateEPNS0_7IsolateE(%"class.v8::internal::wasm::DebugInfo"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug16FloodWithOneShotENS0_6HandleINS0_18SharedFunctionInfoEEEb(%"class.v8::internal::Debug"*, i64*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::BreakIterator", align 8
  %5 = alloca %"class.v8::internal::BreakLocation", align 8
  %6 = tail call zeroext i1 @_ZN2v88internal5Debug12IsBlackboxedENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %1)
  br i1 %6, label %119, label %7

7:                                                ; preds = %3
  %8 = tail call zeroext i1 @_ZN2v88internal5Debug15EnsureBreakInfoENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %1)
  br i1 %8, label %9, label %119

9:                                                ; preds = %7
  tail call void @_ZN2v88internal5Debug32PrepareFunctionForDebugExecutionENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %1)
  %10 = load i64, i64* %1, align 8
  %11 = and i64 %10, -4294967296
  %12 = add i64 %10, 15
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 acquire, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %18 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 31, i32 4
  %20 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %19, align 8
  %21 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %9
  %23 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %20, i64 %16) #13
  br label %37

24:                                               ; preds = %9
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 31, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 31, i32 1
  %28 = load i64*, i64** %27, align 8
  %29 = icmp eq i64* %26, %28
  br i1 %29, label %30, label %32

30:                                               ; preds = %24
  %31 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %18) #13
  br label %32

32:                                               ; preds = %30, %24
  %33 = phi i64* [ %31, %30 ], [ %26, %24 ]
  %34 = ptrtoint i64* %33 to i64
  %35 = add i64 %34, 8
  %36 = inttoptr i64 %35 to i64*
  store i64* %36, i64** %25, align 8
  store i64 %16, i64* %33, align 8
  br label %37

37:                                               ; preds = %22, %32
  %38 = phi i64* [ %23, %22 ], [ %33, %32 ]
  %39 = bitcast %"class.v8::internal::BreakIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %39) #13
  call void @_ZN2v88internal13BreakIteratorC2ENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::BreakIterator"* nonnull %4, i64* %38)
  %40 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %4, i64 0, i32 4, i32 2
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, -1
  br i1 %42, label %87, label %43

43:                                               ; preds = %37
  %44 = bitcast %"class.v8::internal::BreakLocation"* %5 to i8*
  %45 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %5, i64 0, i32 2
  %46 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %4, i64 0, i32 1
  %47 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %4, i64 0, i32 4
  %48 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %4, i64 0, i32 4, i32 4, i32 2
  %49 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %4, i64 0, i32 2
  %50 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %4, i64 0, i32 4, i32 4, i32 3
  %51 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %4, i64 0, i32 3
  br i1 %2, label %52, label %88

52:                                               ; preds = %43, %82
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #13
  call void @_ZN2v88internal13BreakIterator16GetBreakLocationEv(%"class.v8::internal::BreakLocation"* nonnull sret %5, %"class.v8::internal::BreakIterator"* nonnull %4)
  %53 = load i32, i32* %45, align 4
  %54 = icmp sgt i32 %53, 3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #13
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZN2v88internal13BreakIterator13SetDebugBreakEv(%"class.v8::internal::BreakIterator"* nonnull %4)
  br label %56

56:                                               ; preds = %55, %52
  %57 = load i32, i32* %46, align 8
  %58 = icmp eq i32 %57, -1
  br label %59

59:                                               ; preds = %79, %56
  %60 = phi i1 [ %58, %56 ], [ false, %79 ]
  %61 = load i32, i32* %40, align 8
  %62 = icmp eq i32 %61, -1
  br i1 %62, label %63, label %66

63:                                               ; preds = %59
  %64 = load i32, i32* %46, align 8
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %46, align 8
  br label %87

66:                                               ; preds = %59
  br i1 %60, label %70, label %67

67:                                               ; preds = %66
  call void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"* %47) #13
  %68 = load i32, i32* %40, align 8
  %69 = icmp eq i32 %68, -1
  br i1 %69, label %87, label %70

70:                                               ; preds = %67, %66
  %71 = load i64, i64* %48, align 8
  %72 = lshr i64 %71, 1
  %73 = trunc i64 %72 to i32
  %74 = and i32 %73, 1073741823
  %75 = add nsw i32 %74, -1
  store i32 %75, i32* %49, align 4
  %76 = load i8, i8* %50, align 8, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %79, label %78

78:                                               ; preds = %70
  store i32 %75, i32* %51, align 8
  br label %79

79:                                               ; preds = %78, %70
  %80 = call i32 @_ZN2v88internal13BreakIterator17GetDebugBreakTypeEv(%"class.v8::internal::BreakIterator"* nonnull %4) #13
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %59, label %82

82:                                               ; preds = %79
  %83 = load i32, i32* %40, align 8
  %84 = load i32, i32* %46, align 8
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %46, align 8
  %86 = icmp eq i32 %83, -1
  br i1 %86, label %87, label %52

87:                                               ; preds = %114, %99, %82, %67, %95, %63, %37
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %39) #13
  br label %119

88:                                               ; preds = %43, %114
  call void @_ZN2v88internal13BreakIterator13SetDebugBreakEv(%"class.v8::internal::BreakIterator"* nonnull %4)
  %89 = load i32, i32* %46, align 8
  %90 = icmp eq i32 %89, -1
  br label %91

91:                                               ; preds = %111, %88
  %92 = phi i1 [ %90, %88 ], [ false, %111 ]
  %93 = load i32, i32* %40, align 8
  %94 = icmp eq i32 %93, -1
  br i1 %94, label %95, label %98

95:                                               ; preds = %91
  %96 = load i32, i32* %46, align 8
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %46, align 8
  br label %87

98:                                               ; preds = %91
  br i1 %92, label %102, label %99

99:                                               ; preds = %98
  call void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"* %47) #13
  %100 = load i32, i32* %40, align 8
  %101 = icmp eq i32 %100, -1
  br i1 %101, label %87, label %102

102:                                              ; preds = %99, %98
  %103 = load i64, i64* %48, align 8
  %104 = lshr i64 %103, 1
  %105 = trunc i64 %104 to i32
  %106 = and i32 %105, 1073741823
  %107 = add nsw i32 %106, -1
  store i32 %107, i32* %49, align 4
  %108 = load i8, i8* %50, align 8, !range !2
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %111, label %110

110:                                              ; preds = %102
  store i32 %107, i32* %51, align 8
  br label %111

111:                                              ; preds = %110, %102
  %112 = call i32 @_ZN2v88internal13BreakIterator17GetDebugBreakTypeEv(%"class.v8::internal::BreakIterator"* nonnull %4) #13
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %91, label %114

114:                                              ; preds = %111
  %115 = load i32, i32* %40, align 8
  %116 = load i32, i32* %46, align 8
  %117 = add nsw i32 %116, 1
  store i32 %117, i32* %46, align 8
  %118 = icmp eq i32 %115, -1
  br i1 %118, label %87, label %88

119:                                              ; preds = %7, %3, %87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal5Debug12IsBlackboxedENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Script", align 8
  %4 = alloca %"class.v8::debug::Location", align 8
  %5 = alloca %"struct.v8::internal::Script::PositionInfo", align 4
  %6 = alloca %"class.v8::debug::Location", align 8
  %7 = alloca %"struct.v8::internal::Script::PositionInfo", align 4
  %8 = alloca %"class.v8::internal::Script", align 8
  %9 = alloca %"class.v8::internal::PostponeInterruptsScope", align 8
  %10 = alloca %"class.v8::debug::Location", align 8
  %11 = alloca %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", align 8
  %12 = alloca [3 x i8], align 1
  %13 = alloca %"class.v8::debug::Location", align 8
  %14 = alloca %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", align 8
  %15 = alloca [3 x i8], align 1
  %16 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 0
  %17 = load %"class.v8::debug::DebugDelegate"*, %"class.v8::debug::DebugDelegate"** %16, align 8
  %18 = icmp eq %"class.v8::debug::DebugDelegate"* %17, null
  br i1 %18, label %19, label %93

19:                                               ; preds = %2
  %20 = load i64, i64* %1, align 8
  %21 = and i64 %20, -4294967296
  %22 = add i64 %20, 3
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 acquire, align 4
  %25 = zext i32 %24 to i64
  %26 = and i64 %25, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %39, label %28

28:                                               ; preds = %19
  %29 = or i64 %21, %25
  %30 = add i64 %29, -1
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %21, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = icmp eq i16 %37, 92
  br i1 %38, label %377, label %39

39:                                               ; preds = %28, %19
  %40 = add i64 %20, 15
  %41 = inttoptr i64 %40 to i32*
  %42 = load atomic i32, i32* %41 acquire, align 4
  %43 = zext i32 %42 to i64
  %44 = or i64 %21, %43
  %45 = add i64 %44, -1
  %46 = inttoptr i64 %45 to i32*
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %21, %48
  %50 = add i64 %49, 7
  %51 = inttoptr i64 %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = icmp eq i16 %52, 100
  br i1 %53, label %54, label %60

54:                                               ; preds = %39
  %55 = add i64 %44, 11
  %56 = inttoptr i64 %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  %59 = or i64 %21, %58
  br label %60

60:                                               ; preds = %54, %39
  %61 = phi i64 [ %59, %54 ], [ %44, %39 ]
  %62 = and i64 %61, 1
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %88, label %64

64:                                               ; preds = %60
  %65 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %66 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %65, null
  br i1 %66, label %73, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %65, i64 0, i32 0, i32 1
  %69 = load i8, i8* %68, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %73, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %65, i64 0, i32 1, i64 0
  br label %81

73:                                               ; preds = %67, %64
  %74 = and i64 %61, -262144
  %75 = or i64 %74, 16
  %76 = inttoptr i64 %75 to i64*
  %77 = load i64, i64* %76, align 16
  %78 = add i64 %77, -41416
  %79 = inttoptr i64 %78 to %"class.v8::internal::Isolate"*
  %80 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %79, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %81

81:                                               ; preds = %73, %71
  %82 = phi i64* [ %80, %73 ], [ %72, %71 ]
  %83 = getelementptr inbounds i64, i64* %82, i64 4
  %84 = load i64, i64* %83, align 8
  %85 = trunc i64 %61 to i32
  %86 = trunc i64 %84 to i32
  %87 = icmp eq i32 %85, %86
  br i1 %87, label %377, label %88

88:                                               ; preds = %81, %60
  %89 = bitcast %"class.v8::internal::Script"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #13
  %90 = getelementptr inbounds %"class.v8::internal::Script", %"class.v8::internal::Script"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %61, i64* %90, align 8
  %91 = call zeroext i1 @_ZNK2v88internal6Script16IsUserJavaScriptEv(%"class.v8::internal::Script"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #13
  %92 = xor i1 %91, true
  br label %377

93:                                               ; preds = %2
  %94 = tail call i64* @_ZN2v88internal5Debug20GetOrCreateDebugInfoENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %1)
  %95 = load i64, i64* %94, align 8
  %96 = add i64 %95, 7
  %97 = inttoptr i64 %96 to i32*
  %98 = load i32, i32* %97, align 4
  %99 = and i32 %98, 16
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %372

101:                                              ; preds = %93
  %102 = load i64, i64* %1, align 8
  %103 = and i64 %102, -4294967296
  %104 = add i64 %102, 3
  %105 = inttoptr i64 %104 to i32*
  %106 = load atomic i32, i32* %105 acquire, align 4
  %107 = zext i32 %106 to i64
  %108 = and i64 %107, 1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %121, label %110

110:                                              ; preds = %101
  %111 = or i64 %103, %107
  %112 = add i64 %111, -1
  %113 = inttoptr i64 %112 to i32*
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = zext i32 %114 to i64
  %116 = or i64 %103, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load atomic i16, i16* %118 monotonic, align 2
  %120 = icmp eq i16 %119, 92
  br i1 %120, label %355, label %121

121:                                              ; preds = %110, %101
  %122 = add i64 %102, 15
  %123 = inttoptr i64 %122 to i32*
  %124 = load atomic i32, i32* %123 acquire, align 4
  %125 = zext i32 %124 to i64
  %126 = or i64 %103, %125
  %127 = add i64 %126, -1
  %128 = inttoptr i64 %127 to i32*
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = zext i32 %129 to i64
  %131 = or i64 %103, %130
  %132 = add i64 %131, 7
  %133 = inttoptr i64 %132 to i16*
  %134 = load atomic i16, i16* %133 monotonic, align 2
  %135 = icmp eq i16 %134, 100
  br i1 %135, label %136, label %142

136:                                              ; preds = %121
  %137 = add i64 %126, 11
  %138 = inttoptr i64 %137 to i32*
  %139 = load i32, i32* %138, align 4
  %140 = zext i32 %139 to i64
  %141 = or i64 %103, %140
  br label %142

142:                                              ; preds = %136, %121
  %143 = phi i64 [ %141, %136 ], [ %126, %121 ]
  %144 = and i64 %143, 1
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %170, label %146

146:                                              ; preds = %142
  %147 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %148 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %147, null
  br i1 %148, label %155, label %149

149:                                              ; preds = %146
  %150 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %147, i64 0, i32 0, i32 1
  %151 = load i8, i8* %150, align 8, !range !2
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %155, label %153

153:                                              ; preds = %149
  %154 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %147, i64 0, i32 1, i64 0
  br label %163

155:                                              ; preds = %149, %146
  %156 = and i64 %143, -262144
  %157 = or i64 %156, 16
  %158 = inttoptr i64 %157 to i64*
  %159 = load i64, i64* %158, align 16
  %160 = add i64 %159, -41416
  %161 = inttoptr i64 %160 to %"class.v8::internal::Isolate"*
  %162 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %161, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %163

163:                                              ; preds = %155, %153
  %164 = phi i64* [ %162, %155 ], [ %154, %153 ]
  %165 = getelementptr inbounds i64, i64* %164, i64 4
  %166 = load i64, i64* %165, align 8
  %167 = trunc i64 %143 to i32
  %168 = trunc i64 %166 to i32
  %169 = icmp eq i32 %167, %168
  br i1 %169, label %355, label %170

170:                                              ; preds = %142, %163
  %171 = bitcast %"class.v8::internal::Script"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %171) #13
  %172 = getelementptr inbounds %"class.v8::internal::Script", %"class.v8::internal::Script"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %143, i64* %172, align 8
  %173 = call zeroext i1 @_ZNK2v88internal6Script16IsUserJavaScriptEv(%"class.v8::internal::Script"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %171) #13
  br i1 %173, label %174, label %355

174:                                              ; preds = %170
  %175 = load i64, i64* %1, align 8
  %176 = and i64 %175, -4294967296
  %177 = add i64 %175, 15
  %178 = inttoptr i64 %177 to i32*
  %179 = load atomic i32, i32* %178 acquire, align 4
  %180 = zext i32 %179 to i64
  %181 = or i64 %176, %180
  %182 = add i64 %181, -1
  %183 = inttoptr i64 %182 to i32*
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = zext i32 %184 to i64
  %186 = or i64 %176, %185
  %187 = add i64 %186, 7
  %188 = inttoptr i64 %187 to i16*
  %189 = load atomic i16, i16* %188 monotonic, align 2
  %190 = icmp eq i16 %189, 100
  br i1 %190, label %191, label %199

191:                                              ; preds = %174
  %192 = add i64 %181, 11
  %193 = inttoptr i64 %192 to i32*
  %194 = load i32, i32* %193, align 4
  %195 = zext i32 %194 to i64
  %196 = or i64 %176, %195
  %197 = add i64 %196, -1
  %198 = inttoptr i64 %197 to i32*
  br label %199

199:                                              ; preds = %191, %174
  %200 = phi i32* [ %198, %191 ], [ %183, %174 ]
  %201 = phi i64 [ %196, %191 ], [ %181, %174 ]
  %202 = and i64 %201, -4294967296
  %203 = load atomic i32, i32* %200 monotonic, align 4
  %204 = zext i32 %203 to i64
  %205 = or i64 %202, %204
  %206 = add i64 %205, 7
  %207 = inttoptr i64 %206 to i16*
  %208 = load atomic i16, i16* %207 monotonic, align 2
  %209 = icmp eq i16 %208, 112
  br i1 %209, label %210, label %355

210:                                              ; preds = %199
  %211 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 3
  %212 = load i8, i8* %211, align 2, !range !2
  store i8 1, i8* %211, align 2
  %213 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %214 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %213, align 8
  %215 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %214, i64 0, i32 31
  %216 = bitcast %"struct.v8::internal::HandleScopeData"* %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %214, i64 0, i32 31, i32 1
  %219 = load i64*, i64** %218, align 8
  %220 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %214, i64 0, i32 31, i32 2
  %221 = load i32, i32* %220, align 8
  %222 = add nsw i32 %221, 1
  store i32 %222, i32* %220, align 8
  %223 = bitcast %"class.v8::internal::PostponeInterruptsScope"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %223) #13
  %224 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %213, align 8
  %225 = getelementptr inbounds %"class.v8::internal::PostponeInterruptsScope", %"class.v8::internal::PostponeInterruptsScope"* %9, i64 0, i32 0
  call void @_ZN2v88internal15InterruptsScopeC2EPNS0_7IsolateElNS1_4ModeE(%"class.v8::internal::InterruptsScope"* nonnull %225, %"class.v8::internal::Isolate"* %224, i64 255, i32 0) #13
  %226 = getelementptr inbounds %"class.v8::internal::PostponeInterruptsScope", %"class.v8::internal::PostponeInterruptsScope"* %9, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal23PostponeInterruptsScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %226, align 8
  %227 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 5
  %228 = load i8, i8* %227, align 4, !range !2
  store i8 1, i8* %227, align 4
  %229 = load i64, i64* %1, align 8
  %230 = and i64 %229, -4294967296
  %231 = add i64 %229, 15
  %232 = inttoptr i64 %231 to i32*
  %233 = load atomic i32, i32* %232 acquire, align 4
  %234 = zext i32 %233 to i64
  %235 = or i64 %230, %234
  %236 = add i64 %235, -1
  %237 = inttoptr i64 %236 to i32*
  %238 = load atomic i32, i32* %237 monotonic, align 4
  %239 = zext i32 %238 to i64
  %240 = or i64 %230, %239
  %241 = add i64 %240, 7
  %242 = inttoptr i64 %241 to i16*
  %243 = load atomic i16, i16* %242 monotonic, align 2
  %244 = icmp eq i16 %243, 100
  br i1 %244, label %245, label %251

245:                                              ; preds = %210
  %246 = add i64 %235, 11
  %247 = inttoptr i64 %246 to i32*
  %248 = load i32, i32* %247, align 4
  %249 = zext i32 %248 to i64
  %250 = or i64 %230, %249
  br label %251

251:                                              ; preds = %210, %245
  %252 = phi i64 [ %250, %245 ], [ %235, %210 ]
  %253 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %213, align 8
  %254 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %253, i64 0, i32 31, i32 4
  %255 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %254, align 8
  %256 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %255, null
  br i1 %256, label %259, label %257

257:                                              ; preds = %251
  %258 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %255, i64 %252) #13
  br label %272

259:                                              ; preds = %251
  %260 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %253, i64 0, i32 31, i32 0
  %261 = load i64*, i64** %260, align 8
  %262 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %253, i64 0, i32 31, i32 1
  %263 = load i64*, i64** %262, align 8
  %264 = icmp eq i64* %261, %263
  br i1 %264, label %265, label %267

265:                                              ; preds = %259
  %266 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %253) #13
  br label %267

267:                                              ; preds = %265, %259
  %268 = phi i64* [ %266, %265 ], [ %261, %259 ]
  %269 = ptrtoint i64* %268 to i64
  %270 = add i64 %269, 8
  %271 = inttoptr i64 %270 to i64*
  store i64* %271, i64** %260, align 8
  store i64 %252, i64* %268, align 8
  br label %272

272:                                              ; preds = %257, %267
  %273 = phi i64* [ %258, %257 ], [ %268, %267 ]
  %274 = bitcast %"class.v8::debug::Location"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %274) #13
  %275 = bitcast %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %275) #13
  %276 = load i64, i64* %1, align 8
  %277 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %276, i64* %277, align 8
  %278 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %11, i64 0, i32 0
  %279 = call i32 @_ZNK2v88internal18SharedFunctionInfo13StartPositionEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %278) #13
  %280 = bitcast %"class.v8::debug::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %280)
  %281 = bitcast %"struct.v8::internal::Script::PositionInfo"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %281) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %281, i8 -1, i64 16, i1 false) #13
  %282 = call zeroext i1 @_ZN2v88internal6Script15GetPositionInfoENS0_6HandleIS1_EEiPNS1_12PositionInfoENS1_10OffsetFlagE(i64* %273, i32 %279, %"struct.v8::internal::Script::PositionInfo"* nonnull %5, i32 1) #13
  %283 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %5, i64 0, i32 0
  %284 = load i32, i32* %283, align 4
  %285 = icmp sgt i32 %284, 0
  %286 = select i1 %285, i32 %284, i32 0
  %287 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %5, i64 0, i32 1
  %288 = load i32, i32* %287, align 4
  %289 = icmp sgt i32 %288, 0
  %290 = select i1 %289, i32 %288, i32 0
  call void @_ZN2v85debug8LocationC1Eii(%"class.v8::debug::Location"* nonnull %4, i32 %286, i32 %290) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %281) #13
  %291 = bitcast %"class.v8::debug::Location"* %4 to i64*
  %292 = load i64, i64* %291, align 8
  %293 = getelementptr inbounds %"class.v8::debug::Location", %"class.v8::debug::Location"* %4, i64 0, i32 2
  %294 = load i8, i8* %293, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %280)
  %295 = bitcast %"class.v8::debug::Location"* %10 to i64*
  store i64 %292, i64* %295, align 8
  %296 = getelementptr inbounds %"class.v8::debug::Location", %"class.v8::debug::Location"* %10, i64 0, i32 2
  store i8 %294, i8* %296, align 8
  %297 = getelementptr inbounds %"class.v8::debug::Location", %"class.v8::debug::Location"* %10, i64 0, i32 3, i64 0
  %298 = getelementptr inbounds [3 x i8], [3 x i8]* %12, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %297, i8* nonnull align 1 %298, i64 3, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %275) #13
  %299 = bitcast %"class.v8::debug::Location"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %299) #13
  %300 = bitcast %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %300) #13
  %301 = load i64, i64* %1, align 8
  %302 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %301, i64* %302, align 8
  %303 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %14, i64 0, i32 0
  %304 = call i32 @_ZNK2v88internal18SharedFunctionInfo11EndPositionEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %303) #13
  %305 = bitcast %"class.v8::debug::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %305)
  %306 = bitcast %"struct.v8::internal::Script::PositionInfo"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %306) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %306, i8 -1, i64 16, i1 false) #13
  %307 = call zeroext i1 @_ZN2v88internal6Script15GetPositionInfoENS0_6HandleIS1_EEiPNS1_12PositionInfoENS1_10OffsetFlagE(i64* %273, i32 %304, %"struct.v8::internal::Script::PositionInfo"* nonnull %7, i32 1) #13
  %308 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %7, i64 0, i32 0
  %309 = load i32, i32* %308, align 4
  %310 = icmp sgt i32 %309, 0
  %311 = select i1 %310, i32 %309, i32 0
  %312 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %7, i64 0, i32 1
  %313 = load i32, i32* %312, align 4
  %314 = icmp sgt i32 %313, 0
  %315 = select i1 %314, i32 %313, i32 0
  call void @_ZN2v85debug8LocationC1Eii(%"class.v8::debug::Location"* nonnull %6, i32 %311, i32 %315) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %306) #13
  %316 = bitcast %"class.v8::debug::Location"* %6 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = getelementptr inbounds %"class.v8::debug::Location", %"class.v8::debug::Location"* %6, i64 0, i32 2
  %319 = load i8, i8* %318, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %305)
  %320 = bitcast %"class.v8::debug::Location"* %13 to i64*
  store i64 %317, i64* %320, align 8
  %321 = getelementptr inbounds %"class.v8::debug::Location", %"class.v8::debug::Location"* %13, i64 0, i32 2
  store i8 %319, i8* %321, align 8
  %322 = getelementptr inbounds %"class.v8::debug::Location", %"class.v8::debug::Location"* %13, i64 0, i32 3, i64 0
  %323 = getelementptr inbounds [3 x i8], [3 x i8]* %15, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %322, i8* nonnull align 1 %323, i64 3, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %300) #13
  %324 = load %"class.v8::debug::DebugDelegate"*, %"class.v8::debug::DebugDelegate"** %16, align 8
  %325 = bitcast i64* %273 to %"class.v8::debug::Script"*
  %326 = bitcast %"class.v8::debug::DebugDelegate"* %324 to i1 (%"class.v8::debug::DebugDelegate"*, %"class.v8::debug::Script"*, %"class.v8::debug::Location"*, %"class.v8::debug::Location"*)***
  %327 = load i1 (%"class.v8::debug::DebugDelegate"*, %"class.v8::debug::Script"*, %"class.v8::debug::Location"*, %"class.v8::debug::Location"*)**, i1 (%"class.v8::debug::DebugDelegate"*, %"class.v8::debug::Script"*, %"class.v8::debug::Location"*, %"class.v8::debug::Location"*)*** %326, align 8
  %328 = getelementptr inbounds i1 (%"class.v8::debug::DebugDelegate"*, %"class.v8::debug::Script"*, %"class.v8::debug::Location"*, %"class.v8::debug::Location"*)*, i1 (%"class.v8::debug::DebugDelegate"*, %"class.v8::debug::Script"*, %"class.v8::debug::Location"*, %"class.v8::debug::Location"*)** %327, i64 5
  %329 = load i1 (%"class.v8::debug::DebugDelegate"*, %"class.v8::debug::Script"*, %"class.v8::debug::Location"*, %"class.v8::debug::Location"*)*, i1 (%"class.v8::debug::DebugDelegate"*, %"class.v8::debug::Script"*, %"class.v8::debug::Location"*, %"class.v8::debug::Location"*)** %328, align 8
  %330 = call zeroext i1 %329(%"class.v8::debug::DebugDelegate"* %324, %"class.v8::debug::Script"* %325, %"class.v8::debug::Location"* nonnull dereferenceable(12) %10, %"class.v8::debug::Location"* nonnull dereferenceable(12) %13) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %299) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %274) #13
  store i8 %228, i8* %227, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal15InterruptsScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %226, align 8
  %331 = getelementptr inbounds %"class.v8::internal::PostponeInterruptsScope", %"class.v8::internal::PostponeInterruptsScope"* %9, i64 0, i32 0, i32 4
  %332 = load i32, i32* %331, align 8
  %333 = icmp eq i32 %332, 2
  br i1 %333, label %337, label %334

334:                                              ; preds = %272
  %335 = getelementptr inbounds %"class.v8::internal::PostponeInterruptsScope", %"class.v8::internal::PostponeInterruptsScope"* %9, i64 0, i32 0, i32 1
  %336 = load %"class.v8::internal::StackGuard"*, %"class.v8::internal::StackGuard"** %335, align 8
  call void @_ZN2v88internal10StackGuard18PopInterruptsScopeEv(%"class.v8::internal::StackGuard"* %336) #13
  br label %337

337:                                              ; preds = %272, %334
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %223) #13
  %338 = icmp eq %"class.v8::internal::Isolate"* %214, null
  br i1 %338, label %352, label %339

339:                                              ; preds = %337
  %340 = inttoptr i64 %217 to i64*
  %341 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %215, i64 0, i32 0
  %342 = load i64*, i64** %341, align 8
  store i64 %217, i64* %216, align 8
  %343 = load i32, i32* %220, align 8
  %344 = add nsw i32 %343, -1
  store i32 %344, i32* %220, align 8
  %345 = load i64*, i64** %218, align 8
  %346 = icmp eq i64* %345, %219
  br i1 %346, label %349, label %347

347:                                              ; preds = %339
  store i64* %219, i64** %218, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %214) #13
  %348 = load i64*, i64** %341, align 8
  br label %349

349:                                              ; preds = %347, %339
  %350 = phi i64* [ %348, %347 ], [ %340, %339 ]
  %351 = phi i64* [ %219, %347 ], [ %342, %339 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %350, i64* %351) #13
  br label %352

352:                                              ; preds = %337, %349
  store i8 %212, i8* %211, align 2
  %353 = zext i1 %330 to i32
  %354 = shl nuw nsw i32 %353, 3
  br label %355

355:                                              ; preds = %199, %163, %110, %170, %352
  %356 = phi i32 [ 8, %199 ], [ %354, %352 ], [ 8, %170 ], [ 8, %110 ], [ 8, %163 ]
  %357 = load i64, i64* %94, align 8
  %358 = add i64 %357, 7
  %359 = inttoptr i64 %358 to i32*
  %360 = load i32, i32* %359, align 4
  %361 = and i32 %360, -10
  %362 = or i32 %361, %356
  store atomic volatile i32 %362, i32* %359 monotonic, align 4
  %363 = load i64, i64* %94, align 8
  %364 = add i64 %363, 7
  %365 = inttoptr i64 %364 to i32*
  %366 = load i32, i32* %365, align 4
  %367 = and i32 %366, -18
  %368 = or i32 %367, 16
  store atomic volatile i32 %368, i32* %365 monotonic, align 4
  %369 = load i64, i64* %94, align 8
  %370 = add i64 %369, 7
  %371 = inttoptr i64 %370 to i32*
  br label %372

372:                                              ; preds = %93, %355
  %373 = phi i32* [ %97, %93 ], [ %371, %355 ]
  %374 = load i32, i32* %373, align 4
  %375 = and i32 %374, 8
  %376 = icmp ne i32 %375, 0
  br label %377

377:                                              ; preds = %88, %81, %28, %372
  %378 = phi i1 [ %376, %372 ], [ true, %28 ], [ %92, %88 ], [ true, %81 ]
  ret i1 %378
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal5Debug22ChangeBreakOnExceptionENS0_18ExceptionBreakTypeEb(%"class.v8::internal::Debug"* nocapture, i32, i1 zeroext) local_unnamed_addr #8 align 2 {
  %4 = zext i1 %2 to i8
  %5 = icmp eq i32 %1, 1
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 8
  store i8 %4, i8* %7, align 1
  br label %10

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 7
  store i8 %4, i8* %9, align 2
  br label %10

10:                                               ; preds = %8, %6
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal5Debug18IsBreakOnExceptionENS0_18ExceptionBreakTypeE(%"class.v8::internal::Debug"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = icmp eq i32 %1, 1
  %4 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 8
  %5 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 7
  %6 = select i1 %3, i8* %4, i8* %5
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp ne i8 %7, 0
  ret i1 %8
}

declare i64* @_ZN2v88internal9DebugInfo14GetBreakPointsEPNS0_7IsolateEi(%"class.v8::internal::DebugInfo"*, %"class.v8::internal::Isolate"*, i32) local_unnamed_addr #3

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #3

declare void @_ZN2v88internal10FixedArray6ShrinkEPNS0_7IsolateEi(%"class.v8::internal::FixedArray"*, %"class.v8::internal::Isolate"*, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug26SetBreakOnNextFunctionCallEv(%"class.v8::internal::Debug"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 13
  store i8 1, i8* %2, align 4
  %3 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 2
  store i8 1, i8* %3, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug28ClearBreakOnNextFunctionCallEv(%"class.v8::internal::Debug"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 13
  store i8 0, i8* %2, align 4
  %3 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 2
  %4 = load i8, i8* %3, align 4
  %5 = icmp eq i8 %4, 2
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 108
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %10, 32
  %12 = zext i1 %11 to i8
  br label %13

13:                                               ; preds = %6, %1
  %14 = phi i8 [ 1, %1 ], [ %12, %6 ]
  %15 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 2
  store i8 %14, i8* %15, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug13PrepareStepInENS0_6HandleINS0_10JSFunctionEEE(%"class.v8::internal::Debug"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 2
  %4 = load i8, i8* %3, align 4
  %5 = icmp sgt i8 %4, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 13
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %11, !prof !4

10:                                               ; preds = %6
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0)) #16
  unreachable

11:                                               ; preds = %2, %6
  %12 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 3
  %13 = load i8, i8* %12, align 2, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %98

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 1
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %98, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %21 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 108
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 32
  br i1 %24, label %98, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 0
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %98

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 5
  %31 = load i8, i8* %30, align 4, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %98

33:                                               ; preds = %29
  %34 = load i64, i64* %1, align 8
  %35 = add i64 %34, 11
  %36 = inttoptr i64 %35 to i32*
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i64 %34, -4294967296
  %39 = zext i32 %37 to i64
  %40 = or i64 %38, %39
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 31, i32 4
  %42 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %41, align 8
  %43 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %33
  %45 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %42, i64 %40) #13
  br label %59

46:                                               ; preds = %33
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 31, i32 0
  %48 = load i64*, i64** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 31, i32 1
  %50 = load i64*, i64** %49, align 8
  %51 = icmp eq i64* %48, %50
  br i1 %51, label %52, label %54

52:                                               ; preds = %46
  %53 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %21) #13
  br label %54

54:                                               ; preds = %52, %46
  %55 = phi i64* [ %53, %52 ], [ %48, %46 ]
  %56 = ptrtoint i64* %55 to i64
  %57 = add i64 %56, 8
  %58 = inttoptr i64 %57 to i64*
  store i64* %58, i64** %47, align 8
  store i64 %40, i64* %55, align 8
  br label %59

59:                                               ; preds = %44, %54
  %60 = phi i64* [ %45, %44 ], [ %55, %54 ]
  %61 = tail call zeroext i1 @_ZN2v88internal5Debug12IsBlackboxedENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %60)
  br i1 %61, label %98, label %62

62:                                               ; preds = %59
  %63 = load i64, i64* %1, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 4, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = trunc i64 %63 to i32
  %67 = trunc i64 %65 to i32
  %68 = icmp eq i32 %66, %67
  br i1 %68, label %98, label %69

69:                                               ; preds = %62
  store i64 0, i64* %64, align 8
  %70 = load i64, i64* %1, align 8
  %71 = add i64 %70, 11
  %72 = inttoptr i64 %71 to i32*
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i64 %70, -4294967296
  %75 = zext i32 %73 to i64
  %76 = or i64 %74, %75
  %77 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %20, align 8
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %77, i64 0, i32 31, i32 4
  %79 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %78, align 8
  %80 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %69
  %82 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %79, i64 %76) #13
  br label %96

83:                                               ; preds = %69
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %77, i64 0, i32 31, i32 0
  %85 = load i64*, i64** %84, align 8
  %86 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %77, i64 0, i32 31, i32 1
  %87 = load i64*, i64** %86, align 8
  %88 = icmp eq i64* %85, %87
  br i1 %88, label %89, label %91

89:                                               ; preds = %83
  %90 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %77) #13
  br label %91

91:                                               ; preds = %89, %83
  %92 = phi i64* [ %90, %89 ], [ %85, %83 ]
  %93 = ptrtoint i64* %92 to i64
  %94 = add i64 %93, 8
  %95 = inttoptr i64 %94 to i64*
  store i64* %95, i64** %84, align 8
  store i64 %76, i64* %92, align 8
  br label %96

96:                                               ; preds = %81, %91
  %97 = phi i64* [ %82, %81 ], [ %92, %91 ]
  tail call void @_ZN2v88internal5Debug16FloodWithOneShotENS0_6HandleINS0_18SharedFunctionInfoEEEb(%"class.v8::internal::Debug"* %0, i64* %97, i1 zeroext false)
  br label %98

98:                                               ; preds = %29, %25, %11, %15, %96, %59, %62, %19
  ret void
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug31PrepareStepInSuspendedGeneratorEv(%"class.v8::internal::Debug"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 11, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7, !prof !4

6:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 3
  %9 = load i8, i8* %8, align 2, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %86

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 1
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %86, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 108
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 32
  br i1 %20, label %86, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 0
  %23 = load atomic i64, i64* %22 monotonic, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %86

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 5
  %27 = load i8, i8* %26, align 4, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %86

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 2
  store i8 2, i8* %30, align 4
  %31 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 2
  store i8 1, i8* %31, align 1
  %32 = and i64 %3, -4294967296
  %33 = add i64 %3, 11
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %32, %36
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 4
  %39 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %38, align 8
  %40 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %39, null
  br i1 %40, label %44, label %41

41:                                               ; preds = %29
  %42 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %39, i64 %37) #13
  %43 = load i64, i64* %42, align 8
  br label %57

44:                                               ; preds = %29
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 0
  %46 = load i64*, i64** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 1
  %48 = load i64*, i64** %47, align 8
  %49 = icmp eq i64* %46, %48
  br i1 %49, label %50, label %52

50:                                               ; preds = %44
  %51 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %17) #13
  br label %52

52:                                               ; preds = %50, %44
  %53 = phi i64* [ %51, %50 ], [ %46, %44 ]
  %54 = ptrtoint i64* %53 to i64
  %55 = add i64 %54, 8
  %56 = inttoptr i64 %55 to i64*
  store i64* %56, i64** %45, align 8
  store i64 %37, i64* %53, align 8
  br label %57

57:                                               ; preds = %41, %52
  %58 = phi i64 [ %43, %41 ], [ %37, %52 ]
  %59 = add i64 %58, 11
  %60 = inttoptr i64 %59 to i32*
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i64 %58, -4294967296
  %63 = zext i32 %61 to i64
  %64 = or i64 %62, %63
  %65 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %65, i64 0, i32 31, i32 4
  %67 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %66, align 8
  %68 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %57
  %70 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %67, i64 %64) #13
  br label %84

71:                                               ; preds = %57
  %72 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %65, i64 0, i32 31, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %65, i64 0, i32 31, i32 1
  %75 = load i64*, i64** %74, align 8
  %76 = icmp eq i64* %73, %75
  br i1 %76, label %77, label %79

77:                                               ; preds = %71
  %78 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %65) #13
  br label %79

79:                                               ; preds = %77, %71
  %80 = phi i64* [ %78, %77 ], [ %73, %71 ]
  %81 = ptrtoint i64* %80 to i64
  %82 = add i64 %81, 8
  %83 = inttoptr i64 %82 to i64*
  store i64* %83, i64** %72, align 8
  store i64 %64, i64* %80, align 8
  br label %84

84:                                               ; preds = %69, %79
  %85 = phi i64* [ %70, %69 ], [ %80, %79 ]
  tail call void @_ZN2v88internal5Debug16FloodWithOneShotENS0_6HandleINS0_18SharedFunctionInfoEEEb(%"class.v8::internal::Debug"* %0, i64* %85, i1 zeroext false)
  store i64 0, i64* %2, align 8
  br label %86

86:                                               ; preds = %25, %21, %7, %11, %15, %84
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug18PrepareStepOnThrowEv(%"class.v8::internal::Debug"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::StackTraceFrameIterator", align 8
  %3 = alloca %"class.v8::internal::JavaScriptFrameIterator", align 8
  %4 = alloca %"class.std::__1::vector.1528", align 8
  %5 = alloca %"class.std::__1::vector.1535", align 8
  %6 = alloca %"class.v8::internal::HandlerTable", align 8
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 2
  %9 = load i8, i8* %8, align 4
  %10 = icmp eq i8 %9, -1
  br i1 %10, label %285, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 3
  %13 = load i8, i8* %12, align 2, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %285

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 1
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %285, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %21 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 108
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 32
  br i1 %24, label %285, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 0
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %285

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 5
  %31 = load i8, i8* %30, align 4, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %285

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 10
  %35 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %34, align 8
  %36 = icmp eq %"class.v8::internal::DebugInfoListNode"* %35, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %33, %37
  %38 = phi %"class.v8::internal::DebugInfoListNode"* [ %42, %37 ], [ %35, %33 ]
  %39 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %38, i64 0, i32 0
  %40 = load i64*, i64** %39, align 8
  tail call void @_ZN2v88internal5Debug16ClearBreakPointsENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* undef, i64* %40) #13
  tail call void @_ZN2v88internal5Debug16ApplyBreakPointsENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* %0, i64* %40) #13
  %41 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %38, i64 0, i32 1
  %42 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %41, align 8
  %43 = icmp eq %"class.v8::internal::DebugInfoListNode"* %42, null
  br i1 %43, label %44, label %37

44:                                               ; preds = %37
  %45 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %20, align 8
  br label %46

46:                                               ; preds = %44, %33
  %47 = phi %"class.v8::internal::Isolate"* [ %45, %44 ], [ %21, %33 ]
  %48 = bitcast %"class.v8::internal::StackTraceFrameIterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1616, i8* nonnull %48) #13
  call void @_ZN2v88internal23StackTraceFrameIteratorC1EPNS0_7IsolateE(%"class.v8::internal::StackTraceFrameIterator"* nonnull %2, %"class.v8::internal::Isolate"* %47) #13
  %49 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %69, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.v8::internal::StackTraceFrameIterator", %"class.v8::internal::StackTraceFrameIterator"* %2, i64 0, i32 0, i32 0, i32 23
  %54 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %53, align 8
  %55 = icmp eq %"class.v8::internal::StackFrame"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %52, %66
  %57 = phi %"class.v8::internal::StackFrame"* [ %67, %66 ], [ %54, %52 ]
  %58 = bitcast %"class.v8::internal::StackFrame"* %57 to i64 (%"class.v8::internal::StackFrame"*)***
  %59 = load i64 (%"class.v8::internal::StackFrame"*)**, i64 (%"class.v8::internal::StackFrame"*)*** %58, align 8
  %60 = getelementptr inbounds i64 (%"class.v8::internal::StackFrame"*)*, i64 (%"class.v8::internal::StackFrame"*)** %59, i64 6
  %61 = load i64 (%"class.v8::internal::StackFrame"*)*, i64 (%"class.v8::internal::StackFrame"*)** %60, align 8
  %62 = call i64 %61(%"class.v8::internal::StackFrame"* nonnull %57) #13
  %63 = trunc i64 %62 to i32
  %64 = load i32, i32* %49, align 8
  %65 = icmp eq i32 %64, %63
  br i1 %65, label %69, label %66

66:                                               ; preds = %56
  call void @_ZN2v88internal23StackTraceFrameIterator7AdvanceEv(%"class.v8::internal::StackTraceFrameIterator"* nonnull %2) #13
  %67 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %53, align 8
  %68 = icmp eq %"class.v8::internal::StackFrame"* %67, null
  br i1 %68, label %69, label %56

69:                                               ; preds = %66, %56, %52, %46
  %70 = getelementptr inbounds %"class.v8::internal::StackTraceFrameIterator", %"class.v8::internal::StackTraceFrameIterator"* %2, i64 0, i32 0, i32 0, i32 23
  %71 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %70, align 8
  %72 = icmp eq %"class.v8::internal::StackFrame"* %71, null
  br i1 %72, label %79, label %73

73:                                               ; preds = %69, %73
  %74 = phi i32 [ %76, %73 ], [ 0, %69 ]
  %75 = call i32 @_ZNK2v88internal23StackTraceFrameIterator18FrameFunctionCountEv(%"class.v8::internal::StackTraceFrameIterator"* nonnull %2) #13
  %76 = add nsw i32 %75, %74
  call void @_ZN2v88internal23StackTraceFrameIterator7AdvanceEv(%"class.v8::internal::StackTraceFrameIterator"* nonnull %2) #13
  %77 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %70, align 8
  %78 = icmp eq %"class.v8::internal::StackFrame"* %77, null
  br i1 %78, label %79, label %73

79:                                               ; preds = %73, %69
  %80 = phi i32 [ 0, %69 ], [ %76, %73 ]
  call void @llvm.lifetime.end.p0i8(i64 1616, i8* nonnull %48) #13
  %81 = bitcast %"class.v8::internal::JavaScriptFrameIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1616, i8* nonnull %81) #13
  %82 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %20, align 8
  %83 = getelementptr inbounds %"class.v8::internal::JavaScriptFrameIterator", %"class.v8::internal::JavaScriptFrameIterator"* %3, i64 0, i32 0
  call void @_ZN2v88internal18StackFrameIteratorC1EPNS0_7IsolateE(%"class.v8::internal::StackFrameIterator"* nonnull %83, %"class.v8::internal::Isolate"* %82) #13
  %84 = getelementptr inbounds %"class.v8::internal::JavaScriptFrameIterator", %"class.v8::internal::JavaScriptFrameIterator"* %3, i64 0, i32 0, i32 0, i32 23
  %85 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %84, align 8
  %86 = icmp eq %"class.v8::internal::StackFrame"* %85, null
  br i1 %86, label %284, label %87

87:                                               ; preds = %79
  call void @_ZN2v88internal23JavaScriptFrameIterator7AdvanceEv(%"class.v8::internal::JavaScriptFrameIterator"* nonnull %3) #13
  %88 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %84, align 8
  %89 = icmp eq %"class.v8::internal::StackFrame"* %88, null
  br i1 %89, label %284, label %90

90:                                               ; preds = %87
  %91 = bitcast %"class.std::__1::vector.1528"* %4 to i8*
  %92 = getelementptr inbounds %"class.std::__1::vector.1528", %"class.std::__1::vector.1528"* %4, i64 0, i32 0, i32 1
  %93 = bitcast %"class.v8::internal::SharedFunctionInfo"** %92 to i64*
  %94 = bitcast %"class.std::__1::vector.1528"* %4 to i64*
  %95 = getelementptr inbounds %"class.std::__1::vector.1528", %"class.std::__1::vector.1528"* %4, i64 0, i32 0, i32 0
  br label %96

96:                                               ; preds = %90, %123
  %97 = phi %"class.v8::internal::StackFrame"* [ %88, %90 ], [ %124, %123 ]
  %98 = phi i32 [ %80, %90 ], [ %117, %123 ]
  %99 = bitcast %"class.v8::internal::StackFrame"* %97 to %"class.v8::internal::CommonFrameWithJSLinkage"*
  %100 = bitcast %"class.v8::internal::StackFrame"* %97 to i32 (%"class.v8::internal::CommonFrameWithJSLinkage"*, i32*, i32*)***
  %101 = load i32 (%"class.v8::internal::CommonFrameWithJSLinkage"*, i32*, i32*)**, i32 (%"class.v8::internal::CommonFrameWithJSLinkage"*, i32*, i32*)*** %100, align 8
  %102 = getelementptr inbounds i32 (%"class.v8::internal::CommonFrameWithJSLinkage"*, i32*, i32*)*, i32 (%"class.v8::internal::CommonFrameWithJSLinkage"*, i32*, i32*)** %101, i64 18
  %103 = load i32 (%"class.v8::internal::CommonFrameWithJSLinkage"*, i32*, i32*)*, i32 (%"class.v8::internal::CommonFrameWithJSLinkage"*, i32*, i32*)** %102, align 8
  %104 = call i32 %103(%"class.v8::internal::CommonFrameWithJSLinkage"* %99, i32* null, i32* null) #13
  %105 = icmp sgt i32 %104, 0
  br i1 %105, label %126, label %106

106:                                              ; preds = %96
  %107 = bitcast %"class.v8::internal::StackFrame"* %97 to %"class.v8::internal::JavaScriptFrame"*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 0, i64 24, i1 false) #13
  %108 = bitcast %"class.v8::internal::StackFrame"* %97 to void (%"class.v8::internal::JavaScriptFrame"*, %"class.std::__1::vector.1528"*)***
  %109 = load void (%"class.v8::internal::JavaScriptFrame"*, %"class.std::__1::vector.1528"*)**, void (%"class.v8::internal::JavaScriptFrame"*, %"class.std::__1::vector.1528"*)*** %108, align 8
  %110 = getelementptr inbounds void (%"class.v8::internal::JavaScriptFrame"*, %"class.std::__1::vector.1528"*)*, void (%"class.v8::internal::JavaScriptFrame"*, %"class.std::__1::vector.1528"*)** %109, i64 20
  %111 = load void (%"class.v8::internal::JavaScriptFrame"*, %"class.std::__1::vector.1528"*)*, void (%"class.v8::internal::JavaScriptFrame"*, %"class.std::__1::vector.1528"*)** %110, align 8
  call void %111(%"class.v8::internal::JavaScriptFrame"* %107, %"class.std::__1::vector.1528"* nonnull %4) #13
  %112 = load i64, i64* %93, align 8
  %113 = load i64, i64* %94, align 8
  %114 = sub i64 %112, %113
  %115 = lshr exact i64 %114, 3
  %116 = trunc i64 %115 to i32
  %117 = sub i32 %98, %116
  call void @_ZN2v88internal23JavaScriptFrameIterator7AdvanceEv(%"class.v8::internal::JavaScriptFrameIterator"* nonnull %3) #13
  %118 = load %"class.v8::internal::SharedFunctionInfo"*, %"class.v8::internal::SharedFunctionInfo"** %95, align 8
  %119 = icmp eq %"class.v8::internal::SharedFunctionInfo"* %118, null
  br i1 %119, label %123, label %120

120:                                              ; preds = %106
  %121 = ptrtoint %"class.v8::internal::SharedFunctionInfo"* %118 to i64
  store i64 %121, i64* %93, align 8
  %122 = bitcast %"class.v8::internal::SharedFunctionInfo"* %118 to i8*
  call void @_ZdlPv(i8* %122) #17
  br label %123

123:                                              ; preds = %120, %106
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #13
  %124 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %84, align 8
  %125 = icmp eq %"class.v8::internal::StackFrame"* %124, null
  br i1 %125, label %284, label %96

126:                                              ; preds = %96
  %127 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %84, align 8
  %128 = icmp eq %"class.v8::internal::StackFrame"* %127, null
  br i1 %128, label %284, label %129

129:                                              ; preds = %126
  %130 = bitcast %"class.std::__1::vector.1535"* %5 to i8*
  %131 = getelementptr inbounds %"class.std::__1::vector.1535", %"class.std::__1::vector.1535"* %5, i64 0, i32 0, i32 1
  %132 = bitcast %"class.v8::internal::FrameSummary"** %131 to i64*
  %133 = bitcast %"class.std::__1::vector.1535"* %5 to i64*
  %134 = getelementptr inbounds %"class.std::__1::vector.1535", %"class.std::__1::vector.1535"* %5, i64 0, i32 0, i32 0
  %135 = bitcast %"class.v8::internal::HandlerTable"* %6 to i8*
  %136 = bitcast i32* %7 to i8*
  %137 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 9
  %138 = bitcast %"class.std::__1::vector.1535"* %5 to i8**
  br label %139

139:                                              ; preds = %129, %281
  %140 = phi %"class.v8::internal::StackFrame"* [ %127, %129 ], [ %282, %281 ]
  %141 = phi i32 [ %98, %129 ], [ %263, %281 ]
  %142 = phi i8 [ 0, %129 ], [ %264, %281 ]
  %143 = load i8, i8* %8, align 4
  %144 = icmp eq i8 %143, 2
  br i1 %144, label %145, label %152

145:                                              ; preds = %139
  %146 = bitcast %"class.v8::internal::StackFrame"* %140 to %"class.v8::internal::JavaScriptFrame"*
  %147 = bitcast %"class.v8::internal::StackFrame"* %140 to i64 (%"class.v8::internal::JavaScriptFrame"*)***
  %148 = load i64 (%"class.v8::internal::JavaScriptFrame"*)**, i64 (%"class.v8::internal::JavaScriptFrame"*)*** %147, align 8
  %149 = getelementptr inbounds i64 (%"class.v8::internal::JavaScriptFrame"*)*, i64 (%"class.v8::internal::JavaScriptFrame"*)** %148, i64 13
  %150 = load i64 (%"class.v8::internal::JavaScriptFrame"*)*, i64 (%"class.v8::internal::JavaScriptFrame"*)** %149, align 8
  %151 = call i64 %150(%"class.v8::internal::JavaScriptFrame"* %146) #13
  call void @_ZN2v88internal11Deoptimizer18DeoptimizeFunctionENS0_10JSFunctionENS0_4CodeE(i64 %151, i64 0) #13
  br label %152

152:                                              ; preds = %145, %139
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %130) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %130, i8 0, i64 24, i1 false) #13
  %153 = bitcast %"class.v8::internal::StackFrame"* %140 to %"class.v8::internal::CommonFrameWithJSLinkage"*
  %154 = bitcast %"class.v8::internal::StackFrame"* %140 to void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1535"*)***
  %155 = load void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1535"*)**, void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1535"*)*** %154, align 8
  %156 = getelementptr inbounds void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1535"*)*, void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1535"*)** %155, i64 11
  %157 = load void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1535"*)*, void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1535"*)** %156, align 8
  call void %157(%"class.v8::internal::CommonFrameWithJSLinkage"* %153, %"class.std::__1::vector.1535"* nonnull %5) #13
  %158 = load i64, i64* %132, align 8
  %159 = load i64, i64* %133, align 8
  %160 = sub i64 %158, %159
  %161 = icmp eq i64 %160, 0
  %162 = inttoptr i64 %159 to %"class.v8::internal::FrameSummary"*
  br i1 %161, label %261, label %163

163:                                              ; preds = %152
  %164 = inttoptr i64 %159 to %"class.v8::internal::FrameSummary"*
  %165 = sdiv exact i64 %160, 56
  br label %166

166:                                              ; preds = %252, %163
  %167 = phi i64 [ %254, %252 ], [ %159, %163 ]
  %168 = phi %"class.v8::internal::FrameSummary"* [ %253, %252 ], [ %164, %163 ]
  %169 = phi i32 [ %250, %252 ], [ %141, %163 ]
  %170 = phi i8 [ %249, %252 ], [ %142, %163 ]
  %171 = phi i64 [ %172, %252 ], [ %165, %163 ]
  %172 = add i64 %171, -1
  %173 = getelementptr inbounds %"class.v8::internal::FrameSummary", %"class.v8::internal::FrameSummary"* %168, i64 %172
  %174 = and i8 %170, 1
  %175 = icmp eq i8 %174, 0
  br i1 %175, label %176, label %209

176:                                              ; preds = %166
  %177 = load i64, i64* %132, align 8
  %178 = sub i64 %177, %167
  %179 = sdiv exact i64 %178, 56
  %180 = icmp ugt i64 %179, 1
  br i1 %180, label %181, label %209

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.v8::internal::FrameSummary", %"class.v8::internal::FrameSummary"* %168, i64 %172, i32 0, i32 0, i32 3, i32 0, i32 0
  %183 = load i64*, i64** %182, align 8
  %184 = load i64, i64* %183, align 8
  %185 = and i64 %184, -4294967296
  %186 = add i64 %184, -1
  %187 = inttoptr i64 %186 to i32*
  %188 = load atomic i32, i32* %187 monotonic, align 4
  %189 = zext i32 %188 to i64
  %190 = or i64 %185, %189
  %191 = add i64 %190, 7
  %192 = inttoptr i64 %191 to i16*
  %193 = load atomic i16, i16* %192 monotonic, align 2
  %194 = icmp eq i16 %193, 162
  br i1 %194, label %195, label %202

195:                                              ; preds = %181
  %196 = add i64 %184, 27
  %197 = inttoptr i64 %196 to i32*
  %198 = load atomic i32, i32* %197 monotonic, align 4
  %199 = and i32 %198, 15
  %200 = icmp eq i32 %199, 10
  br i1 %200, label %202, label %201, !prof !3

201:                                              ; preds = %195
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

202:                                              ; preds = %195, %181
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %135) #13
  call void @_ZN2v88internal12HandlerTableC1ENS0_13BytecodeArrayE(%"class.v8::internal::HandlerTable"* nonnull %6, i64 %184) #13
  %203 = call i32 @_ZNK2v88internal12FrameSummary11code_offsetEv(%"class.v8::internal::FrameSummary"* %173) #13
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %136) #13
  %204 = call i32 @_ZN2v88internal12HandlerTable11LookupRangeEiPiPNS1_15CatchPredictionE(%"class.v8::internal::HandlerTable"* nonnull %6, i32 %203, i32* null, i32* nonnull %7) #13
  %205 = icmp sgt i32 %204, 0
  %206 = select i1 %205, i8 1, i8 %170
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %136) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %135) #13
  %207 = and i8 %206, 1
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %248, label %209

209:                                              ; preds = %166, %176, %202
  %210 = phi i8 [ %206, %202 ], [ 1, %176 ], [ %170, %166 ]
  %211 = load i8, i8* %8, align 4
  %212 = icmp ult i8 %211, 2
  br i1 %212, label %213, label %216

213:                                              ; preds = %209
  %214 = load i32, i32* %137, align 4
  %215 = icmp sgt i32 %169, %214
  br i1 %215, label %248, label %216

216:                                              ; preds = %209, %213
  %217 = getelementptr inbounds %"class.v8::internal::FrameSummary", %"class.v8::internal::FrameSummary"* %168, i64 %172, i32 0, i32 0, i32 2, i32 0, i32 0
  %218 = load i64*, i64** %217, align 8
  %219 = load i64, i64* %218, align 8
  %220 = add i64 %219, 11
  %221 = inttoptr i64 %220 to i32*
  %222 = load atomic i32, i32* %221 monotonic, align 4
  %223 = and i64 %219, -4294967296
  %224 = zext i32 %222 to i64
  %225 = or i64 %223, %224
  %226 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %20, align 8
  %227 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %226, i64 0, i32 31, i32 4
  %228 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %227, align 8
  %229 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %228, null
  br i1 %229, label %232, label %230

230:                                              ; preds = %216
  %231 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %228, i64 %225) #13
  br label %245

232:                                              ; preds = %216
  %233 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %226, i64 0, i32 31, i32 0
  %234 = load i64*, i64** %233, align 8
  %235 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %226, i64 0, i32 31, i32 1
  %236 = load i64*, i64** %235, align 8
  %237 = icmp eq i64* %234, %236
  br i1 %237, label %238, label %240

238:                                              ; preds = %232
  %239 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %226) #13
  br label %240

240:                                              ; preds = %238, %232
  %241 = phi i64* [ %239, %238 ], [ %234, %232 ]
  %242 = ptrtoint i64* %241 to i64
  %243 = add i64 %242, 8
  %244 = inttoptr i64 %243 to i64*
  store i64* %244, i64** %233, align 8
  store i64 %225, i64* %241, align 8
  br label %245

245:                                              ; preds = %230, %240
  %246 = phi i64* [ %231, %230 ], [ %241, %240 ]
  %247 = call zeroext i1 @_ZN2v88internal5Debug12IsBlackboxedENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %246)
  br i1 %247, label %248, label %255

248:                                              ; preds = %213, %202, %245
  %249 = phi i8 [ %210, %245 ], [ %206, %202 ], [ %210, %213 ]
  %250 = add nsw i32 %169, -1
  %251 = icmp eq i64 %172, 0
  br i1 %251, label %256, label %252

252:                                              ; preds = %248
  %253 = load %"class.v8::internal::FrameSummary"*, %"class.v8::internal::FrameSummary"** %134, align 8
  %254 = ptrtoint %"class.v8::internal::FrameSummary"* %253 to i64
  br label %166

255:                                              ; preds = %245
  call void @_ZN2v88internal5Debug16FloodWithOneShotENS0_6HandleINS0_18SharedFunctionInfoEEEb(%"class.v8::internal::Debug"* %0, i64* %246, i1 zeroext false)
  br label %256

256:                                              ; preds = %248, %255
  %257 = phi i32 [ %169, %255 ], [ %250, %248 ]
  %258 = phi i8 [ %210, %255 ], [ %249, %248 ]
  %259 = phi i32 [ 1, %255 ], [ 0, %248 ]
  %260 = load %"class.v8::internal::FrameSummary"*, %"class.v8::internal::FrameSummary"** %134, align 8
  br label %261

261:                                              ; preds = %256, %152
  %262 = phi %"class.v8::internal::FrameSummary"* [ %260, %256 ], [ %162, %152 ]
  %263 = phi i32 [ %257, %256 ], [ %141, %152 ]
  %264 = phi i8 [ %258, %256 ], [ %142, %152 ]
  %265 = phi i32 [ %259, %256 ], [ 0, %152 ]
  %266 = icmp eq %"class.v8::internal::FrameSummary"* %262, null
  br i1 %266, label %279, label %267

267:                                              ; preds = %261
  %268 = bitcast %"class.v8::internal::FrameSummary"* %262 to i8*
  %269 = load %"class.v8::internal::FrameSummary"*, %"class.v8::internal::FrameSummary"** %131, align 8
  %270 = icmp eq %"class.v8::internal::FrameSummary"* %269, %262
  br i1 %270, label %277, label %271

271:                                              ; preds = %267, %271
  %272 = phi %"class.v8::internal::FrameSummary"* [ %273, %271 ], [ %269, %267 ]
  %273 = getelementptr inbounds %"class.v8::internal::FrameSummary", %"class.v8::internal::FrameSummary"* %272, i64 -1
  call void @_ZN2v88internal12FrameSummaryD1Ev(%"class.v8::internal::FrameSummary"* %273) #13
  %274 = icmp eq %"class.v8::internal::FrameSummary"* %273, %262
  br i1 %274, label %275, label %271

275:                                              ; preds = %271
  %276 = load i8*, i8** %138, align 8
  br label %277

277:                                              ; preds = %275, %267
  %278 = phi i8* [ %276, %275 ], [ %268, %267 ]
  store %"class.v8::internal::FrameSummary"* %262, %"class.v8::internal::FrameSummary"** %131, align 8
  call void @_ZdlPv(i8* %278) #17
  br label %279

279:                                              ; preds = %261, %277
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %130) #13
  %280 = icmp eq i32 %265, 0
  br i1 %280, label %281, label %284

281:                                              ; preds = %279
  call void @_ZN2v88internal23JavaScriptFrameIterator7AdvanceEv(%"class.v8::internal::JavaScriptFrameIterator"* nonnull %3) #13
  %282 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %84, align 8
  %283 = icmp eq %"class.v8::internal::StackFrame"* %282, null
  br i1 %283, label %284, label %139

284:                                              ; preds = %123, %281, %279, %79, %87, %126
  call void @llvm.lifetime.end.p0i8(i64 1616, i8* nonnull %81) #13
  br label %285

285:                                              ; preds = %29, %25, %11, %15, %19, %1, %284
  ret void
}

declare void @_ZN2v88internal23JavaScriptFrameIterator7AdvanceEv(%"class.v8::internal::JavaScriptFrameIterator"*) local_unnamed_addr #3

declare void @_ZN2v88internal11Deoptimizer18DeoptimizeFunctionENS0_10JSFunctionENS0_4CodeE(i64, i64) local_unnamed_addr #3

declare void @_ZN2v88internal12HandlerTableC1ENS0_13BytecodeArrayE(%"class.v8::internal::HandlerTable"*, i64) unnamed_addr #3

declare i32 @_ZNK2v88internal12FrameSummary11code_offsetEv(%"class.v8::internal::FrameSummary"*) local_unnamed_addr #3

declare i32 @_ZN2v88internal12HandlerTable11LookupRangeEiPiPNS1_15CatchPredictionE(%"class.v8::internal::HandlerTable"*, i32, i32*, i32*) local_unnamed_addr #3

declare void @_ZN2v88internal23StackTraceFrameIteratorC1EPNS0_7IsolateENS0_12StackFrameIdE(%"class.v8::internal::StackTraceFrameIterator"*, %"class.v8::internal::Isolate"*, i32) unnamed_addr #3

declare i32 @_ZN2v88internal12AbstractCode23SourceStatementPositionEi(%"class.v8::internal::AbstractCode"*, i32) local_unnamed_addr #3

declare %"class.v8::internal::wasm::NativeModule"* @_ZNK2v88internal9WasmFrame13native_moduleEv(%"class.v8::internal::WasmFrame"*) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal4wasm9DebugInfo11PrepareStepEPNS0_9WasmFrameE(%"class.v8::internal::wasm::DebugInfo"*, %"class.v8::internal::WasmFrame"*) local_unnamed_addr #3

declare void @_ZN2v88internal4wasm9DebugInfo16PrepareStepOutToEPNS0_9WasmFrameE(%"class.v8::internal::wasm::DebugInfo"*, %"class.v8::internal::WasmFrame"*) local_unnamed_addr #3

declare void @_ZNK2v88internal15JavaScriptFrame12GetFunctionsEPNSt3__16vectorINS0_6HandleINS0_18SharedFunctionInfoEEENS2_9allocatorIS6_EEEE(%"class.v8::internal::JavaScriptFrame"*, %"class.std::__1::vector.1542"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal5Debug23GetSourceBreakLocationsEPNS0_7IsolateENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", align 8
  %4 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %5 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %6 = alloca %"class.v8::internal::BreakPointInfo", align 8
  %7 = bitcast %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = load i64, i64* %1, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %3, i64 0, i32 0
  %11 = call zeroext i1 @_ZNK2v88internal18SharedFunctionInfo12HasBreakInfoEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  br i1 %11, label %14, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %178

14:                                               ; preds = %2
  %15 = load i64, i64* %1, align 8
  %16 = and i64 %15, -4294967296
  %17 = add i64 %15, 15
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 acquire, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %16, %20
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %23 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %22, align 8
  %24 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %14
  %26 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %23, i64 %21) #13
  %27 = load i64, i64* %26, align 8
  br label %41

28:                                               ; preds = %14
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %32 = load i64*, i64** %31, align 8
  %33 = icmp eq i64* %30, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %28
  %35 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #13
  br label %36

36:                                               ; preds = %34, %28
  %37 = phi i64* [ %35, %34 ], [ %30, %28 ]
  %38 = ptrtoint i64* %37 to i64
  %39 = add i64 %38, 8
  %40 = inttoptr i64 %39 to i64*
  store i64* %40, i64** %29, align 8
  store i64 %21, i64* %37, align 8
  br label %41

41:                                               ; preds = %25, %36
  %42 = phi i64 [ %27, %25 ], [ %21, %36 ]
  %43 = phi i64* [ %26, %25 ], [ %37, %36 ]
  %44 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #13
  %45 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %42, i64* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %4, i64 0, i32 0
  %47 = call i32 @_ZN2v88internal9DebugInfo18GetBreakPointCountEPNS0_7IsolateE(%"class.v8::internal::DebugInfo"* nonnull %46, %"class.v8::internal::Isolate"* %0) #13
  %48 = icmp eq i32 %47, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #13
  br i1 %48, label %49, label %51

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %178

51:                                               ; preds = %41
  %52 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %53 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #13
  %54 = load i64, i64* %43, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %5, i64 0, i32 0
  %57 = call i32 @_ZN2v88internal9DebugInfo18GetBreakPointCountEPNS0_7IsolateE(%"class.v8::internal::DebugInfo"* nonnull %56, %"class.v8::internal::Isolate"* %0) #13
  %58 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %52, i32 %57, i8 zeroext 0) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #13
  %59 = load i64, i64* %43, align 8
  %60 = and i64 %59, -4294967296
  %61 = add i64 %59, 23
  %62 = inttoptr i64 %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %60, %64
  %66 = add i64 %65, 3
  %67 = inttoptr i64 %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = icmp sgt i32 %68, 1
  br i1 %69, label %70, label %178

70:                                               ; preds = %51
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %72 = bitcast %"class.v8::internal::BreakPointInfo"* %6 to i8*
  %73 = getelementptr inbounds %"class.v8::internal::BreakPointInfo", %"class.v8::internal::BreakPointInfo"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %74

74:                                               ; preds = %70, %162
  %75 = phi i64 [ %59, %70 ], [ %163, %162 ]
  %76 = phi i32 [ %63, %70 ], [ %169, %162 ]
  %77 = phi i64 [ 0, %70 ], [ %165, %162 ]
  %78 = phi i64 [ %65, %70 ], [ %171, %162 ]
  %79 = phi i32 [ 0, %70 ], [ %164, %162 ]
  %80 = trunc i64 %77 to i32
  %81 = shl i32 %80, 2
  %82 = sext i32 %81 to i64
  %83 = add nsw i64 %82, 7
  %84 = add i64 %78, %83
  %85 = inttoptr i64 %84 to i32*
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = load i64, i64* %71, align 8
  %88 = trunc i64 %87 to i32
  %89 = icmp eq i32 %86, %88
  br i1 %89, label %162, label %90

90:                                               ; preds = %74
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #13
  %91 = and i64 %75, -4294967296
  %92 = zext i32 %76 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, %83
  %95 = inttoptr i64 %94 to i32*
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = zext i32 %96 to i64
  %98 = or i64 %91, %97
  store i64 %98, i64* %73, align 8
  %99 = call i32 @_ZN2v88internal14BreakPointInfo18GetBreakPointCountEPNS0_7IsolateE(%"class.v8::internal::BreakPointInfo"* nonnull %6, %"class.v8::internal::Isolate"* %0) #13
  %100 = icmp sgt i32 %99, 0
  br i1 %100, label %101, label %159

101:                                              ; preds = %90
  %102 = sext i32 %79 to i64
  %103 = and i32 %99, 1
  %104 = icmp eq i32 %99, 1
  br i1 %104, label %138, label %105

105:                                              ; preds = %101
  %106 = sub i32 %99, %103
  br label %107

107:                                              ; preds = %107, %105
  %108 = phi i64 [ %102, %105 ], [ %123, %107 ]
  %109 = phi i32 [ %106, %105 ], [ %136, %107 ]
  %110 = load i64, i64* %58, align 8
  %111 = load i64, i64* %73, align 8
  %112 = add i64 %111, 3
  %113 = inttoptr i64 %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = and i32 %114, -2
  %116 = trunc i64 %108 to i32
  %117 = shl i32 %116, 2
  %118 = sext i32 %117 to i64
  %119 = add nsw i64 %118, 7
  %120 = add i64 %119, %110
  %121 = inttoptr i64 %120 to i32*
  store atomic volatile i32 %115, i32* %121 monotonic, align 4
  %122 = load i64, i64* %58, align 8
  %123 = add nsw i64 %108, 2
  %124 = load i64, i64* %73, align 8
  %125 = add i64 %124, 3
  %126 = inttoptr i64 %125 to i32*
  %127 = load i32, i32* %126, align 4
  %128 = and i32 %127, -2
  %129 = trunc i64 %108 to i32
  %130 = shl i32 %129, 2
  %131 = add i32 %130, 4
  %132 = sext i32 %131 to i64
  %133 = add nsw i64 %132, 7
  %134 = add i64 %133, %122
  %135 = inttoptr i64 %134 to i32*
  store atomic volatile i32 %128, i32* %135 monotonic, align 4
  %136 = add i32 %109, -2
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %107

138:                                              ; preds = %107, %101
  %139 = phi i64 [ undef, %101 ], [ %123, %107 ]
  %140 = phi i64 [ %102, %101 ], [ %123, %107 ]
  %141 = icmp eq i32 %103, 0
  br i1 %141, label %156, label %142

142:                                              ; preds = %138
  %143 = load i64, i64* %58, align 8
  %144 = load i64, i64* %73, align 8
  %145 = add i64 %144, 3
  %146 = inttoptr i64 %145 to i32*
  %147 = load i32, i32* %146, align 4
  %148 = and i32 %147, -2
  %149 = trunc i64 %140 to i32
  %150 = shl i32 %149, 2
  %151 = sext i32 %150 to i64
  %152 = add nsw i64 %151, 7
  %153 = add i64 %152, %143
  %154 = inttoptr i64 %153 to i32*
  store atomic volatile i32 %148, i32* %154 monotonic, align 4
  %155 = add nsw i64 %140, 1
  br label %156

156:                                              ; preds = %138, %142
  %157 = phi i64 [ %139, %138 ], [ %155, %142 ]
  %158 = trunc i64 %157 to i32
  br label %159

159:                                              ; preds = %156, %90
  %160 = phi i32 [ %79, %90 ], [ %158, %156 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #13
  %161 = load i64, i64* %43, align 8
  br label %162

162:                                              ; preds = %74, %159
  %163 = phi i64 [ %161, %159 ], [ %75, %74 ]
  %164 = phi i32 [ %160, %159 ], [ %79, %74 ]
  %165 = add nuw nsw i64 %77, 1
  %166 = and i64 %163, -4294967296
  %167 = add i64 %163, 23
  %168 = inttoptr i64 %167 to i32*
  %169 = load i32, i32* %168, align 4
  %170 = zext i32 %169 to i64
  %171 = or i64 %166, %170
  %172 = add i64 %171, 3
  %173 = inttoptr i64 %172 to i32*
  %174 = load i32, i32* %173, align 4
  %175 = ashr i32 %174, 1
  %176 = sext i32 %175 to i64
  %177 = icmp slt i64 %165, %176
  br i1 %177, label %74, label %178

178:                                              ; preds = %162, %51, %49, %12
  %179 = phi i64* [ %13, %12 ], [ %50, %49 ], [ %58, %51 ], [ %58, %162 ]
  ret i64* %179
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug19DiscardBaselineCodeENS0_18SharedFunctionInfoE(%"class.v8::internal::Debug"* nocapture readnone, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::(anonymous namespace)::DiscardBaselineCodeVisitor", align 8
  %4 = alloca %"class.v8::internal::HeapObjectIterator", align 8
  %5 = alloca %"class.v8::internal::JSFunction", align 8
  %6 = and i64 %1, -262144
  %7 = or i64 %6, 16
  %8 = inttoptr i64 %7 to i64*
  %9 = load i64, i64* %8, align 16
  %10 = add i64 %9, -41416
  %11 = inttoptr i64 %10 to %"class.v8::internal::Isolate"*
  %12 = bitcast %"class.v8::internal::(anonymous namespace)::DiscardBaselineCodeVisitor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #13
  %13 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::DiscardBaselineCodeVisitor", %"class.v8::internal::(anonymous namespace)::DiscardBaselineCodeVisitor"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal12_GLOBAL__N_126DiscardBaselineCodeVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::DiscardBaselineCodeVisitor", %"class.v8::internal::(anonymous namespace)::DiscardBaselineCodeVisitor"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 9
  call void @_ZN2v88internal12_GLOBAL__N_126DiscardBaselineCodeVisitor11VisitThreadEPNS0_7IsolateEPNS0_14ThreadLocalTopE(%"class.v8::internal::(anonymous namespace)::DiscardBaselineCodeVisitor"* nonnull %3, %"class.v8::internal::Isolate"* %11, %"class.v8::internal::ThreadLocalTop"* %15)
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 38
  %17 = load %"class.v8::internal::ThreadManager"*, %"class.v8::internal::ThreadManager"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::DiscardBaselineCodeVisitor", %"class.v8::internal::(anonymous namespace)::DiscardBaselineCodeVisitor"* %3, i64 0, i32 0
  call void @_ZN2v88internal13ThreadManager22IterateArchivedThreadsEPNS0_13ThreadVisitorE(%"class.v8::internal::ThreadManager"* %17, %"class.v8::internal::ThreadVisitor"* nonnull %18) #13
  %19 = bitcast %"class.v8::internal::HeapObjectIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %19) #13
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 2
  call void @_ZN2v88internal18HeapObjectIteratorC1EPNS0_4HeapENS1_20HeapObjectsFilteringE(%"class.v8::internal::HeapObjectIterator"* nonnull %4, %"class.v8::internal::Heap"* %20, i32 0) #13
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 41
  %22 = call i64* @_ZN2v88internal8Builtins14builtin_handleEi(%"class.v8::internal::Builtins"* %21, i32 69) #13
  %23 = and i64 %1, -4294967296
  %24 = add i64 %1, 3
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 acquire, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %23, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = or i64 %23, %32
  store atomic volatile i32 %31, i32* %25 release, align 4
  %34 = and i64 %32, 1
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %57, label %36

36:                                               ; preds = %2
  %37 = or i64 %6, 8
  %38 = inttoptr i64 %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = and i64 %39, 262144
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %36
  %43 = inttoptr i64 %7 to %"class.v8::internal::Heap"**
  %44 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %43, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %44, i64 %1, i64 %24, i64 %33) #13
  br label %45

45:                                               ; preds = %42, %36
  %46 = and i64 %33, -262144
  %47 = or i64 %46, 8
  %48 = inttoptr i64 %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = and i64 %49, 24
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %45
  %53 = load i64, i64* %38, align 8
  %54 = and i64 %53, 24
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %52
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %1, i64 %24, i64 %33) #13
  br label %57

57:                                               ; preds = %2, %45, %52, %56
  %58 = call i64 @_ZN2v88internal18HeapObjectIterator4NextEv(%"class.v8::internal::HeapObjectIterator"* nonnull %4) #13
  %59 = trunc i64 %58 to i32
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %57
  %62 = bitcast %"class.v8::internal::JSFunction"* %5 to i8*
  %63 = getelementptr inbounds %"class.v8::internal::JSFunction", %"class.v8::internal::JSFunction"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = trunc i64 %1 to i32
  br label %66

65:                                               ; preds = %108, %57
  call void @_ZN2v88internal18HeapObjectIteratorD1Ev(%"class.v8::internal::HeapObjectIterator"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %19) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #13
  ret void

66:                                               ; preds = %61, %108
  %67 = phi i64 [ %58, %61 ], [ %109, %108 ]
  %68 = and i64 %67, -4294967296
  %69 = add i64 %67, -1
  %70 = inttoptr i64 %69 to i32*
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = zext i32 %71 to i64
  %73 = or i64 %68, %72
  %74 = add i64 %73, 7
  %75 = inttoptr i64 %74 to i16*
  %76 = load atomic i16, i16* %75 monotonic, align 2
  %77 = add i16 %76, -1059
  %78 = icmp ult i16 %77, 15
  br i1 %78, label %79, label %108

79:                                               ; preds = %66
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #13
  store i64 %67, i64* %63, align 8
  %80 = add i64 %67, 11
  %81 = inttoptr i64 %80 to i32*
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = icmp eq i32 %82, %64
  br i1 %83, label %84, label %107

84:                                               ; preds = %79
  %85 = call zeroext i1 @_ZNK2v88internal10JSFunction20ActiveTierIsBaselineEv(%"class.v8::internal::JSFunction"* nonnull %5) #13
  br i1 %85, label %86, label %107

86:                                               ; preds = %84
  %87 = load i64, i64* %22, align 8
  %88 = load i64, i64* %63, align 8
  %89 = add i64 %88, 23
  %90 = inttoptr i64 %89 to i32*
  %91 = trunc i64 %87 to i32
  store atomic volatile i32 %91, i32* %90 monotonic, align 4
  %92 = load i64, i64* %63, align 8
  %93 = add i64 %92, 23
  %94 = and i64 %87, 1
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %107, label %96

96:                                               ; preds = %86
  %97 = and i64 %92, -262144
  %98 = or i64 %97, 8
  %99 = inttoptr i64 %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = and i64 %100, 262144
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %107, label %103

103:                                              ; preds = %96
  %104 = or i64 %97, 16
  %105 = inttoptr i64 %104 to %"class.v8::internal::Heap"**
  %106 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %105, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %106, i64 %92, i64 %93, i64 %87) #13
  br label %107

107:                                              ; preds = %79, %103, %96, %86, %84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #13
  br label %108

108:                                              ; preds = %66, %107
  %109 = call i64 @_ZN2v88internal18HeapObjectIterator4NextEv(%"class.v8::internal::HeapObjectIterator"* nonnull %4) #13
  %110 = trunc i64 %109 to i32
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %65, label %66
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2v88internal12_GLOBAL__N_126DiscardBaselineCodeVisitor11VisitThreadEPNS0_7IsolateEPNS0_14ThreadLocalTopE(%"class.v8::internal::(anonymous namespace)::DiscardBaselineCodeVisitor"* nocapture readonly, %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadLocalTop"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::JavaScriptFrameIterator", align 8
  %5 = alloca %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", align 8
  %6 = alloca %"class.v8::internal::Code", align 8
  %7 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::DiscardBaselineCodeVisitor", %"class.v8::internal::(anonymous namespace)::DiscardBaselineCodeVisitor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = icmp eq i32 %9, 0
  %11 = bitcast %"class.v8::internal::JavaScriptFrameIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1616, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"class.v8::internal::JavaScriptFrameIterator", %"class.v8::internal::JavaScriptFrameIterator"* %4, i64 0, i32 0
  call void @_ZN2v88internal18StackFrameIteratorC1EPNS0_7IsolateEPNS0_14ThreadLocalTopE(%"class.v8::internal::StackFrameIterator"* nonnull %12, %"class.v8::internal::Isolate"* %1, %"class.v8::internal::ThreadLocalTop"* %2) #13
  %13 = getelementptr inbounds %"class.v8::internal::JavaScriptFrameIterator", %"class.v8::internal::JavaScriptFrameIterator"* %4, i64 0, i32 0, i32 0, i32 23
  %14 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %13, align 8
  %15 = icmp eq %"class.v8::internal::StackFrame"* %14, null
  br i1 %15, label %94, label %16

16:                                               ; preds = %3
  call void @_ZN2v88internal23JavaScriptFrameIterator7AdvanceEv(%"class.v8::internal::JavaScriptFrameIterator"* nonnull %4) #13
  %17 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %13, align 8
  %18 = bitcast %"class.v8::internal::StackFrame"* %17 to %"class.v8::internal::JavaScriptFrame"*
  %19 = icmp eq %"class.v8::internal::StackFrame"* %17, null
  br i1 %19, label %94, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.v8::internal::StackFrame"** %13 to %"class.v8::internal::JavaScriptFrame"**
  %22 = bitcast %"class.v8::internal::Code"* %6 to i8*
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 41
  %24 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %5 to i8*
  %26 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %5, i64 0, i32 0
  br i1 %10, label %28, label %95

28:                                               ; preds = %20, %90
  %29 = phi %"class.v8::internal::JavaScriptFrame"* [ %93, %90 ], [ %18, %20 ]
  %30 = bitcast %"class.v8::internal::JavaScriptFrame"* %29 to i32 (%"class.v8::internal::JavaScriptFrame"*)***
  %31 = load i32 (%"class.v8::internal::JavaScriptFrame"*)**, i32 (%"class.v8::internal::JavaScriptFrame"*)*** %30, align 8
  %32 = load i32 (%"class.v8::internal::JavaScriptFrame"*)*, i32 (%"class.v8::internal::JavaScriptFrame"*)** %31, align 8
  %33 = call i32 %32(%"class.v8::internal::JavaScriptFrame"* %29) #13
  %34 = icmp eq i32 %33, 12
  %35 = load %"class.v8::internal::JavaScriptFrame"*, %"class.v8::internal::JavaScriptFrame"** %21, align 8
  br i1 %34, label %66, label %36

36:                                               ; preds = %28
  %37 = bitcast %"class.v8::internal::JavaScriptFrame"* %35 to i32 (%"class.v8::internal::JavaScriptFrame"*)***
  %38 = load i32 (%"class.v8::internal::JavaScriptFrame"*)**, i32 (%"class.v8::internal::JavaScriptFrame"*)*** %37, align 8
  %39 = load i32 (%"class.v8::internal::JavaScriptFrame"*)*, i32 (%"class.v8::internal::JavaScriptFrame"*)** %38, align 8
  %40 = call i32 %39(%"class.v8::internal::JavaScriptFrame"* %35) #13
  %41 = icmp eq i32 %40, 11
  br i1 %41, label %42, label %90

42:                                               ; preds = %36
  %43 = load %"class.v8::internal::JavaScriptFrame"*, %"class.v8::internal::JavaScriptFrame"** %21, align 8
  %44 = getelementptr inbounds %"class.v8::internal::JavaScriptFrame", %"class.v8::internal::JavaScriptFrame"* %43, i64 0, i32 0, i32 0, i32 0, i32 3, i32 2
  %45 = load i64*, i64** %44, align 8
  %46 = load i64, i64* %45, align 8
  %47 = call i32 @_ZN2v88internal17InstructionStream13TryLookupCodeEPNS0_7IsolateEm(%"class.v8::internal::Isolate"* %1, i64 %46) #13
  %48 = or i32 %47, 1
  %49 = icmp eq i32 %48, 83
  br i1 %49, label %50, label %90

50:                                               ; preds = %42
  %51 = icmp eq i32 %47, 82
  %52 = load i64*, i64** %44, align 8
  %53 = select i1 %51, i32 76, i32 77
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  %54 = call i64 @_ZN2v88internal8Builtins7builtinEi(%"class.v8::internal::Builtins"* %23, i32 %53) #13
  store i64 %54, i64* %24, align 8
  %55 = add i64 %54, 27
  %56 = inttoptr i64 %55 to i32*
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 536870912
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %62, label %60, !prof !3

60:                                               ; preds = %50
  %61 = call i64 @_ZNK2v88internal4Code23OffHeapInstructionStartEv(%"class.v8::internal::Code"* nonnull %6) #13
  br label %64

62:                                               ; preds = %50
  %63 = add i64 %54, 63
  br label %64

64:                                               ; preds = %62, %60
  %65 = phi i64 [ %61, %60 ], [ %63, %62 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  store i64 %65, i64* %52, align 8
  br label %90

66:                                               ; preds = %28
  %67 = bitcast %"class.v8::internal::JavaScriptFrame"* %35 to %"class.v8::internal::BaselineFrame"*
  %68 = bitcast %"class.v8::internal::JavaScriptFrame"* %35 to i32 (%"class.v8::internal::BaselineFrame"*)***
  %69 = load i32 (%"class.v8::internal::BaselineFrame"*)**, i32 (%"class.v8::internal::BaselineFrame"*)*** %68, align 8
  %70 = getelementptr inbounds i32 (%"class.v8::internal::BaselineFrame"*)*, i32 (%"class.v8::internal::BaselineFrame"*)** %69, i64 22
  %71 = load i32 (%"class.v8::internal::BaselineFrame"*)*, i32 (%"class.v8::internal::BaselineFrame"*)** %70, align 8
  %72 = call i32 %71(%"class.v8::internal::BaselineFrame"* %67) #13
  %73 = getelementptr inbounds %"class.v8::internal::JavaScriptFrame", %"class.v8::internal::JavaScriptFrame"* %35, i64 0, i32 0, i32 0, i32 0, i32 3, i32 2
  %74 = load i64*, i64** %73, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #13
  %75 = call i64* @_ZN2v88internal8Builtins14builtin_handleEi(%"class.v8::internal::Builtins"* %23, i32 77) #13
  %76 = load i64, i64* %75, align 8
  store i64 %76, i64* %26, align 8
  %77 = add i64 %76, 27
  %78 = inttoptr i64 %77 to i32*
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 536870912
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %84, label %82, !prof !3

82:                                               ; preds = %66
  %83 = call i64 @_ZNK2v88internal4Code23OffHeapInstructionStartEv(%"class.v8::internal::Code"* nonnull %27) #13
  br label %86

84:                                               ; preds = %66
  %85 = add i64 %76, 63
  br label %86

86:                                               ; preds = %84, %82
  %87 = phi i64 [ %83, %82 ], [ %85, %84 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #13
  store i64 %87, i64* %74, align 8
  %88 = call %"class.v8::internal::StackFrame"* @_ZN2v88internal18StackFrameIterator7ReframeEv(%"class.v8::internal::StackFrameIterator"* nonnull %12) #13
  %89 = bitcast %"class.v8::internal::StackFrame"* %88 to %"class.v8::internal::InterpretedFrame"*
  call void @_ZN2v88internal16InterpretedFrame19PatchBytecodeOffsetEi(%"class.v8::internal::InterpretedFrame"* %89, i32 %72) #13
  br label %90

90:                                               ; preds = %86, %64, %42, %36
  call void @_ZN2v88internal23JavaScriptFrameIterator7AdvanceEv(%"class.v8::internal::JavaScriptFrameIterator"* nonnull %4) #13
  %91 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %13, align 8
  %92 = icmp eq %"class.v8::internal::StackFrame"* %91, null
  %93 = bitcast %"class.v8::internal::StackFrame"* %91 to %"class.v8::internal::JavaScriptFrame"*
  br i1 %92, label %94, label %28

94:                                               ; preds = %170, %90, %3, %16
  call void @llvm.lifetime.end.p0i8(i64 1616, i8* nonnull %11) #13
  ret void

95:                                               ; preds = %20, %170
  %96 = phi %"class.v8::internal::JavaScriptFrame"* [ %173, %170 ], [ %18, %20 ]
  %97 = bitcast %"class.v8::internal::JavaScriptFrame"* %96 to i64 (%"class.v8::internal::JavaScriptFrame"*)***
  %98 = load i64 (%"class.v8::internal::JavaScriptFrame"*)**, i64 (%"class.v8::internal::JavaScriptFrame"*)*** %97, align 8
  %99 = getelementptr inbounds i64 (%"class.v8::internal::JavaScriptFrame"*)*, i64 (%"class.v8::internal::JavaScriptFrame"*)** %98, i64 13
  %100 = load i64 (%"class.v8::internal::JavaScriptFrame"*)*, i64 (%"class.v8::internal::JavaScriptFrame"*)** %99, align 8
  %101 = call i64 %100(%"class.v8::internal::JavaScriptFrame"* %96) #13
  %102 = add i64 %101, 11
  %103 = inttoptr i64 %102 to i32*
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = load i64, i64* %7, align 8
  %106 = trunc i64 %105 to i32
  %107 = icmp eq i32 %104, %106
  br i1 %107, label %108, label %170

108:                                              ; preds = %95
  %109 = load %"class.v8::internal::JavaScriptFrame"*, %"class.v8::internal::JavaScriptFrame"** %21, align 8
  %110 = bitcast %"class.v8::internal::JavaScriptFrame"* %109 to i32 (%"class.v8::internal::JavaScriptFrame"*)***
  %111 = load i32 (%"class.v8::internal::JavaScriptFrame"*)**, i32 (%"class.v8::internal::JavaScriptFrame"*)*** %110, align 8
  %112 = load i32 (%"class.v8::internal::JavaScriptFrame"*)*, i32 (%"class.v8::internal::JavaScriptFrame"*)** %111, align 8
  %113 = call i32 %112(%"class.v8::internal::JavaScriptFrame"* %109) #13
  %114 = icmp eq i32 %113, 12
  %115 = load %"class.v8::internal::JavaScriptFrame"*, %"class.v8::internal::JavaScriptFrame"** %21, align 8
  br i1 %114, label %116, label %140

116:                                              ; preds = %108
  %117 = bitcast %"class.v8::internal::JavaScriptFrame"* %115 to %"class.v8::internal::BaselineFrame"*
  %118 = bitcast %"class.v8::internal::JavaScriptFrame"* %115 to i32 (%"class.v8::internal::BaselineFrame"*)***
  %119 = load i32 (%"class.v8::internal::BaselineFrame"*)**, i32 (%"class.v8::internal::BaselineFrame"*)*** %118, align 8
  %120 = getelementptr inbounds i32 (%"class.v8::internal::BaselineFrame"*)*, i32 (%"class.v8::internal::BaselineFrame"*)** %119, i64 22
  %121 = load i32 (%"class.v8::internal::BaselineFrame"*)*, i32 (%"class.v8::internal::BaselineFrame"*)** %120, align 8
  %122 = call i32 %121(%"class.v8::internal::BaselineFrame"* %117) #13
  %123 = getelementptr inbounds %"class.v8::internal::JavaScriptFrame", %"class.v8::internal::JavaScriptFrame"* %115, i64 0, i32 0, i32 0, i32 0, i32 3, i32 2
  %124 = load i64*, i64** %123, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #13
  %125 = call i64* @_ZN2v88internal8Builtins14builtin_handleEi(%"class.v8::internal::Builtins"* %23, i32 77) #13
  %126 = load i64, i64* %125, align 8
  store i64 %126, i64* %26, align 8
  %127 = add i64 %126, 27
  %128 = inttoptr i64 %127 to i32*
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = and i32 %129, 536870912
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %134, label %132, !prof !3

132:                                              ; preds = %116
  %133 = call i64 @_ZNK2v88internal4Code23OffHeapInstructionStartEv(%"class.v8::internal::Code"* nonnull %27) #13
  br label %136

134:                                              ; preds = %116
  %135 = add i64 %126, 63
  br label %136

136:                                              ; preds = %132, %134
  %137 = phi i64 [ %133, %132 ], [ %135, %134 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #13
  store i64 %137, i64* %124, align 8
  %138 = call %"class.v8::internal::StackFrame"* @_ZN2v88internal18StackFrameIterator7ReframeEv(%"class.v8::internal::StackFrameIterator"* nonnull %12) #13
  %139 = bitcast %"class.v8::internal::StackFrame"* %138 to %"class.v8::internal::InterpretedFrame"*
  call void @_ZN2v88internal16InterpretedFrame19PatchBytecodeOffsetEi(%"class.v8::internal::InterpretedFrame"* %139, i32 %122) #13
  br label %170

140:                                              ; preds = %108
  %141 = bitcast %"class.v8::internal::JavaScriptFrame"* %115 to i32 (%"class.v8::internal::JavaScriptFrame"*)***
  %142 = load i32 (%"class.v8::internal::JavaScriptFrame"*)**, i32 (%"class.v8::internal::JavaScriptFrame"*)*** %141, align 8
  %143 = load i32 (%"class.v8::internal::JavaScriptFrame"*)*, i32 (%"class.v8::internal::JavaScriptFrame"*)** %142, align 8
  %144 = call i32 %143(%"class.v8::internal::JavaScriptFrame"* %115) #13
  %145 = icmp eq i32 %144, 11
  br i1 %145, label %146, label %170

146:                                              ; preds = %140
  %147 = load %"class.v8::internal::JavaScriptFrame"*, %"class.v8::internal::JavaScriptFrame"** %21, align 8
  %148 = getelementptr inbounds %"class.v8::internal::JavaScriptFrame", %"class.v8::internal::JavaScriptFrame"* %147, i64 0, i32 0, i32 0, i32 0, i32 3, i32 2
  %149 = load i64*, i64** %148, align 8
  %150 = load i64, i64* %149, align 8
  %151 = call i32 @_ZN2v88internal17InstructionStream13TryLookupCodeEPNS0_7IsolateEm(%"class.v8::internal::Isolate"* %1, i64 %150) #13
  %152 = or i32 %151, 1
  %153 = icmp eq i32 %152, 83
  br i1 %153, label %154, label %170

154:                                              ; preds = %146
  %155 = icmp eq i32 %151, 82
  %156 = load i64*, i64** %148, align 8
  %157 = select i1 %155, i32 76, i32 77
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  %158 = call i64 @_ZN2v88internal8Builtins7builtinEi(%"class.v8::internal::Builtins"* %23, i32 %157) #13
  store i64 %158, i64* %24, align 8
  %159 = add i64 %158, 27
  %160 = inttoptr i64 %159 to i32*
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 536870912
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %166, label %164, !prof !3

164:                                              ; preds = %154
  %165 = call i64 @_ZNK2v88internal4Code23OffHeapInstructionStartEv(%"class.v8::internal::Code"* nonnull %6) #13
  br label %168

166:                                              ; preds = %154
  %167 = add i64 %158, 63
  br label %168

168:                                              ; preds = %164, %166
  %169 = phi i64 [ %165, %164 ], [ %167, %166 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  store i64 %169, i64* %156, align 8
  br label %170

170:                                              ; preds = %95, %168, %146, %136, %140
  call void @_ZN2v88internal23JavaScriptFrameIterator7AdvanceEv(%"class.v8::internal::JavaScriptFrameIterator"* nonnull %4) #13
  %171 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %13, align 8
  %172 = icmp eq %"class.v8::internal::StackFrame"* %171, null
  %173 = bitcast %"class.v8::internal::StackFrame"* %171 to %"class.v8::internal::JavaScriptFrame"*
  br i1 %172, label %94, label %95
}

declare void @_ZN2v88internal13ThreadManager22IterateArchivedThreadsEPNS0_13ThreadVisitorE(%"class.v8::internal::ThreadManager"*, %"class.v8::internal::ThreadVisitor"*) local_unnamed_addr #3

declare void @_ZN2v88internal18HeapObjectIteratorC1EPNS0_4HeapENS1_20HeapObjectsFilteringE(%"class.v8::internal::HeapObjectIterator"*, %"class.v8::internal::Heap"*, i32) unnamed_addr #3

declare i64* @_ZN2v88internal8Builtins14builtin_handleEi(%"class.v8::internal::Builtins"*, i32) local_unnamed_addr #3

declare i64 @_ZN2v88internal18HeapObjectIterator4NextEv(%"class.v8::internal::HeapObjectIterator"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v88internal10JSFunction20ActiveTierIsBaselineEv(%"class.v8::internal::JSFunction"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v88internal18HeapObjectIteratorD1Ev(%"class.v8::internal::HeapObjectIterator"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug22DiscardAllBaselineCodeEv(%"class.v8::internal::Debug"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::(anonymous namespace)::DiscardBaselineCodeVisitor", align 8
  %3 = alloca %"class.v8::internal::HeapObjectIterator", align 8
  %4 = bitcast %"class.v8::internal::(anonymous namespace)::DiscardBaselineCodeVisitor"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::DiscardBaselineCodeVisitor", %"class.v8::internal::(anonymous namespace)::DiscardBaselineCodeVisitor"* %2, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal12_GLOBAL__N_126DiscardBaselineCodeVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::DiscardBaselineCodeVisitor", %"class.v8::internal::(anonymous namespace)::DiscardBaselineCodeVisitor"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 9
  call void @_ZN2v88internal12_GLOBAL__N_126DiscardBaselineCodeVisitor11VisitThreadEPNS0_7IsolateEPNS0_14ThreadLocalTopE(%"class.v8::internal::(anonymous namespace)::DiscardBaselineCodeVisitor"* nonnull %2, %"class.v8::internal::Isolate"* %8, %"class.v8::internal::ThreadLocalTop"* %9)
  %10 = bitcast %"class.v8::internal::HeapObjectIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #13
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 2
  call void @_ZN2v88internal18HeapObjectIteratorC1EPNS0_4HeapENS1_20HeapObjectsFilteringE(%"class.v8::internal::HeapObjectIterator"* nonnull %3, %"class.v8::internal::Heap"* %12, i32 0) #13
  %13 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 41
  %15 = call i64* @_ZN2v88internal8Builtins14builtin_handleEi(%"class.v8::internal::Builtins"* %14, i32 69) #13
  %16 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 38
  %18 = load %"class.v8::internal::ThreadManager"*, %"class.v8::internal::ThreadManager"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::DiscardBaselineCodeVisitor", %"class.v8::internal::(anonymous namespace)::DiscardBaselineCodeVisitor"* %2, i64 0, i32 0
  call void @_ZN2v88internal13ThreadManager22IterateArchivedThreadsEPNS0_13ThreadVisitorE(%"class.v8::internal::ThreadManager"* %18, %"class.v8::internal::ThreadVisitor"* nonnull %19) #13
  %20 = call i64 @_ZN2v88internal18HeapObjectIterator4NextEv(%"class.v8::internal::HeapObjectIterator"* nonnull %3) #13
  %21 = trunc i64 %20 to i32
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %78, %1
  call void @_ZN2v88internal18HeapObjectIteratorD1Ev(%"class.v8::internal::HeapObjectIterator"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #13
  ret void

24:                                               ; preds = %1, %78
  %25 = phi i64 [ %79, %78 ], [ %20, %1 ]
  %26 = and i64 %25, -4294967296
  %27 = add i64 %25, -1
  %28 = inttoptr i64 %27 to i32*
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %26, %30
  %32 = add i64 %31, 7
  %33 = inttoptr i64 %32 to i16*
  %34 = load atomic i16, i16* %33 monotonic, align 2
  %35 = add i16 %34, -1059
  %36 = icmp ult i16 %35, 15
  br i1 %36, label %37, label %78

37:                                               ; preds = %24
  %38 = add i64 %25, 11
  %39 = inttoptr i64 %38 to i32*
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = zext i32 %40 to i64
  %42 = or i64 %26, %41
  %43 = add i64 %42, 3
  %44 = inttoptr i64 %43 to i32*
  %45 = load atomic i32, i32* %44 acquire, align 4
  %46 = zext i32 %45 to i64
  %47 = and i64 %46, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %78, label %49

49:                                               ; preds = %37
  %50 = or i64 %26, %46
  %51 = add i64 %50, -1
  %52 = inttoptr i64 %51 to i32*
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = zext i32 %53 to i64
  %55 = or i64 %26, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load atomic i16, i16* %57 monotonic, align 2
  %59 = icmp eq i16 %58, 94
  br i1 %59, label %60, label %78

60:                                               ; preds = %49
  %61 = load i64, i64* %15, align 8
  %62 = add i64 %25, 23
  %63 = inttoptr i64 %62 to i32*
  %64 = trunc i64 %61 to i32
  store atomic volatile i32 %64, i32* %63 monotonic, align 4
  %65 = and i64 %61, 1
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %78, label %67

67:                                               ; preds = %60
  %68 = and i64 %25, -262144
  %69 = or i64 %68, 8
  %70 = inttoptr i64 %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = and i64 %71, 262144
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %67
  %75 = or i64 %68, 16
  %76 = inttoptr i64 %75 to %"class.v8::internal::Heap"**
  %77 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %76, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %77, i64 %25, i64 %62, i64 %61) #13
  br label %78

78:                                               ; preds = %37, %49, %60, %67, %74, %24
  %79 = call i64 @_ZN2v88internal18HeapObjectIterator4NextEv(%"class.v8::internal::HeapObjectIterator"* nonnull %3) #13
  %80 = trunc i64 %79 to i32
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %23, label %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug18DeoptimizeFunctionENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* nocapture readonly, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Code::OptimizedCodeIterator", align 8
  %4 = alloca %"class.v8::internal::Code", align 8
  %5 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %6 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  tail call void @_ZN2v88internal7Isolate27AbortConcurrentOptimizationENS0_16BlockingBehaviorE(%"class.v8::internal::Isolate"* %6, i32 0) #13
  %7 = load i64, i64* %1, align 8
  %8 = and i64 %7, -4294967296
  %9 = add i64 %7, 3
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 acquire, align 4
  %12 = zext i32 %11 to i64
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %2
  %16 = or i64 %8, %12
  %17 = add i64 %16, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %8, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = icmp eq i16 %24, 94
  br i1 %25, label %26, label %28

26:                                               ; preds = %15
  %27 = load i64, i64* %1, align 8
  tail call void @_ZN2v88internal5Debug19DiscardBaselineCodeENS0_18SharedFunctionInfoE(%"class.v8::internal::Debug"* undef, i64 %27)
  br label %28

28:                                               ; preds = %2, %26, %15
  %29 = bitcast %"class.v8::internal::Code::OptimizedCodeIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #13
  %30 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  call void @_ZN2v88internal4Code21OptimizedCodeIteratorC1EPNS0_7IsolateE(%"class.v8::internal::Code::OptimizedCodeIterator"* nonnull %3, %"class.v8::internal::Isolate"* %30) #13
  %31 = bitcast %"class.v8::internal::Code"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #13
  %32 = call i64 @_ZN2v88internal4Code21OptimizedCodeIterator4NextEv(%"class.v8::internal::Code::OptimizedCodeIterator"* nonnull %3) #13
  %33 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %32, i64* %33, align 8
  %34 = trunc i64 %32 to i32
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  br label %63

37:                                               ; preds = %28, %53
  %38 = phi i8 [ %54, %53 ], [ 0, %28 ]
  %39 = load i64, i64* %1, align 8
  %40 = call zeroext i1 @_ZN2v88internal4Code7InlinesENS0_18SharedFunctionInfoE(%"class.v8::internal::Code"* nonnull %4, i64 %39) #13
  br i1 %40, label %41, label %53

41:                                               ; preds = %37
  %42 = load i64, i64* %33, align 8
  %43 = and i64 %42, -4294967296
  %44 = add i64 %42, 15
  %45 = inttoptr i64 %44 to i32*
  %46 = load atomic i32, i32* %45 acquire, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %43, %47
  %49 = add i64 %48, 7
  %50 = inttoptr i64 %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = or i32 %51, 1
  store atomic volatile i32 %52, i32* %50 monotonic, align 4
  br label %53

53:                                               ; preds = %37, %41
  %54 = phi i8 [ 1, %41 ], [ %38, %37 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #13
  %55 = call i64 @_ZN2v88internal4Code21OptimizedCodeIterator4NextEv(%"class.v8::internal::Code::OptimizedCodeIterator"* nonnull %3) #13
  store i64 %55, i64* %33, align 8
  %56 = trunc i64 %55 to i32
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %37

58:                                               ; preds = %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  %59 = and i8 %54, 1
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %63, label %61

61:                                               ; preds = %58
  %62 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  call void @_ZN2v88internal11Deoptimizer20DeoptimizeMarkedCodeEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %62) #13
  br label %63

63:                                               ; preds = %36, %58, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #13
  ret void
}

declare void @_ZN2v88internal7Isolate27AbortConcurrentOptimizationENS0_16BlockingBehaviorE(%"class.v8::internal::Isolate"*, i32) local_unnamed_addr #3

declare void @_ZN2v88internal4Code21OptimizedCodeIteratorC1EPNS0_7IsolateE(%"class.v8::internal::Code::OptimizedCodeIterator"*, %"class.v8::internal::Isolate"*) unnamed_addr #3

declare i64 @_ZN2v88internal4Code21OptimizedCodeIterator4NextEv(%"class.v8::internal::Code::OptimizedCodeIterator"*) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal4Code7InlinesENS0_18SharedFunctionInfoE(%"class.v8::internal::Code"*, i64) local_unnamed_addr #3

declare void @_ZN2v88internal11Deoptimizer20DeoptimizeMarkedCodeEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare void @_ZN2v88internal18SharedFunctionInfo20InstallDebugBytecodeENS0_6HandleIS1_EEPNS0_7IsolateE(i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare void @_ZN2v88internal11Deoptimizer13DeoptimizeAllEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug27InstallDebugBreakTrampolineEv(%"class.v8::internal::Debug"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %3 = alloca %"class.std::__1::vector.1563", align 8
  %4 = alloca %"class.v8::internal::HeapObjectIterator", align 8
  %5 = alloca %"class.v8::internal::FeedbackVector", align 8
  %6 = alloca %"class.v8::internal::DebugInfo", align 8
  %7 = alloca %"class.v8::internal::IsCompiledScope", align 8
  %8 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %9 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31
  %11 = bitcast %"struct.v8::internal::HandleScopeData"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 10
  %19 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %18, align 8
  %20 = icmp eq %"class.v8::internal::DebugInfoListNode"* %19, null
  br i1 %20, label %312, label %21

21:                                               ; preds = %1
  %22 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %2 to i8*
  %23 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %2, i64 0, i32 0
  br label %25

25:                                               ; preds = %21, %58
  %26 = phi %"class.v8::internal::DebugInfoListNode"* [ %19, %21 ], [ %61, %58 ]
  %27 = phi i8 [ 0, %21 ], [ %59, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  %28 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %26, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %23, align 8
  %31 = call zeroext i1 @_ZNK2v88internal9DebugInfo15CanBreakAtEntryEv(%"class.v8::internal::DebugInfo"* nonnull %24) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  br i1 %31, label %32, label %58

32:                                               ; preds = %25
  %33 = load i64*, i64** %28, align 8
  %34 = load i64, i64* %33, align 8
  %35 = and i64 %34, -4294967296
  %36 = add i64 %34, 3
  %37 = inttoptr i64 %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  %40 = or i64 %35, %39
  %41 = add i64 %40, 3
  %42 = inttoptr i64 %41 to i32*
  %43 = load atomic i32, i32* %42 acquire, align 4
  %44 = zext i32 %43 to i64
  %45 = and i64 %44, 1
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %58, label %47

47:                                               ; preds = %32
  %48 = or i64 %35, %44
  %49 = add i64 %48, -1
  %50 = inttoptr i64 %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %35, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = icmp eq i16 %56, 83
  br i1 %57, label %66, label %58

58:                                               ; preds = %32, %25, %47
  %59 = phi i8 [ 1, %47 ], [ %27, %25 ], [ 1, %32 ]
  %60 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %26, i64 0, i32 1
  %61 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %60, align 8
  %62 = icmp eq %"class.v8::internal::DebugInfoListNode"* %61, null
  br i1 %62, label %63, label %25

63:                                               ; preds = %58
  %64 = and i8 %59, 1
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %312, label %66

66:                                               ; preds = %47, %63
  %67 = phi i1 [ false, %63 ], [ true, %47 ]
  %68 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %68, i64 0, i32 41
  %70 = call i64* @_ZN2v88internal8Builtins14builtin_handleEi(%"class.v8::internal::Builtins"* %69, i32 109) #13
  %71 = bitcast %"class.std::__1::vector.1563"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 24, i1 false) #13
  %72 = bitcast %"class.v8::internal::HeapObjectIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %72) #13
  %73 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %73, i64 0, i32 2
  call void @_ZN2v88internal18HeapObjectIteratorC1EPNS0_4HeapENS1_20HeapObjectsFilteringE(%"class.v8::internal::HeapObjectIterator"* nonnull %4, %"class.v8::internal::Heap"* %74, i32 0) #13
  %75 = call i64 @_ZN2v88internal18HeapObjectIterator4NextEv(%"class.v8::internal::HeapObjectIterator"* nonnull %4) #13
  %76 = trunc i64 %75 to i32
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %88, label %78

78:                                               ; preds = %66
  %79 = bitcast %"class.v8::internal::DebugInfo"* %6 to i8*
  %80 = getelementptr inbounds %"class.v8::internal::DebugInfo", %"class.v8::internal::DebugInfo"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::vector.1563", %"class.std::__1::vector.1563"* %3, i64 0, i32 0, i32 1
  %82 = getelementptr inbounds %"class.std::__1::vector.1563", %"class.std::__1::vector.1563"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %83 = bitcast %"class.v8::internal::Handle.1214"** %81 to i64*
  %84 = bitcast %"class.std::__1::vector.1563"* %3 to i64*
  %85 = bitcast %"class.v8::internal::Handle.1214"** %82 to i64*
  %86 = bitcast %"class.v8::internal::FeedbackVector"* %5 to i8*
  %87 = getelementptr inbounds %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %96

88:                                               ; preds = %271, %66
  call void @_ZN2v88internal18HeapObjectIteratorD1Ev(%"class.v8::internal::HeapObjectIterator"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %72) #13
  %89 = getelementptr inbounds %"class.std::__1::vector.1563", %"class.std::__1::vector.1563"* %3, i64 0, i32 0, i32 0
  %90 = load %"class.v8::internal::Handle.1214"*, %"class.v8::internal::Handle.1214"** %89, align 8
  %91 = getelementptr inbounds %"class.std::__1::vector.1563", %"class.std::__1::vector.1563"* %3, i64 0, i32 0, i32 1
  %92 = load %"class.v8::internal::Handle.1214"*, %"class.v8::internal::Handle.1214"** %91, align 8
  %93 = icmp eq %"class.v8::internal::Handle.1214"* %90, %92
  br i1 %93, label %277, label %94

94:                                               ; preds = %88
  %95 = bitcast %"class.v8::internal::IsCompiledScope"* %7 to i8*
  br label %285

96:                                               ; preds = %78, %271
  %97 = phi i64 [ %75, %78 ], [ %272, %271 ]
  %98 = and i64 %97, -4294967296
  %99 = add i64 %97, -1
  %100 = inttoptr i64 %99 to i32*
  br i1 %67, label %101, label %112

101:                                              ; preds = %96
  %102 = load atomic i32, i32* %100 monotonic, align 4
  %103 = zext i32 %102 to i64
  %104 = or i64 %98, %103
  %105 = add i64 %104, 7
  %106 = inttoptr i64 %105 to i16*
  %107 = load atomic i16, i16* %106 monotonic, align 2
  %108 = icmp eq i16 %107, 167
  br i1 %108, label %109, label %112

109:                                              ; preds = %101
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #13
  store i64 %97, i64* %87, align 8
  %110 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %111 = call zeroext i1 @_ZN2v88internal14FeedbackVector10ClearSlotsEPNS0_7IsolateE(%"class.v8::internal::FeedbackVector"* nonnull %5, %"class.v8::internal::Isolate"* %110) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #13
  br label %271

112:                                              ; preds = %96, %101
  %113 = load atomic i32, i32* %100 monotonic, align 4
  %114 = zext i32 %113 to i64
  %115 = or i64 %98, %114
  %116 = add i64 %115, 7
  %117 = inttoptr i64 %116 to i16*
  %118 = load atomic i16, i16* %117 monotonic, align 2
  %119 = add i16 %118, -1059
  %120 = icmp ult i16 %119, 15
  br i1 %120, label %121, label %271

121:                                              ; preds = %112
  %122 = add i64 %97, 11
  %123 = inttoptr i64 %122 to i32*
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = zext i32 %124 to i64
  %126 = or i64 %98, %125
  %127 = add i64 %126, 15
  %128 = inttoptr i64 %127 to i32*
  %129 = load atomic i32, i32* %128 acquire, align 4
  %130 = zext i32 %129 to i64
  %131 = or i64 %98, %130
  %132 = add i64 %131, -1
  %133 = inttoptr i64 %132 to i32*
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = zext i32 %134 to i64
  %136 = or i64 %98, %135
  %137 = add i64 %136, 7
  %138 = inttoptr i64 %137 to i16*
  %139 = load atomic i16, i16* %138 monotonic, align 2
  %140 = icmp eq i16 %139, 100
  br i1 %140, label %141, label %271

141:                                              ; preds = %121
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #13
  %142 = load atomic i32, i32* %128 acquire, align 4
  %143 = zext i32 %142 to i64
  %144 = or i64 %98, %143
  store i64 %144, i64* %80, align 8
  %145 = call zeroext i1 @_ZNK2v88internal9DebugInfo15CanBreakAtEntryEv(%"class.v8::internal::DebugInfo"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #13
  br i1 %145, label %146, label %271

146:                                              ; preds = %141
  %147 = add i64 %97, 23
  %148 = inttoptr i64 %147 to i32*
  %149 = load atomic i32, i32* %148 acquire, align 4
  %150 = zext i32 %149 to i64
  %151 = or i64 %98, %150
  %152 = add i64 %151, 31
  %153 = inttoptr i64 %152 to i32*
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = icmp eq i32 %154, 85
  br i1 %155, label %180, label %156

156:                                              ; preds = %146
  %157 = load atomic i32, i32* %123 monotonic, align 4
  %158 = zext i32 %157 to i64
  %159 = or i64 %98, %158
  %160 = add i64 %159, 3
  %161 = inttoptr i64 %160 to i32*
  %162 = load atomic i32, i32* %161 acquire, align 4
  %163 = zext i32 %162 to i64
  %164 = or i64 %98, %163
  %165 = icmp eq i32 %162, 170
  br i1 %165, label %180, label %166

166:                                              ; preds = %156
  %167 = and i64 %163, 1
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %255, label %169

169:                                              ; preds = %166
  %170 = add i64 %164, -1
  %171 = inttoptr i64 %170 to i32*
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = zext i32 %172 to i64
  %174 = or i64 %98, %173
  %175 = add i64 %174, 7
  %176 = inttoptr i64 %175 to i16*
  %177 = load atomic i16, i16* %176 monotonic, align 2
  %178 = add i16 %177, -157
  %179 = icmp ugt i16 %178, 1
  br i1 %179, label %255, label %180

180:                                              ; preds = %156, %146, %169
  %181 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %182 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %181, i64 0, i32 31, i32 4
  %183 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %182, align 8
  %184 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %183, null
  br i1 %184, label %188, label %185

185:                                              ; preds = %180
  %186 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %183, i64 %97) #13
  %187 = ptrtoint i64* %186 to i64
  br label %201

188:                                              ; preds = %180
  %189 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %181, i64 0, i32 31, i32 0
  %190 = load i64*, i64** %189, align 8
  %191 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %181, i64 0, i32 31, i32 1
  %192 = load i64*, i64** %191, align 8
  %193 = icmp eq i64* %190, %192
  br i1 %193, label %194, label %196

194:                                              ; preds = %188
  %195 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %181) #13
  br label %196

196:                                              ; preds = %194, %188
  %197 = phi i64* [ %195, %194 ], [ %190, %188 ]
  %198 = ptrtoint i64* %197 to i64
  %199 = add i64 %198, 8
  %200 = inttoptr i64 %199 to i64*
  store i64* %200, i64** %189, align 8
  store i64 %97, i64* %197, align 8
  br label %201

201:                                              ; preds = %185, %196
  %202 = phi i64 [ %187, %185 ], [ %198, %196 ]
  %203 = load %"class.v8::internal::Handle.1214"*, %"class.v8::internal::Handle.1214"** %81, align 8
  %204 = load %"class.v8::internal::Handle.1214"*, %"class.v8::internal::Handle.1214"** %82, align 8
  %205 = icmp ult %"class.v8::internal::Handle.1214"* %203, %204
  %206 = ptrtoint %"class.v8::internal::Handle.1214"* %204 to i64
  br i1 %205, label %207, label %211

207:                                              ; preds = %201
  %208 = bitcast %"class.v8::internal::Handle.1214"* %203 to i64*
  store i64 %202, i64* %208, align 8
  %209 = getelementptr inbounds %"class.v8::internal::Handle.1214", %"class.v8::internal::Handle.1214"* %203, i64 1
  %210 = ptrtoint %"class.v8::internal::Handle.1214"* %209 to i64
  store i64 %210, i64* %83, align 8
  br label %271

211:                                              ; preds = %201
  %212 = ptrtoint %"class.v8::internal::Handle.1214"* %203 to i64
  %213 = load i64, i64* %84, align 8
  %214 = sub i64 %212, %213
  %215 = ashr exact i64 %214, 3
  %216 = add nsw i64 %215, 1
  %217 = icmp ugt i64 %216, 2305843009213693951
  br i1 %217, label %218, label %220

218:                                              ; preds = %211
  %219 = bitcast %"class.std::__1::vector.1563"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %219) #16
  unreachable

220:                                              ; preds = %211
  %221 = sub i64 %206, %213
  %222 = ashr exact i64 %221, 3
  %223 = icmp ult i64 %222, 1152921504606846975
  br i1 %223, label %224, label %232

224:                                              ; preds = %220
  %225 = ashr exact i64 %221, 2
  %226 = icmp ult i64 %225, %216
  %227 = select i1 %226, i64 %216, i64 %225
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %237, label %229

229:                                              ; preds = %224
  %230 = icmp ugt i64 %227, 2305843009213693951
  br i1 %230, label %231, label %232

231:                                              ; preds = %229
  call void @abort() #16
  unreachable

232:                                              ; preds = %229, %220
  %233 = phi i64 [ %227, %229 ], [ 2305843009213693951, %220 ]
  %234 = shl i64 %233, 3
  %235 = call i8* @_Znwm(i64 %234) #17
  %236 = bitcast i8* %235 to %"class.v8::internal::Handle.1214"*
  br label %237

237:                                              ; preds = %232, %224
  %238 = phi i64 [ %233, %232 ], [ 0, %224 ]
  %239 = phi i8* [ %235, %232 ], [ null, %224 ]
  %240 = phi %"class.v8::internal::Handle.1214"* [ %236, %232 ], [ null, %224 ]
  %241 = getelementptr inbounds %"class.v8::internal::Handle.1214", %"class.v8::internal::Handle.1214"* %240, i64 %215
  %242 = getelementptr inbounds %"class.v8::internal::Handle.1214", %"class.v8::internal::Handle.1214"* %240, i64 %238
  %243 = ptrtoint %"class.v8::internal::Handle.1214"* %242 to i64
  %244 = bitcast %"class.v8::internal::Handle.1214"* %241 to i64*
  store i64 %202, i64* %244, align 8
  %245 = getelementptr inbounds %"class.v8::internal::Handle.1214", %"class.v8::internal::Handle.1214"* %241, i64 1
  %246 = ptrtoint %"class.v8::internal::Handle.1214"* %245 to i64
  %247 = ptrtoint %"class.v8::internal::Handle.1214"* %240 to i64
  %248 = icmp sgt i64 %214, 0
  br i1 %248, label %249, label %251

249:                                              ; preds = %237
  %250 = inttoptr i64 %213 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %239, i8* align 8 %250, i64 %214, i1 false) #13
  br label %251

251:                                              ; preds = %249, %237
  store i64 %247, i64* %84, align 8
  store i64 %246, i64* %83, align 8
  store i64 %243, i64* %85, align 8
  %252 = icmp eq i64 %213, 0
  br i1 %252, label %271, label %253

253:                                              ; preds = %251
  %254 = inttoptr i64 %213 to i8*
  call void @_ZdlPv(i8* %254) #17
  br label %271

255:                                              ; preds = %166, %169
  %256 = load i64, i64* %70, align 8
  %257 = trunc i64 %256 to i32
  store atomic volatile i32 %257, i32* %148 monotonic, align 4
  %258 = and i64 %256, 1
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %271, label %260

260:                                              ; preds = %255
  %261 = and i64 %97, -262144
  %262 = or i64 %261, 8
  %263 = inttoptr i64 %262 to i64*
  %264 = load i64, i64* %263, align 8
  %265 = and i64 %264, 262144
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %271, label %267

267:                                              ; preds = %260
  %268 = or i64 %261, 16
  %269 = inttoptr i64 %268 to %"class.v8::internal::Heap"**
  %270 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %269, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %270, i64 %97, i64 %147, i64 %256) #13
  br label %271

271:                                              ; preds = %121, %141, %207, %251, %253, %255, %260, %267, %112, %109
  %272 = call i64 @_ZN2v88internal18HeapObjectIterator4NextEv(%"class.v8::internal::HeapObjectIterator"* nonnull %4) #13
  %273 = trunc i64 %272 to i32
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %88, label %96

275:                                              ; preds = %309
  %276 = load %"class.v8::internal::Handle.1214"*, %"class.v8::internal::Handle.1214"** %89, align 8
  br label %277

277:                                              ; preds = %275, %88
  %278 = phi %"class.v8::internal::Handle.1214"* [ %276, %275 ], [ %90, %88 ]
  %279 = icmp eq %"class.v8::internal::Handle.1214"* %278, null
  br i1 %279, label %284, label %280

280:                                              ; preds = %277
  %281 = ptrtoint %"class.v8::internal::Handle.1214"* %278 to i64
  %282 = bitcast %"class.v8::internal::Handle.1214"** %91 to i64*
  store i64 %281, i64* %282, align 8
  %283 = bitcast %"class.v8::internal::Handle.1214"* %278 to i8*
  call void @_ZdlPv(i8* %283) #17
  br label %284

284:                                              ; preds = %277, %280
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #13
  br label %312

285:                                              ; preds = %94, %309
  %286 = phi %"class.v8::internal::Handle.1214"* [ %90, %94 ], [ %310, %309 ]
  %287 = getelementptr inbounds %"class.v8::internal::Handle.1214", %"class.v8::internal::Handle.1214"* %286, i64 0, i32 0, i32 0
  %288 = load i64*, i64** %287, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %95) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 0, i64 9, i1 false) #13
  %289 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %290 = call zeroext i1 @_ZN2v88internal8Compiler7CompileEPNS0_7IsolateENS0_6HandleINS0_10JSFunctionEEENS1_18ClearExceptionFlagEPNS0_15IsCompiledScopeE(%"class.v8::internal::Isolate"* %289, i64* %288, i32 1, %"class.v8::internal::IsCompiledScope"* nonnull %7) #13
  %291 = load i64, i64* %288, align 8
  %292 = load i64, i64* %70, align 8
  %293 = add i64 %291, 23
  %294 = inttoptr i64 %293 to i32*
  %295 = trunc i64 %292 to i32
  store atomic volatile i32 %295, i32* %294 monotonic, align 4
  %296 = and i64 %292, 1
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %309, label %298

298:                                              ; preds = %285
  %299 = and i64 %291, -262144
  %300 = or i64 %299, 8
  %301 = inttoptr i64 %300 to i64*
  %302 = load i64, i64* %301, align 8
  %303 = and i64 %302, 262144
  %304 = icmp eq i64 %303, 0
  br i1 %304, label %309, label %305

305:                                              ; preds = %298
  %306 = or i64 %299, 16
  %307 = inttoptr i64 %306 to %"class.v8::internal::Heap"**
  %308 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %307, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %308, i64 %291, i64 %293, i64 %292) #13
  br label %309

309:                                              ; preds = %285, %298, %305
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %95) #13
  %310 = getelementptr inbounds %"class.v8::internal::Handle.1214", %"class.v8::internal::Handle.1214"* %286, i64 1
  %311 = icmp eq %"class.v8::internal::Handle.1214"* %310, %92
  br i1 %311, label %275, label %285

312:                                              ; preds = %1, %63, %284
  %313 = icmp eq %"class.v8::internal::Isolate"* %9, null
  br i1 %313, label %327, label %314

314:                                              ; preds = %312
  %315 = inttoptr i64 %12 to i64*
  %316 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %10, i64 0, i32 0
  %317 = load i64*, i64** %316, align 8
  store i64 %12, i64* %11, align 8
  %318 = load i32, i32* %15, align 8
  %319 = add nsw i32 %318, -1
  store i32 %319, i32* %15, align 8
  %320 = load i64*, i64** %13, align 8
  %321 = icmp eq i64* %320, %14
  br i1 %321, label %324, label %322

322:                                              ; preds = %314
  store i64* %14, i64** %13, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %9) #13
  %323 = load i64*, i64** %316, align 8
  br label %324

324:                                              ; preds = %322, %314
  %325 = phi i64* [ %323, %322 ], [ %315, %314 ]
  %326 = phi i64* [ %14, %322 ], [ %317, %314 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %325, i64* %326) #13
  br label %327

327:                                              ; preds = %312, %324
  ret void
}

declare void @_ZN2v88internal23RedirectActiveFunctionsC1ENS0_18SharedFunctionInfoENS1_4ModeE(%"class.v8::internal::RedirectActiveFunctions"*, i64, i32) unnamed_addr #3

declare void @_ZN2v88internal23RedirectActiveFunctions11VisitThreadEPNS0_7IsolateEPNS0_14ThreadLocalTopE(%"class.v8::internal::RedirectActiveFunctions"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadLocalTop"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ThreadVisitorD2Ev(%"class.v8::internal::ThreadVisitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN2v88internal14FeedbackVector10ClearSlotsEPNS0_7IsolateE(%"class.v8::internal::FeedbackVector"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal8Compiler7CompileEPNS0_7IsolateENS0_6HandleINS0_10JSFunctionEEENS1_18ClearExceptionFlagEPNS0_15IsCompiledScopeE(%"class.v8::internal::Isolate"*, i64*, i32, %"class.v8::internal::IsCompiledScope"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal5Debug22GetPossibleBreakpointsENS0_6HandleINS0_6ScriptEEEiibPNSt3__16vectorINS0_13BreakLocationENS5_9allocatorIS7_EEEE(%"class.v8::internal::Debug"* nocapture, i64*, i32, i32, i1 zeroext, %"class.std::__1::vector.1511"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::vector.1542", align 8
  %8 = alloca %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", align 8
  br i1 %4, label %9, label %50

9:                                                ; preds = %6
  %10 = tail call i64* @_ZN2v88internal5Debug35FindInnermostContainingFunctionInfoENS0_6HandleINS0_6ScriptEEEi(%"class.v8::internal::Debug"* %0, i64* %1, i32 %2)
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %13 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 4
  %15 = load i64, i64* %14, align 8
  %16 = trunc i64 %11 to i32
  %17 = trunc i64 %15 to i32
  %18 = icmp eq i32 %16, %17
  br i1 %18, label %137, label %19

19:                                               ; preds = %9
  %20 = tail call zeroext i1 @_ZN2v88internal5Debug15EnsureBreakInfoENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %10)
  br i1 %20, label %21, label %137

21:                                               ; preds = %19
  tail call void @_ZN2v88internal5Debug32PrepareFunctionForDebugExecutionENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %10)
  %22 = load i64, i64* %10, align 8
  %23 = and i64 %22, -4294967296
  %24 = add i64 %22, 15
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 acquire, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %23, %27
  %29 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %12, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 31, i32 4
  %31 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %30, align 8
  %32 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %21
  %34 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %31, i64 %28) #13
  br label %48

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 31, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 31, i32 1
  %39 = load i64*, i64** %38, align 8
  %40 = icmp eq i64* %37, %39
  br i1 %40, label %41, label %43

41:                                               ; preds = %35
  %42 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %29) #13
  br label %43

43:                                               ; preds = %41, %35
  %44 = phi i64* [ %42, %41 ], [ %37, %35 ]
  %45 = ptrtoint i64* %44 to i64
  %46 = add i64 %45, 8
  %47 = inttoptr i64 %46 to i64*
  store i64* %47, i64** %36, align 8
  store i64 %28, i64* %44, align 8
  br label %48

48:                                               ; preds = %33, %43
  %49 = phi i64* [ %34, %33 ], [ %44, %43 ]
  tail call fastcc void @_ZN2v88internal12_GLOBAL__N_122FindBreakablePositionsENS0_6HandleINS0_9DebugInfoEEEiiPNSt3__16vectorINS0_13BreakLocationENS5_9allocatorIS7_EEEE(i64* %49, i32 %2, i32 %3, %"class.std::__1::vector.1511"* %5)
  br label %137

50:                                               ; preds = %6
  %51 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %52 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %52, i64 0, i32 31
  %54 = bitcast %"struct.v8::internal::HandleScopeData"* %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %52, i64 0, i32 31, i32 1
  %57 = load i64*, i64** %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %52, i64 0, i32 31, i32 2
  %59 = load i32, i32* %58, align 8
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %58, align 8
  %61 = bitcast %"class.std::__1::vector.1542"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 0, i64 24, i1 false) #13
  %62 = call zeroext i1 @_ZN2v88internal5Debug40FindSharedFunctionInfosIntersectingRangeENS0_6HandleINS0_6ScriptEEEiiPNSt3__16vectorINS2_INS0_18SharedFunctionInfoEEENS5_9allocatorIS8_EEEE(%"class.v8::internal::Debug"* %0, i64* %1, i32 %2, i32 %3, %"class.std::__1::vector.1542"* nonnull %7)
  br i1 %62, label %63, label %112

63:                                               ; preds = %50
  %64 = getelementptr inbounds %"class.std::__1::vector.1542", %"class.std::__1::vector.1542"* %7, i64 0, i32 0, i32 0
  %65 = load %"class.v8::internal::Handle.769"*, %"class.v8::internal::Handle.769"** %64, align 8
  %66 = getelementptr inbounds %"class.std::__1::vector.1542", %"class.std::__1::vector.1542"* %7, i64 0, i32 0, i32 1
  %67 = load %"class.v8::internal::Handle.769"*, %"class.v8::internal::Handle.769"** %66, align 8
  %68 = icmp eq %"class.v8::internal::Handle.769"* %65, %67
  br i1 %68, label %112, label %69

69:                                               ; preds = %63
  %70 = bitcast %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %8 to i8*
  %71 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %8, i64 0, i32 0
  br label %73

73:                                               ; preds = %69, %108
  %74 = phi %"class.v8::internal::Handle.769"* [ %65, %69 ], [ %110, %108 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #13
  %75 = getelementptr inbounds %"class.v8::internal::Handle.769", %"class.v8::internal::Handle.769"* %74, i64 0, i32 0, i32 0
  %76 = load i64*, i64** %75, align 8
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %71, align 8
  %78 = call zeroext i1 @_ZNK2v88internal18SharedFunctionInfo12HasBreakInfoEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %72) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #13
  br i1 %78, label %80, label %79, !prof !3

79:                                               ; preds = %73
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0)) #16
  unreachable

80:                                               ; preds = %73
  %81 = load i64*, i64** %75, align 8
  %82 = load i64, i64* %81, align 8
  %83 = and i64 %82, -4294967296
  %84 = add i64 %82, 15
  %85 = inttoptr i64 %84 to i32*
  %86 = load atomic i32, i32* %85 acquire, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %83, %87
  %89 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %51, align 8
  %90 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %89, i64 0, i32 31, i32 4
  %91 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %90, align 8
  %92 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %91, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %80
  %94 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %91, i64 %88) #13
  br label %108

95:                                               ; preds = %80
  %96 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %89, i64 0, i32 31, i32 0
  %97 = load i64*, i64** %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %89, i64 0, i32 31, i32 1
  %99 = load i64*, i64** %98, align 8
  %100 = icmp eq i64* %97, %99
  br i1 %100, label %101, label %103

101:                                              ; preds = %95
  %102 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %89) #13
  br label %103

103:                                              ; preds = %101, %95
  %104 = phi i64* [ %102, %101 ], [ %97, %95 ]
  %105 = ptrtoint i64* %104 to i64
  %106 = add i64 %105, 8
  %107 = inttoptr i64 %106 to i64*
  store i64* %107, i64** %96, align 8
  store i64 %88, i64* %104, align 8
  br label %108

108:                                              ; preds = %93, %103
  %109 = phi i64* [ %94, %93 ], [ %104, %103 ]
  call fastcc void @_ZN2v88internal12_GLOBAL__N_122FindBreakablePositionsENS0_6HandleINS0_9DebugInfoEEEiiPNSt3__16vectorINS0_13BreakLocationENS5_9allocatorIS7_EEEE(i64* %109, i32 %2, i32 %3, %"class.std::__1::vector.1511"* %5)
  %110 = getelementptr inbounds %"class.v8::internal::Handle.769", %"class.v8::internal::Handle.769"* %74, i64 1
  %111 = icmp eq %"class.v8::internal::Handle.769"* %110, %67
  br i1 %111, label %112, label %73

112:                                              ; preds = %108, %63, %50
  %113 = phi i1 [ false, %50 ], [ true, %63 ], [ true, %108 ]
  %114 = getelementptr inbounds %"class.std::__1::vector.1542", %"class.std::__1::vector.1542"* %7, i64 0, i32 0, i32 0
  %115 = load %"class.v8::internal::Handle.769"*, %"class.v8::internal::Handle.769"** %114, align 8
  %116 = icmp eq %"class.v8::internal::Handle.769"* %115, null
  br i1 %116, label %122, label %117

117:                                              ; preds = %112
  %118 = ptrtoint %"class.v8::internal::Handle.769"* %115 to i64
  %119 = getelementptr inbounds %"class.std::__1::vector.1542", %"class.std::__1::vector.1542"* %7, i64 0, i32 0, i32 1
  %120 = bitcast %"class.v8::internal::Handle.769"** %119 to i64*
  store i64 %118, i64* %120, align 8
  %121 = bitcast %"class.v8::internal::Handle.769"* %115 to i8*
  call void @_ZdlPv(i8* %121) #17
  br label %122

122:                                              ; preds = %112, %117
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #13
  %123 = icmp eq %"class.v8::internal::Isolate"* %52, null
  br i1 %123, label %137, label %124

124:                                              ; preds = %122
  %125 = inttoptr i64 %55 to i64*
  %126 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %53, i64 0, i32 0
  %127 = load i64*, i64** %126, align 8
  store i64 %55, i64* %54, align 8
  %128 = load i32, i32* %58, align 8
  %129 = add nsw i32 %128, -1
  store i32 %129, i32* %58, align 8
  %130 = load i64*, i64** %56, align 8
  %131 = icmp eq i64* %130, %57
  br i1 %131, label %134, label %132

132:                                              ; preds = %124
  store i64* %57, i64** %56, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %52) #13
  %133 = load i64*, i64** %126, align 8
  br label %134

134:                                              ; preds = %132, %124
  %135 = phi i64* [ %133, %132 ], [ %125, %124 ]
  %136 = phi i64* [ %57, %132 ], [ %127, %124 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %135, i64* %136) #13
  br label %137

137:                                              ; preds = %134, %122, %9, %19, %48
  %138 = phi i1 [ false, %9 ], [ true, %48 ], [ false, %19 ], [ %113, %122 ], [ %113, %134 ]
  ret i1 %138
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal12_GLOBAL__N_122FindBreakablePositionsENS0_6HandleINS0_9DebugInfoEEEiiPNSt3__16vectorINS0_13BreakLocationENS5_9allocatorIS7_EEEE(i64*, i32, i32, %"class.std::__1::vector.1511"*) unnamed_addr #0 {
  %5 = alloca %"class.v8::internal::BreakLocation", align 8
  %6 = alloca %"class.v8::internal::BreakIterator", align 8
  %7 = bitcast %"class.v8::internal::BreakIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %7) #13
  call void @_ZN2v88internal13BreakIteratorC2ENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::BreakIterator"* nonnull %6, i64* %0)
  %8 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 4, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %120, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 2
  %13 = bitcast %"class.v8::internal::BreakLocation"* %5 to i8*
  %14 = getelementptr inbounds %"class.std::__1::vector.1511", %"class.std::__1::vector.1511"* %3, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::vector.1511", %"class.std::__1::vector.1511"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.v8::internal::BreakLocation"** %14 to i64*
  %17 = bitcast %"class.std::__1::vector.1511"* %3 to i64*
  %18 = bitcast %"class.v8::internal::BreakLocation"** %15 to i64*
  %19 = getelementptr inbounds %"class.std::__1::vector.1511", %"class.std::__1::vector.1511"* %3, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 1
  %21 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 4
  %22 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 4, i32 4, i32 2
  %23 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 4, i32 4, i32 3
  %24 = getelementptr inbounds %"class.v8::internal::BreakIterator", %"class.v8::internal::BreakIterator"* %6, i64 0, i32 3
  br label %25

25:                                               ; preds = %115, %11
  %26 = load i32, i32* %12, align 4
  %27 = icmp sge i32 %26, %1
  %28 = icmp slt i32 %26, %2
  %29 = and i1 %27, %28
  br i1 %29, label %30, label %89

30:                                               ; preds = %25
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #13
  call void @_ZN2v88internal13BreakIterator16GetBreakLocationEv(%"class.v8::internal::BreakLocation"* nonnull sret %5, %"class.v8::internal::BreakIterator"* nonnull %6) #13
  %31 = load %"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"** %14, align 8
  %32 = load %"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"** %15, align 8
  %33 = icmp ult %"class.v8::internal::BreakLocation"* %31, %32
  %34 = ptrtoint %"class.v8::internal::BreakLocation"* %32 to i64
  br i1 %33, label %35, label %39

35:                                               ; preds = %30
  %36 = bitcast %"class.v8::internal::BreakLocation"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* nonnull align 8 %13, i64 24, i1 false) #13
  %37 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %31, i64 1
  %38 = ptrtoint %"class.v8::internal::BreakLocation"* %37 to i64
  store i64 %38, i64* %16, align 8
  br label %88

39:                                               ; preds = %30
  %40 = ptrtoint %"class.v8::internal::BreakLocation"* %31 to i64
  %41 = load i64, i64* %17, align 8
  %42 = sub i64 %40, %41
  %43 = sdiv exact i64 %42, 24
  %44 = add nsw i64 %43, 1
  %45 = icmp ugt i64 %44, 768614336404564650
  br i1 %45, label %46, label %48

46:                                               ; preds = %39
  %47 = bitcast %"class.std::__1::vector.1511"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %47) #16
  unreachable

48:                                               ; preds = %39
  %49 = sub i64 %34, %41
  %50 = sdiv exact i64 %49, 24
  %51 = icmp ult i64 %50, 384307168202282325
  br i1 %51, label %52, label %57

52:                                               ; preds = %48
  %53 = shl nsw i64 %50, 1
  %54 = icmp ult i64 %53, %44
  %55 = select i1 %54, i64 %44, i64 %53
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %62, label %57

57:                                               ; preds = %52, %48
  %58 = phi i64 [ %55, %52 ], [ 768614336404564650, %48 ]
  %59 = mul i64 %58, 24
  %60 = call i8* @_Znwm(i64 %59) #17
  %61 = bitcast i8* %60 to %"class.v8::internal::BreakLocation"*
  br label %62

62:                                               ; preds = %57, %52
  %63 = phi i64 [ %58, %57 ], [ 0, %52 ]
  %64 = phi %"class.v8::internal::BreakLocation"* [ %61, %57 ], [ null, %52 ]
  %65 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %64, i64 %43
  %66 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %64, i64 %63
  %67 = ptrtoint %"class.v8::internal::BreakLocation"* %66 to i64
  %68 = bitcast %"class.v8::internal::BreakLocation"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* nonnull align 8 %13, i64 24, i1 false) #13
  %69 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %65, i64 1
  %70 = ptrtoint %"class.v8::internal::BreakLocation"* %69 to i64
  %71 = load %"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"** %19, align 8
  %72 = load i64, i64* %16, align 8
  %73 = ptrtoint %"class.v8::internal::BreakLocation"* %71 to i64
  %74 = sub i64 %72, %73
  %75 = sdiv exact i64 %74, -24
  %76 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %65, i64 %75
  %77 = ptrtoint %"class.v8::internal::BreakLocation"* %76 to i64
  %78 = icmp sgt i64 %74, 0
  br i1 %78, label %79, label %83

79:                                               ; preds = %62
  %80 = bitcast %"class.v8::internal::BreakLocation"* %76 to i8*
  %81 = bitcast %"class.v8::internal::BreakLocation"* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 %74, i1 false) #13
  %82 = load %"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"** %19, align 8
  br label %83

83:                                               ; preds = %79, %62
  %84 = phi %"class.v8::internal::BreakLocation"* [ %71, %62 ], [ %82, %79 ]
  store i64 %77, i64* %17, align 8
  store i64 %70, i64* %16, align 8
  store i64 %67, i64* %18, align 8
  %85 = icmp eq %"class.v8::internal::BreakLocation"* %84, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %83
  %87 = bitcast %"class.v8::internal::BreakLocation"* %84 to i8*
  call void @_ZdlPv(i8* %87) #17
  br label %88

88:                                               ; preds = %86, %83, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #13
  br label %89

89:                                               ; preds = %88, %25
  %90 = load i32, i32* %20, align 8
  %91 = icmp eq i32 %90, -1
  br label %92

92:                                               ; preds = %112, %89
  %93 = phi i1 [ %91, %89 ], [ false, %112 ]
  %94 = load i32, i32* %8, align 8
  %95 = icmp eq i32 %94, -1
  br i1 %95, label %96, label %99

96:                                               ; preds = %92
  %97 = load i32, i32* %20, align 8
  %98 = add nsw i32 %97, 1
  store i32 %98, i32* %20, align 8
  br label %120

99:                                               ; preds = %92
  br i1 %93, label %103, label %100

100:                                              ; preds = %99
  call void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"* %21) #13
  %101 = load i32, i32* %8, align 8
  %102 = icmp eq i32 %101, -1
  br i1 %102, label %120, label %103

103:                                              ; preds = %100, %99
  %104 = load i64, i64* %22, align 8
  %105 = lshr i64 %104, 1
  %106 = trunc i64 %105 to i32
  %107 = and i32 %106, 1073741823
  %108 = add nsw i32 %107, -1
  store i32 %108, i32* %12, align 4
  %109 = load i8, i8* %23, align 8, !range !2
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %112, label %111

111:                                              ; preds = %103
  store i32 %108, i32* %24, align 8
  br label %112

112:                                              ; preds = %111, %103
  %113 = call i32 @_ZN2v88internal13BreakIterator17GetDebugBreakTypeEv(%"class.v8::internal::BreakIterator"* nonnull %6) #13
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %92, label %115

115:                                              ; preds = %112
  %116 = load i32, i32* %8, align 8
  %117 = load i32, i32* %20, align 8
  %118 = add nsw i32 %117, 1
  store i32 %118, i32* %20, align 8
  %119 = icmp eq i32 %116, -1
  br i1 %119, label %120, label %25

120:                                              ; preds = %115, %100, %4, %96
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal5Debug40FindSharedFunctionInfosIntersectingRangeENS0_6HandleINS0_6ScriptEEEiiPNSt3__16vectorINS2_INS0_18SharedFunctionInfoEEENS5_9allocatorIS8_EEEE(%"class.v8::internal::Debug"* nocapture, i64*, i32, i32, %"class.std::__1::vector.1542"* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca { i64*, i8 }, align 8
  %7 = alloca %"class.v8::internal::Script", align 8
  %8 = alloca %"class.std::__1::vector.1542", align 16
  %9 = alloca %"class.std::__1::vector.1572", align 8
  %10 = alloca %"class.v8::internal::SharedFunctionInfo::ScriptIterator", align 8
  %11 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %12 = alloca { i64*, i8 }, align 8
  %13 = bitcast { i64*, i8 }* %12 to %"class.v8::internal::IsCompiledScope"*
  %14 = bitcast %"class.std::__1::vector.1542"* %8 to i8*
  %15 = bitcast %"class.std::__1::vector.1572"* %9 to i8*
  %16 = bitcast %"class.v8::internal::SharedFunctionInfo::ScriptIterator"* %10 to i8*
  %17 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %18 = bitcast %"class.v8::internal::SharedFunctionInfo"* %11 to i8*
  %19 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.v8::internal::Script"* %7 to i8*
  %21 = getelementptr inbounds %"class.v8::internal::Script", %"class.v8::internal::Script"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::vector.1542", %"class.std::__1::vector.1542"* %8, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.std::__1::vector.1542", %"class.std::__1::vector.1542"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast %"class.v8::internal::Handle.769"** %22 to i64*
  %25 = bitcast %"class.std::__1::vector.1542"* %8 to i64*
  %26 = bitcast %"class.v8::internal::Handle.769"** %23 to i64*
  %27 = getelementptr inbounds %"class.std::__1::vector.1542", %"class.std::__1::vector.1542"* %8, i64 0, i32 0, i32 0
  %28 = bitcast { i64*, i8 }* %12 to i8*
  %29 = bitcast { i64*, i8 }* %6 to i8*
  %30 = bitcast { i64*, i8 }* %6 to %"class.v8::internal::IsCompiledScope"*
  %31 = bitcast { i64*, i8 }* %6 to i64*
  %32 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %6, i64 0, i32 1
  %33 = bitcast { i64*, i8 }* %12 to i64*
  %34 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %12, i64 0, i32 1
  %35 = getelementptr inbounds %"class.std::__1::vector.1572", %"class.std::__1::vector.1572"* %9, i64 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.std::__1::vector.1572", %"class.std::__1::vector.1572"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast %"class.v8::internal::IsCompiledScope"** %35 to i64*
  %38 = bitcast %"class.std::__1::vector.1572"* %9 to i64*
  %39 = bitcast %"class.v8::internal::IsCompiledScope"** %36 to i64*
  %40 = getelementptr inbounds %"class.std::__1::vector.1572", %"class.std::__1::vector.1572"* %9, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::vector.1542", %"class.std::__1::vector.1542"* %4, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.std::__1::vector.1542", %"class.std::__1::vector.1542"* %4, i64 0, i32 0, i32 1
  %43 = bitcast %"class.v8::internal::Handle.769"** %42 to i64*
  %44 = bitcast %"class.std::__1::vector.1542"* %4 to i8*
  %45 = getelementptr inbounds %"class.std::__1::vector.1542", %"class.std::__1::vector.1542"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %46 = bitcast %"class.v8::internal::Handle.769"** %45 to i64*
  %47 = bitcast %"class.std::__1::vector.1542"* %8 to <2 x i64>*
  %48 = bitcast %"class.std::__1::vector.1542"* %4 to <2 x i64>*
  br label %49

49:                                               ; preds = %473, %5
  %50 = phi i8 [ 0, %5 ], [ %460, %473 ]
  %51 = phi i8 [ 0, %5 ], [ %59, %473 ]
  %52 = phi i1 [ undef, %5 ], [ %461, %473 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 0, i64 24, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #13
  %53 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %54 = load i64, i64* %1, align 8
  call void @_ZN2v88internal18SharedFunctionInfo14ScriptIteratorC1EPNS0_7IsolateENS0_6ScriptE(%"class.v8::internal::SharedFunctionInfo::ScriptIterator"* nonnull %10, %"class.v8::internal::Isolate"* %53, i64 %54) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  %55 = call i64 @_ZN2v88internal18SharedFunctionInfo14ScriptIterator4NextEv(%"class.v8::internal::SharedFunctionInfo::ScriptIterator"* nonnull %10) #13
  store i64 %55, i64* %19, align 8
  %56 = trunc i64 %55 to i32
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %63

58:                                               ; preds = %259, %49
  %59 = phi i8 [ %51, %49 ], [ %260, %259 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #13
  %60 = or i8 %59, %50
  %61 = and i8 %60, 1
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %264, label %366

63:                                               ; preds = %49, %259
  %64 = phi i8 [ %260, %259 ], [ %51, %49 ]
  %65 = call i32 @_ZNK2v88internal18SharedFunctionInfo11EndPositionEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %11) #13
  %66 = icmp slt i32 %65, %2
  br i1 %66, label %259, label %67

67:                                               ; preds = %63
  %68 = call i32 @_ZNK2v88internal18SharedFunctionInfo13StartPositionEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %11) #13
  %69 = icmp slt i32 %68, %3
  br i1 %69, label %70, label %259

70:                                               ; preds = %67
  %71 = call i32 @_ZNK2v88internal18SharedFunctionInfo13StartPositionEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %11) #13
  %72 = icmp sgt i32 %71, %2
  br i1 %72, label %76, label %73

73:                                               ; preds = %70
  %74 = call i32 @_ZNK2v88internal18SharedFunctionInfo11EndPositionEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %11) #13
  %75 = icmp sge i32 %74, %3
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi i1 [ false, %70 ], [ %75, %73 ]
  %78 = zext i1 %77 to i8
  %79 = and i8 %64, 1
  %80 = or i8 %79, %78
  %81 = load i64, i64* %19, align 8
  %82 = and i64 %81, -4294967296
  %83 = add i64 %81, 3
  %84 = inttoptr i64 %83 to i32*
  %85 = load atomic i32, i32* %84 acquire, align 4
  %86 = zext i32 %85 to i64
  %87 = and i64 %86, 1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %100, label %89

89:                                               ; preds = %76
  %90 = or i64 %82, %86
  %91 = add i64 %90, -1
  %92 = inttoptr i64 %91 to i32*
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = zext i32 %93 to i64
  %95 = or i64 %82, %94
  %96 = add i64 %95, 7
  %97 = inttoptr i64 %96 to i16*
  %98 = load atomic i16, i16* %97 monotonic, align 2
  %99 = icmp eq i16 %98, 92
  br i1 %99, label %259, label %100

100:                                              ; preds = %89, %76
  %101 = load i64, i64* %19, align 8
  %102 = and i64 %101, -4294967296
  %103 = add i64 %101, 15
  %104 = inttoptr i64 %103 to i32*
  %105 = load atomic i32, i32* %104 acquire, align 4
  %106 = zext i32 %105 to i64
  %107 = or i64 %102, %106
  %108 = add i64 %107, -1
  %109 = inttoptr i64 %108 to i32*
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = zext i32 %110 to i64
  %112 = or i64 %102, %111
  %113 = add i64 %112, 7
  %114 = inttoptr i64 %113 to i16*
  %115 = load atomic i16, i16* %114 monotonic, align 2
  %116 = icmp eq i16 %115, 100
  br i1 %116, label %117, label %123

117:                                              ; preds = %100
  %118 = add i64 %107, 11
  %119 = inttoptr i64 %118 to i32*
  %120 = load i32, i32* %119, align 4
  %121 = zext i32 %120 to i64
  %122 = or i64 %102, %121
  br label %123

123:                                              ; preds = %117, %100
  %124 = phi i64 [ %122, %117 ], [ %107, %100 ]
  %125 = and i64 %124, 1
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %151, label %127

127:                                              ; preds = %123
  %128 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %129 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %128, null
  br i1 %129, label %136, label %130

130:                                              ; preds = %127
  %131 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %128, i64 0, i32 0, i32 1
  %132 = load i8, i8* %131, align 8, !range !2
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %136, label %134

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %128, i64 0, i32 1, i64 0
  br label %144

136:                                              ; preds = %130, %127
  %137 = and i64 %124, -262144
  %138 = or i64 %137, 16
  %139 = inttoptr i64 %138 to i64*
  %140 = load i64, i64* %139, align 16
  %141 = add i64 %140, -41416
  %142 = inttoptr i64 %141 to %"class.v8::internal::Isolate"*
  %143 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %142, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %144

144:                                              ; preds = %136, %134
  %145 = phi i64* [ %143, %136 ], [ %135, %134 ]
  %146 = getelementptr inbounds i64, i64* %145, i64 4
  %147 = load i64, i64* %146, align 8
  %148 = trunc i64 %124 to i32
  %149 = trunc i64 %147 to i32
  %150 = icmp eq i32 %148, %149
  br i1 %150, label %259, label %151

151:                                              ; preds = %123, %144
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  store i64 %124, i64* %21, align 8
  %152 = call zeroext i1 @_ZNK2v88internal6Script16IsUserJavaScriptEv(%"class.v8::internal::Script"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br i1 %152, label %153, label %259

153:                                              ; preds = %151
  %154 = load i64, i64* %19, align 8
  %155 = and i64 %154, -4294967296
  %156 = add i64 %154, 3
  %157 = inttoptr i64 %156 to i32*
  %158 = load atomic i32, i32* %157 acquire, align 4
  %159 = zext i32 %158 to i64
  %160 = or i64 %155, %159
  %161 = icmp eq i32 %158, 170
  br i1 %161, label %176, label %162

162:                                              ; preds = %153
  %163 = and i64 %159, 1
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %183, label %165

165:                                              ; preds = %162
  %166 = add i64 %160, -1
  %167 = inttoptr i64 %166 to i32*
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = zext i32 %168 to i64
  %170 = or i64 %155, %169
  %171 = add i64 %170, 7
  %172 = inttoptr i64 %171 to i16*
  %173 = load atomic i16, i16* %172 monotonic, align 2
  %174 = add i16 %173, -157
  %175 = icmp ugt i16 %174, 1
  br i1 %175, label %183, label %176

176:                                              ; preds = %153, %165
  %177 = load i64, i64* %19, align 8
  %178 = add i64 %177, 27
  %179 = inttoptr i64 %178 to i32*
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 4096
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %259, label %183

183:                                              ; preds = %176, %162, %165
  %184 = load i64, i64* %19, align 8
  %185 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %186 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %185, i64 0, i32 31, i32 4
  %187 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %186, align 8
  %188 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %187, null
  br i1 %188, label %192, label %189

189:                                              ; preds = %183
  %190 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %187, i64 %184) #13
  %191 = ptrtoint i64* %190 to i64
  br label %205

192:                                              ; preds = %183
  %193 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %185, i64 0, i32 31, i32 0
  %194 = load i64*, i64** %193, align 8
  %195 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %185, i64 0, i32 31, i32 1
  %196 = load i64*, i64** %195, align 8
  %197 = icmp eq i64* %194, %196
  br i1 %197, label %198, label %200

198:                                              ; preds = %192
  %199 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %185) #13
  br label %200

200:                                              ; preds = %198, %192
  %201 = phi i64* [ %199, %198 ], [ %194, %192 ]
  %202 = ptrtoint i64* %201 to i64
  %203 = add i64 %202, 8
  %204 = inttoptr i64 %203 to i64*
  store i64* %204, i64** %193, align 8
  store i64 %184, i64* %201, align 8
  br label %205

205:                                              ; preds = %189, %200
  %206 = phi i64 [ %191, %189 ], [ %202, %200 ]
  %207 = load %"class.v8::internal::Handle.769"*, %"class.v8::internal::Handle.769"** %22, align 8
  %208 = load %"class.v8::internal::Handle.769"*, %"class.v8::internal::Handle.769"** %23, align 16
  %209 = icmp ult %"class.v8::internal::Handle.769"* %207, %208
  %210 = ptrtoint %"class.v8::internal::Handle.769"* %208 to i64
  br i1 %209, label %211, label %215

211:                                              ; preds = %205
  %212 = bitcast %"class.v8::internal::Handle.769"* %207 to i64*
  store i64 %206, i64* %212, align 8
  %213 = getelementptr inbounds %"class.v8::internal::Handle.769", %"class.v8::internal::Handle.769"* %207, i64 1
  %214 = ptrtoint %"class.v8::internal::Handle.769"* %213 to i64
  store i64 %214, i64* %24, align 8
  br label %259

215:                                              ; preds = %205
  %216 = ptrtoint %"class.v8::internal::Handle.769"* %207 to i64
  %217 = load i64, i64* %25, align 16
  %218 = sub i64 %216, %217
  %219 = ashr exact i64 %218, 3
  %220 = add nsw i64 %219, 1
  %221 = icmp ugt i64 %220, 2305843009213693951
  br i1 %221, label %222, label %224

222:                                              ; preds = %215
  %223 = bitcast %"class.std::__1::vector.1542"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %223) #16
  unreachable

224:                                              ; preds = %215
  %225 = sub i64 %210, %217
  %226 = ashr exact i64 %225, 3
  %227 = icmp ult i64 %226, 1152921504606846975
  br i1 %227, label %228, label %236

228:                                              ; preds = %224
  %229 = ashr exact i64 %225, 2
  %230 = icmp ult i64 %229, %220
  %231 = select i1 %230, i64 %220, i64 %229
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %241, label %233

233:                                              ; preds = %228
  %234 = icmp ugt i64 %231, 2305843009213693951
  br i1 %234, label %235, label %236

235:                                              ; preds = %233
  call void @abort() #16
  unreachable

236:                                              ; preds = %233, %224
  %237 = phi i64 [ %231, %233 ], [ 2305843009213693951, %224 ]
  %238 = shl i64 %237, 3
  %239 = call i8* @_Znwm(i64 %238) #17
  %240 = bitcast i8* %239 to %"class.v8::internal::Handle.769"*
  br label %241

241:                                              ; preds = %236, %228
  %242 = phi i64 [ %237, %236 ], [ 0, %228 ]
  %243 = phi i8* [ %239, %236 ], [ null, %228 ]
  %244 = phi %"class.v8::internal::Handle.769"* [ %240, %236 ], [ null, %228 ]
  %245 = getelementptr inbounds %"class.v8::internal::Handle.769", %"class.v8::internal::Handle.769"* %244, i64 %219
  %246 = getelementptr inbounds %"class.v8::internal::Handle.769", %"class.v8::internal::Handle.769"* %244, i64 %242
  %247 = ptrtoint %"class.v8::internal::Handle.769"* %246 to i64
  %248 = bitcast %"class.v8::internal::Handle.769"* %245 to i64*
  store i64 %206, i64* %248, align 8
  %249 = getelementptr inbounds %"class.v8::internal::Handle.769", %"class.v8::internal::Handle.769"* %245, i64 1
  %250 = ptrtoint %"class.v8::internal::Handle.769"* %249 to i64
  %251 = ptrtoint %"class.v8::internal::Handle.769"* %244 to i64
  %252 = icmp sgt i64 %218, 0
  br i1 %252, label %253, label %255

253:                                              ; preds = %241
  %254 = inttoptr i64 %217 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %243, i8* align 8 %254, i64 %218, i1 false) #13
  br label %255

255:                                              ; preds = %253, %241
  store i64 %251, i64* %25, align 16
  store i64 %250, i64* %24, align 8
  store i64 %247, i64* %26, align 16
  %256 = icmp eq i64 %217, 0
  br i1 %256, label %259, label %257

257:                                              ; preds = %255
  %258 = inttoptr i64 %217 to i8*
  call void @_ZdlPv(i8* %258) #17
  br label %259

259:                                              ; preds = %176, %144, %89, %257, %255, %211, %67, %151, %63
  %260 = phi i8 [ %64, %63 ], [ %64, %67 ], [ %80, %176 ], [ %80, %151 ], [ %80, %211 ], [ %80, %255 ], [ %80, %257 ], [ %80, %89 ], [ %80, %144 ]
  %261 = call i64 @_ZN2v88internal18SharedFunctionInfo14ScriptIterator4NextEv(%"class.v8::internal::SharedFunctionInfo::ScriptIterator"* nonnull %10) #13
  store i64 %261, i64* %19, align 8
  %262 = trunc i64 %261 to i32
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %58, label %63

264:                                              ; preds = %58
  %265 = load i64, i64* %1, align 8
  %266 = add i64 %265, 23
  %267 = inttoptr i64 %266 to i32*
  %268 = load i32, i32* %267, align 4
  %269 = and i32 %268, -2
  switch i32 %269, label %291 [
    i32 10, label %270
    i32 6, label %282
  ], !prof !5

270:                                              ; preds = %264
  %271 = and i64 %265, -4294967296
  %272 = add i64 %265, 35
  %273 = inttoptr i64 %272 to i32*
  %274 = load i32, i32* %273, align 4
  %275 = zext i32 %274 to i64
  %276 = or i64 %271, %275
  %277 = add i64 %276, 7
  %278 = inttoptr i64 %277 to i32*
  %279 = load atomic i32, i32* %278 monotonic, align 4
  %280 = ashr i32 %279, 1
  %281 = add nsw i32 %280, 1
  br label %304

282:                                              ; preds = %264
  %283 = and i64 %265, -262144
  %284 = or i64 %283, 16
  %285 = inttoptr i64 %284 to i64*
  %286 = load i64, i64* %285, align 16
  %287 = add i64 %286, -41416
  %288 = inttoptr i64 %287 to %"class.v8::internal::Isolate"*
  %289 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %288, i64 0, i32 0, i32 7, i32 0, i64 119
  %290 = load i64, i64* %289, align 8
  br label %298

291:                                              ; preds = %264
  %292 = add i64 %265, 43
  %293 = inttoptr i64 %292 to i32*
  %294 = load i32, i32* %293, align 4
  %295 = and i64 %265, -4294967296
  %296 = zext i32 %294 to i64
  %297 = or i64 %295, %296
  br label %298

298:                                              ; preds = %291, %282
  %299 = phi i64 [ %290, %282 ], [ %297, %291 ]
  %300 = add i64 %299, 3
  %301 = inttoptr i64 %300 to i32*
  %302 = load i32, i32* %301, align 4
  %303 = ashr i32 %302, 1
  br label %304

304:                                              ; preds = %270, %298
  %305 = phi i32 [ %281, %270 ], [ %303, %298 ]
  %306 = icmp sgt i32 %305, 0
  br i1 %306, label %307, label %366

307:                                              ; preds = %304
  %308 = icmp eq i32 %269, 6
  br i1 %308, label %309, label %318

309:                                              ; preds = %307
  %310 = and i64 %265, -262144
  %311 = or i64 %310, 16
  %312 = inttoptr i64 %311 to i64*
  %313 = load i64, i64* %312, align 16
  %314 = add i64 %313, -41416
  %315 = inttoptr i64 %314 to %"class.v8::internal::Isolate"*
  %316 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %315, i64 0, i32 0, i32 7, i32 0, i64 119
  %317 = load i64, i64* %316, align 8
  br label %325

318:                                              ; preds = %307
  %319 = add i64 %265, 43
  %320 = inttoptr i64 %319 to i32*
  %321 = load i32, i32* %320, align 4
  %322 = and i64 %265, -4294967296
  %323 = zext i32 %321 to i64
  %324 = or i64 %322, %323
  br label %325

325:                                              ; preds = %309, %318
  %326 = phi i64 [ %317, %309 ], [ %324, %318 ]
  %327 = add i64 %326, 7
  %328 = inttoptr i64 %327 to i32*
  %329 = load atomic i32, i32* %328 monotonic, align 4
  %330 = zext i32 %329 to i64
  %331 = and i64 %330, 1
  %332 = icmp ne i64 %331, 0
  %333 = icmp ne i32 %329, 3
  %334 = and i1 %333, %332
  br i1 %334, label %335, label %361

335:                                              ; preds = %325
  %336 = and i64 %326, -4294967296
  %337 = and i32 %329, -3
  %338 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %339 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %338, null
  br i1 %339, label %346, label %340

340:                                              ; preds = %335
  %341 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %338, i64 0, i32 0, i32 1
  %342 = load i8, i8* %341, align 8, !range !2
  %343 = icmp eq i8 %342, 0
  br i1 %343, label %346, label %344

344:                                              ; preds = %340
  %345 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %338, i64 0, i32 1, i64 0
  br label %355

346:                                              ; preds = %340, %335
  %347 = and i64 %330, 4294705152
  %348 = or i64 %336, %347
  %349 = or i64 %348, 16
  %350 = inttoptr i64 %349 to i64*
  %351 = load i64, i64* %350, align 16
  %352 = add i64 %351, -41416
  %353 = inttoptr i64 %352 to %"class.v8::internal::Isolate"*
  %354 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %353, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %355

355:                                              ; preds = %344, %346
  %356 = phi i64* [ %354, %346 ], [ %345, %344 ]
  %357 = getelementptr inbounds i64, i64* %356, i64 4
  %358 = load i64, i64* %357, align 8
  %359 = trunc i64 %358 to i32
  %360 = icmp eq i32 %337, %359
  br i1 %360, label %361, label %366

361:                                              ; preds = %355, %325
  %362 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %363 = call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_115CompileTopLevelEPNS0_7IsolateENS0_6HandleINS0_6ScriptEEE(%"class.v8::internal::Isolate"* %362, i64* %1)
  %364 = select i1 %363, i32 2, i32 1
  %365 = and i1 %52, %363
  br label %458

366:                                              ; preds = %355, %58, %304
  %367 = load %"class.v8::internal::Handle.769"*, %"class.v8::internal::Handle.769"** %27, align 16
  %368 = load %"class.v8::internal::Handle.769"*, %"class.v8::internal::Handle.769"** %22, align 8
  %369 = icmp eq %"class.v8::internal::Handle.769"* %367, %368
  br i1 %369, label %449, label %370

370:                                              ; preds = %366, %441
  %371 = phi i8 [ %385, %441 ], [ 0, %366 ]
  %372 = phi %"class.v8::internal::Handle.769"* [ %443, %441 ], [ %367, %366 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #13
  %373 = getelementptr inbounds %"class.v8::internal::Handle.769", %"class.v8::internal::Handle.769"* %372, i64 0, i32 0, i32 0
  %374 = load i64*, i64** %373, align 8
  %375 = load i64, i64* %374, align 8
  %376 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29)
  call void @_ZN2v88internal15IsCompiledScopeC2ENS0_18SharedFunctionInfoEPNS0_7IsolateE(%"class.v8::internal::IsCompiledScope"* nonnull %30, i64 %375, %"class.v8::internal::Isolate"* %376) #13
  %377 = load i64, i64* %31, align 8
  %378 = load i8, i8* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29)
  store i64 %377, i64* %33, align 8
  store i8 %378, i8* %34, align 8
  %379 = icmp eq i8 %378, 0
  br i1 %379, label %380, label %384

380:                                              ; preds = %370
  %381 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %382 = load i64*, i64** %373, align 8
  %383 = call zeroext i1 @_ZN2v88internal8Compiler7CompileEPNS0_7IsolateENS0_6HandleINS0_18SharedFunctionInfoEEENS1_18ClearExceptionFlagEPNS0_15IsCompiledScopeE(%"class.v8::internal::Isolate"* %381, i64* %382, i32 1, %"class.v8::internal::IsCompiledScope"* nonnull %13) #13
  br i1 %383, label %384, label %445

384:                                              ; preds = %370, %380
  %385 = phi i8 [ %371, %370 ], [ 1, %380 ]
  %386 = load %"class.v8::internal::IsCompiledScope"*, %"class.v8::internal::IsCompiledScope"** %35, align 8
  %387 = load %"class.v8::internal::IsCompiledScope"*, %"class.v8::internal::IsCompiledScope"** %36, align 8
  %388 = icmp eq %"class.v8::internal::IsCompiledScope"* %386, %387
  %389 = ptrtoint %"class.v8::internal::IsCompiledScope"* %387 to i64
  br i1 %388, label %394, label %390

390:                                              ; preds = %384
  %391 = bitcast %"class.v8::internal::IsCompiledScope"* %386 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %391, i8* nonnull align 8 %28, i64 16, i1 false) #13
  %392 = getelementptr inbounds %"class.v8::internal::IsCompiledScope", %"class.v8::internal::IsCompiledScope"* %386, i64 1
  %393 = ptrtoint %"class.v8::internal::IsCompiledScope"* %392 to i64
  store i64 %393, i64* %37, align 8
  br label %438

394:                                              ; preds = %384
  %395 = ptrtoint %"class.v8::internal::IsCompiledScope"* %386 to i64
  %396 = load i64, i64* %38, align 8
  %397 = sub i64 %395, %396
  %398 = ashr exact i64 %397, 4
  %399 = add nsw i64 %398, 1
  %400 = icmp ugt i64 %399, 1152921504606846975
  br i1 %400, label %401, label %403

401:                                              ; preds = %394
  %402 = bitcast %"class.std::__1::vector.1572"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %402) #16
  unreachable

403:                                              ; preds = %394
  %404 = sub i64 %389, %396
  %405 = ashr exact i64 %404, 4
  %406 = icmp ult i64 %405, 576460752303423487
  br i1 %406, label %407, label %415

407:                                              ; preds = %403
  %408 = ashr exact i64 %404, 3
  %409 = icmp ult i64 %408, %399
  %410 = select i1 %409, i64 %399, i64 %408
  %411 = icmp eq i64 %410, 0
  br i1 %411, label %420, label %412

412:                                              ; preds = %407
  %413 = icmp ugt i64 %410, 1152921504606846975
  br i1 %413, label %414, label %415

414:                                              ; preds = %412
  call void @abort() #16
  unreachable

415:                                              ; preds = %412, %403
  %416 = phi i64 [ %410, %412 ], [ 1152921504606846975, %403 ]
  %417 = shl i64 %416, 4
  %418 = call i8* @_Znwm(i64 %417) #17
  %419 = bitcast i8* %418 to %"class.v8::internal::IsCompiledScope"*
  br label %420

420:                                              ; preds = %415, %407
  %421 = phi i64 [ %416, %415 ], [ 0, %407 ]
  %422 = phi i8* [ %418, %415 ], [ null, %407 ]
  %423 = phi %"class.v8::internal::IsCompiledScope"* [ %419, %415 ], [ null, %407 ]
  %424 = getelementptr inbounds %"class.v8::internal::IsCompiledScope", %"class.v8::internal::IsCompiledScope"* %423, i64 %398
  %425 = getelementptr inbounds %"class.v8::internal::IsCompiledScope", %"class.v8::internal::IsCompiledScope"* %423, i64 %421
  %426 = ptrtoint %"class.v8::internal::IsCompiledScope"* %425 to i64
  %427 = bitcast %"class.v8::internal::IsCompiledScope"* %424 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %427, i8* nonnull align 8 %28, i64 16, i1 false) #13
  %428 = getelementptr inbounds %"class.v8::internal::IsCompiledScope", %"class.v8::internal::IsCompiledScope"* %424, i64 1
  %429 = ptrtoint %"class.v8::internal::IsCompiledScope"* %428 to i64
  %430 = ptrtoint %"class.v8::internal::IsCompiledScope"* %423 to i64
  %431 = icmp sgt i64 %397, 0
  br i1 %431, label %432, label %434

432:                                              ; preds = %420
  %433 = inttoptr i64 %396 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %422, i8* align 8 %433, i64 %397, i1 false) #13
  br label %434

434:                                              ; preds = %432, %420
  store i64 %430, i64* %38, align 8
  store i64 %429, i64* %37, align 8
  store i64 %426, i64* %39, align 8
  %435 = icmp eq i64 %396, 0
  br i1 %435, label %438, label %436

436:                                              ; preds = %434
  %437 = inttoptr i64 %396 to i8*
  call void @_ZdlPv(i8* %437) #17
  br label %438

438:                                              ; preds = %390, %434, %436
  %439 = load i64*, i64** %373, align 8
  %440 = call zeroext i1 @_ZN2v88internal5Debug15EnsureBreakInfoENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %439)
  br i1 %440, label %441, label %445

441:                                              ; preds = %438
  %442 = load i64*, i64** %373, align 8
  call void @_ZN2v88internal5Debug32PrepareFunctionForDebugExecutionENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %442)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #13
  %443 = getelementptr inbounds %"class.v8::internal::Handle.769", %"class.v8::internal::Handle.769"* %372, i64 1
  %444 = icmp eq %"class.v8::internal::Handle.769"* %443, %368
  br i1 %444, label %446, label %370

445:                                              ; preds = %380, %438
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #13
  br label %458

446:                                              ; preds = %441
  %447 = and i8 %385, 1
  %448 = icmp eq i8 %447, 0
  br i1 %448, label %449, label %458

449:                                              ; preds = %366, %446
  %450 = load %"class.v8::internal::Handle.769"*, %"class.v8::internal::Handle.769"** %41, align 8
  %451 = icmp eq %"class.v8::internal::Handle.769"* %450, null
  br i1 %451, label %455, label %452

452:                                              ; preds = %449
  %453 = ptrtoint %"class.v8::internal::Handle.769"* %450 to i64
  store i64 %453, i64* %43, align 8
  %454 = bitcast %"class.v8::internal::Handle.769"* %450 to i8*
  call void @_ZdlPv(i8* %454) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #13
  br label %455

455:                                              ; preds = %449, %452
  %456 = load <2 x i64>, <2 x i64>* %47, align 16
  store <2 x i64> %456, <2 x i64>* %48, align 8
  %457 = load i64, i64* %26, align 16
  store i64 %457, i64* %46, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 0, i64 24, i1 false) #13
  br label %458

458:                                              ; preds = %361, %445, %455, %446
  %459 = phi i32 [ %364, %361 ], [ 1, %455 ], [ 1, %445 ], [ 2, %446 ]
  %460 = phi i8 [ 1, %361 ], [ %50, %455 ], [ %50, %445 ], [ %50, %446 ]
  %461 = phi i1 [ %365, %361 ], [ true, %455 ], [ false, %445 ], [ %52, %446 ]
  %462 = load %"class.v8::internal::IsCompiledScope"*, %"class.v8::internal::IsCompiledScope"** %40, align 8
  %463 = icmp eq %"class.v8::internal::IsCompiledScope"* %462, null
  br i1 %463, label %467, label %464

464:                                              ; preds = %458
  %465 = ptrtoint %"class.v8::internal::IsCompiledScope"* %462 to i64
  store i64 %465, i64* %37, align 8
  %466 = bitcast %"class.v8::internal::IsCompiledScope"* %462 to i8*
  call void @_ZdlPv(i8* %466) #17
  br label %467

467:                                              ; preds = %458, %464
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #13
  %468 = load %"class.v8::internal::Handle.769"*, %"class.v8::internal::Handle.769"** %27, align 16
  %469 = icmp eq %"class.v8::internal::Handle.769"* %468, null
  br i1 %469, label %473, label %470

470:                                              ; preds = %467
  %471 = ptrtoint %"class.v8::internal::Handle.769"* %468 to i64
  store i64 %471, i64* %24, align 8
  %472 = bitcast %"class.v8::internal::Handle.769"* %468 to i8*
  call void @_ZdlPv(i8* %472) #17
  br label %473

473:                                              ; preds = %467, %470
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #13
  %474 = icmp eq i32 %459, 2
  br i1 %474, label %49, label %475

475:                                              ; preds = %473
  ret i1 %461
}

declare i32 @_ZNK2v88internal18SharedFunctionInfo11EndPositionEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #3

declare void @_ZN2v88internal18SharedFunctionInfo14ScriptIteratorC1EPNS0_7IsolateENS0_6ScriptE(%"class.v8::internal::SharedFunctionInfo::ScriptIterator"*, %"class.v8::internal::Isolate"*, i64) unnamed_addr #3

declare i64 @_ZN2v88internal18SharedFunctionInfo14ScriptIterator4NextEv(%"class.v8::internal::SharedFunctionInfo::ScriptIterator"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_115CompileTopLevelEPNS0_7IsolateENS0_6HandleINS0_6ScriptEEE(%"class.v8::internal::Isolate"*, i64*) unnamed_addr #0 {
  %3 = alloca %"class.v8::internal::UnoptimizedCompileState", align 8
  %4 = alloca %"class.v8::internal::ParseInfo", align 8
  %5 = alloca %"class.v8::internal::IsCompiledScope", align 8
  %6 = bitcast %"class.v8::internal::UnoptimizedCompileState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %6) #13
  call void @_ZN2v88internal23UnoptimizedCompileStateC1EPNS0_7IsolateE(%"class.v8::internal::UnoptimizedCompileState"* nonnull %3, %"class.v8::internal::Isolate"* %0) #13
  %7 = load i64, i64* %1, align 8
  %8 = call { i64, i32 } @_ZN2v88internal23UnoptimizedCompileFlags16ForScriptCompileEPNS0_7IsolateENS0_6ScriptE(%"class.v8::internal::Isolate"* %0, i64 %7) #13
  %9 = extractvalue { i64, i32 } %8, 0
  %10 = extractvalue { i64, i32 } %8, 1
  %11 = bitcast %"class.v8::internal::ParseInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %11) #13
  call void @_ZN2v88internal9ParseInfoC1EPNS0_7IsolateENS0_23UnoptimizedCompileFlagsEPNS0_23UnoptimizedCompileStateE(%"class.v8::internal::ParseInfo"* nonnull %4, %"class.v8::internal::Isolate"* %0, i64 %9, i32 %10, %"class.v8::internal::UnoptimizedCompileState"* nonnull %3) #13
  %12 = bitcast %"class.v8::internal::IsCompiledScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 9, i1 false) #13
  %13 = call i64* @_ZN2v88internal8Compiler15CompileToplevelEPNS0_9ParseInfoENS0_6HandleINS0_6ScriptEEEPNS0_7IsolateEPNS0_15IsCompiledScopeE(%"class.v8::internal::ParseInfo"* nonnull %4, i64* %1, %"class.v8::internal::Isolate"* %0, %"class.v8::internal::IsCompiledScope"* nonnull %5) #13
  %14 = icmp eq i64* %13, null
  br i1 %14, label %15, label %24

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %19 to i32
  %21 = trunc i64 %17 to i32
  %22 = icmp eq i32 %20, %21
  br i1 %22, label %24, label %23

23:                                               ; preds = %15
  store i64 %17, i64* %18, align 8
  br label %24

24:                                               ; preds = %15, %2, %23
  %25 = phi i1 [ false, %23 ], [ false, %15 ], [ true, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #13
  call void @_ZN2v88internal9ParseInfoD1Ev(%"class.v8::internal::ParseInfo"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %11) #13
  %26 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %3, i64 0, i32 5, i32 0, i32 0, i32 0
  %27 = load %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"*, %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"** %26, align 8
  store %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* null, %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"** %26, align 8
  %28 = icmp eq %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* %27, null
  br i1 %28, label %41, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState::ParallelTasks", %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* %27, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__forward_list_node.1635"*, %"struct.std::__1::__forward_list_node.1635"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__forward_list_node.1635"* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %29, %33
  %34 = phi %"struct.std::__1::__forward_list_node.1635"* [ %37, %33 ], [ %31, %29 ]
  %35 = bitcast %"struct.std::__1::__forward_list_node.1635"* %34 to i8*
  %36 = getelementptr inbounds %"struct.std::__1::__forward_list_node.1635", %"struct.std::__1::__forward_list_node.1635"* %34, i64 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__forward_list_node.1635"*, %"struct.std::__1::__forward_list_node.1635"** %36, align 8
  call void @_ZdlPv(i8* %35) #17
  %38 = icmp eq %"struct.std::__1::__forward_list_node.1635"* %37, null
  br i1 %38, label %39, label %33

39:                                               ; preds = %33, %29
  %40 = bitcast %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* %27 to i8*
  call void @_ZdlPv(i8* %40) #17
  br label %41

41:                                               ; preds = %39, %24
  %42 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %3, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__forward_list_node"* %43, null
  br i1 %44, label %51, label %45

45:                                               ; preds = %41, %45
  %46 = phi %"struct.std::__1::__forward_list_node"* [ %49, %45 ], [ %43, %41 ]
  %47 = bitcast %"struct.std::__1::__forward_list_node"* %46 to i8*
  %48 = getelementptr inbounds %"struct.std::__1::__forward_list_node", %"struct.std::__1::__forward_list_node"* %46, i64 0, i32 0, i32 0
  %49 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %48, align 8
  call void @_ZdlPv(i8* %47) #17
  %50 = icmp eq %"struct.std::__1::__forward_list_node"* %49, null
  br i1 %50, label %51, label %45

51:                                               ; preds = %45, %41
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %6) #13
  ret i1 %25
}

declare zeroext i1 @_ZN2v88internal8Compiler7CompileEPNS0_7IsolateENS0_6HandleINS0_18SharedFunctionInfoEEENS1_18ClearExceptionFlagEPNS0_15IsCompiledScopeE(%"class.v8::internal::Isolate"*, i64*, i32, %"class.v8::internal::IsCompiledScope"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug15CreateBreakInfoENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* nocapture, i64*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 31
  %6 = bitcast %"struct.v8::internal::HandleScopeData"* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 31, i32 1
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 31, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %10, align 8
  %13 = tail call i64* @_ZN2v88internal5Debug20GetOrCreateDebugInfoENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %1)
  %14 = bitcast %"class.v8::internal::Isolate"** %3 to %"class.v8::internal::FactoryBase"**
  %15 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %14, align 8
  %16 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %15, i32 4, i8 zeroext 0) #13
  %17 = load i64, i64* %13, align 8
  %18 = add i64 %17, 27
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = ashr i32 %20, 1
  %22 = or i32 %21, 1
  %23 = load i64, i64* %1, align 8
  %24 = add i64 %23, 27
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 32
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %48

29:                                               ; preds = %2
  %30 = and i64 %23, -4294967296
  %31 = add i64 %23, 3
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 acquire, align 4
  %34 = zext i32 %33 to i64
  %35 = and i64 %34, 1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %50, label %37

37:                                               ; preds = %29
  %38 = or i64 %30, %34
  %39 = add i64 %38, -1
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %30, %42
  %44 = add i64 %43, 7
  %45 = inttoptr i64 %44 to i16*
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = icmp eq i16 %46, 83
  br i1 %47, label %48, label %50

48:                                               ; preds = %2, %37
  %49 = or i32 %21, 17
  br label %50

50:                                               ; preds = %29, %37, %48
  %51 = phi i32 [ %49, %48 ], [ %22, %37 ], [ %22, %29 ]
  %52 = load i64, i64* %13, align 8
  %53 = shl nsw i32 %51, 1
  %54 = add i64 %52, 27
  %55 = inttoptr i64 %54 to i32*
  store atomic volatile i32 %53, i32* %55 monotonic, align 4
  %56 = load i64, i64* %13, align 8
  %57 = load i64, i64* %16, align 8
  %58 = add i64 %56, 23
  %59 = inttoptr i64 %58 to i32*
  %60 = trunc i64 %57 to i32
  store atomic volatile i32 %60, i32* %59 monotonic, align 4
  %61 = and i64 %57, 1
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %74, label %63

63:                                               ; preds = %50
  %64 = and i64 %56, -262144
  %65 = or i64 %64, 8
  %66 = inttoptr i64 %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = and i64 %67, 262144
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %74, label %70

70:                                               ; preds = %63
  %71 = or i64 %64, 16
  %72 = inttoptr i64 %71 to %"class.v8::internal::Heap"**
  %73 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %72, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %73, i64 %56, i64 %58, i64 %57) #13
  br label %74

74:                                               ; preds = %70, %63, %50
  %75 = and i64 %57, -262144
  %76 = or i64 %75, 8
  %77 = inttoptr i64 %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = and i64 %78, 24
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %89, label %81

81:                                               ; preds = %74
  %82 = and i64 %56, -262144
  %83 = or i64 %82, 8
  %84 = inttoptr i64 %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = and i64 %85, 24
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %81
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %56, i64 %58, i64 %57) #13
  br label %89

89:                                               ; preds = %74, %81, %88
  %90 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  tail call void @_ZN2v88internal18SharedFunctionInfo30EnsureSourcePositionsAvailableEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %90, i64* %1) #13
  %91 = icmp eq %"class.v8::internal::Isolate"* %4, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %89
  %93 = inttoptr i64 %7 to i64*
  %94 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %5, i64 0, i32 0
  %95 = load i64*, i64** %94, align 8
  store i64 %7, i64* %6, align 8
  %96 = load i32, i32* %10, align 8
  %97 = add nsw i32 %96, -1
  store i32 %97, i32* %10, align 8
  %98 = load i64*, i64** %8, align 8
  %99 = icmp eq i64* %98, %9
  br i1 %99, label %102, label %100

100:                                              ; preds = %92
  store i64* %9, i64** %8, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %4) #13
  %101 = load i64*, i64** %94, align 8
  br label %102

102:                                              ; preds = %100, %92
  %103 = phi i64* [ %101, %100 ], [ %93, %92 ]
  %104 = phi i64* [ %9, %100 ], [ %95, %92 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %103, i64* %104) #13
  br label %105

105:                                              ; preds = %89, %102
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal5Debug15CanBreakAtEntryENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* nocapture readnone, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = add i64 %3, 27
  %5 = inttoptr i64 %4 to i32*
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = and i32 %6, 32
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %28

9:                                                ; preds = %2
  %10 = and i64 %3, -4294967296
  %11 = add i64 %3, 3
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 acquire, align 4
  %14 = zext i32 %13 to i64
  %15 = and i64 %14, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %28, label %17

17:                                               ; preds = %9
  %18 = or i64 %10, %14
  %19 = add i64 %18, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %10, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = icmp eq i16 %26, 83
  ret i1 %27

28:                                               ; preds = %2, %9
  %29 = phi i1 [ false, %9 ], [ true, %2 ]
  ret i1 %29
}

declare void @_ZN2v88internal18SharedFunctionInfo30EnsureSourcePositionsAvailableEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory12NewDebugInfoENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Factory"*, i64*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug19InstallCoverageInfoENS0_6HandleINS0_18SharedFunctionInfoEEENS2_INS0_12CoverageInfoEEE(%"class.v8::internal::Debug"* nocapture, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = tail call i64* @_ZN2v88internal5Debug20GetOrCreateDebugInfoENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %1)
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 27
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, -10
  %10 = or i32 %9, 8
  store atomic volatile i32 %10, i32* %7 monotonic, align 4
  %11 = load i64, i64* %4, align 8
  %12 = load i64, i64* %2, align 8
  %13 = add i64 %11, 31
  %14 = inttoptr i64 %13 to i32*
  %15 = trunc i64 %12 to i32
  store atomic volatile i32 %15, i32* %14 monotonic, align 4
  %16 = and i64 %12, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %3
  %19 = and i64 %11, -262144
  %20 = or i64 %19, 8
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 262144
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %18
  %26 = or i64 %19, 16
  %27 = inttoptr i64 %26 to %"class.v8::internal::Heap"**
  %28 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %27, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %28, i64 %11, i64 %13, i64 %12) #13
  br label %29

29:                                               ; preds = %25, %18, %3
  %30 = and i64 %12, -262144
  %31 = or i64 %30, 8
  %32 = inttoptr i64 %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = and i64 %33, 24
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %29
  %37 = and i64 %11, -262144
  %38 = or i64 %37, 8
  %39 = inttoptr i64 %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 24
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %36
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %11, i64 %13, i64 %12) #13
  br label %44

44:                                               ; preds = %29, %36, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug13FindDebugInfoENS0_6HandleINS0_9DebugInfoEEEPPNS0_17DebugInfoListNodeES7_(%"class.v8::internal::Debug"* nocapture readonly, i64* readonly, %"class.v8::internal::DebugInfoListNode"** nocapture, %"class.v8::internal::DebugInfoListNode"** nocapture) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %6 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31
  %8 = bitcast %"struct.v8::internal::HandleScopeData"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31, i32 1
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %12, align 8
  store %"class.v8::internal::DebugInfoListNode"* null, %"class.v8::internal::DebugInfoListNode"** %2, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 10
  %16 = bitcast %"class.v8::internal::DebugInfoListNode"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.v8::internal::DebugInfoListNode"** %3 to i64*
  store i64 %17, i64* %18, align 8
  %19 = inttoptr i64 %17 to %"class.v8::internal::DebugInfoListNode"*
  %20 = icmp eq i64 %17, 0
  br i1 %20, label %72, label %21

21:                                               ; preds = %4
  %22 = icmp eq i64* %1, null
  %23 = bitcast %"class.v8::internal::DebugInfoListNode"** %2 to i64*
  br i1 %22, label %24, label %36

24:                                               ; preds = %21, %30
  %25 = phi i64 [ %35, %30 ], [ %17, %21 ]
  %26 = phi %"class.v8::internal::DebugInfoListNode"* [ %33, %30 ], [ %19, %21 ]
  %27 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %26, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = icmp eq i64* %28, null
  br i1 %29, label %50, label %30

30:                                               ; preds = %24
  store i64 %25, i64* %23, align 8
  %31 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %3, align 8
  %32 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %31, i64 0, i32 1
  %33 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %32, align 8
  store %"class.v8::internal::DebugInfoListNode"* %33, %"class.v8::internal::DebugInfoListNode"** %3, align 8
  %34 = icmp eq %"class.v8::internal::DebugInfoListNode"* %33, null
  %35 = ptrtoint %"class.v8::internal::DebugInfoListNode"* %33 to i64
  br i1 %34, label %72, label %24

36:                                               ; preds = %21, %66
  %37 = phi i64 [ %71, %66 ], [ %17, %21 ]
  %38 = phi %"class.v8::internal::DebugInfoListNode"* [ %69, %66 ], [ %19, %21 ]
  %39 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %38, i64 0, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = icmp eq i64* %40, %1
  br i1 %41, label %50, label %42

42:                                               ; preds = %36
  %43 = icmp eq i64* %40, null
  br i1 %43, label %66, label %44

44:                                               ; preds = %42
  %45 = load i64, i64* %40, align 8
  %46 = load i64, i64* %1, align 8
  %47 = trunc i64 %45 to i32
  %48 = trunc i64 %46 to i32
  %49 = icmp eq i32 %47, %48
  br i1 %49, label %50, label %66

50:                                               ; preds = %36, %44, %24
  %51 = icmp eq %"class.v8::internal::Isolate"* %6, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %50
  %53 = inttoptr i64 %9 to i64*
  %54 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %7, i64 0, i32 0
  %55 = load i64*, i64** %54, align 8
  store i64 %9, i64* %8, align 8
  %56 = load i32, i32* %12, align 8
  %57 = add nsw i32 %56, -1
  store i32 %57, i32* %12, align 8
  %58 = load i64*, i64** %10, align 8
  %59 = icmp eq i64* %58, %11
  br i1 %59, label %62, label %60

60:                                               ; preds = %52
  store i64* %11, i64** %10, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %6) #13
  %61 = load i64*, i64** %54, align 8
  br label %62

62:                                               ; preds = %60, %52
  %63 = phi i64* [ %61, %60 ], [ %53, %52 ]
  %64 = phi i64* [ %11, %60 ], [ %55, %52 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %63, i64* %64) #13
  br label %65

65:                                               ; preds = %50, %62
  ret void

66:                                               ; preds = %42, %44
  store i64 %37, i64* %23, align 8
  %67 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %3, align 8
  %68 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %67, i64 0, i32 1
  %69 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %68, align 8
  store %"class.v8::internal::DebugInfoListNode"* %69, %"class.v8::internal::DebugInfoListNode"** %3, align 8
  %70 = icmp eq %"class.v8::internal::DebugInfoListNode"* %69, null
  %71 = ptrtoint %"class.v8::internal::DebugInfoListNode"* %69 to i64
  br i1 %70, label %72, label %36

72:                                               ; preds = %66, %30, %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable
}

declare zeroext i1 @_ZNK2v88internal9DebugInfo7IsEmptyEv(%"class.v8::internal::DebugInfo"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug21FreeDebugInfoListNodeEPNS0_17DebugInfoListNodeES3_(%"class.v8::internal::Debug"* nocapture, %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"*) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.v8::internal::DebugInfoListNode"* %1, null
  %5 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %2, i64 0, i32 1
  %6 = bitcast %"class.v8::internal::DebugInfoListNode"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %1, i64 0, i32 1
  %9 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 10
  %10 = select i1 %4, %"class.v8::internal::DebugInfoListNode"** %9, %"class.v8::internal::DebugInfoListNode"** %8
  %11 = bitcast %"class.v8::internal::DebugInfoListNode"** %10 to i64*
  store i64 %7, i64* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %2, i64 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, -4294967296
  %16 = add i64 %14, 3
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %15, %19
  %21 = add i64 %14, 11
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %15, %24
  %26 = add i64 %20, 15
  %27 = inttoptr i64 %26 to i32*
  store atomic volatile i32 %23, i32* %27 release, align 4
  %28 = and i64 %24, 1
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %41, label %30

30:                                               ; preds = %3
  %31 = and i64 %20, -262144
  %32 = or i64 %31, 8
  %33 = inttoptr i64 %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = and i64 %34, 262144
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %30
  %38 = or i64 %31, 16
  %39 = inttoptr i64 %38 to %"class.v8::internal::Heap"**
  %40 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %39, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %40, i64 %20, i64 %26, i64 %25) #13
  br label %41

41:                                               ; preds = %37, %30, %3
  %42 = and i64 %25, -262144
  %43 = or i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, 24
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %56, label %48

48:                                               ; preds = %41
  %49 = and i64 %20, -262144
  %50 = or i64 %49, 8
  %51 = inttoptr i64 %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = and i64 %52, 24
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %48
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %20, i64 %26, i64 %25) #13
  br label %56

56:                                               ; preds = %41, %48, %55
  %57 = icmp eq %"class.v8::internal::DebugInfoListNode"* %2, null
  br i1 %57, label %64, label %58

58:                                               ; preds = %56
  %59 = load i64*, i64** %12, align 8
  %60 = icmp eq i64* %59, null
  br i1 %60, label %62, label %61

61:                                               ; preds = %58
  tail call void @_ZN2v88internal13GlobalHandles7DestroyEPm(i64* nonnull %59) #13
  br label %62

62:                                               ; preds = %58, %61
  %63 = bitcast %"class.v8::internal::DebugInfoListNode"* %2 to i8*
  tail call void @_ZdlPv(i8* %63) #17
  br label %64

64:                                               ; preds = %62, %56
  ret void
}

declare void @_ZN2v88internal9DebugInfo14ClearBreakInfoEPNS0_7IsolateE(%"class.v8::internal::DebugInfo"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal5Debug15IsBreakAtReturnEPNS0_15JavaScriptFrameE(%"class.v8::internal::Debug"* nocapture readonly, %"class.v8::internal::JavaScriptFrame"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", align 8
  %4 = alloca %"class.v8::internal::BreakLocation", align 8
  %5 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %6 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31
  %8 = bitcast %"struct.v8::internal::HandleScopeData"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31, i32 1
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %12, align 8
  %15 = bitcast %"class.v8::internal::JavaScriptFrame"* %1 to i64 (%"class.v8::internal::JavaScriptFrame"*)***
  %16 = load i64 (%"class.v8::internal::JavaScriptFrame"*)**, i64 (%"class.v8::internal::JavaScriptFrame"*)*** %15, align 8
  %17 = getelementptr inbounds i64 (%"class.v8::internal::JavaScriptFrame"*)*, i64 (%"class.v8::internal::JavaScriptFrame"*)** %16, i64 13
  %18 = load i64 (%"class.v8::internal::JavaScriptFrame"*)*, i64 (%"class.v8::internal::JavaScriptFrame"*)** %17, align 8
  %19 = tail call i64 %18(%"class.v8::internal::JavaScriptFrame"* %1) #13
  %20 = add i64 %19, 11
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i64 %19, -4294967296
  %24 = zext i32 %22 to i64
  %25 = or i64 %23, %24
  %26 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %26, i64 0, i32 31, i32 4
  %28 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %27, align 8
  %29 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %2
  %31 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %28, i64 %25) #13
  %32 = load i64, i64* %31, align 8
  br label %46

33:                                               ; preds = %2
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %26, i64 0, i32 31, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %26, i64 0, i32 31, i32 1
  %37 = load i64*, i64** %36, align 8
  %38 = icmp eq i64* %35, %37
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %26) #13
  br label %41

41:                                               ; preds = %39, %33
  %42 = phi i64* [ %40, %39 ], [ %35, %33 ]
  %43 = ptrtoint i64* %42 to i64
  %44 = add i64 %43, 8
  %45 = inttoptr i64 %44 to i64*
  store i64* %45, i64** %34, align 8
  store i64 %25, i64* %42, align 8
  br label %46

46:                                               ; preds = %30, %41
  %47 = phi i64 [ %32, %30 ], [ %25, %41 ]
  %48 = phi i64* [ %31, %30 ], [ %42, %41 ]
  %49 = bitcast %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #13
  %50 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %47, i64* %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %3, i64 0, i32 0
  %52 = call zeroext i1 @_ZNK2v88internal18SharedFunctionInfo12HasBreakInfoEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %51) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #13
  br i1 %52, label %53, label %86

53:                                               ; preds = %46
  %54 = load i64, i64* %48, align 8
  %55 = and i64 %54, -4294967296
  %56 = add i64 %54, 15
  %57 = inttoptr i64 %56 to i32*
  %58 = load atomic i32, i32* %57 acquire, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %55, %59
  %61 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %61, i64 0, i32 31, i32 4
  %63 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %62, align 8
  %64 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %63, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %53
  %66 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %63, i64 %60) #13
  br label %80

67:                                               ; preds = %53
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %61, i64 0, i32 31, i32 0
  %69 = load i64*, i64** %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %61, i64 0, i32 31, i32 1
  %71 = load i64*, i64** %70, align 8
  %72 = icmp eq i64* %69, %71
  br i1 %72, label %73, label %75

73:                                               ; preds = %67
  %74 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %61) #13
  br label %75

75:                                               ; preds = %73, %67
  %76 = phi i64* [ %74, %73 ], [ %69, %67 ]
  %77 = ptrtoint i64* %76 to i64
  %78 = add i64 %77, 8
  %79 = inttoptr i64 %78 to i64*
  store i64* %79, i64** %68, align 8
  store i64 %60, i64* %76, align 8
  br label %80

80:                                               ; preds = %65, %75
  %81 = phi i64* [ %66, %65 ], [ %76, %75 ]
  %82 = bitcast %"class.v8::internal::BreakLocation"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #13
  call void @_ZN2v88internal13BreakLocation9FromFrameENS0_6HandleINS0_9DebugInfoEEEPNS0_15JavaScriptFrameE(%"class.v8::internal::BreakLocation"* nonnull sret %4, i64* %81, %"class.v8::internal::JavaScriptFrame"* %1)
  %83 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %4, i64 0, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #13
  br label %86

86:                                               ; preds = %46, %80
  %87 = phi i1 [ %85, %80 ], [ false, %46 ]
  %88 = icmp eq %"class.v8::internal::Isolate"* %6, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %86
  %90 = inttoptr i64 %9 to i64*
  %91 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %7, i64 0, i32 0
  %92 = load i64*, i64** %91, align 8
  store i64 %9, i64* %8, align 8
  %93 = load i32, i32* %12, align 8
  %94 = add nsw i32 %93, -1
  store i32 %94, i32* %12, align 8
  %95 = load i64*, i64** %10, align 8
  %96 = icmp eq i64* %95, %11
  br i1 %96, label %99, label %97

97:                                               ; preds = %89
  store i64* %11, i64** %10, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %6) #13
  %98 = load i64*, i64** %91, align 8
  br label %99

99:                                               ; preds = %97, %89
  %100 = phi i64* [ %98, %97 ], [ %90, %89 ]
  %101 = phi i64* [ %11, %97 ], [ %92, %89 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %100, i64* %101) #13
  br label %102

102:                                              ; preds = %86, %99
  ret i1 %87
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal5Debug16GetLoadedScriptsEv(%"class.v8::internal::Debug"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Script::Iterator", align 8
  %3 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap17CollectAllGarbageEiNS0_23GarbageCollectionReasonENS_15GCCallbackFlagsE(%"class.v8::internal::Heap"* %5, i32 0, i32 5, i32 0) #13
  %6 = bitcast %"class.v8::internal::Isolate"** %3 to %"class.v8::internal::Factory"**
  %7 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %7, i64 5320
  %9 = bitcast %"class.v8::internal::Factory"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, -4294967296
  %12 = add i64 %10, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = icmp eq i16 %19, 184
  br i1 %20, label %24, label %21

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %7, i64 360
  %23 = bitcast %"class.v8::internal::Factory"* %22 to i64*
  br label %137

24:                                               ; preds = %1
  %25 = bitcast %"class.v8::internal::Factory"* %7 to %"class.v8::internal::FactoryBase"*
  %26 = add i64 %10, 7
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = ashr i32 %28, 1
  %30 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %25, i32 %29, i8 zeroext 0) #13
  %31 = bitcast %"class.v8::internal::Script::Iterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #13
  %32 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  call void @_ZN2v88internal6Script8IteratorC1EPNS0_7IsolateE(%"class.v8::internal::Script::Iterator"* nonnull %2, %"class.v8::internal::Isolate"* %32) #13
  %33 = call i64 @_ZN2v88internal6Script8Iterator4NextEv(%"class.v8::internal::Script::Iterator"* nonnull %2) #13
  %34 = trunc i64 %33 to i32
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %40

36:                                               ; preds = %132, %24
  %37 = phi i32 [ 0, %24 ], [ %133, %132 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #13
  %38 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %39 = call i64* @_ZN2v88internal10FixedArray13ShrinkOrEmptyEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"* %38, i64* %30, i32 %37) #13
  br label %137

40:                                               ; preds = %24, %132
  %41 = phi i32 [ %135, %132 ], [ %34, %24 ]
  %42 = phi i32 [ %133, %132 ], [ 0, %24 ]
  %43 = phi i64 [ %134, %132 ], [ %33, %24 ]
  %44 = and i64 %43, -4294967296
  %45 = add i64 %43, 3
  %46 = inttoptr i64 %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %44, %48
  %50 = and i64 %48, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %99, label %52

52:                                               ; preds = %40
  %53 = add i64 %49, -1
  %54 = inttoptr i64 %53 to i32*
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = zext i32 %55 to i64
  %57 = or i64 %44, %56
  %58 = add i64 %57, 7
  %59 = inttoptr i64 %58 to i16*
  %60 = load atomic i16, i16* %59 monotonic, align 2
  %61 = icmp ult i16 %60, 64
  br i1 %61, label %62, label %99

62:                                               ; preds = %52
  %63 = load atomic i32, i32* %54 acquire, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %44, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = and i16 %68, 7
  %70 = icmp eq i16 %69, 2
  br i1 %70, label %71, label %99

71:                                               ; preds = %62
  %72 = load atomic i32, i32* %54 monotonic, align 4
  %73 = zext i32 %72 to i64
  %74 = or i64 %44, %73
  %75 = add i64 %74, 7
  %76 = inttoptr i64 %75 to i16*
  %77 = load atomic i16, i16* %76 monotonic, align 2
  %78 = and i16 %77, 8
  %79 = icmp eq i16 %78, 0
  br i1 %79, label %85, label %80

80:                                               ; preds = %71
  %81 = add i64 %49, 11
  %82 = inttoptr i64 %81 to %"class.v8::String::ExternalOneByteStringResource"**
  %83 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %82, align 1
  %84 = icmp eq %"class.v8::String::ExternalOneByteStringResource"* %83, null
  br i1 %84, label %132, label %99

85:                                               ; preds = %71
  %86 = load atomic i32, i32* %54 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %44, %87
  %89 = add i64 %88, 7
  %90 = inttoptr i64 %89 to i16*
  %91 = load atomic i16, i16* %90 monotonic, align 2
  %92 = and i16 %91, 8
  %93 = icmp eq i16 %92, 0
  br i1 %93, label %94, label %99

94:                                               ; preds = %85
  %95 = add i64 %49, 11
  %96 = inttoptr i64 %95 to %"class.v8::String::ExternalStringResource"**
  %97 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %96, align 1
  %98 = icmp eq %"class.v8::String::ExternalStringResource"* %97, null
  br i1 %98, label %132, label %99

99:                                               ; preds = %94, %80, %40, %85, %62, %52
  %100 = load i64, i64* %30, align 8
  %101 = add nsw i32 %42, 1
  %102 = shl i32 %42, 2
  %103 = sext i32 %102 to i64
  %104 = add nsw i64 %103, 7
  %105 = add i64 %104, %100
  %106 = inttoptr i64 %105 to i32*
  store atomic volatile i32 %41, i32* %106 monotonic, align 4
  %107 = and i64 %43, 1
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %132, label %109

109:                                              ; preds = %99
  %110 = and i64 %100, -262144
  %111 = or i64 %110, 8
  %112 = inttoptr i64 %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = and i64 %113, 262144
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %120, label %116

116:                                              ; preds = %109
  %117 = or i64 %110, 16
  %118 = inttoptr i64 %117 to %"class.v8::internal::Heap"**
  %119 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %118, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %119, i64 %100, i64 %105, i64 %43) #13
  br label %120

120:                                              ; preds = %116, %109
  %121 = and i64 %43, -262144
  %122 = or i64 %121, 8
  %123 = inttoptr i64 %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = and i64 %124, 24
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %132, label %127

127:                                              ; preds = %120
  %128 = load i64, i64* %112, align 8
  %129 = and i64 %128, 24
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %127
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %100, i64 %105, i64 %43) #13
  br label %132

132:                                              ; preds = %94, %80, %131, %127, %120, %99
  %133 = phi i32 [ %42, %94 ], [ %42, %80 ], [ %101, %99 ], [ %101, %120 ], [ %101, %127 ], [ %101, %131 ]
  %134 = call i64 @_ZN2v88internal6Script8Iterator4NextEv(%"class.v8::internal::Script::Iterator"* nonnull %2) #13
  %135 = trunc i64 %134 to i32
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %36, label %40

137:                                              ; preds = %36, %21
  %138 = phi i64* [ %23, %21 ], [ %39, %36 ]
  ret i64* %138
}

declare void @_ZN2v88internal4Heap17CollectAllGarbageEiNS0_23GarbageCollectionReasonENS_15GCCallbackFlagsE(%"class.v8::internal::Heap"*, i32, i32, i32) local_unnamed_addr #3

declare void @_ZN2v88internal6Script8IteratorC1EPNS0_7IsolateE(%"class.v8::internal::Script::Iterator"*, %"class.v8::internal::Isolate"*) unnamed_addr #3

declare i64 @_ZN2v88internal6Script8Iterator4NextEv(%"class.v8::internal::Script::Iterator"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal10FixedArray13ShrinkOrEmptyEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZN2v88internal5Debug7OnThrowENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Debug"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 0
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %115

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 3
  %8 = load i8, i8* %7, align 2, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %115

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %115, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %16 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 108
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 32
  br i1 %19, label %115, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 31
  %22 = bitcast %"struct.v8::internal::HandleScopeData"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 31, i32 1
  %25 = load i64*, i64** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 31, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %15, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 0, i32 7, i32 0, i64 5
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %33 to i32
  %35 = trunc i64 %31 to i32
  %36 = icmp eq i32 %34, %35
  br i1 %36, label %63, label %37

37:                                               ; preds = %20
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 31, i32 4
  %39 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %38, align 8
  %40 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %39, i64 %33) #13
  br label %56

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 31, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 31, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = icmp eq i64* %45, %47
  br i1 %48, label %49, label %51

49:                                               ; preds = %43
  %50 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %29) #13
  br label %51

51:                                               ; preds = %49, %43
  %52 = phi i64* [ %50, %49 ], [ %45, %43 ]
  %53 = ptrtoint i64* %52 to i64
  %54 = add i64 %53, 8
  %55 = inttoptr i64 %54 to i64*
  store i64* %55, i64** %44, align 8
  store i64 %33, i64* %52, align 8
  br label %56

56:                                               ; preds = %41, %51
  %57 = phi i64* [ %42, %41 ], [ %52, %51 ]
  %58 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %15, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %58, i64 0, i32 0, i32 7, i32 0, i64 5
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %58, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  store i64 %60, i64* %61, align 8
  %62 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %15, align 8
  br label %63

63:                                               ; preds = %20, %56
  %64 = phi %"class.v8::internal::Isolate"* [ %62, %56 ], [ %29, %20 ]
  %65 = phi i64* [ %57, %56 ], [ null, %20 ]
  %66 = tail call i64* @_ZN2v88internal7Isolate24GetPromiseOnStackOnThrowEv(%"class.v8::internal::Isolate"* %64) #13
  %67 = load i64, i64* %66, align 8
  %68 = and i64 %67, 1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %82, label %70

70:                                               ; preds = %63
  %71 = and i64 %67, -4294967296
  %72 = add i64 %67, -1
  %73 = inttoptr i64 %72 to i32*
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = zext i32 %74 to i64
  %76 = or i64 %71, %75
  %77 = add i64 %76, 7
  %78 = inttoptr i64 %77 to i16*
  %79 = load atomic i16, i16* %78 monotonic, align 2
  %80 = icmp eq i16 %79, 1101
  %81 = zext i1 %80 to i32
  br label %82

82:                                               ; preds = %63, %70
  %83 = phi i32 [ 0, %63 ], [ %81, %70 ]
  tail call void @_ZN2v88internal5Debug11OnExceptionENS0_6HandleINS0_6ObjectEEES4_NS_5debug13ExceptionTypeE(%"class.v8::internal::Debug"* %0, i64* %1, i64* %66, i32 %83)
  %84 = icmp eq i64* %65, null
  br i1 %84, label %89, label %85

85:                                               ; preds = %82
  %86 = load i64, i64* %65, align 8
  %87 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %15, align 8
  %88 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %87, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  store i64 %86, i64* %88, align 8
  br label %89

89:                                               ; preds = %85, %82
  tail call void @_ZN2v88internal5Debug18PrepareStepOnThrowEv(%"class.v8::internal::Debug"* %0)
  %90 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %15, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %90, i64 0, i32 0, i32 6
  %92 = tail call zeroext i1 @_ZN2v88internal10StackGuard14CheckInterruptENS1_13InterruptFlagE(%"class.v8::internal::StackGuard"* %91, i32 1) #13
  br i1 %92, label %93, label %98

93:                                               ; preds = %89
  %94 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %15, align 8
  %95 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %94, i64 0, i32 0, i32 6
  tail call void @_ZN2v88internal10StackGuard14ClearInterruptENS1_13InterruptFlagE(%"class.v8::internal::StackGuard"* %95, i32 1) #13
  %96 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %15, align 8
  %97 = tail call i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"* %96) #13
  br label %98

98:                                               ; preds = %89, %93
  %99 = phi i64 [ %97, %93 ], [ 0, %89 ]
  %100 = phi i8 [ 1, %93 ], [ 0, %89 ]
  %101 = icmp eq %"class.v8::internal::Isolate"* %16, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %98
  %103 = inttoptr i64 %23 to i64*
  %104 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %21, i64 0, i32 0
  %105 = load i64*, i64** %104, align 8
  store i64 %23, i64* %22, align 8
  %106 = load i32, i32* %26, align 8
  %107 = add nsw i32 %106, -1
  store i32 %107, i32* %26, align 8
  %108 = load i64*, i64** %24, align 8
  %109 = icmp eq i64* %108, %25
  br i1 %109, label %112, label %110

110:                                              ; preds = %102
  store i64* %25, i64** %24, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %16) #13
  %111 = load i64*, i64** %104, align 8
  br label %112

112:                                              ; preds = %110, %102
  %113 = phi i64* [ %111, %110 ], [ %103, %102 ]
  %114 = phi i64* [ %25, %110 ], [ %105, %102 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %113, i64* %114) #13
  br label %115

115:                                              ; preds = %14, %10, %6, %2, %112, %98
  %116 = phi i64 [ %99, %98 ], [ %99, %112 ], [ 0, %2 ], [ 0, %6 ], [ 0, %10 ], [ 0, %14 ]
  %117 = phi i8 [ %100, %98 ], [ %100, %112 ], [ 0, %2 ], [ 0, %6 ], [ 0, %10 ], [ 0, %14 ]
  %118 = insertvalue { i8, i64 } undef, i8 %117, 0
  %119 = insertvalue { i8, i64 } %118, i64 %116, 1
  ret { i8, i64 } %119
}

declare i64* @_ZN2v88internal7Isolate24GetPromiseOnStackOnThrowEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug11OnExceptionENS0_6HandleINS0_6ObjectEEES4_NS_5debug13ExceptionTypeE(%"class.v8::internal::Debug"*, i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::StackTraceFrameIterator", align 8
  %6 = alloca %"class.v8::internal::JavaScriptFrameIterator", align 8
  %7 = alloca %"class.v8::internal::StackLimitCheck", align 8
  %8 = alloca %"class.v8::internal::DebugScope", align 8
  %9 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %10 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %11 = tail call i32 @_ZN2v88internal7Isolate23PredictExceptionCatcherEv(%"class.v8::internal::Isolate"* %10) #13
  %12 = icmp eq i32 %11, 3
  br i1 %12, label %190, label %13

13:                                               ; preds = %4
  %14 = icmp eq i32 %11, 0
  %15 = load i64, i64* %2, align 8
  %16 = and i64 %15, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %48, label %18

18:                                               ; preds = %13
  %19 = and i64 %15, -4294967296
  %20 = add i64 %15, -1
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %19, %23
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = icmp ugt i16 %27, 188
  br i1 %28, label %29, label %48

29:                                               ; preds = %18
  %30 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 0, i32 7, i32 0, i64 492
  %32 = tail call i64* @_ZN2v88internal6Object11SetPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEES5_NS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %30, i64* %2, i64* %31, i64* %31, i32 0, i64 1) #13
  %33 = load i64, i64* %2, align 8
  %34 = and i64 %33, -4294967296
  %35 = add i64 %33, -1
  %36 = inttoptr i64 %35 to i32*
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = zext i32 %37 to i64
  %39 = or i64 %34, %38
  %40 = add i64 %39, 7
  %41 = inttoptr i64 %40 to i16*
  %42 = load atomic i16, i16* %41 monotonic, align 2
  %43 = icmp eq i16 %42, 1101
  br i1 %43, label %44, label %48

44:                                               ; preds = %29
  %45 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %46 = tail call zeroext i1 @_ZN2v88internal7Isolate34PromiseHasUserDefinedRejectHandlerENS0_6HandleINS0_9JSPromiseEEE(%"class.v8::internal::Isolate"* %45, i64* %2) #13
  %47 = xor i1 %46, true
  br label %48

48:                                               ; preds = %13, %44, %29, %18
  %49 = phi i1 [ %14, %18 ], [ %47, %44 ], [ true, %29 ], [ %14, %13 ]
  %50 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 0
  %51 = load %"class.v8::debug::DebugDelegate"*, %"class.v8::debug::DebugDelegate"** %50, align 8
  %52 = icmp eq %"class.v8::debug::DebugDelegate"* %51, null
  br i1 %52, label %190, label %53

53:                                               ; preds = %48
  br i1 %49, label %54, label %62

54:                                               ; preds = %53
  %55 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 8
  %56 = load i8, i8* %55, align 1, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %66

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 7
  %60 = load i8, i8* %59, align 2, !range !2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %190, label %66

62:                                               ; preds = %53
  %63 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 7
  %64 = load i8, i8* %63, align 2, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %190, label %66

66:                                               ; preds = %58, %54, %62
  %67 = bitcast %"class.v8::internal::JavaScriptFrameIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1616, i8* nonnull %67) #13
  %68 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %69 = getelementptr inbounds %"class.v8::internal::JavaScriptFrameIterator", %"class.v8::internal::JavaScriptFrameIterator"* %6, i64 0, i32 0
  call void @_ZN2v88internal18StackFrameIteratorC1EPNS0_7IsolateE(%"class.v8::internal::StackFrameIterator"* nonnull %69, %"class.v8::internal::Isolate"* %68) #13
  %70 = getelementptr inbounds %"class.v8::internal::JavaScriptFrameIterator", %"class.v8::internal::JavaScriptFrameIterator"* %6, i64 0, i32 0, i32 0, i32 23
  %71 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %70, align 8
  %72 = icmp eq %"class.v8::internal::StackFrame"* %71, null
  br i1 %72, label %107, label %73

73:                                               ; preds = %66
  call void @_ZN2v88internal23JavaScriptFrameIterator7AdvanceEv(%"class.v8::internal::JavaScriptFrameIterator"* nonnull %6) #13
  %74 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %70, align 8
  %75 = icmp eq %"class.v8::internal::StackFrame"* %74, null
  br i1 %75, label %107, label %76

76:                                               ; preds = %73
  %77 = bitcast %"class.v8::internal::StackFrame"* %74 to %"class.v8::internal::JavaScriptFrame"*
  %78 = call zeroext i1 @_ZN2v88internal5Debug24IsMutedAtCurrentLocationEPNS0_15JavaScriptFrameE(%"class.v8::internal::Debug"* %0, %"class.v8::internal::JavaScriptFrame"* nonnull %77)
  br i1 %78, label %189, label %79

79:                                               ; preds = %76
  %80 = bitcast %"class.v8::internal::StackTraceFrameIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1616, i8* nonnull %80) #13
  %81 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  call void @_ZN2v88internal23StackTraceFrameIteratorC1EPNS0_7IsolateE(%"class.v8::internal::StackTraceFrameIterator"* nonnull %5, %"class.v8::internal::Isolate"* %81) #13
  %82 = getelementptr inbounds %"class.v8::internal::StackTraceFrameIterator", %"class.v8::internal::StackTraceFrameIterator"* %5, i64 0, i32 0, i32 0, i32 23
  %83 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %82, align 8
  %84 = icmp eq %"class.v8::internal::StackFrame"* %83, null
  br i1 %84, label %101, label %85

85:                                               ; preds = %79, %92
  %86 = phi %"class.v8::internal::StackFrame"* [ %93, %92 ], [ %83, %79 ]
  %87 = bitcast %"class.v8::internal::StackFrame"* %86 to i32 (%"class.v8::internal::StackFrame"*)***
  %88 = load i32 (%"class.v8::internal::StackFrame"*)**, i32 (%"class.v8::internal::StackFrame"*)*** %87, align 8
  %89 = load i32 (%"class.v8::internal::StackFrame"*)*, i32 (%"class.v8::internal::StackFrame"*)** %88, align 8
  %90 = call i32 %89(%"class.v8::internal::StackFrame"* nonnull %86) #13
  %91 = icmp eq i32 %90, 4
  br i1 %91, label %92, label %95

92:                                               ; preds = %85
  call void @_ZN2v88internal23StackTraceFrameIterator7AdvanceEv(%"class.v8::internal::StackTraceFrameIterator"* nonnull %5) #13
  %93 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %82, align 8
  %94 = icmp eq %"class.v8::internal::StackFrame"* %93, null
  br i1 %94, label %101, label %85

95:                                               ; preds = %85
  %96 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %82, align 8
  %97 = icmp eq %"class.v8::internal::StackFrame"* %96, null
  br i1 %97, label %101, label %98

98:                                               ; preds = %95
  %99 = bitcast %"class.v8::internal::StackFrame"* %96 to %"class.v8::internal::JavaScriptFrame"*
  %100 = call zeroext i1 @_ZN2v88internal5Debug17IsFrameBlackboxedEPNS0_15JavaScriptFrameE(%"class.v8::internal::Debug"* %0, %"class.v8::internal::JavaScriptFrame"* nonnull %99) #13
  br label %101

101:                                              ; preds = %92, %98, %95, %79
  %102 = phi i1 [ %100, %98 ], [ true, %95 ], [ true, %79 ], [ true, %92 ]
  %103 = and i1 %49, %102
  br i1 %103, label %104, label %106

104:                                              ; preds = %101
  %105 = call zeroext i1 @_ZN2v88internal5Debug29AllFramesOnStackAreBlackboxedEv(%"class.v8::internal::Debug"* %0) #13
  call void @llvm.lifetime.end.p0i8(i64 1616, i8* nonnull %80) #13
  br i1 %105, label %188, label %108

106:                                              ; preds = %101
  call void @llvm.lifetime.end.p0i8(i64 1616, i8* nonnull %80) #13
  br i1 %102, label %188, label %108

107:                                              ; preds = %66, %73
  call void @llvm.lifetime.end.p0i8(i64 1616, i8* nonnull %67) #13
  br label %190

108:                                              ; preds = %104, %106
  %109 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %70, align 8
  %110 = icmp eq %"class.v8::internal::StackFrame"* %109, null
  call void @llvm.lifetime.end.p0i8(i64 1616, i8* nonnull %67) #13
  br i1 %110, label %190, label %111

111:                                              ; preds = %108
  %112 = bitcast %"class.v8::internal::StackLimitCheck"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #13
  %113 = bitcast %"class.v8::internal::Isolate"** %9 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.v8::internal::StackLimitCheck"* %7 to i64*
  store i64 %114, i64* %115, align 8
  %116 = call zeroext i1 @_ZNK2v88internal15StackLimitCheck15JsHasOverflowedEm(%"class.v8::internal::StackLimitCheck"* nonnull %7, i64 0) #13
  br i1 %116, label %187, label %117

117:                                              ; preds = %111
  %118 = bitcast %"class.v8::internal::DebugScope"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %118) #13
  call void @_ZN2v88internal10DebugScopeC2EPNS0_5DebugE(%"class.v8::internal::DebugScope"* nonnull %8, %"class.v8::internal::Debug"* %0)
  %119 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %120 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %119, i64 0, i32 31
  %121 = bitcast %"struct.v8::internal::HandleScopeData"* %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %119, i64 0, i32 31, i32 1
  %124 = load i64*, i64** %123, align 8
  %125 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %119, i64 0, i32 31, i32 2
  %126 = load i32, i32* %125, align 8
  %127 = add nsw i32 %126, 1
  store i32 %127, i32* %125, align 8
  %128 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 5
  %129 = load i8, i8* %128, align 4, !range !2
  store i8 1, i8* %128, align 4
  %130 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %131 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %130, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = and i64 %132, -4294967296
  %134 = add i64 %132, -1
  %135 = inttoptr i64 %134 to i32*
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = zext i32 %136 to i64
  %138 = or i64 %133, %137
  %139 = add i64 %138, 19
  %140 = inttoptr i64 %139 to i32*
  %141 = load i32, i32* %140, align 4
  %142 = zext i32 %141 to i64
  %143 = or i64 %133, %142
  %144 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %130, i64 0, i32 31, i32 4
  %145 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %144, align 8
  %146 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %117
  %148 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %145, i64 %143) #13
  br label %162

149:                                              ; preds = %117
  %150 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %130, i64 0, i32 31, i32 0
  %151 = load i64*, i64** %150, align 8
  %152 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %130, i64 0, i32 31, i32 1
  %153 = load i64*, i64** %152, align 8
  %154 = icmp eq i64* %151, %153
  br i1 %154, label %155, label %157

155:                                              ; preds = %149
  %156 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %130) #13
  br label %157

157:                                              ; preds = %155, %149
  %158 = phi i64* [ %156, %155 ], [ %151, %149 ]
  %159 = ptrtoint i64* %158 to i64
  %160 = add i64 %159, 8
  %161 = inttoptr i64 %160 to i64*
  store i64* %161, i64** %150, align 8
  store i64 %143, i64* %158, align 8
  br label %162

162:                                              ; preds = %147, %157
  %163 = phi i64* [ %148, %147 ], [ %158, %157 ]
  %164 = load %"class.v8::debug::DebugDelegate"*, %"class.v8::debug::DebugDelegate"** %50, align 8
  %165 = bitcast i64* %163 to %"class.v8::Context"*
  %166 = bitcast i64* %1 to %"class.v8::Value"*
  %167 = bitcast i64* %2 to %"class.v8::Value"*
  %168 = bitcast %"class.v8::debug::DebugDelegate"* %164 to void (%"class.v8::debug::DebugDelegate"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Value"*, i1, i32)***
  %169 = load void (%"class.v8::debug::DebugDelegate"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Value"*, i1, i32)**, void (%"class.v8::debug::DebugDelegate"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Value"*, i1, i32)*** %168, align 8
  %170 = getelementptr inbounds void (%"class.v8::debug::DebugDelegate"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Value"*, i1, i32)*, void (%"class.v8::debug::DebugDelegate"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Value"*, i1, i32)** %169, i64 4
  %171 = load void (%"class.v8::debug::DebugDelegate"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Value"*, i1, i32)*, void (%"class.v8::debug::DebugDelegate"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Value"*, i1, i32)** %170, align 8
  call void %171(%"class.v8::debug::DebugDelegate"* %164, %"class.v8::Context"* %165, %"class.v8::Value"* %166, %"class.v8::Value"* %167, i1 zeroext %49, i32 %3) #13
  store i8 %129, i8* %128, align 4
  %172 = icmp eq %"class.v8::internal::Isolate"* %119, null
  br i1 %172, label %186, label %173

173:                                              ; preds = %162
  %174 = inttoptr i64 %122 to i64*
  %175 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %120, i64 0, i32 0
  %176 = load i64*, i64** %175, align 8
  store i64 %122, i64* %121, align 8
  %177 = load i32, i32* %125, align 8
  %178 = add nsw i32 %177, -1
  store i32 %178, i32* %125, align 8
  %179 = load i64*, i64** %123, align 8
  %180 = icmp eq i64* %179, %124
  br i1 %180, label %183, label %181

181:                                              ; preds = %173
  store i64* %124, i64** %123, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %119) #13
  %182 = load i64*, i64** %175, align 8
  br label %183

183:                                              ; preds = %181, %173
  %184 = phi i64* [ %182, %181 ], [ %174, %173 ]
  %185 = phi i64* [ %124, %181 ], [ %176, %173 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %184, i64* %185) #13
  br label %186

186:                                              ; preds = %162, %183
  call void @_ZN2v88internal10DebugScopeD2Ev(%"class.v8::internal::DebugScope"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %118) #13
  br label %187

187:                                              ; preds = %111, %186
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #13
  br label %190

188:                                              ; preds = %104, %106
  call void @llvm.lifetime.end.p0i8(i64 1616, i8* nonnull %67) #13
  br label %190

189:                                              ; preds = %76
  call void @llvm.lifetime.end.p0i8(i64 1616, i8* nonnull %67) #13
  br label %190

190:                                              ; preds = %107, %108, %187, %48, %58, %62, %188, %189, %4
  ret void
}

declare i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug15OnPromiseRejectENS0_6HandleINS0_6ObjectEEES4_(%"class.v8::internal::Debug"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 0
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %73

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 3
  %9 = load i8, i8* %8, align 2, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %73

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 1
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %73, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 108
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 32
  br i1 %20, label %73, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31
  %23 = bitcast %"struct.v8::internal::HandleScopeData"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 1
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %27, align 8
  %30 = bitcast %"class.v8::internal::Isolate"** %16 to %"class.v8::internal::Factory"**
  %31 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %31, i64 4064
  %33 = bitcast %"class.v8::internal::Factory"* %32 to i64*
  %34 = load i64, i64* %1, align 8
  %35 = and i64 %34, 1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %57, label %37

37:                                               ; preds = %21
  %38 = and i64 %34, -4294967296
  %39 = add i64 %34, -1
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %38, %42
  %44 = add i64 %43, 7
  %45 = inttoptr i64 %44 to i16*
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = icmp ugt i16 %46, 188
  br i1 %47, label %48, label %57

48:                                               ; preds = %37
  %49 = tail call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %1, i64* %33)
  %50 = load i64, i64* %49, align 8
  %51 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %51, i64 0, i32 0, i32 7, i32 0, i64 4
  %53 = load i64, i64* %52, align 8
  %54 = trunc i64 %50 to i32
  %55 = trunc i64 %53 to i32
  %56 = icmp eq i32 %54, %55
  br i1 %56, label %57, label %58

57:                                               ; preds = %21, %37, %48
  tail call void @_ZN2v88internal5Debug11OnExceptionENS0_6HandleINS0_6ObjectEEES4_NS_5debug13ExceptionTypeE(%"class.v8::internal::Debug"* %0, i64* %2, i64* %1, i32 1)
  br label %58

58:                                               ; preds = %57, %48
  %59 = icmp eq %"class.v8::internal::Isolate"* %17, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %58
  %61 = inttoptr i64 %24 to i64*
  %62 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %22, i64 0, i32 0
  %63 = load i64*, i64** %62, align 8
  store i64 %24, i64* %23, align 8
  %64 = load i32, i32* %27, align 8
  %65 = add nsw i32 %64, -1
  store i32 %65, i32* %27, align 8
  %66 = load i64*, i64** %25, align 8
  %67 = icmp eq i64* %66, %26
  br i1 %67, label %70, label %68

68:                                               ; preds = %60
  store i64* %26, i64** %25, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %17) #13
  %69 = load i64*, i64** %62, align 8
  br label %70

70:                                               ; preds = %68, %60
  %71 = phi i64* [ %69, %68 ], [ %61, %60 ]
  %72 = phi i64* [ %26, %68 ], [ %63, %60 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %71, i64* %72) #13
  br label %73

73:                                               ; preds = %3, %7, %11, %70, %58, %15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64*, i64*) local_unnamed_addr #12 comdat align 2 {
  %3 = alloca %"class.v8::internal::LookupIterator", align 8
  %4 = bitcast %"class.v8::internal::LookupIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %4) #13
  %5 = load i64, i64* %0, align 8
  %6 = and i64 %5, -262144
  %7 = or i64 %6, 16
  %8 = inttoptr i64 %7 to i64*
  %9 = load i64, i64* %8, align 16
  %10 = add i64 %9, -41416
  %11 = inttoptr i64 %10 to %"class.v8::internal::Isolate"*
  %12 = ptrtoint i64* %0 to i64
  %13 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 0
  %14 = icmp eq i64* %1, null
  br i1 %14, label %15, label %19

15:                                               ; preds = %2
  %16 = load i64, i64* null, align 536870912
  %17 = add i64 %16, -1
  %18 = inttoptr i64 %17 to i32*
  br label %40

19:                                               ; preds = %2
  %20 = load i64, i64* %1, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 4
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %20, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i64 %22, 4294967295
  %27 = icmp eq i64 %26, 0
  tail call void @llvm.assume(i1 %27) #13
  %28 = zext i32 %25 to i64
  %29 = or i64 %22, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = icmp eq i16 %32, 64
  br i1 %33, label %34, label %40

34:                                               ; preds = %19
  %35 = add i64 %20, 7
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %15, %34, %19
  %41 = phi i32* [ %18, %15 ], [ %24, %34 ], [ %24, %19 ]
  %42 = phi i64 [ %16, %15 ], [ %20, %34 ], [ %20, %19 ]
  br label %43

43:                                               ; preds = %40, %34
  %44 = phi i32* [ %41, %40 ], [ %24, %34 ]
  %45 = phi i64 [ %42, %40 ], [ %20, %34 ]
  %46 = phi i32 [ 2, %40 ], [ 0, %34 ]
  store i32 %46, i32* %13, align 8
  %47 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 1
  store i32 4, i32* %47, align 4
  %48 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 2
  store i8 0, i8* %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 3
  store i32 0, i32* %49, align 4
  %50 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 4, i32 0
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %11, %"class.v8::internal::Isolate"** %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 6, i32 0, i32 0
  store i64* %1, i64** %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 8, i32 0, i32 0
  store i64* %0, i64** %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 10
  %57 = bitcast %"class.v8::internal::Handle.1213"* %56 to i64*
  store i64 %12, i64* %57, align 8
  %58 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 11
  %59 = bitcast i64* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 -1, i64 16, i1 false) #13
  %60 = and i64 %45, -4294967296
  %61 = load atomic i32, i32* %44 monotonic, align 4
  %62 = zext i32 %61 to i64
  %63 = or i64 %60, %62
  %64 = add i64 %63, 7
  %65 = inttoptr i64 %64 to i16*
  %66 = load atomic i16, i16* %65 monotonic, align 2
  %67 = and i16 %66, -32
  %68 = icmp eq i16 %67, 32
  br i1 %68, label %69, label %73

69:                                               ; preds = %43
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 5, i32 0, i32 0, i32 0
  %71 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %70, align 8
  %72 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %71, %"class.v8::internal::Isolate"* %11, i64* %1) #13
  br label %73

73:                                               ; preds = %43, %69
  %74 = phi i64* [ %72, %69 ], [ %1, %43 ]
  store i64* %74, i64** %52, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %3) #13
  %75 = load i32, i32* %47, align 4
  %76 = icmp eq i32 %75, 4
  br i1 %76, label %77, label %82

77:                                               ; preds = %73
  %78 = bitcast %"class.v8::internal::Isolate"** %51 to %"class.v8::internal::Factory"**
  %79 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %79, i64 160
  %81 = bitcast %"class.v8::internal::Factory"* %80 to i64*
  br label %84

82:                                               ; preds = %73
  %83 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyEPNS0_14LookupIteratorENS0_16AllocationPolicyE(%"class.v8::internal::LookupIterator"* nonnull %3, i32 0) #13
  br label %84

84:                                               ; preds = %82, %77
  %85 = phi i64* [ %83, %82 ], [ %81, %77 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %4) #13
  ret i64* %85
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal5Debug21IsExceptionBlackboxedEb(%"class.v8::internal::Debug"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::StackTraceFrameIterator", align 8
  %4 = bitcast %"class.v8::internal::StackTraceFrameIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1616, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %6 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  call void @_ZN2v88internal23StackTraceFrameIteratorC1EPNS0_7IsolateE(%"class.v8::internal::StackTraceFrameIterator"* nonnull %3, %"class.v8::internal::Isolate"* %6) #13
  %7 = getelementptr inbounds %"class.v8::internal::StackTraceFrameIterator", %"class.v8::internal::StackTraceFrameIterator"* %3, i64 0, i32 0, i32 0, i32 23
  %8 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %7, align 8
  %9 = icmp eq %"class.v8::internal::StackFrame"* %8, null
  br i1 %9, label %26, label %10

10:                                               ; preds = %2, %17
  %11 = phi %"class.v8::internal::StackFrame"* [ %18, %17 ], [ %8, %2 ]
  %12 = bitcast %"class.v8::internal::StackFrame"* %11 to i32 (%"class.v8::internal::StackFrame"*)***
  %13 = load i32 (%"class.v8::internal::StackFrame"*)**, i32 (%"class.v8::internal::StackFrame"*)*** %12, align 8
  %14 = load i32 (%"class.v8::internal::StackFrame"*)*, i32 (%"class.v8::internal::StackFrame"*)** %13, align 8
  %15 = call i32 %14(%"class.v8::internal::StackFrame"* nonnull %11) #13
  %16 = icmp eq i32 %15, 4
  br i1 %16, label %17, label %20

17:                                               ; preds = %10
  call void @_ZN2v88internal23StackTraceFrameIterator7AdvanceEv(%"class.v8::internal::StackTraceFrameIterator"* nonnull %3) #13
  %18 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %7, align 8
  %19 = icmp eq %"class.v8::internal::StackFrame"* %18, null
  br i1 %19, label %26, label %10

20:                                               ; preds = %10
  %21 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %7, align 8
  %22 = icmp eq %"class.v8::internal::StackFrame"* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %20
  %24 = bitcast %"class.v8::internal::StackFrame"* %21 to %"class.v8::internal::JavaScriptFrame"*
  %25 = call zeroext i1 @_ZN2v88internal5Debug17IsFrameBlackboxedEPNS0_15JavaScriptFrameE(%"class.v8::internal::Debug"* %0, %"class.v8::internal::JavaScriptFrame"* nonnull %24)
  br label %26

26:                                               ; preds = %17, %2, %20, %23
  %27 = phi i1 [ %25, %23 ], [ true, %20 ], [ true, %2 ], [ true, %17 ]
  %28 = and i1 %27, %1
  br i1 %28, label %29, label %31

29:                                               ; preds = %26
  %30 = call zeroext i1 @_ZN2v88internal5Debug29AllFramesOnStackAreBlackboxedEv(%"class.v8::internal::Debug"* %0)
  br label %31

31:                                               ; preds = %26, %29
  %32 = phi i1 [ %30, %29 ], [ %27, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 1616, i8* nonnull %4) #13
  ret i1 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal5Debug17IsFrameBlackboxedEPNS0_15JavaScriptFrameE(%"class.v8::internal::Debug"*, %"class.v8::internal::JavaScriptFrame"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.1542", align 8
  %4 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31
  %7 = bitcast %"struct.v8::internal::HandleScopeData"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31, i32 1
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %11, align 8
  %14 = bitcast %"class.std::__1::vector.1542"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #13
  call void @_ZNK2v88internal15JavaScriptFrame12GetFunctionsEPNSt3__16vectorINS0_6HandleINS0_18SharedFunctionInfoEEENS2_9allocatorIS6_EEEE(%"class.v8::internal::JavaScriptFrame"* %1, %"class.std::__1::vector.1542"* nonnull %3) #13
  %15 = getelementptr inbounds %"class.std::__1::vector.1542", %"class.std::__1::vector.1542"* %3, i64 0, i32 0, i32 0
  %16 = load %"class.v8::internal::Handle.769"*, %"class.v8::internal::Handle.769"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.1542", %"class.std::__1::vector.1542"* %3, i64 0, i32 0, i32 1
  %18 = load %"class.v8::internal::Handle.769"*, %"class.v8::internal::Handle.769"** %17, align 8
  %19 = icmp eq %"class.v8::internal::Handle.769"* %16, %18
  br i1 %19, label %31, label %22

20:                                               ; preds = %22
  %21 = icmp eq %"class.v8::internal::Handle.769"* %27, %18
  br i1 %21, label %28, label %22

22:                                               ; preds = %2, %20
  %23 = phi %"class.v8::internal::Handle.769"* [ %27, %20 ], [ %16, %2 ]
  %24 = getelementptr inbounds %"class.v8::internal::Handle.769", %"class.v8::internal::Handle.769"* %23, i64 0, i32 0, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = call zeroext i1 @_ZN2v88internal5Debug12IsBlackboxedENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %25)
  %27 = getelementptr inbounds %"class.v8::internal::Handle.769", %"class.v8::internal::Handle.769"* %23, i64 1
  br i1 %26, label %20, label %28

28:                                               ; preds = %20, %22
  %29 = phi i1 [ false, %22 ], [ true, %20 ]
  %30 = load %"class.v8::internal::Handle.769"*, %"class.v8::internal::Handle.769"** %15, align 8
  br label %31

31:                                               ; preds = %28, %2
  %32 = phi %"class.v8::internal::Handle.769"* [ %16, %2 ], [ %30, %28 ]
  %33 = phi i1 [ true, %2 ], [ %29, %28 ]
  %34 = icmp eq %"class.v8::internal::Handle.769"* %32, null
  br i1 %34, label %39, label %35

35:                                               ; preds = %31
  %36 = ptrtoint %"class.v8::internal::Handle.769"* %32 to i64
  %37 = bitcast %"class.v8::internal::Handle.769"** %17 to i64*
  store i64 %36, i64* %37, align 8
  %38 = bitcast %"class.v8::internal::Handle.769"* %32 to i8*
  call void @_ZdlPv(i8* %38) #17
  br label %39

39:                                               ; preds = %31, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #13
  %40 = icmp eq %"class.v8::internal::Isolate"* %5, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %39
  %42 = inttoptr i64 %8 to i64*
  %43 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %6, i64 0, i32 0
  %44 = load i64*, i64** %43, align 8
  store i64 %8, i64* %7, align 8
  %45 = load i32, i32* %11, align 8
  %46 = add nsw i32 %45, -1
  store i32 %46, i32* %11, align 8
  %47 = load i64*, i64** %9, align 8
  %48 = icmp eq i64* %47, %10
  br i1 %48, label %51, label %49

49:                                               ; preds = %41
  store i64* %10, i64** %9, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %5) #13
  %50 = load i64*, i64** %43, align 8
  br label %51

51:                                               ; preds = %49, %41
  %52 = phi i64* [ %50, %49 ], [ %42, %41 ]
  %53 = phi i64* [ %10, %49 ], [ %44, %41 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %52, i64* %53) #13
  br label %54

54:                                               ; preds = %39, %51
  ret i1 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal5Debug29AllFramesOnStackAreBlackboxedEv(%"class.v8::internal::Debug"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::StackTraceFrameIterator", align 8
  %3 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 31
  %6 = bitcast %"struct.v8::internal::HandleScopeData"* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 31, i32 1
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 31, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %10, align 8
  %13 = bitcast %"class.v8::internal::StackTraceFrameIterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1616, i8* nonnull %13) #13
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  call void @_ZN2v88internal23StackTraceFrameIteratorC1EPNS0_7IsolateE(%"class.v8::internal::StackTraceFrameIterator"* nonnull %2, %"class.v8::internal::Isolate"* %14) #13
  %15 = getelementptr inbounds %"class.v8::internal::StackTraceFrameIterator", %"class.v8::internal::StackTraceFrameIterator"* %2, i64 0, i32 0, i32 0, i32 23
  %16 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %15, align 8
  %17 = icmp eq %"class.v8::internal::StackFrame"* %16, null
  br i1 %17, label %34, label %18

18:                                               ; preds = %1
  %19 = bitcast %"class.v8::internal::StackFrame"** %15 to %"class.v8::internal::JavaScriptFrame"**
  br label %20

20:                                               ; preds = %18, %31
  %21 = phi %"class.v8::internal::StackFrame"* [ %16, %18 ], [ %32, %31 ]
  %22 = bitcast %"class.v8::internal::StackFrame"* %21 to i32 (%"class.v8::internal::StackFrame"*)***
  %23 = load i32 (%"class.v8::internal::StackFrame"*)**, i32 (%"class.v8::internal::StackFrame"*)*** %22, align 8
  %24 = load i32 (%"class.v8::internal::StackFrame"*)*, i32 (%"class.v8::internal::StackFrame"*)** %23, align 8
  %25 = call i32 %24(%"class.v8::internal::StackFrame"* nonnull %21) #13
  %26 = add i32 %25, -11
  %27 = icmp ult i32 %26, 3
  br i1 %27, label %28, label %31

28:                                               ; preds = %20
  %29 = load %"class.v8::internal::JavaScriptFrame"*, %"class.v8::internal::JavaScriptFrame"** %19, align 8
  %30 = call zeroext i1 @_ZN2v88internal5Debug17IsFrameBlackboxedEPNS0_15JavaScriptFrameE(%"class.v8::internal::Debug"* %0, %"class.v8::internal::JavaScriptFrame"* %29)
  br i1 %30, label %31, label %34

31:                                               ; preds = %28, %20
  call void @_ZN2v88internal23StackTraceFrameIterator7AdvanceEv(%"class.v8::internal::StackTraceFrameIterator"* nonnull %2) #13
  %32 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %15, align 8
  %33 = icmp eq %"class.v8::internal::StackFrame"* %32, null
  br i1 %33, label %34, label %20

34:                                               ; preds = %31, %28, %1
  %35 = phi i1 [ true, %1 ], [ true, %31 ], [ false, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 1616, i8* nonnull %13) #13
  %36 = icmp eq %"class.v8::internal::Isolate"* %4, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %34
  %38 = inttoptr i64 %7 to i64*
  %39 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %5, i64 0, i32 0
  %40 = load i64*, i64** %39, align 8
  store i64 %7, i64* %6, align 8
  %41 = load i32, i32* %10, align 8
  %42 = add nsw i32 %41, -1
  store i32 %42, i32* %10, align 8
  %43 = load i64*, i64** %8, align 8
  %44 = icmp eq i64* %43, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %37
  store i64* %9, i64** %8, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %4) #13
  %46 = load i64*, i64** %39, align 8
  br label %47

47:                                               ; preds = %45, %37
  %48 = phi i64* [ %46, %45 ], [ %38, %37 ]
  %49 = phi i64* [ %9, %45 ], [ %40, %37 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %48, i64* %49) #13
  br label %50

50:                                               ; preds = %34, %47
  ret i1 %35
}

declare i32 @_ZN2v88internal7Isolate23PredictExceptionCatcherEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal6Object11SetPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEES5_NS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32, i64) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal7Isolate34PromiseHasUserDefinedRejectHandlerENS0_6HandleINS0_9JSPromiseEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v88internal15StackLimitCheck15JsHasOverflowedEm(%"class.v8::internal::StackLimitCheck"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal5Debug15ShouldBeSkippedEv(%"class.v8::internal::Debug"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::PostponeInterruptsScope", align 8
  %3 = alloca %"class.v8::internal::StackTraceFrameIterator", align 8
  %4 = alloca %"class.v8::internal::FrameSummary", align 8
  %5 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 2, !range !2
  store i8 1, i8* %5, align 2
  %7 = bitcast %"class.v8::internal::PostponeInterruptsScope"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %9 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::PostponeInterruptsScope", %"class.v8::internal::PostponeInterruptsScope"* %2, i64 0, i32 0
  call void @_ZN2v88internal15InterruptsScopeC2EPNS0_7IsolateElNS1_4ModeE(%"class.v8::internal::InterruptsScope"* nonnull %10, %"class.v8::internal::Isolate"* %9, i64 255, i32 0) #13
  %11 = getelementptr inbounds %"class.v8::internal::PostponeInterruptsScope", %"class.v8::internal::PostponeInterruptsScope"* %2, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal23PostponeInterruptsScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 5
  %13 = load i8, i8* %12, align 4, !range !2
  store i8 1, i8* %12, align 4
  %14 = bitcast %"class.v8::internal::StackTraceFrameIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1616, i8* nonnull %14) #13
  %15 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  call void @_ZN2v88internal23StackTraceFrameIteratorC1EPNS0_7IsolateE(%"class.v8::internal::StackTraceFrameIterator"* nonnull %3, %"class.v8::internal::Isolate"* %15) #13
  %16 = getelementptr inbounds %"class.v8::internal::StackTraceFrameIterator", %"class.v8::internal::StackTraceFrameIterator"* %3, i64 0, i32 0, i32 0, i32 23
  %17 = bitcast %"class.v8::internal::StackFrame"** %16 to %"class.v8::internal::CommonFrame"**
  %18 = load %"class.v8::internal::CommonFrame"*, %"class.v8::internal::CommonFrame"** %17, align 8
  %19 = bitcast %"class.v8::internal::FrameSummary"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %19) #13
  call void @_ZN2v88internal12FrameSummary6GetTopEPKNS0_11CommonFrameE(%"class.v8::internal::FrameSummary"* nonnull sret %4, %"class.v8::internal::CommonFrame"* %18) #13
  %20 = call i64* @_ZNK2v88internal12FrameSummary6scriptEv(%"class.v8::internal::FrameSummary"* nonnull %4) #13
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %1
  %25 = and i64 %21, -4294967296
  %26 = add i64 %21, -1
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %25, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = icmp eq i16 %33, 112
  br i1 %34, label %35, label %47

35:                                               ; preds = %24
  call void @_ZN2v88internal12FrameSummary30EnsureSourcePositionsAvailableEv(%"class.v8::internal::FrameSummary"* nonnull %4) #13
  %36 = call i32 @_ZNK2v88internal12FrameSummary14SourcePositionEv(%"class.v8::internal::FrameSummary"* nonnull %4) #13
  %37 = call i32 @_ZN2v88internal6Script13GetLineNumberENS0_6HandleIS1_EEi(i64* %20, i32 %36) #13
  %38 = call i32 @_ZN2v88internal6Script15GetColumnNumberENS0_6HandleIS1_EEi(i64* %20, i32 %36) #13
  %39 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 0
  %40 = load %"class.v8::debug::DebugDelegate"*, %"class.v8::debug::DebugDelegate"** %39, align 8
  %41 = bitcast i64* %20 to %"class.v8::debug::Script"*
  %42 = bitcast %"class.v8::debug::DebugDelegate"* %40 to i1 (%"class.v8::debug::DebugDelegate"*, %"class.v8::debug::Script"*, i32, i32)***
  %43 = load i1 (%"class.v8::debug::DebugDelegate"*, %"class.v8::debug::Script"*, i32, i32)**, i1 (%"class.v8::debug::DebugDelegate"*, %"class.v8::debug::Script"*, i32, i32)*** %42, align 8
  %44 = getelementptr inbounds i1 (%"class.v8::debug::DebugDelegate"*, %"class.v8::debug::Script"*, i32, i32)*, i1 (%"class.v8::debug::DebugDelegate"*, %"class.v8::debug::Script"*, i32, i32)** %43, i64 6
  %45 = load i1 (%"class.v8::debug::DebugDelegate"*, %"class.v8::debug::Script"*, i32, i32)*, i1 (%"class.v8::debug::DebugDelegate"*, %"class.v8::debug::Script"*, i32, i32)** %44, align 8
  %46 = call zeroext i1 %45(%"class.v8::debug::DebugDelegate"* %40, %"class.v8::debug::Script"* %41, i32 %37, i32 %38) #13
  br label %47

47:                                               ; preds = %1, %24, %35
  %48 = phi i1 [ %46, %35 ], [ false, %24 ], [ false, %1 ]
  call void @_ZN2v88internal12FrameSummaryD1Ev(%"class.v8::internal::FrameSummary"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %19) #13
  call void @llvm.lifetime.end.p0i8(i64 1616, i8* nonnull %14) #13
  store i8 %13, i8* %12, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal15InterruptsScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %49 = getelementptr inbounds %"class.v8::internal::PostponeInterruptsScope", %"class.v8::internal::PostponeInterruptsScope"* %2, i64 0, i32 0, i32 4
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 2
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.v8::internal::PostponeInterruptsScope", %"class.v8::internal::PostponeInterruptsScope"* %2, i64 0, i32 0, i32 1
  %54 = load %"class.v8::internal::StackGuard"*, %"class.v8::internal::StackGuard"** %53, align 8
  call void @_ZN2v88internal10StackGuard18PopInterruptsScopeEv(%"class.v8::internal::StackGuard"* %54) #13
  br label %55

55:                                               ; preds = %47, %52
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #13
  store i8 %6, i8* %5, align 2
  ret i1 %48
}

declare i64* @_ZNK2v88internal12FrameSummary6scriptEv(%"class.v8::internal::FrameSummary"*) local_unnamed_addr #3

declare void @_ZN2v88internal12FrameSummary30EnsureSourcePositionsAvailableEv(%"class.v8::internal::FrameSummary"*) local_unnamed_addr #3

declare i32 @_ZNK2v88internal12FrameSummary14SourcePositionEv(%"class.v8::internal::FrameSummary"*) local_unnamed_addr #3

declare i32 @_ZN2v88internal6Script13GetLineNumberENS0_6HandleIS1_EEi(i64*, i32) local_unnamed_addr #3

declare i32 @_ZN2v88internal6Script15GetColumnNumberENS0_6HandleIS1_EEi(i64*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal5Debug15SetScriptSourceENS0_6HandleINS0_6ScriptEEENS2_INS0_6StringEEEbPNS_5debug14LiveEditResultE(%"class.v8::internal::Debug"*, i64*, i64*, i1 zeroext, %"struct.v8::debug::LiveEditResult"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::DebugScope", align 8
  %7 = bitcast %"class.v8::internal::DebugScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7) #13
  call void @_ZN2v88internal10DebugScopeC2EPNS0_5DebugE(%"class.v8::internal::DebugScope"* nonnull %6, %"class.v8::internal::Debug"* %0)
  %8 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 13, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = trunc i32 %9 to i8
  %11 = icmp sgt i8 %10, -1
  br i1 %11, label %12, label %20

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 13, i32 0
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 14, i32 0
  %16 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %16, i64 0, i32 6
  call void @_ZN2v88internal9Histogram9AddSampleEi(%"class.v8::internal::Histogram"* %17, i32 7) #13
  %18 = load i32, i32* %8, align 8
  %19 = or i32 %18, 128
  store i32 %19, i32* %8, align 8
  br label %20

20:                                               ; preds = %5, %12
  %21 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 4
  store i8 1, i8* %21, align 1
  %22 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %23 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %22, align 8
  call void @_ZN2v88internal8LiveEdit11PatchScriptEPNS0_7IsolateENS0_6HandleINS0_6ScriptEEENS4_INS0_6StringEEEbPNS_5debug14LiveEditResultE(%"class.v8::internal::Isolate"* %23, i64* %1, i64* %2, i1 zeroext %3, %"struct.v8::debug::LiveEditResult"* %4) #13
  store i8 0, i8* %21, align 1
  %24 = getelementptr inbounds %"struct.v8::debug::LiveEditResult", %"struct.v8::debug::LiveEditResult"* %4, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 0
  call void @_ZN2v88internal10DebugScopeD2Ev(%"class.v8::internal::DebugScope"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7) #13
  ret i1 %26
}

declare void @_ZN2v88internal8LiveEdit11PatchScriptEPNS0_7IsolateENS0_6HandleINS0_6ScriptEEENS4_INS0_6StringEEEbPNS_5debug14LiveEditResultE(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext, %"struct.v8::debug::LiveEditResult"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug14OnCompileErrorENS0_6HandleINS0_6ScriptEEE(%"class.v8::internal::Debug"*, i64*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal5Debug19ProcessCompileEventEbNS0_6HandleINS0_6ScriptEEE(%"class.v8::internal::Debug"* %0, i1 zeroext true, i64* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug19ProcessCompileEventEbNS0_6HandleINS0_6ScriptEEE(%"class.v8::internal::Debug"*, i1 zeroext, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef", align 8
  %5 = alloca %"class.v8::internal::DebugScope", align 8
  %6 = alloca %"class.v8::internal::PerIsolateAssertScope", align 8
  %7 = load i64, i64* %2, align 8
  %8 = add i64 %7, 31
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, -2
  %12 = icmp eq i32 %11, -4
  br i1 %12, label %157, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 4
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %157

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %19 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %19, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, -4294967296
  %23 = add i64 %21, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %22, %26
  %28 = add i64 %27, 19
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %22, %31
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %19, i64 0, i32 31, i32 4
  %34 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %33, align 8
  %35 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %17
  %37 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %34, i64 %32) #13
  %38 = load i64, i64* %37, align 8
  br label %52

39:                                               ; preds = %17
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %19, i64 0, i32 31, i32 0
  %41 = load i64*, i64** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %19, i64 0, i32 31, i32 1
  %43 = load i64*, i64** %42, align 8
  %44 = icmp eq i64* %41, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %19) #13
  br label %47

47:                                               ; preds = %45, %39
  %48 = phi i64* [ %46, %45 ], [ %41, %39 ]
  %49 = ptrtoint i64* %48 to i64
  %50 = add i64 %49, 8
  %51 = inttoptr i64 %50 to i64*
  store i64* %51, i64** %40, align 8
  store i64 %32, i64* %48, align 8
  br label %52

52:                                               ; preds = %36, %47
  %53 = phi i64 [ %38, %36 ], [ %32, %47 ]
  %54 = and i64 %53, -4294967296
  %55 = add i64 %53, 259
  %56 = inttoptr i64 %55 to i32*
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = zext i32 %57 to i64
  %59 = or i64 %54, %58
  %60 = add i64 %7, 19
  %61 = inttoptr i64 %60 to i32*
  store atomic volatile i32 %57, i32* %61 monotonic, align 4
  %62 = and i64 %58, 1
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %87, label %64

64:                                               ; preds = %52
  %65 = and i64 %7, -262144
  %66 = or i64 %65, 8
  %67 = inttoptr i64 %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = and i64 %68, 262144
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %75, label %71

71:                                               ; preds = %64
  %72 = or i64 %65, 16
  %73 = inttoptr i64 %72 to %"class.v8::internal::Heap"**
  %74 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %73, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %74, i64 %7, i64 %60, i64 %59) #13
  br label %75

75:                                               ; preds = %71, %64
  %76 = and i64 %59, -262144
  %77 = or i64 %76, 8
  %78 = inttoptr i64 %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = and i64 %79, 24
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %87, label %82

82:                                               ; preds = %75
  %83 = load i64, i64* %67, align 8
  %84 = and i64 %83, 24
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %82
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %7, i64 %60, i64 %59) #13
  br label %87

87:                                               ; preds = %52, %75, %82, %86
  %88 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 3
  %89 = load i8, i8* %88, align 2, !range !2
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %91, label %157

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 1
  %93 = load i8, i8* %92, align 8, !range !2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %157, label %95

95:                                               ; preds = %91
  %96 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %18, align 8
  %97 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %96, i64 0, i32 108
  %98 = load i8, i8* %97, align 1
  %99 = icmp eq i8 %98, 32
  br i1 %99, label %157, label %100

100:                                              ; preds = %95
  %101 = bitcast %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #13
  %102 = load i64, i64* %2, align 8
  %103 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef"* %4, i64 0, i32 0
  %105 = call zeroext i1 @_ZNK2v88internal6Script16IsUserJavaScriptEv(%"class.v8::internal::Script"* nonnull %104) #13
  br i1 %105, label %113, label %106

106:                                              ; preds = %100
  %107 = load i64, i64* %2, align 8
  %108 = add i64 %107, 23
  %109 = inttoptr i64 %108 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = and i32 %110, -2
  %112 = icmp eq i32 %111, 6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #13
  br i1 %112, label %114, label %157

113:                                              ; preds = %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #13
  br label %114

114:                                              ; preds = %106, %113
  %115 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 0
  %116 = load %"class.v8::debug::DebugDelegate"*, %"class.v8::debug::DebugDelegate"** %115, align 8
  %117 = icmp eq %"class.v8::debug::DebugDelegate"* %116, null
  br i1 %117, label %157, label %118

118:                                              ; preds = %114
  %119 = load i8, i8* %88, align 2, !range !2
  store i8 1, i8* %88, align 2
  %120 = bitcast %"class.v8::internal::DebugScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %120) #13
  call void @_ZN2v88internal10DebugScopeC2EPNS0_5DebugE(%"class.v8::internal::DebugScope"* nonnull %5, %"class.v8::internal::Debug"* %0)
  %121 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %18, align 8
  %122 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %121, i64 0, i32 31
  %123 = bitcast %"struct.v8::internal::HandleScopeData"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %121, i64 0, i32 31, i32 1
  %126 = load i64*, i64** %125, align 8
  %127 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %121, i64 0, i32 31, i32 2
  %128 = load i32, i32* %127, align 8
  %129 = add nsw i32 %128, 1
  store i32 %129, i32* %127, align 8
  %130 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 5
  %131 = load i8, i8* %130, align 4, !range !2
  store i8 1, i8* %130, align 4
  %132 = bitcast %"class.v8::internal::PerIsolateAssertScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %132) #13
  %133 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %18, align 8
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EEC1EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope"* nonnull %6, %"class.v8::internal::Isolate"* %133) #13
  %134 = load %"class.v8::debug::DebugDelegate"*, %"class.v8::debug::DebugDelegate"** %115, align 8
  %135 = bitcast i64* %2 to %"class.v8::debug::Script"*
  %136 = load i8, i8* %14, align 1, !range !2
  %137 = icmp ne i8 %136, 0
  %138 = bitcast %"class.v8::debug::DebugDelegate"* %134 to void (%"class.v8::debug::DebugDelegate"*, %"class.v8::debug::Script"*, i1, i1)***
  %139 = load void (%"class.v8::debug::DebugDelegate"*, %"class.v8::debug::Script"*, i1, i1)**, void (%"class.v8::debug::DebugDelegate"*, %"class.v8::debug::Script"*, i1, i1)*** %138, align 8
  %140 = getelementptr inbounds void (%"class.v8::debug::DebugDelegate"*, %"class.v8::debug::Script"*, i1, i1)*, void (%"class.v8::debug::DebugDelegate"*, %"class.v8::debug::Script"*, i1, i1)** %139, i64 2
  %141 = load void (%"class.v8::debug::DebugDelegate"*, %"class.v8::debug::Script"*, i1, i1)*, void (%"class.v8::debug::DebugDelegate"*, %"class.v8::debug::Script"*, i1, i1)** %140, align 8
  call void %141(%"class.v8::debug::DebugDelegate"* %134, %"class.v8::debug::Script"* %135, i1 zeroext %137, i1 zeroext %1) #13
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EED1Ev(%"class.v8::internal::PerIsolateAssertScope"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %132) #13
  store i8 %131, i8* %130, align 4
  %142 = icmp eq %"class.v8::internal::Isolate"* %121, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %118
  %144 = inttoptr i64 %124 to i64*
  %145 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %122, i64 0, i32 0
  %146 = load i64*, i64** %145, align 8
  store i64 %124, i64* %123, align 8
  %147 = load i32, i32* %127, align 8
  %148 = add nsw i32 %147, -1
  store i32 %148, i32* %127, align 8
  %149 = load i64*, i64** %125, align 8
  %150 = icmp eq i64* %149, %126
  br i1 %150, label %153, label %151

151:                                              ; preds = %143
  store i64* %126, i64** %125, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %121) #13
  %152 = load i64*, i64** %145, align 8
  br label %153

153:                                              ; preds = %151, %143
  %154 = phi i64* [ %152, %151 ], [ %144, %143 ]
  %155 = phi i64* [ %126, %151 ], [ %146, %143 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %154, i64* %155) #13
  br label %156

156:                                              ; preds = %118, %153
  call void @_ZN2v88internal10DebugScopeD2Ev(%"class.v8::internal::DebugScope"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %120) #13
  store i8 %119, i8* %88, align 2
  br label %157

157:                                              ; preds = %87, %91, %114, %106, %13, %95, %3, %156
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug14OnAfterCompileENS0_6HandleINS0_6ScriptEEE(%"class.v8::internal::Debug"*, i64*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal5Debug19ProcessCompileEventEbNS0_6HandleINS0_6ScriptEEE(%"class.v8::internal::Debug"* %0, i1 zeroext false, i64* %1)
  ret void
}

declare zeroext i1 @_ZNK2v88internal6Script16IsUserJavaScriptEv(%"class.v8::internal::Script"*) local_unnamed_addr #3

declare void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EEC1EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope"*, %"class.v8::internal::Isolate"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EED1Ev(%"class.v8::internal::PerIsolateAssertScope"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug16SetDebugDelegateEPNS_5debug13DebugDelegateE(%"class.v8::internal::Debug"*, %"class.v8::debug::DebugDelegate"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 0
  store %"class.v8::debug::DebugDelegate"* %1, %"class.v8::debug::DebugDelegate"** %3, align 8
  %4 = icmp ne %"class.v8::debug::DebugDelegate"* %1, null
  %5 = zext i1 %4 to i32
  %6 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = zext i8 %7 to i32
  %9 = icmp eq i32 %5, %8
  br i1 %9, label %32, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 13
  %14 = load %"class.v8::internal::CompilationCache"*, %"class.v8::internal::CompilationCache"** %13, align 8
  br i1 %4, label %15, label %28

15:                                               ; preds = %10
  tail call void @_ZN2v88internal16CompilationCache20DisableScriptAndEvalEv(%"class.v8::internal::CompilationCache"* %14) #13
  %16 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 13, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %29

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 13, i32 0
  %22 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 14, i32 0
  %24 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %24, i64 0, i32 6
  tail call void @_ZN2v88internal9Histogram9AddSampleEi(%"class.v8::internal::Histogram"* %25, i32 1) #13
  %26 = load i32, i32* %16, align 8
  %27 = or i32 %26, 2
  store i32 %27, i32* %16, align 8
  br label %29

28:                                               ; preds = %10
  tail call void @_ZN2v88internal16CompilationCache19EnableScriptAndEvalEv(%"class.v8::internal::CompilationCache"* %14) #13
  tail call void @_ZN2v88internal5Debug6UnloadEv(%"class.v8::internal::Debug"* %0) #13
  br label %29

29:                                               ; preds = %28, %20, %15
  %30 = phi i8 [ 0, %28 ], [ 1, %15 ], [ 1, %20 ]
  store i8 %30, i8* %6, align 8
  %31 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  tail call void @_ZN2v88internal7Isolate23PromiseHookStateUpdatedEv(%"class.v8::internal::Isolate"* %31) #13
  br label %32

32:                                               ; preds = %2, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug11UpdateStateEv(%"class.v8::internal::Debug"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 0
  %3 = load %"class.v8::debug::DebugDelegate"*, %"class.v8::debug::DebugDelegate"** %2, align 8
  %4 = icmp ne %"class.v8::debug::DebugDelegate"* %3, null
  %5 = zext i1 %4 to i32
  %6 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = zext i8 %7 to i32
  %9 = icmp eq i32 %5, %8
  br i1 %9, label %32, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 13
  %14 = load %"class.v8::internal::CompilationCache"*, %"class.v8::internal::CompilationCache"** %13, align 8
  br i1 %4, label %15, label %28

15:                                               ; preds = %10
  tail call void @_ZN2v88internal16CompilationCache20DisableScriptAndEvalEv(%"class.v8::internal::CompilationCache"* %14) #13
  %16 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 13, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %29

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 13, i32 0
  %22 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 14, i32 0
  %24 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %24, i64 0, i32 6
  tail call void @_ZN2v88internal9Histogram9AddSampleEi(%"class.v8::internal::Histogram"* %25, i32 1) #13
  %26 = load i32, i32* %16, align 8
  %27 = or i32 %26, 2
  store i32 %27, i32* %16, align 8
  br label %29

28:                                               ; preds = %10
  tail call void @_ZN2v88internal16CompilationCache19EnableScriptAndEvalEv(%"class.v8::internal::CompilationCache"* %14) #13
  tail call void @_ZN2v88internal5Debug6UnloadEv(%"class.v8::internal::Debug"* %0)
  br label %29

29:                                               ; preds = %20, %15, %28
  %30 = phi i8 [ 0, %28 ], [ 1, %15 ], [ 1, %20 ]
  store i8 %30, i8* %6, align 8
  %31 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  tail call void @_ZN2v88internal7Isolate23PromiseHookStateUpdatedEv(%"class.v8::internal::Isolate"* %31) #13
  br label %32

32:                                               ; preds = %1, %29
  ret void
}

declare void @_ZN2v88internal16CompilationCache20DisableScriptAndEvalEv(%"class.v8::internal::CompilationCache"*) local_unnamed_addr #3

declare void @_ZN2v88internal16CompilationCache19EnableScriptAndEvalEv(%"class.v8::internal::CompilationCache"*) local_unnamed_addr #3

declare void @_ZN2v88internal7Isolate23PromiseHookStateUpdatedEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug16HandleDebugBreakENS0_15IgnoreBreakModeE(%"class.v8::internal::Debug"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::JavaScriptFrameIterator", align 8
  %4 = alloca %"class.v8::internal::DebugScope", align 8
  %5 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %6 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 11
  %8 = load %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::Bootstrapper"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Bootstrapper", %"class.v8::internal::Bootstrapper"* %8, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %201

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 5
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %201

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 1
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %201, label %20

20:                                               ; preds = %16
  %21 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #13
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 0, i32 6, i32 1, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = icmp ult i64 %21, %23
  br i1 %24, label %201, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.v8::internal::JavaScriptFrameIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1616, i8* nonnull %26) #13
  %27 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %28 = getelementptr inbounds %"class.v8::internal::JavaScriptFrameIterator", %"class.v8::internal::JavaScriptFrameIterator"* %3, i64 0, i32 0
  call void @_ZN2v88internal18StackFrameIteratorC1EPNS0_7IsolateE(%"class.v8::internal::StackFrameIterator"* nonnull %28, %"class.v8::internal::Isolate"* %27) #13
  %29 = getelementptr inbounds %"class.v8::internal::JavaScriptFrameIterator", %"class.v8::internal::JavaScriptFrameIterator"* %3, i64 0, i32 0, i32 0, i32 23
  %30 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %29, align 8
  %31 = icmp eq %"class.v8::internal::StackFrame"* %30, null
  br i1 %31, label %32, label %35

32:                                               ; preds = %25
  %33 = bitcast %"class.v8::internal::StackFrame"* %30 to %"class.v8::internal::JavaScriptFrame"*
  %34 = bitcast %"class.v8::internal::StackFrame"** %29 to %"class.v8::internal::JavaScriptFrame"**
  br label %38

35:                                               ; preds = %25
  call void @_ZN2v88internal23JavaScriptFrameIterator7AdvanceEv(%"class.v8::internal::JavaScriptFrameIterator"* nonnull %3) #13
  %36 = bitcast %"class.v8::internal::StackFrame"** %29 to %"class.v8::internal::JavaScriptFrame"**
  %37 = load %"class.v8::internal::JavaScriptFrame"*, %"class.v8::internal::JavaScriptFrame"** %36, align 8
  br label %38

38:                                               ; preds = %32, %35
  %39 = phi %"class.v8::internal::JavaScriptFrame"** [ %34, %32 ], [ %36, %35 ]
  %40 = phi %"class.v8::internal::JavaScriptFrame"* [ %33, %32 ], [ %37, %35 ]
  %41 = bitcast %"class.v8::internal::JavaScriptFrame"* %40 to i64 (%"class.v8::internal::JavaScriptFrame"*)***
  %42 = load i64 (%"class.v8::internal::JavaScriptFrame"*)**, i64 (%"class.v8::internal::JavaScriptFrame"*)*** %41, align 8
  %43 = getelementptr inbounds i64 (%"class.v8::internal::JavaScriptFrame"*)*, i64 (%"class.v8::internal::JavaScriptFrame"*)** %42, i64 13
  %44 = load i64 (%"class.v8::internal::JavaScriptFrame"*)*, i64 (%"class.v8::internal::JavaScriptFrame"*)** %43, align 8
  %45 = call i64 %44(%"class.v8::internal::JavaScriptFrame"* %40) #13
  %46 = and i64 %45, 1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %148, label %48

48:                                               ; preds = %38
  %49 = and i64 %45, -4294967296
  %50 = add i64 %45, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = zext i32 %52 to i64
  %54 = or i64 %49, %53
  %55 = add i64 %54, 7
  %56 = inttoptr i64 %55 to i16*
  %57 = load atomic i16, i16* %56 monotonic, align 2
  %58 = add i16 %57, -1059
  %59 = icmp ult i16 %58, 15
  br i1 %59, label %60, label %148

60:                                               ; preds = %48
  %61 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %61, i64 0, i32 31
  %63 = bitcast %"struct.v8::internal::HandleScopeData"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %61, i64 0, i32 31, i32 1
  %66 = load i64*, i64** %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %61, i64 0, i32 31, i32 2
  %68 = load i32, i32* %67, align 8
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %67, align 8
  %70 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %70, i64 0, i32 31, i32 4
  %72 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %71, align 8
  %73 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %72, null
  br i1 %73, label %78, label %74

74:                                               ; preds = %60
  %75 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %72, i64 %45) #13
  %76 = load i64, i64* %75, align 8
  %77 = and i64 %76, -4294967296
  br label %91

78:                                               ; preds = %60
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %70, i64 0, i32 31, i32 0
  %80 = load i64*, i64** %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %70, i64 0, i32 31, i32 1
  %82 = load i64*, i64** %81, align 8
  %83 = icmp eq i64* %80, %82
  br i1 %83, label %84, label %86

84:                                               ; preds = %78
  %85 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %70) #13
  br label %86

86:                                               ; preds = %84, %78
  %87 = phi i64* [ %85, %84 ], [ %80, %78 ]
  %88 = ptrtoint i64* %87 to i64
  %89 = add i64 %88, 8
  %90 = inttoptr i64 %89 to i64*
  store i64* %90, i64** %79, align 8
  store i64 %45, i64* %87, align 8
  br label %91

91:                                               ; preds = %74, %86
  %92 = phi i64 [ %77, %74 ], [ %49, %86 ]
  %93 = phi i64 [ %76, %74 ], [ %45, %86 ]
  %94 = add i64 %93, 11
  %95 = inttoptr i64 %94 to i32*
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = zext i32 %96 to i64
  %98 = or i64 %92, %97
  %99 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %99, i64 0, i32 31, i32 4
  %101 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %100, align 8
  %102 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %101, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %91
  %104 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %101, i64 %98) #13
  br label %118

105:                                              ; preds = %91
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %99, i64 0, i32 31, i32 0
  %107 = load i64*, i64** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %99, i64 0, i32 31, i32 1
  %109 = load i64*, i64** %108, align 8
  %110 = icmp eq i64* %107, %109
  br i1 %110, label %111, label %113

111:                                              ; preds = %105
  %112 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %99) #13
  br label %113

113:                                              ; preds = %111, %105
  %114 = phi i64* [ %112, %111 ], [ %107, %105 ]
  %115 = ptrtoint i64* %114 to i64
  %116 = add i64 %115, 8
  %117 = inttoptr i64 %116 to i64*
  store i64* %117, i64** %106, align 8
  store i64 %98, i64* %114, align 8
  br label %118

118:                                              ; preds = %103, %113
  %119 = phi i64* [ %104, %103 ], [ %114, %113 ]
  %120 = icmp eq i32 %1, 1
  br i1 %120, label %121, label %123

121:                                              ; preds = %118
  %122 = call zeroext i1 @_ZN2v88internal5Debug12IsBlackboxedENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %119)
  br i1 %122, label %129, label %125

123:                                              ; preds = %118
  %124 = call zeroext i1 @_ZN2v88internal5Debug29AllFramesOnStackAreBlackboxedEv(%"class.v8::internal::Debug"* %0)
  br i1 %124, label %129, label %125

125:                                              ; preds = %121, %123
  %126 = load %"class.v8::internal::JavaScriptFrame"*, %"class.v8::internal::JavaScriptFrame"** %39, align 8
  %127 = call zeroext i1 @_ZN2v88internal5Debug24IsMutedAtCurrentLocationEPNS0_15JavaScriptFrameE(%"class.v8::internal::Debug"* %0, %"class.v8::internal::JavaScriptFrame"* %126)
  %128 = zext i1 %127 to i32
  br label %129

129:                                              ; preds = %121, %125, %123
  %130 = phi i32 [ 1, %123 ], [ %128, %125 ], [ 1, %121 ]
  %131 = icmp eq %"class.v8::internal::Isolate"* %61, null
  br i1 %131, label %145, label %132

132:                                              ; preds = %129
  %133 = inttoptr i64 %64 to i64*
  %134 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %62, i64 0, i32 0
  %135 = load i64*, i64** %134, align 8
  store i64 %64, i64* %63, align 8
  %136 = load i32, i32* %67, align 8
  %137 = add nsw i32 %136, -1
  store i32 %137, i32* %67, align 8
  %138 = load i64*, i64** %65, align 8
  %139 = icmp eq i64* %138, %66
  br i1 %139, label %142, label %140

140:                                              ; preds = %132
  store i64* %66, i64** %65, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %61) #13
  %141 = load i64*, i64** %134, align 8
  br label %142

142:                                              ; preds = %140, %132
  %143 = phi i64* [ %141, %140 ], [ %133, %132 ]
  %144 = phi i64* [ %66, %140 ], [ %135, %132 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %143, i64* %144) #13
  br label %145

145:                                              ; preds = %129, %142
  %146 = icmp eq i32 %130, 0
  br i1 %146, label %148, label %147

147:                                              ; preds = %145
  call void @llvm.lifetime.end.p0i8(i64 1616, i8* nonnull %26) #13
  br label %201

148:                                              ; preds = %38, %48, %145
  call void @llvm.lifetime.end.p0i8(i64 1616, i8* nonnull %26) #13
  %149 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 2
  %150 = load i8, i8* %149, align 4
  %151 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 10
  %152 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %151, align 8
  %153 = icmp eq %"class.v8::internal::DebugInfoListNode"* %152, null
  br i1 %153, label %161, label %154

154:                                              ; preds = %148, %154
  %155 = phi %"class.v8::internal::DebugInfoListNode"* [ %159, %154 ], [ %152, %148 ]
  %156 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %155, i64 0, i32 0
  %157 = load i64*, i64** %156, align 8
  call void @_ZN2v88internal5Debug16ClearBreakPointsENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* undef, i64* %157) #13
  call void @_ZN2v88internal5Debug16ApplyBreakPointsENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* %0, i64* %157) #13
  %158 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %155, i64 0, i32 1
  %159 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %158, align 8
  %160 = icmp eq %"class.v8::internal::DebugInfoListNode"* %159, null
  br i1 %160, label %161, label %154

161:                                              ; preds = %154, %148
  store i8 -1, i8* %149, align 4
  %162 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 7
  store i32 -1, i32* %162, align 4
  %163 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 4, i32 0, i32 0
  store i64 0, i64* %163, align 8
  %164 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 5
  store i8 0, i8* %164, align 8
  %165 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 8
  store i32 -1, i32* %165, align 8
  %166 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 9
  store i32 -1, i32* %166, align 4
  %167 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 13
  store i8 0, i8* %167, align 4
  %168 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %169 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %168, i64 0, i32 108
  %170 = load i8, i8* %169, align 1
  %171 = icmp eq i8 %170, 32
  %172 = zext i1 %171 to i8
  %173 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 2
  store i8 %172, i8* %173, align 1
  %174 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %168, i64 0, i32 31
  %175 = bitcast %"struct.v8::internal::HandleScopeData"* %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %168, i64 0, i32 31, i32 1
  %178 = load i64*, i64** %177, align 8
  %179 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %168, i64 0, i32 31, i32 2
  %180 = load i32, i32* %179, align 8
  %181 = add nsw i32 %180, 1
  store i32 %181, i32* %179, align 8
  %182 = bitcast %"class.v8::internal::DebugScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %182) #13
  call void @_ZN2v88internal10DebugScopeC2EPNS0_5DebugE(%"class.v8::internal::DebugScope"* nonnull %4, %"class.v8::internal::Debug"* %0)
  %183 = bitcast %"class.v8::internal::Isolate"** %5 to %"class.v8::internal::Factory"**
  %184 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %183, align 8
  %185 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %184, i64 360
  %186 = bitcast %"class.v8::internal::Factory"* %185 to i64*
  call void @_ZN2v88internal5Debug12OnDebugBreakENS0_6HandleINS0_10FixedArrayEEENS0_10StepActionE(%"class.v8::internal::Debug"* %0, i64* %186, i8 signext %150)
  call void @_ZN2v88internal10DebugScopeD2Ev(%"class.v8::internal::DebugScope"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %182) #13
  %187 = icmp eq %"class.v8::internal::Isolate"* %168, null
  br i1 %187, label %201, label %188

188:                                              ; preds = %161
  %189 = inttoptr i64 %176 to i64*
  %190 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %174, i64 0, i32 0
  %191 = load i64*, i64** %190, align 8
  store i64 %176, i64* %175, align 8
  %192 = load i32, i32* %179, align 8
  %193 = add nsw i32 %192, -1
  store i32 %193, i32* %179, align 8
  %194 = load i64*, i64** %177, align 8
  %195 = icmp eq i64* %194, %178
  br i1 %195, label %198, label %196

196:                                              ; preds = %188
  store i64* %178, i64** %177, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %168) #13
  %197 = load i64*, i64** %190, align 8
  br label %198

198:                                              ; preds = %196, %188
  %199 = phi i64* [ %197, %196 ], [ %189, %188 ]
  %200 = phi i64* [ %178, %196 ], [ %191, %188 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %199, i64* %200) #13
  br label %201

201:                                              ; preds = %16, %12, %2, %20, %147, %161, %198
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10DebugScopeC2EPNS0_5DebugE(%"class.v8::internal::DebugScope"*, %"class.v8::internal::Debug"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::StackTraceFrameIterator", align 8
  %4 = getelementptr inbounds %"class.v8::internal::DebugScope", %"class.v8::internal::DebugScope"* %0, i64 0, i32 0
  store %"class.v8::internal::Debug"* %1, %"class.v8::internal::Debug"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::DebugScope", %"class.v8::internal::DebugScope"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %1, i64 0, i32 14, i32 0
  %7 = load atomic i64, i64* %6 monotonic, align 8
  %8 = inttoptr i64 %7 to %"class.v8::internal::DebugScope"*
  store %"class.v8::internal::DebugScope"* %8, %"class.v8::internal::DebugScope"** %5, align 8
  %9 = getelementptr inbounds %"class.v8::internal::DebugScope", %"class.v8::internal::DebugScope"* %0, i64 0, i32 4
  %10 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %1, i64 0, i32 16
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::PostponeInterruptsScope", %"class.v8::internal::PostponeInterruptsScope"* %9, i64 0, i32 0
  tail call void @_ZN2v88internal15InterruptsScopeC2EPNS0_7IsolateElNS1_4ModeE(%"class.v8::internal::InterruptsScope"* %12, %"class.v8::internal::Isolate"* %11, i64 255, i32 0) #13
  %13 = getelementptr inbounds %"class.v8::internal::PostponeInterruptsScope", %"class.v8::internal::PostponeInterruptsScope"* %9, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal23PostponeInterruptsScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::DebugScope", %"class.v8::internal::DebugScope"* %0, i64 0, i32 5
  store i8 0, i8* %14, align 8
  %15 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %4, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %15, i64 0, i32 14, i32 0
  %17 = ptrtoint %"class.v8::internal::DebugScope"* %0 to i64
  store atomic volatile i64 %17, i64* %16 monotonic, align 8
  %18 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %4, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %18, i64 0, i32 14, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::DebugScope", %"class.v8::internal::DebugScope"* %0, i64 0, i32 2
  store i32 %20, i32* %21, align 8
  %22 = bitcast %"class.v8::internal::StackTraceFrameIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1616, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %18, i64 0, i32 16
  %24 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %23, align 8
  call void @_ZN2v88internal23StackTraceFrameIteratorC1EPNS0_7IsolateE(%"class.v8::internal::StackTraceFrameIterator"* nonnull %3, %"class.v8::internal::Isolate"* %24) #13
  %25 = getelementptr inbounds %"class.v8::internal::StackTraceFrameIterator", %"class.v8::internal::StackTraceFrameIterator"* %3, i64 0, i32 0, i32 0, i32 23
  %26 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %25, align 8
  %27 = icmp eq %"class.v8::internal::StackFrame"* %26, null
  br i1 %27, label %35, label %28

28:                                               ; preds = %2
  %29 = bitcast %"class.v8::internal::StackFrame"* %26 to i64 (%"class.v8::internal::StackFrame"*)***
  %30 = load i64 (%"class.v8::internal::StackFrame"*)**, i64 (%"class.v8::internal::StackFrame"*)*** %29, align 8
  %31 = getelementptr inbounds i64 (%"class.v8::internal::StackFrame"*)*, i64 (%"class.v8::internal::StackFrame"*)** %30, i64 6
  %32 = load i64 (%"class.v8::internal::StackFrame"*)*, i64 (%"class.v8::internal::StackFrame"*)** %31, align 8
  %33 = call i64 %32(%"class.v8::internal::StackFrame"* nonnull %26) #13
  %34 = trunc i64 %33 to i32
  br label %35

35:                                               ; preds = %2, %28
  %36 = phi i32 [ %34, %28 ], [ 0, %2 ]
  %37 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %4, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %37, i64 0, i32 14, i32 1
  store i32 %36, i32* %38, align 8
  %39 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %4, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %39, i64 0, i32 0
  %41 = load %"class.v8::debug::DebugDelegate"*, %"class.v8::debug::DebugDelegate"** %40, align 8
  %42 = icmp ne %"class.v8::debug::DebugDelegate"* %41, null
  %43 = zext i1 %42 to i32
  %44 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %39, i64 0, i32 1
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = zext i8 %45 to i32
  %47 = icmp eq i32 %43, %46
  br i1 %47, label %70, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %39, i64 0, i32 16
  %50 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %50, i64 0, i32 13
  %52 = load %"class.v8::internal::CompilationCache"*, %"class.v8::internal::CompilationCache"** %51, align 8
  br i1 %42, label %53, label %66

53:                                               ; preds = %48
  call void @_ZN2v88internal16CompilationCache20DisableScriptAndEvalEv(%"class.v8::internal::CompilationCache"* %52) #13
  %54 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %39, i64 0, i32 13, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %67

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %39, i64 0, i32 13, i32 0
  %60 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %60, i64 0, i32 14, i32 0
  %62 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %62, i64 0, i32 6
  call void @_ZN2v88internal9Histogram9AddSampleEi(%"class.v8::internal::Histogram"* %63, i32 1) #13
  %64 = load i32, i32* %54, align 8
  %65 = or i32 %64, 2
  store i32 %65, i32* %54, align 8
  br label %67

66:                                               ; preds = %48
  call void @_ZN2v88internal16CompilationCache19EnableScriptAndEvalEv(%"class.v8::internal::CompilationCache"* %52) #13
  call void @_ZN2v88internal5Debug6UnloadEv(%"class.v8::internal::Debug"* %39) #13
  br label %67

67:                                               ; preds = %66, %58, %53
  %68 = phi i8 [ 0, %66 ], [ 1, %53 ], [ 1, %58 ]
  store i8 %68, i8* %44, align 8
  %69 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %49, align 8
  call void @_ZN2v88internal7Isolate23PromiseHookStateUpdatedEv(%"class.v8::internal::Isolate"* %69) #13
  br label %70

70:                                               ; preds = %35, %67
  call void @llvm.lifetime.end.p0i8(i64 1616, i8* nonnull %22) #13
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal10DebugScope23set_terminate_on_resumeEv(%"class.v8::internal::DebugScope"* nocapture) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::DebugScope", %"class.v8::internal::DebugScope"* %0, i64 0, i32 5
  store i8 1, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10DebugScopeD2Ev(%"class.v8::internal::DebugScope"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::DebugScope", %"class.v8::internal::DebugScope"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::DebugScope", %"class.v8::internal::DebugScope"* %0, i64 0, i32 1
  %7 = load %"class.v8::internal::DebugScope"*, %"class.v8::internal::DebugScope"** %6, align 8
  %8 = icmp eq %"class.v8::internal::DebugScope"* %7, null
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.v8::internal::DebugScope", %"class.v8::internal::DebugScope"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %11, i64 0, i32 16
  %13 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 6
  tail call void @_ZN2v88internal10StackGuard16RequestInterruptENS1_13InterruptFlagE(%"class.v8::internal::StackGuard"* %14, i32 1) #13
  br label %17

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.v8::internal::DebugScope", %"class.v8::internal::DebugScope"* %7, i64 0, i32 5
  store i8 1, i8* %16, align 8
  br label %17

17:                                               ; preds = %1, %9, %15
  %18 = getelementptr inbounds %"class.v8::internal::DebugScope", %"class.v8::internal::DebugScope"* %0, i64 0, i32 0
  %19 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %19, i64 0, i32 14, i32 0
  %21 = getelementptr inbounds %"class.v8::internal::DebugScope", %"class.v8::internal::DebugScope"* %0, i64 0, i32 1
  %22 = bitcast %"class.v8::internal::DebugScope"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  store atomic volatile i64 %23, i64* %20 monotonic, align 8
  %24 = getelementptr inbounds %"class.v8::internal::DebugScope", %"class.v8::internal::DebugScope"* %0, i64 0, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %18, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %26, i64 0, i32 14, i32 1
  store i32 %25, i32* %27, align 8
  %28 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %18, align 8
  %29 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %28, i64 0, i32 0
  %30 = load %"class.v8::debug::DebugDelegate"*, %"class.v8::debug::DebugDelegate"** %29, align 8
  %31 = icmp ne %"class.v8::debug::DebugDelegate"* %30, null
  %32 = zext i1 %31 to i32
  %33 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %28, i64 0, i32 1
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = zext i8 %34 to i32
  %36 = icmp eq i32 %32, %35
  br i1 %36, label %59, label %37

37:                                               ; preds = %17
  %38 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %28, i64 0, i32 16
  %39 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %39, i64 0, i32 13
  %41 = load %"class.v8::internal::CompilationCache"*, %"class.v8::internal::CompilationCache"** %40, align 8
  br i1 %31, label %42, label %55

42:                                               ; preds = %37
  tail call void @_ZN2v88internal16CompilationCache20DisableScriptAndEvalEv(%"class.v8::internal::CompilationCache"* %41) #13
  %43 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %28, i64 0, i32 13, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %56

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %28, i64 0, i32 13, i32 0
  %49 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %49, i64 0, i32 14, i32 0
  %51 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %50, align 8
  %52 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %51, i64 0, i32 6
  tail call void @_ZN2v88internal9Histogram9AddSampleEi(%"class.v8::internal::Histogram"* %52, i32 1) #13
  %53 = load i32, i32* %43, align 8
  %54 = or i32 %53, 2
  store i32 %54, i32* %43, align 8
  br label %56

55:                                               ; preds = %37
  tail call void @_ZN2v88internal16CompilationCache19EnableScriptAndEvalEv(%"class.v8::internal::CompilationCache"* %41) #13
  tail call void @_ZN2v88internal5Debug6UnloadEv(%"class.v8::internal::Debug"* %28) #13
  br label %56

56:                                               ; preds = %55, %47, %42
  %57 = phi i8 [ 0, %55 ], [ 1, %42 ], [ 1, %47 ]
  store i8 %57, i8* %33, align 8
  %58 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %38, align 8
  tail call void @_ZN2v88internal7Isolate23PromiseHookStateUpdatedEv(%"class.v8::internal::Isolate"* %58) #13
  br label %59

59:                                               ; preds = %17, %56
  %60 = getelementptr inbounds %"class.v8::internal::DebugScope", %"class.v8::internal::DebugScope"* %0, i64 0, i32 4, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal15InterruptsScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::DebugScope", %"class.v8::internal::DebugScope"* %0, i64 0, i32 4, i32 0, i32 4
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 2
  br i1 %63, label %67, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.v8::internal::DebugScope", %"class.v8::internal::DebugScope"* %0, i64 0, i32 4, i32 0, i32 1
  %66 = load %"class.v8::internal::StackGuard"*, %"class.v8::internal::StackGuard"** %65, align 8
  tail call void @_ZN2v88internal10StackGuard18PopInterruptsScopeEv(%"class.v8::internal::StackGuard"* %66) #13
  br label %67

67:                                               ; preds = %59, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16ReturnValueScopeC2EPNS0_5DebugE(%"class.v8::internal::ReturnValueScope"* nocapture, %"class.v8::internal::Debug"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ReturnValueScope", %"class.v8::internal::ReturnValueScope"* %0, i64 0, i32 0
  store %"class.v8::internal::Debug"* %1, %"class.v8::internal::Debug"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::ReturnValueScope", %"class.v8::internal::ReturnValueScope"* %0, i64 0, i32 1, i32 0, i32 0
  store i64* null, i64** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %1, i64 0, i32 14, i32 10, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %1, i64 0, i32 16
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 4
  %10 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %9, align 8
  %11 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %2
  %13 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %10, i64 %6) #13
  br label %27

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 1
  %18 = load i64*, i64** %17, align 8
  %19 = icmp eq i64* %16, %18
  br i1 %19, label %20, label %22

20:                                               ; preds = %14
  %21 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #13
  br label %22

22:                                               ; preds = %20, %14
  %23 = phi i64* [ %21, %20 ], [ %16, %14 ]
  %24 = ptrtoint i64* %23 to i64
  %25 = add i64 %24, 8
  %26 = inttoptr i64 %25 to i64*
  store i64* %26, i64** %15, align 8
  store i64 %6, i64* %23, align 8
  br label %27

27:                                               ; preds = %12, %22
  %28 = phi i64* [ %13, %12 ], [ %23, %22 ]
  store i64* %28, i64** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal5Debug19return_value_handleEv(%"class.v8::internal::Debug"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 10, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31, i32 4
  %7 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %6, align 8
  %8 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %7, i64 %3) #13
  br label %24

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31, i32 1
  %15 = load i64*, i64** %14, align 8
  %16 = icmp eq i64* %13, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %11
  %18 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %5) #13
  br label %19

19:                                               ; preds = %17, %11
  %20 = phi i64* [ %18, %17 ], [ %13, %11 ]
  %21 = ptrtoint i64* %20 to i64
  %22 = add i64 %21, 8
  %23 = inttoptr i64 %22 to i64*
  store i64* %23, i64** %12, align 8
  store i64 %3, i64* %20, align 8
  br label %24

24:                                               ; preds = %9, %19
  %25 = phi i64* [ %10, %9 ], [ %20, %19 ]
  ret i64* %25
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal16ReturnValueScopeD2Ev(%"class.v8::internal::ReturnValueScope"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ReturnValueScope", %"class.v8::internal::ReturnValueScope"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::ReturnValueScope", %"class.v8::internal::ReturnValueScope"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %3, i64 0, i32 14, i32 10, i32 0, i32 0
  store i64 %6, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug32UpdateDebugInfosForExecutionModeEv(%"class.v8::internal::Debug"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %3 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %4 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 10
  %5 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %4, align 8
  %6 = icmp eq %"class.v8::internal::DebugInfoListNode"* %5, null
  br i1 %6, label %80, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3 to i8*
  %9 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3, i64 0, i32 0
  %11 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %12 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %2 to i8*
  %13 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %2, i64 0, i32 0
  br label %15

15:                                               ; preds = %7, %76
  %16 = phi %"class.v8::internal::DebugInfoListNode"* [ %5, %7 ], [ %78, %76 ]
  %17 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %16, i64 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, -4294967296
  %21 = add i64 %19, 19
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 acquire, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %20, %24
  %26 = add i64 %25, -1
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %20, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = icmp eq i16 %33, 133
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #13
  br i1 %34, label %35, label %75

35:                                               ; preds = %15
  %36 = load i64, i64* %18, align 8
  store i64 %36, i64* %9, align 8
  %37 = call zeroext i8 @_ZNK2v88internal9DebugInfo18DebugExecutionModeEv(%"class.v8::internal::DebugInfo"* nonnull %10) #13
  %38 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %38, i64 0, i32 108
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %37, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13
  br i1 %41, label %76, label %42

42:                                               ; preds = %35
  %43 = icmp eq i8 %40, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %42
  call void @_ZN2v88internal5Debug21ClearSideEffectChecksENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* %0, i64* %18)
  call void @_ZN2v88internal5Debug16ApplyBreakPointsENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* %0, i64* %18)
  br label %76

45:                                               ; preds = %42
  call void @_ZN2v88internal5Debug16ClearBreakPointsENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* undef, i64* %18)
  %46 = load i64, i64* %18, align 8
  %47 = and i64 %46, -4294967296
  %48 = add i64 %46, 19
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 acquire, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %47, %51
  %53 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %53, i64 0, i32 31, i32 4
  %55 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %54, align 8
  %56 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %55, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %45
  %58 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %55, i64 %52) #13
  br label %72

59:                                               ; preds = %45
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %53, i64 0, i32 31, i32 0
  %61 = load i64*, i64** %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %53, i64 0, i32 31, i32 1
  %63 = load i64*, i64** %62, align 8
  %64 = icmp eq i64* %61, %63
  br i1 %64, label %65, label %67

65:                                               ; preds = %59
  %66 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %53) #13
  br label %67

67:                                               ; preds = %65, %59
  %68 = phi i64* [ %66, %65 ], [ %61, %59 ]
  %69 = ptrtoint i64* %68 to i64
  %70 = add i64 %69, 8
  %71 = inttoptr i64 %70 to i64*
  store i64* %71, i64** %60, align 8
  store i64 %52, i64* %68, align 8
  br label %72

72:                                               ; preds = %57, %67
  %73 = phi i64* [ %58, %57 ], [ %68, %67 ]
  call void @_ZN2v88internal13DebugEvaluate21ApplySideEffectChecksENS0_6HandleINS0_13BytecodeArrayEEE(i64* %73) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #13
  %74 = load i64, i64* %18, align 8
  store i64 %74, i64* %13, align 8
  call void @_ZN2v88internal9DebugInfo21SetDebugExecutionModeENS1_13ExecutionModeE(%"class.v8::internal::DebugInfo"* nonnull %14, i8 zeroext 32) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #13
  br label %76

75:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13
  br label %76

76:                                               ; preds = %35, %44, %72, %75
  %77 = getelementptr inbounds %"class.v8::internal::DebugInfoListNode", %"class.v8::internal::DebugInfoListNode"* %16, i64 0, i32 1
  %78 = load %"class.v8::internal::DebugInfoListNode"*, %"class.v8::internal::DebugInfoListNode"** %77, align 8
  %79 = icmp eq %"class.v8::internal::DebugInfoListNode"* %78, null
  br i1 %79, label %80, label %15

80:                                               ; preds = %76, %1
  ret void
}

declare zeroext i8 @_ZNK2v88internal9DebugInfo18DebugExecutionModeEv(%"class.v8::internal::DebugInfo"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug21ClearSideEffectChecksENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* nocapture readonly, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::interpreter::BytecodeArrayIterator", align 8
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 19
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 acquire, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 4
  %14 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %13, align 8
  %15 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %2
  %17 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %14, i64 %10) #13
  br label %31

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 1
  %22 = load i64*, i64** %21, align 8
  %23 = icmp eq i64* %20, %22
  br i1 %23, label %24, label %26

24:                                               ; preds = %18
  %25 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %12) #13
  br label %26

26:                                               ; preds = %24, %18
  %27 = phi i64* [ %25, %24 ], [ %20, %18 ]
  %28 = ptrtoint i64* %27 to i64
  %29 = add i64 %28, 8
  %30 = inttoptr i64 %29 to i64*
  store i64* %30, i64** %19, align 8
  store i64 %10, i64* %27, align 8
  br label %31

31:                                               ; preds = %16, %26
  %32 = phi i64* [ %17, %16 ], [ %27, %26 ]
  %33 = load i64, i64* %1, align 8
  %34 = and i64 %33, -4294967296
  %35 = add i64 %33, 15
  %36 = inttoptr i64 %35 to i32*
  %37 = load atomic i32, i32* %36 acquire, align 4
  %38 = zext i32 %37 to i64
  %39 = or i64 %34, %38
  %40 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %40, i64 0, i32 31, i32 4
  %42 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %41, align 8
  %43 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %31
  %45 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %42, i64 %39) #13
  br label %59

46:                                               ; preds = %31
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %40, i64 0, i32 31, i32 0
  %48 = load i64*, i64** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %40, i64 0, i32 31, i32 1
  %50 = load i64*, i64** %49, align 8
  %51 = icmp eq i64* %48, %50
  br i1 %51, label %52, label %54

52:                                               ; preds = %46
  %53 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %40) #13
  br label %54

54:                                               ; preds = %52, %46
  %55 = phi i64* [ %53, %52 ], [ %48, %46 ]
  %56 = ptrtoint i64* %55 to i64
  %57 = add i64 %56, 8
  %58 = inttoptr i64 %57 to i64*
  store i64* %58, i64** %47, align 8
  store i64 %39, i64* %55, align 8
  br label %59

59:                                               ; preds = %44, %54
  %60 = phi i64* [ %45, %44 ], [ %55, %54 ]
  %61 = bitcast %"class.v8::internal::interpreter::BytecodeArrayIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %61) #13
  call void @_ZN2v88internal11interpreter21BytecodeArrayIteratorC1ENS0_6HandleINS0_13BytecodeArrayEEEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %3, i64* %32, i32 0) #13
  %62 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %3, i64 0, i32 3
  %63 = load i8*, i8** %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %3, i64 0, i32 2
  %65 = load i8*, i8** %64, align 8
  %66 = icmp ult i8* %63, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %3, i64 0, i32 1
  %69 = bitcast i8** %68 to i64*
  %70 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %3, i64 0, i32 5
  %71 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %3, i64 0, i32 4
  br label %73

72:                                               ; preds = %115, %59
  call void @_ZN2v88internal11interpreter21BytecodeArrayIteratorD1Ev(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %61) #13
  ret void

73:                                               ; preds = %67, %115
  %74 = phi i8* [ %63, %67 ], [ %116, %115 ]
  %75 = ptrtoint i8* %74 to i64
  %76 = load i64, i64* %32, align 8
  %77 = load i64, i64* %69, align 8
  %78 = sub i64 %75, %77
  %79 = load i32, i32* %70, align 4
  %80 = trunc i64 %78 to i32
  %81 = sub i32 %80, %79
  %82 = load i64, i64* %60, align 8
  %83 = sext i32 %81 to i64
  %84 = add nsw i64 %83, 33
  %85 = add i64 %84, %82
  %86 = inttoptr i64 %85 to i8*
  %87 = load i8, i8* %86, align 1
  %88 = add i64 %84, %76
  %89 = inttoptr i64 %88 to i8*
  store i8 %87, i8* %89, align 1
  %90 = load i8*, i8** %62, align 8
  %91 = load i8, i8* %90, align 1
  %92 = load i8, i8* %71, align 8
  %93 = lshr i8 %92, 1
  %94 = zext i8 %93 to i64
  %95 = zext i8 %91 to i64
  %96 = getelementptr inbounds [3 x [197 x i8]], [3 x [197 x i8]]* @_ZN2v88internal11interpreter9Bytecodes14kBytecodeSizesE, i64 0, i64 %94, i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i64
  %99 = getelementptr inbounds i8, i8* %90, i64 %98
  store i8* %99, i8** %62, align 8
  %100 = load i8*, i8** %64, align 8
  %101 = icmp ult i8* %99, %100
  br i1 %101, label %102, label %115

102:                                              ; preds = %73
  %103 = load i8, i8* %99, align 1
  %104 = icmp ult i8 %103, 4
  br i1 %104, label %105, label %111

105:                                              ; preds = %102
  %106 = zext i8 %103 to i32
  %107 = shl nuw nsw i32 %106, 3
  %108 = lshr i32 67240962, %107
  %109 = trunc i32 %108 to i8
  store i8 %109, i8* %71, align 8
  %110 = getelementptr inbounds i8, i8* %99, i64 1
  store i8* %110, i8** %62, align 8
  br label %112

111:                                              ; preds = %102
  store i8 1, i8* %71, align 8
  br label %112

112:                                              ; preds = %111, %105
  %113 = phi i32 [ 1, %105 ], [ 0, %111 ]
  %114 = phi i8* [ %110, %105 ], [ %99, %111 ]
  store i32 %113, i32* %70, align 4
  br label %115

115:                                              ; preds = %112, %73
  %116 = phi i8* [ %99, %73 ], [ %114, %112 ]
  %117 = icmp ult i8* %116, %100
  br i1 %117, label %73, label %72
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug21ApplySideEffectChecksENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* nocapture readonly, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 19
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 acquire, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 4
  %14 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %13, align 8
  %15 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %2
  %17 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %14, i64 %10) #13
  br label %31

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 1
  %22 = load i64*, i64** %21, align 8
  %23 = icmp eq i64* %20, %22
  br i1 %23, label %24, label %26

24:                                               ; preds = %18
  %25 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %12) #13
  br label %26

26:                                               ; preds = %24, %18
  %27 = phi i64* [ %25, %24 ], [ %20, %18 ]
  %28 = ptrtoint i64* %27 to i64
  %29 = add i64 %28, 8
  %30 = inttoptr i64 %29 to i64*
  store i64* %30, i64** %19, align 8
  store i64 %10, i64* %27, align 8
  br label %31

31:                                               ; preds = %16, %26
  %32 = phi i64* [ %17, %16 ], [ %27, %26 ]
  tail call void @_ZN2v88internal13DebugEvaluate21ApplySideEffectChecksENS0_6HandleINS0_13BytecodeArrayEEE(i64* %32) #13
  %33 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  %34 = load i64, i64* %1, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3, i64 0, i32 0
  call void @_ZN2v88internal9DebugInfo21SetDebugExecutionModeENS1_13ExecutionModeE(%"class.v8::internal::DebugInfo"* nonnull %36, i8 zeroext 32) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug20SetTerminateOnResumeEv(%"class.v8::internal::Debug"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 0
  %3 = load atomic i64, i64* %2 acquire, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %5, label %6, !prof !4

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i64 0, i64 0)) #16
  unreachable

6:                                                ; preds = %1
  %7 = inttoptr i64 %3 to %"class.v8::internal::DebugScope"*
  %8 = getelementptr inbounds %"class.v8::internal::DebugScope", %"class.v8::internal::DebugScope"* %7, i64 0, i32 5
  store i8 1, i8* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug24StartSideEffectCheckModeEv(%"class.v8::internal::Debug"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %3 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 108
  store i8 32, i8* %4, align 1
  %5 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 2
  %6 = load i8, i8* %5, align 4
  %7 = icmp eq i8 %6, 2
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 108
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 32
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 13
  %15 = load i8, i8* %14, align 4, !range !2
  br label %16

16:                                               ; preds = %1, %8, %13
  %17 = phi i8 [ 1, %8 ], [ 1, %1 ], [ %15, %13 ]
  %18 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 2
  store i8 %17, i8* %18, align 1
  %19 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 9
  store i8 0, i8* %19, align 8
  %20 = tail call i8* @_Znwm(i64 96) #17
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 0, i64 96, i1 false)
  %21 = bitcast i8* %20 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2v88internal5Debug23TemporaryObjectsTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds i8, i8* %20, i64 8
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds i8, i8* %20, i64 16
  %24 = getelementptr inbounds i8, i8* %20, i64 48
  %25 = bitcast i8* %24 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %25, align 4
  %26 = getelementptr inbounds i8, i8* %20, i64 56
  %27 = bitcast i8* %26 to %"class.v8::base::Mutex"*
  tail call void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"* %27) #13
  %28 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %29 = load %"class.v8::internal::Debug::TemporaryObjectsTracker"*, %"class.v8::internal::Debug::TemporaryObjectsTracker"** %28, align 8
  %30 = bitcast %"class.v8::internal::Debug::TemporaryObjectsTracker"** %28 to i8**
  store i8* %20, i8** %30, align 8
  %31 = icmp eq %"class.v8::internal::Debug::TemporaryObjectsTracker"* %29, null
  %32 = bitcast i8* %20 to %"class.v8::internal::Debug::TemporaryObjectsTracker"*
  br i1 %31, label %39, label %33

33:                                               ; preds = %16
  %34 = bitcast %"class.v8::internal::Debug::TemporaryObjectsTracker"* %29 to void (%"class.v8::internal::Debug::TemporaryObjectsTracker"*)***
  %35 = load void (%"class.v8::internal::Debug::TemporaryObjectsTracker"*)**, void (%"class.v8::internal::Debug::TemporaryObjectsTracker"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.v8::internal::Debug::TemporaryObjectsTracker"*)*, void (%"class.v8::internal::Debug::TemporaryObjectsTracker"*)** %35, i64 4
  %37 = load void (%"class.v8::internal::Debug::TemporaryObjectsTracker"*)*, void (%"class.v8::internal::Debug::TemporaryObjectsTracker"*)** %36, align 8
  tail call void %37(%"class.v8::internal::Debug::TemporaryObjectsTracker"* nonnull %29) #13
  %38 = load %"class.v8::internal::Debug::TemporaryObjectsTracker"*, %"class.v8::internal::Debug::TemporaryObjectsTracker"** %28, align 8
  br label %39

39:                                               ; preds = %16, %33
  %40 = phi %"class.v8::internal::Debug::TemporaryObjectsTracker"* [ %32, %16 ], [ %38, %33 ]
  %41 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %41, i64 0, i32 2
  %43 = getelementptr inbounds %"class.v8::internal::Debug::TemporaryObjectsTracker", %"class.v8::internal::Debug::TemporaryObjectsTracker"* %40, i64 0, i32 0
  tail call void @_ZN2v88internal4Heap30AddHeapObjectAllocationTrackerEPNS0_27HeapObjectAllocationTrackerE(%"class.v8::internal::Heap"* %42, %"class.v8::internal::HeapObjectAllocationTracker"* %43) #13
  %44 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %44, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = and i64 %46, -4294967296
  %48 = add i64 %46, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %47, %51
  %53 = add i64 %52, 19
  %54 = inttoptr i64 %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i64
  %57 = or i64 %47, %56
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %44, i64 0, i32 31, i32 4
  %59 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %58, align 8
  %60 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %59, null
  br i1 %60, label %64, label %61

61:                                               ; preds = %39
  %62 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %59, i64 %57) #13
  %63 = load i64, i64* %62, align 8
  br label %77

64:                                               ; preds = %39
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %44, i64 0, i32 31, i32 0
  %66 = load i64*, i64** %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %44, i64 0, i32 31, i32 1
  %68 = load i64*, i64** %67, align 8
  %69 = icmp eq i64* %66, %68
  br i1 %69, label %70, label %72

70:                                               ; preds = %64
  %71 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %44) #13
  br label %72

72:                                               ; preds = %70, %64
  %73 = phi i64* [ %71, %70 ], [ %66, %64 ]
  %74 = ptrtoint i64* %73 to i64
  %75 = add i64 %74, 8
  %76 = inttoptr i64 %75 to i64*
  store i64* %76, i64** %65, align 8
  store i64 %57, i64* %73, align 8
  br label %77

77:                                               ; preds = %61, %72
  %78 = phi i64 [ %63, %61 ], [ %57, %72 ]
  %79 = and i64 %78, -4294967296
  %80 = add i64 %78, 631
  %81 = inttoptr i64 %80 to i32*
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = zext i32 %82 to i64
  %84 = or i64 %79, %83
  %85 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %86 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %85, i64 0, i32 31, i32 4
  %87 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %86, align 8
  %88 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %87, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %77
  %90 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %87, i64 %84) #13
  br label %104

91:                                               ; preds = %77
  %92 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %85, i64 0, i32 31, i32 0
  %93 = load i64*, i64** %92, align 8
  %94 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %85, i64 0, i32 31, i32 1
  %95 = load i64*, i64** %94, align 8
  %96 = icmp eq i64* %93, %95
  br i1 %96, label %97, label %99

97:                                               ; preds = %91
  %98 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %85) #13
  br label %99

99:                                               ; preds = %97, %91
  %100 = phi i64* [ %98, %97 ], [ %93, %91 ]
  %101 = ptrtoint i64* %100 to i64
  %102 = add i64 %101, 8
  %103 = inttoptr i64 %102 to i64*
  store i64* %103, i64** %92, align 8
  store i64 %84, i64* %100, align 8
  br label %104

104:                                              ; preds = %89, %99
  %105 = phi i64* [ %90, %89 ], [ %100, %99 ]
  %106 = bitcast %"class.v8::internal::Isolate"** %2 to %"class.v8::internal::Factory"**
  %107 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %106, align 8
  %108 = tail call i64* @_ZN2v88internal7Factory14CopyFixedArrayENS0_6HandleINS0_10FixedArrayEEE(%"class.v8::internal::Factory"* %107, i64* %105) #13
  %109 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 12, i32 0, i32 0
  store i64* %108, i64** %109, align 8
  tail call void @_ZN2v88internal5Debug32UpdateDebugInfosForExecutionModeEv(%"class.v8::internal::Debug"* %0)
  ret void
}

declare void @_ZN2v88internal4Heap30AddHeapObjectAllocationTrackerEPNS0_27HeapObjectAllocationTrackerE(%"class.v8::internal::Heap"*, %"class.v8::internal::HeapObjectAllocationTracker"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory14CopyFixedArrayENS0_6HandleINS0_10FixedArrayEEE(%"class.v8::internal::Factory"*, i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug23StopSideEffectCheckModeEv(%"class.v8::internal::Debug"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %7 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  tail call void @_ZN2v88internal7Isolate24CancelTerminateExecutionEv(%"class.v8::internal::Isolate"* %7) #13
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %9 = bitcast %"class.v8::internal::Isolate"* %8 to %"class.v8::internal::Factory"*
  %10 = tail call i64* @_ZN2v88internal7Factory12NewEvalErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %9, i32 356, i64* null, i64* null, i64* null) #13
  %11 = load i64, i64* %10, align 8
  %12 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %8, i64 %11, %"class.v8::internal::MessageLocation"* null) #13
  br label %13

13:                                               ; preds = %1, %5
  %14 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %15 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 108
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 2
  %18 = load i8, i8* %17, align 4
  %19 = icmp eq i8 %18, 2
  %20 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %14, align 8
  br i1 %19, label %28, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %20, i64 0, i32 108
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 32
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 14, i32 13
  %27 = load i8, i8* %26, align 4, !range !2
  br label %28

28:                                               ; preds = %13, %21, %25
  %29 = phi i8 [ 1, %21 ], [ %27, %25 ], [ 1, %13 ]
  %30 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 2
  store i8 %29, i8* %30, align 1
  store i8 0, i8* %2, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %20, i64 0, i32 2
  %32 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %33 = load %"class.v8::internal::Debug::TemporaryObjectsTracker"*, %"class.v8::internal::Debug::TemporaryObjectsTracker"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Debug::TemporaryObjectsTracker", %"class.v8::internal::Debug::TemporaryObjectsTracker"* %33, i64 0, i32 0
  tail call void @_ZN2v88internal4Heap33RemoveHeapObjectAllocationTrackerEPNS0_27HeapObjectAllocationTrackerE(%"class.v8::internal::Heap"* %31, %"class.v8::internal::HeapObjectAllocationTracker"* %34) #13
  %35 = load %"class.v8::internal::Debug::TemporaryObjectsTracker"*, %"class.v8::internal::Debug::TemporaryObjectsTracker"** %32, align 8
  store %"class.v8::internal::Debug::TemporaryObjectsTracker"* null, %"class.v8::internal::Debug::TemporaryObjectsTracker"** %32, align 8
  %36 = icmp eq %"class.v8::internal::Debug::TemporaryObjectsTracker"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %28
  %38 = bitcast %"class.v8::internal::Debug::TemporaryObjectsTracker"* %35 to void (%"class.v8::internal::Debug::TemporaryObjectsTracker"*)***
  %39 = load void (%"class.v8::internal::Debug::TemporaryObjectsTracker"*)**, void (%"class.v8::internal::Debug::TemporaryObjectsTracker"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.v8::internal::Debug::TemporaryObjectsTracker"*)*, void (%"class.v8::internal::Debug::TemporaryObjectsTracker"*)** %39, i64 4
  %41 = load void (%"class.v8::internal::Debug::TemporaryObjectsTracker"*)*, void (%"class.v8::internal::Debug::TemporaryObjectsTracker"*)** %40, align 8
  tail call void %41(%"class.v8::internal::Debug::TemporaryObjectsTracker"* nonnull %35) #13
  br label %42

42:                                               ; preds = %28, %37
  %43 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %14, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %43, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, -4294967296
  %47 = add i64 %45, -1
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = zext i32 %49 to i64
  %51 = or i64 %46, %50
  %52 = add i64 %51, 19
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i64
  %56 = or i64 %46, %55
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %43, i64 0, i32 31, i32 4
  %58 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %57, align 8
  %59 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %42
  %61 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %58, i64 %56) #13
  %62 = load i64, i64* %61, align 8
  br label %76

63:                                               ; preds = %42
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %43, i64 0, i32 31, i32 0
  %65 = load i64*, i64** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %43, i64 0, i32 31, i32 1
  %67 = load i64*, i64** %66, align 8
  %68 = icmp eq i64* %65, %67
  br i1 %68, label %69, label %71

69:                                               ; preds = %63
  %70 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %43) #13
  br label %71

71:                                               ; preds = %69, %63
  %72 = phi i64* [ %70, %69 ], [ %65, %63 ]
  %73 = ptrtoint i64* %72 to i64
  %74 = add i64 %73, 8
  %75 = inttoptr i64 %74 to i64*
  store i64* %75, i64** %64, align 8
  store i64 %56, i64* %72, align 8
  br label %76

76:                                               ; preds = %60, %71
  %77 = phi i64 [ %62, %60 ], [ %56, %71 ]
  %78 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 12, i32 0, i32 0
  %79 = load i64*, i64** %78, align 8
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %77, 631
  %82 = inttoptr i64 %81 to i32*
  %83 = trunc i64 %80 to i32
  store atomic volatile i32 %83, i32* %82 release, align 4
  %84 = and i64 %80, 1
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %109, label %86

86:                                               ; preds = %76
  %87 = and i64 %77, -262144
  %88 = or i64 %87, 8
  %89 = inttoptr i64 %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = and i64 %90, 262144
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %97, label %93

93:                                               ; preds = %86
  %94 = or i64 %87, 16
  %95 = inttoptr i64 %94 to %"class.v8::internal::Heap"**
  %96 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %95, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %96, i64 %77, i64 %81, i64 %80) #13
  br label %97

97:                                               ; preds = %93, %86
  %98 = and i64 %80, -262144
  %99 = or i64 %98, 8
  %100 = inttoptr i64 %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = and i64 %101, 24
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %109, label %104

104:                                              ; preds = %97
  %105 = load i64, i64* %89, align 8
  %106 = and i64 %105, 24
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %104
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %77, i64 %81, i64 %80) #13
  br label %109

109:                                              ; preds = %76, %97, %104, %108
  store i64* null, i64** %78, align 8
  tail call void @_ZN2v88internal5Debug32UpdateDebugInfosForExecutionModeEv(%"class.v8::internal::Debug"* %0)
  ret void
}

declare void @_ZN2v88internal7Isolate24CancelTerminateExecutionEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory12NewEvalErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"*, i32, i64*, i64*, i64*) local_unnamed_addr #3

declare void @_ZN2v88internal4Heap33RemoveHeapObjectAllocationTrackerEPNS0_27HeapObjectAllocationTrackerE(%"class.v8::internal::Heap"*, %"class.v8::internal::HeapObjectAllocationTracker"*) local_unnamed_addr #3

declare void @_ZN2v88internal13DebugEvaluate21ApplySideEffectChecksENS0_6HandleINS0_13BytecodeArrayEEE(i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal5Debug22PerformSideEffectCheckENS0_6HandleINS0_10JSFunctionEEENS2_INS0_6ObjectEEE(%"class.v8::internal::Debug"* nocapture, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca { i64*, i8 }, align 8
  %5 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %6 = alloca %"class.v8::internal::PerIsolateAssertScope.1595", align 8
  %7 = alloca { i64*, i8 }, align 8
  %8 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %9 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %10 = bitcast %"class.v8::internal::PerIsolateAssertScope.1595"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #13
  %11 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EEC1EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope.1595"* nonnull %6, %"class.v8::internal::Isolate"* %12) #13
  %13 = bitcast { i64*, i8 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #13
  %14 = load i64, i64* %1, align 8
  %15 = add i64 %14, 11
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i64 %14, -4294967296
  %19 = zext i32 %17 to i64
  %20 = or i64 %18, %19
  %21 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %22 = bitcast { i64*, i8 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22)
  %23 = bitcast { i64*, i8 }* %4 to %"class.v8::internal::IsCompiledScope"*
  call void @_ZN2v88internal15IsCompiledScopeC2ENS0_18SharedFunctionInfoEPNS0_7IsolateE(%"class.v8::internal::IsCompiledScope"* nonnull %23, i64 %20, %"class.v8::internal::Isolate"* %21) #13
  %24 = bitcast { i64*, i8 }* %4 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %4, i64 0, i32 1
  %27 = load i8, i8* %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22)
  %28 = bitcast { i64*, i8 }* %7 to i64*
  store i64 %25, i64* %28, align 8
  %29 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %7, i64 0, i32 1
  store i8 %27, i8* %29, align 8
  %30 = load i64, i64* %1, align 8
  %31 = and i64 %30, -4294967296
  %32 = add i64 %30, 23
  %33 = inttoptr i64 %32 to i32*
  %34 = load atomic i32, i32* %33 acquire, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %31, %35
  %37 = add i64 %36, 31
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = icmp eq i32 %39, 85
  br i1 %40, label %67, label %41

41:                                               ; preds = %3
  %42 = add i64 %30, 11
  %43 = inttoptr i64 %42 to i32*
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %31, %45
  %47 = add i64 %46, 3
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 acquire, align 4
  %50 = zext i32 %49 to i64
  %51 = or i64 %31, %50
  %52 = icmp eq i32 %49, 170
  br i1 %52, label %67, label %53

53:                                               ; preds = %41
  %54 = and i64 %50, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %71, label %56

56:                                               ; preds = %53
  %57 = add i64 %51, -1
  %58 = inttoptr i64 %57 to i32*
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %31, %60
  %62 = add i64 %61, 7
  %63 = inttoptr i64 %62 to i16*
  %64 = load atomic i16, i16* %63 monotonic, align 2
  %65 = add i16 %64, -157
  %66 = icmp ugt i16 %65, 1
  br i1 %66, label %71, label %67

67:                                               ; preds = %41, %3, %56
  %68 = bitcast { i64*, i8 }* %7 to %"class.v8::internal::IsCompiledScope"*
  %69 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %70 = call zeroext i1 @_ZN2v88internal8Compiler7CompileEPNS0_7IsolateENS0_6HandleINS0_10JSFunctionEEENS1_18ClearExceptionFlagEPNS0_15IsCompiledScopeE(%"class.v8::internal::Isolate"* %69, i64* %1, i32 0, %"class.v8::internal::IsCompiledScope"* nonnull %68) #13
  br i1 %70, label %71, label %234

71:                                               ; preds = %53, %56, %67
  %72 = load i64, i64* %1, align 8
  %73 = add i64 %72, 11
  %74 = inttoptr i64 %73 to i32*
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i64 %72, -4294967296
  %77 = zext i32 %75 to i64
  %78 = or i64 %76, %77
  %79 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %80 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %79, i64 0, i32 31, i32 4
  %81 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %80, align 8
  %82 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %71
  %84 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %81, i64 %78) #13
  br label %98

85:                                               ; preds = %71
  %86 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %79, i64 0, i32 31, i32 0
  %87 = load i64*, i64** %86, align 8
  %88 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %79, i64 0, i32 31, i32 1
  %89 = load i64*, i64** %88, align 8
  %90 = icmp eq i64* %87, %89
  br i1 %90, label %91, label %93

91:                                               ; preds = %85
  %92 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %79) #13
  br label %93

93:                                               ; preds = %91, %85
  %94 = phi i64* [ %92, %91 ], [ %87, %85 ]
  %95 = ptrtoint i64* %94 to i64
  %96 = add i64 %95, 8
  %97 = inttoptr i64 %96 to i64*
  store i64* %97, i64** %86, align 8
  store i64 %78, i64* %94, align 8
  br label %98

98:                                               ; preds = %83, %93
  %99 = phi i64* [ %84, %83 ], [ %94, %93 ]
  %100 = call i64* @_ZN2v88internal5Debug20GetOrCreateDebugInfoENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %99)
  %101 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #13
  %102 = load i64, i64* %100, align 8
  %103 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %8, i64 0, i32 0
  %105 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %106 = call i32 @_ZN2v88internal9DebugInfo18GetSideEffectStateEPNS0_7IsolateE(%"class.v8::internal::DebugInfo"* nonnull %104, %"class.v8::internal::Isolate"* %105) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #13
  switch i32 %106, label %233 [
    i32 1, label %107
    i32 2, label %128
    i32 3, label %234
    i32 0, label %232
  ]

107:                                              ; preds = %98
  %108 = load i8, i8* @_ZN2v88internal42FLAG_trace_side_effect_free_debug_evaluateE, align 1, !range !2
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %124, label %110

110:                                              ; preds = %107
  %111 = bitcast %"class.v8::internal::SharedFunctionInfo"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #13
  %112 = load i64, i64* %1, align 8
  %113 = add i64 %112, 11
  %114 = inttoptr i64 %113 to i32*
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i64 %112, -4294967296
  %117 = zext i32 %115 to i64
  %118 = or i64 %116, %117
  %119 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %118, i64* %119, align 8
  %120 = call i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %9) #13
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.8, i64 0, i64 0), i8* %120) #13
  %121 = icmp eq i8* %120, null
  br i1 %121, label %123, label %122

122:                                              ; preds = %110
  call void @_ZdaPv(i8* nonnull %120) #17
  br label %123

123:                                              ; preds = %110, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #13
  br label %124

124:                                              ; preds = %107, %123
  %125 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 9
  store i8 1, i8* %125, align 8
  %126 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %127 = call i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"* %126) #13
  br label %234

128:                                              ; preds = %98
  %129 = load i64, i64* %99, align 8
  %130 = and i64 %129, -4294967296
  %131 = add i64 %129, 3
  %132 = inttoptr i64 %131 to i32*
  %133 = load atomic i32, i32* %132 acquire, align 4
  %134 = zext i32 %133 to i64
  %135 = and i64 %134, 1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %164, label %137

137:                                              ; preds = %128
  %138 = or i64 %130, %134
  %139 = add i64 %138, -1
  %140 = inttoptr i64 %139 to i32*
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = zext i32 %141 to i64
  %143 = or i64 %130, %142
  %144 = add i64 %143, 7
  %145 = inttoptr i64 %144 to i16*
  %146 = load atomic i16, i16* %145 monotonic, align 2
  %147 = icmp eq i16 %146, 133
  br i1 %147, label %199, label %148

148:                                              ; preds = %137
  %149 = load atomic i32, i32* %140 monotonic, align 4
  %150 = zext i32 %149 to i64
  %151 = or i64 %130, %150
  %152 = add i64 %151, 7
  %153 = inttoptr i64 %152 to i16*
  %154 = load atomic i16, i16* %153 monotonic, align 2
  %155 = icmp eq i16 %154, 105
  br i1 %155, label %199, label %156

156:                                              ; preds = %148
  %157 = load atomic i32, i32* %140 monotonic, align 4
  %158 = zext i32 %157 to i64
  %159 = or i64 %130, %158
  %160 = add i64 %159, 7
  %161 = inttoptr i64 %160 to i16*
  %162 = load atomic i16, i16* %161 monotonic, align 2
  %163 = icmp eq i16 %162, 94
  br i1 %163, label %199, label %164

164:                                              ; preds = %128, %156
  %165 = load i64, i64* %2, align 8
  %166 = and i64 %165, 1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %234, label %168

168:                                              ; preds = %164
  %169 = and i64 %165, -4294967296
  %170 = add i64 %165, -1
  %171 = inttoptr i64 %170 to i32*
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = zext i32 %172 to i64
  %174 = or i64 %169, %173
  %175 = add i64 %174, 7
  %176 = inttoptr i64 %175 to i16*
  %177 = load atomic i16, i16* %176 monotonic, align 2
  %178 = icmp eq i16 %177, 66
  br i1 %178, label %234, label %179

179:                                              ; preds = %168
  %180 = load atomic i32, i32* %171 monotonic, align 4
  %181 = zext i32 %180 to i64
  %182 = or i64 %169, %181
  %183 = add i64 %182, 7
  %184 = inttoptr i64 %183 to i16*
  %185 = load atomic i16, i16* %184 monotonic, align 2
  %186 = icmp ult i16 %185, 65
  br i1 %186, label %234, label %187

187:                                              ; preds = %179
  %188 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %189 = load %"class.v8::internal::Debug::TemporaryObjectsTracker"*, %"class.v8::internal::Debug::TemporaryObjectsTracker"** %188, align 8
  %190 = call zeroext i1 @_ZNK2v88internal5Debug23TemporaryObjectsTracker9HasObjectENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Debug::TemporaryObjectsTracker"* %189, i64* %2) #13
  br i1 %190, label %234, label %191

191:                                              ; preds = %187
  %192 = load i8, i8* @_ZN2v88internal42FLAG_trace_side_effect_free_debug_evaluateE, align 1, !range !2
  %193 = icmp eq i8 %192, 0
  br i1 %193, label %195, label %194

194:                                              ; preds = %191
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.13, i64 0, i64 0)) #13
  br label %195

195:                                              ; preds = %194, %191
  %196 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 9
  store i8 1, i8* %196, align 8
  %197 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %198 = call i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"* %197) #13
  br label %234

199:                                              ; preds = %137, %148, %156
  call void @_ZN2v88internal5Debug32PrepareFunctionForDebugExecutionENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %0, i64* %99)
  %200 = load i64, i64* %100, align 8
  %201 = and i64 %200, -4294967296
  %202 = add i64 %200, 19
  %203 = inttoptr i64 %202 to i32*
  %204 = load atomic i32, i32* %203 acquire, align 4
  %205 = zext i32 %204 to i64
  %206 = or i64 %201, %205
  %207 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %208 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %207, i64 0, i32 31, i32 4
  %209 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %208, align 8
  %210 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %209, null
  br i1 %210, label %213, label %211

211:                                              ; preds = %199
  %212 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %209, i64 %206) #13
  br label %226

213:                                              ; preds = %199
  %214 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %207, i64 0, i32 31, i32 0
  %215 = load i64*, i64** %214, align 8
  %216 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %207, i64 0, i32 31, i32 1
  %217 = load i64*, i64** %216, align 8
  %218 = icmp eq i64* %215, %217
  br i1 %218, label %219, label %221

219:                                              ; preds = %213
  %220 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %207) #13
  br label %221

221:                                              ; preds = %219, %213
  %222 = phi i64* [ %220, %219 ], [ %215, %213 ]
  %223 = ptrtoint i64* %222 to i64
  %224 = add i64 %223, 8
  %225 = inttoptr i64 %224 to i64*
  store i64* %225, i64** %214, align 8
  store i64 %206, i64* %222, align 8
  br label %226

226:                                              ; preds = %211, %221
  %227 = phi i64* [ %212, %211 ], [ %222, %221 ]
  call void @_ZN2v88internal13DebugEvaluate21ApplySideEffectChecksENS0_6HandleINS0_13BytecodeArrayEEE(i64* %227) #13
  %228 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %228) #13
  %229 = load i64, i64* %100, align 8
  %230 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %229, i64* %230, align 8
  %231 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %5, i64 0, i32 0
  call void @_ZN2v88internal9DebugInfo21SetDebugExecutionModeENS1_13ExecutionModeE(%"class.v8::internal::DebugInfo"* nonnull %231, i8 zeroext 32) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %228) #13
  br label %234

232:                                              ; preds = %98
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

233:                                              ; preds = %98
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

234:                                              ; preds = %124, %226, %98, %164, %168, %179, %187, %195, %67
  %235 = phi i1 [ false, %67 ], [ true, %226 ], [ false, %124 ], [ true, %98 ], [ false, %195 ], [ true, %168 ], [ true, %179 ], [ true, %187 ], [ true, %164 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #13
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EED1Ev(%"class.v8::internal::PerIsolateAssertScope.1595"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #13
  ret i1 %235
}

declare void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EEC1EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope.1595"*, %"class.v8::internal::Isolate"*) unnamed_addr #3

declare i32 @_ZN2v88internal9DebugInfo18GetSideEffectStateEPNS0_7IsolateE(%"class.v8::internal::DebugInfo"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #3

declare i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal5Debug31PerformSideEffectCheckForObjectENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Debug"* nocapture, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = and i64 %3, 1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %38, label %6

6:                                                ; preds = %2
  %7 = and i64 %3, -4294967296
  %8 = add i64 %3, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = icmp eq i16 %15, 66
  br i1 %16, label %38, label %17

17:                                               ; preds = %6
  %18 = load atomic i32, i32* %9 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %7, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = icmp ult i16 %23, 65
  br i1 %24, label %38, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %27 = load %"class.v8::internal::Debug::TemporaryObjectsTracker"*, %"class.v8::internal::Debug::TemporaryObjectsTracker"** %26, align 8
  %28 = tail call zeroext i1 @_ZNK2v88internal5Debug23TemporaryObjectsTracker9HasObjectENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Debug::TemporaryObjectsTracker"* %27, i64* %1)
  br i1 %28, label %38, label %29

29:                                               ; preds = %25
  %30 = load i8, i8* @_ZN2v88internal42FLAG_trace_side_effect_free_debug_evaluateE, align 1, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %29
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.13, i64 0, i64 0)) #13
  br label %33

33:                                               ; preds = %29, %32
  %34 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 9
  store i8 1, i8* %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %36 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %35, align 8
  %37 = tail call i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"* %36) #13
  br label %38

38:                                               ; preds = %2, %25, %17, %6, %33
  %39 = phi i1 [ false, %33 ], [ true, %6 ], [ true, %17 ], [ true, %25 ], [ true, %2 ]
  ret i1 %39
}

; Function Attrs: nounwind
declare void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EED1Ev(%"class.v8::internal::PerIsolateAssertScope.1595"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal5Debug33PerformSideEffectCheckForCallbackENS0_6HandleINS0_6ObjectEEES4_NS1_12AccessorKindE(%"class.v8::internal::Debug"* nocapture, i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Name", align 8
  %6 = icmp eq i64* %1, null
  br i1 %6, label %189, label %7

7:                                                ; preds = %4
  %8 = load i64, i64* %1, align 8
  %9 = and i64 %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %189, label %11

11:                                               ; preds = %7
  %12 = and i64 %8, -4294967296
  %13 = add i64 %8, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = icmp eq i16 %20, 98
  br i1 %21, label %22, label %65

22:                                               ; preds = %11
  %23 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %24 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %23, i64 0, i32 0, i32 1
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %23, i64 0, i32 1, i64 0
  br label %39

31:                                               ; preds = %25, %22
  %32 = and i64 %8, -262144
  %33 = or i64 %32, 16
  %34 = inttoptr i64 %33 to i64*
  %35 = load i64, i64* %34, align 16
  %36 = add i64 %35, -41416
  %37 = inttoptr i64 %36 to %"class.v8::internal::Isolate"*
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %37, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %39

39:                                               ; preds = %31, %29
  %40 = phi i64* [ %38, %31 ], [ %30, %29 ]
  %41 = load atomic i32, i32* %14 monotonic, align 4
  %42 = getelementptr inbounds i64, i64* %40, i64 61
  %43 = load i64, i64* %42, align 8
  %44 = trunc i64 %43 to i32
  %45 = icmp eq i32 %41, %44
  br i1 %45, label %46, label %65

46:                                               ; preds = %39
  %47 = getelementptr inbounds i64, i64* %40, i64 59
  %48 = load i64, i64* %47, align 8
  %49 = trunc i64 %48 to i32
  store atomic volatile i32 %49, i32* %14 monotonic, align 4
  %50 = icmp eq i32 %49, 0
  %51 = and i64 %48, 1
  %52 = icmp eq i64 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %196, label %54

54:                                               ; preds = %46
  %55 = and i64 %8, -262144
  %56 = or i64 %55, 8
  %57 = inttoptr i64 %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = and i64 %58, 262144
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %196, label %61

61:                                               ; preds = %54
  %62 = or i64 %55, 16
  %63 = inttoptr i64 %62 to %"class.v8::internal::Heap"**
  %64 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %63, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %64, i64 %8, i64 0, i64 %48) #13
  br label %196

65:                                               ; preds = %11, %39
  %66 = and i64 %8, -4294967296
  %67 = add i64 %8, -1
  %68 = inttoptr i64 %67 to i32*
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = zext i32 %69 to i64
  %71 = or i64 %66, %70
  %72 = add i64 %71, 7
  %73 = inttoptr i64 %72 to i16*
  %74 = load atomic i16, i16* %73 monotonic, align 2
  %75 = icmp eq i16 %74, 86
  br i1 %75, label %76, label %135

76:                                               ; preds = %65
  %77 = icmp eq i32 %3, 2
  %78 = add i64 %8, 7
  %79 = inttoptr i64 %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = select i1 %77, i32 8, i32 6
  %82 = lshr i32 %80, %81
  %83 = and i32 %82, 3
  switch i32 %83, label %122 [
    i32 1, label %196
    i32 2, label %84
  ]

84:                                               ; preds = %76
  %85 = load i64, i64* %2, align 8
  %86 = and i64 %85, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %196, label %88

88:                                               ; preds = %84
  %89 = and i64 %85, -4294967296
  %90 = add i64 %85, -1
  %91 = inttoptr i64 %90 to i32*
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = zext i32 %92 to i64
  %94 = or i64 %89, %93
  %95 = add i64 %94, 7
  %96 = inttoptr i64 %95 to i16*
  %97 = load atomic i16, i16* %96 monotonic, align 2
  %98 = icmp eq i16 %97, 66
  br i1 %98, label %196, label %99

99:                                               ; preds = %88
  %100 = load atomic i32, i32* %91 monotonic, align 4
  %101 = zext i32 %100 to i64
  %102 = or i64 %89, %101
  %103 = add i64 %102, 7
  %104 = inttoptr i64 %103 to i16*
  %105 = load atomic i16, i16* %104 monotonic, align 2
  %106 = icmp ult i16 %105, 65
  br i1 %106, label %196, label %107

107:                                              ; preds = %99
  %108 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %109 = load %"class.v8::internal::Debug::TemporaryObjectsTracker"*, %"class.v8::internal::Debug::TemporaryObjectsTracker"** %108, align 8
  %110 = tail call zeroext i1 @_ZNK2v88internal5Debug23TemporaryObjectsTracker9HasObjectENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Debug::TemporaryObjectsTracker"* %109, i64* %2) #13
  br i1 %110, label %196, label %111

111:                                              ; preds = %107
  %112 = load i8, i8* @_ZN2v88internal42FLAG_trace_side_effect_free_debug_evaluateE, align 1, !range !2
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %115, label %114

114:                                              ; preds = %111
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.13, i64 0, i64 0)) #13
  br label %115

115:                                              ; preds = %114, %111
  %116 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 9
  store i8 1, i8* %116, align 8
  %117 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %118 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %117, align 8
  %119 = tail call i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"* %118) #13
  %120 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %117, align 8
  %121 = tail call zeroext i1 @_ZN2v88internal7Isolate27OptionalRescheduleExceptionEb(%"class.v8::internal::Isolate"* %120, i1 zeroext false) #13
  br label %196

122:                                              ; preds = %76
  %123 = load i8, i8* @_ZN2v88internal42FLAG_trace_side_effect_free_debug_evaluateE, align 1, !range !2
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %189, label %125

125:                                              ; preds = %122
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9, i64 0, i64 0)) #13
  %126 = bitcast %"class.v8::internal::Name"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #13
  %127 = add i64 %8, 3
  %128 = inttoptr i64 %127 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = zext i32 %129 to i64
  %131 = or i64 %66, %130
  %132 = getelementptr inbounds %"class.v8::internal::Name", %"class.v8::internal::Name"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %131, i64* %132, align 8
  %133 = getelementptr inbounds %"class.v8::internal::Name", %"class.v8::internal::Name"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZNK2v88internal6Object10ShortPrintEP8_IO_FILE(%"class.v8::internal::Object"* nonnull %133, %struct._IO_FILE* %134) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #13
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10, i64 0, i64 0)) #13
  br label %189

135:                                              ; preds = %65
  %136 = load atomic i32, i32* %68 monotonic, align 4
  %137 = zext i32 %136 to i64
  %138 = or i64 %66, %137
  %139 = add i64 %138, 7
  %140 = inttoptr i64 %139 to i16*
  %141 = load atomic i16, i16* %140 monotonic, align 2
  %142 = icmp eq i16 %141, 104
  br i1 %142, label %143, label %153

143:                                              ; preds = %135
  %144 = add i64 %8, 35
  %145 = inttoptr i64 %144 to i32*
  %146 = load i32, i32* %145, align 4
  %147 = and i32 %146, 32
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %196

149:                                              ; preds = %143
  %150 = load i8, i8* @_ZN2v88internal42FLAG_trace_side_effect_free_debug_evaluateE, align 1, !range !2
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %189, label %152

152:                                              ; preds = %149
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.11, i64 0, i64 0)) #13
  br label %189

153:                                              ; preds = %135
  %154 = load atomic i32, i32* %68 monotonic, align 4
  %155 = zext i32 %154 to i64
  %156 = or i64 %66, %155
  %157 = add i64 %156, 7
  %158 = inttoptr i64 %157 to i16*
  %159 = load atomic i16, i16* %158 monotonic, align 2
  %160 = icmp eq i16 %159, 98
  br i1 %160, label %161, label %189

161:                                              ; preds = %153
  %162 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %163 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %162, null
  br i1 %163, label %170, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %162, i64 0, i32 0, i32 1
  %166 = load i8, i8* %165, align 8, !range !2
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %170, label %168

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %162, i64 0, i32 1, i64 0
  br label %178

170:                                              ; preds = %164, %161
  %171 = and i64 %8, -262144
  %172 = or i64 %171, 16
  %173 = inttoptr i64 %172 to i64*
  %174 = load i64, i64* %173, align 16
  %175 = add i64 %174, -41416
  %176 = inttoptr i64 %175 to %"class.v8::internal::Isolate"*
  %177 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %176, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %178

178:                                              ; preds = %168, %170
  %179 = phi i64* [ %177, %170 ], [ %169, %168 ]
  %180 = load atomic i32, i32* %68 monotonic, align 4
  %181 = getelementptr inbounds i64, i64* %179, i64 60
  %182 = load i64, i64* %181, align 8
  %183 = trunc i64 %182 to i32
  %184 = icmp eq i32 %180, %183
  br i1 %184, label %196, label %185

185:                                              ; preds = %178
  %186 = load i8, i8* @_ZN2v88internal42FLAG_trace_side_effect_free_debug_evaluateE, align 1, !range !2
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %189, label %188

188:                                              ; preds = %185
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.12, i64 0, i64 0)) #13
  br label %189

189:                                              ; preds = %7, %185, %188, %149, %152, %122, %125, %4, %153
  %190 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 9
  store i8 1, i8* %190, align 8
  %191 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %192 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %191, align 8
  %193 = call i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"* %192) #13
  %194 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %191, align 8
  %195 = call zeroext i1 @_ZN2v88internal7Isolate27OptionalRescheduleExceptionEb(%"class.v8::internal::Isolate"* %194, i1 zeroext false) #13
  br label %196

196:                                              ; preds = %143, %84, %107, %99, %88, %76, %115, %61, %54, %46, %178, %189
  %197 = phi i1 [ false, %189 ], [ true, %143 ], [ true, %178 ], [ true, %46 ], [ true, %54 ], [ true, %61 ], [ true, %76 ], [ false, %115 ], [ true, %88 ], [ true, %99 ], [ true, %107 ], [ true, %84 ]
  ret i1 %197
}

declare zeroext i1 @_ZN2v88internal7Isolate27OptionalRescheduleExceptionEb(%"class.v8::internal::Isolate"*, i1 zeroext) local_unnamed_addr #3

declare void @_ZNK2v88internal6Object10ShortPrintEP8_IO_FILE(%"class.v8::internal::Object"*, %struct._IO_FILE*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal5Debug32PerformSideEffectCheckAtBytecodeEPNS0_16InterpretedFrameE(%"class.v8::internal::Debug"* nocapture, %"class.v8::internal::InterpretedFrame"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %4 = alloca %"class.v8::internal::interpreter::BytecodeArrayIterator", align 8
  %5 = bitcast %"class.v8::internal::SharedFunctionInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.v8::internal::InterpretedFrame", %"class.v8::internal::InterpretedFrame"* %1, i64 0, i32 0, i32 0
  %7 = bitcast %"class.v8::internal::InterpretedFrame"* %1 to i64 (%"class.v8::internal::JavaScriptFrame"*)***
  %8 = load i64 (%"class.v8::internal::JavaScriptFrame"*)**, i64 (%"class.v8::internal::JavaScriptFrame"*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.v8::internal::JavaScriptFrame"*)*, i64 (%"class.v8::internal::JavaScriptFrame"*)** %8, i64 13
  %10 = load i64 (%"class.v8::internal::JavaScriptFrame"*)*, i64 (%"class.v8::internal::JavaScriptFrame"*)** %9, align 8
  %11 = tail call i64 %10(%"class.v8::internal::JavaScriptFrame"* %6) #13
  %12 = add i64 %11, 11
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i64 %11, -4294967296
  %16 = zext i32 %14 to i64
  %17 = or i64 %15, %16
  %18 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 16
  %20 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %19, align 8
  %21 = call i64 @_ZNK2v88internal18SharedFunctionInfo16GetBytecodeArrayINS0_7IsolateEEENS0_13BytecodeArrayEPT_(%"class.v8::internal::SharedFunctionInfo"* nonnull %3, %"class.v8::internal::Isolate"* %20)
  %22 = bitcast %"class.v8::internal::InterpretedFrame"* %1 to i32 (%"class.v8::internal::InterpretedFrame"*)***
  %23 = load i32 (%"class.v8::internal::InterpretedFrame"*)**, i32 (%"class.v8::internal::InterpretedFrame"*)*** %22, align 8
  %24 = getelementptr inbounds i32 (%"class.v8::internal::InterpretedFrame"*)*, i32 (%"class.v8::internal::InterpretedFrame"*)** %23, i64 22
  %25 = load i32 (%"class.v8::internal::InterpretedFrame"*)*, i32 (%"class.v8::internal::InterpretedFrame"*)** %24, align 8
  %26 = call i32 %25(%"class.v8::internal::InterpretedFrame"* %1) #13
  %27 = bitcast %"class.v8::internal::interpreter::BytecodeArrayIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %27) #13
  %28 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %19, align 8
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %28, i64 0, i32 31, i32 4
  %30 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %29, align 8
  %31 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %2
  %33 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %30, i64 %21) #13
  br label %47

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %28, i64 0, i32 31, i32 0
  %36 = load i64*, i64** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %28, i64 0, i32 31, i32 1
  %38 = load i64*, i64** %37, align 8
  %39 = icmp eq i64* %36, %38
  br i1 %39, label %40, label %42

40:                                               ; preds = %34
  %41 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %28) #13
  br label %42

42:                                               ; preds = %40, %34
  %43 = phi i64* [ %41, %40 ], [ %36, %34 ]
  %44 = ptrtoint i64* %43 to i64
  %45 = add i64 %44, 8
  %46 = inttoptr i64 %45 to i64*
  store i64* %46, i64** %35, align 8
  store i64 %21, i64* %43, align 8
  br label %47

47:                                               ; preds = %32, %42
  %48 = phi i64* [ %33, %32 ], [ %43, %42 ]
  call void @_ZN2v88internal11interpreter21BytecodeArrayIteratorC1ENS0_6HandleINS0_13BytecodeArrayEEEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %4, i64* %48, i32 %26) #13
  %49 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %4, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 37
  br i1 %52, label %53, label %55

53:                                               ; preds = %47
  %54 = call i32 @_ZN2v88internal11interpreter8Register15current_contextEv() #13
  br label %57

55:                                               ; preds = %47
  %56 = call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator18GetRegisterOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %4, i32 0) #13
  br label %57

57:                                               ; preds = %55, %53
  %58 = phi i32 [ %54, %53 ], [ %56, %55 ]
  %59 = getelementptr inbounds %"class.v8::internal::InterpretedFrame", %"class.v8::internal::InterpretedFrame"* %1, i64 0, i32 0
  %60 = call i64 @_ZNK2v88internal16UnoptimizedFrame23ReadInterpreterRegisterEi(%"class.v8::internal::UnoptimizedFrame"* %59, i32 %58) #13
  %61 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %19, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %61, i64 0, i32 31, i32 4
  %63 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %62, align 8
  %64 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %63, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %57
  %66 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %63, i64 %60) #13
  %67 = load i64, i64* %66, align 8
  br label %81

68:                                               ; preds = %57
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %61, i64 0, i32 31, i32 0
  %70 = load i64*, i64** %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %61, i64 0, i32 31, i32 1
  %72 = load i64*, i64** %71, align 8
  %73 = icmp eq i64* %70, %72
  br i1 %73, label %74, label %76

74:                                               ; preds = %68
  %75 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %61) #13
  br label %76

76:                                               ; preds = %74, %68
  %77 = phi i64* [ %75, %74 ], [ %70, %68 ]
  %78 = ptrtoint i64* %77 to i64
  %79 = add i64 %78, 8
  %80 = inttoptr i64 %79 to i64*
  store i64* %80, i64** %69, align 8
  store i64 %60, i64* %77, align 8
  br label %81

81:                                               ; preds = %65, %76
  %82 = phi i64 [ %67, %65 ], [ %60, %76 ]
  %83 = phi i64* [ %66, %65 ], [ %77, %76 ]
  %84 = and i64 %82, 1
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %117, label %86

86:                                               ; preds = %81
  %87 = and i64 %82, -4294967296
  %88 = add i64 %82, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = zext i32 %90 to i64
  %92 = or i64 %87, %91
  %93 = add i64 %92, 7
  %94 = inttoptr i64 %93 to i16*
  %95 = load atomic i16, i16* %94 monotonic, align 2
  %96 = icmp eq i16 %95, 66
  br i1 %96, label %117, label %97

97:                                               ; preds = %86
  %98 = load atomic i32, i32* %89 monotonic, align 4
  %99 = zext i32 %98 to i64
  %100 = or i64 %87, %99
  %101 = add i64 %100, 7
  %102 = inttoptr i64 %101 to i16*
  %103 = load atomic i16, i16* %102 monotonic, align 2
  %104 = icmp ult i16 %103, 65
  br i1 %104, label %117, label %105

105:                                              ; preds = %97
  %106 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %107 = load %"class.v8::internal::Debug::TemporaryObjectsTracker"*, %"class.v8::internal::Debug::TemporaryObjectsTracker"** %106, align 8
  %108 = call zeroext i1 @_ZNK2v88internal5Debug23TemporaryObjectsTracker9HasObjectENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Debug::TemporaryObjectsTracker"* %107, i64* %83) #13
  br i1 %108, label %117, label %109

109:                                              ; preds = %105
  %110 = load i8, i8* @_ZN2v88internal42FLAG_trace_side_effect_free_debug_evaluateE, align 1, !range !2
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %113, label %112

112:                                              ; preds = %109
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.13, i64 0, i64 0)) #13
  br label %113

113:                                              ; preds = %112, %109
  %114 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 9
  store i8 1, i8* %114, align 8
  %115 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %19, align 8
  %116 = call i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"* %115) #13
  br label %117

117:                                              ; preds = %81, %86, %97, %105, %113
  %118 = phi i1 [ false, %113 ], [ true, %86 ], [ true, %97 ], [ true, %105 ], [ true, %81 ]
  call void @_ZN2v88internal11interpreter21BytecodeArrayIteratorD1Ev(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %27) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  ret i1 %118
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK2v88internal18SharedFunctionInfo16GetBytecodeArrayINS0_7IsolateEEENS0_13BytecodeArrayEPT_(%"class.v8::internal::SharedFunctionInfo"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 15
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 acquire, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %5, %14
  %16 = add i64 %15, 7
  %17 = inttoptr i64 %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = icmp eq i16 %18, 100
  br i1 %19, label %20, label %55

20:                                               ; preds = %2
  %21 = load i64, i64* %3, align 8
  %22 = and i64 %21, -4294967296
  %23 = add i64 %21, 15
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 acquire, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %22, %26
  %28 = add i64 %27, 19
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 acquire, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %22, %31
  %33 = add i64 %32, -1
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %22, %36
  %38 = add i64 %37, 7
  %39 = inttoptr i64 %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = icmp eq i16 %40, 133
  br i1 %41, label %42, label %55

42:                                               ; preds = %20
  %43 = load i64, i64* %3, align 8
  %44 = and i64 %43, -4294967296
  %45 = add i64 %43, 15
  %46 = inttoptr i64 %45 to i32*
  %47 = load atomic i32, i32* %46 acquire, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %44, %48
  %50 = add i64 %49, 15
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 acquire, align 4
  %53 = zext i32 %52 to i64
  %54 = or i64 %44, %53
  br label %120

55:                                               ; preds = %2, %20
  %56 = load i64, i64* %3, align 8
  %57 = and i64 %56, -4294967296
  %58 = add i64 %56, 3
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 acquire, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %57, %61
  %63 = and i64 %61, 1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %114, label %65

65:                                               ; preds = %55
  %66 = add i64 %62, -1
  %67 = inttoptr i64 %66 to i32*
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %57, %69
  %71 = add i64 %70, 7
  %72 = inttoptr i64 %71 to i16*
  %73 = load atomic i16, i16* %72 monotonic, align 2
  %74 = icmp eq i16 %73, 133
  br i1 %74, label %120, label %75

75:                                               ; preds = %65
  %76 = load atomic i32, i32* %67 monotonic, align 4
  %77 = zext i32 %76 to i64
  %78 = or i64 %57, %77
  %79 = add i64 %78, 7
  %80 = inttoptr i64 %79 to i16*
  %81 = load atomic i16, i16* %80 monotonic, align 2
  %82 = icmp eq i16 %81, 94
  br i1 %82, label %83, label %114

83:                                               ; preds = %75
  %84 = load i64, i64* %3, align 8
  %85 = and i64 %84, -4294967296
  %86 = add i64 %84, 3
  %87 = inttoptr i64 %86 to i32*
  %88 = load atomic i32, i32* %87 acquire, align 4
  %89 = zext i32 %88 to i64
  %90 = or i64 %85, %89
  %91 = add i64 %90, 7
  %92 = inttoptr i64 %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = zext i32 %93 to i64
  %95 = or i64 %85, %94
  %96 = and i64 %94, 1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %108, label %98

98:                                               ; preds = %83
  %99 = add i64 %95, -1
  %100 = inttoptr i64 %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = zext i32 %101 to i64
  %103 = or i64 %85, %102
  %104 = add i64 %103, 7
  %105 = inttoptr i64 %104 to i16*
  %106 = load atomic i16, i16* %105 monotonic, align 2
  %107 = icmp eq i16 %106, 133
  br i1 %107, label %120, label %108

108:                                              ; preds = %98, %83
  %109 = add i64 %95, 3
  %110 = inttoptr i64 %109 to i32*
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i64
  %113 = or i64 %85, %112
  br label %120

114:                                              ; preds = %75, %55
  %115 = add i64 %62, 3
  %116 = inttoptr i64 %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = zext i32 %117 to i64
  %119 = or i64 %57, %118
  br label %120

120:                                              ; preds = %114, %108, %98, %65, %42
  %121 = phi i64 [ %54, %42 ], [ %119, %114 ], [ %62, %65 ], [ %113, %108 ], [ %95, %98 ]
  ret i64 %121
}

declare i32 @_ZN2v88internal11interpreter8Register15current_contextEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal5Debug23TemporaryObjectsTracker9HasObjectENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Debug::TemporaryObjectsTracker"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = icmp ugt i16 %12, 188
  br i1 %13, label %14, label %52

14:                                               ; preds = %2
  %15 = load atomic i32, i32* %6 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %4, %16
  %18 = add i64 %17, 3
  %19 = inttoptr i64 %18 to i8*
  %20 = load atomic i8, i8* %19 monotonic, align 1
  %21 = zext i8 %20 to i32
  %22 = shl nuw nsw i32 %21, 2
  %23 = icmp eq i8 %20, 0
  br i1 %23, label %52, label %24

24:                                               ; preds = %14
  %25 = add i64 %17, 7
  %26 = inttoptr i64 %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = icmp eq i16 %27, 1057
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = add i64 %17, 9
  %31 = inttoptr i64 %30 to i8*
  %32 = load atomic i8, i8* %31 monotonic, align 1
  %33 = icmp slt i8 %32, 0
  %34 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %27, i1 zeroext %33) #13
  br label %35

35:                                               ; preds = %24, %29
  %36 = phi i32 [ %34, %29 ], [ 12, %24 ]
  %37 = sub nsw i32 %22, %36
  %38 = ashr i32 %37, 2
  %39 = load atomic i8, i8* %19 monotonic, align 1
  %40 = zext i8 %39 to i32
  %41 = add i64 %17, 4
  %42 = inttoptr i64 %41 to i8*
  %43 = load atomic i8, i8* %42 monotonic, align 1
  %44 = zext i8 %43 to i32
  %45 = sub nsw i32 1, %40
  %46 = add nsw i32 %45, %38
  %47 = add nsw i32 %46, %44
  %48 = icmp ult i32 %47, 3
  br i1 %48, label %49, label %123

49:                                               ; preds = %35
  %50 = load i64, i64* %1, align 8
  %51 = add i64 %50, -1
  br label %52

52:                                               ; preds = %49, %14, %2
  %53 = phi i64 [ %51, %49 ], [ %5, %14 ], [ %5, %2 ]
  %54 = getelementptr inbounds %"class.v8::internal::Debug::TemporaryObjectsTracker", %"class.v8::internal::Debug::TemporaryObjectsTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %120, label %57

57:                                               ; preds = %52
  %58 = tail call i64 @llvm.ctpop.i64(i64 %55) #13, !range !6
  %59 = icmp ugt i64 %58, 1
  br i1 %59, label %63, label %60

60:                                               ; preds = %57
  %61 = add i64 %55, -1
  %62 = and i64 %61, %53
  br label %67

63:                                               ; preds = %57
  %64 = icmp ult i64 %53, %55
  br i1 %64, label %67, label %65

65:                                               ; preds = %63
  %66 = urem i64 %53, %55
  br label %67

67:                                               ; preds = %65, %63, %60
  %68 = phi i64 [ %62, %60 ], [ %66, %65 ], [ %53, %63 ]
  %69 = getelementptr inbounds %"class.v8::internal::Debug::TemporaryObjectsTracker", %"class.v8::internal::Debug::TemporaryObjectsTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %69, align 8
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %70, i64 %68
  %72 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base"* %72, null
  br i1 %73, label %120, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %72, i64 0, i32 0
  %76 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %75, align 8
  %77 = icmp eq %"struct.std::__1::__hash_node_base"* %76, null
  br i1 %77, label %120, label %78

78:                                               ; preds = %74
  %79 = add i64 %55, -1
  br i1 %59, label %80, label %102

80:                                               ; preds = %78, %98
  %81 = phi %"struct.std::__1::__hash_node_base"* [ %100, %98 ], [ %76, %78 ]
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %81, i64 1
  %83 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = icmp eq i64 %53, %84
  br i1 %85, label %93, label %86

86:                                               ; preds = %80
  %87 = icmp ult i64 %84, %55
  br i1 %87, label %90, label %88

88:                                               ; preds = %86
  %89 = urem i64 %84, %55
  br label %90

90:                                               ; preds = %88, %86
  %91 = phi i64 [ %89, %88 ], [ %84, %86 ]
  %92 = icmp eq i64 %91, %68
  br i1 %92, label %98, label %120

93:                                               ; preds = %80
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %81, i64 2
  %95 = bitcast %"struct.std::__1::__hash_node_base"* %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = icmp eq i64 %96, %53
  br i1 %97, label %120, label %98

98:                                               ; preds = %93, %90
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %81, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base"* %100, null
  br i1 %101, label %120, label %80

102:                                              ; preds = %78, %116
  %103 = phi %"struct.std::__1::__hash_node_base"* [ %118, %116 ], [ %76, %78 ]
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %103, i64 1
  %105 = bitcast %"struct.std::__1::__hash_node_base"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = icmp eq i64 %53, %106
  br i1 %107, label %111, label %108

108:                                              ; preds = %102
  %109 = and i64 %106, %79
  %110 = icmp eq i64 %109, %68
  br i1 %110, label %116, label %120

111:                                              ; preds = %102
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %103, i64 2
  %113 = bitcast %"struct.std::__1::__hash_node_base"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = icmp eq i64 %114, %53
  br i1 %115, label %120, label %116

116:                                              ; preds = %111, %108
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %103, i64 0, i32 0
  %118 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %117, align 8
  %119 = icmp eq %"struct.std::__1::__hash_node_base"* %118, null
  br i1 %119, label %120, label %102

120:                                              ; preds = %108, %111, %116, %90, %93, %98, %52, %67, %74
  %121 = phi %"struct.std::__1::__hash_node_base"* [ null, %67 ], [ null, %52 ], [ null, %74 ], [ %81, %93 ], [ null, %98 ], [ null, %90 ], [ %103, %111 ], [ null, %116 ], [ null, %108 ]
  %122 = icmp ne %"struct.std::__1::__hash_node_base"* %121, null
  br label %123

123:                                              ; preds = %35, %120
  %124 = phi i1 [ %122, %120 ], [ false, %35 ]
  ret i1 %124
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal5Debug34SetTemporaryObjectTrackingDisabledEb(%"class.v8::internal::Debug"* nocapture readonly, i1 zeroext) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::Debug::TemporaryObjectsTracker"*, %"class.v8::internal::Debug::TemporaryObjectsTracker"** %3, align 8
  %5 = icmp eq %"class.v8::internal::Debug::TemporaryObjectsTracker"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = zext i1 %1 to i8
  %8 = getelementptr inbounds %"class.v8::internal::Debug::TemporaryObjectsTracker", %"class.v8::internal::Debug::TemporaryObjectsTracker"* %4, i64 0, i32 1
  store i8 %7, i8* %8, align 8
  br label %9

9:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal5Debug34GetTemporaryObjectTrackingDisabledEv(%"class.v8::internal::Debug"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::Debug::TemporaryObjectsTracker"*, %"class.v8::internal::Debug::TemporaryObjectsTracker"** %2, align 8
  %4 = icmp eq %"class.v8::internal::Debug::TemporaryObjectsTracker"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::Debug::TemporaryObjectsTracker", %"class.v8::internal::Debug::TemporaryObjectsTracker"* %3, i64 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ %8, %5 ], [ false, %1 ]
  ret i1 %10
}

; Function Attrs: nounwind
declare void @llvm.assume(i1) #13

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #3

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #3

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #3

declare void @_ZN2v88internal18StackFrameIteratorC1EPNS0_7IsolateE(%"class.v8::internal::StackFrameIterator"*, %"class.v8::internal::Isolate"*) unnamed_addr #3

declare %"class.v8::internal::StackFrame"* @_ZN2v88internal18StackFrameIterator7ReframeEv(%"class.v8::internal::StackFrameIterator"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2v88internal12_GLOBAL__N_126DiscardBaselineCodeVisitorD0Ev(%"class.v8::internal::(anonymous namespace)::DiscardBaselineCodeVisitor"*) unnamed_addr #12 align 2 {
  %2 = bitcast %"class.v8::internal::(anonymous namespace)::DiscardBaselineCodeVisitor"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

declare void @_ZN2v88internal16InterpretedFrame19PatchBytecodeOffsetEi(%"class.v8::internal::InterpretedFrame"*, i32) local_unnamed_addr #3

declare i32 @_ZN2v88internal17InstructionStream13TryLookupCodeEPNS0_7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #3

declare i64 @_ZN2v88internal8Builtins7builtinEi(%"class.v8::internal::Builtins"*, i32) local_unnamed_addr #3

declare void @_ZN2v88internal18StackFrameIteratorC1EPNS0_7IsolateEPNS0_14ThreadLocalTopE(%"class.v8::internal::StackFrameIterator"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadLocalTop"*) unnamed_addr #3

declare i64 @_ZNK2v88internal4Code23OffHeapInstructionStartEv(%"class.v8::internal::Code"*) local_unnamed_addr #3

declare void @_ZN2v88internal23UnoptimizedCompileStateC1EPNS0_7IsolateE(%"class.v8::internal::UnoptimizedCompileState"*, %"class.v8::internal::Isolate"*) unnamed_addr #3

declare { i64, i32 } @_ZN2v88internal23UnoptimizedCompileFlags16ForScriptCompileEPNS0_7IsolateENS0_6ScriptE(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #3

declare void @_ZN2v88internal9ParseInfoC1EPNS0_7IsolateENS0_23UnoptimizedCompileFlagsEPNS0_23UnoptimizedCompileStateE(%"class.v8::internal::ParseInfo"*, %"class.v8::internal::Isolate"*, i64, i32, %"class.v8::internal::UnoptimizedCompileState"*) unnamed_addr #3

declare i64* @_ZN2v88internal8Compiler15CompileToplevelEPNS0_9ParseInfoENS0_6HandleINS0_6ScriptEEEPNS0_7IsolateEPNS0_15IsCompiledScopeE(%"class.v8::internal::ParseInfo"*, i64*, %"class.v8::internal::Isolate"*, %"class.v8::internal::IsCompiledScope"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v88internal9ParseInfoD1Ev(%"class.v8::internal::ParseInfo"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal24SharedFunctionInfoFinder12NewCandidateENS0_18SharedFunctionInfoENS0_10JSFunctionE(%"class.v8::internal::SharedFunctionInfoFinder"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::Script", align 8
  %5 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %6 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %6, align 8
  %7 = and i64 %1, -4294967296
  %8 = add i64 %1, 3
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 acquire, align 4
  %11 = zext i32 %10 to i64
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %25, label %14

14:                                               ; preds = %3
  %15 = or i64 %7, %11
  %16 = add i64 %15, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %7, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = icmp eq i16 %23, 92
  br i1 %24, label %150, label %25

25:                                               ; preds = %14, %3
  %26 = load i64, i64* %6, align 8
  %27 = and i64 %26, -4294967296
  %28 = add i64 %26, 15
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 acquire, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %27, %31
  %33 = add i64 %32, -1
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %27, %36
  %38 = add i64 %37, 7
  %39 = inttoptr i64 %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = icmp eq i16 %40, 100
  br i1 %41, label %42, label %48

42:                                               ; preds = %25
  %43 = add i64 %32, 11
  %44 = inttoptr i64 %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %27, %46
  br label %48

48:                                               ; preds = %42, %25
  %49 = phi i64 [ %47, %42 ], [ %32, %25 ]
  %50 = and i64 %49, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %76, label %52

52:                                               ; preds = %48
  %53 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %54 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %53, null
  br i1 %54, label %61, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %53, i64 0, i32 0, i32 1
  %57 = load i8, i8* %56, align 8, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %53, i64 0, i32 1, i64 0
  br label %69

61:                                               ; preds = %55, %52
  %62 = and i64 %49, -262144
  %63 = or i64 %62, 16
  %64 = inttoptr i64 %63 to i64*
  %65 = load i64, i64* %64, align 16
  %66 = add i64 %65, -41416
  %67 = inttoptr i64 %66 to %"class.v8::internal::Isolate"*
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %67, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %69

69:                                               ; preds = %61, %59
  %70 = phi i64* [ %68, %61 ], [ %60, %59 ]
  %71 = getelementptr inbounds i64, i64* %70, i64 4
  %72 = load i64, i64* %71, align 8
  %73 = trunc i64 %49 to i32
  %74 = trunc i64 %72 to i32
  %75 = icmp eq i32 %73, %74
  br i1 %75, label %150, label %76

76:                                               ; preds = %48, %69
  %77 = bitcast %"class.v8::internal::Script"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #13
  %78 = getelementptr inbounds %"class.v8::internal::Script", %"class.v8::internal::Script"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %49, i64* %78, align 8
  %79 = call zeroext i1 @_ZNK2v88internal6Script16IsUserJavaScriptEv(%"class.v8::internal::Script"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #13
  br i1 %79, label %80, label %150

80:                                               ; preds = %76
  %81 = load i64, i64* %6, align 8
  %82 = add i64 %81, 23
  %83 = inttoptr i64 %82 to i16*
  %84 = load i16, i16* %83, align 2
  %85 = icmp eq i16 %84, -1
  br i1 %85, label %91, label %86

86:                                               ; preds = %80
  %87 = zext i16 %84 to i32
  %88 = call i32 @_ZNK2v88internal18SharedFunctionInfo13StartPositionEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %5) #13
  %89 = sub nsw i32 %88, %87
  %90 = icmp eq i32 %89, -1
  br i1 %90, label %91, label %93

91:                                               ; preds = %80, %86
  %92 = call i32 @_ZNK2v88internal18SharedFunctionInfo13StartPositionEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %5) #13
  br label %93

93:                                               ; preds = %91, %86
  %94 = phi i32 [ %92, %91 ], [ %89, %86 ]
  %95 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfoFinder", %"class.v8::internal::SharedFunctionInfoFinder"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 4
  %97 = icmp sgt i32 %94, %96
  br i1 %97, label %150, label %98

98:                                               ; preds = %93
  %99 = call i32 @_ZNK2v88internal18SharedFunctionInfo11EndPositionEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %5) #13
  %100 = icmp sgt i32 %96, %99
  br i1 %100, label %150, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfoFinder", %"class.v8::internal::SharedFunctionInfoFinder"* %0, i64 0, i32 0
  %103 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfoFinder", %"class.v8::internal::SharedFunctionInfoFinder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load i64, i64* %103, align 8
  %105 = trunc i64 %104 to i32
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %146, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfoFinder", %"class.v8::internal::SharedFunctionInfoFinder"* %0, i64 0, i32 2
  %109 = load i32, i32* %108, align 8
  %110 = icmp eq i32 %109, %94
  br i1 %110, label %111, label %139

111:                                              ; preds = %107
  %112 = call i32 @_ZNK2v88internal18SharedFunctionInfo11EndPositionEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %5) #13
  %113 = call i32 @_ZNK2v88internal18SharedFunctionInfo11EndPositionEv(%"class.v8::internal::SharedFunctionInfo"* %102) #13
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %117, label %115

115:                                              ; preds = %111
  %116 = load i32, i32* %108, align 8
  br label %139

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfoFinder", %"class.v8::internal::SharedFunctionInfoFinder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i64, i64* %118, align 8
  %120 = trunc i64 %119 to i32
  %121 = icmp ne i32 %120, 0
  %122 = trunc i64 %2 to i32
  %123 = icmp eq i32 %122, 0
  %124 = and i1 %123, %121
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = load i64, i64* %103, align 8
  %127 = add i64 %126, 27
  %128 = inttoptr i64 %127 to i32*
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = and i32 %129, 134217728
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %146

132:                                              ; preds = %125
  %133 = load i64, i64* %6, align 8
  %134 = add i64 %133, 27
  %135 = inttoptr i64 %134 to i32*
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 134217728
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %146, label %150

139:                                              ; preds = %115, %107
  %140 = phi i32 [ %116, %115 ], [ %109, %107 ]
  %141 = icmp slt i32 %94, %140
  br i1 %141, label %150, label %142

142:                                              ; preds = %139
  %143 = call i32 @_ZNK2v88internal18SharedFunctionInfo11EndPositionEv(%"class.v8::internal::SharedFunctionInfo"* %102) #13
  %144 = call i32 @_ZNK2v88internal18SharedFunctionInfo11EndPositionEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %5) #13
  %145 = icmp slt i32 %143, %144
  br i1 %145, label %150, label %146

146:                                              ; preds = %132, %125, %142, %101
  %147 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfoFinder", %"class.v8::internal::SharedFunctionInfoFinder"* %0, i64 0, i32 2
  store i32 %94, i32* %147, align 8
  %148 = load i64, i64* %6, align 8
  store i64 %148, i64* %103, align 8
  %149 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfoFinder", %"class.v8::internal::SharedFunctionInfoFinder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %149, align 8
  br label %150

150:                                              ; preds = %132, %117, %69, %14, %146, %93, %98, %142, %139, %76
  ret void
}

declare zeroext i1 @_ZN2v88internal10StackGuard14CheckInterruptENS1_13InterruptFlagE(%"class.v8::internal::StackGuard"*, i32) local_unnamed_addr #3

declare void @_ZN2v88internal10StackGuard14ClearInterruptENS1_13InterruptFlagE(%"class.v8::internal::StackGuard"*, i32) local_unnamed_addr #3

declare i64* @_ZN2v88internal10JSReceiver15GetDataPropertyEPNS0_14LookupIteratorENS0_16AllocationPolicyE(%"class.v8::internal::LookupIterator"*, i32) local_unnamed_addr #3

declare void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #3

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare void @_ZN2v88internal15InterruptsScopeC2EPNS0_7IsolateElNS1_4ModeE(%"class.v8::internal::InterruptsScope"*, %"class.v8::internal::Isolate"*, i64, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal23PostponeInterruptsScopeD0Ev(%"class.v8::internal::PostponeInterruptsScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PostponeInterruptsScope", %"class.v8::internal::PostponeInterruptsScope"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal15InterruptsScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::PostponeInterruptsScope", %"class.v8::internal::PostponeInterruptsScope"* %0, i64 0, i32 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::PostponeInterruptsScope", %"class.v8::internal::PostponeInterruptsScope"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.v8::internal::StackGuard"*, %"class.v8::internal::StackGuard"** %7, align 8
  tail call void @_ZN2v88internal10StackGuard18PopInterruptsScopeEv(%"class.v8::internal::StackGuard"* %8) #13
  br label %9

9:                                                ; preds = %1, %6
  %10 = bitcast %"class.v8::internal::PostponeInterruptsScope"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #17
  ret void
}

declare zeroext i1 @_ZN2v88internal6Script15GetPositionInfoENS0_6HandleIS1_EEiPNS1_12PositionInfoENS1_10OffsetFlagE(i64*, i32, %"struct.v8::internal::Script::PositionInfo"*, i32) local_unnamed_addr #3

declare void @_ZN2v85debug8LocationC1Eii(%"class.v8::debug::Location"*, i32, i32) unnamed_addr #3

declare void @_ZN2v88internal10StackGuard18PopInterruptsScopeEv(%"class.v8::internal::StackGuard"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15InterruptsScopeD2Ev(%"class.v8::internal::InterruptsScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::InterruptsScope", %"class.v8::internal::InterruptsScope"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal15InterruptsScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::InterruptsScope", %"class.v8::internal::InterruptsScope"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::InterruptsScope", %"class.v8::internal::InterruptsScope"* %0, i64 0, i32 1
  %8 = load %"class.v8::internal::StackGuard"*, %"class.v8::internal::StackGuard"** %7, align 8
  tail call void @_ZN2v88internal10StackGuard18PopInterruptsScopeEv(%"class.v8::internal::StackGuard"* %8) #13
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15InterruptsScopeD0Ev(%"class.v8::internal::InterruptsScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::InterruptsScope", %"class.v8::internal::InterruptsScope"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal15InterruptsScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::InterruptsScope", %"class.v8::internal::InterruptsScope"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::InterruptsScope", %"class.v8::internal::InterruptsScope"* %0, i64 0, i32 1
  %8 = load %"class.v8::internal::StackGuard"*, %"class.v8::internal::StackGuard"** %7, align 8
  tail call void @_ZN2v88internal10StackGuard18PopInterruptsScopeEv(%"class.v8::internal::StackGuard"* %8) #13
  br label %9

9:                                                ; preds = %1, %6
  %10 = bitcast %"class.v8::internal::InterruptsScope"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #17
  ret void
}

declare i64 @_ZN2v88internal23GetCurrentStackPositionEv() local_unnamed_addr #3

declare void @_ZN2v88internal10StackGuard16RequestInterruptENS1_13InterruptFlagE(%"class.v8::internal::StackGuard"*, i32) local_unnamed_addr #3

declare void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal5Debug23TemporaryObjectsTracker15AllocationEventEmi(%"class.v8::internal::Debug::TemporaryObjectsTracker"*, i64, i32) unnamed_addr #0 comdat align 2 {
  %4 = alloca i64, align 8
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Debug::TemporaryObjectsTracker", %"class.v8::internal::Debug::TemporaryObjectsTracker"* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::Debug::TemporaryObjectsTracker", %"class.v8::internal::Debug::TemporaryObjectsTracker"* %0, i64 0, i32 3, i32 0
  %10 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE25__emplace_unique_key_argsImJRKmEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeImPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %9, i64* nonnull dereferenceable(8) %4, i64* nonnull dereferenceable(8) %4) #13
  br label %11

11:                                               ; preds = %3, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal5Debug23TemporaryObjectsTracker9MoveEventEmmi(%"class.v8::internal::Debug::TemporaryObjectsTracker"*, i64, i64, i32) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::unique_ptr.1665", align 8
  %6 = alloca %"class.std::__1::unique_ptr.1665", align 8
  %7 = alloca i64, align 8
  store i64 %2, i64* %7, align 8
  %8 = icmp eq i64 %1, %2
  br i1 %8, label %164, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.v8::internal::Debug::TemporaryObjectsTracker", %"class.v8::internal::Debug::TemporaryObjectsTracker"* %0, i64 0, i32 4
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %10) #13
  %11 = getelementptr inbounds %"class.v8::internal::Debug::TemporaryObjectsTracker", %"class.v8::internal::Debug::TemporaryObjectsTracker"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.v8::internal::Debug::TemporaryObjectsTracker", %"class.v8::internal::Debug::TemporaryObjectsTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %163, label %15

15:                                               ; preds = %9
  %16 = tail call i64 @llvm.ctpop.i64(i64 %13) #13, !range !6
  %17 = icmp ugt i64 %16, 1
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = add i64 %13, -1
  %20 = and i64 %19, %1
  br label %25

21:                                               ; preds = %15
  %22 = icmp ugt i64 %13, %1
  br i1 %22, label %25, label %23

23:                                               ; preds = %21
  %24 = urem i64 %1, %13
  br label %25

25:                                               ; preds = %23, %21, %18
  %26 = phi i64 [ %20, %18 ], [ %24, %23 ], [ %1, %21 ]
  %27 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %28, i64 %26
  %30 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base"* %30, null
  br i1 %31, label %79, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %30, i64 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %33, align 8
  %35 = icmp eq %"struct.std::__1::__hash_node_base"* %34, null
  br i1 %35, label %79, label %36

36:                                               ; preds = %32
  %37 = add i64 %13, -1
  br i1 %17, label %38, label %60

38:                                               ; preds = %36, %56
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %58, %56 ], [ %34, %36 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 1
  %41 = bitcast %"struct.std::__1::__hash_node_base"* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, %1
  br i1 %43, label %51, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %42, %13
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = urem i64 %42, %13
  br label %48

48:                                               ; preds = %46, %44
  %49 = phi i64 [ %47, %46 ], [ %42, %44 ]
  %50 = icmp eq i64 %49, %26
  br i1 %50, label %56, label %78

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 2
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %54, %1
  br i1 %55, label %152, label %56

56:                                               ; preds = %51, %48
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %58 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %57, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base"* %58, null
  br i1 %59, label %78, label %38

60:                                               ; preds = %36, %74
  %61 = phi %"struct.std::__1::__hash_node_base"* [ %76, %74 ], [ %34, %36 ]
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %61, i64 1
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, %1
  br i1 %65, label %69, label %66

66:                                               ; preds = %60
  %67 = and i64 %64, %37
  %68 = icmp eq i64 %67, %26
  br i1 %68, label %74, label %78

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %61, i64 2
  %71 = bitcast %"struct.std::__1::__hash_node_base"* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, %1
  br i1 %73, label %152, label %74

74:                                               ; preds = %69, %66
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %61, i64 0, i32 0
  %76 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %75, align 8
  %77 = icmp eq %"struct.std::__1::__hash_node_base"* %76, null
  br i1 %77, label %78, label %60

78:                                               ; preds = %66, %74, %48, %56
  br i1 %14, label %163, label %79

79:                                               ; preds = %32, %25, %78
  %80 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %11, i64 0, i32 0
  %81 = tail call i64 @llvm.ctpop.i64(i64 %13) #13, !range !6
  %82 = icmp ugt i64 %81, 1
  br i1 %82, label %86, label %83

83:                                               ; preds = %79
  %84 = add i64 %13, -1
  %85 = and i64 %84, %2
  br label %90

86:                                               ; preds = %79
  %87 = icmp ugt i64 %13, %2
  br i1 %87, label %90, label %88

88:                                               ; preds = %86
  %89 = urem i64 %2, %13
  br label %90

90:                                               ; preds = %88, %86, %83
  %91 = phi i64 [ %85, %83 ], [ %89, %88 ], [ %2, %86 ]
  %92 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %92, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %93, i64 %91
  %95 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base"* %95, null
  br i1 %96, label %163, label %97

97:                                               ; preds = %90
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %95, i64 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base"* %99, null
  br i1 %100, label %163, label %101

101:                                              ; preds = %97
  %102 = add i64 %13, -1
  br i1 %82, label %103, label %125

103:                                              ; preds = %101, %121
  %104 = phi %"struct.std::__1::__hash_node_base"* [ %123, %121 ], [ %99, %101 ]
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %104, i64 1
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = icmp eq i64 %107, %2
  br i1 %108, label %116, label %109

109:                                              ; preds = %103
  %110 = icmp ult i64 %107, %13
  br i1 %110, label %113, label %111

111:                                              ; preds = %109
  %112 = urem i64 %107, %13
  br label %113

113:                                              ; preds = %111, %109
  %114 = phi i64 [ %112, %111 ], [ %107, %109 ]
  %115 = icmp eq i64 %114, %91
  br i1 %115, label %121, label %163

116:                                              ; preds = %103
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %104, i64 2
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = icmp eq i64 %119, %2
  br i1 %120, label %143, label %121

121:                                              ; preds = %116, %113
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %104, i64 0, i32 0
  %123 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %122, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base"* %123, null
  br i1 %124, label %163, label %103

125:                                              ; preds = %101, %139
  %126 = phi %"struct.std::__1::__hash_node_base"* [ %141, %139 ], [ %99, %101 ]
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 1
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = icmp eq i64 %129, %2
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = and i64 %129, %102
  %133 = icmp eq i64 %132, %91
  br i1 %133, label %139, label %163

134:                                              ; preds = %125
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 2
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = icmp eq i64 %137, %2
  br i1 %138, label %143, label %139

139:                                              ; preds = %134, %131
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  %141 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %140, align 8
  %142 = icmp eq %"struct.std::__1::__hash_node_base"* %141, null
  br i1 %142, label %163, label %125

143:                                              ; preds = %134, %116
  %144 = phi %"struct.std::__1::__hash_node_base"* [ %104, %116 ], [ %126, %134 ]
  %145 = bitcast %"class.std::__1::unique_ptr.1665"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %145) #13
  call void @_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeImPvEEEE(%"class.std::__1::unique_ptr.1665"* nonnull sret %5, %"class.std::__1::__hash_table"* %80, %"struct.std::__1::__hash_node_base"* nonnull %144) #13
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr.1665", %"class.std::__1::unique_ptr.1665"* %5, i64 0, i32 0, i32 0, i32 0
  %147 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %146, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %146, align 8
  %148 = icmp eq %"struct.std::__1::__hash_node"* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %143
  %150 = bitcast %"struct.std::__1::__hash_node"* %147 to i8*
  call void @_ZdlPv(i8* %150) #17
  br label %151

151:                                              ; preds = %149, %143
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %145) #13
  br label %163

152:                                              ; preds = %69, %51
  %153 = phi %"struct.std::__1::__hash_node_base"* [ %39, %51 ], [ %61, %69 ]
  %154 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %11, i64 0, i32 0
  %155 = bitcast %"class.std::__1::unique_ptr.1665"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %155) #13
  call void @_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeImPvEEEE(%"class.std::__1::unique_ptr.1665"* nonnull sret %6, %"class.std::__1::__hash_table"* %154, %"struct.std::__1::__hash_node_base"* nonnull %153) #13
  %156 = getelementptr inbounds %"class.std::__1::unique_ptr.1665", %"class.std::__1::unique_ptr.1665"* %6, i64 0, i32 0, i32 0, i32 0
  %157 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %156, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %156, align 8
  %158 = icmp eq %"struct.std::__1::__hash_node"* %157, null
  br i1 %158, label %161, label %159

159:                                              ; preds = %152
  %160 = bitcast %"struct.std::__1::__hash_node"* %157 to i8*
  call void @_ZdlPv(i8* %160) #17
  br label %161

161:                                              ; preds = %152, %159
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %155) #13
  %162 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE25__emplace_unique_key_argsImJRKmEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeImPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %154, i64* nonnull dereferenceable(8) %7, i64* nonnull dereferenceable(8) %7) #13
  br label %163

163:                                              ; preds = %131, %139, %113, %121, %9, %97, %78, %90, %151, %161
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %10) #13
  br label %164

164:                                              ; preds = %4, %163
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal27HeapObjectAllocationTracker21UpdateObjectSizeEventEmi(%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal5Debug23TemporaryObjectsTrackerD2Ev(%"class.v8::internal::Debug::TemporaryObjectsTracker"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Debug::TemporaryObjectsTracker", %"class.v8::internal::Debug::TemporaryObjectsTracker"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2v88internal5Debug23TemporaryObjectsTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::Debug::TemporaryObjectsTracker", %"class.v8::internal::Debug::TemporaryObjectsTracker"* %0, i64 0, i32 4
  tail call void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"* %3) #13
  %4 = getelementptr inbounds %"class.v8::internal::Debug::TemporaryObjectsTracker", %"class.v8::internal::Debug::TemporaryObjectsTracker"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %4, align 8
  %6 = icmp eq %"struct.std::__1::__hash_node_base"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1, %7
  %8 = phi %"struct.std::__1::__hash_node_base"* [ %10, %7 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %8, i64 0, i32 0
  %10 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %9, align 8
  %11 = bitcast %"struct.std::__1::__hash_node_base"* %8 to i8*
  tail call void @_ZdlPv(i8* %11) #17
  %12 = icmp eq %"struct.std::__1::__hash_node_base"* %10, null
  br i1 %12, label %13, label %7

13:                                               ; preds = %7, %1
  %14 = getelementptr inbounds %"class.v8::internal::Debug::TemporaryObjectsTracker", %"class.v8::internal::Debug::TemporaryObjectsTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %14, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %14, align 8
  %16 = icmp eq %"struct.std::__1::__hash_node_base"** %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = bitcast %"struct.std::__1::__hash_node_base"** %15 to i8*
  tail call void @_ZdlPv(i8* %18) #17
  br label %19

19:                                               ; preds = %13, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal5Debug23TemporaryObjectsTrackerD0Ev(%"class.v8::internal::Debug::TemporaryObjectsTracker"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Debug::TemporaryObjectsTracker", %"class.v8::internal::Debug::TemporaryObjectsTracker"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2v88internal5Debug23TemporaryObjectsTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::Debug::TemporaryObjectsTracker", %"class.v8::internal::Debug::TemporaryObjectsTracker"* %0, i64 0, i32 4
  tail call void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"* %3) #13
  %4 = getelementptr inbounds %"class.v8::internal::Debug::TemporaryObjectsTracker", %"class.v8::internal::Debug::TemporaryObjectsTracker"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %4, align 8
  %6 = icmp eq %"struct.std::__1::__hash_node_base"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1, %7
  %8 = phi %"struct.std::__1::__hash_node_base"* [ %10, %7 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %8, i64 0, i32 0
  %10 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %9, align 8
  %11 = bitcast %"struct.std::__1::__hash_node_base"* %8 to i8*
  tail call void @_ZdlPv(i8* %11) #17
  %12 = icmp eq %"struct.std::__1::__hash_node_base"* %10, null
  br i1 %12, label %13, label %7

13:                                               ; preds = %7, %1
  %14 = getelementptr inbounds %"class.v8::internal::Debug::TemporaryObjectsTracker", %"class.v8::internal::Debug::TemporaryObjectsTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %14, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %14, align 8
  %16 = icmp eq %"struct.std::__1::__hash_node_base"** %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = bitcast %"struct.std::__1::__hash_node_base"** %15 to i8*
  tail call void @_ZdlPv(i8* %18) #17
  br label %19

19:                                               ; preds = %13, %17
  %20 = bitcast %"class.v8::internal::Debug::TemporaryObjectsTracker"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE25__emplace_unique_key_argsImJRKmEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeImPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i64* dereferenceable(8), i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %67, label %8

8:                                                ; preds = %3
  %9 = tail call i64 @llvm.ctpop.i64(i64 %6) #13, !range !6
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = add i64 %6, -1
  %13 = and i64 %12, %4
  br label %18

14:                                               ; preds = %8
  %15 = icmp ult i64 %4, %6
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %4, %6
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %4, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base"* %23, null
  br i1 %24, label %67, label %25

25:                                               ; preds = %18
  %26 = add i64 %6, -1
  br i1 %10, label %27, label %49

27:                                               ; preds = %25, %44
  %28 = phi %"struct.std::__1::__hash_node_base"* [ %30, %44 ], [ %23, %25 ]
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %28, i64 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base"* %30, null
  br i1 %31, label %67, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %30, i64 1
  %34 = bitcast %"struct.std::__1::__hash_node_base"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %4
  br i1 %36, label %44, label %37

37:                                               ; preds = %32
  %38 = icmp ult i64 %35, %6
  br i1 %38, label %41, label %39

39:                                               ; preds = %37
  %40 = urem i64 %35, %6
  br label %41

41:                                               ; preds = %39, %37
  %42 = phi i64 [ %40, %39 ], [ %35, %37 ]
  %43 = icmp eq i64 %42, %19
  br i1 %43, label %44, label %67

44:                                               ; preds = %41, %32
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %30, i64 2
  %46 = bitcast %"struct.std::__1::__hash_node_base"* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, %4
  br i1 %48, label %154, label %27

49:                                               ; preds = %25, %62
  %50 = phi %"struct.std::__1::__hash_node_base"* [ %52, %62 ], [ %23, %25 ]
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %50, i64 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %52, i64 1
  %56 = bitcast %"struct.std::__1::__hash_node_base"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, %4
  %59 = and i64 %57, %26
  %60 = icmp eq i64 %59, %19
  %61 = or i1 %58, %60
  br i1 %61, label %62, label %67

62:                                               ; preds = %54
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %52, i64 2
  %64 = bitcast %"struct.std::__1::__hash_node_base"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %65, %4
  br i1 %66, label %154, label %49

67:                                               ; preds = %54, %49, %41, %27, %18, %3
  %68 = phi i64 [ %19, %18 ], [ undef, %3 ], [ %19, %27 ], [ %19, %41 ], [ %19, %49 ], [ %19, %54 ]
  %69 = tail call i8* @_Znwm(i64 24) #17, !noalias !7
  %70 = getelementptr inbounds i8, i8* %69, i64 16
  %71 = bitcast i8* %70 to i64*
  %72 = load i64, i64* %2, align 8, !noalias !7
  store i64 %72, i64* %71, align 8, !noalias !7
  %73 = getelementptr inbounds i8, i8* %69, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %4, i64* %74, align 8, !noalias !7
  %75 = bitcast i8* %69 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %75, align 8, !noalias !7
  %76 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %6 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %7, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %67
  %87 = shl i64 %6, 1
  %88 = icmp ult i64 %6, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %6) #13, !range !6
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #13
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %98)
  %99 = load i64, i64* %5, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #13, !range !6
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %4
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %4, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %4, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %67
  %110 = phi i64 [ %6, %67 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %68, %67 ], [ %104, %102 ], [ %4, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %69 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i8**
  store i8* %69, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base"* %118, %"struct.std::__1::__hash_node_base"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #13, !range !6
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %69 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %69, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %69 to %"struct.std::__1::__hash_node_base"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %62, %44, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %44 ], [ 0, %62 ]
  %156 = phi %"struct.std::__1::__hash_node_base"* [ %151, %150 ], [ %30, %44 ], [ %52, %62 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !6
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !6
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !6
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #14

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #16
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #17
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !10

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !6
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base"* %103 to i64*
  %105 = load i64, i64* %130, align 8
  %106 = load i64, i64* %104, align 8
  %107 = icmp eq i64 %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base"* %129 to i64*
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base"* %146 to i64*
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base"* %134, %"struct.std::__1::__hash_node_base"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base"* %155 to i64*
  %157 = load i64, i64* %147, align 8
  %158 = load i64, i64* %156, align 8
  %159 = icmp eq i64 %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %132, %"struct.std::__1::__hash_node_base"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %180, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #17
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #15

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #15

declare void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeImPvEEEE(%"class.std::__1::unique_ptr.1665"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #13, !range !6
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.7"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.1665"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1665", %"class.std::__1::unique_ptr.1665"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.10"** %98 to %"class.std::__1::__compressed_pair.7"**
  store %"class.std::__1::__compressed_pair.7"* %30, %"class.std::__1::__compressed_pair.7"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.1665", %"class.std::__1::unique_ptr.1665"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

declare void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"*) unnamed_addr #4

declare i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"*, i64, %"class.v8::internal::MessageLocation"*) local_unnamed_addr #3

declare i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #11

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

declare i64* @_ZN2v88internal13GlobalHandles6CreateENS0_6ObjectE(%"class.v8::internal::GlobalHandles"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvN2v88internal6HandleINS3_9DebugInfoEEEEE11__call_implINS0_20__default_alloc_funcIZNS3_5Debug19ClearAllBreakPointsEvE3$_0S7_EEEEvPKNS0_16__policy_storageEOS6_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.v8::internal::Handle.1211"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %4 = getelementptr %"class.v8::internal::Handle.1211", %"class.v8::internal::Handle.1211"* %1, i64 0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.v8::internal::Debug"**
  %7 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %6, align 8
  tail call void @_ZN2v88internal5Debug16ClearBreakPointsENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* undef, i64* %5) #13
  %8 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #13
  %9 = load i64, i64* %5, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3, i64 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %7, i64 0, i32 16
  %13 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %12, align 8
  call void @_ZN2v88internal9DebugInfo14ClearBreakInfoEPNS0_7IsolateE(%"class.v8::internal::DebugInfo"* nonnull %11, %"class.v8::internal::Isolate"* %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15IsCompiledScopeC2ENS0_18SharedFunctionInfoEPNS0_7IsolateE(%"class.v8::internal::IsCompiledScope"*, i64, %"class.v8::internal::Isolate"*) unnamed_addr #12 comdat align 2 {
  %4 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %5 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %5, align 8
  %6 = and i64 %1, -4294967296
  %7 = add i64 %1, 3
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 acquire, align 4
  %10 = zext i32 %9 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %60, label %13

13:                                               ; preds = %3
  %14 = or i64 %6, %10
  %15 = add i64 %14, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %6, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = icmp eq i16 %22, 133
  br i1 %23, label %40, label %24

24:                                               ; preds = %13
  %25 = load atomic i32, i32* %16 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %6, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = icmp eq i16 %30, 105
  br i1 %31, label %40, label %32

32:                                               ; preds = %24
  %33 = load atomic i32, i32* %16 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %6, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = icmp eq i16 %38, 94
  br i1 %39, label %40, label %60

40:                                               ; preds = %13, %24, %32
  %41 = call i64 @_ZNK2v88internal18SharedFunctionInfo16GetBytecodeArrayINS0_7IsolateEEENS0_13BytecodeArrayEPT_(%"class.v8::internal::SharedFunctionInfo"* nonnull %4, %"class.v8::internal::Isolate"* %2)
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %43 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %42, align 8
  %44 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %40
  %46 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %43, i64 %41) #13
  br label %60

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %51 = load i64*, i64** %50, align 8
  %52 = icmp eq i64* %49, %51
  br i1 %52, label %53, label %55

53:                                               ; preds = %47
  %54 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #13
  br label %55

55:                                               ; preds = %53, %47
  %56 = phi i64* [ %54, %53 ], [ %49, %47 ]
  %57 = ptrtoint i64* %56 to i64
  %58 = add i64 %57, 8
  %59 = inttoptr i64 %58 to i64*
  store i64* %59, i64** %48, align 8
  store i64 %41, i64* %56, align 8
  br label %60

60:                                               ; preds = %32, %3, %55, %45
  %61 = phi i64* [ %46, %45 ], [ %56, %55 ], [ null, %3 ], [ null, %32 ]
  %62 = getelementptr inbounds %"class.v8::internal::IsCompiledScope", %"class.v8::internal::IsCompiledScope"* %0, i64 0, i32 0, i32 0
  store i64* %61, i64** %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::IsCompiledScope", %"class.v8::internal::IsCompiledScope"* %0, i64 0, i32 1
  %64 = load i64, i64* %5, align 8
  %65 = and i64 %64, -4294967296
  %66 = add i64 %64, 3
  %67 = inttoptr i64 %66 to i32*
  %68 = load atomic i32, i32* %67 acquire, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %65, %69
  %71 = icmp eq i32 %68, 170
  br i1 %71, label %87, label %72

72:                                               ; preds = %60
  %73 = and i64 %69, 1
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %87, label %75

75:                                               ; preds = %72
  %76 = add i64 %70, -1
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %65, %79
  %81 = add i64 %80, 7
  %82 = inttoptr i64 %81 to i16*
  %83 = load atomic i16, i16* %82 monotonic, align 2
  %84 = add i16 %83, -157
  %85 = icmp ugt i16 %84, 1
  %86 = zext i1 %85 to i8
  br label %87

87:                                               ; preds = %60, %72, %75
  %88 = phi i8 [ 0, %60 ], [ 1, %72 ], [ %86, %75 ]
  store i8 %88, i8* %63, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvN2v88internal6HandleINS3_9DebugInfoEEEEE11__call_implINS0_20__default_alloc_funcIZNS3_5Debug22RemoveAllCoverageInfosEvE3$_1S7_EEEEvPKNS0_16__policy_storageEOS6_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.v8::internal::Handle.1211"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", align 8
  %4 = getelementptr %"class.v8::internal::Handle.1211", %"class.v8::internal::Handle.1211"* %1, i64 0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.v8::internal::Debug"**
  %8 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %7, align 8
  %9 = getelementptr %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %8, i64 0, i32 16
  %10 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %11 = bitcast %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %6, i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DebugInfo>::ObjectRef"* %3, i64 0, i32 0
  call void @_ZN2v88internal9DebugInfo17ClearCoverageInfoEPNS0_7IsolateE(%"class.v8::internal::DebugInfo"* nonnull %13, %"class.v8::internal::Isolate"* %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  ret void
}

declare void @_ZN2v88internal9DebugInfo17ClearCoverageInfoEPNS0_7IsolateE(%"class.v8::internal::DebugInfo"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvN2v88internal6HandleINS3_9DebugInfoEEEEE11__call_implINS0_20__default_alloc_funcIZNS3_5Debug21ClearAllDebuggerHintsEvE3$_2S7_EEEEvPKNS0_16__policy_storageEOS6_"(%"union.std::__1::__function::__policy_storage"* nocapture readnone, %"class.v8::internal::Handle.1211"* nocapture readonly dereferenceable(8)) #1 align 2 {
  %3 = getelementptr %"class.v8::internal::Handle.1211", %"class.v8::internal::Handle.1211"* %1, i64 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 7
  %7 = inttoptr i64 %6 to i32*
  store atomic volatile i32 0, i32* %7 monotonic, align 4
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #15

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind readnone speculatable }
attributes #16 = { noreturn nounwind }
attributes #17 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!"branch_weights", i32 2000, i32 2, i32 2000}
!6 = !{i64 0, i64 65}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE21__construct_node_hashIRKmJEEENS_10unique_ptrINS_11__hash_nodeImPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE21__construct_node_hashIRKmJEEENS_10unique_ptrINS_11__hash_nodeImPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_"}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
