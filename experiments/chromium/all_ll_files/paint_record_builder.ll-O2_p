; ModuleID = '../../third_party/blink/renderer/platform/graphics/paint/paint_record_builder.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/paint/paint_record_builder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::PaintRecordBuilder" = type { %"class.blink::DisplayItemClient.base", %"class.absl::optional", %"class.blink::PaintController"*, %"class.blink::GraphicsContext" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::PaintController" }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr, %class.scoped_refptr, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.80", i32, i32, i32, [4 x i8], %"class.WTF::HashMap", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.0" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector", i32, [4 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.0" = type { %"class.WTF::VectorBuffer.1" }
%"class.WTF::VectorBuffer.1" = type { %"class.WTF::VectorBufferBase.2" }
%"class.WTF::VectorBufferBase.2" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.50", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"class.blink::Color" = type { i32 }
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.3, %class.scoped_refptr.4, %class.scoped_refptr.5 }
%class.scoped_refptr.3 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.16", i8, i8, %class.scoped_refptr.3, i32, i32 }
%"class.WTF::RefCounted.16" = type { %"class.base::RefCounted.17" }
%"class.base::RefCounted.17" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.4 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.255" }
%"class.blink::PaintPropertyNode.255" = type { %"class.WTF::RefCounted.256", i8, i8, %class.scoped_refptr.4, i32, i32 }
%"class.WTF::RefCounted.256" = type { %"class.base::RefCounted.257" }
%"class.base::RefCounted.257" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.5 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.252" }
%"class.blink::PaintPropertyNode.252" = type { %"class.WTF::RefCounted.253", i8, i8, %class.scoped_refptr.5, i32, i32 }
%"class.WTF::RefCounted.253" = type { %"class.base::RefCounted.254" }
%"class.base::RefCounted.254" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.6", %"class.WTF::Vector.11", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.6" = type { %"class.WTF::VectorBuffer.7" }
%"class.WTF::VectorBuffer.7" = type { %"class.WTF::VectorBufferBase.8" }
%"class.WTF::VectorBufferBase.8" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.11" = type { %"class.WTF::VectorBuffer.12" }
%"class.WTF::VectorBuffer.12" = type { %"class.WTF::VectorBufferBase.13" }
%"class.WTF::VectorBufferBase.13" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.29" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.22, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.23", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.18" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.22 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.237", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.237" = type { %"class.WTF::RefCounted.238", i8, i8, %class.scoped_refptr.22, i32, i32 }
%"class.WTF::RefCounted.238" = type { %"class.base::RefCounted.239" }
%"class.base::RefCounted.239" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.240" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.240" = type { %"class.absl::optional_internal::optional_data.241" }
%"class.absl::optional_internal::optional_data.241" = type { %"class.absl::optional_internal::optional_data_base.242" }
%"class.absl::optional_internal::optional_data_base.242" = type { %"class.absl::optional_internal::optional_data_dtor_base.243" }
%"class.absl::optional_internal::optional_data_dtor_base.243" = type { i8, %union.anon.244 }
%union.anon.244 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.245", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.245" = type { %"class.std::__1::__vector_base.246" }
%"class.std::__1::__vector_base.246" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.247" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.53", %"class.absl::optional.53" }
%"class.absl::optional.53" = type { %"class.absl::optional_internal::optional_data.54" }
%"class.absl::optional_internal::optional_data.54" = type { %"class.absl::optional_internal::optional_data_base.55" }
%"class.absl::optional_internal::optional_data_base.55" = type { %"class.absl::optional_internal::optional_data_dtor_base.56" }
%"class.absl::optional_internal::optional_data_dtor_base.56" = type { i8, [3 x i8], %union.anon.57 }
%union.anon.57 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.0"*, %"class.absl::optional.63", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.63" = type { %"class.absl::optional_internal::optional_data.64" }
%"class.absl::optional_internal::optional_data.64" = type { %"class.absl::optional_internal::optional_data_base.65" }
%"class.absl::optional_internal::optional_data_base.65" = type { %"class.absl::optional_internal::optional_data_dtor_base.66" }
%"class.absl::optional_internal::optional_data_dtor_base.66" = type { i8, %union.anon.67 }
%union.anon.67 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.70", %"class.WTF::Vector.75" }
%"class.WTF::Vector.70" = type { %"class.WTF::VectorBuffer.71" }
%"class.WTF::VectorBuffer.71" = type { %"class.WTF::VectorBufferBase.72", [128 x i8] }
%"class.WTF::VectorBufferBase.72" = type { i32*, i32, i32 }
%"class.WTF::Vector.75" = type { %"class.WTF::VectorBuffer.76" }
%"class.WTF::VectorBuffer.76" = type { %"class.WTF::VectorBufferBase.77", [128 x i8] }
%"class.WTF::VectorBufferBase.77" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.80" = type { %"class.WTF::VectorBuffer.81" }
%"class.WTF::VectorBuffer.81" = type { %"class.WTF::VectorBufferBase.82" }
%"class.WTF::VectorBufferBase.82" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr.87 }
%class.scoped_refptr.87 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.89", %"class.WTF::Vector.94" }
%"class.WTF::HashMap.89" = type { %"class.WTF::HashTable.90" }
%"class.WTF::HashTable.90" = type <{ %"struct.WTF::KeyValuePair.93"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.93" = type opaque
%"class.WTF::Vector.94" = type { %"class.WTF::VectorBuffer.95" }
%"class.WTF::VectorBuffer.95" = type { %"class.WTF::VectorBufferBase.96" }
%"class.WTF::VectorBufferBase.96" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::GraphicsContext" = type { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector.101", i32, %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, %"class.std::__1::unique_ptr.202", i8, i8, i8, i32 }
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.WTF::Vector.101" = type { %"class.WTF::VectorBuffer.102" }
%"class.WTF::VectorBuffer.102" = type { %"class.WTF::VectorBufferBase.103" }
%"class.WTF::VectorBufferBase.103" = type { %"class.std::__1::unique_ptr.104"*, i32, i32 }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::GraphicsContextState"* }
%"class.blink::GraphicsContextState" = type <{ %"class.cc::PaintFlags", %"class.cc::PaintFlags", %"class.blink::StrokeData", i32, i32, i16, i8, [5 x i8] }>
%"class.cc::PaintFlags" = type <{ %class.sk_sp, %class.sk_sp.112, %class.sk_sp.160, %class.sk_sp.161, %class.sk_sp.162, %class.sk_sp.163, i32, float, float, i32, %union.anon.170, [4 x i8] }>
%class.sk_sp = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.107" }>
%"struct.std::__1::atomic.107" = type { %"struct.std::__1::__atomic_base.108" }
%"struct.std::__1::__atomic_base.108" = type { %"struct.std::__1::__atomic_base.109" }
%"struct.std::__1::__atomic_base.109" = type { %"struct.std::__1::__cxx_atomic_impl.110" }
%"struct.std::__1::__cxx_atomic_impl.110" = type { %"struct.std::__1::__cxx_atomic_base_impl.111" }
%"struct.std::__1::__cxx_atomic_base_impl.111" = type { i32 }
%class.sk_sp.112 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.113", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.125, i32, %"class.absl::optional.136", %"class.std::__1::vector.141", %"class.std::__1::vector.148", %class.sk_sp.155, %class.sk_sp.118, i32, [4 x i8] }>
%"class.absl::optional.113" = type { %"class.absl::optional_internal::optional_data.114" }
%"class.absl::optional_internal::optional_data.114" = type { %"class.absl::optional_internal::optional_data_base.115" }
%"class.absl::optional_internal::optional_data_base.115" = type { %"class.absl::optional_internal::optional_data_dtor_base.116" }
%"class.absl::optional_internal::optional_data_dtor_base.116" = type { i8, %union.anon.117 }
%union.anon.117 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.118, %class.sk_sp.125, %"class.gfx::Rect", i32, %class.sk_sp.130, %class.sk_sp.134, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.118, %class.scoped_refptr.135 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.130 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.119, i32, i32 }
%class.sk_sp.119 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.107" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.120" }
%"struct.std::__1::atomic.120" = type { %"struct.std::__1::__atomic_base.121" }
%"struct.std::__1::__atomic_base.121" = type { %"struct.std::__1::__atomic_base.122" }
%"struct.std::__1::__atomic_base.122" = type { %"struct.std::__1::__cxx_atomic_impl.123" }
%"struct.std::__1::__cxx_atomic_impl.123" = type { %"struct.std::__1::__cxx_atomic_base_impl.124" }
%"struct.std::__1::__cxx_atomic_base_impl.124" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.131" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.134 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr.135 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.107" }
%class.sk_sp.125 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.126", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { i8* }
%"class.absl::optional.136" = type { %"class.absl::optional_internal::optional_data.137" }
%"class.absl::optional_internal::optional_data.137" = type { %"class.absl::optional_internal::optional_data_base.138" }
%"class.absl::optional_internal::optional_data_base.138" = type { %"class.absl::optional_internal::optional_data_dtor_base.139" }
%"class.absl::optional_internal::optional_data_dtor_base.139" = type { i8, %union.anon.140 }
%union.anon.140 = type { %"class.gfx::SizeF" }
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { i32*, i32*, %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { i32* }
%"class.std::__1::vector.148" = type { %"class.std::__1::__vector_base.149" }
%"class.std::__1::__vector_base.149" = type { float*, float*, %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { float* }
%class.sk_sp.155 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.156", [7 x i8] }>
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%class.sk_sp.118 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.160 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.161 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.162 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.163 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.164, i32, %"class.absl::optional.165", i8, i32 }
%class.sk_sp.164 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.absl::optional.165" = type { %"class.absl::optional_internal::optional_data.166" }
%"class.absl::optional_internal::optional_data.166" = type { %"class.absl::optional_internal::optional_data_base.167" }
%"class.absl::optional_internal::optional_data_base.167" = type { %"class.absl::optional_internal::optional_data_dtor_base.168" }
%"class.absl::optional_internal::optional_data_dtor_base.168" = type { i8, %union.anon.169 }
%union.anon.169 = type { %struct.SkRect }
%union.anon.170 = type { i32 }
%"class.blink::StrokeData" = type { i32, float, i32, i32, float, %class.sk_sp }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.176, %"class.std::__1::unique_ptr.177" }
%class.scoped_refptr.176 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.180", %struct.SkRect }
%"class.absl::optional.180" = type { %"class.absl::optional_internal::optional_data.181" }
%"class.absl::optional_internal::optional_data.181" = type { %"class.absl::optional_internal::optional_data_base.182" }
%"class.absl::optional_internal::optional_data_base.182" = type { %"class.absl::optional_internal::optional_data_dtor_base.183" }
%"class.absl::optional_internal::optional_data_dtor_base.183" = type { i8, %union.anon.184 }
%union.anon.184 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.185, [384 x i64], %class.sk_sp.186, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.187", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.193" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.185 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.186 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.blink::DarkModeFilter"* }
%"class.blink::DarkModeFilter" = type { %"struct.blink::DarkModeFilter::ImmutableData", %"class.absl::optional.223", %"class.std::__1::unique_ptr.228" }
%"struct.blink::DarkModeFilter::ImmutableData" = type { %"struct.blink::DarkModeSettings", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.217", %class.sk_sp.161 }
%"struct.blink::DarkModeSettings" = type <{ i32, i8, [3 x i8], float, float, i32, i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::DarkModeColorClassifier"* }
%"class.blink::DarkModeColorClassifier" = type opaque
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::DarkModeImageClassifier"* }
%"class.blink::DarkModeImageClassifier" = type opaque
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.blink::DarkModeColorFilter"* }
%"class.blink::DarkModeColorFilter" = type opaque
%"class.absl::optional.223" = type { %"class.absl::optional_internal::optional_data.224" }
%"class.absl::optional_internal::optional_data.224" = type { %"class.absl::optional_internal::optional_data_base.225" }
%"class.absl::optional_internal::optional_data_base.225" = type { %"class.absl::optional_internal::optional_data_dtor_base.226" }
%"class.absl::optional_internal::optional_data_dtor_base.226" = type { i8, %union.anon.227 }
%union.anon.227 = type { i32 }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::DarkModeInvertedColorCache"* }
%"class.blink::DarkModeInvertedColorCache" = type opaque
%"class.blink::PropertyTreeState" = type { %"class.blink::PropertyTreeStateOrAlias" }
%class.sk_sp.258 = type { %"class.cc::PaintOpBuffer"* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic.107", [4 x i8] }>

$_ZNK5blink18PaintRecordBuilder9DebugNameEv = comdat any

$_ZNK5blink17DisplayItemClient11OwnerNodeIdEv = comdat any

$_ZNK5blink17DisplayItemClient32VisualRectOutsetForRasterEffectsEv = comdat any

@_ZTVN5blink18PaintRecordBuilderE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::PaintRecordBuilder"*)* @_ZN5blink18PaintRecordBuilderD2Ev to i8*), i8* bitcast (void (%"class.blink::PaintRecordBuilder"*)* @_ZN5blink18PaintRecordBuilderD0Ev to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::PaintRecordBuilder"*)* @_ZNK5blink18PaintRecordBuilder9DebugNameEv to i8*), i8* bitcast (i32 (%"class.blink::DisplayItemClient"*)* @_ZNK5blink17DisplayItemClient11OwnerNodeIdEv to i8*), i8* bitcast (i8 (%"class.blink::DisplayItemClient"*)* @_ZNK5blink17DisplayItemClient32VisualRectOutsetForRasterEffectsEv to i8*)] }, align 8
@.str = private unnamed_addr constant [19 x i8] c"PaintRecordBuilder\00", align 1

@_ZN5blink18PaintRecordBuilderC1Ev = hidden unnamed_addr alias void (%"class.blink::PaintRecordBuilder"*), void (%"class.blink::PaintRecordBuilder"*)* @_ZN5blink18PaintRecordBuilderC2Ev
@_ZN5blink18PaintRecordBuilderC1ERNS_15GraphicsContextE = hidden unnamed_addr alias void (%"class.blink::PaintRecordBuilder"*, %"class.blink::GraphicsContext"*), void (%"class.blink::PaintRecordBuilder"*, %"class.blink::GraphicsContext"*)* @_ZN5blink18PaintRecordBuilderC2ERNS_15GraphicsContextE
@_ZN5blink18PaintRecordBuilderC1ERNS_15PaintControllerE = hidden unnamed_addr alias void (%"class.blink::PaintRecordBuilder"*, %"class.blink::PaintController"*), void (%"class.blink::PaintRecordBuilder"*, %"class.blink::PaintController"*)* @_ZN5blink18PaintRecordBuilderC2ERNS_15PaintControllerE
@_ZN5blink18PaintRecordBuilderD1Ev = hidden unnamed_addr alias void (%"class.blink::PaintRecordBuilder"*), void (%"class.blink::PaintRecordBuilder"*)* @_ZN5blink18PaintRecordBuilderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18PaintRecordBuilderC2Ev(%"class.blink::PaintRecordBuilder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %0, i64 0, i32 0, i32 1
  store i8 21, i8* %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink18PaintRecordBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %4, align 8
  %5 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5blink15PaintControllerC1ENS0_5UsageE(%"class.blink::PaintController"* %5, i32 1) #6
  %6 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %0, i64 0, i32 2
  %7 = load i8, i8* %4, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #7
  unreachable

10:                                               ; preds = %1
  store %"class.blink::PaintController"* %5, %"class.blink::PaintController"** %6, align 8
  %11 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink15GraphicsContextC1ERNS_15PaintControllerE(%"class.blink::GraphicsContext"* %11, %"class.blink::PaintController"* dereferenceable(584) %5) #6
  %12 = load %"class.blink::PaintController"*, %"class.blink::PaintController"** %6, align 8
  %13 = tail call dereferenceable(24) %"class.blink::PropertyTreeState"* @_ZN5blink17PropertyTreeState4RootEv() #6
  %14 = getelementptr inbounds %"class.blink::PropertyTreeState", %"class.blink::PropertyTreeState"* %13, i64 0, i32 0
  tail call void @_ZN5blink15PaintController33UpdateCurrentPaintChunkPropertiesEPKNS_11DisplayItem2IdERKNS_24PropertyTreeStateOrAliasE(%"class.blink::PaintController"* %12, %"struct.blink::DisplayItem::Id"* null, %"class.blink::PropertyTreeStateOrAlias"* dereferenceable(24) %14) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink15GraphicsContextC1ERNS_15PaintControllerE(%"class.blink::GraphicsContext"*, %"class.blink::PaintController"* dereferenceable(584)) unnamed_addr #2

declare void @_ZN5blink15PaintController33UpdateCurrentPaintChunkPropertiesEPKNS_11DisplayItem2IdERKNS_24PropertyTreeStateOrAliasE(%"class.blink::PaintController"*, %"struct.blink::DisplayItem::Id"*, %"class.blink::PropertyTreeStateOrAlias"* dereferenceable(24)) local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::PropertyTreeState"* @_ZN5blink17PropertyTreeState4RootEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18PaintRecordBuilderC2ERNS_15GraphicsContextE(%"class.blink::PaintRecordBuilder"*, %"class.blink::GraphicsContext"* dereferenceable(112)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %0, i64 0, i32 0, i32 1
  store i8 21, i8* %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink18PaintRecordBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %5, align 8
  %6 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5blink15PaintControllerC1ENS0_5UsageE(%"class.blink::PaintController"* %6, i32 1) #6
  %7 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %0, i64 0, i32 2
  %8 = load i8, i8* %5, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #7
  unreachable

11:                                               ; preds = %2
  store %"class.blink::PaintController"* %6, %"class.blink::PaintController"** %7, align 8
  %12 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink15GraphicsContextC1ERNS_15PaintControllerE(%"class.blink::GraphicsContext"* %12, %"class.blink::PaintController"* dereferenceable(584) %6) #6
  %13 = load %"class.blink::PaintController"*, %"class.blink::PaintController"** %7, align 8
  %14 = tail call dereferenceable(24) %"class.blink::PropertyTreeState"* @_ZN5blink17PropertyTreeState4RootEv() #6
  %15 = getelementptr inbounds %"class.blink::PropertyTreeState", %"class.blink::PropertyTreeState"* %14, i64 0, i32 0
  tail call void @_ZN5blink15PaintController33UpdateCurrentPaintChunkPropertiesEPKNS_11DisplayItem2IdERKNS_24PropertyTreeStateOrAliasE(%"class.blink::PaintController"* %13, %"struct.blink::DisplayItem::Id"* null, %"class.blink::PropertyTreeStateOrAlias"* dereferenceable(24) %15) #6
  tail call void @_ZN5blink15GraphicsContext14CopyConfigFromERS0_(%"class.blink::GraphicsContext"* %12, %"class.blink::GraphicsContext"* dereferenceable(112) %1) #6
  ret void
}

declare void @_ZN5blink15GraphicsContext14CopyConfigFromERS0_(%"class.blink::GraphicsContext"*, %"class.blink::GraphicsContext"* dereferenceable(112)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18PaintRecordBuilderC2ERNS_15PaintControllerE(%"class.blink::PaintRecordBuilder"*, %"class.blink::PaintController"* dereferenceable(584)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %0, i64 0, i32 0, i32 1
  store i8 21, i8* %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink18PaintRecordBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %union.anon* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 584, i1 false) #6
  %8 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %0, i64 0, i32 2
  store %"class.blink::PaintController"* %1, %"class.blink::PaintController"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink15GraphicsContextC1ERNS_15PaintControllerE(%"class.blink::GraphicsContext"* %9, %"class.blink::PaintController"* dereferenceable(584) %1) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18PaintRecordBuilderD2Ev(%"class.blink::PaintRecordBuilder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink18PaintRecordBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink15GraphicsContextD1Ev(%"class.blink::GraphicsContext"* %3) #6
  %4 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5blink15PaintControllerD1Ev(%"class.blink::PaintController"* %8) #6
  store i8 0, i8* %4, align 8
  br label %9

9:                                                ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink15GraphicsContextD1Ev(%"class.blink::GraphicsContext"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18PaintRecordBuilderD0Ev(%"class.blink::PaintRecordBuilder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink18PaintRecordBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink15GraphicsContextD1Ev(%"class.blink::GraphicsContext"* %3) #6
  %4 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5blink15PaintControllerD1Ev(%"class.blink::PaintController"* %8) #6
  br label %9

9:                                                ; preds = %1, %7
  %10 = bitcast %"class.blink::PaintRecordBuilder"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18PaintRecordBuilder12EndRecordingERKNS_17PropertyTreeStateE(%class.sk_sp.125* noalias sret, %"class.blink::PaintRecordBuilder"* nocapture readonly, %"class.blink::PropertyTreeState"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %1, i64 0, i32 2
  %5 = load %"class.blink::PaintController"*, %"class.blink::PaintController"** %4, align 8
  tail call void @_ZN5blink15PaintController21CommitNewDisplayItemsEv(%"class.blink::PaintController"* %5) #6
  %6 = load %"class.blink::PaintController"*, %"class.blink::PaintController"** %4, align 8
  tail call void @_ZN5blink15PaintController11FinishCycleEv(%"class.blink::PaintController"* %6) #6
  %7 = load %"class.blink::PaintController"*, %"class.blink::PaintController"** %4, align 8
  %8 = getelementptr inbounds %"class.blink::PaintController", %"class.blink::PaintController"* %7, i64 0, i32 1, i32 0
  %9 = load %"class.blink::PaintArtifact"*, %"class.blink::PaintArtifact"** %8, align 8
  tail call void @_ZNK5blink13PaintArtifact14GetPaintRecordERKNS_17PropertyTreeStateE(%class.sk_sp.125* sret %0, %"class.blink::PaintArtifact"* %9, %"class.blink::PropertyTreeState"* dereferenceable(24) %2) #6
  ret void
}

declare void @_ZN5blink15PaintController21CommitNewDisplayItemsEv(%"class.blink::PaintController"*) local_unnamed_addr #2

declare void @_ZN5blink15PaintController11FinishCycleEv(%"class.blink::PaintController"*) local_unnamed_addr #2

declare void @_ZNK5blink13PaintArtifact14GetPaintRecordERKNS_17PropertyTreeStateE(%class.sk_sp.125* sret, %"class.blink::PaintArtifact"*, %"class.blink::PropertyTreeState"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18PaintRecordBuilder12EndRecordingERN2cc11PaintCanvasERKNS_17PropertyTreeStateE(%"class.blink::PaintRecordBuilder"* nocapture readonly, %"class.cc::PaintCanvas"* dereferenceable(24), %"class.blink::PropertyTreeState"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.258, align 8
  %5 = alloca %class.sk_sp.125, align 8
  %6 = bitcast %class.sk_sp.125* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %0, i64 0, i32 2
  %8 = load %"class.blink::PaintController"*, %"class.blink::PaintController"** %7, align 8, !noalias !3
  tail call void @_ZN5blink15PaintController21CommitNewDisplayItemsEv(%"class.blink::PaintController"* %8) #6, !noalias !3
  %9 = load %"class.blink::PaintController"*, %"class.blink::PaintController"** %7, align 8, !noalias !3
  tail call void @_ZN5blink15PaintController11FinishCycleEv(%"class.blink::PaintController"* %9) #6, !noalias !3
  %10 = load %"class.blink::PaintController"*, %"class.blink::PaintController"** %7, align 8, !noalias !3
  %11 = getelementptr inbounds %"class.blink::PaintController", %"class.blink::PaintController"* %10, i64 0, i32 1, i32 0
  %12 = load %"class.blink::PaintArtifact"*, %"class.blink::PaintArtifact"** %11, align 8, !noalias !3
  call void @_ZNK5blink13PaintArtifact14GetPaintRecordERKNS_17PropertyTreeStateE(%class.sk_sp.125* nonnull sret %5, %"class.blink::PaintArtifact"* %12, %"class.blink::PropertyTreeState"* dereferenceable(24) %2) #6
  %13 = getelementptr inbounds %class.sk_sp.125, %class.sk_sp.125* %5, i64 0, i32 0
  %14 = bitcast %class.sk_sp.125* %5 to i64*
  %15 = load i64, i64* %14, align 8
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %13, align 8
  %16 = bitcast %class.sk_sp.258* %4 to i64*
  store i64 %15, i64* %16, align 8
  %17 = bitcast %"class.cc::PaintCanvas"* %1 to void (%"class.cc::PaintCanvas"*, %class.sk_sp.258*)***
  %18 = load void (%"class.cc::PaintCanvas"*, %class.sk_sp.258*)**, void (%"class.cc::PaintCanvas"*, %class.sk_sp.258*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %class.sk_sp.258*)*, void (%"class.cc::PaintCanvas"*, %class.sk_sp.258*)** %18, i64 40
  %20 = load void (%"class.cc::PaintCanvas"*, %class.sk_sp.258*)*, void (%"class.cc::PaintCanvas"*, %class.sk_sp.258*)** %19, align 8
  call void %20(%"class.cc::PaintCanvas"* %1, %class.sk_sp.258* nonnull %4) #6
  %21 = getelementptr inbounds %class.sk_sp.258, %class.sk_sp.258* %4, i64 0, i32 0
  %22 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %21, align 8
  %23 = icmp eq %"class.cc::PaintOpBuffer"* %22, null
  br i1 %23, label %34, label %24

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %22, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 -1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %34

28:                                               ; preds = %24
  %29 = bitcast %"class.cc::PaintOpBuffer"* %22 to %class.SkRefCntBase*
  %30 = bitcast %"class.cc::PaintOpBuffer"* %22 to void (%class.SkRefCntBase*)***
  %31 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %30, align 8
  %32 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, i64 2
  %33 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, align 8
  call void %33(%class.SkRefCntBase* nonnull %29) #6
  br label %34

34:                                               ; preds = %3, %24, %28
  %35 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %13, align 8
  %36 = icmp eq %"class.cc::PaintOpBuffer"* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %35, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %47

41:                                               ; preds = %37
  %42 = bitcast %"class.cc::PaintOpBuffer"* %35 to %class.SkRefCntBase*
  %43 = bitcast %"class.cc::PaintOpBuffer"* %35 to void (%class.SkRefCntBase*)***
  %44 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %43, align 8
  %45 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %44, i64 2
  %46 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, align 8
  call void %46(%class.SkRefCntBase* nonnull %42) #6
  br label %47

47:                                               ; preds = %34, %37, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink18PaintRecordBuilder9DebugNameEv(%"class.blink::PaintRecordBuilder"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i64 18) #6
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink17DisplayItemClient11OwnerNodeIdEv(%"class.blink::DisplayItemClient"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink17DisplayItemClient32VisualRectOutsetForRasterEffectsEv(%"class.blink::DisplayItemClient"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

declare void @_ZN5blink15PaintControllerC1ENS0_5UsageE(%"class.blink::PaintController"*, i32) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN5blink15PaintControllerD1Ev(%"class.blink::PaintController"*) unnamed_addr #3

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink18PaintRecordBuilder12EndRecordingERKNS_17PropertyTreeStateE: argument 0"}
!5 = distinct !{!5, !"_ZN5blink18PaintRecordBuilder12EndRecordingERKNS_17PropertyTreeStateE"}
