; ModuleID = 'gen/components/services/storage/public/mojom/partition.mojom-test-utils.cc'
source_filename = "gen/components/services/storage/public/mojom/partition.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.storage::mojom::PartitionAsyncWaiter" = type { %"class.storage::mojom::Partition"* }
%"class.storage::mojom::Partition" = type { i32 (...)** }
%"class.storage::mojom::PartitionInterceptorForTesting" = type { %"class.storage::mojom::Partition" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.5, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.7", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.3 }
%class.scoped_refptr.3 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.4", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.5 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.6" }>
%"class.base::RefCountedThreadSafe.6" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { i32 }
%"class.mojo::PendingReceiver.12" = type { %"struct.mojo::internal::PendingReceiverState" }
%"class.mojo::PendingReceiver.13" = type { %"struct.mojo::internal::PendingReceiverState" }
%"class.mojo::PendingReceiver.14" = type { %"struct.mojo::internal::PendingReceiverState" }

$_ZN7storage5mojom9PartitionD2Ev = comdat any

$_ZN7storage5mojom30PartitionInterceptorForTestingD0Ev = comdat any

@_ZTVN7storage5mojom30PartitionInterceptorForTestingE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.storage::mojom::Partition"*)* @_ZN7storage5mojom9PartitionD2Ev to i8*), i8* bitcast (void (%"class.storage::mojom::PartitionInterceptorForTesting"*)* @_ZN7storage5mojom30PartitionInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.storage::mojom::PartitionInterceptorForTesting"*, %"class.url::Origin"*, %"class.mojo::PendingReceiver"*)* @_ZN7storage5mojom30PartitionInterceptorForTesting17BindOriginContextERKN3url6OriginEN4mojo15PendingReceiverINS0_13OriginContextEEE to i8*), i8* bitcast (void (%"class.storage::mojom::PartitionInterceptorForTesting"*, %"class.mojo::PendingReceiver.12"*)* @_ZN7storage5mojom30PartitionInterceptorForTesting25BindSessionStorageControlEN4mojo15PendingReceiverINS0_21SessionStorageControlEEE to i8*), i8* bitcast (void (%"class.storage::mojom::PartitionInterceptorForTesting"*, %"class.mojo::PendingReceiver.13"*)* @_ZN7storage5mojom30PartitionInterceptorForTesting23BindLocalStorageControlEN4mojo15PendingReceiverINS0_19LocalStorageControlEEE to i8*), i8* bitcast (void (%"class.storage::mojom::PartitionInterceptorForTesting"*, %"class.mojo::PendingReceiver.14"*)* @_ZN7storage5mojom30PartitionInterceptorForTesting31BindServiceWorkerStorageControlEN4mojo15PendingReceiverINS0_27ServiceWorkerStorageControlEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN7storage5mojom20PartitionAsyncWaiterC1EPNS0_9PartitionE = hidden unnamed_addr alias void (%"class.storage::mojom::PartitionAsyncWaiter"*, %"class.storage::mojom::Partition"*), void (%"class.storage::mojom::PartitionAsyncWaiter"*, %"class.storage::mojom::Partition"*)* @_ZN7storage5mojom20PartitionAsyncWaiterC2EPNS0_9PartitionE
@_ZN7storage5mojom20PartitionAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.storage::mojom::PartitionAsyncWaiter"*), void (%"class.storage::mojom::PartitionAsyncWaiter"*)* @_ZN7storage5mojom20PartitionAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7storage5mojom30PartitionInterceptorForTesting17BindOriginContextERKN3url6OriginEN4mojo15PendingReceiverINS0_13OriginContextEEE(%"class.storage::mojom::PartitionInterceptorForTesting"*, %"class.url::Origin"* dereferenceable(80), %"class.mojo::PendingReceiver"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::PendingReceiver", align 8
  %5 = bitcast %"class.storage::mojom::PartitionInterceptorForTesting"* %0 to %"class.storage::mojom::Partition"* (%"class.storage::mojom::PartitionInterceptorForTesting"*)***
  %6 = load %"class.storage::mojom::Partition"* (%"class.storage::mojom::PartitionInterceptorForTesting"*)**, %"class.storage::mojom::Partition"* (%"class.storage::mojom::PartitionInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.storage::mojom::Partition"* (%"class.storage::mojom::PartitionInterceptorForTesting"*)*, %"class.storage::mojom::Partition"* (%"class.storage::mojom::PartitionInterceptorForTesting"*)** %6, i64 6
  %8 = load %"class.storage::mojom::Partition"* (%"class.storage::mojom::PartitionInterceptorForTesting"*)*, %"class.storage::mojom::Partition"* (%"class.storage::mojom::PartitionInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.storage::mojom::Partition"* %8(%"class.storage::mojom::PartitionInterceptorForTesting"* %0) #6
  %10 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %4, i64 0, i32 0
  %11 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %2, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %10, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %11) #6
  %12 = bitcast %"class.storage::mojom::Partition"* %9 to void (%"class.storage::mojom::Partition"*, %"class.url::Origin"*, %"class.mojo::PendingReceiver"*)***
  %13 = load void (%"class.storage::mojom::Partition"*, %"class.url::Origin"*, %"class.mojo::PendingReceiver"*)**, void (%"class.storage::mojom::Partition"*, %"class.url::Origin"*, %"class.mojo::PendingReceiver"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.storage::mojom::Partition"*, %"class.url::Origin"*, %"class.mojo::PendingReceiver"*)*, void (%"class.storage::mojom::Partition"*, %"class.url::Origin"*, %"class.mojo::PendingReceiver"*)** %13, i64 2
  %15 = load void (%"class.storage::mojom::Partition"*, %"class.url::Origin"*, %"class.mojo::PendingReceiver"*)*, void (%"class.storage::mojom::Partition"*, %"class.url::Origin"*, %"class.mojo::PendingReceiver"*)** %14, align 8
  call void %15(%"class.storage::mojom::Partition"* %9, %"class.url::Origin"* dereferenceable(80) %1, %"class.mojo::PendingReceiver"* nonnull %4) #6
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %10) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7storage5mojom30PartitionInterceptorForTesting25BindSessionStorageControlEN4mojo15PendingReceiverINS0_21SessionStorageControlEEE(%"class.storage::mojom::PartitionInterceptorForTesting"*, %"class.mojo::PendingReceiver.12"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::PendingReceiver.12", align 8
  %4 = bitcast %"class.storage::mojom::PartitionInterceptorForTesting"* %0 to %"class.storage::mojom::Partition"* (%"class.storage::mojom::PartitionInterceptorForTesting"*)***
  %5 = load %"class.storage::mojom::Partition"* (%"class.storage::mojom::PartitionInterceptorForTesting"*)**, %"class.storage::mojom::Partition"* (%"class.storage::mojom::PartitionInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.storage::mojom::Partition"* (%"class.storage::mojom::PartitionInterceptorForTesting"*)*, %"class.storage::mojom::Partition"* (%"class.storage::mojom::PartitionInterceptorForTesting"*)** %5, i64 6
  %7 = load %"class.storage::mojom::Partition"* (%"class.storage::mojom::PartitionInterceptorForTesting"*)*, %"class.storage::mojom::Partition"* (%"class.storage::mojom::PartitionInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.storage::mojom::Partition"* %7(%"class.storage::mojom::PartitionInterceptorForTesting"* %0) #6
  %9 = getelementptr inbounds %"class.mojo::PendingReceiver.12", %"class.mojo::PendingReceiver.12"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"class.mojo::PendingReceiver.12", %"class.mojo::PendingReceiver.12"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %9, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %10) #6
  %11 = bitcast %"class.storage::mojom::Partition"* %8 to void (%"class.storage::mojom::Partition"*, %"class.mojo::PendingReceiver.12"*)***
  %12 = load void (%"class.storage::mojom::Partition"*, %"class.mojo::PendingReceiver.12"*)**, void (%"class.storage::mojom::Partition"*, %"class.mojo::PendingReceiver.12"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.storage::mojom::Partition"*, %"class.mojo::PendingReceiver.12"*)*, void (%"class.storage::mojom::Partition"*, %"class.mojo::PendingReceiver.12"*)** %12, i64 3
  %14 = load void (%"class.storage::mojom::Partition"*, %"class.mojo::PendingReceiver.12"*)*, void (%"class.storage::mojom::Partition"*, %"class.mojo::PendingReceiver.12"*)** %13, align 8
  call void %14(%"class.storage::mojom::Partition"* %8, %"class.mojo::PendingReceiver.12"* nonnull %3) #6
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %9) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7storage5mojom30PartitionInterceptorForTesting23BindLocalStorageControlEN4mojo15PendingReceiverINS0_19LocalStorageControlEEE(%"class.storage::mojom::PartitionInterceptorForTesting"*, %"class.mojo::PendingReceiver.13"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::PendingReceiver.13", align 8
  %4 = bitcast %"class.storage::mojom::PartitionInterceptorForTesting"* %0 to %"class.storage::mojom::Partition"* (%"class.storage::mojom::PartitionInterceptorForTesting"*)***
  %5 = load %"class.storage::mojom::Partition"* (%"class.storage::mojom::PartitionInterceptorForTesting"*)**, %"class.storage::mojom::Partition"* (%"class.storage::mojom::PartitionInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.storage::mojom::Partition"* (%"class.storage::mojom::PartitionInterceptorForTesting"*)*, %"class.storage::mojom::Partition"* (%"class.storage::mojom::PartitionInterceptorForTesting"*)** %5, i64 6
  %7 = load %"class.storage::mojom::Partition"* (%"class.storage::mojom::PartitionInterceptorForTesting"*)*, %"class.storage::mojom::Partition"* (%"class.storage::mojom::PartitionInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.storage::mojom::Partition"* %7(%"class.storage::mojom::PartitionInterceptorForTesting"* %0) #6
  %9 = getelementptr inbounds %"class.mojo::PendingReceiver.13", %"class.mojo::PendingReceiver.13"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"class.mojo::PendingReceiver.13", %"class.mojo::PendingReceiver.13"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %9, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %10) #6
  %11 = bitcast %"class.storage::mojom::Partition"* %8 to void (%"class.storage::mojom::Partition"*, %"class.mojo::PendingReceiver.13"*)***
  %12 = load void (%"class.storage::mojom::Partition"*, %"class.mojo::PendingReceiver.13"*)**, void (%"class.storage::mojom::Partition"*, %"class.mojo::PendingReceiver.13"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.storage::mojom::Partition"*, %"class.mojo::PendingReceiver.13"*)*, void (%"class.storage::mojom::Partition"*, %"class.mojo::PendingReceiver.13"*)** %12, i64 4
  %14 = load void (%"class.storage::mojom::Partition"*, %"class.mojo::PendingReceiver.13"*)*, void (%"class.storage::mojom::Partition"*, %"class.mojo::PendingReceiver.13"*)** %13, align 8
  call void %14(%"class.storage::mojom::Partition"* %8, %"class.mojo::PendingReceiver.13"* nonnull %3) #6
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %9) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7storage5mojom30PartitionInterceptorForTesting31BindServiceWorkerStorageControlEN4mojo15PendingReceiverINS0_27ServiceWorkerStorageControlEEE(%"class.storage::mojom::PartitionInterceptorForTesting"*, %"class.mojo::PendingReceiver.14"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::PendingReceiver.14", align 8
  %4 = bitcast %"class.storage::mojom::PartitionInterceptorForTesting"* %0 to %"class.storage::mojom::Partition"* (%"class.storage::mojom::PartitionInterceptorForTesting"*)***
  %5 = load %"class.storage::mojom::Partition"* (%"class.storage::mojom::PartitionInterceptorForTesting"*)**, %"class.storage::mojom::Partition"* (%"class.storage::mojom::PartitionInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.storage::mojom::Partition"* (%"class.storage::mojom::PartitionInterceptorForTesting"*)*, %"class.storage::mojom::Partition"* (%"class.storage::mojom::PartitionInterceptorForTesting"*)** %5, i64 6
  %7 = load %"class.storage::mojom::Partition"* (%"class.storage::mojom::PartitionInterceptorForTesting"*)*, %"class.storage::mojom::Partition"* (%"class.storage::mojom::PartitionInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.storage::mojom::Partition"* %7(%"class.storage::mojom::PartitionInterceptorForTesting"* %0) #6
  %9 = getelementptr inbounds %"class.mojo::PendingReceiver.14", %"class.mojo::PendingReceiver.14"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"class.mojo::PendingReceiver.14", %"class.mojo::PendingReceiver.14"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %9, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %10) #6
  %11 = bitcast %"class.storage::mojom::Partition"* %8 to void (%"class.storage::mojom::Partition"*, %"class.mojo::PendingReceiver.14"*)***
  %12 = load void (%"class.storage::mojom::Partition"*, %"class.mojo::PendingReceiver.14"*)**, void (%"class.storage::mojom::Partition"*, %"class.mojo::PendingReceiver.14"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.storage::mojom::Partition"*, %"class.mojo::PendingReceiver.14"*)*, void (%"class.storage::mojom::Partition"*, %"class.mojo::PendingReceiver.14"*)** %12, i64 5
  %14 = load void (%"class.storage::mojom::Partition"*, %"class.mojo::PendingReceiver.14"*)*, void (%"class.storage::mojom::Partition"*, %"class.mojo::PendingReceiver.14"*)** %13, align 8
  call void %14(%"class.storage::mojom::Partition"* %8, %"class.mojo::PendingReceiver.14"* nonnull %3) #6
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %9) #6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7storage5mojom20PartitionAsyncWaiterC2EPNS0_9PartitionE(%"class.storage::mojom::PartitionAsyncWaiter"* nocapture, %"class.storage::mojom::Partition"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.storage::mojom::PartitionAsyncWaiter", %"class.storage::mojom::PartitionAsyncWaiter"* %0, i64 0, i32 0
  store %"class.storage::mojom::Partition"* %1, %"class.storage::mojom::Partition"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7storage5mojom20PartitionAsyncWaiterD2Ev(%"class.storage::mojom::PartitionAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7storage5mojom9PartitionD2Ev(%"class.storage::mojom::Partition"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7storage5mojom30PartitionInterceptorForTestingD0Ev(%"class.storage::mojom::PartitionInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"*, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
