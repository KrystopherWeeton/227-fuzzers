; ModuleID = '../../third_party/angle/src/libANGLE/Context_gles_1_0.cpp'
source_filename = "../../third_party/angle/src/libANGLE/Context_gles_1_0.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gl::Context" = type <{ %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::State", i8, i8, i8, i8, [4 x i8], %"class.gl::ErrorSet", %"class.angle::BitSetT.537", [4 x i8], %"class.std::__1::unique_ptr.538", i8*, %"struct.gl::Extensions", [4 x i8], %"class.gl::BindingPointer", %"struct.egl::Config"*, %"class.angle::PackedEnumMap.544", %"class.gl::ResourceMap.546", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.556", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.566", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.576", %"class.gl::HandleAllocator", i8*, i8*, i8*, i8*, %"class.std::__1::vector.586", i8*, %"class.std::__1::vector.586", %"class.std::__1::unique_ptr.593", i8, i8, i8, i8, i32, i8, i8, i8, [5 x i8], %"class.egl::Surface"*, %"class.egl::Surface"*, %"class.egl::Display"*, i8, i8, i8, [5 x i8], %"class.gl::MemoryProgramCache"*, %"class.angle::BitSetT.536", %"class.gl::StateCache", %"class.angle::BitSetT.168", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %struct.Optional.607, %struct.Optional.607, %"class.std::__1::shared_ptr.608", %"class.std::__1::unique_ptr.609", %"class.std::__1::basic_string", i64, %"class.gl::MockOverlay", i8, i8, i8, [4 x i8] }>
%"class.egl::LabeledObject" = type { i32 (...)** }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"class.gl::State" = type <{ %"struct.gl::ContextID", i32, i32, %"struct.gl::Version", [4 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"class.egl::ShareGroup"*, %"class.gl::BufferManager"*, %"class.gl::ShaderProgramManager"*, %"class.gl::TextureManager"*, %"class.gl::RenderbufferManager"*, %"class.gl::SamplerManager"*, %"class.gl::SyncManager"*, %"class.gl::FramebufferManager"*, %"class.gl::ProgramPipelineManager"*, %"class.gl::MemoryObjectManager"*, %"class.gl::SemaphoreManager"*, i32, i32, %"struct.angle::Color", float, i32, %"struct.gl::RasterizerState", i8, [3 x i8], %"struct.gl::Rectangle", %"struct.gl::BlendState", [4 x i8], %"class.gl::BlendStateExt", %"struct.angle::Color", i8, i8, [2 x i8], float, i8, i8, [2 x i8], i32, %"struct.std::__1::array.373", i8, [3 x i8], float, %"struct.gl::DepthStencilState", i32, i32, float, i32, i32, i32, i8, i8, [2 x i8], %"struct.gl::Rectangle", float, float, i32, i32, %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"*, %"class.gl::BindingPointer.374", %"class.gl::Program"*, %"class.gl::BindingPointer.376", %"class.gl::ProgramExecutable"*, i8, [7 x i8], %"class.std::__1::vector.378", %"class.gl::VertexArray"*, %"class.angle::BitSetT.148", i64, %"class.angle::PackedEnumMap.406", %"class.gl::ActiveTexturesCache", %"class.std::__1::vector.337", %"class.angle::BitSetArray", %"class.std::__1::vector.418", %"class.std::__1::vector.427", %"class.angle::PackedEnumMap.434", %"class.angle::PackedEnumMap.438", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.angle::BitSetArray.447", %"class.angle::BitSetT.448", %"class.angle::BitSetT.168", %"class.gl::BindingPointer.449", %"struct.gl::PixelUnpackState", %"struct.gl::PixelPackState", i8, [3 x i8], %"class.gl::Debug", i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, %"class.angle::BitSetT.476", i32, %"class.gl::GLES1State", %"class.angle::BitSetT.168", %"class.angle::BitSetT.535", [4 x i8], %"class.angle::BitSetT.536", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.gl::MockOverlay"*, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i8, [5 x i8] }>
%"struct.gl::ContextID" = type { i32 }
%"struct.gl::Version" = type { i32, i32 }
%"struct.gl::Caps" = type <{ float, float, i32, [4 x i8], i64, i32, i32, i32, i32, float, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap.30", i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i32* }
%"struct.gl::TypePrecision" = type { %"struct.std::__1::array.28", i32 }
%"struct.std::__1::array.28" = type { [2 x i32] }
%"class.angle::PackedEnumMap" = type { %"struct.std::__1::array.29" }
%"struct.std::__1::array.29" = type { [6 x i32] }
%"class.angle::PackedEnumMap.30" = type { %"struct.std::__1::array.31" }
%"struct.std::__1::array.31" = type { [6 x i64] }
%"struct.std::__1::array.32" = type { [3 x i32] }
%"class.gl::TextureCapsMap" = type { %"class.angle::PackedEnumMap.33" }
%"class.angle::PackedEnumMap.33" = type { %"struct.std::__1::array.34" }
%"struct.std::__1::array.34" = type { [227 x %"struct.gl::TextureCaps"] }
%"struct.gl::TextureCaps" = type { i8, i8, i8, i8, i8, %"class.std::__1::set.35" }
%"class.std::__1::set.35" = type { %"class.std::__1::__tree.36" }
%"class.std::__1::__tree.36" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.egl::ShareGroup" = type opaque
%"class.gl::BufferManager" = type { %"class.gl::TypedResourceManager" }
%"class.gl::TypedResourceManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap" }
%"class.gl::ResourceManagerBase" = type { i32 (...)**, %"class.gl::HandleAllocator", i64 }
%"class.gl::ResourceMap" = type { i64, %"class.gl::Buffer"**, %"class.absl::flat_hash_map" }
%"class.gl::Buffer" = type { %"class.gl::RefCountObject.base.53", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.angle::Subject", %"class.gl::BufferState", %"class.rx::BufferImpl"*, %"class.angle::ObserverBinding", %"class.gl::IndexRangeCache" }
%"class.gl::RefCountObject.base.53" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::BufferID" }>
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"class.rx::Serial" = type { i64 }
%"struct.gl::BufferID" = type { i32 }
%"class.gl::LabeledObject" = type { i32 (...)** }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.gl::BufferState" = type <{ %"class.std::__1::basic_string", i8, [7 x i8], i64, i32, i32, i8, [7 x i8], i8*, i64, i64, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.rx::BufferImpl" = type opaque
%"class.gl::IndexRangeCache" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.54" }
%"class.std::__1::__tree.54" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %"class.gl::Buffer"* }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.gl::ShaderProgramManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.122" }
%"class.gl::ResourceMap.69" = type { i64, %"class.gl::Shader"**, %"class.absl::flat_hash_map.113" }
%"class.gl::Shader" = type { %"class.gl::LabeledObject", %"class.gl::ShaderState", %"class.std::__1::unique_ptr.85", %"struct.gl::Limitations", %"struct.gl::ShaderProgramID", i8, i32, i8, %"class.std::__1::basic_string", %"class.gl::BindingPointer", %"class.std::__1::unique_ptr.107", %"class.std::__1::basic_string", %"class.gl::ShaderProgramManager"*, i32, i32 }
%"class.gl::ShaderState" = type <{ %"class.std::__1::basic_string", i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", [4 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.77", %"class.std::__1::vector.77", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", i8, [3 x i8], %"class.angle::BitSetT", i32, %struct.Optional, %struct.Optional, %struct.Optional.84, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.79" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.70" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.sh::InterfaceBlock"* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.72" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", i8, i8, %"class.std::__1::vector.70", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.sh::ShaderVariable"* }
%"class.angle::BitSetT" = type { i32 }
%struct.Optional = type { i8, i8 }
%struct.Optional.84 = type { i8, i32 }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.rx::ShaderImpl"* }
%"class.rx::ShaderImpl" = type opaque
%"struct.gl::ShaderProgramID" = type { i32 }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.gl::Shader::CompilingState"* }
%"struct.gl::Shader::CompilingState" = type opaque
%"class.absl::flat_hash_map.113" = type { %"class.absl::container_internal::raw_hash_map.114" }
%"class.absl::container_internal::raw_hash_map.114" = type { %"class.absl::container_internal::raw_hash_set.115" }
%"class.absl::container_internal::raw_hash_set.115" = type { i8*, %"union.absl::container_internal::map_slot_type.116"*, i64, i64, %"class.absl::container_internal::CompressedTuple.117" }
%"union.absl::container_internal::map_slot_type.116" = type opaque
%"class.absl::container_internal::CompressedTuple.117" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.122" = type { i64, %"class.gl::Program"**, %"class.absl::flat_hash_map.241" }
%"class.absl::flat_hash_map.241" = type { %"class.absl::container_internal::raw_hash_map.242" }
%"class.absl::container_internal::raw_hash_map.242" = type { %"class.absl::container_internal::raw_hash_set.243" }
%"class.absl::container_internal::raw_hash_set.243" = type { i8*, %"union.absl::container_internal::map_slot_type.244"*, i64, i64, %"class.absl::container_internal::CompressedTuple.245" }
%"union.absl::container_internal::map_slot_type.244" = type { %"struct.std::__1::pair.626" }
%"struct.std::__1::pair.626" = type { i32, %"class.gl::Program"* }
%"class.absl::container_internal::CompressedTuple.245" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::TextureManager" = type { %"class.gl::TypedResourceManager.250" }
%"class.gl::TypedResourceManager.250" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.251" }
%"class.gl::ResourceMap.251" = type { i64, %"class.gl::Texture"**, %"class.absl::flat_hash_map.270" }
%"class.gl::Texture" = type <{ %"class.gl::RefCountObject.base.253", [4 x i8], %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::TextureState", %"class.angle::BitSetT.266", %"class.rx::TextureImpl"*, %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::basic_string", %"class.egl::Surface"*, %"class.egl::Stream"*, %"class.angle::FastVector.268", %"struct.gl::Texture::SamplerCompletenessCache", [4 x i8] }>
%"class.gl::RefCountObject.base.253" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TextureID" }>
%"struct.gl::TextureID" = type { i32 }
%"class.egl::ImageSibling" = type { %"class.gl::FramebufferAttachmentObject", %"class.std::__1::set", %"class.angle::BindingPointer" }
%"class.gl::FramebufferAttachmentObject" = type { %"class.angle::Subject", %"class.angle::ObserverInterface" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::BindingPointer" = type { i32 (...)**, %"class.egl::Image"* }
%"class.egl::Image" = type <{ %"class.angle::RefCountObject.4", %"class.egl::LabeledObject", %"struct.egl::ImageState", %"class.rx::ImageImpl"*, i8, [7 x i8] }>
%"class.angle::RefCountObject.4" = type { i32 (...)**, i64 }
%"struct.egl::ImageState" = type { i8*, i32, %"class.gl::ImageIndex", %"class.egl::ImageSibling"*, %"class.std::__1::set.5", %"struct.gl::Format", i8, %"struct.gl::Extents", i64, i32, i32 }
%"class.gl::ImageIndex" = type { i8, i32, i32, i32 }
%"class.std::__1::set.5" = type { %"class.std::__1::__tree.6" }
%"class.std::__1::__tree.6" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Format" = type { %"struct.gl::InternalFormat"* }
%"struct.gl::InternalFormat" = type { i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)* }
%"struct.gl::Extents" = type { i32, i32, i32 }
%"class.rx::ImageImpl" = type opaque
%"class.gl::TextureState" = type <{ i8, [3 x i8], %"struct.gl::SwizzleState", %"class.gl::SamplerState", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.std::__1::vector.257", %"struct.gl::Rectangle", i32, [4 x i8], %"class.gl::OffsetBindingPointer", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"struct.gl::SwizzleState" = type { i32, i32, i32, i32 }
%"class.gl::SamplerState" = type { i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, %"struct.angle::ColorGeneric", %"union.gl::SamplerState::Completeness" }
%"struct.angle::ColorGeneric" = type <{ %union.anon.254, i8, [3 x i8] }>
%union.anon.254 = type { %"struct.angle::Color" }
%"union.gl::SamplerState::Completeness" = type { i32 }
%"class.std::__1::vector.257" = type { %"class.std::__1::__vector_base.258" }
%"class.std::__1::__vector_base.258" = type { %"struct.gl::ImageDesc"*, %"struct.gl::ImageDesc"*, %"class.std::__1::__compressed_pair.259" }
%"struct.gl::ImageDesc" = type <{ %"struct.gl::Extents", [4 x i8], %"struct.gl::Format", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.gl::ImageDesc"* }
%"class.gl::OffsetBindingPointer" = type { %"class.gl::BindingPointer.264", i64, i64 }
%"class.gl::BindingPointer.264" = type { %"class.angle::BindingPointer.265" }
%"class.angle::BindingPointer.265" = type { i32 (...)**, %"class.gl::Buffer"* }
%"class.angle::BitSetT.266" = type { i64 }
%"class.rx::TextureImpl" = type opaque
%"class.egl::Stream" = type { %"class.egl::LabeledObject", i8*, %"class.egl::Display"*, %"class.rx::StreamProducerImpl"*, %"class.gl::Context"*, i32, i64, i64, i32, i32, i32, %"struct.std::__1::array.267", i32, i32 }
%"class.rx::StreamProducerImpl" = type opaque
%"struct.std::__1::array.267" = type { [3 x %"struct.egl::Stream::PlaneTexture"] }
%"struct.egl::Stream::PlaneTexture" = type { i32, %"class.gl::Texture"* }
%"class.angle::FastVector.268" = type { %"struct.std::__1::array.269", %"class.rx::Serial"*, i64, i64 }
%"struct.std::__1::array.269" = type { [8 x %"class.rx::Serial"] }
%"struct.gl::Texture::SamplerCompletenessCache" = type <{ %"struct.gl::ContextID", %"class.gl::SamplerState", i8, [3 x i8] }>
%"class.absl::flat_hash_map.270" = type { %"class.absl::container_internal::raw_hash_map.271" }
%"class.absl::container_internal::raw_hash_map.271" = type { %"class.absl::container_internal::raw_hash_set.272" }
%"class.absl::container_internal::raw_hash_set.272" = type { i8*, %"union.absl::container_internal::map_slot_type.273"*, i64, i64, %"class.absl::container_internal::CompressedTuple.274" }
%"union.absl::container_internal::map_slot_type.273" = type { %"struct.std::__1::pair.628" }
%"struct.std::__1::pair.628" = type { i32, %"class.gl::Texture"* }
%"class.absl::container_internal::CompressedTuple.274" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::RenderbufferManager" = type { %"class.gl::TypedResourceManager.279" }
%"class.gl::TypedResourceManager.279" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.280" }
%"class.gl::ResourceMap.280" = type { i64, %"class.gl::Renderbuffer"**, %"class.absl::flat_hash_map.281" }
%"class.gl::Renderbuffer" = type { %"class.gl::RefCountObject.base", %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::RenderbufferState", %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::RenderbufferID" }>
%"struct.gl::RenderbufferID" = type { i32 }
%"class.gl::RenderbufferState" = type <{ i32, i32, %"struct.gl::Format", i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.rx::RenderbufferImpl"* }
%"class.rx::RenderbufferImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"class.gl::RenderbufferState"* }
%"class.rx::FramebufferAttachmentObjectImpl" = type { %"class.angle::Subject" }
%"class.absl::flat_hash_map.281" = type { %"class.absl::container_internal::raw_hash_map.282" }
%"class.absl::container_internal::raw_hash_map.282" = type { %"class.absl::container_internal::raw_hash_set.283" }
%"class.absl::container_internal::raw_hash_set.283" = type { i8*, %"union.absl::container_internal::map_slot_type.284"*, i64, i64, %"class.absl::container_internal::CompressedTuple.285" }
%"union.absl::container_internal::map_slot_type.284" = type { %"struct.std::__1::pair.630" }
%"struct.std::__1::pair.630" = type { i32, %"class.gl::Renderbuffer"* }
%"class.absl::container_internal::CompressedTuple.285" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SamplerManager" = type { %"class.gl::TypedResourceManager.290" }
%"class.gl::TypedResourceManager.290" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.291" }
%"class.gl::ResourceMap.291" = type { i64, %"class.gl::Sampler"**, %"class.absl::flat_hash_map.294" }
%"class.gl::Sampler" = type { %"class.gl::RefCountObject.base.293", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::SamplerState", i8, %"class.rx::SamplerImpl"*, %"class.std::__1::basic_string" }
%"class.gl::RefCountObject.base.293" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::SamplerID" }>
%"struct.gl::SamplerID" = type { i32 }
%"class.rx::SamplerImpl" = type opaque
%"class.absl::flat_hash_map.294" = type { %"class.absl::container_internal::raw_hash_map.295" }
%"class.absl::container_internal::raw_hash_map.295" = type { %"class.absl::container_internal::raw_hash_set.296" }
%"class.absl::container_internal::raw_hash_set.296" = type { i8*, %"union.absl::container_internal::map_slot_type.297"*, i64, i64, %"class.absl::container_internal::CompressedTuple.298" }
%"union.absl::container_internal::map_slot_type.297" = type { %"struct.std::__1::pair.632" }
%"struct.std::__1::pair.632" = type { i32, %"class.gl::Sampler"* }
%"class.absl::container_internal::CompressedTuple.298" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SyncManager" = type { %"class.gl::TypedResourceManager.303" }
%"class.gl::TypedResourceManager.303" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.304" }
%"class.gl::ResourceMap.304" = type { i64, %"class.gl::Sync"**, %"class.absl::flat_hash_map.305" }
%"class.gl::Sync" = type opaque
%"class.absl::flat_hash_map.305" = type { %"class.absl::container_internal::raw_hash_map.306" }
%"class.absl::container_internal::raw_hash_map.306" = type { %"class.absl::container_internal::raw_hash_set.307" }
%"class.absl::container_internal::raw_hash_set.307" = type { i8*, %"union.absl::container_internal::map_slot_type.308"*, i64, i64, %"class.absl::container_internal::CompressedTuple.309" }
%"union.absl::container_internal::map_slot_type.308" = type opaque
%"class.absl::container_internal::CompressedTuple.309" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::FramebufferManager" = type { %"class.gl::TypedResourceManager.314" }
%"class.gl::TypedResourceManager.314" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.315" }
%"class.gl::ResourceMap.315" = type { i64, %"class.gl::Framebuffer"**, %"class.absl::flat_hash_map.316" }
%"class.absl::flat_hash_map.316" = type { %"class.absl::container_internal::raw_hash_map.317" }
%"class.absl::container_internal::raw_hash_map.317" = type { %"class.absl::container_internal::raw_hash_set.318" }
%"class.absl::container_internal::raw_hash_set.318" = type { i8*, %"union.absl::container_internal::map_slot_type.319"*, i64, i64, %"class.absl::container_internal::CompressedTuple.320" }
%"union.absl::container_internal::map_slot_type.319" = type { %"struct.std::__1::pair.634" }
%"struct.std::__1::pair.634" = type { i32, %"class.gl::Framebuffer"* }
%"class.absl::container_internal::CompressedTuple.320" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramPipelineManager" = type { %"class.gl::TypedResourceManager.325" }
%"class.gl::TypedResourceManager.325" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.326" }
%"class.gl::ResourceMap.326" = type { i64, %"class.gl::ProgramPipeline"**, %"class.absl::flat_hash_map.344" }
%"class.gl::ProgramPipeline" = type { %"class.gl::RefCountObject.base.328", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::HasAttachedShaders", %"class.std::__1::unique_ptr.329", %"class.gl::ProgramPipelineState", %"class.std::__1::vector.337", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base.328" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::ProgramPipelineID" }>
%"struct.gl::ProgramPipelineID" = type { i32 }
%"class.gl::HasAttachedShaders" = type { i32 (...)** }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.rx::ProgramPipelineImpl"* }
%"class.rx::ProgramPipelineImpl" = type opaque
%"class.gl::ProgramPipelineState" = type <{ %"class.std::__1::basic_string", %"class.gl::Program"*, %"class.angle::PackedEnumMap.335", i8, [7 x i8], %"class.gl::ProgramExecutable"*, i8, [7 x i8] }>
%"class.angle::PackedEnumMap.335" = type { %"struct.std::__1::array.336" }
%"struct.std::__1::array.336" = type { [6 x %"class.gl::Program"*] }
%"class.absl::flat_hash_map.344" = type { %"class.absl::container_internal::raw_hash_map.345" }
%"class.absl::container_internal::raw_hash_map.345" = type { %"class.absl::container_internal::raw_hash_set.346" }
%"class.absl::container_internal::raw_hash_set.346" = type { i8*, %"union.absl::container_internal::map_slot_type.347"*, i64, i64, %"class.absl::container_internal::CompressedTuple.348" }
%"union.absl::container_internal::map_slot_type.347" = type { %"struct.std::__1::pair.636" }
%"struct.std::__1::pair.636" = type { i32, %"class.gl::ProgramPipeline"* }
%"class.absl::container_internal::CompressedTuple.348" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::MemoryObjectManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.353" }
%"class.gl::ResourceMap.353" = type { i64, %"class.gl::MemoryObject"**, %"class.absl::flat_hash_map.354" }
%"class.gl::MemoryObject" = type opaque
%"class.absl::flat_hash_map.354" = type { %"class.absl::container_internal::raw_hash_map.355" }
%"class.absl::container_internal::raw_hash_map.355" = type { %"class.absl::container_internal::raw_hash_set.356" }
%"class.absl::container_internal::raw_hash_set.356" = type { i8*, %"union.absl::container_internal::map_slot_type.357"*, i64, i64, %"class.absl::container_internal::CompressedTuple.358" }
%"union.absl::container_internal::map_slot_type.357" = type opaque
%"class.absl::container_internal::CompressedTuple.358" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SemaphoreManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.363" }
%"class.gl::ResourceMap.363" = type { i64, %"class.gl::Semaphore"**, %"class.absl::flat_hash_map.364" }
%"class.gl::Semaphore" = type opaque
%"class.absl::flat_hash_map.364" = type { %"class.absl::container_internal::raw_hash_map.365" }
%"class.absl::container_internal::raw_hash_map.365" = type { %"class.absl::container_internal::raw_hash_set.366" }
%"class.absl::container_internal::raw_hash_set.366" = type { i8*, %"union.absl::container_internal::map_slot_type.367"*, i64, i64, %"class.absl::container_internal::CompressedTuple.368" }
%"union.absl::container_internal::map_slot_type.367" = type opaque
%"class.absl::container_internal::CompressedTuple.368" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.gl::RasterizerState" = type { i8, i8, i32, i8, float, float, i8, i8, i8, i8 }
%"struct.gl::BlendState" = type { i8, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%"class.gl::BlendStateExt" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i64 }
%"struct.angle::Color" = type { float, float, float, float }
%"struct.std::__1::array.373" = type { [2 x i32] }
%"struct.gl::DepthStencilState" = type { i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.gl::Rectangle" = type { i32, i32, i32, i32 }
%"class.gl::Framebuffer" = type opaque
%"class.gl::BindingPointer.374" = type { %"class.angle::BindingPointer.375" }
%"class.angle::BindingPointer.375" = type { i32 (...)**, %"class.gl::Renderbuffer"* }
%"class.gl::Program" = type { %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::HasAttachedShaders", %"class.rx::Serial", %"class.gl::ProgramState", %"class.rx::ProgramImpl"*, i8, %"class.gl::ProgramBindings", %"class.gl::ProgramAliasedBindings", %"class.gl::ProgramAliasedBindings", i8, %"class.std::__1::unique_ptr.235", i8, i32, %"class.gl::ShaderProgramManager"*, %"struct.gl::ShaderProgramID", %"class.angle::BitSetT.201" }
%"class.gl::ProgramState" = type { %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", %"class.angle::PackedEnumMap.123", i32, %"class.std::__1::vector.125", %"class.std::__1::vector.132", %"class.std::__1::vector.139", %"class.gl::Range", %"class.angle::BitSetT.147", %"class.std::__1::vector", %"class.angle::BitSetT.148", i8, i8, i8, i8, %"class.angle::BitSetT", i32, i32, i32, i32, i32, i32, %"class.gl::ProgramAliasedBindings", %"class.std::__1::shared_ptr" }
%"class.angle::PackedEnumMap.123" = type { %"struct.std::__1::array.124" }
%"struct.std::__1::array.124" = type { [6 x %"class.gl::Shader"*] }
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"*, %"class.std::__1::__compressed_pair.134" }
%"struct.gl::VariableLocation" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.gl::VariableLocation"* }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"struct.gl::BufferVariable"*, %"struct.gl::BufferVariable"*, %"class.std::__1::__compressed_pair.142" }
%"struct.gl::BufferVariable" = type <{ %"struct.gl::ActiveVariable.base", [7 x i8], %"struct.sh::ShaderVariable", i32, %"struct.sh::BlockMemberInfo", i32, [4 x i8] }>
%"struct.gl::ActiveVariable.base" = type <{ i32 (...)**, %"class.angle::BitSetT.141" }>
%"class.angle::BitSetT.141" = type { i8 }
%"struct.sh::BlockMemberInfo" = type { i32, i32, i32, i8, i32 }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.gl::BufferVariable"* }
%"class.gl::Range" = type { i32, i32 }
%"class.std::__1::shared_ptr" = type { %"class.gl::ProgramExecutable"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.rx::ProgramImpl" = type opaque
%"class.gl::ProgramBindings" = type { %"class.absl::flat_hash_map.226" }
%"class.absl::flat_hash_map.226" = type { %"class.absl::container_internal::raw_hash_map.227" }
%"class.absl::container_internal::raw_hash_map.227" = type { %"class.absl::container_internal::raw_hash_set.228" }
%"class.absl::container_internal::raw_hash_set.228" = type { i8*, %"union.absl::container_internal::map_slot_type.229"*, i64, i64, %"class.absl::container_internal::CompressedTuple.230" }
%"union.absl::container_internal::map_slot_type.229" = type opaque
%"class.absl::container_internal::CompressedTuple.230" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramAliasedBindings" = type { %"class.absl::flat_hash_map.149" }
%"class.absl::flat_hash_map.149" = type { %"class.absl::container_internal::raw_hash_map.150" }
%"class.absl::container_internal::raw_hash_map.150" = type { %"class.absl::container_internal::raw_hash_set.151" }
%"class.absl::container_internal::raw_hash_set.151" = type { i8*, %"union.absl::container_internal::map_slot_type.152"*, i64, i64, %"class.absl::container_internal::CompressedTuple.153" }
%"union.absl::container_internal::map_slot_type.152" = type opaque
%"class.absl::container_internal::CompressedTuple.153" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.gl::Program::LinkingState"* }
%"struct.gl::Program::LinkingState" = type opaque
%"class.angle::BitSetT.201" = type { i64 }
%"class.gl::BindingPointer.376" = type { %"class.angle::BindingPointer.377" }
%"class.angle::BindingPointer.377" = type { i32 (...)**, %"class.gl::ProgramPipeline"* }
%"class.gl::ProgramExecutable" = type <{ %"class.angle::Subject", %"class.gl::InfoLog", %"class.angle::BitSetT.141", %"class.angle::BitSetT.141", [6 x i8], %"class.angle::BitSetT.166", i32, [4 x i8], %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"struct.std::__1::array.169", %"struct.std::__1::array.170", %"class.angle::BitSetArray", %"struct.std::__1::array.171", %"struct.std::__1::array.172", %"class.angle::BitSetArray", %"struct.std::__1::array.172", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.132", %"class.std::__1::vector.132", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.173", %"class.std::__1::vector.180", i32, [4 x i8], %"class.std::__1::vector.187", %"class.gl::Range", %"class.gl::Range", %"class.std::__1::vector.194", %"class.angle::BitSetT.201", %"class.std::__1::vector.202", %"class.gl::Range", %"class.std::__1::vector.194", %"class.std::__1::vector.194", %"class.gl::Range", %"class.std::__1::vector.209", %"class.std::__1::vector.216", %"class.std::__1::vector.216", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap", i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, %struct.Optional.225, [6 x i8] }>
%"class.gl::InfoLog" = type { %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::array.169" = type { [96 x i32] }
%"struct.std::__1::array.170" = type { [96 x i8] }
%"struct.std::__1::array.171" = type { [96 x i8] }
%"struct.std::__1::array.172" = type { [96 x %"class.angle::BitSetT.141"] }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"*, %"class.std::__1::__compressed_pair.175" }
%"struct.gl::TransformFeedbackVarying" = type <{ %"struct.sh::ShaderVariable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.gl::TransformFeedbackVarying"* }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { i32*, i32*, %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { i32* }
%"class.std::__1::vector.187" = type { %"class.std::__1::__vector_base.188" }
%"class.std::__1::__vector_base.188" = type { %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"*, %"class.std::__1::__compressed_pair.189" }
%"struct.gl::LinkedUniform" = type { %"struct.gl::ActiveVariable.base", %"struct.sh::ShaderVariable", %"struct.gl::UniformTypeInfo"*, i32, %"struct.sh::BlockMemberInfo", %"class.std::__1::vector" }
%"struct.gl::UniformTypeInfo" = type <{ i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, [4 x i8], i64, i64, i64, i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.gl::LinkedUniform"* }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"*, %"class.std::__1::__compressed_pair.204" }
%"struct.gl::ShaderVariableBuffer" = type { %"struct.gl::ActiveVariable.base", i32, i32, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.gl::ShaderVariableBuffer"* }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"*, %"class.std::__1::__compressed_pair.196" }
%"struct.gl::InterfaceBlock" = type <{ %"struct.gl::ShaderVariableBuffer", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.gl::InterfaceBlock"* }
%"class.std::__1::vector.209" = type { %"class.std::__1::__vector_base.210" }
%"class.std::__1::__vector_base.210" = type { %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"*, %"class.std::__1::__compressed_pair.211" }
%"struct.gl::SamplerBinding" = type { i8, i32, i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.gl::SamplerBinding"* }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"*, %"class.std::__1::__compressed_pair.218" }
%"struct.gl::ImageBinding" = type { i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.gl::ImageBinding"* }
%"class.angle::PackedEnumMap.223" = type { %"struct.std::__1::array.224" }
%"struct.std::__1::array.224" = type { [6 x %"class.std::__1::vector.70"] }
%struct.Optional.225 = type { i8, i8 }
%"class.std::__1::vector.378" = type { %"class.std::__1::__vector_base.379" }
%"class.std::__1::__vector_base.379" = type { %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"*, %"class.std::__1::__compressed_pair.381" }
%"struct.gl::VertexAttribCurrentValueData" = type { %union.anon.380, i32 }
%union.anon.380 = type { [4 x float] }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.gl::VertexAttribCurrentValueData"* }
%"class.gl::VertexArray" = type <{ %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"struct.gl::VertexArrayID", [4 x i8], %"class.gl::VertexArrayState", %"class.angle::BitSetT.400", %"struct.std::__1::array.401", %"struct.std::__1::array.403", %struct.Optional.405, %"class.rx::VertexArrayImpl"*, %"class.std::__1::vector.337", %"class.angle::BitSetT.166", %"class.gl::VertexArray::IndexRangeCache", i8, [7 x i8] }>
%"struct.gl::VertexArrayID" = type { i32 }
%"class.gl::VertexArrayState" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.386", %"class.gl::SubjectBindingPointer", %"class.std::__1::vector.393", %"class.angle::BitSetT.166", %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166" }
%"class.std::__1::vector.386" = type { %"class.std::__1::__vector_base.387" }
%"class.std::__1::__vector_base.387" = type { %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"*, %"class.std::__1::__compressed_pair.388" }
%"struct.gl::VertexAttribute" = type { i8, %"struct.angle::Format"*, i8*, i32, i32, i32, i64 }
%"struct.angle::Format" = type { i32, i32, i32, void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, void (i8*, i8*)*, void (i8*, i8*)*, %"class.rx::FastCopyFunctionMap"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32 }
%"class.rx::FastCopyFunctionMap" = type { i64, %"struct.rx::FastCopyFunctionMap::Entry"* }
%"struct.rx::FastCopyFunctionMap::Entry" = type { i32, void (i8*, i8*)* }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"struct.gl::VertexAttribute"* }
%"class.gl::SubjectBindingPointer" = type { %"class.gl::BindingPointer.264", %"class.angle::ObserverBindingBase" }
%"class.std::__1::vector.393" = type { %"class.std::__1::__vector_base.394" }
%"class.std::__1::__vector_base.394" = type { %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"*, %"class.std::__1::__compressed_pair.395" }
%"class.gl::VertexBinding" = type { i32, i32, i64, %"class.gl::BindingPointer.264", %"class.angle::BitSetT.166" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.gl::VertexBinding"* }
%"class.angle::BitSetT.400" = type { i64 }
%"struct.std::__1::array.401" = type { [16 x %"class.angle::BitSetT.402"] }
%"class.angle::BitSetT.402" = type { i64 }
%"struct.std::__1::array.403" = type { [16 x %"class.angle::BitSetT.404"] }
%"class.angle::BitSetT.404" = type { i64 }
%struct.Optional.405 = type { i8, %"class.angle::BitSetT.400" }
%"class.rx::VertexArrayImpl" = type opaque
%"class.gl::VertexArray::IndexRangeCache" = type { i64, i32, i64, %"struct.gl::IndexRange" }
%"struct.gl::IndexRange" = type { i64, i64, i64 }
%"class.angle::BitSetT.148" = type { i64 }
%"class.angle::PackedEnumMap.406" = type { %"struct.std::__1::array.407" }
%"struct.std::__1::array.407" = type { [11 x %"class.std::__1::vector.408"] }
%"class.std::__1::vector.408" = type { %"class.std::__1::__vector_base.409" }
%"class.std::__1::__vector_base.409" = type { %"class.gl::BindingPointer.410"*, %"class.gl::BindingPointer.410"*, %"class.std::__1::__compressed_pair.412" }
%"class.gl::BindingPointer.410" = type { %"class.angle::BindingPointer.411" }
%"class.angle::BindingPointer.411" = type { i32 (...)**, %"class.gl::Texture"* }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.gl::BindingPointer.410"* }
%"class.gl::ActiveTexturesCache" = type { %"struct.std::__1::array.417" }
%"struct.std::__1::array.417" = type { [96 x %"class.gl::Texture"*] }
%"class.std::__1::vector.418" = type { %"class.std::__1::__vector_base.419" }
%"class.std::__1::__vector_base.419" = type { %"class.gl::BindingPointer.420"*, %"class.gl::BindingPointer.420"*, %"class.std::__1::__compressed_pair.422" }
%"class.gl::BindingPointer.420" = type { %"class.angle::BindingPointer.421" }
%"class.angle::BindingPointer.421" = type { i32 (...)**, %"class.gl::Sampler"* }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.gl::BindingPointer.420"* }
%"class.std::__1::vector.427" = type { %"class.std::__1::__vector_base.428" }
%"class.std::__1::__vector_base.428" = type { %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"*, %"class.std::__1::__compressed_pair.429" }
%"struct.gl::ImageUnit" = type <{ %"class.gl::BindingPointer.410", i32, i8, [3 x i8], i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"struct.gl::ImageUnit"* }
%"class.angle::PackedEnumMap.434" = type { %"struct.std::__1::array.435" }
%"struct.std::__1::array.435" = type { [7 x %"class.gl::BindingPointer.436"] }
%"class.gl::BindingPointer.436" = type { %"class.angle::BindingPointer.437" }
%"class.angle::BindingPointer.437" = type { i32 (...)**, %"class.gl::Query"* }
%"class.gl::Query" = type opaque
%"class.angle::PackedEnumMap.438" = type { %"struct.std::__1::array.439" }
%"struct.std::__1::array.439" = type { [13 x %"class.gl::BindingPointer.264"] }
%"class.std::__1::vector.440" = type { %"class.std::__1::__vector_base.441" }
%"class.std::__1::__vector_base.441" = type { %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"*, %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.gl::OffsetBindingPointer"* }
%"class.angle::BitSetArray.447" = type { %"struct.std::__1::array.167" }
%"struct.std::__1::array.167" = type { [2 x %"class.angle::BitSetT.168"] }
%"class.angle::BitSetT.448" = type { i64 }
%"class.gl::BindingPointer.449" = type { %"class.angle::BindingPointer.450" }
%"class.angle::BindingPointer.450" = type { i32 (...)**, %"class.gl::TransformFeedback"* }
%"class.gl::TransformFeedback" = type { %"class.gl::RefCountObject.base.452", %"class.gl::LabeledObject", %"class.gl::TransformFeedbackState", %"class.rx::TransformFeedbackImpl"* }
%"class.gl::RefCountObject.base.452" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TransformFeedbackID" }>
%"struct.gl::TransformFeedbackID" = type { i32 }
%"class.gl::TransformFeedbackState" = type { %"class.std::__1::basic_string", i8, i8, i8, i64, i64, %"class.gl::Program"*, %"class.std::__1::vector.440" }
%"class.rx::TransformFeedbackImpl" = type opaque
%"struct.gl::PixelUnpackState" = type { %"struct.gl::PixelStoreStateBase" }
%"struct.gl::PixelStoreStateBase" = type { i32, i32, i32, i32, i32, i32 }
%"struct.gl::PixelPackState" = type <{ %"struct.gl::PixelStoreStateBase", i8, [3 x i8] }>
%"class.gl::Debug" = type { i8, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*, %"class.std::__1::deque", i32, i8, %"class.std::__1::vector.462" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.458" }
%"struct.std::__1::__split_buffer" = type { %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"class.std::__1::__compressed_pair.453" }
%"struct.gl::Debug::Message" = type { i32, i32, i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"struct.gl::Debug::Message"** }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.462" = type { %"class.std::__1::__vector_base.463" }
%"class.std::__1::__vector_base.463" = type { %"struct.gl::Debug::Group"*, %"struct.gl::Debug::Group"*, %"class.std::__1::__compressed_pair.471" }
%"struct.gl::Debug::Group" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.464" }
%"class.std::__1::vector.464" = type { %"class.std::__1::__vector_base.465" }
%"class.std::__1::__vector_base.465" = type { %"struct.gl::Debug::Control"*, %"struct.gl::Debug::Control"*, %"class.std::__1::__compressed_pair.466" }
%"struct.gl::Debug::Control" = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"struct.gl::Debug::Control"* }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"struct.gl::Debug::Group"* }
%"class.angle::BitSetT.476" = type { i32 }
%"class.gl::GLES1State" = type <{ %"class.gl::State"*, %"class.angle::BitSetT.166", %"class.std::__1::vector.477", i8, i8, i8, i8, [4 x i8], %"class.std::__1::vector.485", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", %"class.angle::Vector", %"class.std::__1::vector.490", i32, i8, [3 x i8], %"class.angle::FixedVector", %"class.angle::FixedVector", %"class.std::__1::vector.505", %"class.std::__1::vector.512", %"struct.gl::MaterialParameters", %"struct.gl::LightModelParameters", %"class.std::__1::vector.519", %"struct.gl::FogParameters", i8, [3 x i8], %"struct.gl::PointParameters", i8, [3 x i8], float, i8, [7 x i8], %"class.std::__1::vector.528", i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::vector.477" = type { %"class.std::__1::__vector_base.478" }
%"class.std::__1::__vector_base.478" = type { %"class.angle::BitSetT.479"*, %"class.angle::BitSetT.479"*, %"class.std::__1::__compressed_pair.480" }
%"class.angle::BitSetT.479" = type opaque
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.angle::BitSetT.479"* }
%"class.std::__1::vector.485" = type { i64*, i64, %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::Vector" = type { %"class.angle::VectorBase" }
%"class.angle::VectorBase" = type { [3 x float] }
%"class.std::__1::vector.490" = type { %"class.std::__1::__vector_base.491" }
%"class.std::__1::__vector_base.491" = type { %"struct.gl::TextureCoordF"*, %"struct.gl::TextureCoordF"*, %"class.std::__1::__compressed_pair.492" }
%"struct.gl::TextureCoordF" = type { float, float, float, float }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"struct.gl::TextureCoordF"* }
%"class.angle::FixedVector" = type { %"struct.std::__1::array.497", i64 }
%"struct.std::__1::array.497" = type { [16 x %"class.angle::Mat4"] }
%"class.angle::Mat4" = type { %"class.angle::Matrix" }
%"class.angle::Matrix" = type { %"class.std::__1::vector.498", i32, i32 }
%"class.std::__1::vector.498" = type { %"class.std::__1::__vector_base.499" }
%"class.std::__1::__vector_base.499" = type { float*, float*, %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { float* }
%"class.std::__1::vector.505" = type { %"class.std::__1::__vector_base.506" }
%"class.std::__1::__vector_base.506" = type { %"class.angle::FixedVector"*, %"class.angle::FixedVector"*, %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.angle::FixedVector"* }
%"class.std::__1::vector.512" = type { %"class.std::__1::__vector_base.513" }
%"class.std::__1::__vector_base.513" = type { %"struct.gl::TextureEnvironmentParameters"*, %"struct.gl::TextureEnvironmentParameters"*, %"class.std::__1::__compressed_pair.514" }
%"struct.gl::TextureEnvironmentParameters" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", float, float, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"struct.gl::TextureEnvironmentParameters"* }
%"struct.gl::MaterialParameters" = type { %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", float }
%"struct.gl::LightModelParameters" = type <{ %"struct.angle::Color", i8, [3 x i8] }>
%"class.std::__1::vector.519" = type { %"class.std::__1::__vector_base.520" }
%"class.std::__1::__vector_base.520" = type { %"struct.gl::LightParameters"*, %"struct.gl::LightParameters"*, %"class.std::__1::__compressed_pair.523" }
%"struct.gl::LightParameters" = type { i8, %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"class.angle::Vector.521", %"class.angle::Vector", float, float, float, float, float }
%"class.angle::Vector.521" = type { %"class.angle::VectorBase.522" }
%"class.angle::VectorBase.522" = type { [4 x float] }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"struct.gl::LightParameters"* }
%"struct.gl::FogParameters" = type { i8, float, float, float, %"struct.angle::Color" }
%"struct.gl::PointParameters" = type { float, float, float, %"class.angle::Vector", float }
%"class.std::__1::vector.528" = type { %"class.std::__1::__vector_base.529" }
%"class.std::__1::__vector_base.529" = type { %"struct.gl::ClipPlaneParameters"*, %"struct.gl::ClipPlaneParameters"*, %"class.std::__1::__compressed_pair.530" }
%"struct.gl::ClipPlaneParameters" = type { i8, %"class.angle::Vector.521" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"struct.gl::ClipPlaneParameters"* }
%"class.angle::BitSetT.535" = type { i32 }
%"class.angle::BitSetT.166" = type { i64 }
%"class.angle::BitSetArray" = type { %"struct.std::__1::array.167" }
%"class.angle::BitSetT.147" = type { i8 }
%"class.gl::ErrorSet" = type { %"class.gl::Context"*, %"class.std::__1::set.35" }
%"class.angle::BitSetT.537" = type { i32 }
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.rx::ContextImpl"* }
%"class.rx::ContextImpl" = type opaque
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.gl::BindingPointer" = type { %"class.angle::BindingPointer.91" }
%"class.angle::BindingPointer.91" = type { i32 (...)**, %"class.gl::Compiler"* }
%"class.gl::Compiler" = type { %"class.angle::RefCountObject", %"class.std::__1::unique_ptr.92", i32, i32, %struct.ShBuiltInResources, %"class.angle::PackedEnumMap.98" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.rx::CompilerImpl"* }
%"class.rx::CompilerImpl" = type opaque
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.98" = type { %"struct.std::__1::array.99" }
%"struct.std::__1::array.99" = type { [6 x %"class.std::__1::vector.100"] }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"class.gl::ShCompilerInstance"*, %"class.gl::ShCompilerInstance"*, %"class.std::__1::__compressed_pair.102" }
%"class.gl::ShCompilerInstance" = type <{ i8*, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.gl::ShCompilerInstance"* }
%"struct.egl::Config" = type opaque
%"class.angle::PackedEnumMap.544" = type { %"struct.std::__1::array.545" }
%"struct.std::__1::array.545" = type { [11 x %"class.gl::BindingPointer.410"] }
%"class.gl::ResourceMap.546" = type { i64, %"class.gl::FenceNV"**, %"class.absl::flat_hash_map.547" }
%"class.gl::FenceNV" = type opaque
%"class.absl::flat_hash_map.547" = type { %"class.absl::container_internal::raw_hash_map.548" }
%"class.absl::container_internal::raw_hash_map.548" = type { %"class.absl::container_internal::raw_hash_set.549" }
%"class.absl::container_internal::raw_hash_set.549" = type { i8*, %"union.absl::container_internal::map_slot_type.550"*, i64, i64, %"class.absl::container_internal::CompressedTuple.551" }
%"union.absl::container_internal::map_slot_type.550" = type opaque
%"class.absl::container_internal::CompressedTuple.551" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.556" = type { i64, %"class.gl::Query"**, %"class.absl::flat_hash_map.557" }
%"class.absl::flat_hash_map.557" = type { %"class.absl::container_internal::raw_hash_map.558" }
%"class.absl::container_internal::raw_hash_map.558" = type { %"class.absl::container_internal::raw_hash_set.559" }
%"class.absl::container_internal::raw_hash_set.559" = type { i8*, %"union.absl::container_internal::map_slot_type.560"*, i64, i64, %"class.absl::container_internal::CompressedTuple.561" }
%"union.absl::container_internal::map_slot_type.560" = type opaque
%"class.absl::container_internal::CompressedTuple.561" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.566" = type { i64, %"class.gl::VertexArray"**, %"class.absl::flat_hash_map.567" }
%"class.absl::flat_hash_map.567" = type { %"class.absl::container_internal::raw_hash_map.568" }
%"class.absl::container_internal::raw_hash_map.568" = type { %"class.absl::container_internal::raw_hash_set.569" }
%"class.absl::container_internal::raw_hash_set.569" = type { i8*, %"union.absl::container_internal::map_slot_type.570"*, i64, i64, %"class.absl::container_internal::CompressedTuple.571" }
%"union.absl::container_internal::map_slot_type.570" = type opaque
%"class.absl::container_internal::CompressedTuple.571" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.576" = type { i64, %"class.gl::TransformFeedback"**, %"class.absl::flat_hash_map.577" }
%"class.absl::flat_hash_map.577" = type { %"class.absl::container_internal::raw_hash_map.578" }
%"class.absl::container_internal::raw_hash_map.578" = type { %"class.absl::container_internal::raw_hash_set.579" }
%"class.absl::container_internal::raw_hash_set.579" = type { i8*, %"union.absl::container_internal::map_slot_type.580"*, i64, i64, %"class.absl::container_internal::CompressedTuple.581" }
%"union.absl::container_internal::map_slot_type.580" = type opaque
%"class.absl::container_internal::CompressedTuple.581" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::HandleAllocator" = type <{ i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.45", %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"*, %"class.std::__1::__compressed_pair.47" }
%"struct.gl::HandleAllocator::HandleRange" = type { i32, i32 }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.gl::HandleAllocator::HandleRange"* }
%"class.std::__1::vector.586" = type { %"class.std::__1::__vector_base.587" }
%"class.std::__1::__vector_base.587" = type { i8**, i8**, %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { i8** }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.gl::GLES1Renderer"* }
%"class.gl::GLES1Renderer" = type { i8, %"class.gl::ShaderProgramManager"*, %"struct.gl::GLES1Renderer::GLES1UniformBuffers", %"struct.gl::GLES1Renderer::GLES1ProgramState", i8, [4 x float], [2 x float] }
%"struct.gl::GLES1Renderer::GLES1UniformBuffers" = type { %"struct.std::__1::array.615", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.616", %"struct.std::__1::array.617", %"struct.std::__1::array.618", %"struct.std::__1::array.618", %"struct.std::__1::array.616", %"struct.std::__1::array.619", %"struct.std::__1::array.620", %"struct.std::__1::array.620", %"struct.std::__1::array.620", %"struct.std::__1::array.620", %"struct.std::__1::array.621", %"struct.std::__1::array.622", %"struct.std::__1::array.622", %"struct.std::__1::array.622", %"struct.std::__1::array.622", %"struct.std::__1::array.622", %"struct.std::__1::array.29", %"struct.std::__1::array.623", %"struct.std::__1::array.617" }
%"struct.std::__1::array.615" = type { [4 x [16 x float]] }
%"struct.std::__1::array.618" = type { [4 x float] }
%"struct.std::__1::array.616" = type { [4 x i32] }
%"struct.std::__1::array.619" = type { [8 x i32] }
%"struct.std::__1::array.620" = type { [8 x [4 x float]] }
%"struct.std::__1::array.621" = type { [8 x [3 x float]] }
%"struct.std::__1::array.622" = type { [8 x float] }
%"struct.std::__1::array.623" = type { [6 x [4 x float]] }
%"struct.std::__1::array.617" = type { [4 x [4 x float]] }
%"struct.gl::GLES1Renderer::GLES1ProgramState" = type { %"struct.gl::ShaderProgramID", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.std::__1::array.624", %"struct.std::__1::array.624", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation" }
%"struct.std::__1::array.624" = type { [4 x %"struct.gl::UniformLocation"] }
%"struct.gl::UniformLocation" = type { i32 }
%"class.egl::Surface" = type opaque
%"class.egl::Display" = type opaque
%"class.gl::MemoryProgramCache" = type opaque
%"class.gl::StateCache" = type <{ %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", i8, [7 x i8], i64, i64, i64, i64, i8, [7 x i8], %"class.angle::BitSetT.168", %"class.angle::BitSetArray", %"class.angle::PackedEnumMap.599", %"class.angle::PackedEnumMap.601", %"class.angle::PackedEnumMap.603", %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605", i8, [7 x i8] }>
%"class.angle::PackedEnumMap.599" = type { %"struct.std::__1::array.600" }
%"struct.std::__1::array.600" = type { [16 x i8] }
%"class.angle::PackedEnumMap.601" = type { %"struct.std::__1::array.602" }
%"struct.std::__1::array.602" = type { [12 x i8] }
%"class.angle::PackedEnumMap.603" = type { %"struct.std::__1::array.604" }
%"struct.std::__1::array.604" = type { [4 x i8] }
%"class.angle::PackedEnumMap.605" = type { %"struct.std::__1::array.606" }
%"struct.std::__1::array.606" = type { [19 x i32] }
%"class.angle::BitSetT.168" = type { i64 }
%"class.angle::BitSetT.536" = type { i64 }
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.std::__1::vector.337" = type { %"class.std::__1::__vector_base.338" }
%"class.std::__1::__vector_base.338" = type { %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"*, %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.angle::ObserverBinding"* }
%struct.Optional.607 = type { i8, %"class.angle::ScratchBuffer" }
%"class.angle::ScratchBuffer" = type { i32, i32, %"class.angle::MemoryBuffer" }
%"class.angle::MemoryBuffer" = type { i64, i8* }
%"class.std::__1::shared_ptr.608" = type { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WorkerThreadPool" = type { i32 (...)** }
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.angle::FrameCapture"* }
%"class.angle::FrameCapture" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.gl::MockOverlay" = type { %"class.gl::overlay::Mock" }
%"class.gl::overlay::Mock" = type { i8 }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context9alphaFuncENS_13AlphaTestFuncEf(%"class.gl::Context"*, i8 zeroext, float) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  tail call void @_ZN2gl10GLES1State12setAlphaFuncENS_13AlphaTestFuncEf(%"class.gl::GLES1State"* %4, i8 zeroext %1, float %2) #6
  ret void
}

declare void @_ZN2gl10GLES1State12setAlphaFuncENS_13AlphaTestFuncEf(%"class.gl::GLES1State"*, i8 zeroext, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10alphaFuncxENS_13AlphaTestFuncEi(%"class.gl::Context"*, i8 zeroext, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %5 = uitofp i32 %2 to float
  %6 = fmul float %5, 0x3EF0000000000000
  tail call void @_ZN2gl10GLES1State12setAlphaFuncENS_13AlphaTestFuncEf(%"class.gl::GLES1State"* %4, i8 zeroext %1, float %6) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11clearColorxEiiii(%"class.gl::Context"*, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %7 = uitofp i32 %1 to float
  %8 = fmul float %7, 0x3EF0000000000000
  %9 = uitofp i32 %2 to float
  %10 = fmul float %9, 0x3EF0000000000000
  %11 = uitofp i32 %3 to float
  %12 = fmul float %11, 0x3EF0000000000000
  %13 = uitofp i32 %4 to float
  %14 = fmul float %13, 0x3EF0000000000000
  tail call void @_ZN2gl5State18setColorClearValueEffff(%"class.gl::State"* %6, float %8, float %10, float %12, float %14) #6
  ret void
}

declare void @_ZN2gl5State18setColorClearValueEffff(%"class.gl::State"*, float, float, float, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11clearDepthxEi(%"class.gl::Context"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %4 = uitofp i32 %1 to float
  %5 = fmul float %4, 0x3EF0000000000000
  %6 = fcmp ogt float %5, 0.000000e+00
  %7 = fcmp ogt float %5, 1.000000e+00
  %8 = select i1 %7, float 1.000000e+00, float %5
  %9 = select i1 %6, float %8, float 0.000000e+00
  tail call void @_ZN2gl5State18setDepthClearValueEf(%"class.gl::State"* %3, float %9) #6
  ret void
}

declare void @_ZN2gl5State18setDepthClearValueEf(%"class.gl::State"*, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context19clientActiveTextureEj(%"class.gl::Context"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %4 = add i32 %1, -33984
  tail call void @_ZN2gl10GLES1State20setClientTextureUnitEj(%"class.gl::GLES1State"* %3, i32 %4) #6
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  tail call void @_ZN2gl10StateCache24onGLES1ClientStateChangeEPNS_7ContextE(%"class.gl::StateCache"* %5, %"class.gl::Context"* %0) #6
  ret void
}

declare void @_ZN2gl10GLES1State20setClientTextureUnitEj(%"class.gl::GLES1State"*, i32) local_unnamed_addr #1

declare void @_ZN2gl10StateCache24onGLES1ClientStateChangeEPNS_7ContextE(%"class.gl::StateCache"*, %"class.gl::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10clipPlanefEjPKf(%"class.gl::Context"*, i32, float*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %5 = add i32 %1, -12288
  tail call void @_ZN2gl10GLES1State12setClipPlaneEjPKf(%"class.gl::GLES1State"* %4, i32 %5, float* %2) #6
  ret void
}

declare void @_ZN2gl10GLES1State12setClipPlaneEjPKf(%"class.gl::GLES1State"*, i32, float*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10clipPlanexEjPKi(%"class.gl::Context"*, i32, i32* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca <4 x float>, align 16
  %5 = bitcast <4 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #6
  %6 = getelementptr inbounds <4 x float>, <4 x float>* %4, i64 0, i64 0
  %7 = bitcast i32* %2 to <4 x i32>*
  %8 = load <4 x i32>, <4 x i32>* %7, align 4
  %9 = uitofp <4 x i32> %8 to <4 x float>
  %10 = fmul <4 x float> %9, <float 0x3EF0000000000000, float 0x3EF0000000000000, float 0x3EF0000000000000, float 0x3EF0000000000000>
  store <4 x float> %10, <4 x float>* %4, align 16
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %12 = add i32 %1, -12288
  call void @_ZN2gl10GLES1State12setClipPlaneEjPKf(%"class.gl::GLES1State"* %11, i32 %12, float* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context7color4fEffff(%"class.gl::Context"*, float, float, float, float) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.angle::Color", align 4
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %8 = bitcast %"struct.angle::Color"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #6
  %9 = getelementptr inbounds %"struct.angle::Color", %"struct.angle::Color"* %6, i64 0, i32 0
  store float %1, float* %9, align 4
  %10 = getelementptr inbounds %"struct.angle::Color", %"struct.angle::Color"* %6, i64 0, i32 1
  store float %2, float* %10, align 4
  %11 = getelementptr inbounds %"struct.angle::Color", %"struct.angle::Color"* %6, i64 0, i32 2
  store float %3, float* %11, align 4
  %12 = getelementptr inbounds %"struct.angle::Color", %"struct.angle::Color"* %6, i64 0, i32 3
  store float %4, float* %12, align 4
  call void @_ZN2gl10GLES1State15setCurrentColorERKN5angle5ColorIfEE(%"class.gl::GLES1State"* %7, %"struct.angle::Color"* nonnull dereferenceable(16) %6) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #6
  ret void
}

declare void @_ZN2gl10GLES1State15setCurrentColorERKN5angle5ColorIfEE(%"class.gl::GLES1State"*, %"struct.angle::Color"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context8color4ubEhhhh(%"class.gl::Context"*, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca <4 x float>, align 16
  %7 = bitcast <4 x float>* %6 to %"struct.angle::Color"*
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %9 = bitcast <4 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #6
  %10 = insertelement <4 x i8> undef, i8 %1, i32 0
  %11 = insertelement <4 x i8> %10, i8 %2, i32 1
  %12 = insertelement <4 x i8> %11, i8 %3, i32 2
  %13 = insertelement <4 x i8> %12, i8 %4, i32 3
  %14 = uitofp <4 x i8> %13 to <4 x float>
  %15 = fmul <4 x float> %14, <float 0x3F70101020000000, float 0x3F70101020000000, float 0x3F70101020000000, float 0x3F70101020000000>
  store <4 x float> %15, <4 x float>* %6, align 16
  call void @_ZN2gl10GLES1State15setCurrentColorERKN5angle5ColorIfEE(%"class.gl::GLES1State"* %8, %"struct.angle::Color"* nonnull dereferenceable(16) %7) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context7color4xEiiii(%"class.gl::Context"*, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca <4 x float>, align 16
  %7 = bitcast <4 x float>* %6 to %"struct.angle::Color"*
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %9 = bitcast <4 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #6
  %10 = insertelement <4 x i32> undef, i32 %1, i32 0
  %11 = insertelement <4 x i32> %10, i32 %2, i32 1
  %12 = insertelement <4 x i32> %11, i32 %3, i32 2
  %13 = insertelement <4 x i32> %12, i32 %4, i32 3
  %14 = uitofp <4 x i32> %13 to <4 x float>
  %15 = fmul <4 x float> %14, <float 0x3EF0000000000000, float 0x3EF0000000000000, float 0x3EF0000000000000, float 0x3EF0000000000000>
  store <4 x float> %15, <4 x float>* %6, align 16
  call void @_ZN2gl10GLES1State15setCurrentColorERKN5angle5ColorIfEE(%"class.gl::GLES1State"* %8, %"struct.angle::Color"* nonnull dereferenceable(16) %7) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context12colorPointerEiNS_16VertexAttribTypeEiPKv(%"class.gl::Context"*, i32, i32, i32, i8*) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %7 = tail call i32 @_ZN2gl13GLES1Renderer16VertexArrayIndexENS_21ClientVertexArrayTypeERKNS_10GLES1StateE(i8 zeroext 0, %"class.gl::GLES1State"* dereferenceable(1456) %6) #6
  %8 = icmp eq i32 %2, 1
  %9 = zext i1 %8 to i8
  tail call void @_ZN2gl7Context19vertexAttribPointerEjiNS_16VertexAttribTypeEhiPKv(%"class.gl::Context"* %0, i32 %7, i32 %1, i32 %2, i8 zeroext %9, i32 %3, i8* %4) #6
  ret void
}

declare void @_ZN2gl7Context19vertexAttribPointerEjiNS_16VertexAttribTypeEhiPKv(%"class.gl::Context"*, i32, i32, i32, i8 zeroext, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2gl7Context16vertexArrayIndexENS_21ClientVertexArrayTypeE(%"class.gl::Context"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %4 = tail call i32 @_ZN2gl13GLES1Renderer16VertexArrayIndexENS_21ClientVertexArrayTypeERKNS_10GLES1StateE(i8 zeroext %1, %"class.gl::GLES1State"* dereferenceable(1456) %3) #6
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11depthRangexEii(%"class.gl::Context"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %5 = uitofp i32 %1 to float
  %6 = fmul float %5, 0x3EF0000000000000
  %7 = fcmp ogt float %6, 0.000000e+00
  %8 = fcmp ogt float %6, 1.000000e+00
  %9 = select i1 %8, float 1.000000e+00, float %6
  %10 = select i1 %7, float %9, float 0.000000e+00
  %11 = uitofp i32 %2 to float
  %12 = fmul float %11, 0x3EF0000000000000
  %13 = fcmp ogt float %12, 0.000000e+00
  %14 = fcmp ogt float %12, 1.000000e+00
  %15 = select i1 %14, float 1.000000e+00, float %12
  %16 = select i1 %13, float %15, float 0.000000e+00
  tail call void @_ZN2gl5State13setDepthRangeEff(%"class.gl::State"* %4, float %10, float %16) #6
  ret void
}

declare void @_ZN2gl5State13setDepthRangeEff(%"class.gl::State"*, float, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context18disableClientStateENS_21ClientVertexArrayTypeE(%"class.gl::Context"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  tail call void @_ZN2gl10GLES1State21setClientStateEnabledENS_21ClientVertexArrayTypeEb(%"class.gl::GLES1State"* %3, i8 zeroext %1, i1 zeroext false) #6
  %4 = tail call i32 @_ZN2gl13GLES1Renderer16VertexArrayIndexENS_21ClientVertexArrayTypeERKNS_10GLES1StateE(i8 zeroext %1, %"class.gl::GLES1State"* dereferenceable(1456) %3) #6
  tail call void @_ZN2gl7Context24disableVertexAttribArrayEj(%"class.gl::Context"* %0, i32 %4) #6
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  tail call void @_ZN2gl10StateCache24onGLES1ClientStateChangeEPNS_7ContextE(%"class.gl::StateCache"* %5, %"class.gl::Context"* %0) #6
  ret void
}

declare void @_ZN2gl10GLES1State21setClientStateEnabledENS_21ClientVertexArrayTypeEb(%"class.gl::GLES1State"*, i8 zeroext, i1 zeroext) local_unnamed_addr #1

declare void @_ZN2gl7Context24disableVertexAttribArrayEj(%"class.gl::Context"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17enableClientStateENS_21ClientVertexArrayTypeE(%"class.gl::Context"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  tail call void @_ZN2gl10GLES1State21setClientStateEnabledENS_21ClientVertexArrayTypeEb(%"class.gl::GLES1State"* %3, i8 zeroext %1, i1 zeroext true) #6
  %4 = tail call i32 @_ZN2gl13GLES1Renderer16VertexArrayIndexENS_21ClientVertexArrayTypeERKNS_10GLES1StateE(i8 zeroext %1, %"class.gl::GLES1State"* dereferenceable(1456) %3) #6
  tail call void @_ZN2gl7Context23enableVertexAttribArrayEj(%"class.gl::Context"* %0, i32 %4) #6
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 52
  tail call void @_ZN2gl10StateCache24onGLES1ClientStateChangeEPNS_7ContextE(%"class.gl::StateCache"* %5, %"class.gl::Context"* %0) #6
  ret void
}

declare void @_ZN2gl7Context23enableVertexAttribArrayEj(%"class.gl::Context"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context4fogfEjf(%"class.gl::Context"*, i32, float) local_unnamed_addr #0 align 2 {
  %4 = alloca float, align 4
  store float %2, float* %4, align 4
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  call void @_ZN2gl16SetFogParametersEPNS_10GLES1StateEjPKf(%"class.gl::GLES1State"* %5, i32 %1, float* nonnull %4) #6
  ret void
}

declare void @_ZN2gl16SetFogParametersEPNS_10GLES1StateEjPKf(%"class.gl::GLES1State"*, i32, float*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context5fogfvEjPKf(%"class.gl::Context"*, i32, float*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  tail call void @_ZN2gl16SetFogParametersEPNS_10GLES1StateEjPKf(%"class.gl::GLES1State"* %4, i32 %1, float* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context4fogxEji(%"class.gl::Context"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca float, align 4
  %5 = tail call i32 @_ZN2gl20GetFogParameterCountEj(i32 %1) #6
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %19

7:                                                ; preds = %3
  %8 = icmp eq i32 %1, 2917
  br i1 %8, label %9, label %12

9:                                                ; preds = %7
  %10 = tail call i32 @_ZN2gl16CastQueryValueToIjiEET_jT0_(i32 0, i32 %2) #6
  %11 = uitofp i32 %10 to float
  br label %15

12:                                               ; preds = %7
  %13 = uitofp i32 %2 to float
  %14 = fmul float %13, 0x3EF0000000000000
  br label %15

15:                                               ; preds = %12, %9
  %16 = phi float [ %11, %9 ], [ %14, %12 ]
  %17 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17)
  store float %16, float* %4, align 4
  %18 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  call void @_ZN2gl16SetFogParametersEPNS_10GLES1StateEjPKf(%"class.gl::GLES1State"* %18, i32 %1, float* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17)
  br label %19

19:                                               ; preds = %3, %15
  ret void
}

declare i32 @_ZN2gl20GetFogParameterCountEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context5fogxvEjPKi(%"class.gl::Context"*, i32, i32* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca [4 x float], align 16
  %5 = tail call i32 @_ZN2gl20GetFogParameterCountEj(i32 %1) #6
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %30

7:                                                ; preds = %3
  %8 = bitcast [4 x float]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #6
  %9 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 0
  %10 = icmp eq i32 %1, 2917
  %11 = zext i32 %5 to i64
  %12 = bitcast [4 x float]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -1, i64 16, i1 false)
  br label %15

13:                                               ; preds = %25
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  call void @_ZN2gl16SetFogParametersEPNS_10GLES1StateEjPKf(%"class.gl::GLES1State"* %14, i32 %1, float* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #6
  br label %30

15:                                               ; preds = %25, %7
  %16 = phi i64 [ 0, %7 ], [ %28, %25 ]
  %17 = getelementptr inbounds i32, i32* %2, i64 %16
  %18 = load i32, i32* %17, align 4
  br i1 %10, label %19, label %22

19:                                               ; preds = %15
  %20 = tail call i32 @_ZN2gl16CastQueryValueToIjiEET_jT0_(i32 0, i32 %18) #6
  %21 = uitofp i32 %20 to float
  br label %25

22:                                               ; preds = %15
  %23 = uitofp i32 %18 to float
  %24 = fmul float %23, 0x3EF0000000000000
  br label %25

25:                                               ; preds = %22, %19
  %26 = phi float [ %21, %19 ], [ %24, %22 ]
  %27 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 %16
  store float %26, float* %27, align 4
  %28 = add nuw nsw i64 %16, 1
  %29 = icmp eq i64 %28, %11
  br i1 %29, label %13, label %15

30:                                               ; preds = %3, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context8frustumfEffffff(%"class.gl::Context"*, float, float, float, float, float, float) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.angle::Mat4", align 8
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %10 = bitcast %"class.angle::Mat4"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #6
  call void @_ZN5angle4Mat47FrustumEffffff(%"class.angle::Mat4"* nonnull sret %8, float %1, float %2, float %3, float %4, float %5, float %6) #6
  call void @_ZN2gl10GLES1State10multMatrixERKN5angle4Mat4E(%"class.gl::GLES1State"* %9, %"class.angle::Mat4"* nonnull dereferenceable(32) %8) #6
  %11 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load float*, float** %11, align 8
  %13 = icmp eq float* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %7
  %15 = ptrtoint float* %12 to i64
  %16 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast float** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast float* %12 to i8*
  call void @_ZdlPv(i8* %18) #7
  br label %19

19:                                               ; preds = %7, %14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #6
  ret void
}

declare void @_ZN2gl10GLES1State10multMatrixERKN5angle4Mat4E(%"class.gl::GLES1State"*, %"class.angle::Mat4"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZN5angle4Mat47FrustumEffffff(%"class.angle::Mat4"* sret, float, float, float, float, float, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context8frustumxEiiiiii(%"class.gl::Context"*, i32, i32, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.angle::Mat4", align 8
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %10 = bitcast %"class.angle::Mat4"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #6
  %11 = uitofp i32 %1 to float
  %12 = fmul float %11, 0x3EF0000000000000
  %13 = uitofp i32 %2 to float
  %14 = fmul float %13, 0x3EF0000000000000
  %15 = uitofp i32 %3 to float
  %16 = fmul float %15, 0x3EF0000000000000
  %17 = uitofp i32 %4 to float
  %18 = fmul float %17, 0x3EF0000000000000
  %19 = uitofp i32 %5 to float
  %20 = fmul float %19, 0x3EF0000000000000
  %21 = uitofp i32 %6 to float
  %22 = fmul float %21, 0x3EF0000000000000
  call void @_ZN5angle4Mat47FrustumEffffff(%"class.angle::Mat4"* nonnull sret %8, float %12, float %14, float %16, float %18, float %20, float %22) #6
  call void @_ZN2gl10GLES1State10multMatrixERKN5angle4Mat4E(%"class.gl::GLES1State"* %9, %"class.angle::Mat4"* nonnull dereferenceable(32) %8) #6
  %23 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load float*, float** %23, align 8
  %25 = icmp eq float* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %7
  %27 = ptrtoint float* %24 to i64
  %28 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %29 = bitcast float** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast float* %24 to i8*
  call void @_ZdlPv(i8* %30) #7
  br label %31

31:                                               ; preds = %7, %26
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13getClipPlanefEjPf(%"class.gl::Context"*, i32, float*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %5 = add i32 %1, -12288
  tail call void @_ZNK2gl10GLES1State12getClipPlaneEjPf(%"class.gl::GLES1State"* %4, i32 %5, float* %2) #6
  ret void
}

declare void @_ZNK2gl10GLES1State12getClipPlaneEjPf(%"class.gl::GLES1State"*, i32, float*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13getClipPlanexEjPi(%"class.gl::Context"*, i32, i32* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca [4 x float], align 16
  %5 = bitcast [4 x float]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 0, i64 16, i1 false)
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %7 = add i32 %1, -12288
  %8 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 0
  call void @_ZNK2gl10GLES1State12getClipPlaneEjPf(%"class.gl::GLES1State"* %6, i32 %7, float* nonnull %8) #6
  %9 = load float, float* %8, align 16
  %10 = fpext float %9 to double
  %11 = fcmp ogt double %10, 0x40DFFFE9F141205C
  br i1 %11, label %17, label %12

12:                                               ; preds = %3
  %13 = fcmp olt double %10, 0xC0E00014F8A0902E
  br i1 %13, label %17, label %14

14:                                               ; preds = %12
  %15 = fmul float %9, 6.553600e+04
  %16 = fptoui float %15 to i32
  br label %17

17:                                               ; preds = %3, %12, %14
  %18 = phi i32 [ %16, %14 ], [ 2147483647, %3 ], [ -2147418113, %12 ]
  store i32 %18, i32* %2, align 4
  %19 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 1
  %20 = load float, float* %19, align 4
  %21 = fpext float %20 to double
  %22 = fcmp ogt double %21, 0x40DFFFE9F141205C
  br i1 %22, label %28, label %23

23:                                               ; preds = %17
  %24 = fcmp olt double %21, 0xC0E00014F8A0902E
  br i1 %24, label %28, label %25

25:                                               ; preds = %23
  %26 = fmul float %20, 6.553600e+04
  %27 = fptoui float %26 to i32
  br label %28

28:                                               ; preds = %25, %23, %17
  %29 = phi i32 [ %27, %25 ], [ 2147483647, %17 ], [ -2147418113, %23 ]
  %30 = getelementptr inbounds i32, i32* %2, i64 1
  store i32 %29, i32* %30, align 4
  %31 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 2
  %32 = load float, float* %31, align 8
  %33 = fpext float %32 to double
  %34 = fcmp ogt double %33, 0x40DFFFE9F141205C
  br i1 %34, label %40, label %35

35:                                               ; preds = %28
  %36 = fcmp olt double %33, 0xC0E00014F8A0902E
  br i1 %36, label %40, label %37

37:                                               ; preds = %35
  %38 = fmul float %32, 6.553600e+04
  %39 = fptoui float %38 to i32
  br label %40

40:                                               ; preds = %37, %35, %28
  %41 = phi i32 [ %39, %37 ], [ 2147483647, %28 ], [ -2147418113, %35 ]
  %42 = getelementptr inbounds i32, i32* %2, i64 2
  store i32 %41, i32* %42, align 4
  %43 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 3
  %44 = load float, float* %43, align 4
  %45 = fpext float %44 to double
  %46 = fcmp ogt double %45, 0x40DFFFE9F141205C
  br i1 %46, label %52, label %47

47:                                               ; preds = %40
  %48 = fcmp olt double %45, 0xC0E00014F8A0902E
  br i1 %48, label %52, label %49

49:                                               ; preds = %47
  %50 = fmul float %44, 6.553600e+04
  %51 = fptoui float %50 to i32
  br label %52

52:                                               ; preds = %49, %47, %40
  %53 = phi i32 [ %51, %49 ], [ 2147483647, %40 ], [ -2147418113, %47 ]
  %54 = getelementptr inbounds i32, i32* %2, i64 3
  store i32 %53, i32* %54, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context9getFixedvEjPi(%"class.gl::Context"*, i32, i32* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #6
  store i32 -1431655766, i32* %4, align 4
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #6
  store i32 0, i32* %5, align 4
  %8 = call zeroext i1 @_ZNK2gl7Context21getQueryParameterInfoEjPjS1_(%"class.gl::Context"* %0, i32 %1, i32* nonnull %4, i32* nonnull %5) #6
  %9 = load i32, i32* %5, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %3
  %12 = zext i32 %9 to i64
  %13 = shl nuw nsw i64 %12, 2
  %14 = call i8* @_Znwm(i64 %13) #7
  %15 = bitcast i8* %14 to float*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 0, i64 %13, i1 false)
  br label %16

16:                                               ; preds = %11, %3
  %17 = phi i8* [ null, %3 ], [ %14, %11 ]
  %18 = phi float* [ null, %3 ], [ %15, %11 ]
  %19 = load i32, i32* %4, align 4
  call void @_ZN2gl15CastStateValuesIfEEvPKNS_7ContextEjjjPT_(%"class.gl::Context"* %0, i32 %19, i32 %1, i32 %9, float* %18) #6
  %20 = load i32, i32* %5, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %44, label %22

22:                                               ; preds = %16
  %23 = zext i32 %20 to i64
  %24 = and i64 %23, 1
  %25 = icmp eq i32 %20, 1
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = sub nsw i64 %23, %24
  br label %48

28:                                               ; preds = %73, %22
  %29 = phi i64 [ 0, %22 ], [ %76, %73 ]
  %30 = icmp eq i64 %24, 0
  br i1 %30, label %44, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds float, float* %18, i64 %29
  %33 = load float, float* %32, align 4
  %34 = fpext float %33 to double
  %35 = fcmp ogt double %34, 0x40DFFFE9F141205C
  br i1 %35, label %41, label %36

36:                                               ; preds = %31
  %37 = fcmp olt double %34, 0xC0E00014F8A0902E
  br i1 %37, label %41, label %38

38:                                               ; preds = %36
  %39 = fmul float %33, 6.553600e+04
  %40 = fptoui float %39 to i32
  br label %41

41:                                               ; preds = %38, %36, %31
  %42 = phi i32 [ %40, %38 ], [ 2147483647, %31 ], [ -2147418113, %36 ]
  %43 = getelementptr inbounds i32, i32* %2, i64 %29
  store i32 %42, i32* %43, align 4
  br label %44

44:                                               ; preds = %41, %28, %16
  %45 = icmp eq float* %18, null
  br i1 %45, label %47, label %46

46:                                               ; preds = %44
  call void @_ZdlPv(i8* %17) #7
  br label %47

47:                                               ; preds = %44, %46
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #6
  ret void

48:                                               ; preds = %73, %26
  %49 = phi i64 [ 0, %26 ], [ %76, %73 ]
  %50 = phi i64 [ %27, %26 ], [ %77, %73 ]
  %51 = getelementptr inbounds float, float* %18, i64 %49
  %52 = load float, float* %51, align 4
  %53 = fpext float %52 to double
  %54 = fcmp ogt double %53, 0x40DFFFE9F141205C
  br i1 %54, label %60, label %55

55:                                               ; preds = %48
  %56 = fcmp olt double %53, 0xC0E00014F8A0902E
  br i1 %56, label %60, label %57

57:                                               ; preds = %55
  %58 = fmul float %52, 6.553600e+04
  %59 = fptoui float %58 to i32
  br label %60

60:                                               ; preds = %48, %55, %57
  %61 = phi i32 [ %59, %57 ], [ 2147483647, %48 ], [ -2147418113, %55 ]
  %62 = getelementptr inbounds i32, i32* %2, i64 %49
  store i32 %61, i32* %62, align 4
  %63 = or i64 %49, 1
  %64 = getelementptr inbounds float, float* %18, i64 %63
  %65 = load float, float* %64, align 4
  %66 = fpext float %65 to double
  %67 = fcmp ogt double %66, 0x40DFFFE9F141205C
  br i1 %67, label %73, label %68

68:                                               ; preds = %60
  %69 = fcmp olt double %66, 0xC0E00014F8A0902E
  br i1 %69, label %73, label %70

70:                                               ; preds = %68
  %71 = fmul float %65, 6.553600e+04
  %72 = fptoui float %71 to i32
  br label %73

73:                                               ; preds = %70, %68, %60
  %74 = phi i32 [ %72, %70 ], [ 2147483647, %60 ], [ -2147418113, %68 ]
  %75 = getelementptr inbounds i32, i32* %2, i64 %63
  store i32 %74, i32* %75, align 4
  %76 = add nuw nsw i64 %49, 2
  %77 = add i64 %50, -2
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %28, label %48
}

declare zeroext i1 @_ZNK2gl7Context21getQueryParameterInfoEjPjS1_(%"class.gl::Context"*, i32, i32*, i32*) local_unnamed_addr #1

declare void @_ZN2gl15CastStateValuesIfEEvPKNS_7ContextEjjjPT_(%"class.gl::Context"*, i32, i32, i32, float*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10getLightfvEjNS_14LightParameterEPf(%"class.gl::Context"*, i32, i8 zeroext, float*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  tail call void @_ZN2gl18GetLightParametersEPKNS_10GLES1StateEjNS_14LightParameterEPf(%"class.gl::GLES1State"* %5, i32 %1, i8 zeroext %2, float* %3) #6
  ret void
}

declare void @_ZN2gl18GetLightParametersEPKNS_10GLES1StateEjNS_14LightParameterEPf(%"class.gl::GLES1State"*, i32, i8 zeroext, float*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10getLightxvEjNS_14LightParameterEPi(%"class.gl::Context"*, i32, i8 zeroext, i32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca [4 x float], align 16
  %6 = bitcast [4 x float]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #6
  %7 = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, i64 0
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %9 = bitcast [4 x float]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -1, i64 16, i1 false)
  call void @_ZN2gl18GetLightParametersEPKNS_10GLES1StateEjNS_14LightParameterEPf(%"class.gl::GLES1State"* %8, i32 %1, i8 zeroext %2, float* nonnull %7) #6
  %10 = call i32 @_ZN2gl22GetLightParameterCountENS_14LightParameterE(i8 zeroext %2) #6
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %24, %4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #6
  ret void

13:                                               ; preds = %4, %24
  %14 = phi i64 [ %27, %24 ], [ 0, %4 ]
  %15 = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, i64 %14
  %16 = load float, float* %15, align 4
  %17 = fpext float %16 to double
  %18 = fcmp ogt double %17, 0x40DFFFE9F141205C
  br i1 %18, label %24, label %19

19:                                               ; preds = %13
  %20 = fcmp olt double %17, 0xC0E00014F8A0902E
  br i1 %20, label %24, label %21

21:                                               ; preds = %19
  %22 = fmul float %16, 6.553600e+04
  %23 = fptoui float %22 to i32
  br label %24

24:                                               ; preds = %13, %19, %21
  %25 = phi i32 [ %23, %21 ], [ 2147483647, %13 ], [ -2147418113, %19 ]
  %26 = getelementptr inbounds i32, i32* %3, i64 %14
  store i32 %25, i32* %26, align 4
  %27 = add nuw nsw i64 %14, 1
  %28 = call i32 @_ZN2gl22GetLightParameterCountENS_14LightParameterE(i8 zeroext %2) #6
  %29 = zext i32 %28 to i64
  %30 = icmp ult i64 %27, %29
  br i1 %30, label %13, label %12
}

declare i32 @_ZN2gl22GetLightParameterCountENS_14LightParameterE(i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13getMaterialfvEjNS_17MaterialParameterEPf(%"class.gl::Context"*, i32, i8 zeroext, float*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  tail call void @_ZN2gl21GetMaterialParametersEPKNS_10GLES1StateEjNS_17MaterialParameterEPf(%"class.gl::GLES1State"* %5, i32 %1, i8 zeroext %2, float* %3) #6
  ret void
}

declare void @_ZN2gl21GetMaterialParametersEPKNS_10GLES1StateEjNS_17MaterialParameterEPf(%"class.gl::GLES1State"*, i32, i8 zeroext, float*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13getMaterialxvEjNS_17MaterialParameterEPi(%"class.gl::Context"*, i32, i8 zeroext, i32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca [4 x float], align 16
  %6 = bitcast [4 x float]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #6
  %7 = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, i64 0
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %9 = bitcast [4 x float]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -1, i64 16, i1 false)
  call void @_ZN2gl21GetMaterialParametersEPKNS_10GLES1StateEjNS_17MaterialParameterEPf(%"class.gl::GLES1State"* %8, i32 %1, i8 zeroext %2, float* nonnull %7) #6
  %10 = call i32 @_ZN2gl25GetMaterialParameterCountENS_17MaterialParameterE(i8 zeroext %2) #6
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %24, %4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #6
  ret void

13:                                               ; preds = %4, %24
  %14 = phi i64 [ %27, %24 ], [ 0, %4 ]
  %15 = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, i64 %14
  %16 = load float, float* %15, align 4
  %17 = fpext float %16 to double
  %18 = fcmp ogt double %17, 0x40DFFFE9F141205C
  br i1 %18, label %24, label %19

19:                                               ; preds = %13
  %20 = fcmp olt double %17, 0xC0E00014F8A0902E
  br i1 %20, label %24, label %21

21:                                               ; preds = %19
  %22 = fmul float %16, 6.553600e+04
  %23 = fptoui float %22 to i32
  br label %24

24:                                               ; preds = %13, %19, %21
  %25 = phi i32 [ %23, %21 ], [ 2147483647, %13 ], [ -2147418113, %19 ]
  %26 = getelementptr inbounds i32, i32* %3, i64 %14
  store i32 %25, i32* %26, align 4
  %27 = add nuw nsw i64 %14, 1
  %28 = call i32 @_ZN2gl25GetMaterialParameterCountENS_17MaterialParameterE(i8 zeroext %2) #6
  %29 = zext i32 %28 to i64
  %30 = icmp ult i64 %27, %29
  br i1 %30, label %13, label %12
}

declare i32 @_ZN2gl25GetMaterialParameterCountENS_17MaterialParameterE(i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11getTexEnvfvENS_16TextureEnvTargetENS_19TextureEnvParameterEPf(%"class.gl::Context"*, i8 zeroext, i8 zeroext, float*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 71
  %6 = load i64, i64* %5, align 8
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  tail call void @_ZN2gl13GetTextureEnvEjPKNS_10GLES1StateENS_16TextureEnvTargetENS_19TextureEnvParameterEPf(i32 %7, %"class.gl::GLES1State"* %8, i8 zeroext %1, i8 zeroext %2, float* %3) #6
  ret void
}

declare void @_ZN2gl13GetTextureEnvEjPKNS_10GLES1StateENS_16TextureEnvTargetENS_19TextureEnvParameterEPf(i32, %"class.gl::GLES1State"*, i8 zeroext, i8 zeroext, float*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11getTexEnvivENS_16TextureEnvTargetENS_19TextureEnvParameterEPi(%"class.gl::Context"*, i8 zeroext, i8 zeroext, i32*) local_unnamed_addr #0 align 2 {
  %5 = alloca [4 x float], align 16
  %6 = bitcast [4 x float]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #6
  %7 = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, i64 0
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 71
  %9 = bitcast [4 x float]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -1, i64 16, i1 false)
  %10 = load i64, i64* %8, align 8
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  call void @_ZN2gl13GetTextureEnvEjPKNS_10GLES1StateENS_16TextureEnvTargetENS_19TextureEnvParameterEPf(i32 %11, %"class.gl::GLES1State"* %12, i8 zeroext %1, i8 zeroext %2, float* nonnull %7) #6
  call void @_ZN2gl22ConvertTextureEnvToIntENS_19TextureEnvParameterEPKfPi(i8 zeroext %2, float* nonnull %7, i32* %3) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #6
  ret void
}

declare void @_ZN2gl22ConvertTextureEnvToIntENS_19TextureEnvParameterEPKfPi(i8 zeroext, float*, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11getTexEnvxvENS_16TextureEnvTargetENS_19TextureEnvParameterEPi(%"class.gl::Context"*, i8 zeroext, i8 zeroext, i32*) local_unnamed_addr #0 align 2 {
  %5 = alloca [4 x float], align 16
  %6 = bitcast [4 x float]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #6
  %7 = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, i64 0
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 71
  %9 = bitcast [4 x float]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -1, i64 16, i1 false)
  %10 = load i64, i64* %8, align 8
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  call void @_ZN2gl13GetTextureEnvEjPKNS_10GLES1StateENS_16TextureEnvTargetENS_19TextureEnvParameterEPf(i32 %11, %"class.gl::GLES1State"* %12, i8 zeroext %1, i8 zeroext %2, float* nonnull %7) #6
  call void @_ZN2gl24ConvertTextureEnvToFixedENS_19TextureEnvParameterEPKfPi(i8 zeroext %2, float* nonnull %7, i32* %3) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #6
  ret void
}

declare void @_ZN2gl24ConvertTextureEnvToFixedENS_19TextureEnvParameterEPKfPi(i8 zeroext, float*, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context17getTexParameterxvENS_11TextureTypeEjPi(%"class.gl::Context"*, i8 zeroext, i32, i32*) local_unnamed_addr #0 align 2 {
  %5 = tail call %"class.gl::Texture"* @_ZNK2gl7Context16getTextureByTypeENS_11TextureTypeE(%"class.gl::Context"* %0, i8 zeroext %1) #6
  tail call void @_ZN2gl19QueryTexParameterxvEPKNS_7ContextEPKNS_7TextureEjPi(%"class.gl::Context"* %0, %"class.gl::Texture"* %5, i32 %2, i32* %3) #6
  ret void
}

declare %"class.gl::Texture"* @_ZNK2gl7Context16getTextureByTypeENS_11TextureTypeE(%"class.gl::Context"*, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2gl19QueryTexParameterxvEPKNS_7ContextEPKNS_7TextureEjPi(%"class.gl::Context"*, %"class.gl::Texture"*, i32, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11lightModelfEjf(%"class.gl::Context"*, i32, float) local_unnamed_addr #0 align 2 {
  %4 = alloca float, align 4
  store float %2, float* %4, align 4
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  call void @_ZN2gl23SetLightModelParametersEPNS_10GLES1StateEjPKf(%"class.gl::GLES1State"* %5, i32 %1, float* nonnull %4) #6
  ret void
}

declare void @_ZN2gl23SetLightModelParametersEPNS_10GLES1StateEjPKf(%"class.gl::GLES1State"*, i32, float*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context12lightModelfvEjPKf(%"class.gl::Context"*, i32, float*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  tail call void @_ZN2gl23SetLightModelParametersEPNS_10GLES1StateEjPKf(%"class.gl::GLES1State"* %4, i32 %1, float* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11lightModelxEji(%"class.gl::Context"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca float, align 4
  %5 = uitofp i32 %2 to float
  %6 = fmul float %5, 0x3EF0000000000000
  %7 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7)
  store float %6, float* %4, align 4
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  call void @_ZN2gl23SetLightModelParametersEPNS_10GLES1StateEjPKf(%"class.gl::GLES1State"* %8, i32 %1, float* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context12lightModelxvEjPKi(%"class.gl::Context"*, i32, i32* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca [4 x float], align 16
  %5 = bitcast [4 x float]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #6
  %6 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 0
  %7 = bitcast [4 x float]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -1, i64 16, i1 false)
  %8 = tail call i32 @_ZN2gl27GetLightModelParameterCountEj(i32 %1) #6
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %12, %3
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  call void @_ZN2gl23SetLightModelParametersEPNS_10GLES1StateEjPKf(%"class.gl::GLES1State"* %11, i32 %1, float* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #6
  ret void

12:                                               ; preds = %3, %12
  %13 = phi i64 [ %19, %12 ], [ 0, %3 ]
  %14 = getelementptr inbounds i32, i32* %2, i64 %13
  %15 = load i32, i32* %14, align 4
  %16 = uitofp i32 %15 to float
  %17 = fmul float %16, 0x3EF0000000000000
  %18 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 %13
  store float %17, float* %18, align 4
  %19 = add nuw nsw i64 %13, 1
  %20 = tail call i32 @_ZN2gl27GetLightModelParameterCountEj(i32 %1) #6
  %21 = zext i32 %20 to i64
  %22 = icmp ult i64 %19, %21
  br i1 %22, label %12, label %10
}

declare i32 @_ZN2gl27GetLightModelParameterCountEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context6lightfEjNS_14LightParameterEf(%"class.gl::Context"*, i32, i8 zeroext, float) local_unnamed_addr #0 align 2 {
  %5 = alloca float, align 4
  store float %3, float* %5, align 4
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  call void @_ZN2gl18SetLightParametersEPNS_10GLES1StateEjNS_14LightParameterEPKf(%"class.gl::GLES1State"* %6, i32 %1, i8 zeroext %2, float* nonnull %5) #6
  ret void
}

declare void @_ZN2gl18SetLightParametersEPNS_10GLES1StateEjNS_14LightParameterEPKf(%"class.gl::GLES1State"*, i32, i8 zeroext, float*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context7lightfvEjNS_14LightParameterEPKf(%"class.gl::Context"*, i32, i8 zeroext, float*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  tail call void @_ZN2gl18SetLightParametersEPNS_10GLES1StateEjNS_14LightParameterEPKf(%"class.gl::GLES1State"* %5, i32 %1, i8 zeroext %2, float* %3) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context6lightxEjNS_14LightParameterEi(%"class.gl::Context"*, i32, i8 zeroext, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca float, align 4
  %6 = uitofp i32 %3 to float
  %7 = fmul float %6, 0x3EF0000000000000
  %8 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8)
  store float %7, float* %5, align 4
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  call void @_ZN2gl18SetLightParametersEPNS_10GLES1StateEjNS_14LightParameterEPKf(%"class.gl::GLES1State"* %9, i32 %1, i8 zeroext %2, float* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context7lightxvEjNS_14LightParameterEPKi(%"class.gl::Context"*, i32, i8 zeroext, i32* nocapture readonly) local_unnamed_addr #0 align 2 {
  %5 = alloca [4 x float], align 16
  %6 = bitcast [4 x float]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #6
  %7 = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, i64 0
  %8 = bitcast [4 x float]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -1, i64 16, i1 false)
  %9 = tail call i32 @_ZN2gl22GetLightParameterCountENS_14LightParameterE(i8 zeroext %2) #6
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %13, %4
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  call void @_ZN2gl18SetLightParametersEPNS_10GLES1StateEjNS_14LightParameterEPKf(%"class.gl::GLES1State"* %12, i32 %1, i8 zeroext %2, float* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #6
  ret void

13:                                               ; preds = %4, %13
  %14 = phi i64 [ %20, %13 ], [ 0, %4 ]
  %15 = getelementptr inbounds i32, i32* %3, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = uitofp i32 %16 to float
  %18 = fmul float %17, 0x3EF0000000000000
  %19 = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, i64 %14
  store float %18, float* %19, align 4
  %20 = add nuw nsw i64 %14, 1
  %21 = tail call i32 @_ZN2gl22GetLightParameterCountENS_14LightParameterE(i8 zeroext %2) #6
  %22 = zext i32 %21 to i64
  %23 = icmp ult i64 %20, %22
  br i1 %23, label %13, label %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10lineWidthxEi(%"class.gl::Context"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %4 = uitofp i32 %1 to float
  %5 = fmul float %4, 0x3EF0000000000000
  tail call void @_ZN2gl5State12setLineWidthEf(%"class.gl::State"* %3, float %5) #6
  ret void
}

declare void @_ZN2gl5State12setLineWidthEf(%"class.gl::State"*, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context12loadIdentityEv(%"class.gl::Context"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.angle::Mat4", align 8
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %4 = bitcast %"class.angle::Mat4"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #6
  call void @_ZN5angle4Mat4C1Ev(%"class.angle::Mat4"* nonnull %2) #6
  call void @_ZN2gl10GLES1State10loadMatrixERKN5angle4Mat4E(%"class.gl::GLES1State"* %3, %"class.angle::Mat4"* nonnull dereferenceable(32) %2) #6
  %5 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load float*, float** %5, align 8
  %7 = icmp eq float* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = ptrtoint float* %6 to i64
  %10 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast float** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = bitcast float* %6 to i8*
  call void @_ZdlPv(i8* %12) #7
  br label %13

13:                                               ; preds = %1, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #6
  ret void
}

declare void @_ZN2gl10GLES1State10loadMatrixERKN5angle4Mat4E(%"class.gl::GLES1State"*, %"class.angle::Mat4"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZN5angle4Mat4C1Ev(%"class.angle::Mat4"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11loadMatrixfEPKf(%"class.gl::Context"*, float*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.angle::Mat4", align 8
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %5 = bitcast %"class.angle::Mat4"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #6
  call void @_ZN5angle4Mat4C1EPKf(%"class.angle::Mat4"* nonnull %3, float* %1) #6
  call void @_ZN2gl10GLES1State10loadMatrixERKN5angle4Mat4E(%"class.gl::GLES1State"* %4, %"class.angle::Mat4"* nonnull dereferenceable(32) %3) #6
  %6 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load float*, float** %6, align 8
  %8 = icmp eq float* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = ptrtoint float* %7 to i64
  %11 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast float** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = bitcast float* %7 to i8*
  call void @_ZdlPv(i8* %13) #7
  br label %14

14:                                               ; preds = %2, %9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #6
  ret void
}

declare void @_ZN5angle4Mat4C1EPKf(%"class.angle::Mat4"*, float*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11loadMatrixxEPKi(%"class.gl::Context"*, i32* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.angle::Mat4", align 8
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %5 = bitcast %"class.angle::Mat4"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 32, i1 false) #6, !alias.scope !2
  call void @_ZN5angle4Mat4C1Ev(%"class.angle::Mat4"* nonnull %3) #6
  %7 = load float*, float** %6, align 8, !alias.scope !2
  %8 = load i32, i32* %1, align 4, !noalias !2
  %9 = uitofp i32 %8 to float
  %10 = fmul float %9, 0x3EF0000000000000
  store float %10, float* %7, align 4
  %11 = getelementptr inbounds i32, i32* %1, i64 1
  %12 = load i32, i32* %11, align 4, !noalias !2
  %13 = uitofp i32 %12 to float
  %14 = fmul float %13, 0x3EF0000000000000
  %15 = getelementptr inbounds float, float* %7, i64 1
  store float %14, float* %15, align 4
  %16 = getelementptr inbounds i32, i32* %1, i64 2
  %17 = load i32, i32* %16, align 4, !noalias !2
  %18 = uitofp i32 %17 to float
  %19 = fmul float %18, 0x3EF0000000000000
  %20 = getelementptr inbounds float, float* %7, i64 2
  store float %19, float* %20, align 4
  %21 = getelementptr inbounds i32, i32* %1, i64 3
  %22 = load i32, i32* %21, align 4, !noalias !2
  %23 = uitofp i32 %22 to float
  %24 = fmul float %23, 0x3EF0000000000000
  %25 = getelementptr inbounds float, float* %7, i64 3
  store float %24, float* %25, align 4
  %26 = getelementptr inbounds i32, i32* %1, i64 4
  %27 = load i32, i32* %26, align 4, !noalias !2
  %28 = uitofp i32 %27 to float
  %29 = fmul float %28, 0x3EF0000000000000
  %30 = getelementptr inbounds float, float* %7, i64 4
  store float %29, float* %30, align 4
  %31 = getelementptr inbounds i32, i32* %1, i64 5
  %32 = load i32, i32* %31, align 4, !noalias !2
  %33 = uitofp i32 %32 to float
  %34 = fmul float %33, 0x3EF0000000000000
  %35 = getelementptr inbounds float, float* %7, i64 5
  store float %34, float* %35, align 4
  %36 = getelementptr inbounds i32, i32* %1, i64 6
  %37 = load i32, i32* %36, align 4, !noalias !2
  %38 = uitofp i32 %37 to float
  %39 = fmul float %38, 0x3EF0000000000000
  %40 = getelementptr inbounds float, float* %7, i64 6
  store float %39, float* %40, align 4
  %41 = getelementptr inbounds i32, i32* %1, i64 7
  %42 = load i32, i32* %41, align 4, !noalias !2
  %43 = uitofp i32 %42 to float
  %44 = fmul float %43, 0x3EF0000000000000
  %45 = getelementptr inbounds float, float* %7, i64 7
  store float %44, float* %45, align 4
  %46 = getelementptr inbounds i32, i32* %1, i64 8
  %47 = load i32, i32* %46, align 4, !noalias !2
  %48 = uitofp i32 %47 to float
  %49 = fmul float %48, 0x3EF0000000000000
  %50 = getelementptr inbounds float, float* %7, i64 8
  store float %49, float* %50, align 4
  %51 = getelementptr inbounds i32, i32* %1, i64 9
  %52 = load i32, i32* %51, align 4, !noalias !2
  %53 = uitofp i32 %52 to float
  %54 = fmul float %53, 0x3EF0000000000000
  %55 = getelementptr inbounds float, float* %7, i64 9
  store float %54, float* %55, align 4
  %56 = getelementptr inbounds i32, i32* %1, i64 10
  %57 = load i32, i32* %56, align 4, !noalias !2
  %58 = uitofp i32 %57 to float
  %59 = fmul float %58, 0x3EF0000000000000
  %60 = getelementptr inbounds float, float* %7, i64 10
  store float %59, float* %60, align 4
  %61 = getelementptr inbounds i32, i32* %1, i64 11
  %62 = load i32, i32* %61, align 4, !noalias !2
  %63 = uitofp i32 %62 to float
  %64 = fmul float %63, 0x3EF0000000000000
  %65 = getelementptr inbounds float, float* %7, i64 11
  store float %64, float* %65, align 4
  %66 = getelementptr inbounds i32, i32* %1, i64 12
  %67 = load i32, i32* %66, align 4, !noalias !2
  %68 = uitofp i32 %67 to float
  %69 = fmul float %68, 0x3EF0000000000000
  %70 = getelementptr inbounds float, float* %7, i64 12
  store float %69, float* %70, align 4
  %71 = getelementptr inbounds i32, i32* %1, i64 13
  %72 = load i32, i32* %71, align 4, !noalias !2
  %73 = uitofp i32 %72 to float
  %74 = fmul float %73, 0x3EF0000000000000
  %75 = getelementptr inbounds float, float* %7, i64 13
  store float %74, float* %75, align 4
  %76 = getelementptr inbounds i32, i32* %1, i64 14
  %77 = load i32, i32* %76, align 4, !noalias !2
  %78 = uitofp i32 %77 to float
  %79 = fmul float %78, 0x3EF0000000000000
  %80 = getelementptr inbounds float, float* %7, i64 14
  store float %79, float* %80, align 4
  %81 = getelementptr inbounds i32, i32* %1, i64 15
  %82 = load i32, i32* %81, align 4, !noalias !2
  %83 = uitofp i32 %82 to float
  %84 = fmul float %83, 0x3EF0000000000000
  %85 = getelementptr inbounds float, float* %7, i64 15
  store float %84, float* %85, align 4
  call void @_ZN2gl10GLES1State10loadMatrixERKN5angle4Mat4E(%"class.gl::GLES1State"* %4, %"class.angle::Mat4"* nonnull dereferenceable(32) %3) #6
  %86 = load float*, float** %6, align 8
  %87 = icmp eq float* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %2
  %89 = ptrtoint float* %86 to i64
  %90 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %91 = bitcast float** %90 to i64*
  store i64 %89, i64* %91, align 8
  %92 = bitcast float* %86 to i8*
  call void @_ZdlPv(i8* %92) #7
  br label %93

93:                                               ; preds = %2, %88
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context7logicOpENS_16LogicalOperationE(%"class.gl::Context"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  tail call void @_ZN2gl10GLES1State10setLogicOpENS_16LogicalOperationE(%"class.gl::GLES1State"* %3, i8 zeroext %1) #6
  ret void
}

declare void @_ZN2gl10GLES1State10setLogicOpENS_16LogicalOperationE(%"class.gl::GLES1State"*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context9materialfEjNS_17MaterialParameterEf(%"class.gl::Context"*, i32, i8 zeroext, float) local_unnamed_addr #0 align 2 {
  %5 = alloca float, align 4
  store float %3, float* %5, align 4
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  call void @_ZN2gl21SetMaterialParametersEPNS_10GLES1StateEjNS_17MaterialParameterEPKf(%"class.gl::GLES1State"* %6, i32 %1, i8 zeroext %2, float* nonnull %5) #6
  ret void
}

declare void @_ZN2gl21SetMaterialParametersEPNS_10GLES1StateEjNS_17MaterialParameterEPKf(%"class.gl::GLES1State"*, i32, i8 zeroext, float*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10materialfvEjNS_17MaterialParameterEPKf(%"class.gl::Context"*, i32, i8 zeroext, float*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  tail call void @_ZN2gl21SetMaterialParametersEPNS_10GLES1StateEjNS_17MaterialParameterEPKf(%"class.gl::GLES1State"* %5, i32 %1, i8 zeroext %2, float* %3) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context9materialxEjNS_17MaterialParameterEi(%"class.gl::Context"*, i32, i8 zeroext, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca float, align 4
  %6 = uitofp i32 %3 to float
  %7 = fmul float %6, 0x3EF0000000000000
  %8 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8)
  store float %7, float* %5, align 4
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  call void @_ZN2gl21SetMaterialParametersEPNS_10GLES1StateEjNS_17MaterialParameterEPKf(%"class.gl::GLES1State"* %9, i32 %1, i8 zeroext %2, float* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10materialxvEjNS_17MaterialParameterEPKi(%"class.gl::Context"*, i32, i8 zeroext, i32* nocapture readonly) local_unnamed_addr #0 align 2 {
  %5 = alloca [4 x float], align 16
  %6 = bitcast [4 x float]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #6
  %7 = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, i64 0
  %8 = bitcast [4 x float]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -1, i64 16, i1 false)
  %9 = tail call i32 @_ZN2gl25GetMaterialParameterCountENS_17MaterialParameterE(i8 zeroext %2) #6
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %13, %4
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  call void @_ZN2gl21SetMaterialParametersEPNS_10GLES1StateEjNS_17MaterialParameterEPKf(%"class.gl::GLES1State"* %12, i32 %1, i8 zeroext %2, float* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #6
  ret void

13:                                               ; preds = %4, %13
  %14 = phi i64 [ %20, %13 ], [ 0, %4 ]
  %15 = getelementptr inbounds i32, i32* %3, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = uitofp i32 %16 to float
  %18 = fmul float %17, 0x3EF0000000000000
  %19 = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, i64 %14
  store float %18, float* %19, align 4
  %20 = add nuw nsw i64 %14, 1
  %21 = tail call i32 @_ZN2gl25GetMaterialParameterCountENS_17MaterialParameterE(i8 zeroext %2) #6
  %22 = zext i32 %21 to i64
  %23 = icmp ult i64 %20, %22
  br i1 %23, label %13, label %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10matrixModeENS_10MatrixTypeE(%"class.gl::Context"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  tail call void @_ZN2gl10GLES1State13setMatrixModeENS_10MatrixTypeE(%"class.gl::GLES1State"* %3, i8 zeroext %1) #6
  ret void
}

declare void @_ZN2gl10GLES1State13setMatrixModeENS_10MatrixTypeE(%"class.gl::GLES1State"*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11multMatrixfEPKf(%"class.gl::Context"*, float*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.angle::Mat4", align 8
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %5 = bitcast %"class.angle::Mat4"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #6
  call void @_ZN5angle4Mat4C1EPKf(%"class.angle::Mat4"* nonnull %3, float* %1) #6
  call void @_ZN2gl10GLES1State10multMatrixERKN5angle4Mat4E(%"class.gl::GLES1State"* %4, %"class.angle::Mat4"* nonnull dereferenceable(32) %3) #6
  %6 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load float*, float** %6, align 8
  %8 = icmp eq float* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = ptrtoint float* %7 to i64
  %11 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast float** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = bitcast float* %7 to i8*
  call void @_ZdlPv(i8* %13) #7
  br label %14

14:                                               ; preds = %2, %9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context11multMatrixxEPKi(%"class.gl::Context"*, i32* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.angle::Mat4", align 8
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %5 = bitcast %"class.angle::Mat4"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 32, i1 false) #6, !alias.scope !5
  call void @_ZN5angle4Mat4C1Ev(%"class.angle::Mat4"* nonnull %3) #6
  %7 = load float*, float** %6, align 8, !alias.scope !5
  %8 = load i32, i32* %1, align 4, !noalias !5
  %9 = uitofp i32 %8 to float
  %10 = fmul float %9, 0x3EF0000000000000
  store float %10, float* %7, align 4
  %11 = getelementptr inbounds i32, i32* %1, i64 1
  %12 = load i32, i32* %11, align 4, !noalias !5
  %13 = uitofp i32 %12 to float
  %14 = fmul float %13, 0x3EF0000000000000
  %15 = getelementptr inbounds float, float* %7, i64 1
  store float %14, float* %15, align 4
  %16 = getelementptr inbounds i32, i32* %1, i64 2
  %17 = load i32, i32* %16, align 4, !noalias !5
  %18 = uitofp i32 %17 to float
  %19 = fmul float %18, 0x3EF0000000000000
  %20 = getelementptr inbounds float, float* %7, i64 2
  store float %19, float* %20, align 4
  %21 = getelementptr inbounds i32, i32* %1, i64 3
  %22 = load i32, i32* %21, align 4, !noalias !5
  %23 = uitofp i32 %22 to float
  %24 = fmul float %23, 0x3EF0000000000000
  %25 = getelementptr inbounds float, float* %7, i64 3
  store float %24, float* %25, align 4
  %26 = getelementptr inbounds i32, i32* %1, i64 4
  %27 = load i32, i32* %26, align 4, !noalias !5
  %28 = uitofp i32 %27 to float
  %29 = fmul float %28, 0x3EF0000000000000
  %30 = getelementptr inbounds float, float* %7, i64 4
  store float %29, float* %30, align 4
  %31 = getelementptr inbounds i32, i32* %1, i64 5
  %32 = load i32, i32* %31, align 4, !noalias !5
  %33 = uitofp i32 %32 to float
  %34 = fmul float %33, 0x3EF0000000000000
  %35 = getelementptr inbounds float, float* %7, i64 5
  store float %34, float* %35, align 4
  %36 = getelementptr inbounds i32, i32* %1, i64 6
  %37 = load i32, i32* %36, align 4, !noalias !5
  %38 = uitofp i32 %37 to float
  %39 = fmul float %38, 0x3EF0000000000000
  %40 = getelementptr inbounds float, float* %7, i64 6
  store float %39, float* %40, align 4
  %41 = getelementptr inbounds i32, i32* %1, i64 7
  %42 = load i32, i32* %41, align 4, !noalias !5
  %43 = uitofp i32 %42 to float
  %44 = fmul float %43, 0x3EF0000000000000
  %45 = getelementptr inbounds float, float* %7, i64 7
  store float %44, float* %45, align 4
  %46 = getelementptr inbounds i32, i32* %1, i64 8
  %47 = load i32, i32* %46, align 4, !noalias !5
  %48 = uitofp i32 %47 to float
  %49 = fmul float %48, 0x3EF0000000000000
  %50 = getelementptr inbounds float, float* %7, i64 8
  store float %49, float* %50, align 4
  %51 = getelementptr inbounds i32, i32* %1, i64 9
  %52 = load i32, i32* %51, align 4, !noalias !5
  %53 = uitofp i32 %52 to float
  %54 = fmul float %53, 0x3EF0000000000000
  %55 = getelementptr inbounds float, float* %7, i64 9
  store float %54, float* %55, align 4
  %56 = getelementptr inbounds i32, i32* %1, i64 10
  %57 = load i32, i32* %56, align 4, !noalias !5
  %58 = uitofp i32 %57 to float
  %59 = fmul float %58, 0x3EF0000000000000
  %60 = getelementptr inbounds float, float* %7, i64 10
  store float %59, float* %60, align 4
  %61 = getelementptr inbounds i32, i32* %1, i64 11
  %62 = load i32, i32* %61, align 4, !noalias !5
  %63 = uitofp i32 %62 to float
  %64 = fmul float %63, 0x3EF0000000000000
  %65 = getelementptr inbounds float, float* %7, i64 11
  store float %64, float* %65, align 4
  %66 = getelementptr inbounds i32, i32* %1, i64 12
  %67 = load i32, i32* %66, align 4, !noalias !5
  %68 = uitofp i32 %67 to float
  %69 = fmul float %68, 0x3EF0000000000000
  %70 = getelementptr inbounds float, float* %7, i64 12
  store float %69, float* %70, align 4
  %71 = getelementptr inbounds i32, i32* %1, i64 13
  %72 = load i32, i32* %71, align 4, !noalias !5
  %73 = uitofp i32 %72 to float
  %74 = fmul float %73, 0x3EF0000000000000
  %75 = getelementptr inbounds float, float* %7, i64 13
  store float %74, float* %75, align 4
  %76 = getelementptr inbounds i32, i32* %1, i64 14
  %77 = load i32, i32* %76, align 4, !noalias !5
  %78 = uitofp i32 %77 to float
  %79 = fmul float %78, 0x3EF0000000000000
  %80 = getelementptr inbounds float, float* %7, i64 14
  store float %79, float* %80, align 4
  %81 = getelementptr inbounds i32, i32* %1, i64 15
  %82 = load i32, i32* %81, align 4, !noalias !5
  %83 = uitofp i32 %82 to float
  %84 = fmul float %83, 0x3EF0000000000000
  %85 = getelementptr inbounds float, float* %7, i64 15
  store float %84, float* %85, align 4
  call void @_ZN2gl10GLES1State10multMatrixERKN5angle4Mat4E(%"class.gl::GLES1State"* %4, %"class.angle::Mat4"* nonnull dereferenceable(32) %3) #6
  %86 = load float*, float** %6, align 8
  %87 = icmp eq float* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %2
  %89 = ptrtoint float* %86 to i64
  %90 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %91 = bitcast float** %90 to i64*
  store i64 %89, i64* %91, align 8
  %92 = bitcast float* %86 to i8*
  call void @_ZdlPv(i8* %92) #7
  br label %93

93:                                               ; preds = %2, %88
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15multiTexCoord4fEjffff(%"class.gl::Context"*, i32, float, float, float, float) local_unnamed_addr #0 align 2 {
  %7 = alloca %"struct.gl::TextureCoordF", align 4
  %8 = add i32 %1, -33984
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %10 = bitcast %"struct.gl::TextureCoordF"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #6
  call void @_ZN2gl13TextureCoordFC1Effff(%"struct.gl::TextureCoordF"* nonnull %7, float %2, float %3, float %4, float %5) #6
  call void @_ZN2gl10GLES1State23setCurrentTextureCoordsEjRKNS_13TextureCoordFE(%"class.gl::GLES1State"* %9, i32 %8, %"struct.gl::TextureCoordF"* nonnull dereferenceable(16) %7) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #6
  ret void
}

declare void @_ZN2gl10GLES1State23setCurrentTextureCoordsEjRKNS_13TextureCoordFE(%"class.gl::GLES1State"*, i32, %"struct.gl::TextureCoordF"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN2gl13TextureCoordFC1Effff(%"struct.gl::TextureCoordF"*, float, float, float, float) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15multiTexCoord4xEjiiii(%"class.gl::Context"*, i32, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %"struct.gl::TextureCoordF", align 4
  %8 = add i32 %1, -33984
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %10 = bitcast %"struct.gl::TextureCoordF"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #6
  %11 = uitofp i32 %2 to float
  %12 = fmul float %11, 0x3EF0000000000000
  %13 = uitofp i32 %3 to float
  %14 = fmul float %13, 0x3EF0000000000000
  %15 = uitofp i32 %4 to float
  %16 = fmul float %15, 0x3EF0000000000000
  %17 = uitofp i32 %5 to float
  %18 = fmul float %17, 0x3EF0000000000000
  call void @_ZN2gl13TextureCoordFC1Effff(%"struct.gl::TextureCoordF"* nonnull %7, float %12, float %14, float %16, float %18) #6
  call void @_ZN2gl10GLES1State23setCurrentTextureCoordsEjRKNS_13TextureCoordFE(%"class.gl::GLES1State"* %9, i32 %8, %"struct.gl::TextureCoordF"* nonnull dereferenceable(16) %7) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context8normal3fEfff(%"class.gl::Context"*, float, float, float) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.angle::Vector", align 4
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %7 = bitcast %"class.angle::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #6
  %8 = getelementptr inbounds %"class.angle::Vector", %"class.angle::Vector"* %5, i64 0, i32 0, i32 0, i64 0
  store float %1, float* %8, align 4
  %9 = getelementptr inbounds %"class.angle::Vector", %"class.angle::Vector"* %5, i64 0, i32 0, i32 0, i64 1
  store float %2, float* %9, align 4
  %10 = getelementptr inbounds %"class.angle::Vector", %"class.angle::Vector"* %5, i64 0, i32 0, i32 0, i64 2
  store float %3, float* %10, align 4
  call void @_ZN2gl10GLES1State16setCurrentNormalERKN5angle6VectorILm3EfEE(%"class.gl::GLES1State"* %6, %"class.angle::Vector"* nonnull dereferenceable(12) %5) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #6
  ret void
}

declare void @_ZN2gl10GLES1State16setCurrentNormalERKN5angle6VectorILm3EfEE(%"class.gl::GLES1State"*, %"class.angle::Vector"* dereferenceable(12)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context8normal3xEiii(%"class.gl::Context"*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.angle::Vector", align 4
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %7 = bitcast %"class.angle::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #6
  %8 = uitofp i32 %1 to float
  %9 = fmul float %8, 0x3EF0000000000000
  %10 = uitofp i32 %2 to float
  %11 = fmul float %10, 0x3EF0000000000000
  %12 = uitofp i32 %3 to float
  %13 = fmul float %12, 0x3EF0000000000000
  %14 = getelementptr inbounds %"class.angle::Vector", %"class.angle::Vector"* %5, i64 0, i32 0, i32 0, i64 0
  store float %9, float* %14, align 4
  %15 = getelementptr inbounds %"class.angle::Vector", %"class.angle::Vector"* %5, i64 0, i32 0, i32 0, i64 1
  store float %11, float* %15, align 4
  %16 = getelementptr inbounds %"class.angle::Vector", %"class.angle::Vector"* %5, i64 0, i32 0, i32 0, i64 2
  store float %13, float* %16, align 4
  call void @_ZN2gl10GLES1State16setCurrentNormalERKN5angle6VectorILm3EfEE(%"class.gl::GLES1State"* %6, %"class.angle::Vector"* nonnull dereferenceable(12) %5) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13normalPointerENS_16VertexAttribTypeEiPKv(%"class.gl::Context"*, i32, i32, i8*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %6 = tail call i32 @_ZN2gl13GLES1Renderer16VertexArrayIndexENS_21ClientVertexArrayTypeERKNS_10GLES1StateE(i8 zeroext 1, %"class.gl::GLES1State"* dereferenceable(1456) %5) #6
  tail call void @_ZN2gl7Context19vertexAttribPointerEjiNS_16VertexAttribTypeEhiPKv(%"class.gl::Context"* %0, i32 %6, i32 3, i32 %1, i8 zeroext 0, i32 %2, i8* %3) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context6orthofEffffff(%"class.gl::Context"*, float, float, float, float, float, float) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.angle::Mat4", align 8
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %10 = bitcast %"class.angle::Mat4"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #6
  call void @_ZN5angle4Mat45OrthoEffffff(%"class.angle::Mat4"* nonnull sret %8, float %1, float %2, float %3, float %4, float %5, float %6) #6
  call void @_ZN2gl10GLES1State10multMatrixERKN5angle4Mat4E(%"class.gl::GLES1State"* %9, %"class.angle::Mat4"* nonnull dereferenceable(32) %8) #6
  %11 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load float*, float** %11, align 8
  %13 = icmp eq float* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %7
  %15 = ptrtoint float* %12 to i64
  %16 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast float** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast float* %12 to i8*
  call void @_ZdlPv(i8* %18) #7
  br label %19

19:                                               ; preds = %7, %14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #6
  ret void
}

declare void @_ZN5angle4Mat45OrthoEffffff(%"class.angle::Mat4"* sret, float, float, float, float, float, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context6orthoxEiiiiii(%"class.gl::Context"*, i32, i32, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.angle::Mat4", align 8
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %10 = bitcast %"class.angle::Mat4"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #6
  %11 = uitofp i32 %1 to float
  %12 = fmul float %11, 0x3EF0000000000000
  %13 = uitofp i32 %2 to float
  %14 = fmul float %13, 0x3EF0000000000000
  %15 = uitofp i32 %3 to float
  %16 = fmul float %15, 0x3EF0000000000000
  %17 = uitofp i32 %4 to float
  %18 = fmul float %17, 0x3EF0000000000000
  %19 = uitofp i32 %5 to float
  %20 = fmul float %19, 0x3EF0000000000000
  %21 = uitofp i32 %6 to float
  %22 = fmul float %21, 0x3EF0000000000000
  call void @_ZN5angle4Mat45OrthoEffffff(%"class.angle::Mat4"* nonnull sret %8, float %12, float %14, float %16, float %18, float %20, float %22) #6
  call void @_ZN2gl10GLES1State10multMatrixERKN5angle4Mat4E(%"class.gl::GLES1State"* %9, %"class.angle::Mat4"* nonnull dereferenceable(32) %8) #6
  %23 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load float*, float** %23, align 8
  %25 = icmp eq float* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %7
  %27 = ptrtoint float* %24 to i64
  %28 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %29 = bitcast float** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast float* %24 to i8*
  call void @_ZdlPv(i8* %30) #7
  br label %31

31:                                               ; preds = %7, %26
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15pointParameterfENS_14PointParameterEf(%"class.gl::Context"*, i8 zeroext, float) local_unnamed_addr #0 align 2 {
  %4 = alloca float, align 4
  store float %2, float* %4, align 4
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  call void @_ZN2gl17SetPointParameterEPNS_10GLES1StateENS_14PointParameterEPKf(%"class.gl::GLES1State"* %5, i8 zeroext %1, float* nonnull %4) #6
  ret void
}

declare void @_ZN2gl17SetPointParameterEPNS_10GLES1StateENS_14PointParameterEPKf(%"class.gl::GLES1State"*, i8 zeroext, float*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16pointParameterfvENS_14PointParameterEPKf(%"class.gl::Context"*, i8 zeroext, float*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  tail call void @_ZN2gl17SetPointParameterEPNS_10GLES1StateENS_14PointParameterEPKf(%"class.gl::GLES1State"* %4, i8 zeroext %1, float* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15pointParameterxENS_14PointParameterEi(%"class.gl::Context"*, i8 zeroext, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca float, align 4
  %5 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #6
  %6 = uitofp i32 %2 to float
  %7 = fmul float %6, 0x3EF0000000000000
  store float %7, float* %4, align 4
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  call void @_ZN2gl17SetPointParameterEPNS_10GLES1StateENS_14PointParameterEPKf(%"class.gl::GLES1State"* %8, i8 zeroext %1, float* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16pointParameterxvENS_14PointParameterEPKi(%"class.gl::Context"*, i8 zeroext, i32* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca [4 x float], align 16
  %5 = bitcast [4 x float]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 0, i64 16, i1 false)
  %6 = tail call i32 @_ZN2gl22GetPointParameterCountENS_14PointParameterE(i8 zeroext %1) #6
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %11, %3
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %10 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 0
  call void @_ZN2gl17SetPointParameterEPNS_10GLES1StateENS_14PointParameterEPKf(%"class.gl::GLES1State"* %9, i8 zeroext %1, float* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #6
  ret void

11:                                               ; preds = %3, %11
  %12 = phi i64 [ %18, %11 ], [ 0, %3 ]
  %13 = getelementptr inbounds i32, i32* %2, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = uitofp i32 %14 to float
  %16 = fmul float %15, 0x3EF0000000000000
  %17 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 %12
  store float %16, float* %17, align 4
  %18 = add nuw nsw i64 %12, 1
  %19 = tail call i32 @_ZN2gl22GetPointParameterCountENS_14PointParameterE(i8 zeroext %1) #6
  %20 = zext i32 %19 to i64
  %21 = icmp ult i64 %18, %20
  br i1 %21, label %11, label %8
}

declare i32 @_ZN2gl22GetPointParameterCountENS_14PointParameterE(i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context9pointSizeEf(%"class.gl::Context"*, float) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  tail call void @_ZN2gl12SetPointSizeEPNS_10GLES1StateEf(%"class.gl::GLES1State"* %3, float %1) #6
  ret void
}

declare void @_ZN2gl12SetPointSizeEPNS_10GLES1StateEf(%"class.gl::GLES1State"*, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10pointSizexEi(%"class.gl::Context"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %4 = uitofp i32 %1 to float
  %5 = fmul float %4, 0x3EF0000000000000
  tail call void @_ZN2gl12SetPointSizeEPNS_10GLES1StateEf(%"class.gl::GLES1State"* %3, float %5) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context14polygonOffsetxEii(%"class.gl::Context"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %5 = uitofp i32 %1 to float
  %6 = fmul float %5, 0x3EF0000000000000
  %7 = uitofp i32 %2 to float
  %8 = fmul float %7, 0x3EF0000000000000
  tail call void @_ZN2gl5State22setPolygonOffsetParamsEff(%"class.gl::State"* %4, float %6, float %8) #6
  ret void
}

declare void @_ZN2gl5State22setPolygonOffsetParamsEff(%"class.gl::State"*, float, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context9popMatrixEv(%"class.gl::Context"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  tail call void @_ZN2gl10GLES1State9popMatrixEv(%"class.gl::GLES1State"* %2) #6
  ret void
}

declare void @_ZN2gl10GLES1State9popMatrixEv(%"class.gl::GLES1State"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10pushMatrixEv(%"class.gl::Context"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  tail call void @_ZN2gl10GLES1State10pushMatrixEv(%"class.gl::GLES1State"* %2) #6
  ret void
}

declare void @_ZN2gl10GLES1State10pushMatrixEv(%"class.gl::GLES1State"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context7rotatefEffff(%"class.gl::Context"*, float, float, float, float) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.angle::Mat4", align 8
  %7 = alloca %"class.angle::Vector", align 4
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %9 = bitcast %"class.angle::Mat4"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #6
  %10 = bitcast %"class.angle::Vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %10) #6
  %11 = getelementptr inbounds %"class.angle::Vector", %"class.angle::Vector"* %7, i64 0, i32 0, i32 0, i64 0
  store float %2, float* %11, align 4
  %12 = getelementptr inbounds %"class.angle::Vector", %"class.angle::Vector"* %7, i64 0, i32 0, i32 0, i64 1
  store float %3, float* %12, align 4
  %13 = getelementptr inbounds %"class.angle::Vector", %"class.angle::Vector"* %7, i64 0, i32 0, i32 0, i64 2
  store float %4, float* %13, align 4
  call void @_ZN5angle4Mat46RotateEfRKNS_6VectorILm3EfEE(%"class.angle::Mat4"* nonnull sret %6, float %1, %"class.angle::Vector"* nonnull dereferenceable(12) %7) #6
  call void @_ZN2gl10GLES1State10multMatrixERKN5angle4Mat4E(%"class.gl::GLES1State"* %8, %"class.angle::Mat4"* nonnull dereferenceable(32) %6) #6
  %14 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load float*, float** %14, align 8
  %16 = icmp eq float* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %5
  %18 = ptrtoint float* %15 to i64
  %19 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast float** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast float* %15 to i8*
  call void @_ZdlPv(i8* %21) #7
  br label %22

22:                                               ; preds = %5, %17
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #6
  ret void
}

declare void @_ZN5angle4Mat46RotateEfRKNS_6VectorILm3EfEE(%"class.angle::Mat4"* sret, float, %"class.angle::Vector"* dereferenceable(12)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context7rotatexEiiii(%"class.gl::Context"*, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.angle::Mat4", align 8
  %7 = alloca %"class.angle::Vector", align 4
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %9 = bitcast %"class.angle::Mat4"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #6
  %10 = uitofp i32 %1 to float
  %11 = fmul float %10, 0x3EF0000000000000
  %12 = bitcast %"class.angle::Vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %12) #6
  %13 = uitofp i32 %2 to float
  %14 = fmul float %13, 0x3EF0000000000000
  %15 = uitofp i32 %3 to float
  %16 = fmul float %15, 0x3EF0000000000000
  %17 = uitofp i32 %4 to float
  %18 = fmul float %17, 0x3EF0000000000000
  %19 = getelementptr inbounds %"class.angle::Vector", %"class.angle::Vector"* %7, i64 0, i32 0, i32 0, i64 0
  store float %14, float* %19, align 4
  %20 = getelementptr inbounds %"class.angle::Vector", %"class.angle::Vector"* %7, i64 0, i32 0, i32 0, i64 1
  store float %16, float* %20, align 4
  %21 = getelementptr inbounds %"class.angle::Vector", %"class.angle::Vector"* %7, i64 0, i32 0, i32 0, i64 2
  store float %18, float* %21, align 4
  call void @_ZN5angle4Mat46RotateEfRKNS_6VectorILm3EfEE(%"class.angle::Mat4"* nonnull sret %6, float %11, %"class.angle::Vector"* nonnull dereferenceable(12) %7) #6
  call void @_ZN2gl10GLES1State10multMatrixERKN5angle4Mat4E(%"class.gl::GLES1State"* %8, %"class.angle::Mat4"* nonnull dereferenceable(32) %6) #6
  %22 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load float*, float** %22, align 8
  %24 = icmp eq float* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %5
  %26 = ptrtoint float* %23 to i64
  %27 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %28 = bitcast float** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = bitcast float* %23 to i8*
  call void @_ZdlPv(i8* %29) #7
  br label %30

30:                                               ; preds = %5, %25
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %12) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15sampleCoveragexEih(%"class.gl::Context"*, i32, i8 zeroext) local_unnamed_addr #0 align 2 {
  %4 = uitofp i32 %1 to float
  %5 = fmul float %4, 0x3EF0000000000000
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %7 = fcmp ogt float %5, 0.000000e+00
  %8 = fcmp ogt float %5, 1.000000e+00
  %9 = select i1 %8, float 1.000000e+00, float %5
  %10 = select i1 %7, float %9, float 0.000000e+00
  %11 = icmp ne i8 %2, 0
  tail call void @_ZN2gl5State23setSampleCoverageParamsEfb(%"class.gl::State"* %6, float %10, i1 zeroext %11) #6
  ret void
}

declare void @_ZN2gl5State23setSampleCoverageParamsEfb(%"class.gl::State"*, float, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context6scalefEfff(%"class.gl::Context"*, float, float, float) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.angle::Mat4", align 8
  %6 = alloca %"class.angle::Vector", align 4
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %8 = bitcast %"class.angle::Mat4"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #6
  %9 = bitcast %"class.angle::Vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %9) #6
  %10 = getelementptr inbounds %"class.angle::Vector", %"class.angle::Vector"* %6, i64 0, i32 0, i32 0, i64 0
  store float %1, float* %10, align 4
  %11 = getelementptr inbounds %"class.angle::Vector", %"class.angle::Vector"* %6, i64 0, i32 0, i32 0, i64 1
  store float %2, float* %11, align 4
  %12 = getelementptr inbounds %"class.angle::Vector", %"class.angle::Vector"* %6, i64 0, i32 0, i32 0, i64 2
  store float %3, float* %12, align 4
  call void @_ZN5angle4Mat45ScaleERKNS_6VectorILm3EfEE(%"class.angle::Mat4"* nonnull sret %5, %"class.angle::Vector"* nonnull dereferenceable(12) %6) #6
  call void @_ZN2gl10GLES1State10multMatrixERKN5angle4Mat4E(%"class.gl::GLES1State"* %7, %"class.angle::Mat4"* nonnull dereferenceable(32) %5) #6
  %13 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load float*, float** %13, align 8
  %15 = icmp eq float* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %4
  %17 = ptrtoint float* %14 to i64
  %18 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast float** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast float* %14 to i8*
  call void @_ZdlPv(i8* %20) #7
  br label %21

21:                                               ; preds = %4, %16
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #6
  ret void
}

declare void @_ZN5angle4Mat45ScaleERKNS_6VectorILm3EfEE(%"class.angle::Mat4"* sret, %"class.angle::Vector"* dereferenceable(12)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context6scalexEiii(%"class.gl::Context"*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.angle::Mat4", align 8
  %6 = alloca %"class.angle::Vector", align 4
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %8 = bitcast %"class.angle::Mat4"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #6
  %9 = bitcast %"class.angle::Vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %9) #6
  %10 = uitofp i32 %1 to float
  %11 = fmul float %10, 0x3EF0000000000000
  %12 = uitofp i32 %2 to float
  %13 = fmul float %12, 0x3EF0000000000000
  %14 = uitofp i32 %3 to float
  %15 = fmul float %14, 0x3EF0000000000000
  %16 = getelementptr inbounds %"class.angle::Vector", %"class.angle::Vector"* %6, i64 0, i32 0, i32 0, i64 0
  store float %11, float* %16, align 4
  %17 = getelementptr inbounds %"class.angle::Vector", %"class.angle::Vector"* %6, i64 0, i32 0, i32 0, i64 1
  store float %13, float* %17, align 4
  %18 = getelementptr inbounds %"class.angle::Vector", %"class.angle::Vector"* %6, i64 0, i32 0, i32 0, i64 2
  store float %15, float* %18, align 4
  call void @_ZN5angle4Mat45ScaleERKNS_6VectorILm3EfEE(%"class.angle::Mat4"* nonnull sret %5, %"class.angle::Vector"* nonnull dereferenceable(12) %6) #6
  call void @_ZN2gl10GLES1State10multMatrixERKN5angle4Mat4E(%"class.gl::GLES1State"* %7, %"class.angle::Mat4"* nonnull dereferenceable(32) %5) #6
  %19 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load float*, float** %19, align 8
  %21 = icmp eq float* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %4
  %23 = ptrtoint float* %20 to i64
  %24 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast float** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = bitcast float* %20 to i8*
  call void @_ZdlPv(i8* %26) #7
  br label %27

27:                                               ; preds = %4, %22
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10shadeModelENS_12ShadingModelE(%"class.gl::Context"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  tail call void @_ZN2gl10GLES1State13setShadeModelENS_12ShadingModelE(%"class.gl::GLES1State"* %3, i8 zeroext %1) #6
  ret void
}

declare void @_ZN2gl10GLES1State13setShadeModelENS_12ShadingModelE(%"class.gl::GLES1State"*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context15texCoordPointerEiNS_16VertexAttribTypeEiPKv(%"class.gl::Context"*, i32, i32, i32, i8*) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %7 = tail call i32 @_ZN2gl13GLES1Renderer16VertexArrayIndexENS_21ClientVertexArrayTypeERKNS_10GLES1StateE(i8 zeroext 3, %"class.gl::GLES1State"* dereferenceable(1456) %6) #6
  tail call void @_ZN2gl7Context19vertexAttribPointerEjiNS_16VertexAttribTypeEhiPKv(%"class.gl::Context"* %0, i32 %7, i32 %1, i32 %2, i8 zeroext 0, i32 %3, i8* %4) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context7texEnvfENS_16TextureEnvTargetENS_19TextureEnvParameterEf(%"class.gl::Context"*, i8 zeroext, i8 zeroext, float) local_unnamed_addr #0 align 2 {
  %5 = alloca float, align 4
  store float %3, float* %5, align 4
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 71
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  call void @_ZN2gl13SetTextureEnvEjPNS_10GLES1StateENS_16TextureEnvTargetENS_19TextureEnvParameterEPKf(i32 %8, %"class.gl::GLES1State"* %9, i8 zeroext %1, i8 zeroext %2, float* nonnull %5) #6
  ret void
}

declare void @_ZN2gl13SetTextureEnvEjPNS_10GLES1StateENS_16TextureEnvTargetENS_19TextureEnvParameterEPKf(i32, %"class.gl::GLES1State"*, i8 zeroext, i8 zeroext, float*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context8texEnvfvENS_16TextureEnvTargetENS_19TextureEnvParameterEPKf(%"class.gl::Context"*, i8 zeroext, i8 zeroext, float*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 71
  %6 = load i64, i64* %5, align 8
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  tail call void @_ZN2gl13SetTextureEnvEjPNS_10GLES1StateENS_16TextureEnvTargetENS_19TextureEnvParameterEPKf(i32 %7, %"class.gl::GLES1State"* %8, i8 zeroext %1, i8 zeroext %2, float* %3) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context7texEnviENS_16TextureEnvTargetENS_19TextureEnvParameterEi(%"class.gl::Context"*, i8 zeroext, i8 zeroext, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca [4 x float], align 16
  store i32 %3, i32* %5, align 4
  %7 = bitcast [4 x float]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 0, i64 16, i1 false)
  %8 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 0
  call void @_ZN2gl24ConvertTextureEnvFromIntENS_19TextureEnvParameterEPKiPf(i8 zeroext %2, i32* nonnull %5, float* nonnull %8) #6
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 71
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  call void @_ZN2gl13SetTextureEnvEjPNS_10GLES1StateENS_16TextureEnvTargetENS_19TextureEnvParameterEPKf(i32 %11, %"class.gl::GLES1State"* %12, i8 zeroext %1, i8 zeroext %2, float* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #6
  ret void
}

declare void @_ZN2gl24ConvertTextureEnvFromIntENS_19TextureEnvParameterEPKiPf(i8 zeroext, i32*, float*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context8texEnvivENS_16TextureEnvTargetENS_19TextureEnvParameterEPKi(%"class.gl::Context"*, i8 zeroext, i8 zeroext, i32*) local_unnamed_addr #0 align 2 {
  %5 = alloca [4 x float], align 16
  %6 = bitcast [4 x float]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 0, i64 16, i1 false)
  %7 = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, i64 0
  call void @_ZN2gl24ConvertTextureEnvFromIntENS_19TextureEnvParameterEPKiPf(i8 zeroext %2, i32* %3, float* nonnull %7) #6
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 71
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i32
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  call void @_ZN2gl13SetTextureEnvEjPNS_10GLES1StateENS_16TextureEnvTargetENS_19TextureEnvParameterEPKf(i32 %10, %"class.gl::GLES1State"* %11, i8 zeroext %1, i8 zeroext %2, float* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context7texEnvxENS_16TextureEnvTargetENS_19TextureEnvParameterEi(%"class.gl::Context"*, i8 zeroext, i8 zeroext, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca [4 x float], align 16
  store i32 %3, i32* %5, align 4
  %7 = bitcast [4 x float]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 0, i64 16, i1 false)
  %8 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 0
  call void @_ZN2gl26ConvertTextureEnvFromFixedENS_19TextureEnvParameterEPKiPf(i8 zeroext %2, i32* nonnull %5, float* nonnull %8) #6
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 71
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  call void @_ZN2gl13SetTextureEnvEjPNS_10GLES1StateENS_16TextureEnvTargetENS_19TextureEnvParameterEPKf(i32 %11, %"class.gl::GLES1State"* %12, i8 zeroext %1, i8 zeroext %2, float* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #6
  ret void
}

declare void @_ZN2gl26ConvertTextureEnvFromFixedENS_19TextureEnvParameterEPKiPf(i8 zeroext, i32*, float*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context8texEnvxvENS_16TextureEnvTargetENS_19TextureEnvParameterEPKi(%"class.gl::Context"*, i8 zeroext, i8 zeroext, i32*) local_unnamed_addr #0 align 2 {
  %5 = alloca [4 x float], align 16
  %6 = bitcast [4 x float]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 0, i64 16, i1 false)
  %7 = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, i64 0
  call void @_ZN2gl26ConvertTextureEnvFromFixedENS_19TextureEnvParameterEPKiPf(i8 zeroext %2, i32* %3, float* nonnull %7) #6
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 71
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i32
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  call void @_ZN2gl13SetTextureEnvEjPNS_10GLES1StateENS_16TextureEnvTargetENS_19TextureEnvParameterEPKf(i32 %10, %"class.gl::GLES1State"* %11, i8 zeroext %1, i8 zeroext %2, float* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13texParameterxENS_11TextureTypeEji(%"class.gl::Context"*, i8 zeroext, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = tail call %"class.gl::Texture"* @_ZNK2gl7Context16getTextureByTypeENS_11TextureTypeE(%"class.gl::Context"* %0, i8 zeroext %1) #6
  tail call void @_ZN2gl16SetTexParameterxEPNS_7ContextEPNS_7TextureEji(%"class.gl::Context"* %0, %"class.gl::Texture"* %5, i32 %2, i32 %3) #6
  ret void
}

declare void @_ZN2gl16SetTexParameterxEPNS_7ContextEPNS_7TextureEji(%"class.gl::Context"*, %"class.gl::Texture"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context14texParameterxvENS_11TextureTypeEjPKi(%"class.gl::Context"*, i8 zeroext, i32, i32*) local_unnamed_addr #0 align 2 {
  %5 = tail call %"class.gl::Texture"* @_ZNK2gl7Context16getTextureByTypeENS_11TextureTypeE(%"class.gl::Context"* %0, i8 zeroext %1) #6
  tail call void @_ZN2gl17SetTexParameterxvEPNS_7ContextEPNS_7TextureEjPKi(%"class.gl::Context"* %0, %"class.gl::Texture"* %5, i32 %2, i32* %3) #6
  ret void
}

declare void @_ZN2gl17SetTexParameterxvEPNS_7ContextEPNS_7TextureEjPKi(%"class.gl::Context"*, %"class.gl::Texture"*, i32, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10translatefEfff(%"class.gl::Context"*, float, float, float) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.angle::Mat4", align 8
  %6 = alloca %"class.angle::Vector", align 4
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %8 = bitcast %"class.angle::Mat4"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #6
  %9 = bitcast %"class.angle::Vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %9) #6
  %10 = getelementptr inbounds %"class.angle::Vector", %"class.angle::Vector"* %6, i64 0, i32 0, i32 0, i64 0
  store float %1, float* %10, align 4
  %11 = getelementptr inbounds %"class.angle::Vector", %"class.angle::Vector"* %6, i64 0, i32 0, i32 0, i64 1
  store float %2, float* %11, align 4
  %12 = getelementptr inbounds %"class.angle::Vector", %"class.angle::Vector"* %6, i64 0, i32 0, i32 0, i64 2
  store float %3, float* %12, align 4
  call void @_ZN5angle4Mat49TranslateERKNS_6VectorILm3EfEE(%"class.angle::Mat4"* nonnull sret %5, %"class.angle::Vector"* nonnull dereferenceable(12) %6) #6
  call void @_ZN2gl10GLES1State10multMatrixERKN5angle4Mat4E(%"class.gl::GLES1State"* %7, %"class.angle::Mat4"* nonnull dereferenceable(32) %5) #6
  %13 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load float*, float** %13, align 8
  %15 = icmp eq float* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %4
  %17 = ptrtoint float* %14 to i64
  %18 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast float** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast float* %14 to i8*
  call void @_ZdlPv(i8* %20) #7
  br label %21

21:                                               ; preds = %4, %16
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #6
  ret void
}

declare void @_ZN5angle4Mat49TranslateERKNS_6VectorILm3EfEE(%"class.angle::Mat4"* sret, %"class.angle::Vector"* dereferenceable(12)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context10translatexEiii(%"class.gl::Context"*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.angle::Mat4", align 8
  %6 = alloca %"class.angle::Vector", align 4
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %8 = bitcast %"class.angle::Mat4"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #6
  %9 = bitcast %"class.angle::Vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %9) #6
  %10 = uitofp i32 %1 to float
  %11 = fmul float %10, 0x3EF0000000000000
  %12 = uitofp i32 %2 to float
  %13 = fmul float %12, 0x3EF0000000000000
  %14 = uitofp i32 %3 to float
  %15 = fmul float %14, 0x3EF0000000000000
  %16 = getelementptr inbounds %"class.angle::Vector", %"class.angle::Vector"* %6, i64 0, i32 0, i32 0, i64 0
  store float %11, float* %16, align 4
  %17 = getelementptr inbounds %"class.angle::Vector", %"class.angle::Vector"* %6, i64 0, i32 0, i32 0, i64 1
  store float %13, float* %17, align 4
  %18 = getelementptr inbounds %"class.angle::Vector", %"class.angle::Vector"* %6, i64 0, i32 0, i32 0, i64 2
  store float %15, float* %18, align 4
  call void @_ZN5angle4Mat49TranslateERKNS_6VectorILm3EfEE(%"class.angle::Mat4"* nonnull sret %5, %"class.angle::Vector"* nonnull dereferenceable(12) %6) #6
  call void @_ZN2gl10GLES1State10multMatrixERKN5angle4Mat4E(%"class.gl::GLES1State"* %7, %"class.angle::Mat4"* nonnull dereferenceable(32) %5) #6
  %19 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load float*, float** %19, align 8
  %21 = icmp eq float* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %4
  %23 = ptrtoint float* %20 to i64
  %24 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast float** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = bitcast float* %20 to i8*
  call void @_ZdlPv(i8* %26) #7
  br label %27

27:                                               ; preds = %4, %22
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context13vertexPointerEiNS_16VertexAttribTypeEiPKv(%"class.gl::Context"*, i32, i32, i32, i8*) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %7 = tail call i32 @_ZN2gl13GLES1Renderer16VertexArrayIndexENS_21ClientVertexArrayTypeERKNS_10GLES1StateE(i8 zeroext 4, %"class.gl::GLES1State"* dereferenceable(1456) %6) #6
  tail call void @_ZN2gl7Context19vertexAttribPointerEjiNS_16VertexAttribTypeEhiPKv(%"class.gl::Context"* %0, i32 %7, i32 %1, i32 %2, i8 zeroext 0, i32 %3, i8* %4) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context8drawTexfEfffff(%"class.gl::Context"*, float, float, float, float, float) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %8 = load %"class.gl::GLES1Renderer"*, %"class.gl::GLES1Renderer"** %7, align 8
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  tail call void @_ZN2gl13GLES1Renderer11drawTextureEPNS_7ContextEPNS_5StateEfffff(%"class.gl::GLES1Renderer"* %8, %"class.gl::Context"* %0, %"class.gl::State"* %9, float %1, float %2, float %3, float %4, float %5) #6
  ret void
}

declare void @_ZN2gl13GLES1Renderer11drawTextureEPNS_7ContextEPNS_5StateEfffff(%"class.gl::GLES1Renderer"*, %"class.gl::Context"*, %"class.gl::State"*, float, float, float, float, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context9drawTexfvEPKf(%"class.gl::Context"*, float* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %4 = load %"class.gl::GLES1Renderer"*, %"class.gl::GLES1Renderer"** %3, align 8
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %6 = load float, float* %1, align 4
  %7 = getelementptr inbounds float, float* %1, i64 1
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds float, float* %1, i64 2
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds float, float* %1, i64 3
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds float, float* %1, i64 4
  %14 = load float, float* %13, align 4
  tail call void @_ZN2gl13GLES1Renderer11drawTextureEPNS_7ContextEPNS_5StateEfffff(%"class.gl::GLES1Renderer"* %4, %"class.gl::Context"* %0, %"class.gl::State"* %5, float %6, float %8, float %10, float %12, float %14) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context8drawTexiEiiiii(%"class.gl::Context"*, i32, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %8 = load %"class.gl::GLES1Renderer"*, %"class.gl::GLES1Renderer"** %7, align 8
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %10 = sitofp i32 %1 to float
  %11 = sitofp i32 %2 to float
  %12 = sitofp i32 %3 to float
  %13 = sitofp i32 %4 to float
  %14 = sitofp i32 %5 to float
  tail call void @_ZN2gl13GLES1Renderer11drawTextureEPNS_7ContextEPNS_5StateEfffff(%"class.gl::GLES1Renderer"* %8, %"class.gl::Context"* %0, %"class.gl::State"* %9, float %10, float %11, float %12, float %13, float %14) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context9drawTexivEPKi(%"class.gl::Context"*, i32* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %4 = load %"class.gl::GLES1Renderer"*, %"class.gl::GLES1Renderer"** %3, align 8
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %6 = load i32, i32* %1, align 4
  %7 = sitofp i32 %6 to float
  %8 = getelementptr inbounds i32, i32* %1, i64 1
  %9 = load i32, i32* %8, align 4
  %10 = sitofp i32 %9 to float
  %11 = getelementptr inbounds i32, i32* %1, i64 2
  %12 = load i32, i32* %11, align 4
  %13 = sitofp i32 %12 to float
  %14 = getelementptr inbounds i32, i32* %1, i64 3
  %15 = load i32, i32* %14, align 4
  %16 = sitofp i32 %15 to float
  %17 = getelementptr inbounds i32, i32* %1, i64 4
  %18 = load i32, i32* %17, align 4
  %19 = sitofp i32 %18 to float
  tail call void @_ZN2gl13GLES1Renderer11drawTextureEPNS_7ContextEPNS_5StateEfffff(%"class.gl::GLES1Renderer"* %4, %"class.gl::Context"* %0, %"class.gl::State"* %5, float %7, float %10, float %13, float %16, float %19) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context8drawTexsEsssss(%"class.gl::Context"*, i16 signext, i16 signext, i16 signext, i16 signext, i16 signext) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %8 = load %"class.gl::GLES1Renderer"*, %"class.gl::GLES1Renderer"** %7, align 8
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %10 = sitofp i16 %1 to float
  %11 = sitofp i16 %2 to float
  %12 = sitofp i16 %3 to float
  %13 = sitofp i16 %4 to float
  %14 = sitofp i16 %5 to float
  tail call void @_ZN2gl13GLES1Renderer11drawTextureEPNS_7ContextEPNS_5StateEfffff(%"class.gl::GLES1Renderer"* %8, %"class.gl::Context"* %0, %"class.gl::State"* %9, float %10, float %11, float %12, float %13, float %14) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context9drawTexsvEPKs(%"class.gl::Context"*, i16* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %4 = load %"class.gl::GLES1Renderer"*, %"class.gl::GLES1Renderer"** %3, align 8
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %6 = load i16, i16* %1, align 2
  %7 = sitofp i16 %6 to float
  %8 = getelementptr inbounds i16, i16* %1, i64 1
  %9 = load i16, i16* %8, align 2
  %10 = sitofp i16 %9 to float
  %11 = getelementptr inbounds i16, i16* %1, i64 2
  %12 = load i16, i16* %11, align 2
  %13 = sitofp i16 %12 to float
  %14 = getelementptr inbounds i16, i16* %1, i64 3
  %15 = load i16, i16* %14, align 2
  %16 = sitofp i16 %15 to float
  %17 = getelementptr inbounds i16, i16* %1, i64 4
  %18 = load i16, i16* %17, align 2
  %19 = sitofp i16 %18 to float
  tail call void @_ZN2gl13GLES1Renderer11drawTextureEPNS_7ContextEPNS_5StateEfffff(%"class.gl::GLES1Renderer"* %4, %"class.gl::Context"* %0, %"class.gl::State"* %5, float %7, float %10, float %13, float %16, float %19) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context8drawTexxEiiiii(%"class.gl::Context"*, i32, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %8 = load %"class.gl::GLES1Renderer"*, %"class.gl::GLES1Renderer"** %7, align 8
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %10 = uitofp i32 %1 to float
  %11 = fmul float %10, 0x3EF0000000000000
  %12 = uitofp i32 %2 to float
  %13 = fmul float %12, 0x3EF0000000000000
  %14 = uitofp i32 %3 to float
  %15 = fmul float %14, 0x3EF0000000000000
  %16 = uitofp i32 %4 to float
  %17 = fmul float %16, 0x3EF0000000000000
  %18 = uitofp i32 %5 to float
  %19 = fmul float %18, 0x3EF0000000000000
  tail call void @_ZN2gl13GLES1Renderer11drawTextureEPNS_7ContextEPNS_5StateEfffff(%"class.gl::GLES1Renderer"* %8, %"class.gl::Context"* %0, %"class.gl::State"* %9, float %11, float %13, float %15, float %17, float %19) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context9drawTexxvEPKi(%"class.gl::Context"*, i32* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %4 = load %"class.gl::GLES1Renderer"*, %"class.gl::GLES1Renderer"** %3, align 8
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2
  %6 = load i32, i32* %1, align 4
  %7 = uitofp i32 %6 to float
  %8 = fmul float %7, 0x3EF0000000000000
  %9 = getelementptr inbounds i32, i32* %1, i64 1
  %10 = load i32, i32* %9, align 4
  %11 = uitofp i32 %10 to float
  %12 = fmul float %11, 0x3EF0000000000000
  %13 = getelementptr inbounds i32, i32* %1, i64 2
  %14 = load i32, i32* %13, align 4
  %15 = uitofp i32 %14 to float
  %16 = fmul float %15, 0x3EF0000000000000
  %17 = getelementptr inbounds i32, i32* %1, i64 3
  %18 = load i32, i32* %17, align 4
  %19 = uitofp i32 %18 to float
  %20 = fmul float %19, 0x3EF0000000000000
  %21 = getelementptr inbounds i32, i32* %1, i64 4
  %22 = load i32, i32* %21, align 4
  %23 = uitofp i32 %22 to float
  %24 = fmul float %23, 0x3EF0000000000000
  tail call void @_ZN2gl13GLES1Renderer11drawTextureEPNS_7ContextEPNS_5StateEfffff(%"class.gl::GLES1Renderer"* %4, %"class.gl::Context"* %0, %"class.gl::State"* %5, float %8, float %12, float %16, float %20, float %24) #6
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context20currentPaletteMatrixEj(%"class.gl::Context"* nocapture, i32) local_unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context30loadPaletteFromModelViewMatrixEv(%"class.gl::Context"* nocapture) local_unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context18matrixIndexPointerEijiPKv(%"class.gl::Context"* nocapture, i32, i32, i32, i8* nocapture) local_unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context13weightPointerEijiPKv(%"class.gl::Context"* nocapture, i32, i32, i32, i8* nocapture) local_unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7Context16pointSizePointerENS_16VertexAttribTypeEiPKv(%"class.gl::Context"*, i32, i32, i8*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 2, i32 103
  %6 = tail call i32 @_ZN2gl13GLES1Renderer16VertexArrayIndexENS_21ClientVertexArrayTypeERKNS_10GLES1StateE(i8 zeroext 2, %"class.gl::GLES1State"* dereferenceable(1456) %5) #6
  tail call void @_ZN2gl7Context19vertexAttribPointerEjiNS_16VertexAttribTypeEhiPKv(%"class.gl::Context"* %0, i32 %6, i32 1, i32 %1, i8 zeroext 0, i32 %2, i8* %3) #6
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2gl7Context12queryMatrixxEPiS1_(%"class.gl::Context"* nocapture readnone, i32* nocapture readnone, i32* nocapture readnone) local_unnamed_addr #3 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context11getTexGenfvEjjPf(%"class.gl::Context"* nocapture, i32, i32, float* nocapture) local_unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context11getTexGenivEjjPi(%"class.gl::Context"* nocapture, i32, i32, i32* nocapture) local_unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context11getTexGenxvEjjPi(%"class.gl::Context"* nocapture, i32, i32, i32* nocapture) local_unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context7texGenfEjjf(%"class.gl::Context"* nocapture, i32, i32, float) local_unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context8texGenfvEjjPKf(%"class.gl::Context"* nocapture, i32, i32, float* nocapture) local_unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context7texGeniEjji(%"class.gl::Context"* nocapture, i32, i32, i32) local_unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context8texGenivEjjPKi(%"class.gl::Context"* nocapture, i32, i32, i32* nocapture) local_unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context7texGenxEjji(%"class.gl::Context"* nocapture, i32, i32, i32) local_unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7Context8texGenxvEjjPKi(%"class.gl::Context"* nocapture, i32, i32, i32* nocapture) local_unnamed_addr #3 align 2 {
  ret void
}

declare i32 @_ZN2gl13GLES1Renderer16VertexArrayIndexENS_21ClientVertexArrayTypeERKNS_10GLES1StateE(i8 zeroext, %"class.gl::GLES1State"* dereferenceable(1456)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7Context18TexCoordArrayIndexEj(i32) local_unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZN2gl13GLES1Renderer18TexCoordArrayIndexEj(i32 %0) #6
  ret i32 %2
}

declare i32 @_ZN2gl13GLES1Renderer18TexCoordArrayIndexEj(i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare i32 @_ZN2gl16CastQueryValueToIjiEET_jT0_(i32, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN12_GLOBAL__N_117FixedMatrixToMat4EPKi: argument 0"}
!4 = distinct !{!4, !"_ZN12_GLOBAL__N_117FixedMatrixToMat4EPKi"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN12_GLOBAL__N_117FixedMatrixToMat4EPKi: argument 0"}
!7 = distinct !{!7, !"_ZN12_GLOBAL__N_117FixedMatrixToMat4EPKi"}
