; ModuleID = '../../v8/src/wasm/value-type.cc'
source_filename = "../../v8/src/wasm/value-type.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::Signature" = type { i64, i64, %"class.v8::internal::wasm::ValueType"* }
%"class.v8::internal::wasm::ValueType" = type { i32 }

@.str = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal4wasm27WasmReturnTypeFromSignatureEPKNS0_9SignatureINS1_9ValueTypeEEE(%"class.v8::internal::Signature"* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %0, i64 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %0, i64 0, i32 2
  %7 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = trunc i32 %9 to i8
  %11 = and i8 %10, 31
  %12 = zext i8 %11 to i32
  %13 = add nsw i32 %12, -1
  %14 = icmp ult i32 %13, 4
  br i1 %14, label %16, label %15

15:                                               ; preds = %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #2
  unreachable

16:                                               ; preds = %5, %1
  %17 = phi i16 [ 0, %1 ], [ 1, %5 ]
  %18 = phi i8 [ 0, %1 ], [ %11, %5 ]
  %19 = zext i8 %18 to i16
  %20 = shl nuw nsw i16 %19, 8
  %21 = or i16 %20, %17
  ret i16 %21
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
