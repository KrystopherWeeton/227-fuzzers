; ModuleID = '../../third_party/skia/src/gpu/ops/GrOvalOpFactory.cpp'
source_filename = "../../third_party/skia/src/gpu/ops/GrOvalOpFactory.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkStrokeRec = type { float, float, float, i32 }
%class.sk_sp.60 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.std::__1::atomic.155" = type { %"struct.std::__1::__atomic_base.156" }
%"struct.std::__1::__atomic_base.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i32 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%class.SkAlignedSTStorage.198 = type { [56 x i8] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.81, i8* }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.80, [4 x i8] }>
%union.anon.80 = type { [7 x i32] }
%class.sk_sp.81 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.82, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.82 = type { %"struct.std::__1::atomic" }
%struct.SkPoint = type { float, float }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrOp* }
%struct.SkRect = type { float, float, float, float }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.2", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.47" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp }
%class.sk_sp = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.12, %class.SkTArray.21, %class.SkTArray.23, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.5"*, i64 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.23, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.24 }
%class.sk_sp.24 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.6" }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.12 = type { %class.SkTHashTable.13 }
%class.SkTHashTable.13 = type { i32, i32, %class.SkAutoTArray.14 }
%class.SkAutoTArray.14 = type { %"class.std::__1::unique_ptr.15" }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.66" }
%"struct.std::__1::pair.66" = type { i32, %class.SkTArray.67* }
%class.SkTArray.67 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.21 = type { %"class.std::__1::unique_ptr.22"*, i64 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.67, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.23 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.37 }
%class.SkFibBlockSizes.37 = type { i32 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%class.GrPaint = type <{ %class.GrXPFactory*, %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53", i8, [3 x i8], %struct.SkRGBA4f, [4 x i8] }>
%class.GrXPFactory = type { i32 (...)** }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.56 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.56 = type { %"class.std::__1::unique_ptr.53"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%struct.SkRGBA4f = type { float, float, float, float }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrProcessorSet = type <{ %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53", %"union.GrProcessorSet::XP", i8, [7 x i8] }>
%"union.GrProcessorSet::XP" = type { %class.GrXPFactory* }
%class.CircularRRectOp = type { %class.GrMeshDrawOp, %class.SkMatrix, %class.GrSimpleMeshDrawOpHelper, i32, i32, i8, i8, %class.SkSTArray.73, %struct.GrSimpleMesh*, %class.GrProgramInfo* }
%class.GrMeshDrawOp = type { %class.GrDrawOp }
%class.GrDrawOp = type { %class.GrOp }
%class.GrSimpleMeshDrawOpHelper = type <{ %class.GrProcessorSet*, i8, i8, [6 x i8] }>
%class.SkSTArray.73 = type { %class.SkAlignedSTStorage.74, %class.SkTArray.75 }
%class.SkAlignedSTStorage.74 = type { [44 x i8] }
%class.SkTArray.75 = type { %"struct.CircularRRectOp::RRect"*, i64 }
%"struct.CircularRRectOp::RRect" = type { %struct.SkRGBA4f, float, float, %struct.SkRect, i32 }
%struct.GrSimpleMesh = type { %class.sk_sp.76, i32, i32, i32, i32, i16, i16, i8, %class.sk_sp.76, i32, i32 }
%class.sk_sp.76 = type { %class.GrBuffer* }
%class.GrBuffer = type { i32 (...)** }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon, i32, [4 x i8] }
%union.anon = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.128, %class.SkAutoSTArray.129, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.78, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.78 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt, %class.sk_sp.79, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.121" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.sk_sp.79 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.83 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.83 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.84, void (i8*)*, i8* }
%class.SkNVRefCnt.84 = type { %"struct.std::__1::atomic" }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.79, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.118, %class.sk_sp.120, %class.sk_sp.120 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.93, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.109, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.85 }
%class.SkTHashTable.85 = type { i32, i32, %class.SkAutoTArray.86 }
%class.SkAutoTArray.86 = type { %"class.std::__1::unique_ptr.87" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.93 = type { %class.SkTHashTable.94 }
%class.SkTHashTable.94 = type { i32, i32, %class.SkAutoTArray.95 }
%class.SkAutoTArray.95 = type { %"class.std::__1::unique_ptr.96" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.102, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.102 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.103" }
%"struct.std::__1::atomic.103" = type { %"struct.std::__1::__atomic_base.104" }
%"struct.std::__1::__atomic_base.104" = type { %"struct.std::__1::__atomic_base.105" }
%"struct.std::__1::__atomic_base.105" = type { %"struct.std::__1::__cxx_atomic_impl.106" }
%"struct.std::__1::__cxx_atomic_impl.106" = type { %"struct.std::__1::__cxx_atomic_base_impl.107" }
%"struct.std::__1::__cxx_atomic_base_impl.107" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.108, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.108 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.109 = type { %class.SkTHashTable.110 }
%class.SkTHashTable.110 = type { i32, i32, %class.SkAutoTArray.111 }
%class.SkAutoTArray.111 = type { %"class.std::__1::unique_ptr.112" }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.sk_sp.118 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.119, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.119 = type { %class.GrShaderCaps* }
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.120 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.121" = type { %"struct.std::__1::__atomic_base.122" }
%"struct.std::__1::__atomic_base.122" = type { %"struct.std::__1::__atomic_base.123" }
%"struct.std::__1::__atomic_base.123" = type { %"struct.std::__1::__cxx_atomic_impl.124" }
%"struct.std::__1::__cxx_atomic_impl.124" = type { %"struct.std::__1::__cxx_atomic_base_impl.125" }
%"struct.std::__1::__cxx_atomic_base_impl.125" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.126 }
%union.anon.126 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.127, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.127 = type { i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.128 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef, i8, i8, [2 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%class.SkAutoSTArray.129 = type { i32, %"class.std::__1::unique_ptr.130"*, [24 x i8] }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %class.GrFragmentProcessor* }
%class.GrSwizzle = type { i16 }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.136, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.136 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%class.GrStyle = type { %class.SkStrokeRec, %class.sk_sp.60, %"struct.GrStyle::DashInfo" }
%"struct.GrStyle::DashInfo" = type { i32, float, %class.SkAutoSTArray }
%class.SkAutoSTArray = type { i32, float*, [16 x i8] }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.CircleOp::ArcParams" = type { float, float, i8 }
%class.CircleOp = type { %class.GrMeshDrawOp, %class.SkMatrix, %class.GrSimpleMeshDrawOpHelper, %class.SkSTArray.209, i32, i32, i8, i8, i8, i8, i8, i8, %struct.GrSimpleMesh*, %class.GrProgramInfo* }
%class.SkSTArray.209 = type { %class.SkAlignedSTStorage.210, %class.SkTArray.211 }
%class.SkAlignedSTStorage.210 = type { [96 x i8] }
%class.SkTArray.211 = type { %"struct.CircleOp::Circle"*, i64 }
%"struct.CircleOp::Circle" = type { %struct.SkRGBA4f, float, float, [3 x float], [3 x float], [3 x float], [2 x %struct.SkPoint], %struct.SkRect, i8 }
%"struct.EllipseOp::DeviceSpaceParams" = type { %struct.SkPoint, float, float, float, float }
%class.EllipseOp = type { %class.GrMeshDrawOp, %class.SkMatrix, %class.GrSimpleMeshDrawOpHelper, i8, i8, i8, %class.SkSTArray.212, %struct.GrSimpleMesh*, %class.GrProgramInfo* }
%class.SkSTArray.212 = type { %class.SkAlignedSTStorage.213, %class.SkTArray.214 }
%class.SkAlignedSTStorage.213 = type { [48 x i8] }
%class.SkTArray.214 = type { %"struct.EllipseOp::Ellipse"*, i64 }
%"struct.EllipseOp::Ellipse" = type { %struct.SkRGBA4f, float, float, float, float, %struct.SkRect }
%"struct.DIEllipseOp::DeviceSpaceParams" = type { %struct.SkPoint, float, float, float, float, i32 }
%class.DIEllipseOp = type { %class.GrMeshDrawOp, %class.GrSimpleMeshDrawOpHelper, i8, i8, %class.SkSTArray.216, %struct.GrSimpleMesh*, %class.GrProgramInfo* }
%class.SkSTArray.216 = type { %class.SkAlignedSTStorage.217, %class.SkTArray.218 }
%class.SkAlignedSTStorage.217 = type { [100 x i8] }
%class.SkTArray.218 = type { %"struct.DIEllipseOp::Ellipse"*, i64 }
%"struct.DIEllipseOp::Ellipse" = type { %class.SkMatrix, %struct.SkRGBA4f, float, float, float, float, float, float, i32, %struct.SkRect }
%"class.std::__1::function.137" = type opaque
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.53" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.GrOpFlushState = type { %class.GrDeferredUploadTarget, %"class.GrMeshDrawOp::Target", %class.SkArenaAllocWithReset, %class.GrVertexBufferAllocPool, %class.GrIndexBufferAllocPool, %class.GrDrawIndirectBufferAllocPool, %class.SkArenaAllocList, %class.SkArenaAllocList.150, %class.SkArenaAllocList.151, %class.GrDeferredUploadToken, %"struct.GrOpFlushState::OpArgs"*, %class.SkTArray.154*, %class.GrGpu*, %class.GrResourceProvider*, %class.GrTokenTracker*, %class.GrOpsRenderPass*, %"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter", %"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" }
%class.GrDeferredUploadTarget = type { i32 (...)** }
%"class.GrMeshDrawOp::Target" = type { i32 (...)** }
%class.SkArenaAllocWithReset = type { %class.SkArenaAlloc.base, i8*, i32, i32 }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%class.GrVertexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrBufferAllocPool = type { i32 (...)**, i64, %class.SkTArray.138, %class.sk_sp.140, %class.sk_sp.145, %class.GrGpu*, i32, i8* }
%class.SkTArray.138 = type { %"struct.GrBufferAllocPool::BufferBlock"*, i64 }
%"struct.GrBufferAllocPool::BufferBlock" = type { i64, %class.sk_sp.139 }
%class.sk_sp.139 = type { %class.GrBuffer* }
%class.sk_sp.140 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef.141, [4 x i8], %"class.std::__1::unique_ptr.142", i32, [4 x i8] }>
%class.GrNonAtomicRef.141 = type { i32 }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.145, i8, [7 x i8] }>
%class.sk_sp.145 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.146, i8*, i64 }
%class.GrNonAtomicRef.146 = type { i32 }
%class.GrIndexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrDrawIndirectBufferAllocPool = type { %class.GrBufferAllocPool }
%class.SkArenaAllocList = type { %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"*, %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"* }
%"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node" = type opaque
%class.SkArenaAllocList.150 = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node" = type opaque
%class.SkArenaAllocList.151 = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node" = type opaque
%class.GrDeferredUploadToken = type { i64 }
%"struct.GrOpFlushState::OpArgs" = type { %class.GrOp*, %class.GrSurfaceProxyView*, %class.GrRenderTargetProxy*, i8, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView", i32, i32 }
%class.GrRenderTargetProxy = type <{ i32 (...)**, i8, i8, i8, i8, %struct.SkIRect, [4 x i8], %class.sk_sp.152, [4 x i8], [4 x i8], %class.GrSurfaceProxy }>
%class.sk_sp.152 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.153, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.153 = type { %"struct.std::__1::atomic" }
%class.SkTArray.154 = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrOpsRenderPass = type { i32 (...)**, i32, %class.GrRenderTarget*, %class.sk_sp.76, %class.sk_sp.76, %class.sk_sp.76, i32, i32 }
%class.GrRenderTarget = type opaque
%"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }
%class.anon = type { i8*, i8*, i8*, i8*, i8*, i8*, %class.SkMatrix* }
%class.CircleGeometryProcessor = type <{ %class.GrGeometryProcessor.base, %class.SkMatrix, [4 x i8], %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute", i8, [7 x i8] }>
%class.GrGeometryProcessor.base = type <{ %class.GrProcessor, %class.GrNonAtomicRef.136, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32 }>
%struct.GrVertexWriter = type { i8* }
%class.GrVertexColor = type <{ [4 x i32], i8, [3 x i8] }>
%class.GrProcessorKeyBuilder = type { i32 (...)**, %class.SkTArray.161*, i32, i32 }
%class.SkTArray.161 = type { i32*, i64 }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.162 }
%class.SkTArray.162 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%"class.GrGeometryProcessor::TextureSampler" = type <{ %class.GrSamplerState, [4 x i8], %class.GrBackendFormat, %class.GrSwizzle, i8, [5 x i8] }>
%class.GrSamplerState = type { [2 x i8], i32, i32 }
%"class.CircleGeometryProcessor::GLSLProcessor" = type <{ %class.GrGLSLGeometryProcessor, %class.SkMatrix, %class.GrResourceHandle, [4 x i8] }>
%class.GrResourceHandle = type { i32 }
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%class.GrGLSLProgramBuilder = type opaque
%"struct.GrGLSLGeometryProcessor::EmitArgs" = type { %class.GrGLSLVertexBuilder*, %class.GrGLSLGeometryBuilder*, %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLVaryingHandler*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrGeometryProcessor*, i8*, i8*, %class.GrResourceHandle.183*, %"class.GrGLSLGeometryProcessor::FPCoordTransformHandler"* }
%class.GrGLSLVertexBuilder = type { %class.GrGLSLVertexGeoBuilder.base, [12 x i8] }
%class.GrGLSLVertexGeoBuilder.base = type { %class.GrGLSLShaderBuilder.base }
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.168, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.170, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.179], i32, i8, [3 x i8], i32 }>
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.165 }
%union.anon.165 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray.168 = type { %class.SkAlignedSTStorage.169, %class.SkTArray.23 }
%class.SkAlignedSTStorage.169 = type { [120 x i8] }
%class.SkSTArray.170 = type { %class.SkAlignedSTStorage.171, %class.SkTArray.172 }
%class.SkAlignedSTStorage.171 = type { [16 x i8] }
%class.SkTArray.172 = type { %"class.std::__1::unique_ptr.173"*, i64 }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.179 = type { %class.SkAlignedSTStorage.180, %class.SkTArray.23 }
%class.SkAlignedSTStorage.180 = type { [8 x i8] }
%class.GrGLSLGeometryBuilder = type { %class.GrGLSLVertexGeoBuilder.base, i32, [8 x i8] }
%class.GrGLSLFPFragmentBuilder = type <{ i32 (...)**, [4 x i8], [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLVaryingHandler = type { i32 (...)**, [8 x i8], %class.GrTBlockList.181, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrGLSLProgramBuilder*, i8* }
%class.GrTBlockList.181 = type { %class.GrSBlockAllocator.182 }
%class.GrSBlockAllocator.182 = type { [80 x i8] }
%class.GrResourceHandle.183 = type { i32 }
%"class.GrGLSLGeometryProcessor::FPCoordTransformHandler" = type { %"class.GrFragmentProcessor::CIter", %class.SkTArray.187* }
%"class.GrFragmentProcessor::CIter" = type { %class.SkSTArray.184 }
%class.SkSTArray.184 = type { %class.SkAlignedSTStorage.185, %class.SkTArray.186 }
%class.SkAlignedSTStorage.185 = type { [32 x i8] }
%class.SkTArray.186 = type { %class.GrFragmentProcessor**, i64 }
%class.SkTArray.187 = type { %class.GrShaderVar*, i64 }
%"struct.GrGLSLGeometryProcessor::GrGPArgs" = type { %class.GrShaderVar, %class.GrShaderVar }
%class.GrGLSLVarying = type { i32, i32, i8*, i8*, i8*, i8* }
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.168, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.170, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.179], i32, i8, [3 x i8], i32, [12 x i8] }>
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%class.EllipticalRRectOp = type { %class.GrMeshDrawOp, %class.SkMatrix, %class.GrSimpleMeshDrawOpHelper, i8, i8, i8, %class.SkSTArray.192, %struct.GrSimpleMesh*, %class.GrProgramInfo* }
%class.SkSTArray.192 = type { %class.SkAlignedSTStorage.193, %class.SkTArray.194 }
%class.SkAlignedSTStorage.193 = type { [48 x i8] }
%class.SkTArray.194 = type { %"struct.EllipticalRRectOp::RRect"*, i64 }
%"struct.EllipticalRRectOp::RRect" = type { %struct.SkRGBA4f, float, float, float, float, %struct.SkRect }
%class.anon.195 = type { i8*, i8*, i8*, %class.SkMatrix* }
%class.EllipseGeometryProcessor = type <{ %class.GrGeometryProcessor.base, [4 x i8], %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute", %class.SkMatrix, i8, i8, [6 x i8] }>
%class.sk_sp.199 = type { %class.GrGpuResource* }
%"class.GrMeshDrawOp::PatternHelper" = type <{ i8*, %struct.GrSimpleMesh*, i8, [7 x i8] }>
%"class.EllipseGeometryProcessor::GLSLProcessor" = type <{ %class.GrGLSLGeometryProcessor, %class.SkMatrix, %class.GrResourceHandle, [4 x i8] }>
%class.ButtCapDashedCircleOp = type { %class.GrMeshDrawOp, %class.SkMatrix, %class.GrSimpleMeshDrawOpHelper, %class.SkSTArray.201, i32, i32, i8, %struct.GrSimpleMesh*, %class.GrProgramInfo* }
%class.SkSTArray.201 = type { %class.SkAlignedSTStorage.202, %class.SkTArray.203 }
%class.SkAlignedSTStorage.202 = type { [56 x i8] }
%class.SkTArray.203 = type { %"struct.ButtCapDashedCircleOp::Circle"*, i64 }
%"struct.ButtCapDashedCircleOp::Circle" = type { %struct.SkRGBA4f, float, float, float, float, float, float, %struct.SkRect }
%class.ButtCapDashedCircleGeometryProcessor = type { %class.GrGeometryProcessor.base, %class.SkMatrix, %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute" }
%"class.ButtCapDashedCircleGeometryProcessor::GLSLProcessor" = type <{ %class.GrGLSLGeometryProcessor, %class.SkMatrix, %class.GrResourceHandle, [4 x i8] }>
%"class.GrMeshDrawOp::QuadHelper" = type { %"class.GrMeshDrawOp::PatternHelper.base", [7 x i8] }
%"class.GrMeshDrawOp::PatternHelper.base" = type <{ i8*, %struct.GrSimpleMesh*, i8 }>
%class.anon.219 = type { i8*, i8*, %class.SkMatrix*, i32* }
%class.DIEllipseGeometryProcessor = type { %class.GrGeometryProcessor.base, %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute", %class.SkMatrix, i8, i32 }
%"class.DIEllipseGeometryProcessor::GLSLProcessor" = type <{ %class.GrGLSLGeometryProcessor, %class.SkMatrix, %class.GrResourceHandle, [4 x i8] }>

$_ZN17EllipticalRRectOp4MakeEP18GrRecordingContextO7GrPaintRK8SkMatrixRK6SkRectff7SkPointb = comdat any

$_ZN8CircleOp4MakeEP18GrRecordingContextO7GrPaintRK8SkMatrix7SkPointfRK7GrStylePKNS_9ArcParamsE = comdat any

$_ZN9EllipseOp4MakeEP18GrRecordingContextO7GrPaintRK8SkMatrixRK6SkRectRK11SkStrokeRec = comdat any

$_ZN11DIEllipseOp4MakeEP18GrRecordingContextO7GrPaintRK8SkMatrixRK6SkRectRK11SkStrokeRec = comdat any

$_ZN15CircularRRectOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrixRK6SkRectffb = comdat any

$_ZN15CircularRRectOpD2Ev = comdat any

$_ZN15CircularRRectOpD0Ev = comdat any

$_ZNK15CircularRRectOp4nameEv = comdat any

$_ZNK15CircularRRectOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE = comdat any

$_ZN15CircularRRectOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps = comdat any

$_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp = comdat any

$_ZN15CircularRRectOp9onExecuteEP14GrOpFlushStateRK6SkRect = comdat any

$_ZNK15CircularRRectOp18fixedFunctionFlagsEv = comdat any

$_ZN15CircularRRectOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType = comdat any

$_ZN15CircularRRectOp11programInfoEv = comdat any

$_ZN15CircularRRectOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp = comdat any

$_ZN15CircularRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE = comdat any

$_ZN8SkTArrayIN15CircularRRectOp5RRectELb1EE12checkReallocEiNS2_11ReallocTypeE = comdat any

$_ZN4GrOpD2Ev = comdat any

$_ZN4GrOpD0Ev = comdat any

$_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE = comdat any

$_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps = comdat any

$_ZN12SkArenaAlloc4makeIZN23CircleGeometryProcessor4MakeEPS_bbbbbbRK8SkMatrixEUlPvE_EEDTclfp_LDnEEEOT_ = comdat any

$_ZZN12SkArenaAlloc4makeIZN23CircleGeometryProcessor4MakeEPS_bbbbbbRK8SkMatrixEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESB_ = comdat any

$_ZN19GrGeometryProcessor19setVertexAttributesEPKNS_9AttributeEi = comdat any

$_ZN11GrProcessorD2Ev = comdat any

$_ZN23CircleGeometryProcessorD0Ev = comdat any

$_ZNK23CircleGeometryProcessor4nameEv = comdat any

$_ZNK23CircleGeometryProcessor19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder = comdat any

$_ZNK23CircleGeometryProcessor18createGLSLInstanceERK12GrShaderCaps = comdat any

$_ZNK19GrGeometryProcessor16onTextureSamplerEi = comdat any

$_ZN23CircleGeometryProcessor13GLSLProcessor6GenKeyERK19GrGeometryProcessorRK12GrShaderCapsP21GrProcessorKeyBuilder = comdat any

$_ZN23CircleGeometryProcessor13GLSLProcessorD0Ev = comdat any

$_ZN23CircleGeometryProcessor13GLSLProcessor7setDataERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK19GrGeometryProcessor = comdat any

$_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps = comdat any

$_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps = comdat any

$_ZN23CircleGeometryProcessor13GLSLProcessor10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS1_8GrGPArgsE = comdat any

$_ZN23GrGLSLGeometryProcessorD0Ev = comdat any

$_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz = comdat any

$_ZN15CircularRRectOp21FillInOverstrokeVertsER14GrVertexWriterRK6SkRectfffffRK13GrVertexColor = comdat any

$_ZZN12SkArenaAlloc4makeIZNS_4makeI12GrSimpleMeshJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS3_ENUlPcE_8__invokeESC_ = comdat any

$_ZN24GrSimpleMeshDrawOpHelper13FactoryHelperI17EllipticalRRectOpJRK8SkMatrixRK6SkRectRfS8_R7SkPointRbEEENSt3__110unique_ptrI4GrOpNSC_14default_deleteISE_EEEEP18GrRecordingContextO7GrPaintDpOT0_ = comdat any

$_ZN17EllipticalRRectOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrixRK6SkRectff7SkPointb = comdat any

$_ZN17EllipticalRRectOpD2Ev = comdat any

$_ZN17EllipticalRRectOpD0Ev = comdat any

$_ZNK17EllipticalRRectOp4nameEv = comdat any

$_ZNK17EllipticalRRectOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE = comdat any

$_ZN17EllipticalRRectOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps = comdat any

$_ZN17EllipticalRRectOp9onExecuteEP14GrOpFlushStateRK6SkRect = comdat any

$_ZNK17EllipticalRRectOp18fixedFunctionFlagsEv = comdat any

$_ZN17EllipticalRRectOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType = comdat any

$_ZN17EllipticalRRectOp11programInfoEv = comdat any

$_ZN17EllipticalRRectOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp = comdat any

$_ZN17EllipticalRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE = comdat any

$_ZN8SkTArrayIN17EllipticalRRectOp5RRectELb1EE12checkReallocEiNS2_11ReallocTypeE = comdat any

$_ZN12SkArenaAlloc4makeIZN24EllipseGeometryProcessor4MakeEPS_bbbRK8SkMatrixEUlPvE_EEDTclfp_LDnEEEOT_ = comdat any

$_ZZN12SkArenaAlloc4makeIZN24EllipseGeometryProcessor4MakeEPS_bbbRK8SkMatrixEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESB_ = comdat any

$_ZN24EllipseGeometryProcessorD0Ev = comdat any

$_ZNK24EllipseGeometryProcessor4nameEv = comdat any

$_ZNK24EllipseGeometryProcessor19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder = comdat any

$_ZNK24EllipseGeometryProcessor18createGLSLInstanceERK12GrShaderCaps = comdat any

$_ZN24EllipseGeometryProcessor13GLSLProcessor6GenKeyERK19GrGeometryProcessorRK12GrShaderCapsP21GrProcessorKeyBuilder = comdat any

$_ZN24EllipseGeometryProcessor13GLSLProcessorD0Ev = comdat any

$_ZN24EllipseGeometryProcessor13GLSLProcessor7setDataERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK19GrGeometryProcessor = comdat any

$_ZN24EllipseGeometryProcessor13GLSLProcessor10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS1_8GrGPArgsE = comdat any

$_ZN24GrSimpleMeshDrawOpHelper13FactoryHelperI21ButtCapDashedCircleOpJRK8SkMatrixR7SkPointRfS7_S7_S7_S7_S7_EEENSt3__110unique_ptrI4GrOpNS8_14default_deleteISA_EEEEP18GrRecordingContextO7GrPaintDpOT0_ = comdat any

$_ZN21ButtCapDashedCircleOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrix7SkPointffffff = comdat any

$_ZN21ButtCapDashedCircleOpD2Ev = comdat any

$_ZN21ButtCapDashedCircleOpD0Ev = comdat any

$_ZNK21ButtCapDashedCircleOp4nameEv = comdat any

$_ZNK21ButtCapDashedCircleOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE = comdat any

$_ZN21ButtCapDashedCircleOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps = comdat any

$_ZN21ButtCapDashedCircleOp9onExecuteEP14GrOpFlushStateRK6SkRect = comdat any

$_ZNK21ButtCapDashedCircleOp18fixedFunctionFlagsEv = comdat any

$_ZN21ButtCapDashedCircleOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType = comdat any

$_ZN21ButtCapDashedCircleOp11programInfoEv = comdat any

$_ZN21ButtCapDashedCircleOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp = comdat any

$_ZN21ButtCapDashedCircleOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE = comdat any

$_ZN8SkTArrayIN21ButtCapDashedCircleOp6CircleELb1EE12checkReallocEiNS2_11ReallocTypeE = comdat any

$_ZZN12SkArenaAlloc4makeIZN36ButtCapDashedCircleGeometryProcessor4MakeEPS_bRK8SkMatrixEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESB_ = comdat any

$_ZN36ButtCapDashedCircleGeometryProcessorD0Ev = comdat any

$_ZNK36ButtCapDashedCircleGeometryProcessor4nameEv = comdat any

$_ZNK36ButtCapDashedCircleGeometryProcessor19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder = comdat any

$_ZNK36ButtCapDashedCircleGeometryProcessor18createGLSLInstanceERK12GrShaderCaps = comdat any

$_ZN36ButtCapDashedCircleGeometryProcessor13GLSLProcessor6GenKeyERK19GrGeometryProcessorRK12GrShaderCapsP21GrProcessorKeyBuilder = comdat any

$_ZN36ButtCapDashedCircleGeometryProcessor13GLSLProcessorD0Ev = comdat any

$_ZN36ButtCapDashedCircleGeometryProcessor13GLSLProcessor7setDataERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK19GrGeometryProcessor = comdat any

$_ZN36ButtCapDashedCircleGeometryProcessor13GLSLProcessor10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS1_8GrGPArgsE = comdat any

$_ZN8CircleOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrix7SkPointfRK7GrStylePKNS_9ArcParamsE = comdat any

$_ZN8CircleOpD2Ev = comdat any

$_ZN8CircleOpD0Ev = comdat any

$_ZNK8CircleOp4nameEv = comdat any

$_ZNK8CircleOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE = comdat any

$_ZN8CircleOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps = comdat any

$_ZN8CircleOp9onExecuteEP14GrOpFlushStateRK6SkRect = comdat any

$_ZNK8CircleOp18fixedFunctionFlagsEv = comdat any

$_ZN8CircleOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType = comdat any

$_ZN8CircleOp11programInfoEv = comdat any

$_ZN8CircleOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp = comdat any

$_ZN8CircleOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE = comdat any

$_ZN8SkTArrayIN8CircleOp6CircleELb1EE12checkReallocEiNS2_11ReallocTypeE = comdat any

$_ZN9EllipseOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrixRKNS_17DeviceSpaceParamsERK11SkStrokeRec = comdat any

$_ZN9EllipseOpD2Ev = comdat any

$_ZN9EllipseOpD0Ev = comdat any

$_ZNK9EllipseOp4nameEv = comdat any

$_ZNK9EllipseOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE = comdat any

$_ZN9EllipseOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps = comdat any

$_ZN9EllipseOp9onExecuteEP14GrOpFlushStateRK6SkRect = comdat any

$_ZNK9EllipseOp18fixedFunctionFlagsEv = comdat any

$_ZN9EllipseOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType = comdat any

$_ZN9EllipseOp11programInfoEv = comdat any

$_ZN9EllipseOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp = comdat any

$_ZN9EllipseOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE = comdat any

$_ZN8SkTArrayIN9EllipseOp7EllipseELb1EE12checkReallocEiNS2_11ReallocTypeE = comdat any

$_ZN11DIEllipseOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERKNS_17DeviceSpaceParamsERK8SkMatrix = comdat any

$_ZN11DIEllipseOpD2Ev = comdat any

$_ZN11DIEllipseOpD0Ev = comdat any

$_ZNK11DIEllipseOp4nameEv = comdat any

$_ZNK11DIEllipseOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE = comdat any

$_ZN11DIEllipseOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps = comdat any

$_ZN11DIEllipseOp9onExecuteEP14GrOpFlushStateRK6SkRect = comdat any

$_ZNK11DIEllipseOp18fixedFunctionFlagsEv = comdat any

$_ZN11DIEllipseOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType = comdat any

$_ZN11DIEllipseOp11programInfoEv = comdat any

$_ZN11DIEllipseOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp = comdat any

$_ZN11DIEllipseOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE = comdat any

$_ZN8SkTArrayIN11DIEllipseOp7EllipseELb1EE12checkReallocEiNS2_11ReallocTypeE = comdat any

$_ZN12SkArenaAlloc4makeIZN26DIEllipseGeometryProcessor4MakeEPS_bbRK8SkMatrix14DIEllipseStyleEUlPvE_EEDTclfp_LDnEEEOT_ = comdat any

$_ZZN12SkArenaAlloc4makeIZN26DIEllipseGeometryProcessor4MakeEPS_bbRK8SkMatrix14DIEllipseStyleEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESC_ = comdat any

$_ZN26DIEllipseGeometryProcessorD0Ev = comdat any

$_ZNK26DIEllipseGeometryProcessor4nameEv = comdat any

$_ZNK26DIEllipseGeometryProcessor19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder = comdat any

$_ZNK26DIEllipseGeometryProcessor18createGLSLInstanceERK12GrShaderCaps = comdat any

$_ZN26DIEllipseGeometryProcessor13GLSLProcessor6GenKeyERK19GrGeometryProcessorRK12GrShaderCapsP21GrProcessorKeyBuilder = comdat any

$_ZN23GrGLSLGeometryProcessorD2Ev = comdat any

$_ZN26DIEllipseGeometryProcessor13GLSLProcessorD0Ev = comdat any

$_ZN26DIEllipseGeometryProcessor13GLSLProcessor7setDataERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK19GrGeometryProcessor = comdat any

$_ZN26DIEllipseGeometryProcessor13GLSLProcessor10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS1_8GrGPArgsE = comdat any

$_ZTV15CircularRRectOp = comdat any

$_ZZN15CircularRRectOp7ClassIDEvE8kClassID = comdat any

$_ZGVZN15CircularRRectOp7ClassIDEvE8kClassID = comdat any

$_ZTV4GrOp = comdat any

$_ZTV23CircleGeometryProcessor = comdat any

$_ZTVN23CircleGeometryProcessor13GLSLProcessorE = comdat any

$_ZTV23GrGLSLGeometryProcessor = comdat any

$_ZTV17EllipticalRRectOp = comdat any

$_ZZN17EllipticalRRectOp7ClassIDEvE8kClassID = comdat any

$_ZGVZN17EllipticalRRectOp7ClassIDEvE8kClassID = comdat any

$_ZTV24EllipseGeometryProcessor = comdat any

$_ZTVN24EllipseGeometryProcessor13GLSLProcessorE = comdat any

$_ZTV21ButtCapDashedCircleOp = comdat any

$_ZZN21ButtCapDashedCircleOp7ClassIDEvE8kClassID = comdat any

$_ZGVZN21ButtCapDashedCircleOp7ClassIDEvE8kClassID = comdat any

$_ZTV36ButtCapDashedCircleGeometryProcessor = comdat any

$_ZTVN36ButtCapDashedCircleGeometryProcessor13GLSLProcessorE = comdat any

$_ZTV8CircleOp = comdat any

$_ZZN8CircleOp7ClassIDEvE8kClassID = comdat any

$_ZGVZN8CircleOp7ClassIDEvE8kClassID = comdat any

$_ZTV9EllipseOp = comdat any

$_ZZN9EllipseOp7ClassIDEvE8kClassID = comdat any

$_ZGVZN9EllipseOp7ClassIDEvE8kClassID = comdat any

$_ZTV11DIEllipseOp = comdat any

$_ZZN11DIEllipseOp7ClassIDEvE8kClassID = comdat any

$_ZGVZN11DIEllipseOp7ClassIDEvE8kClassID = comdat any

$_ZTV26DIEllipseGeometryProcessor = comdat any

$_ZTVN26DIEllipseGeometryProcessor13GLSLProcessorE = comdat any

@__const._ZN15GrOvalOpFactory12MakeCircleOpEP18GrRecordingContextO7GrPaintRK8SkMatrixRK6SkRectRK7GrStylePK12GrShaderCaps.strokeStyle = private unnamed_addr constant { %class.SkStrokeRec, %class.sk_sp.60, { i32, float, { i32, [4 x i8], float*, [16 x i8] } } } { %class.SkStrokeRec { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766 }, %class.sk_sp.60 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, { i32, float, { i32, [4 x i8], float*, [16 x i8] } } { i32 -1431655766, float 0xFFFFFFFFE0000000, { i32, [4 x i8], float*, [16 x i8] } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", float* inttoptr (i64 -6148914691236517206 to float*), [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } } }, align 8
@__const._ZN15GrOvalOpFactory9MakeArcOpEP18GrRecordingContextO7GrPaintRK8SkMatrixRK6SkRectffbRK7GrStylePK12GrShaderCaps.arcParams = private unnamed_addr constant { float, float, i8, [3 x i8] } { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA" }, align 4
@_ZTV15CircularRRectOp = linkonce_odr hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CircularRRectOp*)* @_ZN15CircularRRectOpD2Ev to i8*), i8* bitcast (void (%class.CircularRRectOp*)* @_ZN15CircularRRectOpD0Ev to i8*), i8* bitcast (i8* (%class.CircularRRectOp*)* @_ZNK15CircularRRectOp4nameEv to i8*), i8* bitcast (void (%class.CircularRRectOp*, %"class.std::__1::function.137"*)* @_ZNK15CircularRRectOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE to i8*), i8* bitcast (i32 (%class.CircularRRectOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps*)* @_ZN15CircularRRectOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrOpFlushState*)* @_ZN12GrMeshDrawOp9onPrepareEP14GrOpFlushState to i8*), i8* bitcast (void (%class.CircularRRectOp*, %class.GrOpFlushState*, %struct.SkRect*)* @_ZN15CircularRRectOp9onExecuteEP14GrOpFlushStateRK6SkRect to i8*), i8* bitcast (i32 (%class.CircularRRectOp*)* @_ZNK15CircularRRectOp18fixedFunctionFlagsEv to i8*), i8* bitcast (i32 (%class.CircularRRectOp*, %class.GrCaps*, %class.GrAppliedClip*, i32)* @_ZN15CircularRRectOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (%class.GrProgramInfo* (%class.CircularRRectOp*)* @_ZN15CircularRRectOp11programInfoEv to i8*), i8* bitcast (void (%class.CircularRRectOp*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN15CircularRRectOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%class.CircularRRectOp*, %"class.GrMeshDrawOp::Target"*)* @_ZN15CircularRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE to i8*)] }, comdat, align 8
@_ZZN15CircularRRectOp7ClassIDEvE8kClassID = linkonce_odr hidden local_unnamed_addr global i32 0, comdat, align 4
@_ZGVZN15CircularRRectOp7ClassIDEvE8kClassID = linkonce_odr hidden global i64 0, comdat, align 8
@_ZN4GrOp14gCurrOpClassIDE = external global %"struct.std::__1::atomic.155", align 4
@.str = private unnamed_addr constant [42 x i8] c"../../third_party/skia/src/gpu/ops/GrOp.h\00", align 1
@.str.1 = private unnamed_addr constant [80 x i8] c"This should never wrap as it should only be called once for each GrOp subclass.\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"../../third_party/skia/src/gpu/ops/GrOvalOpFactory.cpp\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"Invalid type\00", align 1
@_ZTV4GrOp = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrOp*)* @_ZN4GrOpD2Ev to i8*), i8* bitcast (void (%class.GrOp*)* @_ZN4GrOpD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrOp*, %"class.std::__1::function.137"*)* @_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE to i8*), i8* bitcast (i32 (%class.GrOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps*)* @_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.4 = private unnamed_addr constant [16 x i8] c"CircularRRectOp\00", align 1
@_ZTV23CircleGeometryProcessor = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrProcessor*)* @_ZN11GrProcessorD2Ev to i8*), i8* bitcast (void (%class.CircleGeometryProcessor*)* @_ZN23CircleGeometryProcessorD0Ev to i8*), i8* bitcast (i8* (%class.CircleGeometryProcessor*)* @_ZNK23CircleGeometryProcessor4nameEv to i8*), i8* bitcast (void (%class.CircleGeometryProcessor*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK23CircleGeometryProcessor19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (%class.GrGLSLGeometryProcessor* (%class.CircleGeometryProcessor*, %class.GrShaderCaps*)* @_ZNK23CircleGeometryProcessor18createGLSLInstanceERK12GrShaderCaps to i8*), i8* bitcast (%"class.GrGeometryProcessor::TextureSampler"* (%class.GrGeometryProcessor*, i32)* @_ZNK19GrGeometryProcessor16onTextureSamplerEi to i8*)] }, comdat, align 8
@.str.5 = private unnamed_addr constant [11 x i8] c"inPosition\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"inColor\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"inCircleEdge\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"inClipPlane\00", align 1
@.ref.tmp.10 = private unnamed_addr constant %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i32 0, i32 0), i32 2, i32 30 }, align 8
@.str.11 = private unnamed_addr constant [13 x i8] c"inIsectPlane\00", align 1
@.ref.tmp.12 = private unnamed_addr constant %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i32 0, i32 0), i32 2, i32 30 }, align 8
@.str.13 = private unnamed_addr constant [13 x i8] c"inUnionPlane\00", align 1
@.ref.tmp.14 = private unnamed_addr constant %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i32 0, i32 0), i32 2, i32 30 }, align 8
@.str.15 = private unnamed_addr constant [18 x i8] c"inRoundCapCenters\00", align 1
@.ref.tmp.16 = private unnamed_addr constant %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i32 0, i32 0), i32 3, i32 24 }, align 8
@.str.17 = private unnamed_addr constant [53 x i8] c"../../third_party/skia/src/gpu/GrGeometryProcessor.h\00", align 1
@.str.18 = private unnamed_addr constant [28 x i8] c"Unsupported type conversion\00", align 1
@.str.19 = private unnamed_addr constant [24 x i8] c"CircleGeometryProcessor\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"stroked\00", align 1
@.str.21 = private unnamed_addr constant [10 x i8] c"clipPlane\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"isectPlane\00", align 1
@.str.23 = private unnamed_addr constant [11 x i8] c"unionPlane\00", align 1
@.str.24 = private unnamed_addr constant [16 x i8] c"roundCapCenters\00", align 1
@.str.25 = private unnamed_addr constant [16 x i8] c"localMatrixType\00", align 1
@_ZTVN23CircleGeometryProcessor13GLSLProcessorE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLGeometryProcessor*)* @_ZN23GrGLSLGeometryProcessorD2Ev to i8*), i8* bitcast (void (%"class.CircleGeometryProcessor::GLSLProcessor"*)* @_ZN23CircleGeometryProcessor13GLSLProcessorD0Ev to i8*), i8* bitcast (void (%"class.CircleGeometryProcessor::GLSLProcessor"*, %class.GrGLSLProgramDataManager*, %class.GrShaderCaps*, %class.GrGeometryProcessor*)* @_ZN23CircleGeometryProcessor13GLSLProcessor7setDataERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK19GrGeometryProcessor to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%"class.CircleGeometryProcessor::GLSLProcessor"*, %"struct.GrGLSLGeometryProcessor::EmitArgs"*, %"struct.GrGLSLGeometryProcessor::GrGPArgs"*)* @_ZN23CircleGeometryProcessor13GLSLProcessor10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS1_8GrGPArgsE to i8*)] }, comdat, align 8
@_ZTV23GrGLSLGeometryProcessor = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLGeometryProcessor*)* @_ZN23GrGLSLGeometryProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLGeometryProcessor*)* @_ZN23GrGLSLGeometryProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.26 = private unnamed_addr constant [62 x i8] c"../../third_party/skia/src/gpu/glsl/GrGLSLGeometryProcessor.h\00", align 1
@.str.27 = private unnamed_addr constant [17 x i8] c"Not implemented.\00", align 1
@.str.28 = private unnamed_addr constant [19 x i8] c"float4 circleEdge;\00", align 1
@.str.29 = private unnamed_addr constant [11 x i8] c"circleEdge\00", align 1
@.str.30 = private unnamed_addr constant [17 x i8] c"half3 clipPlane;\00", align 1
@.str.31 = private unnamed_addr constant [18 x i8] c"half3 isectPlane;\00", align 1
@.str.32 = private unnamed_addr constant [18 x i8] c"half3 unionPlane;\00", align 1
@.str.33 = private unnamed_addr constant [24 x i8] c"float4 roundCapCenters;\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c"capRadius\00", align 1
@.str.35 = private unnamed_addr constant [25 x i8] c"%s = (1.0 - %s.w) / 2.0;\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"half4 %s;\00", align 1
@.str.37 = private unnamed_addr constant [33 x i8] c"float d = length(circleEdge.xy);\00", align 1
@.str.38 = private unnamed_addr constant [59 x i8] c"half distanceToOuterEdge = half(circleEdge.z * (1.0 - d));\00", align 1
@.str.39 = private unnamed_addr constant [48 x i8] c"half edgeAlpha = saturate(distanceToOuterEdge);\00", align 1
@.str.40 = private unnamed_addr constant [68 x i8] c"half distanceToInnerEdge = half(circleEdge.z * (d - circleEdge.w));\00", align 1
@.str.41 = private unnamed_addr constant [49 x i8] c"half innerAlpha = saturate(distanceToInnerEdge);\00", align 1
@.str.42 = private unnamed_addr constant [25 x i8] c"edgeAlpha *= innerAlpha;\00", align 1
@.str.43 = private unnamed_addr constant [91 x i8] c"half clip = half(saturate(circleEdge.z * dot(circleEdge.xy, clipPlane.xy) + clipPlane.z));\00", align 1
@.str.44 = private unnamed_addr constant [89 x i8] c"clip *= half(saturate(circleEdge.z * dot(circleEdge.xy, isectPlane.xy) + isectPlane.z));\00", align 1
@.str.45 = private unnamed_addr constant [105 x i8] c"clip = saturate(clip + half(saturate(circleEdge.z * dot(circleEdge.xy, unionPlane.xy) + unionPlane.z)));\00", align 1
@.str.46 = private unnamed_addr constant [19 x i8] c"edgeAlpha *= clip;\00", align 1
@.str.47 = private unnamed_addr constant [365 x i8] c"half dcap1 = half(circleEdge.z * (%s - length(circleEdge.xy -                                               roundCapCenters.xy)));half dcap2 = half(circleEdge.z * (%s - length(circleEdge.xy -                                               roundCapCenters.zw)));half capAlpha = (1 - clip) * (max(dcap1, 0) + max(dcap2, 0));edgeAlpha = min(edgeAlpha + capAlpha, 1.0);\00", align 1
@.str.48 = private unnamed_addr constant [29 x i8] c"half4 %s = half4(edgeAlpha);\00", align 1
@.str.49 = private unnamed_addr constant [30 x i8] c"Illegal texture sampler index\00", align 1
@.str.50 = private unnamed_addr constant [29 x i8] c"Could not allocate vertices\0A\00", align 1
@.str.51 = private unnamed_addr constant [28 x i8] c"Could not allocate indices\0A\00", align 1
@__const._ZN15CircularRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE.yOuterRadii = private unnamed_addr constant [4 x float] [float -1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], align 16
@_ZL23gOverstrokeRRectIndices = internal constant [78 x i16] [i16 16, i16 17, i16 19, i16 16, i16 19, i16 18, i16 19, i16 17, i16 23, i16 19, i16 23, i16 21, i16 21, i16 23, i16 22, i16 21, i16 22, i16 20, i16 22, i16 16, i16 18, i16 22, i16 18, i16 20, i16 0, i16 1, i16 5, i16 0, i16 5, i16 4, i16 2, i16 3, i16 7, i16 2, i16 7, i16 6, i16 8, i16 9, i16 13, i16 8, i16 13, i16 12, i16 10, i16 11, i16 15, i16 10, i16 15, i16 14, i16 1, i16 2, i16 6, i16 1, i16 6, i16 5, i16 4, i16 5, i16 9, i16 4, i16 9, i16 8, i16 6, i16 7, i16 11, i16 6, i16 11, i16 10, i16 9, i16 10, i16 14, i16 9, i16 14, i16 13, i16 5, i16 6, i16 10, i16 5, i16 10, i16 9], align 16
@_ZTV17EllipticalRRectOp = linkonce_odr hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.EllipticalRRectOp*)* @_ZN17EllipticalRRectOpD2Ev to i8*), i8* bitcast (void (%class.EllipticalRRectOp*)* @_ZN17EllipticalRRectOpD0Ev to i8*), i8* bitcast (i8* (%class.EllipticalRRectOp*)* @_ZNK17EllipticalRRectOp4nameEv to i8*), i8* bitcast (void (%class.EllipticalRRectOp*, %"class.std::__1::function.137"*)* @_ZNK17EllipticalRRectOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE to i8*), i8* bitcast (i32 (%class.EllipticalRRectOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps*)* @_ZN17EllipticalRRectOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrOpFlushState*)* @_ZN12GrMeshDrawOp9onPrepareEP14GrOpFlushState to i8*), i8* bitcast (void (%class.EllipticalRRectOp*, %class.GrOpFlushState*, %struct.SkRect*)* @_ZN17EllipticalRRectOp9onExecuteEP14GrOpFlushStateRK6SkRect to i8*), i8* bitcast (i32 (%class.EllipticalRRectOp*)* @_ZNK17EllipticalRRectOp18fixedFunctionFlagsEv to i8*), i8* bitcast (i32 (%class.EllipticalRRectOp*, %class.GrCaps*, %class.GrAppliedClip*, i32)* @_ZN17EllipticalRRectOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (%class.GrProgramInfo* (%class.EllipticalRRectOp*)* @_ZN17EllipticalRRectOp11programInfoEv to i8*), i8* bitcast (void (%class.EllipticalRRectOp*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN17EllipticalRRectOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%class.EllipticalRRectOp*, %"class.GrMeshDrawOp::Target"*)* @_ZN17EllipticalRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE to i8*)] }, comdat, align 8
@_ZZN17EllipticalRRectOp7ClassIDEvE8kClassID = linkonce_odr hidden local_unnamed_addr global i32 0, comdat, align 4
@_ZGVZN17EllipticalRRectOp7ClassIDEvE8kClassID = linkonce_odr hidden global i64 0, comdat, align 8
@.str.52 = private unnamed_addr constant [18 x i8] c"EllipticalRRectOp\00", align 1
@_ZTV24EllipseGeometryProcessor = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrProcessor*)* @_ZN11GrProcessorD2Ev to i8*), i8* bitcast (void (%class.EllipseGeometryProcessor*)* @_ZN24EllipseGeometryProcessorD0Ev to i8*), i8* bitcast (i8* (%class.EllipseGeometryProcessor*)* @_ZNK24EllipseGeometryProcessor4nameEv to i8*), i8* bitcast (void (%class.EllipseGeometryProcessor*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK24EllipseGeometryProcessor19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (%class.GrGLSLGeometryProcessor* (%class.EllipseGeometryProcessor*, %class.GrShaderCaps*)* @_ZNK24EllipseGeometryProcessor18createGLSLInstanceERK12GrShaderCaps to i8*), i8* bitcast (%"class.GrGeometryProcessor::TextureSampler"* (%class.GrGeometryProcessor*, i32)* @_ZNK19GrGeometryProcessor16onTextureSamplerEi to i8*)] }, comdat, align 8
@.str.54 = private unnamed_addr constant [16 x i8] c"inEllipseOffset\00", align 1
@.ref.tmp.55 = private unnamed_addr constant %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.54, i32 0, i32 0), i32 2, i32 23 }, align 8
@.ref.tmp.56 = private unnamed_addr constant %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.54, i32 0, i32 0), i32 1, i32 22 }, align 8
@.str.57 = private unnamed_addr constant [15 x i8] c"inEllipseRadii\00", align 1
@.ref.tmp.58 = private unnamed_addr constant %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.57, i32 0, i32 0), i32 3, i32 24 }, align 8
@.str.59 = private unnamed_addr constant [25 x i8] c"EllipseGeometryProcessor\00", align 1
@_ZTVN24EllipseGeometryProcessor13GLSLProcessorE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLGeometryProcessor*)* @_ZN23GrGLSLGeometryProcessorD2Ev to i8*), i8* bitcast (void (%"class.EllipseGeometryProcessor::GLSLProcessor"*)* @_ZN24EllipseGeometryProcessor13GLSLProcessorD0Ev to i8*), i8* bitcast (void (%"class.EllipseGeometryProcessor::GLSLProcessor"*, %class.GrGLSLProgramDataManager*, %class.GrShaderCaps*, %class.GrGeometryProcessor*)* @_ZN24EllipseGeometryProcessor13GLSLProcessor7setDataERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK19GrGeometryProcessor to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%"class.EllipseGeometryProcessor::GLSLProcessor"*, %"struct.GrGLSLGeometryProcessor::EmitArgs"*, %"struct.GrGLSLGeometryProcessor::GrGPArgs"*)* @_ZN24EllipseGeometryProcessor13GLSLProcessor10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS1_8GrGPArgsE to i8*)] }, comdat, align 8
@.str.60 = private unnamed_addr constant [15 x i8] c"EllipseOffsets\00", align 1
@.str.61 = private unnamed_addr constant [9 x i8] c"%s = %s;\00", align 1
@.str.62 = private unnamed_addr constant [13 x i8] c"EllipseRadii\00", align 1
@.str.63 = private unnamed_addr constant [23 x i8] c"float2 offset = %s.xy;\00", align 1
@.str.64 = private unnamed_addr constant [17 x i8] c"offset *= %s.xy;\00", align 1
@.str.65 = private unnamed_addr constant [40 x i8] c"float test = dot(offset, offset) - 1.0;\00", align 1
@.str.66 = private unnamed_addr constant [39 x i8] c"float2 grad = 2.0*offset*(%s.z*%s.xy);\00", align 1
@.str.67 = private unnamed_addr constant [32 x i8] c"float2 grad = 2.0*offset*%s.xy;\00", align 1
@.str.68 = private unnamed_addr constant [34 x i8] c"float grad_dot = dot(grad, grad);\00", align 1
@.str.69 = private unnamed_addr constant [38 x i8] c"grad_dot = max(grad_dot, 1.1755e-38);\00", align 1
@.str.70 = private unnamed_addr constant [37 x i8] c"grad_dot = max(grad_dot, 6.1036e-5);\00", align 1
@.str.71 = private unnamed_addr constant [43 x i8] c"float invlen = %s.z*inversesqrt(grad_dot);\00", align 1
@.str.72 = private unnamed_addr constant [38 x i8] c"float invlen = inversesqrt(grad_dot);\00", align 1
@.str.73 = private unnamed_addr constant [45 x i8] c"float edgeAlpha = saturate(0.5-test*invlen);\00", align 1
@.str.74 = private unnamed_addr constant [22 x i8] c"offset = %s.xy*%s.zw;\00", align 1
@.str.75 = private unnamed_addr constant [34 x i8] c"test = dot(offset, offset) - 1.0;\00", align 1
@.str.76 = private unnamed_addr constant [32 x i8] c"grad = 2.0*offset*(%s.z*%s.zw);\00", align 1
@.str.77 = private unnamed_addr constant [25 x i8] c"grad = 2.0*offset*%s.zw;\00", align 1
@.str.78 = private unnamed_addr constant [28 x i8] c"grad_dot = dot(grad, grad);\00", align 1
@.str.79 = private unnamed_addr constant [37 x i8] c"invlen = %s.z*inversesqrt(grad_dot);\00", align 1
@.str.80 = private unnamed_addr constant [32 x i8] c"invlen = inversesqrt(grad_dot);\00", align 1
@.str.81 = private unnamed_addr constant [40 x i8] c"edgeAlpha *= saturate(0.5+test*invlen);\00", align 1
@.str.82 = private unnamed_addr constant [35 x i8] c"half4 %s = half4(half(edgeAlpha));\00", align 1
@_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE38gStrokeRRectOnlyIndexBufferKey_storage = internal global %class.SkAlignedSTStorage.198 zeroinitializer, align 8
@_ZGVZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE38gStrokeRRectOnlyIndexBufferKey_storage = internal global i64 0, align 8
@_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE30gStrokeRRectOnlyIndexBufferKey = internal unnamed_addr global %class.GrUniqueKey* null, align 8
@_ZGVZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE30gStrokeRRectOnlyIndexBufferKey = internal global i64 0, align 8
@_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE32gRRectOnlyIndexBufferKey_storage = internal global %class.SkAlignedSTStorage.198 zeroinitializer, align 8
@_ZGVZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE32gRRectOnlyIndexBufferKey_storage = internal global i64 0, align 8
@_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE24gRRectOnlyIndexBufferKey = internal unnamed_addr global %class.GrUniqueKey* null, align 8
@_ZGVZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE24gRRectOnlyIndexBufferKey = internal global i64 0, align 8
@_ZL35gStrokeRRectOnlyIndexBufferKey_once = internal global { { { i8 } } } zeroinitializer, align 1
@_ZL29gRRectOnlyIndexBufferKey_once = internal global { { { i8 } } } zeroinitializer, align 1
@_ZTV21ButtCapDashedCircleOp = linkonce_odr hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.ButtCapDashedCircleOp*)* @_ZN21ButtCapDashedCircleOpD2Ev to i8*), i8* bitcast (void (%class.ButtCapDashedCircleOp*)* @_ZN21ButtCapDashedCircleOpD0Ev to i8*), i8* bitcast (i8* (%class.ButtCapDashedCircleOp*)* @_ZNK21ButtCapDashedCircleOp4nameEv to i8*), i8* bitcast (void (%class.ButtCapDashedCircleOp*, %"class.std::__1::function.137"*)* @_ZNK21ButtCapDashedCircleOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE to i8*), i8* bitcast (i32 (%class.ButtCapDashedCircleOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps*)* @_ZN21ButtCapDashedCircleOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrOpFlushState*)* @_ZN12GrMeshDrawOp9onPrepareEP14GrOpFlushState to i8*), i8* bitcast (void (%class.ButtCapDashedCircleOp*, %class.GrOpFlushState*, %struct.SkRect*)* @_ZN21ButtCapDashedCircleOp9onExecuteEP14GrOpFlushStateRK6SkRect to i8*), i8* bitcast (i32 (%class.ButtCapDashedCircleOp*)* @_ZNK21ButtCapDashedCircleOp18fixedFunctionFlagsEv to i8*), i8* bitcast (i32 (%class.ButtCapDashedCircleOp*, %class.GrCaps*, %class.GrAppliedClip*, i32)* @_ZN21ButtCapDashedCircleOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (%class.GrProgramInfo* (%class.ButtCapDashedCircleOp*)* @_ZN21ButtCapDashedCircleOp11programInfoEv to i8*), i8* bitcast (void (%class.ButtCapDashedCircleOp*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN21ButtCapDashedCircleOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%class.ButtCapDashedCircleOp*, %"class.GrMeshDrawOp::Target"*)* @_ZN21ButtCapDashedCircleOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE to i8*)] }, comdat, align 8
@_ZZN21ButtCapDashedCircleOp7ClassIDEvE8kClassID = linkonce_odr hidden local_unnamed_addr global i32 0, comdat, align 4
@_ZGVZN21ButtCapDashedCircleOp7ClassIDEvE8kClassID = linkonce_odr hidden global i64 0, comdat, align 8
@.str.85 = private unnamed_addr constant [25 x i8] c"ButtCappedDashedCircleOp\00", align 1
@_ZTV36ButtCapDashedCircleGeometryProcessor = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrProcessor*)* @_ZN11GrProcessorD2Ev to i8*), i8* bitcast (void (%class.ButtCapDashedCircleGeometryProcessor*)* @_ZN36ButtCapDashedCircleGeometryProcessorD0Ev to i8*), i8* bitcast (i8* (%class.ButtCapDashedCircleGeometryProcessor*)* @_ZNK36ButtCapDashedCircleGeometryProcessor4nameEv to i8*), i8* bitcast (void (%class.ButtCapDashedCircleGeometryProcessor*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK36ButtCapDashedCircleGeometryProcessor19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (%class.GrGLSLGeometryProcessor* (%class.ButtCapDashedCircleGeometryProcessor*, %class.GrShaderCaps*)* @_ZNK36ButtCapDashedCircleGeometryProcessor18createGLSLInstanceERK12GrShaderCaps to i8*), i8* bitcast (%"class.GrGeometryProcessor::TextureSampler"* (%class.GrGeometryProcessor*, i32)* @_ZNK19GrGeometryProcessor16onTextureSamplerEi to i8*)] }, comdat, align 8
@.ref.tmp.87 = private unnamed_addr constant %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i32 0, i32 0), i32 3, i32 24 }, align 8
@.str.88 = private unnamed_addr constant [13 x i8] c"inDashParams\00", align 1
@.ref.tmp.89 = private unnamed_addr constant %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.88, i32 0, i32 0), i32 3, i32 24 }, align 8
@.str.90 = private unnamed_addr constant [37 x i8] c"ButtCapDashedCircleGeometryProcessor\00", align 1
@_ZTVN36ButtCapDashedCircleGeometryProcessor13GLSLProcessorE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLGeometryProcessor*)* @_ZN23GrGLSLGeometryProcessorD2Ev to i8*), i8* bitcast (void (%"class.ButtCapDashedCircleGeometryProcessor::GLSLProcessor"*)* @_ZN36ButtCapDashedCircleGeometryProcessor13GLSLProcessorD0Ev to i8*), i8* bitcast (void (%"class.ButtCapDashedCircleGeometryProcessor::GLSLProcessor"*, %class.GrGLSLProgramDataManager*, %class.GrShaderCaps*, %class.GrGeometryProcessor*)* @_ZN36ButtCapDashedCircleGeometryProcessor13GLSLProcessor7setDataERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK19GrGeometryProcessor to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%"class.ButtCapDashedCircleGeometryProcessor::GLSLProcessor"*, %"struct.GrGLSLGeometryProcessor::EmitArgs"*, %"struct.GrGLSLGeometryProcessor::GrGPArgs"*)* @_ZN36ButtCapDashedCircleGeometryProcessor13GLSLProcessor10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS1_8GrGPArgsE to i8*)] }, comdat, align 8
@.str.91 = private unnamed_addr constant [19 x i8] c"float4 dashParams;\00", align 1
@.str.92 = private unnamed_addr constant [11 x i8] c"dashParams\00", align 1
@.str.93 = private unnamed_addr constant [11 x i8] c"wrapDashes\00", align 1
@.str.94 = private unnamed_addr constant [19 x i8] c"lastIntervalLength\00", align 1
@.str.95 = private unnamed_addr constant [24 x i8] c"float4 dashParams = %s;\00", align 1
@.str.96 = private unnamed_addr constant [2226 x i8] c"\0A                    // The two boundary dash intervals are stored in wrapDashes.xy and .zw and fed\0A                    // to the fragment shader as a varying.\0A                    float4 wrapDashes;\0A                    half lastIntervalLength = mod(6.28318530718, half(dashParams.y));\0A                    // We can happen to be perfectly divisible.\0A                    if (0 == lastIntervalLength) {\0A                        lastIntervalLength = half(dashParams.y);\0A                    }\0A                    // Let 'l' be the last interval before reaching 2 pi.\0A                    // Based on the phase determine whether (l-1)th, l-th, or (l+1)th interval's\0A                    // \22corresponding\22 dash appears in the l-th interval and is closest to the 0-th\0A                    // interval.\0A                    half offset = 0;\0A                    if (-dashParams.w >= lastIntervalLength) {\0A                         offset = half(-dashParams.y);\0A                    } else if (dashParams.w > dashParams.y - lastIntervalLength) {\0A                         offset = half(dashParams.y);\0A                    }\0A                    wrapDashes.x = -lastIntervalLength + offset - dashParams.w;\0A                    // The end of this dash may be beyond the 2 pi and therefore clipped. Hence the\0A                    // min.\0A                    wrapDashes.y = min(wrapDashes.x + dashParams.x, 0);\0A\0A                    // Based on the phase determine whether the -1st, 0th, or 1st interval's\0A                    // \22corresponding\22 dash appears in the 0th interval and is closest to l.\0A                    offset = 0;\0A                    if (dashParams.w >= dashParams.x) {\0A                        offset = half(dashParams.y);\0A                    } else if (-dashParams.w > dashParams.y - dashParams.x) {\0A                        offset = half(-dashParams.y);\0A                    }\0A                    wrapDashes.z = lastIntervalLength + offset - dashParams.w;\0A                    wrapDashes.w = wrapDashes.z + dashParams.x;\0A                    // The start of the dash we're considering may be clipped by the start of the\0A                    // circle.\0A                    wrapDashes.z = max(wrapDashes.z, lastIntervalLength);\0A            \00", align 1
@.str.97 = private unnamed_addr constant [24 x i8] c"%s = half4(wrapDashes);\00", align 1
@.str.98 = private unnamed_addr constant [25 x i8] c"%s = lastIntervalLength;\00", align 1
@.str.99 = private unnamed_addr constant [23 x i8] c"half4 wrapDashes = %s;\00", align 1
@.str.100 = private unnamed_addr constant [30 x i8] c"half lastIntervalLength = %s;\00", align 1
@.str.101 = private unnamed_addr constant [12 x i8] c"angleToEdge\00", align 1
@.str.102 = private unnamed_addr constant [9 x i8] c"diameter\00", align 1
@.str.103 = private unnamed_addr constant [24 x i8] c"coverage_from_dash_edge\00", align 1
@.str.104 = private unnamed_addr constant [244 x i8] c"\0A                    float linearDist;\0A                    angleToEdge = clamp(angleToEdge, -3.1415, 3.1415);\0A                    linearDist = diameter * sin(angleToEdge / 2);\0A                    return saturate(linearDist + 0.5);\0A            \00", align 1
@.str.105 = private unnamed_addr constant [1578 x i8] c"\0A                    float d = length(circleEdge.xy) * circleEdge.z;\0A\0A                    // Compute coverage from outer/inner edges of the stroke.\0A                    half distanceToOuterEdge = half(circleEdge.z - d);\0A                    half edgeAlpha = saturate(distanceToOuterEdge);\0A                    half distanceToInnerEdge = half(d - circleEdge.z * circleEdge.w);\0A                    half innerAlpha = saturate(distanceToInnerEdge);\0A                    edgeAlpha *= innerAlpha;\0A\0A                    half angleFromStart = half(atan(circleEdge.y, circleEdge.x) - dashParams.z);\0A                    angleFromStart = mod(angleFromStart, 6.28318530718);\0A                    float x = mod(angleFromStart, dashParams.y);\0A                    // Convert the radial distance from center to pixel into a diameter.\0A                    d *= 2;\0A                    half2 currDash = half2(half(-dashParams.w), half(dashParams.x) -\0A                                                                half(dashParams.w));\0A                    half2 nextDash = half2(half(dashParams.y) - half(dashParams.w),\0A                                           half(dashParams.y) + half(dashParams.x) -\0A                                                                half(dashParams.w));\0A                    half2 prevDash = half2(half(-dashParams.y) - half(dashParams.w),\0A                                           half(-dashParams.y) + half(dashParams.x) -\0A                                                                 half(dashParams.w));\0A                    half dashAlpha = 0;\0A                \00", align 1
@.str.106 = private unnamed_addr constant [721 x i8] c"\0A                    if (angleFromStart - x + dashParams.y >= 6.28318530718) {\0A                         dashAlpha += half(%s(x - wrapDashes.z, d) * %s(wrapDashes.w - x, d));\0A                         currDash.y = min(currDash.y, lastIntervalLength);\0A                         if (nextDash.x >= lastIntervalLength) {\0A                             // The next dash is outside the 0..2pi range, throw it away\0A                             nextDash.xy = half2(1000);\0A                         } else {\0A                             // Clip the end of the next dash to the end of the circle\0A                             nextDash.y = min(nextDash.y, lastIntervalLength);\0A                         }\0A                    }\0A            \00", align 1
@.str.107 = private unnamed_addr constant [666 x i8] c"\0A                    if (angleFromStart - x - dashParams.y < -0.01) {\0A                         dashAlpha += half(%s(x - wrapDashes.x, d) * %s(wrapDashes.y - x, d));\0A                         currDash.x = max(currDash.x, 0);\0A                         if (prevDash.y <= 0) {\0A                             // The previous dash is outside the 0..2pi range, throw it away\0A                             prevDash.xy = half2(1000);\0A                         } else {\0A                             // Clip the start previous dash to the start of the circle\0A                             prevDash.x = max(prevDash.x, 0);\0A                         }\0A                    }\0A            \00", align 1
@.str.108 = private unnamed_addr constant [367 x i8] c"\0A                    dashAlpha += half(%s(x - currDash.x, d) * %s(currDash.y - x, d));\0A                    dashAlpha += half(%s(x - nextDash.x, d) * %s(nextDash.y - x, d));\0A                    dashAlpha += half(%s(x - prevDash.x, d) * %s(prevDash.y - x, d));\0A                    dashAlpha = min(dashAlpha, 1);\0A                    edgeAlpha *= dashAlpha;\0A            \00", align 1
@_ZL13kOctagonOuter = internal unnamed_addr constant [8 x %struct.SkPoint] [%struct.SkPoint { float 0xBFDA8279A0000000, float -1.000000e+00 }, %struct.SkPoint { float 0x3FDA8279A0000000, float -1.000000e+00 }, %struct.SkPoint { float 1.000000e+00, float 0xBFDA8279A0000000 }, %struct.SkPoint { float 1.000000e+00, float 0x3FDA8279A0000000 }, %struct.SkPoint { float 0x3FDA8279A0000000, float 1.000000e+00 }, %struct.SkPoint { float 0xBFDA8279A0000000, float 1.000000e+00 }, %struct.SkPoint { float -1.000000e+00, float 0x3FDA8279A0000000 }, %struct.SkPoint { float -1.000000e+00, float 0xBFDA8279A0000000 }], align 16
@_ZL13kOctagonInner = internal unnamed_addr constant [8 x %struct.SkPoint] [%struct.SkPoint { float 0xBFD87DE2A0000000, float 0xBFED8DF6A0000000 }, %struct.SkPoint { float 0x3FD87DE2A0000000, float 0xBFED8DF6A0000000 }, %struct.SkPoint { float 0x3FED8DF6A0000000, float 0xBFD87DE2A0000000 }, %struct.SkPoint { float 0x3FED8DF6A0000000, float 0x3FD87DE2A0000000 }, %struct.SkPoint { float 0x3FD87DE2A0000000, float 0x3FED8DF6A0000000 }, %struct.SkPoint { float 0xBFD87DE2A0000000, float 0x3FED8DF6A0000000 }, %struct.SkPoint { float 0xBFED8DF6A0000000, float 0x3FD87DE2A0000000 }, %struct.SkPoint { float 0xBFED8DF6A0000000, float 0xBFD87DE2A0000000 }], align 16
@_ZL20gStrokeCircleIndices = internal unnamed_addr constant [48 x i16] [i16 0, i16 1, i16 9, i16 0, i16 9, i16 8, i16 1, i16 2, i16 10, i16 1, i16 10, i16 9, i16 2, i16 3, i16 11, i16 2, i16 11, i16 10, i16 3, i16 4, i16 12, i16 3, i16 12, i16 11, i16 4, i16 5, i16 13, i16 4, i16 13, i16 12, i16 5, i16 6, i16 14, i16 5, i16 14, i16 13, i16 6, i16 7, i16 15, i16 6, i16 15, i16 14, i16 7, i16 0, i16 8, i16 7, i16 8, i16 15], align 16
@_ZL18gFillCircleIndices = internal unnamed_addr constant [24 x i16] [i16 0, i16 1, i16 8, i16 1, i16 2, i16 8, i16 2, i16 3, i16 8, i16 3, i16 4, i16 8, i16 4, i16 5, i16 8, i16 5, i16 6, i16 8, i16 6, i16 7, i16 8, i16 7, i16 0, i16 8], align 16
@_ZTV8CircleOp = linkonce_odr hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CircleOp*)* @_ZN8CircleOpD2Ev to i8*), i8* bitcast (void (%class.CircleOp*)* @_ZN8CircleOpD0Ev to i8*), i8* bitcast (i8* (%class.CircleOp*)* @_ZNK8CircleOp4nameEv to i8*), i8* bitcast (void (%class.CircleOp*, %"class.std::__1::function.137"*)* @_ZNK8CircleOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE to i8*), i8* bitcast (i32 (%class.CircleOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps*)* @_ZN8CircleOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrOpFlushState*)* @_ZN12GrMeshDrawOp9onPrepareEP14GrOpFlushState to i8*), i8* bitcast (void (%class.CircleOp*, %class.GrOpFlushState*, %struct.SkRect*)* @_ZN8CircleOp9onExecuteEP14GrOpFlushStateRK6SkRect to i8*), i8* bitcast (i32 (%class.CircleOp*)* @_ZNK8CircleOp18fixedFunctionFlagsEv to i8*), i8* bitcast (i32 (%class.CircleOp*, %class.GrCaps*, %class.GrAppliedClip*, i32)* @_ZN8CircleOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (%class.GrProgramInfo* (%class.CircleOp*)* @_ZN8CircleOp11programInfoEv to i8*), i8* bitcast (void (%class.CircleOp*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN8CircleOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%class.CircleOp*, %"class.GrMeshDrawOp::Target"*)* @_ZN8CircleOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE to i8*)] }, comdat, align 8
@_ZZN8CircleOp7ClassIDEvE8kClassID = linkonce_odr hidden local_unnamed_addr global i32 0, comdat, align 4
@_ZGVZN8CircleOp7ClassIDEvE8kClassID = linkonce_odr hidden global i64 0, comdat, align 8
@.str.109 = private unnamed_addr constant [9 x i8] c"CircleOp\00", align 1
@_ZTV9EllipseOp = linkonce_odr hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.EllipseOp*)* @_ZN9EllipseOpD2Ev to i8*), i8* bitcast (void (%class.EllipseOp*)* @_ZN9EllipseOpD0Ev to i8*), i8* bitcast (i8* (%class.EllipseOp*)* @_ZNK9EllipseOp4nameEv to i8*), i8* bitcast (void (%class.EllipseOp*, %"class.std::__1::function.137"*)* @_ZNK9EllipseOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE to i8*), i8* bitcast (i32 (%class.EllipseOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps*)* @_ZN9EllipseOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrOpFlushState*)* @_ZN12GrMeshDrawOp9onPrepareEP14GrOpFlushState to i8*), i8* bitcast (void (%class.EllipseOp*, %class.GrOpFlushState*, %struct.SkRect*)* @_ZN9EllipseOp9onExecuteEP14GrOpFlushStateRK6SkRect to i8*), i8* bitcast (i32 (%class.EllipseOp*)* @_ZNK9EllipseOp18fixedFunctionFlagsEv to i8*), i8* bitcast (i32 (%class.EllipseOp*, %class.GrCaps*, %class.GrAppliedClip*, i32)* @_ZN9EllipseOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (%class.GrProgramInfo* (%class.EllipseOp*)* @_ZN9EllipseOp11programInfoEv to i8*), i8* bitcast (void (%class.EllipseOp*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN9EllipseOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%class.EllipseOp*, %"class.GrMeshDrawOp::Target"*)* @_ZN9EllipseOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE to i8*)] }, comdat, align 8
@_ZZN9EllipseOp7ClassIDEvE8kClassID = linkonce_odr hidden local_unnamed_addr global i32 0, comdat, align 4
@_ZGVZN9EllipseOp7ClassIDEvE8kClassID = linkonce_odr hidden global i64 0, comdat, align 8
@.str.110 = private unnamed_addr constant [10 x i8] c"EllipseOp\00", align 1
@_ZTV11DIEllipseOp = linkonce_odr hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.DIEllipseOp*)* @_ZN11DIEllipseOpD2Ev to i8*), i8* bitcast (void (%class.DIEllipseOp*)* @_ZN11DIEllipseOpD0Ev to i8*), i8* bitcast (i8* (%class.DIEllipseOp*)* @_ZNK11DIEllipseOp4nameEv to i8*), i8* bitcast (void (%class.DIEllipseOp*, %"class.std::__1::function.137"*)* @_ZNK11DIEllipseOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE to i8*), i8* bitcast (i32 (%class.DIEllipseOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps*)* @_ZN11DIEllipseOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrOpFlushState*)* @_ZN12GrMeshDrawOp9onPrepareEP14GrOpFlushState to i8*), i8* bitcast (void (%class.DIEllipseOp*, %class.GrOpFlushState*, %struct.SkRect*)* @_ZN11DIEllipseOp9onExecuteEP14GrOpFlushStateRK6SkRect to i8*), i8* bitcast (i32 (%class.DIEllipseOp*)* @_ZNK11DIEllipseOp18fixedFunctionFlagsEv to i8*), i8* bitcast (i32 (%class.DIEllipseOp*, %class.GrCaps*, %class.GrAppliedClip*, i32)* @_ZN11DIEllipseOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (%class.GrProgramInfo* (%class.DIEllipseOp*)* @_ZN11DIEllipseOp11programInfoEv to i8*), i8* bitcast (void (%class.DIEllipseOp*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN11DIEllipseOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%class.DIEllipseOp*, %"class.GrMeshDrawOp::Target"*)* @_ZN11DIEllipseOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE to i8*)] }, comdat, align 8
@_ZZN11DIEllipseOp7ClassIDEvE8kClassID = linkonce_odr hidden local_unnamed_addr global i32 0, comdat, align 4
@_ZGVZN11DIEllipseOp7ClassIDEvE8kClassID = linkonce_odr hidden global i64 0, comdat, align 8
@.str.111 = private unnamed_addr constant [12 x i8] c"DIEllipseOp\00", align 1
@_ZTV26DIEllipseGeometryProcessor = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrProcessor*)* @_ZN11GrProcessorD2Ev to i8*), i8* bitcast (void (%class.DIEllipseGeometryProcessor*)* @_ZN26DIEllipseGeometryProcessorD0Ev to i8*), i8* bitcast (i8* (%class.DIEllipseGeometryProcessor*)* @_ZNK26DIEllipseGeometryProcessor4nameEv to i8*), i8* bitcast (void (%class.DIEllipseGeometryProcessor*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK26DIEllipseGeometryProcessor19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (%class.GrGLSLGeometryProcessor* (%class.DIEllipseGeometryProcessor*, %class.GrShaderCaps*)* @_ZNK26DIEllipseGeometryProcessor18createGLSLInstanceERK12GrShaderCaps to i8*), i8* bitcast (%"class.GrGeometryProcessor::TextureSampler"* (%class.GrGeometryProcessor*, i32)* @_ZNK19GrGeometryProcessor16onTextureSamplerEi to i8*)] }, comdat, align 8
@.ref.tmp.112 = private unnamed_addr constant %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i32 0, i32 0), i32 1, i32 22 }, align 8
@.str.113 = private unnamed_addr constant [18 x i8] c"inEllipseOffsets0\00", align 1
@.ref.tmp.114 = private unnamed_addr constant %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.113, i32 0, i32 0), i32 2, i32 23 }, align 8
@.ref.tmp.115 = private unnamed_addr constant %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.113, i32 0, i32 0), i32 1, i32 22 }, align 8
@.str.116 = private unnamed_addr constant [18 x i8] c"inEllipseOffsets1\00", align 1
@.ref.tmp.117 = private unnamed_addr constant %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.116, i32 0, i32 0), i32 1, i32 22 }, align 8
@.str.118 = private unnamed_addr constant [27 x i8] c"DIEllipseGeometryProcessor\00", align 1
@.str.119 = private unnamed_addr constant [6 x i8] c"style\00", align 1
@.str.120 = private unnamed_addr constant [15 x i8] c"viewMatrixType\00", align 1
@_ZTVN26DIEllipseGeometryProcessor13GLSLProcessorE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLGeometryProcessor*)* @_ZN23GrGLSLGeometryProcessorD2Ev to i8*), i8* bitcast (void (%"class.DIEllipseGeometryProcessor::GLSLProcessor"*)* @_ZN26DIEllipseGeometryProcessor13GLSLProcessorD0Ev to i8*), i8* bitcast (void (%"class.DIEllipseGeometryProcessor::GLSLProcessor"*, %class.GrGLSLProgramDataManager*, %class.GrShaderCaps*, %class.GrGeometryProcessor*)* @_ZN26DIEllipseGeometryProcessor13GLSLProcessor7setDataERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK19GrGeometryProcessor to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%"class.DIEllipseGeometryProcessor::GLSLProcessor"*, %"struct.GrGLSLGeometryProcessor::EmitArgs"*, %"struct.GrGLSLGeometryProcessor::GrGPArgs"*)* @_ZN26DIEllipseGeometryProcessor13GLSLProcessor10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS1_8GrGPArgsE to i8*)] }, comdat, align 8
@.str.121 = private unnamed_addr constant [16 x i8] c"EllipseOffsets0\00", align 1
@.str.122 = private unnamed_addr constant [16 x i8] c"EllipseOffsets1\00", align 1
@.str.123 = private unnamed_addr constant [29 x i8] c"float2 scaledOffset = %s.xy;\00", align 1
@.str.124 = private unnamed_addr constant [52 x i8] c"float test = dot(scaledOffset, scaledOffset) - 1.0;\00", align 1
@.str.125 = private unnamed_addr constant [28 x i8] c"float2 duvdx = dFdx(%s.xy);\00", align 1
@.str.126 = private unnamed_addr constant [28 x i8] c"float2 duvdy = dFdy(%s.xy);\00", align 1
@.str.127 = private unnamed_addr constant [100 x i8] c"float2 grad = float2(%s.x*duvdx.x + %s.y*duvdx.y,                     %s.x*duvdy.x + %s.y*duvdy.y);\00", align 1
@.str.128 = private unnamed_addr constant [14 x i8] c"grad *= %s.z;\00", align 1
@.str.129 = private unnamed_addr constant [38 x i8] c"float grad_dot = 4.0*dot(grad, grad);\00", align 1
@.str.130 = private unnamed_addr constant [16 x i8] c"invlen *= %s.z;\00", align 1
@.str.131 = private unnamed_addr constant [45 x i8] c"float edgeAlpha = saturate(1.0-test*invlen);\00", align 1
@.str.132 = private unnamed_addr constant [40 x i8] c"edgeAlpha *= saturate(1.0+test*invlen);\00", align 1
@.str.133 = private unnamed_addr constant [22 x i8] c"scaledOffset = %s.xy;\00", align 1
@.str.134 = private unnamed_addr constant [46 x i8] c"test = dot(scaledOffset, scaledOffset) - 1.0;\00", align 1
@.str.135 = private unnamed_addr constant [26 x i8] c"duvdx = float2(dFdx(%s));\00", align 1
@.str.136 = private unnamed_addr constant [26 x i8] c"duvdy = float2(dFdy(%s));\00", align 1
@.str.137 = private unnamed_addr constant [86 x i8] c"grad = float2(%s.x*duvdx.x + %s.y*duvdx.y,              %s.x*duvdy.x + %s.y*duvdy.y);\00", align 1
@.str.138 = private unnamed_addr constant [32 x i8] c"grad_dot = 4.0*dot(grad, grad);\00", align 1
@switch.table._ZN15CircularRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE = private unnamed_addr constant [3 x i32] [i32 16, i32 16, i32 24], align 4
@switch.table._ZN19GrGeometryProcessor19setVertexAttributesEPKNS_9AttributeEi = private unnamed_addr constant [26 x i64] [i64 4, i64 8, i64 12, i64 16, i64 4, i64 4, i64 8, i64 8, i64 12, i64 16, i64 4, i64 4, i64 4, i64 4, i64 4, i64 4, i64 4, i64 4, i64 4, i64 8, i64 4, i64 4, i64 4, i64 4, i64 4, i64 8], align 8

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrOp* @_ZN15GrOvalOpFactory19MakeCircularRRectOpEP18GrRecordingContextO7GrPaintRK8SkMatrixRK7SkRRectRK11SkStrokeRecPK12GrShaderCaps(%class.GrRecordingContext* nocapture readnone, %class.GrPaint* dereferenceable(48), %class.SkMatrix* dereferenceable(40), %class.SkRRect* dereferenceable(52), %class.SkStrokeRec* dereferenceable(16), %class.GrShaderCaps* nocapture readnone) local_unnamed_addr #0 align 2 {
  %7 = alloca %struct.SkRGBA4f, align 4
  %8 = alloca %struct.SkRect, align 4
  %9 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %3, i64 0, i32 0
  %10 = bitcast %struct.SkRect* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = bitcast %struct.SkRect* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 -1, i64 16, i1 false)
  %12 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %2, %struct.SkRect* nonnull %8, %struct.SkRect* dereferenceable(16) %9, i32 1) #12
  %13 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %3, i64 0, i32 1
  %14 = bitcast [4 x %struct.SkPoint]* %13 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 4
  %16 = extractelement <2 x float> %15, i32 0
  %17 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 0
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 3
  %20 = load float, float* %19, align 4
  %21 = fadd float %18, %20
  %22 = fmul float %16, %21
  %23 = call float @llvm.fabs.f32(float %22)
  %24 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %4, i64 0, i32 1
  %25 = load float, float* %24, align 4
  %26 = call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* %4) #12
  %27 = and i32 %26, -3
  %28 = icmp eq i32 %27, 0
  switch i32 %26, label %36 [
    i32 0, label %29
    i32 2, label %30
    i32 3, label %30
  ]

29:                                               ; preds = %6
  br label %36

30:                                               ; preds = %6, %6
  %31 = load float, float* %17, align 4
  %32 = load float, float* %19, align 4
  %33 = fadd float %31, %32
  %34 = fmul float %25, %33
  %35 = call float @llvm.fabs.f32(float %34)
  br label %36

36:                                               ; preds = %6, %29, %30
  %37 = phi float [ 1.000000e+00, %29 ], [ %35, %30 ], [ -1.000000e+00, %6 ]
  %38 = xor i1 %28, true
  %39 = fcmp olt float %23, 5.000000e-01
  %40 = and i1 %39, %38
  br i1 %40, label %59, label %41

41:                                               ; preds = %36
  %42 = bitcast %struct.SkRGBA4f* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #12
  %43 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 5
  %44 = bitcast %struct.SkRGBA4f* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %42, i8* align 4 %44, i64 16, i1 false) #12
  %45 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 3
  %46 = load i8, i8* %45, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %41
  %49 = call i8* @_Znwm(i64 200) #15
  br label %54

50:                                               ; preds = %41
  %51 = call i8* @_Znwm(i64 232) #12
  %52 = getelementptr inbounds i8, i8* %51, i64 200
  %53 = bitcast i8* %52 to %class.GrProcessorSet*
  call void @_ZN14GrProcessorSetC1EO7GrPaint(%class.GrProcessorSet* %53, %class.GrPaint* dereferenceable(48) %1) #12
  br label %54

54:                                               ; preds = %48, %50
  %55 = phi i8* [ %49, %48 ], [ %51, %50 ]
  %56 = phi %class.GrProcessorSet* [ null, %48 ], [ %53, %50 ]
  %57 = bitcast i8* %55 to %class.CircularRRectOp*
  call void @_ZN15CircularRRectOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrixRK6SkRectffb(%class.CircularRRectOp* nonnull %57, %class.GrProcessorSet* %56, %struct.SkRGBA4f* nonnull dereferenceable(16) %7, %class.SkMatrix* dereferenceable(40) %2, %struct.SkRect* nonnull dereferenceable(16) %8, float %23, float %37, i1 zeroext %28) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #12
  %58 = bitcast i8* %55 to %class.GrOp*
  br label %59

59:                                               ; preds = %36, %54
  %60 = phi %class.GrOp* [ %58, %54 ], [ null, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  ret %class.GrOp* %60
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #3

declare i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrOp* @_Z13make_rrect_opP18GrRecordingContextO7GrPaintRK8SkMatrixRK7SkRRectRK11SkStrokeRec(%class.GrRecordingContext*, %class.GrPaint* dereferenceable(48), %class.SkMatrix* dereferenceable(40), %class.SkRRect* dereferenceable(52), %class.SkStrokeRec* dereferenceable(16)) local_unnamed_addr #0 {
  %6 = alloca %struct.SkRect, align 4
  %7 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %3, i64 0, i32 0
  %8 = bitcast %struct.SkRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #12
  %9 = bitcast %struct.SkRect* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %9, i8 -1, i64 16, i1 false)
  %10 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %2, %struct.SkRect* nonnull %6, %struct.SkRect* dereferenceable(16) %7, i32 1) #12
  %11 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %3, i64 0, i32 1
  %12 = bitcast [4 x %struct.SkPoint]* %11 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 4
  %14 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 0
  %15 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 3
  %16 = bitcast %class.SkMatrix* %2 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 4
  %18 = shufflevector <2 x float> %13, <2 x float> undef, <2 x i32> zeroinitializer
  %19 = fmul <2 x float> %17, %18
  %20 = bitcast float* %15 to <2 x float>*
  %21 = load <2 x float>, <2 x float>* %20, align 4
  %22 = shufflevector <2 x float> %13, <2 x float> undef, <2 x i32> <i32 1, i32 1>
  %23 = fmul <2 x float> %22, %21
  %24 = fadd <2 x float> %19, %23
  %25 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %24)
  %26 = call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* %4) #12
  %27 = and i32 %26, -3
  %28 = icmp eq i32 %27, 0
  switch i32 %26, label %52 [
    i32 0, label %41
    i32 2, label %29
    i32 3, label %29
  ]

29:                                               ; preds = %5, %5
  %30 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %4, i64 0, i32 1
  %31 = load float, float* %30, align 4
  %32 = bitcast %class.SkMatrix* %2 to <2 x float>*
  %33 = load <2 x float>, <2 x float>* %32, align 4
  %34 = bitcast float* %15 to <2 x float>*
  %35 = load <2 x float>, <2 x float>* %34, align 4
  %36 = fadd <2 x float> %33, %35
  %37 = insertelement <2 x float> undef, float %31, i32 0
  %38 = shufflevector <2 x float> %37, <2 x float> undef, <2 x i32> zeroinitializer
  %39 = fmul <2 x float> %38, %36
  %40 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %39)
  br label %41

41:                                               ; preds = %5, %29
  %42 = phi <2 x float> [ %40, %29 ], [ <float 1.000000e+00, float 1.000000e+00>, %5 ]
  %43 = extractelement <2 x float> %42, i32 0
  %44 = fmul float %43, 5.000000e-01
  %45 = extractelement <2 x float> %25, i32 0
  %46 = fcmp ogt float %44, %45
  br i1 %46, label %71, label %47

47:                                               ; preds = %41
  %48 = extractelement <2 x float> %42, i32 1
  %49 = fmul float %48, 5.000000e-01
  %50 = extractelement <2 x float> %25, i32 1
  %51 = fcmp ogt float %49, %50
  br i1 %51, label %71, label %52

52:                                               ; preds = %5, %47
  %53 = phi <2 x float> [ <float -1.000000e+00, float -1.000000e+00>, %5 ], [ %42, %47 ]
  %54 = load float, float* %14, align 4
  %55 = fcmp oeq float %54, 0.000000e+00
  %56 = shufflevector <2 x float> %53, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %57 = insertelement <2 x i1> undef, i1 %55, i32 0
  %58 = shufflevector <2 x i1> %57, <2 x i1> undef, <2 x i32> zeroinitializer
  %59 = shufflevector <2 x float> %25, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %60 = select <2 x i1> %58, <2 x float> %25, <2 x float> %59
  %61 = select i1 %55, <2 x float> %56, <2 x float> %53
  br i1 %28, label %67, label %62

62:                                               ; preds = %52
  %63 = fcmp olt <2 x float> %60, <float 5.000000e-01, float 5.000000e-01>
  %64 = extractelement <2 x i1> %63, i32 0
  %65 = extractelement <2 x i1> %63, i32 1
  %66 = or i1 %65, %64
  br i1 %66, label %71, label %67

67:                                               ; preds = %62, %52
  %68 = extractelement <2 x float> %60, i32 0
  %69 = extractelement <2 x float> %60, i32 1
  %70 = call %class.GrOp* @_ZN17EllipticalRRectOp4MakeEP18GrRecordingContextO7GrPaintRK8SkMatrixRK6SkRectff7SkPointb(%class.GrRecordingContext* %0, %class.GrPaint* dereferenceable(48) %1, %class.SkMatrix* dereferenceable(40) %2, %struct.SkRect* nonnull dereferenceable(16) %6, float %69, float %68, <2 x float> %61, i1 zeroext %28)
  br label %71

71:                                               ; preds = %62, %41, %47, %67
  %72 = phi %class.GrOp* [ %70, %67 ], [ null, %47 ], [ null, %41 ], [ null, %62 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #12
  ret %class.GrOp* %72
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrOp* @_ZN17EllipticalRRectOp4MakeEP18GrRecordingContextO7GrPaintRK8SkMatrixRK6SkRectff7SkPointb(%class.GrRecordingContext*, %class.GrPaint* dereferenceable(48), %class.SkMatrix* dereferenceable(40), %struct.SkRect* dereferenceable(16), float, float, <2 x float>, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %9 = alloca <2 x float>, align 8
  %10 = bitcast <2 x float>* %9 to %struct.SkPoint*
  %11 = alloca float, align 4
  %12 = alloca float, align 4
  %13 = alloca i8, align 1
  store <2 x float> %6, <2 x float>* %9, align 8
  store float %4, float* %11, align 4
  store float %5, float* %12, align 4
  %14 = zext i1 %7 to i8
  store i8 %14, i8* %13, align 1
  %15 = getelementptr inbounds <2 x float>, <2 x float>* %9, i64 0, i64 0
  %16 = extractelement <2 x float> %6, i32 0
  %17 = fcmp ogt float %16, 0.000000e+00
  br i1 %17, label %18, label %68

18:                                               ; preds = %8
  %19 = extractelement <2 x float> %6, i32 1
  %20 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %10, i64 0, i32 1
  %21 = tail call float @_ZN7SkPoint6LengthEff(float %16, float %19) #12
  %22 = tail call float @llvm.fabs.f32(float %21) #12
  %23 = fcmp ugt float %22, 0x3F30000000000000
  br i1 %23, label %25, label %24

24:                                               ; preds = %18
  store float 5.000000e-01, float* %15, align 8
  store float 5.000000e-01, float* %20, align 4
  br label %28

25:                                               ; preds = %18
  call void @_ZNK7SkPoint5scaleEfPS_(%struct.SkPoint* nonnull %10, float 5.000000e-01, %struct.SkPoint* nonnull %10) #12
  %26 = load float, float* %15, align 8
  %27 = load float, float* %20, align 4
  br label %28

28:                                               ; preds = %25, %24
  %29 = phi float [ %27, %25 ], [ 5.000000e-01, %24 ]
  %30 = phi float [ %26, %25 ], [ 5.000000e-01, %24 ]
  %31 = call float @_ZN7SkPoint6LengthEff(float %30, float %29) #12
  %32 = fcmp ogt float %31, 5.000000e-01
  br i1 %32, label %36, label %33

33:                                               ; preds = %28
  %34 = load float, float* %12, align 4
  %35 = load float, float* %11, align 4
  br label %44

36:                                               ; preds = %28
  %37 = load float, float* %11, align 4
  %38 = fmul float %37, 5.000000e-01
  %39 = load float, float* %12, align 4
  %40 = fcmp ogt float %38, %39
  %41 = fmul float %39, 5.000000e-01
  %42 = fcmp ogt float %41, %37
  %43 = or i1 %40, %42
  br i1 %43, label %70, label %44

44:                                               ; preds = %33, %36
  %45 = phi float [ %35, %33 ], [ %37, %36 ]
  %46 = phi float [ %34, %33 ], [ %39, %36 ]
  %47 = load float, float* %15, align 8
  %48 = load float, float* %20, align 4
  %49 = insertelement <2 x float> undef, float %46, i32 0
  %50 = insertelement <2 x float> %49, float %48, i32 1
  %51 = fmul <2 x float> %50, %50
  %52 = insertelement <2 x float> undef, float %47, i32 0
  %53 = insertelement <2 x float> %52, float %45, i32 1
  %54 = fmul <2 x float> %53, %51
  %55 = extractelement <2 x float> %54, i32 0
  %56 = extractelement <2 x float> %54, i32 1
  %57 = fcmp olt float %55, %56
  br i1 %57, label %70, label %58

58:                                               ; preds = %44
  %59 = insertelement <2 x float> undef, float %45, i32 0
  %60 = insertelement <2 x float> %59, float %47, i32 1
  %61 = fmul <2 x float> %60, %60
  %62 = insertelement <2 x float> undef, float %48, i32 0
  %63 = insertelement <2 x float> %62, float %46, i32 1
  %64 = fmul <2 x float> %63, %61
  %65 = extractelement <2 x float> %64, i32 0
  %66 = extractelement <2 x float> %64, i32 1
  %67 = fcmp olt float %65, %66
  br i1 %67, label %70, label %68

68:                                               ; preds = %58, %8
  %69 = call %class.GrOp* @_ZN24GrSimpleMeshDrawOpHelper13FactoryHelperI17EllipticalRRectOpJRK8SkMatrixRK6SkRectRfS8_R7SkPointRbEEENSt3__110unique_ptrI4GrOpNSC_14default_deleteISE_EEEEP18GrRecordingContextO7GrPaintDpOT0_(%class.GrRecordingContext* %0, %class.GrPaint* dereferenceable(48) %1, %class.SkMatrix* dereferenceable(40) %2, %struct.SkRect* dereferenceable(16) %3, float* nonnull dereferenceable(4) %11, float* nonnull dereferenceable(4) %12, %struct.SkPoint* nonnull dereferenceable(8) %10, i8* nonnull dereferenceable(1) %13)
  br label %70

70:                                               ; preds = %58, %44, %36, %68
  %71 = phi %class.GrOp* [ %69, %68 ], [ null, %36 ], [ null, %44 ], [ null, %58 ]
  ret %class.GrOp* %71
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrOp* @_ZN15GrOvalOpFactory11MakeRRectOpEP18GrRecordingContextO7GrPaintRK8SkMatrixRK7SkRRectRK11SkStrokeRecPK12GrShaderCaps(%class.GrRecordingContext*, %class.GrPaint* dereferenceable(48), %class.SkMatrix* dereferenceable(40), %class.SkRRect* dereferenceable(52), %class.SkStrokeRec* dereferenceable(16), %class.GrShaderCaps* nocapture readonly) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.sk_sp.60, align 8
  %8 = alloca %struct.SkRect, align 4
  %9 = alloca %class.GrStyle, align 8
  %10 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %3, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 2
  br i1 %12, label %13, label %68

13:                                               ; preds = %6
  %14 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %3, i64 0, i32 0
  %15 = bitcast %class.GrStyle* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %15) #12
  %16 = bitcast %class.sk_sp.60* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = bitcast %class.SkStrokeRec* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 4 %17, i64 16, i1 false) #12
  %18 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %9, i64 0, i32 1, i32 0
  %19 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %9, i64 0, i32 2, i32 2, i32 1
  store float* null, float** %19, align 8
  %20 = bitcast %class.SkPathEffect** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 20, i1 false) #12
  %21 = bitcast %class.sk_sp.60* %7 to i64*
  store i64 0, i64* %21, align 8
  call void @_ZN7GrStyle14initPathEffectE5sk_spI12SkPathEffectE(%class.GrStyle* nonnull %9, %class.sk_sp.60* nonnull %7) #12
  %22 = getelementptr inbounds %class.sk_sp.60, %class.sk_sp.60* %7, i64 0, i32 0
  %23 = load %class.SkPathEffect*, %class.SkPathEffect** %22, align 8
  %24 = icmp eq %class.SkPathEffect* %23, null
  br i1 %24, label %35, label %25

25:                                               ; preds = %13
  %26 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 -1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %35

29:                                               ; preds = %25
  %30 = bitcast %class.SkPathEffect* %23 to %class.SkRefCntBase*
  %31 = bitcast %class.SkPathEffect* %23 to void (%class.SkRefCntBase*)***
  %32 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %31, align 8
  %33 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, i64 2
  %34 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, align 8
  call void %34(%class.SkRefCntBase* nonnull %30) #12
  br label %35

35:                                               ; preds = %13, %25, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  %36 = call %class.GrOp* @_ZN15GrOvalOpFactory10MakeOvalOpEP18GrRecordingContextO7GrPaintRK8SkMatrixRK6SkRectRK7GrStylePK12GrShaderCaps(%class.GrRecordingContext* %0, %class.GrPaint* dereferenceable(48) %1, %class.SkMatrix* dereferenceable(40) %2, %struct.SkRect* dereferenceable(16) %14, %class.GrStyle* nonnull dereferenceable(64) %9, %class.GrShaderCaps* %5)
  %37 = load float*, float** %19, align 8
  %38 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %9, i64 0, i32 2, i32 2, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds float, float* %37, i64 %40
  br label %42

42:                                               ; preds = %42, %35
  %43 = phi float* [ %41, %35 ], [ %45, %42 ]
  %44 = icmp ugt float* %43, %37
  %45 = getelementptr inbounds float, float* %43, i64 -1
  br i1 %44, label %42, label %46

46:                                               ; preds = %42
  %47 = ptrtoint %class.GrOp* %36 to i64
  %48 = bitcast float* %37 to i8*
  %49 = icmp eq i32 %39, 0
  br i1 %49, label %54, label %50

50:                                               ; preds = %46
  %51 = icmp sgt i32 %39, 4
  br i1 %51, label %52, label %53

52:                                               ; preds = %50
  call void @_Z7sk_freePv(i8* %48) #12
  br label %53

53:                                               ; preds = %52, %50
  store float* null, float** %19, align 8
  store i32 0, i32* %38, align 8
  br label %54

54:                                               ; preds = %53, %46
  %55 = load %class.SkPathEffect*, %class.SkPathEffect** %18, align 8
  %56 = icmp eq %class.SkPathEffect* %55, null
  br i1 %56, label %67, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %55, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw add i32* %58, i32 -1 acq_rel
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %67

61:                                               ; preds = %57
  %62 = bitcast %class.SkPathEffect* %55 to %class.SkRefCntBase*
  %63 = bitcast %class.SkPathEffect* %55 to void (%class.SkRefCntBase*)***
  %64 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %63, align 8
  %65 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %64, i64 2
  %66 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %65, align 8
  call void %66(%class.SkRefCntBase* nonnull %62) #12
  br label %67

67:                                               ; preds = %61, %57, %54
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %15) #12
  br label %151

68:                                               ; preds = %6
  %69 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = trunc i32 %70 to i8
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %77

73:                                               ; preds = %68
  %74 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %2) #12
  %75 = zext i8 %74 to i32
  store i32 %75, i32* %69, align 4
  %76 = load i32, i32* %10, align 4
  br label %77

77:                                               ; preds = %68, %73
  %78 = phi i32 [ %76, %73 ], [ %11, %68 ]
  %79 = phi i32 [ %75, %73 ], [ %70, %68 ]
  %80 = and i32 %79, 16
  %81 = icmp ne i32 %80, 0
  %82 = icmp eq i32 %78, 3
  %83 = and i1 %81, %82
  br i1 %83, label %84, label %151

84:                                               ; preds = %77
  %85 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %3, i64 0, i32 0
  %86 = bitcast %struct.SkRect* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %86, i8 -1, i64 16, i1 false) #12
  %87 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %2, %struct.SkRect* nonnull %8, %struct.SkRect* dereferenceable(16) %85, i32 1) #12
  %88 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %3, i64 0, i32 1
  %89 = bitcast [4 x %struct.SkPoint]* %88 to <2 x float>*
  %90 = load <2 x float>, <2 x float>* %89, align 4
  %91 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 0
  %92 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 3
  %93 = bitcast %class.SkMatrix* %2 to <2 x float>*
  %94 = load <2 x float>, <2 x float>* %93, align 4
  %95 = shufflevector <2 x float> %90, <2 x float> undef, <2 x i32> zeroinitializer
  %96 = fmul <2 x float> %94, %95
  %97 = bitcast float* %92 to <2 x float>*
  %98 = load <2 x float>, <2 x float>* %97, align 4
  %99 = shufflevector <2 x float> %90, <2 x float> undef, <2 x i32> <i32 1, i32 1>
  %100 = fmul <2 x float> %99, %98
  %101 = fadd <2 x float> %96, %100
  %102 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %101)
  %103 = call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* %4) #12
  %104 = and i32 %103, -3
  %105 = icmp eq i32 %104, 0
  switch i32 %103, label %129 [
    i32 0, label %118
    i32 2, label %106
    i32 3, label %106
  ]

106:                                              ; preds = %84, %84
  %107 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %4, i64 0, i32 1
  %108 = load float, float* %107, align 4
  %109 = bitcast %class.SkMatrix* %2 to <2 x float>*
  %110 = load <2 x float>, <2 x float>* %109, align 4
  %111 = bitcast float* %92 to <2 x float>*
  %112 = load <2 x float>, <2 x float>* %111, align 4
  %113 = fadd <2 x float> %110, %112
  %114 = insertelement <2 x float> undef, float %108, i32 0
  %115 = shufflevector <2 x float> %114, <2 x float> undef, <2 x i32> zeroinitializer
  %116 = fmul <2 x float> %115, %113
  %117 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %116)
  br label %118

118:                                              ; preds = %106, %84
  %119 = phi <2 x float> [ %117, %106 ], [ <float 1.000000e+00, float 1.000000e+00>, %84 ]
  %120 = extractelement <2 x float> %119, i32 0
  %121 = fmul float %120, 5.000000e-01
  %122 = extractelement <2 x float> %102, i32 0
  %123 = fcmp ogt float %121, %122
  br i1 %123, label %149, label %124

124:                                              ; preds = %118
  %125 = extractelement <2 x float> %119, i32 1
  %126 = fmul float %125, 5.000000e-01
  %127 = extractelement <2 x float> %102, i32 1
  %128 = fcmp ogt float %126, %127
  br i1 %128, label %149, label %129

129:                                              ; preds = %124, %84
  %130 = phi <2 x float> [ <float -1.000000e+00, float -1.000000e+00>, %84 ], [ %119, %124 ]
  %131 = load float, float* %91, align 4
  %132 = fcmp oeq float %131, 0.000000e+00
  %133 = shufflevector <2 x float> %130, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %134 = insertelement <2 x i1> undef, i1 %132, i32 0
  %135 = shufflevector <2 x i1> %134, <2 x i1> undef, <2 x i32> zeroinitializer
  %136 = shufflevector <2 x float> %102, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %137 = select <2 x i1> %135, <2 x float> %102, <2 x float> %136
  %138 = select i1 %132, <2 x float> %133, <2 x float> %130
  br i1 %105, label %144, label %139

139:                                              ; preds = %129
  %140 = fcmp olt <2 x float> %137, <float 5.000000e-01, float 5.000000e-01>
  %141 = extractelement <2 x i1> %140, i32 0
  %142 = extractelement <2 x i1> %140, i32 1
  %143 = or i1 %142, %141
  br i1 %143, label %149, label %144

144:                                              ; preds = %139, %129
  %145 = extractelement <2 x float> %137, i32 0
  %146 = extractelement <2 x float> %137, i32 1
  %147 = call %class.GrOp* @_ZN17EllipticalRRectOp4MakeEP18GrRecordingContextO7GrPaintRK8SkMatrixRK6SkRectff7SkPointb(%class.GrRecordingContext* %0, %class.GrPaint* dereferenceable(48) %1, %class.SkMatrix* dereferenceable(40) %2, %struct.SkRect* nonnull dereferenceable(16) %8, float %146, float %145, <2 x float> %138, i1 zeroext %105) #12
  %148 = ptrtoint %class.GrOp* %147 to i64
  br label %149

149:                                              ; preds = %118, %124, %139, %144
  %150 = phi i64 [ %148, %144 ], [ 0, %124 ], [ 0, %118 ], [ 0, %139 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #12
  br label %151

151:                                              ; preds = %77, %149, %67
  %152 = phi i64 [ %47, %67 ], [ %150, %149 ], [ 0, %77 ]
  %153 = inttoptr i64 %152 to %class.GrOp*
  ret %class.GrOp* %153
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrOp* @_ZN15GrOvalOpFactory10MakeOvalOpEP18GrRecordingContextO7GrPaintRK8SkMatrixRK6SkRectRK7GrStylePK12GrShaderCaps(%class.GrRecordingContext*, %class.GrPaint* dereferenceable(48), %class.SkMatrix* dereferenceable(40), %struct.SkRect* dereferenceable(16), %class.GrStyle* dereferenceable(64), %class.GrShaderCaps* nocapture readonly) local_unnamed_addr #4 align 2 {
  %7 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 2
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 0
  %10 = load float, float* %9, align 4
  %11 = fsub float %8, %10
  %12 = fcmp ogt float %11, 0x3F30000000000000
  br i1 %12, label %13, label %27

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 3
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 1
  %17 = load float, float* %16, align 4
  %18 = fsub float %15, %17
  %19 = fsub float %11, %18
  %20 = tail call float @llvm.fabs.f32(float %19) #12
  %21 = fcmp ugt float %20, 0x3F30000000000000
  br i1 %21, label %27, label %22

22:                                               ; preds = %13
  %23 = tail call zeroext i1 @_ZNK8SkMatrix12isSimilarityEf(%class.SkMatrix* %2, float 0x3F30000000000000) #12
  br i1 %23, label %24, label %27

24:                                               ; preds = %22
  %25 = tail call %class.GrOp* @_ZN15GrOvalOpFactory12MakeCircleOpEP18GrRecordingContextO7GrPaintRK8SkMatrixRK6SkRectRK7GrStylePK12GrShaderCaps(%class.GrRecordingContext* %0, %class.GrPaint* dereferenceable(48) %1, %class.SkMatrix* dereferenceable(40) %2, %struct.SkRect* dereferenceable(16) %3, %class.GrStyle* dereferenceable(64) %4, %class.GrShaderCaps* %5)
  %26 = ptrtoint %class.GrOp* %25 to i64
  br label %75

27:                                               ; preds = %13, %22, %6
  %28 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %4, i64 0, i32 1, i32 0
  %29 = load %class.SkPathEffect*, %class.SkPathEffect** %28, align 8
  %30 = icmp eq %class.SkPathEffect* %29, null
  br i1 %30, label %31, label %75

31:                                               ; preds = %27
  %32 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = trunc i32 %33 to i8
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %31
  %37 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %2) #12
  %38 = zext i8 %37 to i32
  store i32 %38, i32* %32, align 4
  br label %39

39:                                               ; preds = %31, %36
  %40 = phi i32 [ %38, %36 ], [ %33, %31 ]
  %41 = and i32 %40, 16
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %4, i64 0, i32 0
  %45 = tail call %class.GrOp* @_ZN9EllipseOp4MakeEP18GrRecordingContextO7GrPaintRK8SkMatrixRK6SkRectRK11SkStrokeRec(%class.GrRecordingContext* %0, %class.GrPaint* dereferenceable(48) %1, %class.SkMatrix* dereferenceable(40) %2, %struct.SkRect* dereferenceable(16) %3, %class.SkStrokeRec* dereferenceable(16) %44)
  %46 = ptrtoint %class.GrOp* %45 to i64
  br label %75

47:                                               ; preds = %39
  %48 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %5, i64 0, i32 2
  %49 = bitcast i56* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, 1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %75, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 0
  %55 = load float, float* %54, align 4
  %56 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 1
  %57 = load float, float* %56, align 4
  %58 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 3
  %59 = load float, float* %58, align 4
  %60 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 4
  %61 = load float, float* %60, align 4
  %62 = fmul float %55, %55
  %63 = fmul float %59, %59
  %64 = fadd float %62, %63
  %65 = fcmp ogt float %64, 0x3F30000000000000
  br i1 %65, label %66, label %75

66:                                               ; preds = %53
  %67 = fmul float %57, %57
  %68 = fmul float %61, %61
  %69 = fadd float %67, %68
  %70 = fcmp ogt float %69, 0x3F30000000000000
  br i1 %70, label %71, label %75

71:                                               ; preds = %66
  %72 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %4, i64 0, i32 0
  %73 = tail call %class.GrOp* @_ZN11DIEllipseOp4MakeEP18GrRecordingContextO7GrPaintRK8SkMatrixRK6SkRectRK11SkStrokeRec(%class.GrRecordingContext* %0, %class.GrPaint* dereferenceable(48) %1, %class.SkMatrix* dereferenceable(40) %2, %struct.SkRect* dereferenceable(16) %3, %class.SkStrokeRec* dereferenceable(16) %72)
  %74 = ptrtoint %class.GrOp* %73 to i64
  br label %75

75:                                               ; preds = %47, %53, %66, %27, %71, %43, %24
  %76 = phi i64 [ %26, %24 ], [ %46, %43 ], [ %74, %71 ], [ 0, %27 ], [ 0, %66 ], [ 0, %53 ], [ 0, %47 ]
  %77 = inttoptr i64 %76 to %class.GrOp*
  ret %class.GrOp* %77
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrOp* @_ZN15GrOvalOpFactory12MakeCircleOpEP18GrRecordingContextO7GrPaintRK8SkMatrixRK6SkRectRK7GrStylePK12GrShaderCaps(%class.GrRecordingContext*, %class.GrPaint* dereferenceable(48), %class.SkMatrix* dereferenceable(40), %struct.SkRect* dereferenceable(16), %class.GrStyle* dereferenceable(64), %class.GrShaderCaps* nocapture readonly) local_unnamed_addr #0 align 2 {
  %7 = alloca <2 x float>, align 8
  %8 = alloca float, align 4
  %9 = alloca float, align 4
  %10 = alloca float, align 4
  %11 = alloca float, align 4
  %12 = alloca float, align 4
  %13 = alloca float, align 4
  %14 = alloca %class.sk_sp.60, align 8
  %15 = alloca %class.GrStyle, align 8
  %16 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 0
  %17 = load float, float* %16, align 4
  %18 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 1
  %19 = bitcast float* %18 to <2 x float>*
  %20 = load <2 x float>, <2 x float>* %19, align 4
  %21 = extractelement <2 x float> %20, i32 1
  %22 = fsub float %21, %17
  %23 = fmul float %22, 5.000000e-01
  %24 = fmul <2 x float> %20, <float 5.000000e-01, float 5.000000e-01>
  %25 = shufflevector <2 x float> %24, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %26 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 3
  %27 = load float, float* %26, align 4
  %28 = insertelement <2 x float> undef, float %17, i32 0
  %29 = insertelement <2 x float> %28, float %27, i32 1
  %30 = fmul <2 x float> %29, <float 5.000000e-01, float 5.000000e-01>
  %31 = fadd <2 x float> %25, %30
  %32 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %4, i64 0, i32 1, i32 0
  %33 = load %class.SkPathEffect*, %class.SkPathEffect** %32, align 8
  %34 = icmp eq %class.SkPathEffect* %33, null
  %35 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %4, i64 0, i32 2, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 1
  br i1 %34, label %39, label %38

38:                                               ; preds = %6
  br i1 %37, label %40, label %135

39:                                               ; preds = %6
  br i1 %37, label %40, label %132

40:                                               ; preds = %38, %39
  %41 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %4, i64 0, i32 0, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = and i32 %42, 65535
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %135

45:                                               ; preds = %40
  %46 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %4, i64 0, i32 2, i32 2, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, 2
  br i1 %48, label %49, label %135

49:                                               ; preds = %45
  %50 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %4, i64 0, i32 0, i32 1
  %51 = load float, float* %50, align 4
  %52 = fcmp ult float %51, %22
  br i1 %52, label %53, label %135

53:                                               ; preds = %49
  %54 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %4, i64 0, i32 2, i32 2, i32 1
  %55 = load float*, float** %54, align 8
  %56 = load float, float* %55, align 4
  %57 = getelementptr inbounds float, float* %55, i64 1
  %58 = load float, float* %57, align 4
  %59 = fcmp oeq float %58, 0.000000e+00
  br i1 %59, label %60, label %114

60:                                               ; preds = %53
  %61 = bitcast %class.GrStyle* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %61) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %61, i8* align 8 bitcast ({ %class.SkStrokeRec, %class.sk_sp.60, { i32, float, { i32, [4 x i8], float*, [16 x i8] } } }* @__const._ZN15GrOvalOpFactory12MakeCircleOpEP18GrRecordingContextO7GrPaintRK8SkMatrixRK6SkRectRK7GrStylePK12GrShaderCaps.strokeStyle to i8*), i64 64, i1 false)
  %62 = bitcast %class.sk_sp.60* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62)
  %63 = bitcast %class.GrStyle* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %61, i8* align 4 %63, i64 16, i1 false) #12
  %64 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %15, i64 0, i32 1, i32 0
  %65 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %15, i64 0, i32 2, i32 2, i32 1
  store float* null, float** %65, align 8
  %66 = bitcast %class.SkPathEffect** %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 20, i1 false) #12
  %67 = bitcast %class.sk_sp.60* %14 to i64*
  store i64 0, i64* %67, align 8
  call void @_ZN7GrStyle14initPathEffectE5sk_spI12SkPathEffectE(%class.GrStyle* nonnull %15, %class.sk_sp.60* nonnull %14) #12
  %68 = getelementptr inbounds %class.sk_sp.60, %class.sk_sp.60* %14, i64 0, i32 0
  %69 = load %class.SkPathEffect*, %class.SkPathEffect** %68, align 8
  %70 = icmp eq %class.SkPathEffect* %69, null
  br i1 %70, label %81, label %71

71:                                               ; preds = %60
  %72 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %69, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = atomicrmw add i32* %72, i32 -1 acq_rel
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %75, label %81

75:                                               ; preds = %71
  %76 = bitcast %class.SkPathEffect* %69 to %class.SkRefCntBase*
  %77 = bitcast %class.SkPathEffect* %69 to void (%class.SkRefCntBase*)***
  %78 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %77, align 8
  %79 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %78, i64 2
  %80 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %79, align 8
  call void %80(%class.SkRefCntBase* nonnull %76) #12
  br label %81

81:                                               ; preds = %75, %71, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62)
  %82 = call %class.GrOp* @_ZN15GrOvalOpFactory10MakeOvalOpEP18GrRecordingContextO7GrPaintRK8SkMatrixRK6SkRectRK7GrStylePK12GrShaderCaps(%class.GrRecordingContext* %0, %class.GrPaint* dereferenceable(48) %1, %class.SkMatrix* dereferenceable(40) %2, %struct.SkRect* dereferenceable(16) %3, %class.GrStyle* nonnull dereferenceable(64) %15, %class.GrShaderCaps* %5)
  %83 = load float*, float** %65, align 8
  %84 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %15, i64 0, i32 2, i32 2, i32 0
  %85 = load i32, i32* %84, align 8
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds float, float* %83, i64 %86
  br label %88

88:                                               ; preds = %88, %81
  %89 = phi float* [ %87, %81 ], [ %91, %88 ]
  %90 = icmp ugt float* %89, %83
  %91 = getelementptr inbounds float, float* %89, i64 -1
  br i1 %90, label %88, label %92

92:                                               ; preds = %88
  %93 = ptrtoint %class.GrOp* %82 to i64
  %94 = bitcast float* %83 to i8*
  %95 = icmp eq i32 %85, 0
  br i1 %95, label %100, label %96

96:                                               ; preds = %92
  %97 = icmp sgt i32 %85, 4
  br i1 %97, label %98, label %99

98:                                               ; preds = %96
  call void @_Z7sk_freePv(i8* %94) #12
  br label %99

99:                                               ; preds = %98, %96
  store float* null, float** %65, align 8
  store i32 0, i32* %84, align 8
  br label %100

100:                                              ; preds = %99, %92
  %101 = load %class.SkPathEffect*, %class.SkPathEffect** %64, align 8
  %102 = icmp eq %class.SkPathEffect* %101, null
  br i1 %102, label %113, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %101, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = atomicrmw add i32* %104, i32 -1 acq_rel
  %106 = icmp eq i32 %105, 1
  br i1 %106, label %107, label %113

107:                                              ; preds = %103
  %108 = bitcast %class.SkPathEffect* %101 to %class.SkRefCntBase*
  %109 = bitcast %class.SkPathEffect* %101 to void (%class.SkRefCntBase*)***
  %110 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %109, align 8
  %111 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %110, i64 2
  %112 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %111, align 8
  call void %112(%class.SkRefCntBase* nonnull %108) #12
  br label %113

113:                                              ; preds = %100, %103, %107
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %61) #12
  br label %135

114:                                              ; preds = %53
  %115 = fcmp oeq float %56, 0.000000e+00
  br i1 %115, label %135, label %116

116:                                              ; preds = %114
  %117 = fdiv float %56, %23
  %118 = fdiv float %58, %23
  %119 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %4, i64 0, i32 2, i32 1
  %120 = load float, float* %119, align 4
  %121 = fdiv float %120, %23
  %122 = bitcast <2 x float>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122)
  %123 = bitcast float* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %123)
  %124 = bitcast float* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %124)
  %125 = bitcast float* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %125)
  %126 = bitcast float* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %126)
  %127 = bitcast float* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %127)
  %128 = bitcast float* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %128)
  %129 = bitcast <2 x float>* %7 to %struct.SkPoint*
  store <2 x float> %31, <2 x float>* %7, align 8
  store float %23, float* %8, align 4
  store float %51, float* %9, align 4
  store float 0.000000e+00, float* %10, align 4
  store float %117, float* %11, align 4
  store float %118, float* %12, align 4
  store float %121, float* %13, align 4
  %130 = call %class.GrOp* @_ZN24GrSimpleMeshDrawOpHelper13FactoryHelperI21ButtCapDashedCircleOpJRK8SkMatrixR7SkPointRfS7_S7_S7_S7_S7_EEENSt3__110unique_ptrI4GrOpNS8_14default_deleteISA_EEEEP18GrRecordingContextO7GrPaintDpOT0_(%class.GrRecordingContext* %0, %class.GrPaint* dereferenceable(48) %1, %class.SkMatrix* dereferenceable(40) %2, %struct.SkPoint* nonnull dereferenceable(8) %129, float* nonnull dereferenceable(4) %8, float* nonnull dereferenceable(4) %9, float* nonnull dereferenceable(4) %10, float* nonnull dereferenceable(4) %11, float* nonnull dereferenceable(4) %12, float* nonnull dereferenceable(4) %13) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %123)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %124)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %125)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %126)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %127)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %128)
  %131 = ptrtoint %class.GrOp* %130 to i64
  br label %135

132:                                              ; preds = %39
  %133 = tail call %class.GrOp* @_ZN8CircleOp4MakeEP18GrRecordingContextO7GrPaintRK8SkMatrix7SkPointfRK7GrStylePKNS_9ArcParamsE(%class.GrRecordingContext* %0, %class.GrPaint* dereferenceable(48) %1, %class.SkMatrix* dereferenceable(40) %2, <2 x float> %31, float %23, %class.GrStyle* dereferenceable(64) %4, %"struct.CircleOp::ArcParams"* null)
  %134 = ptrtoint %class.GrOp* %133 to i64
  br label %135

135:                                              ; preds = %38, %114, %40, %45, %49, %113, %116, %132
  %136 = phi i64 [ %93, %113 ], [ %131, %116 ], [ %134, %132 ], [ 0, %38 ], [ 0, %49 ], [ 0, %45 ], [ 0, %40 ], [ 0, %114 ]
  %137 = inttoptr i64 %136 to %class.GrOp*
  ret %class.GrOp* %137
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrOp* @_ZN8CircleOp4MakeEP18GrRecordingContextO7GrPaintRK8SkMatrix7SkPointfRK7GrStylePKNS_9ArcParamsE(%class.GrRecordingContext*, %class.GrPaint* dereferenceable(48), %class.SkMatrix* dereferenceable(40), <2 x float>, float, %class.GrStyle* dereferenceable(64), %"struct.CircleOp::ArcParams"*) local_unnamed_addr #0 comdat align 2 {
  %8 = alloca %struct.SkRGBA4f, align 4
  %9 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %5, i64 0, i32 1, i32 0
  %10 = load %class.SkPathEffect*, %class.SkPathEffect** %9, align 8
  %11 = icmp eq %class.SkPathEffect* %10, null
  br i1 %11, label %12, label %53

12:                                               ; preds = %7
  %13 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %5, i64 0, i32 0
  %14 = tail call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* %13) #12
  %15 = icmp eq %"struct.CircleOp::ArcParams"* %6, null
  br i1 %15, label %35, label %16

16:                                               ; preds = %12
  switch i32 %14, label %35 [
    i32 3, label %53
    i32 0, label %26
    i32 2, label %17
  ]

17:                                               ; preds = %16
  %18 = getelementptr inbounds %"struct.CircleOp::ArcParams", %"struct.CircleOp::ArcParams"* %6, i64 0, i32 2
  %19 = load i8, i8* %18, align 4, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %53

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %5, i64 0, i32 0, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 65535
  %25 = icmp eq i32 %24, 2
  br i1 %25, label %53, label %35

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"struct.CircleOp::ArcParams", %"struct.CircleOp::ArcParams"* %6, i64 0, i32 2
  %28 = load i8, i8* %27, align 4, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %53

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %5, i64 0, i32 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = and i32 %32, 65535
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %53

35:                                               ; preds = %30, %12, %16, %21
  %36 = bitcast %struct.SkRGBA4f* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #12
  %37 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 5
  %38 = bitcast %struct.SkRGBA4f* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %36, i8* align 4 %38, i64 16, i1 false) #12
  %39 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %35
  %43 = tail call i8* @_Znwm(i64 248) #15
  br label %48

44:                                               ; preds = %35
  %45 = tail call i8* @_Znwm(i64 280) #12
  %46 = getelementptr inbounds i8, i8* %45, i64 248
  %47 = bitcast i8* %46 to %class.GrProcessorSet*
  tail call void @_ZN14GrProcessorSetC1EO7GrPaint(%class.GrProcessorSet* %47, %class.GrPaint* dereferenceable(48) %1) #12
  br label %48

48:                                               ; preds = %42, %44
  %49 = phi i8* [ %43, %42 ], [ %45, %44 ]
  %50 = phi %class.GrProcessorSet* [ null, %42 ], [ %47, %44 ]
  %51 = bitcast i8* %49 to %class.CircleOp*
  call void @_ZN8CircleOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrix7SkPointfRK7GrStylePKNS_9ArcParamsE(%class.CircleOp* nonnull %51, %class.GrProcessorSet* %50, %struct.SkRGBA4f* nonnull dereferenceable(16) %8, %class.SkMatrix* dereferenceable(40) %2, <2 x float> %3, float %4, %class.GrStyle* dereferenceable(64) %5, %"struct.CircleOp::ArcParams"* %6) #12
  %52 = bitcast i8* %49 to %class.GrOp*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #12
  br label %53

53:                                               ; preds = %7, %26, %30, %21, %17, %16, %48
  %54 = phi %class.GrOp* [ %52, %48 ], [ null, %7 ], [ null, %16 ], [ null, %17 ], [ null, %21 ], [ null, %30 ], [ null, %26 ]
  ret %class.GrOp* %54
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrOp* @_ZN9EllipseOp4MakeEP18GrRecordingContextO7GrPaintRK8SkMatrixRK6SkRectRK11SkStrokeRec(%class.GrRecordingContext*, %class.GrPaint* dereferenceable(48), %class.SkMatrix* dereferenceable(40), %struct.SkRect* dereferenceable(16), %class.SkStrokeRec* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %struct.SkRGBA4f, align 4
  %7 = alloca %"struct.EllipseOp::DeviceSpaceParams", align 8
  %8 = alloca %struct.SkPoint, align 4
  %9 = bitcast %"struct.EllipseOp::DeviceSpaceParams"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"struct.EllipseOp::DeviceSpaceParams", %"struct.EllipseOp::DeviceSpaceParams"* %7, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.EllipseOp::DeviceSpaceParams", %"struct.EllipseOp::DeviceSpaceParams"* %7, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.EllipseOp::DeviceSpaceParams", %"struct.EllipseOp::DeviceSpaceParams"* %7, i64 0, i32 2
  %13 = getelementptr inbounds %"struct.EllipseOp::DeviceSpaceParams", %"struct.EllipseOp::DeviceSpaceParams"* %7, i64 0, i32 3
  %14 = getelementptr inbounds %"struct.EllipseOp::DeviceSpaceParams", %"struct.EllipseOp::DeviceSpaceParams"* %7, i64 0, i32 4
  %15 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 0
  %16 = getelementptr inbounds %"struct.EllipseOp::DeviceSpaceParams", %"struct.EllipseOp::DeviceSpaceParams"* %7, i64 0, i32 1
  %17 = bitcast float* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -1, i64 16, i1 false)
  %18 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 2
  %19 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 1
  %20 = bitcast %struct.SkRect* %3 to <2 x float>*
  %21 = load <2 x float>, <2 x float>* %20, align 4
  %22 = fmul <2 x float> %21, <float 5.000000e-01, float 5.000000e-01>
  %23 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 3
  %24 = bitcast float* %18 to <2 x float>*
  %25 = load <2 x float>, <2 x float>* %24, align 4
  %26 = fmul <2 x float> %25, <float 5.000000e-01, float 5.000000e-01>
  %27 = fadd <2 x float> %22, %26
  %28 = bitcast %"struct.EllipseOp::DeviceSpaceParams"* %7 to <2 x float>*
  store <2 x float> %27, <2 x float>* %28, align 8
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* %2, %struct.SkPoint* nonnull %10, %struct.SkPoint* nonnull %10, i32 1) #12
  %29 = load float, float* %18, align 4
  %30 = load float, float* %15, align 4
  %31 = fsub float %29, %30
  %32 = fmul float %31, 5.000000e-01
  %33 = load float, float* %23, align 4
  %34 = load float, float* %19, align 4
  %35 = fsub float %33, %34
  %36 = fmul float %35, 5.000000e-01
  %37 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 0
  %38 = load float, float* %37, align 4
  %39 = fmul float %32, %38
  %40 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 1
  %41 = load float, float* %40, align 4
  %42 = fmul float %41, %36
  %43 = fadd float %39, %42
  %44 = call float @llvm.fabs.f32(float %43)
  store float %44, float* %11, align 8
  %45 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 3
  %46 = load float, float* %45, align 4
  %47 = fmul float %32, %46
  %48 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 4
  %49 = load float, float* %48, align 4
  %50 = fmul float %36, %49
  %51 = fadd float %47, %50
  %52 = call float @llvm.fabs.f32(float %51)
  store float %52, float* %12, align 4
  %53 = bitcast %struct.SkPoint* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #12
  %54 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %8, i64 0, i32 0
  %55 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %8, i64 0, i32 1
  %56 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %4, i64 0, i32 1
  %57 = load float, float* %56, align 4
  %58 = fadd float %38, %46
  %59 = fmul float %58, %57
  %60 = call float @llvm.fabs.f32(float %59)
  store float %60, float* %54, align 4
  %61 = fadd float %41, %49
  %62 = fmul float %61, %57
  %63 = call float @llvm.fabs.f32(float %62)
  store float %63, float* %55, align 4
  %64 = call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* %4) #12
  %65 = and i32 %64, -3
  %66 = icmp eq i32 %65, 0
  store float 0.000000e+00, float* %13, align 8
  store float 0.000000e+00, float* %14, align 4
  switch i32 %64, label %116 [
    i32 3, label %67
    i32 2, label %67
    i32 0, label %67
  ]

67:                                               ; preds = %5, %5, %5
  %68 = call float @_ZN7SkPoint6LengthEff(float %60, float %63) #12
  %69 = call float @llvm.fabs.f32(float %68) #12
  %70 = fcmp ugt float %69, 0x3F30000000000000
  br i1 %70, label %72, label %71

71:                                               ; preds = %67
  store float 5.000000e-01, float* %54, align 4
  store float 5.000000e-01, float* %55, align 4
  br label %75

72:                                               ; preds = %67
  call void @_ZNK7SkPoint5scaleEfPS_(%struct.SkPoint* nonnull %8, float 5.000000e-01, %struct.SkPoint* nonnull %8) #12
  %73 = load float, float* %54, align 4
  %74 = load float, float* %55, align 4
  br label %75

75:                                               ; preds = %72, %71
  %76 = phi float [ %74, %72 ], [ 5.000000e-01, %71 ]
  %77 = phi float [ %73, %72 ], [ 5.000000e-01, %71 ]
  %78 = call float @_ZN7SkPoint6LengthEff(float %77, float %76) #12
  %79 = fcmp ogt float %78, 5.000000e-01
  %80 = load float, float* %11, align 8
  br i1 %79, label %83, label %81

81:                                               ; preds = %75
  %82 = load float, float* %12, align 4
  br label %90

83:                                               ; preds = %75
  %84 = fmul float %80, 5.000000e-01
  %85 = load float, float* %12, align 4
  %86 = fcmp ogt float %84, %85
  %87 = fmul float %85, 5.000000e-01
  %88 = fcmp ogt float %87, %80
  %89 = or i1 %86, %88
  br i1 %89, label %150, label %90

90:                                               ; preds = %81, %83
  %91 = phi float [ %82, %81 ], [ %85, %83 ]
  %92 = load float, float* %54, align 4
  %93 = fmul float %80, %91
  %94 = fmul float %92, %93
  %95 = load float, float* %55, align 4
  %96 = fmul float %95, %95
  %97 = fmul float %80, %96
  %98 = fcmp olt float %94, %97
  br i1 %98, label %150, label %99

99:                                               ; preds = %90
  %100 = insertelement <2 x float> undef, float %80, i32 0
  %101 = insertelement <2 x float> %100, float %92, i32 1
  %102 = fmul <2 x float> %101, %101
  %103 = insertelement <2 x float> undef, float %95, i32 0
  %104 = insertelement <2 x float> %103, float %91, i32 1
  %105 = fmul <2 x float> %102, %104
  %106 = extractelement <2 x float> %105, i32 0
  %107 = extractelement <2 x float> %105, i32 1
  %108 = fcmp olt float %106, %107
  br i1 %108, label %150, label %109

109:                                              ; preds = %99
  br i1 %66, label %110, label %113

110:                                              ; preds = %109
  %111 = fsub float %80, %92
  store float %111, float* %13, align 8
  %112 = fsub float %91, %95
  store float %112, float* %14, align 4
  br label %113

113:                                              ; preds = %110, %109
  %114 = fadd float %92, %80
  store float %114, float* %11, align 8
  %115 = fadd float %91, %95
  store float %115, float* %12, align 4
  br label %116

116:                                              ; preds = %5, %113
  %117 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %0, i64 0, i32 0, i32 0
  %118 = call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %117) #12
  %119 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %118, i64 0, i32 2, i32 0
  %120 = load %class.GrShaderCaps*, %class.GrShaderCaps** %119, align 8
  %121 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %120, i64 0, i32 2
  %122 = bitcast i56* %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = and i64 %123, 131072
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %132

126:                                              ; preds = %116
  %127 = load float, float* %11, align 8
  %128 = fcmp oge float %127, 1.638400e+04
  %129 = load float, float* %12, align 4
  %130 = fcmp oge float %129, 1.638400e+04
  %131 = or i1 %128, %130
  br i1 %131, label %150, label %132

132:                                              ; preds = %116, %126
  %133 = bitcast %struct.SkRGBA4f* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %133) #12
  %134 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 5
  %135 = bitcast %struct.SkRGBA4f* %134 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %133, i8* align 4 %135, i64 16, i1 false) #12
  %136 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 3
  %137 = load i8, i8* %136, align 8, !range !2
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %141, label %139

139:                                              ; preds = %132
  %140 = call i8* @_Znwm(i64 192) #15
  br label %145

141:                                              ; preds = %132
  %142 = call i8* @_Znwm(i64 224) #12
  %143 = getelementptr inbounds i8, i8* %142, i64 192
  %144 = bitcast i8* %143 to %class.GrProcessorSet*
  call void @_ZN14GrProcessorSetC1EO7GrPaint(%class.GrProcessorSet* %144, %class.GrPaint* dereferenceable(48) %1) #12
  br label %145

145:                                              ; preds = %139, %141
  %146 = phi i8* [ %140, %139 ], [ %142, %141 ]
  %147 = phi %class.GrProcessorSet* [ null, %139 ], [ %144, %141 ]
  %148 = bitcast i8* %146 to %class.EllipseOp*
  call void @_ZN9EllipseOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrixRKNS_17DeviceSpaceParamsERK11SkStrokeRec(%class.EllipseOp* nonnull %148, %class.GrProcessorSet* %147, %struct.SkRGBA4f* nonnull dereferenceable(16) %6, %class.SkMatrix* dereferenceable(40) %2, %"struct.EllipseOp::DeviceSpaceParams"* nonnull dereferenceable(24) %7, %class.SkStrokeRec* dereferenceable(16) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %133) #12
  %149 = bitcast i8* %146 to %class.GrOp*
  br label %150

150:                                              ; preds = %126, %90, %99, %83, %145
  %151 = phi %class.GrOp* [ %149, %145 ], [ null, %83 ], [ null, %99 ], [ null, %90 ], [ null, %126 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #12
  ret %class.GrOp* %151
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrOp* @_ZN11DIEllipseOp4MakeEP18GrRecordingContextO7GrPaintRK8SkMatrixRK6SkRectRK11SkStrokeRec(%class.GrRecordingContext*, %class.GrPaint* dereferenceable(48), %class.SkMatrix* dereferenceable(40), %struct.SkRect* dereferenceable(16), %class.SkStrokeRec* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %struct.SkRGBA4f, align 4
  %7 = alloca %"struct.DIEllipseOp::DeviceSpaceParams", align 8
  %8 = bitcast %"struct.DIEllipseOp::DeviceSpaceParams"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"struct.DIEllipseOp::DeviceSpaceParams", %"struct.DIEllipseOp::DeviceSpaceParams"* %7, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.DIEllipseOp::DeviceSpaceParams", %"struct.DIEllipseOp::DeviceSpaceParams"* %7, i64 0, i32 2
  %11 = getelementptr inbounds %"struct.DIEllipseOp::DeviceSpaceParams", %"struct.DIEllipseOp::DeviceSpaceParams"* %7, i64 0, i32 3
  %12 = getelementptr inbounds %"struct.DIEllipseOp::DeviceSpaceParams", %"struct.DIEllipseOp::DeviceSpaceParams"* %7, i64 0, i32 4
  %13 = getelementptr inbounds %"struct.DIEllipseOp::DeviceSpaceParams", %"struct.DIEllipseOp::DeviceSpaceParams"* %7, i64 0, i32 5
  %14 = bitcast %struct.SkRect* %3 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 4
  %16 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 2
  %17 = bitcast float* %16 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 4
  %19 = fmul <2 x float> %15, <float 5.000000e-01, float 5.000000e-01>
  %20 = fmul <2 x float> %18, <float 5.000000e-01, float 5.000000e-01>
  %21 = fadd <2 x float> %19, %20
  %22 = bitcast %"struct.DIEllipseOp::DeviceSpaceParams"* %7 to <2 x float>*
  store <2 x float> %21, <2 x float>* %22, align 8
  %23 = fsub <2 x float> %18, %15
  %24 = fmul <2 x float> %23, <float 5.000000e-01, float 5.000000e-01>
  %25 = extractelement <2 x float> %24, i32 0
  store float %25, float* %9, align 8
  %26 = extractelement <2 x float> %24, i32 1
  store float %26, float* %10, align 4
  %27 = tail call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* %4) #12
  %28 = icmp eq i32 %27, 2
  %29 = icmp eq i32 %27, 0
  %30 = select i1 %29, i32 1, i32 2
  %31 = select i1 %28, i32 0, i32 %30
  store i32 %31, i32* %13, align 8
  store float 0.000000e+00, float* %11, align 8
  store float 0.000000e+00, float* %12, align 4
  %32 = icmp ugt i32 %27, 1
  br i1 %32, label %33, label %76

33:                                               ; preds = %5
  %34 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %4, i64 0, i32 1
  %35 = load float, float* %34, align 4
  %36 = tail call float @llvm.fabs.f32(float %35) #12
  %37 = fcmp ole float %36, 0x3F30000000000000
  %38 = fmul float %35, 5.000000e-01
  %39 = select i1 %37, float 5.000000e-01, float %38
  %40 = fcmp ogt float %39, 5.000000e-01
  br i1 %40, label %41, label %48

41:                                               ; preds = %33
  %42 = fmul <2 x float> %24, <float 5.000000e-01, float 5.000000e-01>
  %43 = shufflevector <2 x float> %24, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %44 = fcmp ogt <2 x float> %42, %43
  %45 = extractelement <2 x i1> %44, i32 0
  %46 = extractelement <2 x i1> %44, i32 1
  %47 = or i1 %45, %46
  br i1 %47, label %119, label %48

48:                                               ; preds = %41, %33
  %49 = fmul float %26, %26
  %50 = fmul float %39, %49
  %51 = fmul float %39, %39
  %52 = fmul float %51, %25
  %53 = fcmp olt float %50, %52
  br i1 %53, label %119, label %54

54:                                               ; preds = %48
  %55 = insertelement <2 x float> undef, float %25, i32 0
  %56 = insertelement <2 x float> %55, float %51, i32 1
  %57 = fmul <2 x float> %24, %56
  %58 = extractelement <2 x float> %57, i32 0
  %59 = fmul float %39, %58
  %60 = extractelement <2 x float> %57, i32 1
  %61 = fcmp olt float %59, %60
  br i1 %61, label %119, label %62

62:                                               ; preds = %54
  br i1 %28, label %63, label %69

63:                                               ; preds = %62
  %64 = insertelement <2 x float> undef, float %39, i32 0
  %65 = shufflevector <2 x float> %64, <2 x float> undef, <2 x i32> zeroinitializer
  %66 = fsub <2 x float> %24, %65
  %67 = extractelement <2 x float> %66, i32 0
  store float %67, float* %11, align 8
  %68 = extractelement <2 x float> %66, i32 1
  store float %68, float* %12, align 4
  br label %69

69:                                               ; preds = %63, %62
  %70 = phi <2 x float> [ %66, %63 ], [ zeroinitializer, %62 ]
  %71 = insertelement <2 x float> undef, float %39, i32 0
  %72 = shufflevector <2 x float> %71, <2 x float> undef, <2 x i32> zeroinitializer
  %73 = fadd <2 x float> %72, %24
  %74 = extractelement <2 x float> %73, i32 0
  store float %74, float* %9, align 8
  %75 = extractelement <2 x float> %73, i32 1
  store float %75, float* %10, align 4
  br label %76

76:                                               ; preds = %69, %5
  %77 = phi <2 x float> [ %70, %69 ], [ zeroinitializer, %5 ]
  %78 = phi <2 x float> [ %73, %69 ], [ %24, %5 ]
  %79 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %0, i64 0, i32 0, i32 0
  %80 = tail call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %79) #12
  %81 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %80, i64 0, i32 2, i32 0
  %82 = load %class.GrShaderCaps*, %class.GrShaderCaps** %81, align 8
  %83 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %82, i64 0, i32 2
  %84 = bitcast i56* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = and i64 %85, 131072
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %94

88:                                               ; preds = %76
  %89 = extractelement <2 x float> %78, i32 0
  %90 = fcmp oge float %89, 1.638400e+04
  %91 = extractelement <2 x float> %78, i32 1
  %92 = fcmp oge float %91, 1.638400e+04
  %93 = or i1 %90, %92
  br i1 %93, label %119, label %94

94:                                               ; preds = %76, %88
  br i1 %28, label %95, label %101

95:                                               ; preds = %94
  %96 = fcmp ugt <2 x float> %77, zeroinitializer
  %97 = extractelement <2 x i1> %96, i32 0
  %98 = extractelement <2 x i1> %96, i32 1
  %99 = and i1 %97, %98
  br i1 %99, label %101, label %100

100:                                              ; preds = %95
  store i32 2, i32* %13, align 8
  br label %101

101:                                              ; preds = %95, %100, %94
  %102 = bitcast %struct.SkRGBA4f* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %102) #12
  %103 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 5
  %104 = bitcast %struct.SkRGBA4f* %103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %102, i8* align 4 %104, i64 16, i1 false) #12
  %105 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %110, label %108

108:                                              ; preds = %101
  %109 = tail call i8* @_Znwm(i64 208) #15
  br label %114

110:                                              ; preds = %101
  %111 = tail call i8* @_Znwm(i64 240) #12
  %112 = getelementptr inbounds i8, i8* %111, i64 208
  %113 = bitcast i8* %112 to %class.GrProcessorSet*
  tail call void @_ZN14GrProcessorSetC1EO7GrPaint(%class.GrProcessorSet* %113, %class.GrPaint* dereferenceable(48) %1) #12
  br label %114

114:                                              ; preds = %108, %110
  %115 = phi i8* [ %109, %108 ], [ %111, %110 ]
  %116 = phi %class.GrProcessorSet* [ null, %108 ], [ %113, %110 ]
  %117 = bitcast i8* %115 to %class.DIEllipseOp*
  call void @_ZN11DIEllipseOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERKNS_17DeviceSpaceParamsERK8SkMatrix(%class.DIEllipseOp* nonnull %117, %class.GrProcessorSet* %116, %struct.SkRGBA4f* nonnull dereferenceable(16) %6, %"struct.DIEllipseOp::DeviceSpaceParams"* nonnull dereferenceable(28) %7, %class.SkMatrix* dereferenceable(40) %2) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #12
  %118 = bitcast i8* %115 to %class.GrOp*
  br label %119

119:                                              ; preds = %88, %54, %48, %41, %114
  %120 = phi %class.GrOp* [ %118, %114 ], [ null, %41 ], [ null, %48 ], [ null, %54 ], [ null, %88 ]
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %8) #12
  ret %class.GrOp* %120
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrOp* @_ZN15GrOvalOpFactory9MakeArcOpEP18GrRecordingContextO7GrPaintRK8SkMatrixRK6SkRectffbRK7GrStylePK12GrShaderCaps(%class.GrRecordingContext*, %class.GrPaint* dereferenceable(48), %class.SkMatrix* dereferenceable(40), %struct.SkRect* nocapture readonly dereferenceable(16), float, float, i1 zeroext, %class.GrStyle* dereferenceable(64), %class.GrShaderCaps* nocapture readnone) local_unnamed_addr #0 align 2 {
  %10 = alloca %"struct.CircleOp::ArcParams", align 4
  %11 = zext i1 %6 to i8
  %12 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 2
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 0
  %15 = load float, float* %14, align 4
  %16 = fsub float %13, %15
  %17 = tail call float @llvm.fabs.f32(float %5)
  %18 = fcmp ult float %17, 3.600000e+02
  br i1 %18, label %19, label %46

19:                                               ; preds = %9
  %20 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 3
  %21 = load float, float* %20, align 4
  %22 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 1
  %23 = load float, float* %22, align 4
  %24 = fsub float %21, %23
  %25 = fsub float %16, %24
  %26 = tail call float @llvm.fabs.f32(float %25) #12
  %27 = fcmp ugt float %26, 0x3F30000000000000
  br i1 %27, label %46, label %28

28:                                               ; preds = %19
  %29 = tail call zeroext i1 @_ZNK8SkMatrix12isSimilarityEf(%class.SkMatrix* %2, float 0x3F30000000000000) #12
  br i1 %29, label %30, label %46

30:                                               ; preds = %28
  %31 = bitcast %struct.SkRect* %3 to <2 x float>*
  %32 = load <2 x float>, <2 x float>* %31, align 4
  %33 = fmul <2 x float> %32, <float 5.000000e-01, float 5.000000e-01>
  %34 = bitcast float* %12 to <2 x float>*
  %35 = load <2 x float>, <2 x float>* %34, align 4
  %36 = fmul <2 x float> %35, <float 5.000000e-01, float 5.000000e-01>
  %37 = fadd <2 x float> %33, %36
  %38 = bitcast %"struct.CircleOp::ArcParams"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %38) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %38, i8* align 4 bitcast ({ float, float, i8, [3 x i8] }* @__const._ZN15GrOvalOpFactory9MakeArcOpEP18GrRecordingContextO7GrPaintRK8SkMatrixRK6SkRectffbRK7GrStylePK12GrShaderCaps.arcParams to i8*), i64 12, i1 false)
  %39 = getelementptr inbounds %"struct.CircleOp::ArcParams", %"struct.CircleOp::ArcParams"* %10, i64 0, i32 0
  %40 = fmul float %4, 0x3F91DF46A0000000
  store float %40, float* %39, align 4
  %41 = getelementptr inbounds %"struct.CircleOp::ArcParams", %"struct.CircleOp::ArcParams"* %10, i64 0, i32 1
  %42 = fmul float %5, 0x3F91DF46A0000000
  store float %42, float* %41, align 4
  %43 = getelementptr inbounds %"struct.CircleOp::ArcParams", %"struct.CircleOp::ArcParams"* %10, i64 0, i32 2
  store i8 %11, i8* %43, align 4
  %44 = fmul float %16, 5.000000e-01
  %45 = call %class.GrOp* @_ZN8CircleOp4MakeEP18GrRecordingContextO7GrPaintRK8SkMatrix7SkPointfRK7GrStylePKNS_9ArcParamsE(%class.GrRecordingContext* %0, %class.GrPaint* dereferenceable(48) %1, %class.SkMatrix* dereferenceable(40) %2, <2 x float> %37, float %44, %class.GrStyle* dereferenceable(64) %7, %"struct.CircleOp::ArcParams"* nonnull %10)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %38) #12
  br label %46

46:                                               ; preds = %19, %28, %9, %30
  %47 = phi %class.GrOp* [ %45, %30 ], [ null, %9 ], [ null, %28 ], [ null, %19 ]
  ret %class.GrOp* %47
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15CircularRRectOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrixRK6SkRectffb(%class.CircularRRectOp*, %class.GrProcessorSet*, %struct.SkRGBA4f* dereferenceable(16), %class.SkMatrix* dereferenceable(40), %struct.SkRect* dereferenceable(16), float, float, i1 zeroext) unnamed_addr #4 comdat align 2 {
  %9 = alloca %struct.SkRGBA4f, align 8
  %10 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 0
  %11 = load atomic i8, i8* bitcast (i64* @_ZGVZN15CircularRRectOp7ClassIDEvE8kClassID to i8*) acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %21, !prof !3

13:                                               ; preds = %8
  %14 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN15CircularRRectOp7ClassIDEvE8kClassID) #12
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %13
  %17 = atomicrmw add i32* getelementptr inbounds (%"struct.std::__1::atomic.155", %"struct.std::__1::atomic.155"* @_ZN4GrOp14gCurrOpClassIDE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 329, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i64 0, i64 0)) #16
  unreachable

20:                                               ; preds = %16
  store i32 %17, i32* @_ZZN15CircularRRectOp7ClassIDEvE8kClassID, align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN15CircularRRectOp7ClassIDEvE8kClassID) #12
  br label %21

21:                                               ; preds = %8, %13, %20
  %22 = load i32, i32* @_ZZN15CircularRRectOp7ClassIDEvE8kClassID, align 4
  tail call void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp* %10, i32 %22) #12
  %23 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV15CircularRRectOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 1
  %25 = bitcast %class.SkMatrix* %24 to i8*
  %26 = bitcast %class.SkMatrix* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 4 %26, i64 40, i1 false)
  %27 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 2
  tail call void @_ZN24GrSimpleMeshDrawOpHelperC1EP14GrProcessorSet8GrAATypeNS_10InputFlagsE(%class.GrSimpleMeshDrawOpHelper* %27, %class.GrProcessorSet* %1, i32 1, i8 zeroext 0) #12
  %28 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 7, i32 0, i32 0, i64 48
  %29 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 7, i32 0, i32 0, i64 0
  %30 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 7, i32 0, i32 0, i64 56
  %31 = bitcast i8* %30 to i64*
  %32 = bitcast i8* %28 to i8**
  store i8* %29, i8** %32, align 8
  store i64 8589934592, i64* %31, align 8
  %33 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 8
  %34 = bitcast %struct.GrSimpleMesh** %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false)
  %35 = bitcast %struct.SkRect* %4 to <4 x float>*
  %36 = load <4 x float>, <4 x float>* %35, align 4
  %37 = fcmp ogt float %6, 0.000000e+00
  br i1 %37, label %38, label %67

38:                                               ; preds = %21
  %39 = tail call float @llvm.fabs.f32(float %6) #12
  %40 = fcmp ole float %39, 0x3F30000000000000
  %41 = fmul float %6, 5.000000e-01
  %42 = select i1 %40, float 5.000000e-01, float %41
  br i1 %7, label %43, label %58

43:                                               ; preds = %38
  %44 = fadd float %6, 2.500000e-01
  %45 = extractelement <4 x float> %36, i32 0
  %46 = extractelement <4 x float> %36, i32 2
  %47 = fsub float %46, %45
  %48 = fcmp ugt float %44, %47
  %49 = extractelement <4 x float> %36, i32 1
  %50 = extractelement <4 x float> %36, i32 3
  %51 = fsub float %50, %49
  %52 = fcmp ugt float %44, %51
  %53 = or i1 %48, %52
  br i1 %53, label %58, label %54

54:                                               ; preds = %43
  %55 = fsub float %5, %42
  %56 = fcmp oge float %55, 0.000000e+00
  %57 = select i1 %56, i32 1, i32 2
  br label %58

58:                                               ; preds = %43, %54, %38
  %59 = phi float [ %55, %54 ], [ 0.000000e+00, %43 ], [ 0.000000e+00, %38 ]
  %60 = phi i32 [ %57, %54 ], [ 0, %43 ], [ 0, %38 ]
  %61 = fadd float %42, %5
  %62 = insertelement <4 x float> undef, float %42, i32 0
  %63 = shufflevector <4 x float> %62, <4 x float> undef, <4 x i32> zeroinitializer
  %64 = fsub <4 x float> %36, %63
  %65 = fadd <4 x float> %36, %63
  %66 = shufflevector <4 x float> %64, <4 x float> %65, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  br label %67

67:                                               ; preds = %58, %21
  %68 = phi float [ %59, %58 ], [ 0.000000e+00, %21 ]
  %69 = phi float [ %61, %58 ], [ %5, %21 ]
  %70 = phi i32 [ %60, %58 ], [ 0, %21 ]
  %71 = phi <4 x float> [ %66, %58 ], [ %36, %21 ]
  %72 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0
  %73 = bitcast float* %72 to <4 x float>*
  store <4 x float> %71, <4 x float>* %73, align 8
  %74 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  store i16 1, i16* %74, align 2
  %75 = insertelement <4 x float> undef, float %68, i32 0
  %76 = insertelement <4 x float> %75, float %69, i32 1
  %77 = shufflevector <4 x float> %76, <4 x float> %71, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %78 = fadd <4 x float> %77, <float -5.000000e-01, float 5.000000e-01, float -5.000000e-01, float -5.000000e-01>
  %79 = extractelement <4 x float> %71, i32 2
  %80 = fadd float %79, 5.000000e-01
  %81 = extractelement <4 x float> %71, i32 3
  %82 = fadd float %81, 5.000000e-01
  %83 = bitcast i8* %28 to %class.SkTArray.75*
  %84 = bitcast %struct.SkRGBA4f* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84)
  %85 = bitcast %struct.SkRGBA4f* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %84, i8* align 4 %85, i64 16, i1 false)
  tail call void @_ZN8SkTArrayIN15CircularRRectOp5RRectELb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.75* %83, i32 1, i32 1) #12
  %86 = bitcast i8* %28 to %"struct.CircularRRectOp::RRect"**
  %87 = load %"struct.CircularRRectOp::RRect"*, %"struct.CircularRRectOp::RRect"** %86, align 8
  %88 = load i64, i64* %31, align 8
  %89 = lshr i64 %88, 1
  %90 = and i64 %89, 2147483647
  %91 = getelementptr inbounds %"struct.CircularRRectOp::RRect", %"struct.CircularRRectOp::RRect"* %87, i64 %90
  %92 = add i64 %88, 2
  %93 = and i64 %92, 4294967294
  %94 = and i64 %88, -4294967295
  %95 = or i64 %93, %94
  store i64 %95, i64* %31, align 8
  %96 = bitcast %"struct.CircularRRectOp::RRect"* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %96, i8* nonnull align 8 %84, i64 16, i1 false)
  %97 = getelementptr inbounds %"struct.CircularRRectOp::RRect", %"struct.CircularRRectOp::RRect"* %87, i64 %90, i32 1
  %98 = bitcast float* %97 to <4 x float>*
  store <4 x float> %78, <4 x float>* %98, align 4
  %99 = getelementptr inbounds %"struct.CircularRRectOp::RRect", %"struct.CircularRRectOp::RRect"* %87, i64 %90, i32 3, i32 2
  store float %80, float* %99, align 4
  %100 = getelementptr inbounds %"struct.CircularRRectOp::RRect", %"struct.CircularRRectOp::RRect"* %87, i64 %90, i32 3, i32 3
  store float %82, float* %100, align 4
  %101 = getelementptr inbounds %"struct.CircularRRectOp::RRect", %"struct.CircularRRectOp::RRect"* %87, i64 %90, i32 4
  store i32 %70, i32* %101, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84)
  switch i32 %70, label %104 [
    i32 0, label %105
    i32 1, label %105
    i32 2, label %102
  ]

102:                                              ; preds = %67
  %103 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 3
  store i32 24, i32* %103, align 8
  br label %109

104:                                              ; preds = %67
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 2461, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

105:                                              ; preds = %67, %67
  %106 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 3
  store i32 16, i32* %106, align 8
  switch i32 %70, label %108 [
    i32 0, label %109
    i32 1, label %107
  ]

107:                                              ; preds = %105
  br label %109

108:                                              ; preds = %105
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 2473, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

109:                                              ; preds = %105, %107, %102
  %110 = phi i32 [ 72, %102 ], [ 48, %107 ], [ 54, %105 ]
  %111 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 4
  store i32 %110, i32* %111, align 4
  %112 = icmp eq i32 %70, 0
  %113 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 5
  %114 = zext i1 %112 to i8
  store i8 %114, i8* %113, align 8
  ret void
}

declare void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp*, i32) unnamed_addr #2

declare void @_ZN24GrSimpleMeshDrawOpHelperC1EP14GrProcessorSet8GrAATypeNS_10InputFlagsE(%class.GrSimpleMeshDrawOpHelper*, %class.GrProcessorSet*, i32, i8 zeroext) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15CircularRRectOpD2Ev(%class.CircularRRectOp*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV15CircularRRectOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 7, i32 0, i32 0, i64 56
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 7, i32 0, i32 0, i64 48
  %10 = bitcast i8* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #12
  br label %12

12:                                               ; preds = %1, %8
  %13 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 2
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD1Ev(%class.GrSimpleMeshDrawOpHelper* %13) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %14 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %class.GrOp*, %class.GrOp** %14, align 8
  store %class.GrOp* null, %class.GrOp** %14, align 8
  %16 = icmp eq %class.GrOp* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  %18 = bitcast %class.GrOp* %15 to void (%class.GrOp*)***
  %19 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %19, i64 1
  %21 = load void (%class.GrOp*)*, void (%class.GrOp*)** %20, align 8
  tail call void %21(%class.GrOp* nonnull %15) #12
  br label %22

22:                                               ; preds = %12, %17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15CircularRRectOpD0Ev(%class.CircularRRectOp*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV15CircularRRectOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 7, i32 0, i32 0, i64 56
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 7, i32 0, i32 0, i64 48
  %10 = bitcast i8* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #12
  br label %12

12:                                               ; preds = %8, %1
  %13 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 2
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD1Ev(%class.GrSimpleMeshDrawOpHelper* %13) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %14 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %class.GrOp*, %class.GrOp** %14, align 8
  store %class.GrOp* null, %class.GrOp** %14, align 8
  %16 = icmp eq %class.GrOp* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  %18 = bitcast %class.GrOp* %15 to void (%class.GrOp*)***
  %19 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %19, i64 1
  %21 = load void (%class.GrOp*)*, void (%class.GrOp*)** %20, align 8
  tail call void %21(%class.GrOp* nonnull %15) #12
  br label %22

22:                                               ; preds = %12, %17
  %23 = bitcast %class.CircularRRectOp* %0 to i8*
  tail call void @_ZdlPv(i8* %23) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK15CircularRRectOp4nameEv(%class.CircularRRectOp*) unnamed_addr #4 comdat align 2 {
  ret i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK15CircularRRectOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.CircularRRectOp*, %"class.std::__1::function.137"*) unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 9
  %4 = load %class.GrProgramInfo*, %class.GrProgramInfo** %3, align 8
  %5 = icmp eq %class.GrProgramInfo* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %4, i64 0, i32 5
  %8 = load %class.GrPipeline*, %class.GrPipeline** %7, align 8
  tail call void @_ZNK10GrPipeline12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrPipeline* %8, %"class.std::__1::function.137"* %1) #12
  br label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 2, i32 0
  %11 = load %class.GrProcessorSet*, %class.GrProcessorSet** %10, align 8
  %12 = icmp eq %class.GrProcessorSet* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZNK14GrProcessorSet12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrProcessorSet* nonnull %11, %"class.std::__1::function.137"* %1) #12
  br label %14

14:                                               ; preds = %13, %9, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN15CircularRRectOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps(%class.CircularRRectOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps* dereferenceable(232)) unnamed_addr #4 comdat align 2 {
  %5 = bitcast %class.GrOp* %1 to %class.CircularRRectOp*
  %6 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 2, i32 1
  %9 = bitcast %"class.std::__1::unique_ptr"* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = add nsw i32 %10, %7
  %12 = icmp sgt i32 %11, 65536
  br i1 %12, label %129, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 2
  %15 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 1, i32 6, i32 2
  %16 = bitcast float* %15 to %class.GrSimpleMeshDrawOpHelper*
  %17 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %18 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 0, i32 6
  %19 = tail call zeroext i1 @_ZNK24GrSimpleMeshDrawOpHelper12isCompatibleERKS_RK6GrCapsRK6SkRectS7_b(%class.GrSimpleMeshDrawOpHelper* %14, %class.GrSimpleMeshDrawOpHelper* dereferenceable(16) %16, %class.GrCaps* dereferenceable(232) %3, %struct.SkRect* dereferenceable(16) %17, %struct.SkRect* dereferenceable(16) %18, i1 zeroext false) #12
  br i1 %19, label %20, label %129

20:                                               ; preds = %13
  %21 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 2, i32 2
  %22 = load i8, i8* %21, align 1
  %23 = and i8 %22, 4
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %35, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 1
  %27 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 1
  %28 = bitcast %class.GrOp* %27 to %class.SkMatrix*
  %29 = icmp eq %class.SkMatrix* %26, %28
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = bitcast %class.SkMatrix* %26 to i8*
  %32 = bitcast %class.GrOp* %27 to i8*
  %33 = tail call i32 @bcmp(i8* %31, i8* %32, i64 36) #12
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %129

35:                                               ; preds = %20, %25, %30
  %36 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 7, i32 0, i32 0, i64 48
  %37 = bitcast i8* %36 to %class.SkTArray.75*
  %38 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 3, i32 3
  %39 = getelementptr inbounds i16, i16* %38, i64 4
  %40 = bitcast i16* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = lshr i64 %41, 1
  %43 = trunc i64 %42 to i32
  %44 = and i32 %43, 2147483647
  %45 = bitcast i16* %38 to %"struct.CircularRRectOp::RRect"**
  %46 = load %"struct.CircularRRectOp::RRect"*, %"struct.CircularRRectOp::RRect"** %45, align 8
  tail call void @_ZN8SkTArrayIN15CircularRRectOp5RRectELb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.75* %37, i32 %44, i32 1) #12
  %47 = icmp eq i32 %44, 0
  br i1 %47, label %95, label %48

48:                                               ; preds = %35
  %49 = bitcast i8* %36 to %"struct.CircularRRectOp::RRect"**
  %50 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 7, i32 0, i32 0, i64 56
  %51 = bitcast i8* %50 to i64*
  %52 = zext i32 %44 to i64
  %53 = and i64 %52, 1
  %54 = icmp eq i32 %44, 1
  br i1 %54, label %82, label %55

55:                                               ; preds = %48
  %56 = sub nsw i64 %52, %53
  br label %57

57:                                               ; preds = %57, %55
  %58 = phi i64 [ 0, %55 ], [ %79, %57 ]
  %59 = phi i64 [ %56, %55 ], [ %80, %57 ]
  %60 = load %"struct.CircularRRectOp::RRect"*, %"struct.CircularRRectOp::RRect"** %49, align 8
  %61 = load i64, i64* %51, align 8
  %62 = lshr i64 %61, 1
  %63 = and i64 %62, 2147483647
  %64 = getelementptr inbounds %"struct.CircularRRectOp::RRect", %"struct.CircularRRectOp::RRect"* %60, i64 %63
  %65 = getelementptr inbounds %"struct.CircularRRectOp::RRect", %"struct.CircularRRectOp::RRect"* %64, i64 %58
  %66 = bitcast %"struct.CircularRRectOp::RRect"* %65 to i8*
  %67 = getelementptr inbounds %"struct.CircularRRectOp::RRect", %"struct.CircularRRectOp::RRect"* %46, i64 %58
  %68 = bitcast %"struct.CircularRRectOp::RRect"* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %66, i8* align 4 %68, i64 44, i1 false) #12
  %69 = or i64 %58, 1
  %70 = load %"struct.CircularRRectOp::RRect"*, %"struct.CircularRRectOp::RRect"** %49, align 8
  %71 = load i64, i64* %51, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = getelementptr inbounds %"struct.CircularRRectOp::RRect", %"struct.CircularRRectOp::RRect"* %70, i64 %73
  %75 = getelementptr inbounds %"struct.CircularRRectOp::RRect", %"struct.CircularRRectOp::RRect"* %74, i64 %69
  %76 = bitcast %"struct.CircularRRectOp::RRect"* %75 to i8*
  %77 = getelementptr inbounds %"struct.CircularRRectOp::RRect", %"struct.CircularRRectOp::RRect"* %46, i64 %69
  %78 = bitcast %"struct.CircularRRectOp::RRect"* %77 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %78, i64 44, i1 false) #12
  %79 = add nuw nsw i64 %58, 2
  %80 = add i64 %59, -2
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %57

82:                                               ; preds = %57, %48
  %83 = phi i64 [ 0, %48 ], [ %79, %57 ]
  %84 = icmp eq i64 %53, 0
  br i1 %84, label %95, label %85

85:                                               ; preds = %82
  %86 = load %"struct.CircularRRectOp::RRect"*, %"struct.CircularRRectOp::RRect"** %49, align 8
  %87 = load i64, i64* %51, align 8
  %88 = lshr i64 %87, 1
  %89 = and i64 %88, 2147483647
  %90 = getelementptr inbounds %"struct.CircularRRectOp::RRect", %"struct.CircularRRectOp::RRect"* %86, i64 %89
  %91 = getelementptr inbounds %"struct.CircularRRectOp::RRect", %"struct.CircularRRectOp::RRect"* %90, i64 %83
  %92 = bitcast %"struct.CircularRRectOp::RRect"* %91 to i8*
  %93 = getelementptr inbounds %"struct.CircularRRectOp::RRect", %"struct.CircularRRectOp::RRect"* %46, i64 %83
  %94 = bitcast %"struct.CircularRRectOp::RRect"* %93 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %92, i8* align 4 %94, i64 44, i1 false) #12
  br label %95

95:                                               ; preds = %85, %82, %35
  %96 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 7, i32 0, i32 0, i64 56
  %97 = bitcast i8* %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = and i64 %41, 4294967294
  %100 = add i64 %98, %99
  %101 = and i64 %100, 4294967294
  %102 = and i64 %98, -4294967295
  %103 = or i64 %101, %102
  store i64 %103, i64* %97, align 8
  %104 = load i32, i32* %9, align 8
  %105 = load i32, i32* %6, align 8
  %106 = add nsw i32 %105, %104
  store i32 %106, i32* %6, align 8
  %107 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %5, i64 0, i32 4
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 4
  %110 = load i32, i32* %109, align 4
  %111 = add nsw i32 %110, %108
  store i32 %111, i32* %109, align 4
  %112 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 5
  %113 = load i8, i8* %112, align 8, !range !2
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %119, label %115

115:                                              ; preds = %95
  %116 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 2, i32 2
  %117 = bitcast %class.GrOp** %116 to i8*
  %118 = load i8, i8* %117, align 8, !range !2
  br label %119

119:                                              ; preds = %95, %115
  %120 = phi i8 [ 0, %95 ], [ %118, %115 ]
  store i8 %120, i8* %112, align 8
  %121 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 6
  %122 = load i8, i8* %121, align 1, !range !2
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %119
  %125 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %5, i64 0, i32 6
  %126 = load i8, i8* %125, align 1, !range !2
  br label %127

127:                                              ; preds = %119, %124
  %128 = phi i8 [ 1, %119 ], [ %126, %124 ]
  store i8 %128, i8* %121, align 1
  br label %129

129:                                              ; preds = %30, %13, %4, %127
  %130 = phi i32 [ 0, %127 ], [ 2, %4 ], [ 2, %13 ], [ 2, %30 ]
  ret i32 %130
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #4 comdat align 2 {
  %8 = bitcast %class.GrMeshDrawOp* %0 to void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)***
  %9 = load void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)**, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)** %9, i64 10
  %11 = load void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)** %10, align 8
  tail call void %11(%class.GrMeshDrawOp* %0, %class.GrRecordingContext* %1, %class.GrSurfaceProxyView* dereferenceable(16) %2, %class.GrAppliedClip* %3, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %4, i32 %5, i32 %6) #12
  ret void
}

declare void @_ZN12GrMeshDrawOp9onPrepareEP14GrOpFlushState(%class.GrMeshDrawOp*, %class.GrOpFlushState*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15CircularRRectOp9onExecuteEP14GrOpFlushStateRK6SkRect(%class.CircularRRectOp*, %class.GrOpFlushState*, %struct.SkRect* dereferenceable(16)) unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 9
  %5 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %6 = icmp eq %class.GrProgramInfo* %5, null
  br i1 %6, label %35, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 8
  %9 = load %struct.GrSimpleMesh*, %struct.GrSimpleMesh** %8, align 8
  %10 = icmp eq %struct.GrSimpleMesh* %9, null
  br i1 %10, label %35, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 15
  %13 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass12bindPipelineERK13GrProgramInfoRK6SkRect(%class.GrOpsRenderPass* %13, %class.GrProgramInfo* nonnull dereferenceable(128) %5, %struct.SkRect* dereferenceable(16) %2) #12
  %14 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %5, i64 0, i32 5
  %15 = load %class.GrPipeline*, %class.GrPipeline** %14, align 8
  %16 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %15, i64 0, i32 5
  %17 = load i8, i8* %16, align 8
  %18 = and i8 %17, 32
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 10
  %22 = load %"struct.GrOpFlushState::OpArgs"*, %"struct.GrOpFlushState::OpArgs"** %21, align 8
  %23 = getelementptr inbounds %"struct.GrOpFlushState::OpArgs", %"struct.GrOpFlushState::OpArgs"* %22, i64 0, i32 4
  %24 = load %class.GrAppliedClip*, %class.GrAppliedClip** %23, align 8
  %25 = getelementptr inbounds %class.GrAppliedClip, %class.GrAppliedClip* %24, i64 0, i32 0, i32 0, i32 1
  %26 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass14setScissorRectERK7SkIRect(%class.GrOpsRenderPass* %26, %struct.SkIRect* dereferenceable(16) %25) #12
  br label %27

27:                                               ; preds = %11, %20
  %28 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %29 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %28, i64 0, i32 7
  %30 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %29, align 8
  %31 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %28, i64 0, i32 5
  %32 = load %class.GrPipeline*, %class.GrPipeline** %31, align 8
  %33 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrOpsRenderPass* %33, %class.GrGeometryProcessor* dereferenceable(80) %30, %class.GrSurfaceProxy** null, %class.GrPipeline* dereferenceable(128) %32) #12
  %34 = load %struct.GrSimpleMesh*, %struct.GrSimpleMesh** %8, align 8
  tail call void @_ZN14GrOpFlushState8drawMeshERK12GrSimpleMesh(%class.GrOpFlushState* %1, %struct.GrSimpleMesh* dereferenceable(48) %34) #12
  br label %35

35:                                               ; preds = %7, %3, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK15CircularRRectOp18fixedFunctionFlagsEv(%class.CircularRRectOp*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 2
  %3 = tail call i32 @_ZNK24GrSimpleMeshDrawOpHelper18fixedFunctionFlagsEv(%class.GrSimpleMeshDrawOpHelper* %2) #12
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN15CircularRRectOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType(%class.CircularRRectOp*, %class.GrCaps* dereferenceable(232), %class.GrAppliedClip*, i32) unnamed_addr #4 comdat align 2 {
  %5 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 7, i32 0, i32 0, i64 48
  %6 = bitcast i8* %5 to %"struct.CircularRRectOp::RRect"**
  %7 = load %"struct.CircularRRectOp::RRect"*, %"struct.CircularRRectOp::RRect"** %6, align 8
  %8 = getelementptr inbounds %"struct.CircularRRectOp::RRect", %"struct.CircularRRectOp::RRect"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 2
  %10 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 6
  %11 = tail call i32 @_ZN24GrSimpleMeshDrawOpHelper18finalizeProcessorsERK6GrCapsPK13GrAppliedClip11GrClampType27GrProcessorAnalysisCoverageP8SkRGBA4fIL11SkAlphaType2EEPb(%class.GrSimpleMeshDrawOpHelper* %9, %class.GrCaps* dereferenceable(232) %1, %class.GrAppliedClip* %2, i32 %3, i32 1, %struct.SkRGBA4f* %8, i8* %10) #12
  ret i32 %11
}

declare void @_ZN12GrMeshDrawOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrProgramInfo* @_ZN15CircularRRectOp11programInfoEv(%class.CircularRRectOp*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 9
  %3 = load %class.GrProgramInfo*, %class.GrProgramInfo** %2, align 8
  ret %class.GrProgramInfo* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15CircularRRectOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.CircularRRectOp*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip* dereferenceable(72), %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #4 comdat align 2 {
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca %class.anon, align 8
  %16 = alloca %class.SkMatrix, align 16
  %17 = bitcast %class.SkMatrix* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #12
  %18 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %16, i64 0, i32 1
  %19 = bitcast %class.SkMatrix* %16 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %19, align 16
  %20 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %16, i64 0, i32 0, i64 4
  %21 = bitcast float* %20 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %21, align 16
  %22 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %16, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %22, align 16
  store i32 16, i32* %18, align 4
  %23 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 1
  %24 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 1, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = trunc i32 %25 to i8
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %8
  %29 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %23) #12
  %30 = zext i8 %29 to i32
  store i32 %30, i32* %24, align 4
  br label %31

31:                                               ; preds = %28, %8
  %32 = phi i32 [ %30, %28 ], [ %25, %8 ]
  %33 = and i32 %32, 15
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %16) #12
  br label %39

37:                                               ; preds = %31
  %38 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* %23, %class.SkMatrix* nonnull %16) #12
  br i1 %38, label %39, label %58

39:                                               ; preds = %35, %37
  %40 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 5
  %41 = load i8, i8* %40, align 8, !range !2
  %42 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 6
  %43 = load i8, i8* %42, align 1, !range !2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14)
  %44 = xor i8 %41, 1
  store i8 %44, i8* %9, align 1
  store i8 0, i8* %10, align 1
  store i8 0, i8* %11, align 1
  store i8 0, i8* %12, align 1
  store i8 0, i8* %13, align 1
  store i8 %43, i8* %14, align 1
  %45 = bitcast %class.anon* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %45) #12
  %46 = getelementptr inbounds %class.anon, %class.anon* %15, i64 0, i32 0
  store i8* %9, i8** %46, align 8
  %47 = getelementptr inbounds %class.anon, %class.anon* %15, i64 0, i32 1
  store i8* %10, i8** %47, align 8
  %48 = getelementptr inbounds %class.anon, %class.anon* %15, i64 0, i32 2
  store i8* %11, i8** %48, align 8
  %49 = getelementptr inbounds %class.anon, %class.anon* %15, i64 0, i32 3
  store i8* %12, i8** %49, align 8
  %50 = getelementptr inbounds %class.anon, %class.anon* %15, i64 0, i32 4
  store i8* %13, i8** %50, align 8
  %51 = getelementptr inbounds %class.anon, %class.anon* %15, i64 0, i32 5
  store i8* %14, i8** %51, align 8
  %52 = getelementptr inbounds %class.anon, %class.anon* %15, i64 0, i32 6
  store %class.SkMatrix* %16, %class.SkMatrix** %52, align 8
  %53 = call %class.CircleGeometryProcessor* @_ZN12SkArenaAlloc4makeIZN23CircleGeometryProcessor4MakeEPS_bbbbbbRK8SkMatrixEUlPvE_EEDTclfp_LDnEEEOT_(%class.SkArenaAlloc* %2, %class.anon* nonnull dereferenceable(56) %15) #12
  %54 = bitcast %class.CircleGeometryProcessor* %53 to %class.GrGeometryProcessor*
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %45) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14)
  %55 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 2
  %56 = call %class.GrProgramInfo* @_ZN24GrSimpleMeshDrawOpHelper17createProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewEP19GrGeometryProcessor15GrPrimitiveType18GrXferBarrierFlags8GrLoadOp(%class.GrSimpleMeshDrawOpHelper* %55, %class.GrCaps* %1, %class.SkArenaAlloc* %2, %class.GrSurfaceProxyView* dereferenceable(16) %3, %class.GrAppliedClip* dereferenceable(72) %4, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %5, %class.GrGeometryProcessor* %54, i8 zeroext 0, i32 %6, i32 %7) #12
  %57 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 9
  store %class.GrProgramInfo* %56, %class.GrProgramInfo** %57, align 8
  br label %58

58:                                               ; preds = %37, %39
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15CircularRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE(%class.CircularRRectOp*, %"class.GrMeshDrawOp::Target"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %class.sk_sp.76, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.GrVertexWriter, align 8
  %6 = alloca %class.sk_sp.76, align 8
  %7 = alloca i32, align 4
  %8 = alloca %class.GrVertexColor, align 4
  %9 = alloca [4 x float], align 16
  %10 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 9
  %11 = load %class.GrProgramInfo*, %class.GrProgramInfo** %10, align 8
  %12 = icmp eq %class.GrProgramInfo* %11, null
  br i1 %12, label %13, label %17

13:                                               ; preds = %2
  %14 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 0
  tail call void @_ZN12GrMeshDrawOp17createProgramInfoEPNS_6TargetE(%class.GrMeshDrawOp* %14, %"class.GrMeshDrawOp::Target"* %1) #12
  %15 = load %class.GrProgramInfo*, %class.GrProgramInfo** %10, align 8
  %16 = icmp eq %class.GrProgramInfo* %15, null
  br i1 %16, label %470, label %17

17:                                               ; preds = %13, %2
  %18 = phi %class.GrProgramInfo* [ %15, %13 ], [ %11, %2 ]
  %19 = bitcast %class.sk_sp.76* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = getelementptr inbounds %class.sk_sp.76, %class.sk_sp.76* %3, i64 0, i32 0
  store %class.GrBuffer* null, %class.GrBuffer** %20, align 8
  %21 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #12
  store i32 -1431655766, i32* %4, align 4
  %22 = bitcast %struct.GrVertexWriter* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  %23 = getelementptr inbounds %struct.GrVertexWriter, %struct.GrVertexWriter* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %18, i64 0, i32 7
  %25 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %24, align 8
  %26 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %25, i64 0, i32 3, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = bitcast %"class.GrMeshDrawOp::Target"* %1 to i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.76*, i32*)***
  %31 = load i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.76*, i32*)**, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.76*, i32*)*** %30, align 8
  %32 = getelementptr inbounds i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.76*, i32*)*, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.76*, i32*)** %31, i64 3
  %33 = load i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.76*, i32*)*, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.76*, i32*)** %32, align 8
  %34 = call i8* %33(%"class.GrMeshDrawOp::Target"* %1, i64 %27, i32 %29, %class.sk_sp.76* nonnull %3, i32* nonnull %4) #12
  store i8* %34, i8** %23, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %36, label %37

36:                                               ; preds = %17
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 2679, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.50, i64 0, i64 0)) #12
  br label %461

37:                                               ; preds = %17
  %38 = bitcast %class.sk_sp.76* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #12
  %39 = getelementptr inbounds %class.sk_sp.76, %class.sk_sp.76* %6, i64 0, i32 0
  store %class.GrBuffer* null, %class.GrBuffer** %39, align 8
  %40 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #12
  store i32 0, i32* %7, align 4
  %41 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 4
  %42 = load i32, i32* %41, align 4
  %43 = bitcast %"class.GrMeshDrawOp::Target"* %1 to i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.76*, i32*)***
  %44 = load i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.76*, i32*)**, i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.76*, i32*)*** %43, align 8
  %45 = getelementptr inbounds i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.76*, i32*)*, i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.76*, i32*)** %44, i64 4
  %46 = load i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.76*, i32*)*, i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.76*, i32*)** %45, align 8
  %47 = call i16* %46(%"class.GrMeshDrawOp::Target"* %1, i32 %42, %class.sk_sp.76* nonnull %6, i32* nonnull %7) #12
  %48 = icmp eq i16* %47, null
  br i1 %48, label %49, label %50

49:                                               ; preds = %37
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 2687, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.51, i64 0, i64 0)) #12
  br label %452

50:                                               ; preds = %37
  %51 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 7, i32 0, i32 0, i64 48
  %52 = bitcast i8* %51 to %"struct.CircularRRectOp::RRect"**
  %53 = load %"struct.CircularRRectOp::RRect"*, %"struct.CircularRRectOp::RRect"** %52, align 8
  %54 = icmp eq %"struct.CircularRRectOp::RRect"* %53, null
  br i1 %54, label %78, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 7, i32 0, i32 0, i64 56
  %57 = bitcast i8* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = lshr i64 %58, 1
  %60 = and i64 %59, 2147483647
  %61 = getelementptr inbounds %"struct.CircularRRectOp::RRect", %"struct.CircularRRectOp::RRect"* %53, i64 %60
  %62 = icmp eq i64 %60, 0
  br i1 %62, label %78, label %63

63:                                               ; preds = %55
  %64 = bitcast %class.GrVertexColor* %8 to i8*
  %65 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %8, i64 0, i32 0, i64 0
  %66 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %8, i64 0, i32 0, i64 1
  %67 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %8, i64 0, i32 0, i64 2
  %68 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %8, i64 0, i32 0, i64 3
  %69 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %8, i64 0, i32 1
  %70 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 6
  %71 = bitcast [4 x float]* %9 to i8*
  %72 = getelementptr inbounds [4 x float], [4 x float]* %9, i64 0, i64 1
  %73 = getelementptr inbounds [4 x float], [4 x float]* %9, i64 0, i64 2
  %74 = getelementptr inbounds [4 x float], [4 x float]* %9, i64 0, i64 3
  %75 = bitcast [4 x float]* %9 to i32*
  %76 = bitcast %struct.GrVertexWriter* %5 to i32**
  %77 = bitcast %class.GrVertexColor* %8 to i8*
  br label %138

78:                                               ; preds = %421, %50, %55
  %79 = bitcast %"class.GrMeshDrawOp::Target"* %1 to %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)***
  %80 = load %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)**, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*** %79, align 8
  %81 = getelementptr inbounds %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)** %80, i64 29
  %82 = load %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)** %81, align 8
  %83 = call %class.SkArenaAlloc* %82(%"class.GrMeshDrawOp::Target"* %1) #12
  %84 = call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %83, i32 57, i32 8) #12
  %85 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %83, i64 0, i32 1
  %86 = bitcast i8** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = ptrtoint i8* %84 to i64
  %89 = sub i64 %88, %87
  %90 = trunc i64 %89 to i32
  %91 = getelementptr inbounds i8, i8* %84, i64 48
  store i8* %91, i8** %85, align 8
  call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %83, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeI12GrSimpleMeshJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS3_ENUlPcE_8__invokeESC_, i32 %90) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 48, i1 false) #12
  %92 = getelementptr inbounds %class.CircularRRectOp, %class.CircularRRectOp* %0, i64 0, i32 8
  %93 = bitcast %struct.GrSimpleMesh** %92 to i8**
  store i8* %84, i8** %93, align 8
  %94 = bitcast %class.sk_sp.76* %6 to i64*
  %95 = load i64, i64* %94, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %39, align 8
  %96 = load i32, i32* %41, align 4
  %97 = load i32, i32* %7, align 4
  %98 = load i32, i32* %28, align 8
  %99 = trunc i32 %98 to i16
  %100 = add i16 %99, -1
  %101 = bitcast %class.sk_sp.76* %3 to i64*
  %102 = load i64, i64* %101, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %20, align 8
  %103 = load i32, i32* %4, align 4
  %104 = bitcast i8* %84 to %class.GrBuffer**
  %105 = load %class.GrBuffer*, %class.GrBuffer** %104, align 8
  %106 = bitcast i8* %84 to i64*
  store i64 %95, i64* %106, align 8
  %107 = icmp eq %class.GrBuffer* %105, null
  br i1 %107, label %113, label %108

108:                                              ; preds = %78
  %109 = bitcast %class.GrBuffer* %105 to void (%class.GrBuffer*)***
  %110 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %109, align 8
  %111 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %110, i64 3
  %112 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %111, align 8
  call void %112(%class.GrBuffer* nonnull %105) #12
  br label %113

113:                                              ; preds = %108, %78
  %114 = getelementptr inbounds i8, i8* %84, i64 8
  %115 = bitcast i8* %114 to i32*
  store i32 %96, i32* %115, align 8
  %116 = getelementptr inbounds i8, i8* %84, i64 12
  %117 = bitcast i8* %116 to i32*
  store i32 0, i32* %117, align 4
  %118 = getelementptr inbounds i8, i8* %84, i64 20
  %119 = bitcast i8* %118 to i32*
  store i32 %97, i32* %119, align 4
  %120 = getelementptr inbounds i8, i8* %84, i64 24
  %121 = bitcast i8* %120 to i16*
  store i16 0, i16* %121, align 8
  %122 = getelementptr inbounds i8, i8* %84, i64 26
  %123 = bitcast i8* %122 to i16*
  store i16 %100, i16* %123, align 2
  %124 = getelementptr inbounds i8, i8* %84, i64 28
  store i8 0, i8* %124, align 4
  %125 = getelementptr inbounds i8, i8* %84, i64 32
  %126 = bitcast i8* %125 to %class.GrBuffer**
  %127 = load %class.GrBuffer*, %class.GrBuffer** %126, align 8
  %128 = bitcast i8* %125 to i64*
  store i64 %102, i64* %128, align 8
  %129 = icmp eq %class.GrBuffer* %127, null
  br i1 %129, label %135, label %130

130:                                              ; preds = %113
  %131 = bitcast %class.GrBuffer* %127 to void (%class.GrBuffer*)***
  %132 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %131, align 8
  %133 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %132, i64 3
  %134 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %133, align 8
  call void %134(%class.GrBuffer* nonnull %127) #12
  br label %135

135:                                              ; preds = %113, %130
  %136 = getelementptr inbounds i8, i8* %84, i64 44
  %137 = bitcast i8* %136 to i32*
  store i32 %103, i32* %137, align 4
  br label %452

138:                                              ; preds = %63, %421
  %139 = phi i16* [ %47, %63 ], [ %417, %421 ]
  %140 = phi %"struct.CircularRRectOp::RRect"* [ %53, %63 ], [ %426, %421 ]
  %141 = phi i32 [ 0, %63 ], [ %425, %421 ]
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %64) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %77, i8 -86, i64 20, i1 false)
  %142 = load i8, i8* %70, align 1, !range !2
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %146, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.CircularRRectOp::RRect"* %140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %64, i8* align 4 %145, i64 16, i1 false) #12
  br label %149

146:                                              ; preds = %138
  %147 = getelementptr inbounds %"struct.CircularRRectOp::RRect", %"struct.CircularRRectOp::RRect"* %140, i64 0, i32 0
  %148 = call i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f* %147) #12
  store i32 %148, i32* %65, align 4
  br label %149

149:                                              ; preds = %144, %146
  store i8 %142, i8* %69, align 4
  %150 = getelementptr inbounds %"struct.CircularRRectOp::RRect", %"struct.CircularRRectOp::RRect"* %140, i64 0, i32 2
  %151 = bitcast float* %150 to i32*
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"struct.CircularRRectOp::RRect", %"struct.CircularRRectOp::RRect"* %140, i64 0, i32 3
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #12
  %154 = getelementptr inbounds %"struct.CircularRRectOp::RRect", %"struct.CircularRRectOp::RRect"* %140, i64 0, i32 3, i32 1
  %155 = bitcast float* %154 to i32*
  %156 = load i32, i32* %155, align 4
  store i32 %156, i32* %75, align 16
  %157 = bitcast i32 %156 to float
  %158 = bitcast i32 %152 to float
  %159 = fadd float %158, %157
  store float %159, float* %72, align 4
  %160 = getelementptr inbounds %"struct.CircularRRectOp::RRect", %"struct.CircularRRectOp::RRect"* %140, i64 0, i32 3, i32 3
  %161 = load float, float* %160, align 4
  %162 = fsub float %161, %158
  store float %162, float* %73, align 8
  store float %161, float* %74, align 4
  %163 = getelementptr inbounds %"struct.CircularRRectOp::RRect", %"struct.CircularRRectOp::RRect"* %140, i64 0, i32 4
  %164 = load i32, i32* %163, align 4
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %169, label %166

166:                                              ; preds = %149
  %167 = getelementptr inbounds %"struct.CircularRRectOp::RRect", %"struct.CircularRRectOp::RRect"* %140, i64 0, i32 1
  %168 = load float, float* %167, align 4
  br label %169

169:                                              ; preds = %149, %166
  %170 = phi float [ %168, %166 ], [ -1.000000e+00, %149 ]
  %171 = fdiv float %170, %158
  %172 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %153, i64 0, i32 0
  %173 = bitcast %struct.SkRect* %153 to i32*
  %174 = getelementptr inbounds %"struct.CircularRRectOp::RRect", %"struct.CircularRRectOp::RRect"* %140, i64 0, i32 3, i32 2
  %175 = bitcast float* %174 to i32*
  %176 = load i32*, i32** %76, align 8
  br label %180

177:                                              ; preds = %334
  %178 = load i32, i32* %163, align 4
  %179 = icmp eq i32 %178, 2
  br i1 %179, label %350, label %357

180:                                              ; preds = %334, %169
  %181 = phi i32* [ %176, %169 ], [ %349, %334 ]
  %182 = phi i64 [ 0, %169 ], [ %347, %334 ]
  %183 = getelementptr inbounds [4 x float], [4 x float]* %9, i64 0, i64 %182
  %184 = getelementptr inbounds [4 x float], [4 x float]* @__const._ZN15CircularRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE.yOuterRadii, i64 0, i64 %182
  %185 = load i32, i32* %173, align 4
  store i32 %185, i32* %181, align 1
  %186 = load i8*, i8** %23, align 8
  %187 = getelementptr inbounds i8, i8* %186, i64 4
  store i8* %187, i8** %23, align 8
  %188 = bitcast i8* %187 to i32*
  %189 = bitcast float* %183 to i32*
  %190 = load i32, i32* %189, align 4
  store i32 %190, i32* %188, align 1
  %191 = load i8*, i8** %23, align 8
  %192 = getelementptr inbounds i8, i8* %191, i64 4
  store i8* %192, i8** %23, align 8
  %193 = bitcast i8* %192 to i32*
  %194 = load i32, i32* %65, align 4
  store i32 %194, i32* %193, align 1
  %195 = load i8*, i8** %23, align 8
  %196 = getelementptr inbounds i8, i8* %195, i64 4
  store i8* %196, i8** %23, align 8
  %197 = load i8, i8* %69, align 4, !range !2
  %198 = icmp eq i8 %197, 0
  %199 = bitcast i8* %196 to i32*
  br i1 %198, label %213, label %200

200:                                              ; preds = %180
  %201 = load i32, i32* %66, align 4
  store i32 %201, i32* %199, align 1
  %202 = load i8*, i8** %23, align 8
  %203 = getelementptr inbounds i8, i8* %202, i64 4
  store i8* %203, i8** %23, align 8
  %204 = bitcast i8* %203 to i32*
  %205 = load i32, i32* %67, align 4
  store i32 %205, i32* %204, align 1
  %206 = load i8*, i8** %23, align 8
  %207 = getelementptr inbounds i8, i8* %206, i64 4
  store i8* %207, i8** %23, align 8
  %208 = bitcast i8* %207 to i32*
  %209 = load i32, i32* %68, align 4
  store i32 %209, i32* %208, align 1
  %210 = load i8*, i8** %23, align 8
  %211 = getelementptr inbounds i8, i8* %210, i64 4
  store i8* %211, i8** %23, align 8
  %212 = bitcast i8* %211 to i32*
  br label %213

213:                                              ; preds = %180, %200
  %214 = phi i32* [ %199, %180 ], [ %212, %200 ]
  store i32 -1082130432, i32* %214, align 1
  %215 = load i8*, i8** %23, align 8
  %216 = getelementptr inbounds i8, i8* %215, i64 4
  store i8* %216, i8** %23, align 8
  %217 = bitcast i8* %216 to i32*
  %218 = bitcast float* %184 to i32*
  %219 = load i32, i32* %218, align 4
  store i32 %219, i32* %217, align 1
  %220 = load i8*, i8** %23, align 8
  %221 = getelementptr inbounds i8, i8* %220, i64 4
  store i8* %221, i8** %23, align 8
  %222 = bitcast i8* %221 to i32*
  store i32 %152, i32* %222, align 1
  %223 = load i8*, i8** %23, align 8
  %224 = getelementptr inbounds i8, i8* %223, i64 4
  store i8* %224, i8** %23, align 8
  %225 = bitcast i8* %224 to float*
  store float %171, float* %225, align 1
  %226 = load i8*, i8** %23, align 8
  %227 = getelementptr inbounds i8, i8* %226, i64 4
  store i8* %227, i8** %23, align 8
  %228 = load float, float* %172, align 4
  %229 = fadd float %228, %158
  %230 = bitcast i8* %227 to float*
  store float %229, float* %230, align 1
  %231 = load i8*, i8** %23, align 8
  %232 = getelementptr inbounds i8, i8* %231, i64 4
  store i8* %232, i8** %23, align 8
  %233 = bitcast i8* %232 to i32*
  store i32 %190, i32* %233, align 1
  %234 = load i8*, i8** %23, align 8
  %235 = getelementptr inbounds i8, i8* %234, i64 4
  store i8* %235, i8** %23, align 8
  %236 = bitcast i8* %235 to i32*
  store i32 %194, i32* %236, align 1
  %237 = load i8*, i8** %23, align 8
  %238 = getelementptr inbounds i8, i8* %237, i64 4
  store i8* %238, i8** %23, align 8
  %239 = load i8, i8* %69, align 4, !range !2
  %240 = icmp eq i8 %239, 0
  %241 = bitcast i8* %238 to i32*
  br i1 %240, label %255, label %242

242:                                              ; preds = %213
  %243 = load i32, i32* %66, align 4
  store i32 %243, i32* %241, align 1
  %244 = load i8*, i8** %23, align 8
  %245 = getelementptr inbounds i8, i8* %244, i64 4
  store i8* %245, i8** %23, align 8
  %246 = bitcast i8* %245 to i32*
  %247 = load i32, i32* %67, align 4
  store i32 %247, i32* %246, align 1
  %248 = load i8*, i8** %23, align 8
  %249 = getelementptr inbounds i8, i8* %248, i64 4
  store i8* %249, i8** %23, align 8
  %250 = bitcast i8* %249 to i32*
  %251 = load i32, i32* %68, align 4
  store i32 %251, i32* %250, align 1
  %252 = load i8*, i8** %23, align 8
  %253 = getelementptr inbounds i8, i8* %252, i64 4
  store i8* %253, i8** %23, align 8
  %254 = bitcast i8* %253 to i32*
  br label %255

255:                                              ; preds = %213, %242
  %256 = phi i32* [ %241, %213 ], [ %254, %242 ]
  store i32 0, i32* %256, align 1
  %257 = load i8*, i8** %23, align 8
  %258 = getelementptr inbounds i8, i8* %257, i64 4
  store i8* %258, i8** %23, align 8
  %259 = bitcast i8* %258 to i32*
  store i32 %219, i32* %259, align 1
  %260 = load i8*, i8** %23, align 8
  %261 = getelementptr inbounds i8, i8* %260, i64 4
  store i8* %261, i8** %23, align 8
  %262 = bitcast i8* %261 to i32*
  store i32 %152, i32* %262, align 1
  %263 = load i8*, i8** %23, align 8
  %264 = getelementptr inbounds i8, i8* %263, i64 4
  store i8* %264, i8** %23, align 8
  %265 = bitcast i8* %264 to float*
  store float %171, float* %265, align 1
  %266 = load i8*, i8** %23, align 8
  %267 = getelementptr inbounds i8, i8* %266, i64 4
  store i8* %267, i8** %23, align 8
  %268 = load float, float* %174, align 4
  %269 = fsub float %268, %158
  %270 = bitcast i8* %267 to float*
  store float %269, float* %270, align 1
  %271 = load i8*, i8** %23, align 8
  %272 = getelementptr inbounds i8, i8* %271, i64 4
  store i8* %272, i8** %23, align 8
  %273 = bitcast i8* %272 to i32*
  store i32 %190, i32* %273, align 1
  %274 = load i8*, i8** %23, align 8
  %275 = getelementptr inbounds i8, i8* %274, i64 4
  store i8* %275, i8** %23, align 8
  %276 = bitcast i8* %275 to i32*
  store i32 %194, i32* %276, align 1
  %277 = load i8*, i8** %23, align 8
  %278 = getelementptr inbounds i8, i8* %277, i64 4
  store i8* %278, i8** %23, align 8
  %279 = load i8, i8* %69, align 4, !range !2
  %280 = icmp eq i8 %279, 0
  %281 = bitcast i8* %278 to i32*
  br i1 %280, label %295, label %282

282:                                              ; preds = %255
  %283 = load i32, i32* %66, align 4
  store i32 %283, i32* %281, align 1
  %284 = load i8*, i8** %23, align 8
  %285 = getelementptr inbounds i8, i8* %284, i64 4
  store i8* %285, i8** %23, align 8
  %286 = bitcast i8* %285 to i32*
  %287 = load i32, i32* %67, align 4
  store i32 %287, i32* %286, align 1
  %288 = load i8*, i8** %23, align 8
  %289 = getelementptr inbounds i8, i8* %288, i64 4
  store i8* %289, i8** %23, align 8
  %290 = bitcast i8* %289 to i32*
  %291 = load i32, i32* %68, align 4
  store i32 %291, i32* %290, align 1
  %292 = load i8*, i8** %23, align 8
  %293 = getelementptr inbounds i8, i8* %292, i64 4
  store i8* %293, i8** %23, align 8
  %294 = bitcast i8* %293 to i32*
  br label %295

295:                                              ; preds = %255, %282
  %296 = phi i32* [ %281, %255 ], [ %294, %282 ]
  store i32 0, i32* %296, align 1
  %297 = load i8*, i8** %23, align 8
  %298 = getelementptr inbounds i8, i8* %297, i64 4
  store i8* %298, i8** %23, align 8
  %299 = bitcast i8* %298 to i32*
  store i32 %219, i32* %299, align 1
  %300 = load i8*, i8** %23, align 8
  %301 = getelementptr inbounds i8, i8* %300, i64 4
  store i8* %301, i8** %23, align 8
  %302 = bitcast i8* %301 to i32*
  store i32 %152, i32* %302, align 1
  %303 = load i8*, i8** %23, align 8
  %304 = getelementptr inbounds i8, i8* %303, i64 4
  store i8* %304, i8** %23, align 8
  %305 = bitcast i8* %304 to float*
  store float %171, float* %305, align 1
  %306 = load i8*, i8** %23, align 8
  %307 = getelementptr inbounds i8, i8* %306, i64 4
  store i8* %307, i8** %23, align 8
  %308 = bitcast i8* %307 to i32*
  %309 = load i32, i32* %175, align 4
  store i32 %309, i32* %308, align 1
  %310 = load i8*, i8** %23, align 8
  %311 = getelementptr inbounds i8, i8* %310, i64 4
  store i8* %311, i8** %23, align 8
  %312 = bitcast i8* %311 to i32*
  store i32 %190, i32* %312, align 1
  %313 = load i8*, i8** %23, align 8
  %314 = getelementptr inbounds i8, i8* %313, i64 4
  store i8* %314, i8** %23, align 8
  %315 = bitcast i8* %314 to i32*
  store i32 %194, i32* %315, align 1
  %316 = load i8*, i8** %23, align 8
  %317 = getelementptr inbounds i8, i8* %316, i64 4
  store i8* %317, i8** %23, align 8
  %318 = load i8, i8* %69, align 4, !range !2
  %319 = icmp eq i8 %318, 0
  %320 = bitcast i8* %317 to i32*
  br i1 %319, label %334, label %321

321:                                              ; preds = %295
  %322 = load i32, i32* %66, align 4
  store i32 %322, i32* %320, align 1
  %323 = load i8*, i8** %23, align 8
  %324 = getelementptr inbounds i8, i8* %323, i64 4
  store i8* %324, i8** %23, align 8
  %325 = bitcast i8* %324 to i32*
  %326 = load i32, i32* %67, align 4
  store i32 %326, i32* %325, align 1
  %327 = load i8*, i8** %23, align 8
  %328 = getelementptr inbounds i8, i8* %327, i64 4
  store i8* %328, i8** %23, align 8
  %329 = bitcast i8* %328 to i32*
  %330 = load i32, i32* %68, align 4
  store i32 %330, i32* %329, align 1
  %331 = load i8*, i8** %23, align 8
  %332 = getelementptr inbounds i8, i8* %331, i64 4
  store i8* %332, i8** %23, align 8
  %333 = bitcast i8* %332 to i32*
  br label %334

334:                                              ; preds = %295, %321
  %335 = phi i32* [ %320, %295 ], [ %333, %321 ]
  store i32 1065353216, i32* %335, align 1
  %336 = load i8*, i8** %23, align 8
  %337 = getelementptr inbounds i8, i8* %336, i64 4
  store i8* %337, i8** %23, align 8
  %338 = bitcast i8* %337 to i32*
  store i32 %219, i32* %338, align 1
  %339 = load i8*, i8** %23, align 8
  %340 = getelementptr inbounds i8, i8* %339, i64 4
  store i8* %340, i8** %23, align 8
  %341 = bitcast i8* %340 to i32*
  store i32 %152, i32* %341, align 1
  %342 = load i8*, i8** %23, align 8
  %343 = getelementptr inbounds i8, i8* %342, i64 4
  store i8* %343, i8** %23, align 8
  %344 = bitcast i8* %343 to float*
  store float %171, float* %344, align 1
  %345 = load i8*, i8** %23, align 8
  %346 = getelementptr inbounds i8, i8* %345, i64 4
  store i8* %346, i8** %23, align 8
  %347 = add nuw nsw i64 %182, 1
  %348 = icmp eq i64 %347, 4
  %349 = bitcast i8* %346 to i32*
  br i1 %348, label %177, label %180

350:                                              ; preds = %177
  %351 = getelementptr inbounds %"struct.CircularRRectOp::RRect", %"struct.CircularRRectOp::RRect"* %140, i64 0, i32 1
  %352 = load float, float* %351, align 4
  %353 = fsub float %158, %352
  %354 = fsub float -0.000000e+00, %352
  %355 = fdiv float %354, %353
  call void @_ZN15CircularRRectOp21FillInOverstrokeVertsER14GrVertexWriterRK6SkRectfffffRK13GrVertexColor(%struct.GrVertexWriter* nonnull dereferenceable(8) %5, %struct.SkRect* dereferenceable(16) %153, float %158, float %353, float %355, float %353, float 0.000000e+00, %class.GrVertexColor* nonnull dereferenceable(20) %8)
  %356 = load i32, i32* %163, align 4
  br label %357

357:                                              ; preds = %350, %177
  %358 = phi i32 [ %356, %350 ], [ %178, %177 ]
  switch i32 %358, label %359 [
    i32 2, label %361
    i32 0, label %362
    i32 1, label %360
  ]

359:                                              ; preds = %357
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 2484, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

360:                                              ; preds = %357
  br label %362

361:                                              ; preds = %357
  br label %362

362:                                              ; preds = %357, %360, %361
  %363 = phi i8* [ bitcast ([78 x i16]* @_ZL23gOverstrokeRRectIndices to i8*), %361 ], [ bitcast (i16* getelementptr inbounds ([78 x i16], [78 x i16]* @_ZL23gOverstrokeRRectIndices, i64 0, i64 24) to i8*), %360 ], [ bitcast (i16* getelementptr inbounds ([78 x i16], [78 x i16]* @_ZL23gOverstrokeRRectIndices, i64 0, i64 24) to i8*), %357 ]
  %364 = phi <8 x i16>* [ bitcast ([78 x i16]* @_ZL23gOverstrokeRRectIndices to <8 x i16>*), %361 ], [ bitcast (i16* getelementptr inbounds ([78 x i16], [78 x i16]* @_ZL23gOverstrokeRRectIndices, i64 0, i64 24) to <8 x i16>*), %360 ], [ bitcast (i16* getelementptr inbounds ([78 x i16], [78 x i16]* @_ZL23gOverstrokeRRectIndices, i64 0, i64 24) to <8 x i16>*), %357 ]
  %365 = phi i16* [ getelementptr inbounds ([78 x i16], [78 x i16]* @_ZL23gOverstrokeRRectIndices, i64 0, i64 0), %361 ], [ getelementptr inbounds ([78 x i16], [78 x i16]* @_ZL23gOverstrokeRRectIndices, i64 0, i64 24), %360 ], [ getelementptr inbounds ([78 x i16], [78 x i16]* @_ZL23gOverstrokeRRectIndices, i64 0, i64 24), %357 ]
  %366 = phi i64 [ 72, %361 ], [ 48, %360 ], [ 54, %357 ]
  %367 = trunc i32 %141 to i16
  %368 = getelementptr i16, i16* %139, i64 %366
  %369 = bitcast i16* %368 to i8*
  %370 = getelementptr i16, i16* %365, i64 %366
  %371 = icmp ult i16* %139, %370
  %372 = icmp ult i8* %363, %369
  %373 = and i1 %371, %372
  br i1 %373, label %374, label %397

374:                                              ; preds = %414, %362
  %375 = phi i64 [ 0, %362 ], [ %398, %414 ]
  %376 = phi i16* [ %139, %362 ], [ %399, %414 ]
  %377 = xor i64 %375, -1
  %378 = add nsw i64 %366, %377
  %379 = and i64 %366, 2
  %380 = icmp eq i64 %379, 0
  br i1 %380, label %392, label %381

381:                                              ; preds = %374, %381
  %382 = phi i64 [ %389, %381 ], [ %375, %374 ]
  %383 = phi i16* [ %388, %381 ], [ %376, %374 ]
  %384 = phi i64 [ %390, %381 ], [ %379, %374 ]
  %385 = getelementptr inbounds i16, i16* %365, i64 %382
  %386 = load i16, i16* %385, align 2
  %387 = add i16 %386, %367
  %388 = getelementptr inbounds i16, i16* %383, i64 1
  store i16 %387, i16* %383, align 2
  %389 = add nuw nsw i64 %382, 1
  %390 = add i64 %384, -1
  %391 = icmp eq i64 %390, 0
  br i1 %391, label %392, label %381, !llvm.loop !4

392:                                              ; preds = %381, %374
  %393 = phi i16* [ undef, %374 ], [ %388, %381 ]
  %394 = phi i64 [ %375, %374 ], [ %389, %381 ]
  %395 = phi i16* [ %376, %374 ], [ %388, %381 ]
  %396 = icmp ult i64 %378, 3
  br i1 %396, label %416, label %428

397:                                              ; preds = %362
  %398 = and i64 %366, 112
  %399 = getelementptr i16, i16* %139, i64 %398
  %400 = insertelement <8 x i16> undef, i16 %367, i32 0
  %401 = shufflevector <8 x i16> %400, <8 x i16> undef, <8 x i32> zeroinitializer
  %402 = insertelement <8 x i16> undef, i16 %367, i32 0
  %403 = shufflevector <8 x i16> %402, <8 x i16> undef, <8 x i32> zeroinitializer
  %404 = load <8 x i16>, <8 x i16>* %364, align 2, !alias.scope !6
  %405 = getelementptr inbounds i16, i16* %365, i64 8
  %406 = bitcast i16* %405 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !6
  %408 = add <8 x i16> %404, %401
  %409 = add <8 x i16> %407, %403
  %410 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %408, <8 x i16>* %410, align 2, !alias.scope !9, !noalias !6
  %411 = getelementptr i16, i16* %139, i64 8
  %412 = bitcast i16* %411 to <8 x i16>*
  store <8 x i16> %409, <8 x i16>* %412, align 2, !alias.scope !9, !noalias !6
  %413 = icmp eq i64 %398, 16
  br i1 %413, label %414, label %471, !llvm.loop !11

414:                                              ; preds = %499, %485, %471, %397
  %415 = icmp eq i64 %366, %398
  br i1 %415, label %416, label %374

416:                                              ; preds = %392, %428, %414
  %417 = phi i16* [ %399, %414 ], [ %393, %392 ], [ %449, %428 ]
  %418 = load i32, i32* %163, align 4
  %419 = icmp ult i32 %418, 3
  br i1 %419, label %421, label %420

420:                                              ; preds = %416
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 2461, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

421:                                              ; preds = %416
  %422 = sext i32 %418 to i64
  %423 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN15CircularRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE, i64 0, i64 %422
  %424 = load i32, i32* %423, align 4
  %425 = add nuw nsw i32 %424, %141
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #12
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %64) #12
  %426 = getelementptr inbounds %"struct.CircularRRectOp::RRect", %"struct.CircularRRectOp::RRect"* %140, i64 1
  %427 = icmp eq %"struct.CircularRRectOp::RRect"* %426, %61
  br i1 %427, label %78, label %138

428:                                              ; preds = %392, %428
  %429 = phi i64 [ %450, %428 ], [ %394, %392 ]
  %430 = phi i16* [ %449, %428 ], [ %395, %392 ]
  %431 = getelementptr inbounds i16, i16* %365, i64 %429
  %432 = load i16, i16* %431, align 2
  %433 = add i16 %432, %367
  %434 = getelementptr inbounds i16, i16* %430, i64 1
  store i16 %433, i16* %430, align 2
  %435 = add nuw nsw i64 %429, 1
  %436 = getelementptr inbounds i16, i16* %365, i64 %435
  %437 = load i16, i16* %436, align 2
  %438 = add i16 %437, %367
  %439 = getelementptr inbounds i16, i16* %430, i64 2
  store i16 %438, i16* %434, align 2
  %440 = add nuw nsw i64 %429, 2
  %441 = getelementptr inbounds i16, i16* %365, i64 %440
  %442 = load i16, i16* %441, align 2
  %443 = add i16 %442, %367
  %444 = getelementptr inbounds i16, i16* %430, i64 3
  store i16 %443, i16* %439, align 2
  %445 = add nuw nsw i64 %429, 3
  %446 = getelementptr inbounds i16, i16* %365, i64 %445
  %447 = load i16, i16* %446, align 2
  %448 = add i16 %447, %367
  %449 = getelementptr inbounds i16, i16* %430, i64 4
  store i16 %448, i16* %444, align 2
  %450 = add nuw nsw i64 %429, 4
  %451 = icmp eq i64 %450, %366
  br i1 %451, label %416, label %428, !llvm.loop !13

452:                                              ; preds = %135, %49
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #12
  %453 = load %class.GrBuffer*, %class.GrBuffer** %39, align 8
  %454 = icmp eq %class.GrBuffer* %453, null
  br i1 %454, label %460, label %455

455:                                              ; preds = %452
  %456 = bitcast %class.GrBuffer* %453 to void (%class.GrBuffer*)***
  %457 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %456, align 8
  %458 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %457, i64 3
  %459 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %458, align 8
  call void %459(%class.GrBuffer* nonnull %453) #12
  br label %460

460:                                              ; preds = %452, %455
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #12
  br label %461

461:                                              ; preds = %460, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #12
  %462 = load %class.GrBuffer*, %class.GrBuffer** %20, align 8
  %463 = icmp eq %class.GrBuffer* %462, null
  br i1 %463, label %469, label %464

464:                                              ; preds = %461
  %465 = bitcast %class.GrBuffer* %462 to void (%class.GrBuffer*)***
  %466 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %465, align 8
  %467 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %466, i64 3
  %468 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %467, align 8
  call void %468(%class.GrBuffer* nonnull %462) #12
  br label %469

469:                                              ; preds = %461, %464
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  br label %470

470:                                              ; preds = %13, %469
  ret void

471:                                              ; preds = %397
  %472 = getelementptr i16, i16* %139, i64 16
  %473 = getelementptr inbounds i16, i16* %365, i64 16
  %474 = bitcast i16* %473 to <8 x i16>*
  %475 = load <8 x i16>, <8 x i16>* %474, align 2, !alias.scope !6
  %476 = getelementptr inbounds i16, i16* %365, i64 24
  %477 = bitcast i16* %476 to <8 x i16>*
  %478 = load <8 x i16>, <8 x i16>* %477, align 2, !alias.scope !6
  %479 = add <8 x i16> %475, %401
  %480 = add <8 x i16> %478, %403
  %481 = bitcast i16* %472 to <8 x i16>*
  store <8 x i16> %479, <8 x i16>* %481, align 2, !alias.scope !9, !noalias !6
  %482 = getelementptr i16, i16* %139, i64 24
  %483 = bitcast i16* %482 to <8 x i16>*
  store <8 x i16> %480, <8 x i16>* %483, align 2, !alias.scope !9, !noalias !6
  %484 = icmp eq i64 %398, 32
  br i1 %484, label %414, label %485, !llvm.loop !11

485:                                              ; preds = %471
  %486 = getelementptr i16, i16* %139, i64 32
  %487 = getelementptr inbounds i16, i16* %365, i64 32
  %488 = bitcast i16* %487 to <8 x i16>*
  %489 = load <8 x i16>, <8 x i16>* %488, align 2, !alias.scope !6
  %490 = getelementptr inbounds i16, i16* %365, i64 40
  %491 = bitcast i16* %490 to <8 x i16>*
  %492 = load <8 x i16>, <8 x i16>* %491, align 2, !alias.scope !6
  %493 = add <8 x i16> %489, %401
  %494 = add <8 x i16> %492, %403
  %495 = bitcast i16* %486 to <8 x i16>*
  store <8 x i16> %493, <8 x i16>* %495, align 2, !alias.scope !9, !noalias !6
  %496 = getelementptr i16, i16* %139, i64 40
  %497 = bitcast i16* %496 to <8 x i16>*
  store <8 x i16> %494, <8 x i16>* %497, align 2, !alias.scope !9, !noalias !6
  %498 = icmp eq i64 %398, 48
  br i1 %498, label %414, label %499, !llvm.loop !11

499:                                              ; preds = %485
  %500 = getelementptr i16, i16* %139, i64 48
  %501 = getelementptr inbounds i16, i16* %365, i64 48
  %502 = bitcast i16* %501 to <8 x i16>*
  %503 = load <8 x i16>, <8 x i16>* %502, align 2, !alias.scope !6
  %504 = getelementptr inbounds i16, i16* %365, i64 56
  %505 = bitcast i16* %504 to <8 x i16>*
  %506 = load <8 x i16>, <8 x i16>* %505, align 2, !alias.scope !6
  %507 = add <8 x i16> %503, %401
  %508 = add <8 x i16> %506, %403
  %509 = bitcast i16* %500 to <8 x i16>*
  store <8 x i16> %507, <8 x i16>* %509, align 2, !alias.scope !9, !noalias !6
  %510 = getelementptr i16, i16* %139, i64 56
  %511 = bitcast i16* %510 to <8 x i16>*
  store <8 x i16> %508, <8 x i16>* %511, align 2, !alias.scope !9, !noalias !6
  br label %414
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #8

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN15CircularRRectOp5RRectELb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.75*, i32, i32) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.75, %class.SkTArray.75* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %66

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %66, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 44) #12
  %45 = load i64, i64* %4, align 8
  %46 = lshr i64 %45, 1
  %47 = and i64 %46, 2147483647
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %35
  %50 = mul nuw nsw i64 %47, 44
  %51 = bitcast %class.SkTArray.75* %0 to i8**
  %52 = load i8*, i8** %51, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %52, i64 %50, i1 false) #12
  %53 = load i64, i64* %4, align 8
  br label %54

54:                                               ; preds = %35, %49
  %55 = phi i64 [ %45, %35 ], [ %53, %49 ]
  %56 = and i64 %55, 1
  %57 = icmp eq i64 %56, 0
  %58 = bitcast %class.SkTArray.75* %0 to i8**
  br i1 %57, label %62, label %59

59:                                               ; preds = %54
  %60 = load i8*, i8** %58, align 8
  tail call void @_Z7sk_freePv(i8* %60) #12
  %61 = load i64, i64* %4, align 8
  br label %62

62:                                               ; preds = %54, %59
  %63 = phi i64 [ %61, %59 ], [ %55, %54 ]
  store i8* %44, i8** %58, align 8
  %64 = and i64 %63, -4294967298
  %65 = or i64 %64, 1
  store i64 %65, i64* %4, align 8
  br label %66

66:                                               ; preds = %62, %32, %21
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN24GrSimpleMeshDrawOpHelperD1Ev(%class.GrSimpleMeshDrawOpHelper*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4GrOpD2Ev(%class.GrOp*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.GrOp, %class.GrOp* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrOp, %class.GrOp* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.GrOp*, %class.GrOp** %3, align 8
  store %class.GrOp* null, %class.GrOp** %3, align 8
  %5 = icmp eq %class.GrOp* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.GrOp* %4 to void (%class.GrOp*)***
  %8 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %8, i64 1
  %10 = load void (%class.GrOp*)*, void (%class.GrOp*)** %9, align 8
  tail call void %10(%class.GrOp* nonnull %4) #12
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4GrOpD0Ev(%class.GrOp*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrOp*, %"class.std::__1::function.137"*) unnamed_addr #4 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps(%class.GrOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps* dereferenceable(232)) unnamed_addr #4 comdat align 2 {
  ret i32 2
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare void @_ZNK10GrPipeline12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrPipeline*, %"class.std::__1::function.137"*) local_unnamed_addr #2

declare void @_ZNK14GrProcessorSet12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrProcessorSet*, %"class.std::__1::function.137"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK24GrSimpleMeshDrawOpHelper12isCompatibleERKS_RK6GrCapsRK6SkRectS7_b(%class.GrSimpleMeshDrawOpHelper*, %class.GrSimpleMeshDrawOpHelper* dereferenceable(16), %class.GrCaps* dereferenceable(232), %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), i1 zeroext) local_unnamed_addr #2

declare void @_ZN14GrOpFlushState8drawMeshERK12GrSimpleMesh(%class.GrOpFlushState*, %struct.GrSimpleMesh* dereferenceable(48)) local_unnamed_addr #2

declare void @_ZN15GrOpsRenderPass12bindPipelineERK13GrProgramInfoRK6SkRect(%class.GrOpsRenderPass*, %class.GrProgramInfo* dereferenceable(128), %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN15GrOpsRenderPass14setScissorRectERK7SkIRect(%class.GrOpsRenderPass*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN15GrOpsRenderPass12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrOpsRenderPass*, %class.GrGeometryProcessor* dereferenceable(80), %class.GrSurfaceProxy**, %class.GrPipeline* dereferenceable(128)) local_unnamed_addr #2

declare i32 @_ZNK24GrSimpleMeshDrawOpHelper18fixedFunctionFlagsEv(%class.GrSimpleMeshDrawOpHelper*) local_unnamed_addr #2

declare i32 @_ZN24GrSimpleMeshDrawOpHelper18finalizeProcessorsERK6GrCapsPK13GrAppliedClip11GrClampType27GrProcessorAnalysisCoverageP8SkRGBA4fIL11SkAlphaType2EEPb(%class.GrSimpleMeshDrawOpHelper*, %class.GrCaps* dereferenceable(232), %class.GrAppliedClip*, i32, i32, %struct.SkRGBA4f*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %class.GrProgramInfo* @_ZN24GrSimpleMeshDrawOpHelper17createProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewEP19GrGeometryProcessor15GrPrimitiveType18GrXferBarrierFlags8GrLoadOp(%class.GrSimpleMeshDrawOpHelper*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip* dereferenceable(72), %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), %class.GrGeometryProcessor*, i8 zeroext, i32, i32) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix*, %class.SkMatrix*) local_unnamed_addr #2

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.CircleGeometryProcessor* @_ZN12SkArenaAlloc4makeIZN23CircleGeometryProcessor4MakeEPS_bbbbbbRK8SkMatrixEUlPvE_EEDTclfp_LDnEEEOT_(%class.SkArenaAlloc*, %class.anon* dereferenceable(56)) local_unnamed_addr #4 comdat align 2 {
  %3 = tail call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %0, i32 249, i32 8) #12
  %4 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %0, i64 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = ptrtoint i8* %3 to i64
  %8 = sub i64 %7, %6
  %9 = trunc i64 %8 to i32
  %10 = getelementptr inbounds i8, i8* %3, i64 240
  store i8* %10, i8** %4, align 8
  tail call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %0, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZN23CircleGeometryProcessor4MakeEPS_bbbbbbRK8SkMatrixEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESB_, i32 %9) #12
  %11 = bitcast i8* %3 to %class.CircleGeometryProcessor*
  %12 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = load i8, i8* %13, align 1, !range !2
  %15 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = load i8, i8* %16, align 1, !range !2
  %18 = icmp eq i8 %17, 0
  %19 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 2
  %20 = load i8*, i8** %19, align 8
  %21 = load i8, i8* %20, align 1, !range !2
  %22 = icmp eq i8 %21, 0
  %23 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 3
  %24 = load i8*, i8** %23, align 8
  %25 = load i8, i8* %24, align 1, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 4
  %28 = load i8*, i8** %27, align 8
  %29 = load i8, i8* %28, align 1, !range !2
  %30 = icmp eq i8 %29, 0
  %31 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 5
  %32 = load i8*, i8** %31, align 8
  %33 = load i8, i8* %32, align 1, !range !2
  %34 = icmp eq i8 %33, 0
  %35 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 6
  %36 = bitcast %class.SkMatrix** %35 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast i8* %3 to %class.GrGeometryProcessor*
  tail call void @_ZN19GrGeometryProcessorC2EN11GrProcessor7ClassIDE(%class.GrGeometryProcessor* %38, i32 5) #12
  %39 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV23CircleGeometryProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %40 = getelementptr inbounds i8, i8* %3, i64 76
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %37, i64 40, i1 false) #12
  %41 = getelementptr inbounds i8, i8* %3, i64 120
  %42 = bitcast i8* %41 to %"class.GrGeometryProcessor::Attribute"*
  %43 = getelementptr inbounds i8, i8* %3, i64 152
  %44 = getelementptr inbounds i8, i8* %3, i64 184
  %45 = getelementptr inbounds i8, i8* %3, i64 200
  %46 = getelementptr inbounds i8, i8* %3, i64 216
  %47 = getelementptr inbounds i8, i8* %3, i64 232
  store i8 %14, i8* %47, align 8
  %48 = getelementptr inbounds i8, i8* %3, i64 168
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 64, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.112 to i8*), i64 16, i1 false) #12
  %49 = select i1 %34, i64 133143986193, i64 133143986179
  %50 = getelementptr inbounds i8, i8* %3, i64 136
  %51 = bitcast i8* %50 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i8** %51, align 8
  %52 = getelementptr inbounds i8, i8* %3, i64 144
  %53 = bitcast i8* %52 to i64*
  store i64 %49, i64* %53, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.87 to i8*), i64 16, i1 false) #12
  br i1 %18, label %55, label %54

54:                                               ; preds = %2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.10 to i8*), i64 16, i1 false) #12
  br label %55

55:                                               ; preds = %54, %2
  br i1 %22, label %57, label %56

56:                                               ; preds = %55
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.12 to i8*), i64 16, i1 false) #12
  br label %57

57:                                               ; preds = %56, %55
  br i1 %26, label %59, label %58

58:                                               ; preds = %57
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.14 to i8*), i64 16, i1 false) #12
  br label %59

59:                                               ; preds = %58, %57
  br i1 %30, label %61, label %60

60:                                               ; preds = %59
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.16 to i8*), i64 16, i1 false) #12
  br label %61

61:                                               ; preds = %59, %60
  tail call void @_ZN19GrGeometryProcessor19setVertexAttributesEPKNS_9AttributeEi(%class.GrGeometryProcessor* %38, %"class.GrGeometryProcessor::Attribute"* %42, i32 7) #12
  ret %class.CircleGeometryProcessor* %11
}

declare i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #2

declare void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc*, i8* (i8*)*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc4makeIZN23CircleGeometryProcessor4MakeEPS_bbbbbbRK8SkMatrixEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESB_(i8*) #6 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -249
  %3 = bitcast i8* %2 to %class.CircleGeometryProcessor*
  %4 = bitcast i8* %2 to void (%class.CircleGeometryProcessor*)***
  %5 = load void (%class.CircleGeometryProcessor*)**, void (%class.CircleGeometryProcessor*)*** %4, align 8
  %6 = load void (%class.CircleGeometryProcessor*)*, void (%class.CircleGeometryProcessor*)** %5, align 8
  tail call void %6(%class.CircleGeometryProcessor* %3) #12
  ret i8* %2
}

declare void @_ZN19GrGeometryProcessorC2EN11GrProcessor7ClassIDE(%class.GrGeometryProcessor*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGeometryProcessor19setVertexAttributesEPKNS_9AttributeEi(%class.GrGeometryProcessor*, %"class.GrGeometryProcessor::Attribute"*, i32) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %0, i64 0, i32 3, i32 0
  store %"class.GrGeometryProcessor::Attribute"* %1, %"class.GrGeometryProcessor::Attribute"** %4, align 8
  %5 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %0, i64 0, i32 3, i32 1
  store i32 %2, i32* %5, align 8
  %6 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %0, i64 0, i32 3, i32 2
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %0, i64 0, i32 3, i32 3
  store i64 0, i64* %7, align 8
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %34

9:                                                ; preds = %3
  %10 = zext i32 %2 to i64
  br label %11

11:                                               ; preds = %29, %9
  %12 = phi i64 [ 0, %9 ], [ %30, %29 ]
  %13 = phi i32 [ 0, %9 ], [ %31, %29 ]
  %14 = phi i64 [ 0, %9 ], [ %32, %29 ]
  %15 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %1, i64 %14, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %11
  %19 = add nsw i32 %13, 1
  store i32 %19, i32* %6, align 4
  %20 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %1, i64 %14, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp ult i32 %21, 26
  br i1 %22, label %24, label %23

23:                                               ; preds = %18
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.17, i64 0, i64 0), i32 373, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.18, i64 0, i64 0)) #16
  unreachable

24:                                               ; preds = %18
  %25 = sext i32 %21 to i64
  %26 = getelementptr inbounds [26 x i64], [26 x i64]* @switch.table._ZN19GrGeometryProcessor19setVertexAttributesEPKNS_9AttributeEi, i64 0, i64 %25
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %12, %27
  store i64 %28, i64* %7, align 8
  br label %29

29:                                               ; preds = %24, %11
  %30 = phi i64 [ %28, %24 ], [ %12, %11 ]
  %31 = phi i32 [ %19, %24 ], [ %13, %11 ]
  %32 = add nuw nsw i64 %14, 1
  %33 = icmp eq i64 %32, %10
  br i1 %33, label %34, label %11

34:                                               ; preds = %29, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11GrProcessorD2Ev(%class.GrProcessor*) unnamed_addr #4 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23CircleGeometryProcessorD0Ev(%class.CircleGeometryProcessor*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %class.CircleGeometryProcessor* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK23CircleGeometryProcessor4nameEv(%class.CircleGeometryProcessor*) unnamed_addr #4 comdat align 2 {
  ret i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.19, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK23CircleGeometryProcessor19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%class.CircleGeometryProcessor*, %class.GrShaderCaps* dereferenceable(144), %class.GrProcessorKeyBuilder*) unnamed_addr #4 comdat align 2 {
  %4 = bitcast %class.CircleGeometryProcessor* %0 to %class.GrGeometryProcessor*
  tail call void @_ZN23CircleGeometryProcessor13GLSLProcessor6GenKeyERK19GrGeometryProcessorRK12GrShaderCapsP21GrProcessorKeyBuilder(%class.GrGeometryProcessor* dereferenceable(80) %4, %class.GrShaderCaps* dereferenceable(144) %1, %class.GrProcessorKeyBuilder* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrGLSLGeometryProcessor* @_ZNK23CircleGeometryProcessor18createGLSLInstanceERK12GrShaderCaps(%class.CircleGeometryProcessor*, %class.GrShaderCaps* dereferenceable(144)) unnamed_addr #4 comdat align 2 {
  %3 = tail call i8* @_Znwm(i64 72) #15
  %4 = bitcast i8* %3 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %3, i64 16
  %6 = bitcast i8* %5 to i64*
  %7 = getelementptr inbounds i8, i8* %3, i64 8
  %8 = bitcast i8* %7 to %"struct.GrGLSLGeometryProcessor::TransformInfo"**
  store %"struct.GrGLSLGeometryProcessor::TransformInfo"* null, %"struct.GrGLSLGeometryProcessor::TransformInfo"** %8, align 8
  store i64 1, i64* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN23CircleGeometryProcessor13GLSLProcessorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 24
  %10 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13InvalidMatrixEv() #12
  %11 = bitcast %class.SkMatrix* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 4 %11, i64 40, i1 false) #12
  %12 = getelementptr inbounds i8, i8* %3, i64 64
  %13 = bitcast i8* %12 to i32*
  store i32 -1, i32* %13, align 4
  %14 = bitcast i8* %3 to %class.GrGLSLGeometryProcessor*
  ret %class.GrGLSLGeometryProcessor* %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(96) %"class.GrGeometryProcessor::TextureSampler"* @_ZNK19GrGeometryProcessor16onTextureSamplerEi(%class.GrGeometryProcessor*, i32) unnamed_addr #4 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.17, i64 0, i64 0), i32 304, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49, i64 0, i64 0)) #16
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN11GrProcessordlEPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23CircleGeometryProcessor13GLSLProcessor6GenKeyERK19GrGeometryProcessorRK12GrShaderCapsP21GrProcessorKeyBuilder(%class.GrGeometryProcessor* dereferenceable(80), %class.GrShaderCaps* dereferenceable(144), %class.GrProcessorKeyBuilder*) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %0, i64 2, i32 5
  %5 = bitcast i32* %4 to i8*
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = zext i8 %6 to i32
  %8 = bitcast %class.GrProcessorKeyBuilder* %2 to void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)***
  %9 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %9, i64 2
  %11 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %10, align 8
  tail call void %11(%class.GrProcessorKeyBuilder* %2, i32 1, i32 %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #12
  %12 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %0, i64 2, i32 0, i32 1
  %13 = getelementptr inbounds i32, i32* %12, i64 3
  %14 = load i32, i32* %13, align 4
  %15 = icmp ne i32 %14, 0
  %16 = zext i1 %15 to i32
  %17 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %18 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %17, i64 2
  %19 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %18, align 8
  tail call void %19(%class.GrProcessorKeyBuilder* %2, i32 1, i32 %16, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i64 0, i64 0)) #12
  %20 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %0, i64 2, i32 3, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %21, 0
  %23 = zext i1 %22 to i32
  %24 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %25 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %24, i64 2
  %26 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %25, align 8
  tail call void %26(%class.GrProcessorKeyBuilder* %2, i32 1, i32 %23, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0)) #12
  %27 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %0, i64 2, i32 3, i32 3
  %28 = bitcast i64* %27 to %"class.GrGeometryProcessor::Attribute"*
  %29 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %28, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp ne i32 %30, 0
  %32 = zext i1 %31 to i32
  %33 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %34 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %33, i64 2
  %35 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %34, align 8
  tail call void %35(%class.GrProcessorKeyBuilder* %2, i32 1, i32 %32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i64 0, i64 0)) #12
  %36 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %0, i64 2, i32 4, i32 1
  %37 = getelementptr inbounds i32, i32* %36, i64 3
  %38 = load i32, i32* %37, align 4
  %39 = icmp ne i32 %38, 0
  %40 = zext i1 %39 to i32
  %41 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %42 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %41, i64 2
  %43 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %42, align 8
  tail call void %43(%class.GrProcessorKeyBuilder* %2, i32 1, i32 %40, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.24, i64 0, i64 0)) #12
  %44 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %0, i64 0, i32 6
  %45 = bitcast [4 x i8]* %44 to %class.SkMatrix*
  %46 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %1, i64 0, i32 2
  %47 = bitcast i56* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = and i64 %48, 1048576
  %50 = icmp eq i64 %49, 0
  %51 = getelementptr inbounds [4 x i8], [4 x i8]* %44, i64 9
  %52 = bitcast [4 x i8]* %51 to i32*
  %53 = load i32, i32* %52, align 4
  br i1 %50, label %54, label %74

54:                                               ; preds = %3
  %55 = trunc i32 %53 to i8
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %54
  %58 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %45) #12
  %59 = zext i8 %58 to i32
  store i32 %59, i32* %52, align 4
  br label %60

60:                                               ; preds = %57, %54
  %61 = phi i32 [ %59, %57 ], [ %53, %54 ]
  %62 = and i32 %61, 15
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %86, label %64

64:                                               ; preds = %60
  %65 = trunc i32 %61 to i8
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %64
  %68 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %45) #12
  %69 = zext i8 %68 to i32
  store i32 %69, i32* %52, align 4
  br label %70

70:                                               ; preds = %67, %64
  %71 = phi i32 [ %69, %67 ], [ %61, %64 ]
  %72 = and i32 %71, 12
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %86, label %74

74:                                               ; preds = %70, %3
  %75 = phi i32 [ %71, %70 ], [ %53, %3 ]
  %76 = and i32 %75, 192
  %77 = icmp eq i32 %76, 128
  br i1 %77, label %78, label %81

78:                                               ; preds = %74
  %79 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %45) #12
  %80 = zext i8 %79 to i32
  store i32 %80, i32* %52, align 4
  br label %81

81:                                               ; preds = %78, %74
  %82 = phi i32 [ %80, %78 ], [ %75, %74 ]
  %83 = and i32 %82, 8
  %84 = icmp eq i32 %83, 0
  %85 = select i1 %84, i32 2, i32 3
  br label %86

86:                                               ; preds = %60, %70, %81
  %87 = phi i32 [ 0, %60 ], [ 1, %70 ], [ %85, %81 ]
  %88 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %89 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %88, i64 2
  %90 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %89, align 8
  tail call void %90(%class.GrProcessorKeyBuilder* %2, i32 2, i32 %87, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25, i64 0, i64 0)) #12
  ret void
}

declare zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13InvalidMatrixEv() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23CircleGeometryProcessor13GLSLProcessorD0Ev(%"class.CircleGeometryProcessor::GLSLProcessor"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.CircleGeometryProcessor::GLSLProcessor", %"class.CircleGeometryProcessor::GLSLProcessor"* %0, i64 0, i32 0
  tail call void @_ZN23GrGLSLGeometryProcessorD2Ev(%class.GrGLSLGeometryProcessor* %2) #12
  %3 = bitcast %"class.CircleGeometryProcessor::GLSLProcessor"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23CircleGeometryProcessor13GLSLProcessor7setDataERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK19GrGeometryProcessor(%"class.CircleGeometryProcessor::GLSLProcessor"*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrShaderCaps* dereferenceable(144), %class.GrGeometryProcessor* dereferenceable(80)) unnamed_addr #4 comdat align 2 {
  %5 = getelementptr inbounds %"class.CircleGeometryProcessor::GLSLProcessor", %"class.CircleGeometryProcessor::GLSLProcessor"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %3, i64 0, i32 6
  %7 = bitcast [4 x i8]* %6 to %class.SkMatrix*
  %8 = getelementptr inbounds %"class.CircleGeometryProcessor::GLSLProcessor", %"class.CircleGeometryProcessor::GLSLProcessor"* %0, i64 0, i32 1
  tail call void @_ZN23GrGLSLGeometryProcessor12SetTransformERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK16GrResourceHandleINS0_17UniformHandleKindEERK8SkMatrixPSB_(%class.GrGLSLProgramDataManager* dereferenceable(8) %1, %class.GrShaderCaps* dereferenceable(144) %2, %class.GrResourceHandle* dereferenceable(4) %5, %class.SkMatrix* dereferenceable(40) %7, %class.SkMatrix* %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps(%class.SkString* noalias sret, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor* dereferenceable(80), i8*, %class.GrGLSLUniformHandler* dereferenceable(16), %class.GrShaderCaps* dereferenceable(144)) unnamed_addr #4 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.26, i64 0, i64 0), i32 139, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.27, i64 0, i64 0)) #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps(%class.SkString* noalias sret, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor* dereferenceable(80), i8*, %class.GrGLSLUniformHandler* dereferenceable(16), %class.GrShaderCaps* dereferenceable(144)) unnamed_addr #4 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.26, i64 0, i64 0), i32 145, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.27, i64 0, i64 0)) #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23CircleGeometryProcessor13GLSLProcessor10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS1_8GrGPArgsE(%"class.CircleGeometryProcessor::GLSLProcessor"*, %"struct.GrGLSLGeometryProcessor::EmitArgs"* dereferenceable(88), %"struct.GrGLSLGeometryProcessor::GrGPArgs"*) unnamed_addr #4 comdat align 2 {
  %4 = alloca %class.SkString, align 8
  %5 = alloca %class.GrGLSLVarying, align 8
  %6 = alloca %class.GrShaderVar, align 8
  %7 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 6
  %8 = bitcast %class.GrGeometryProcessor** %7 to %class.CircleGeometryProcessor**
  %9 = load %class.CircleGeometryProcessor*, %class.CircleGeometryProcessor** %8, align 8
  %10 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 0
  %11 = load %class.GrGLSLVertexBuilder*, %class.GrGLSLVertexBuilder** %10, align 8
  %12 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 3
  %13 = load %class.GrGLSLVaryingHandler*, %class.GrGLSLVaryingHandler** %12, align 8
  %14 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 4
  %15 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %16 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 2
  %17 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %16, align 8
  %18 = bitcast %class.CircleGeometryProcessor* %9 to %class.GrGeometryProcessor*
  tail call void @_ZN20GrGLSLVaryingHandler14emitAttributesERK19GrGeometryProcessor(%class.GrGLSLVaryingHandler* %13, %class.GrGeometryProcessor* dereferenceable(80) %18) #12
  %19 = bitcast %class.GrGLSLFPFragmentBuilder* %17 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr i8, i8* %20, i64 -24
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %class.GrGLSLFPFragmentBuilder* %17 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 %23
  %26 = getelementptr inbounds i8, i8* %25, i64 160
  %27 = getelementptr inbounds i8, i8* %25, i64 488
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 8
  %30 = bitcast i8* %26 to %class.SkString**
  %31 = load %class.SkString*, %class.SkString** %30, align 8
  %32 = sext i32 %29 to i64
  %33 = getelementptr inbounds %class.SkString, %class.SkString* %31, i64 %32
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %33, i64 -1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.28, i64 0, i64 0)) #12
  %34 = getelementptr inbounds %class.CircleGeometryProcessor, %class.CircleGeometryProcessor* %9, i64 0, i32 5
  tail call void @_ZN20GrGLSLVaryingHandler23addPassThroughAttributeERKN19GrGeometryProcessor9AttributeEPKcNS_13InterpolationE(%class.GrGLSLVaryingHandler* %13, %"class.GrGeometryProcessor::Attribute"* dereferenceable(16) %34, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i64 0, i64 0), i32 0) #12
  %35 = getelementptr inbounds %class.CircleGeometryProcessor, %class.CircleGeometryProcessor* %9, i64 0, i32 6, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %53, label %38

38:                                               ; preds = %3
  %39 = getelementptr inbounds %class.CircleGeometryProcessor, %class.CircleGeometryProcessor* %9, i64 0, i32 6
  %40 = load i8*, i8** %19, align 8
  %41 = getelementptr i8, i8* %40, i64 -24
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds i8, i8* %24, i64 %43
  %45 = getelementptr inbounds i8, i8* %44, i64 160
  %46 = getelementptr inbounds i8, i8* %44, i64 488
  %47 = bitcast i8* %46 to i32*
  %48 = load i32, i32* %47, align 8
  %49 = bitcast i8* %45 to %class.SkString**
  %50 = load %class.SkString*, %class.SkString** %49, align 8
  %51 = sext i32 %48 to i64
  %52 = getelementptr inbounds %class.SkString, %class.SkString* %50, i64 %51
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %52, i64 -1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.30, i64 0, i64 0)) #12
  tail call void @_ZN20GrGLSLVaryingHandler23addPassThroughAttributeERKN19GrGeometryProcessor9AttributeEPKcNS_13InterpolationE(%class.GrGLSLVaryingHandler* %13, %"class.GrGeometryProcessor::Attribute"* dereferenceable(16) %39, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i64 0, i64 0), i32 0) #12
  br label %53

53:                                               ; preds = %3, %38
  %54 = getelementptr inbounds %class.CircleGeometryProcessor, %class.CircleGeometryProcessor* %9, i64 0, i32 7, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %72, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %class.CircleGeometryProcessor, %class.CircleGeometryProcessor* %9, i64 0, i32 7
  %59 = load i8*, i8** %19, align 8
  %60 = getelementptr i8, i8* %59, i64 -24
  %61 = bitcast i8* %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds i8, i8* %24, i64 %62
  %64 = getelementptr inbounds i8, i8* %63, i64 160
  %65 = getelementptr inbounds i8, i8* %63, i64 488
  %66 = bitcast i8* %65 to i32*
  %67 = load i32, i32* %66, align 8
  %68 = bitcast i8* %64 to %class.SkString**
  %69 = load %class.SkString*, %class.SkString** %68, align 8
  %70 = sext i32 %67 to i64
  %71 = getelementptr inbounds %class.SkString, %class.SkString* %69, i64 %70
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %71, i64 -1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i64 0, i64 0)) #12
  tail call void @_ZN20GrGLSLVaryingHandler23addPassThroughAttributeERKN19GrGeometryProcessor9AttributeEPKcNS_13InterpolationE(%class.GrGLSLVaryingHandler* %13, %"class.GrGeometryProcessor::Attribute"* dereferenceable(16) %58, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0), i32 0) #12
  br label %72

72:                                               ; preds = %53, %57
  %73 = getelementptr inbounds %class.CircleGeometryProcessor, %class.CircleGeometryProcessor* %9, i64 0, i32 8, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %91, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %class.CircleGeometryProcessor, %class.CircleGeometryProcessor* %9, i64 0, i32 8
  %78 = load i8*, i8** %19, align 8
  %79 = getelementptr i8, i8* %78, i64 -24
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds i8, i8* %24, i64 %81
  %83 = getelementptr inbounds i8, i8* %82, i64 160
  %84 = getelementptr inbounds i8, i8* %82, i64 488
  %85 = bitcast i8* %84 to i32*
  %86 = load i32, i32* %85, align 8
  %87 = bitcast i8* %83 to %class.SkString**
  %88 = load %class.SkString*, %class.SkString** %87, align 8
  %89 = sext i32 %86 to i64
  %90 = getelementptr inbounds %class.SkString, %class.SkString* %88, i64 %89
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %90, i64 -1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32, i64 0, i64 0)) #12
  tail call void @_ZN20GrGLSLVaryingHandler23addPassThroughAttributeERKN19GrGeometryProcessor9AttributeEPKcNS_13InterpolationE(%class.GrGLSLVaryingHandler* %13, %"class.GrGeometryProcessor::Attribute"* dereferenceable(16) %77, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i64 0, i64 0), i32 0) #12
  br label %91

91:                                               ; preds = %72, %76
  %92 = bitcast %class.GrGLSLVarying* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %92) #12
  %93 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %5, i64 0, i32 0
  %94 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %5, i64 0, i32 1
  %95 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %5, i64 0, i32 5
  store i32 21, i32* %93, align 8
  %96 = getelementptr inbounds %class.CircleGeometryProcessor, %class.CircleGeometryProcessor* %9, i64 0, i32 9, i32 2
  %97 = bitcast i32* %94 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %97, i8 0, i64 36, i1 false)
  %98 = load i32, i32* %96, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %120, label %100

100:                                              ; preds = %91
  %101 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %5, i64 0, i32 2
  %102 = getelementptr inbounds %class.CircleGeometryProcessor, %class.CircleGeometryProcessor* %9, i64 0, i32 9
  %103 = load i8*, i8** %19, align 8
  %104 = getelementptr i8, i8* %103, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = getelementptr inbounds i8, i8* %24, i64 %106
  %108 = getelementptr inbounds i8, i8* %107, i64 160
  %109 = getelementptr inbounds i8, i8* %107, i64 488
  %110 = bitcast i8* %109 to i32*
  %111 = load i32, i32* %110, align 8
  %112 = bitcast i8* %108 to %class.SkString**
  %113 = load %class.SkString*, %class.SkString** %112, align 8
  %114 = sext i32 %111 to i64
  %115 = getelementptr inbounds %class.SkString, %class.SkString* %113, i64 %114
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %115, i64 -1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.33, i64 0, i64 0)) #12
  tail call void @_ZN20GrGLSLVaryingHandler23addPassThroughAttributeERKN19GrGeometryProcessor9AttributeEPKcNS_13InterpolationE(%class.GrGLSLVaryingHandler* %13, %"class.GrGeometryProcessor::Attribute"* dereferenceable(16) %102, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.24, i64 0, i64 0), i32 0) #12
  call void @_ZN20GrGLSLVaryingHandler10addVaryingEPKcP13GrGLSLVaryingNS_13InterpolationE(%class.GrGLSLVaryingHandler* %13, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i64 0, i64 0), %class.GrGLSLVarying* nonnull %5, i32 1) #12
  %116 = bitcast %class.GrGLSLVertexBuilder* %11 to %class.GrGLSLShaderBuilder*
  %117 = load i8*, i8** %101, align 8
  %118 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %34, i64 0, i32 0
  %119 = load i8*, i8** %118, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %116, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35, i64 0, i64 0), i8* %117, i8* %119)
  br label %120

120:                                              ; preds = %91, %100
  %121 = load i8*, i8** %19, align 8
  %122 = getelementptr i8, i8* %121, i64 -24
  %123 = bitcast i8* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = getelementptr inbounds i8, i8* %24, i64 %124
  %126 = bitcast i8* %125 to %class.GrGLSLShaderBuilder*
  %127 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 7
  %128 = load i8*, i8** %127, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %126, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i64 0, i64 0), i8* %128)
  %129 = getelementptr inbounds %class.CircleGeometryProcessor, %class.CircleGeometryProcessor* %9, i64 0, i32 4
  %130 = load i8*, i8** %127, align 8
  call void @_ZN20GrGLSLVaryingHandler23addPassThroughAttributeERKN19GrGeometryProcessor9AttributeEPKcNS_13InterpolationE(%class.GrGLSLVaryingHandler* %13, %"class.GrGeometryProcessor::Attribute"* dereferenceable(16) %129, i8* %130, i32 0) #12
  %131 = getelementptr inbounds %class.CircleGeometryProcessor, %class.CircleGeometryProcessor* %9, i64 0, i32 3, i32 0
  %132 = load i8*, i8** %131, align 8
  call void @_ZN23GrGLSLGeometryProcessor19WriteOutputPositionEP19GrGLSLVertexBuilderPNS_8GrGPArgsEPKc(%class.GrGLSLVertexBuilder* %11, %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i8* %132) #12
  %133 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 5
  %134 = load %class.GrShaderCaps*, %class.GrShaderCaps** %133, align 8
  %135 = load i8*, i8** %131, align 8, !noalias !14
  %136 = getelementptr inbounds %class.CircleGeometryProcessor, %class.CircleGeometryProcessor* %9, i64 0, i32 3, i32 2
  %137 = load i32, i32* %136, align 4, !noalias !14
  %138 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #12, !noalias !14
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %4, i8* %135) #12, !noalias !14
  %139 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %6, i64 0, i32 0
  store i32 %137, i32* %139, align 8, !alias.scope !14
  %140 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %6, i64 0, i32 1
  store i32 2, i32* %140, align 4, !alias.scope !14
  %141 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %6, i64 0, i32 2
  store i32 0, i32* %141, align 8, !alias.scope !14
  %142 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %6, i64 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %142, %class.SkString* nonnull dereferenceable(8) %4) #12
  %143 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %6, i64 0, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %143) #12
  %144 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %6, i64 0, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %144) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #12, !noalias !14
  %145 = getelementptr inbounds %class.CircleGeometryProcessor, %class.CircleGeometryProcessor* %9, i64 0, i32 1
  %146 = getelementptr inbounds %"class.CircleGeometryProcessor::GLSLProcessor", %"class.CircleGeometryProcessor::GLSLProcessor"* %0, i64 0, i32 2
  call void @_ZN23GrGLSLGeometryProcessor15WriteLocalCoordEP19GrGLSLVertexBuilderP20GrGLSLUniformHandlerRK12GrShaderCapsPNS_8GrGPArgsE11GrShaderVarRK8SkMatrixP16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE(%class.GrGLSLVertexBuilder* %11, %class.GrGLSLUniformHandler* %15, %class.GrShaderCaps* dereferenceable(144) %134, %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, %class.GrShaderVar* nonnull %6, %class.SkMatrix* dereferenceable(40) %145, %class.GrResourceHandle* %146) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* %144) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* %143) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* %142) #12
  %147 = load i8*, i8** %19, align 8
  %148 = getelementptr i8, i8* %147, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = getelementptr inbounds i8, i8* %24, i64 %150
  %152 = getelementptr inbounds i8, i8* %151, i64 160
  %153 = getelementptr inbounds i8, i8* %151, i64 488
  %154 = bitcast i8* %153 to i32*
  %155 = load i32, i32* %154, align 8
  %156 = bitcast i8* %152 to %class.SkString**
  %157 = load %class.SkString*, %class.SkString** %156, align 8
  %158 = sext i32 %155 to i64
  %159 = getelementptr inbounds %class.SkString, %class.SkString* %157, i64 %158
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %159, i64 -1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.37, i64 0, i64 0)) #12
  %160 = load i8*, i8** %19, align 8
  %161 = getelementptr i8, i8* %160, i64 -24
  %162 = bitcast i8* %161 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = getelementptr inbounds i8, i8* %24, i64 %163
  %165 = getelementptr inbounds i8, i8* %164, i64 160
  %166 = getelementptr inbounds i8, i8* %164, i64 488
  %167 = bitcast i8* %166 to i32*
  %168 = load i32, i32* %167, align 8
  %169 = bitcast i8* %165 to %class.SkString**
  %170 = load %class.SkString*, %class.SkString** %169, align 8
  %171 = sext i32 %168 to i64
  %172 = getelementptr inbounds %class.SkString, %class.SkString* %170, i64 %171
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %172, i64 -1, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.38, i64 0, i64 0)) #12
  %173 = load i8*, i8** %19, align 8
  %174 = getelementptr i8, i8* %173, i64 -24
  %175 = bitcast i8* %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = getelementptr inbounds i8, i8* %24, i64 %176
  %178 = getelementptr inbounds i8, i8* %177, i64 160
  %179 = getelementptr inbounds i8, i8* %177, i64 488
  %180 = bitcast i8* %179 to i32*
  %181 = load i32, i32* %180, align 8
  %182 = bitcast i8* %178 to %class.SkString**
  %183 = load %class.SkString*, %class.SkString** %182, align 8
  %184 = sext i32 %181 to i64
  %185 = getelementptr inbounds %class.SkString, %class.SkString* %183, i64 %184
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %185, i64 -1, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.39, i64 0, i64 0)) #12
  %186 = getelementptr inbounds %class.CircleGeometryProcessor, %class.CircleGeometryProcessor* %9, i64 0, i32 10
  %187 = load i8, i8* %186, align 8, !range !2
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %229, label %189

189:                                              ; preds = %120
  %190 = load i8*, i8** %19, align 8
  %191 = getelementptr i8, i8* %190, i64 -24
  %192 = bitcast i8* %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = getelementptr inbounds i8, i8* %24, i64 %193
  %195 = getelementptr inbounds i8, i8* %194, i64 160
  %196 = getelementptr inbounds i8, i8* %194, i64 488
  %197 = bitcast i8* %196 to i32*
  %198 = load i32, i32* %197, align 8
  %199 = bitcast i8* %195 to %class.SkString**
  %200 = load %class.SkString*, %class.SkString** %199, align 8
  %201 = sext i32 %198 to i64
  %202 = getelementptr inbounds %class.SkString, %class.SkString* %200, i64 %201
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %202, i64 -1, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.40, i64 0, i64 0)) #12
  %203 = load i8*, i8** %19, align 8
  %204 = getelementptr i8, i8* %203, i64 -24
  %205 = bitcast i8* %204 to i64*
  %206 = load i64, i64* %205, align 8
  %207 = getelementptr inbounds i8, i8* %24, i64 %206
  %208 = getelementptr inbounds i8, i8* %207, i64 160
  %209 = getelementptr inbounds i8, i8* %207, i64 488
  %210 = bitcast i8* %209 to i32*
  %211 = load i32, i32* %210, align 8
  %212 = bitcast i8* %208 to %class.SkString**
  %213 = load %class.SkString*, %class.SkString** %212, align 8
  %214 = sext i32 %211 to i64
  %215 = getelementptr inbounds %class.SkString, %class.SkString* %213, i64 %214
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %215, i64 -1, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.41, i64 0, i64 0)) #12
  %216 = load i8*, i8** %19, align 8
  %217 = getelementptr i8, i8* %216, i64 -24
  %218 = bitcast i8* %217 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = getelementptr inbounds i8, i8* %24, i64 %219
  %221 = getelementptr inbounds i8, i8* %220, i64 160
  %222 = getelementptr inbounds i8, i8* %220, i64 488
  %223 = bitcast i8* %222 to i32*
  %224 = load i32, i32* %223, align 8
  %225 = bitcast i8* %221 to %class.SkString**
  %226 = load %class.SkString*, %class.SkString** %225, align 8
  %227 = sext i32 %224 to i64
  %228 = getelementptr inbounds %class.SkString, %class.SkString* %226, i64 %227
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %228, i64 -1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.42, i64 0, i64 0)) #12
  br label %229

229:                                              ; preds = %120, %189
  %230 = load i32, i32* %35, align 4
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %303, label %232

232:                                              ; preds = %229
  %233 = load i8*, i8** %19, align 8
  %234 = getelementptr i8, i8* %233, i64 -24
  %235 = bitcast i8* %234 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = getelementptr inbounds i8, i8* %24, i64 %236
  %238 = getelementptr inbounds i8, i8* %237, i64 160
  %239 = getelementptr inbounds i8, i8* %237, i64 488
  %240 = bitcast i8* %239 to i32*
  %241 = load i32, i32* %240, align 8
  %242 = bitcast i8* %238 to %class.SkString**
  %243 = load %class.SkString*, %class.SkString** %242, align 8
  %244 = sext i32 %241 to i64
  %245 = getelementptr inbounds %class.SkString, %class.SkString* %243, i64 %244
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %245, i64 -1, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str.43, i64 0, i64 0)) #12
  %246 = load i32, i32* %54, align 4
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %262, label %248

248:                                              ; preds = %232
  %249 = load i8*, i8** %19, align 8
  %250 = getelementptr i8, i8* %249, i64 -24
  %251 = bitcast i8* %250 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = getelementptr inbounds i8, i8* %24, i64 %252
  %254 = getelementptr inbounds i8, i8* %253, i64 160
  %255 = getelementptr inbounds i8, i8* %253, i64 488
  %256 = bitcast i8* %255 to i32*
  %257 = load i32, i32* %256, align 8
  %258 = bitcast i8* %254 to %class.SkString**
  %259 = load %class.SkString*, %class.SkString** %258, align 8
  %260 = sext i32 %257 to i64
  %261 = getelementptr inbounds %class.SkString, %class.SkString* %259, i64 %260
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %261, i64 -1, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.44, i64 0, i64 0)) #12
  br label %262

262:                                              ; preds = %232, %248
  %263 = load i32, i32* %73, align 4
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %279, label %265

265:                                              ; preds = %262
  %266 = load i8*, i8** %19, align 8
  %267 = getelementptr i8, i8* %266, i64 -24
  %268 = bitcast i8* %267 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = getelementptr inbounds i8, i8* %24, i64 %269
  %271 = getelementptr inbounds i8, i8* %270, i64 160
  %272 = getelementptr inbounds i8, i8* %270, i64 488
  %273 = bitcast i8* %272 to i32*
  %274 = load i32, i32* %273, align 8
  %275 = bitcast i8* %271 to %class.SkString**
  %276 = load %class.SkString*, %class.SkString** %275, align 8
  %277 = sext i32 %274 to i64
  %278 = getelementptr inbounds %class.SkString, %class.SkString* %276, i64 %277
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %278, i64 -1, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.45, i64 0, i64 0)) #12
  br label %279

279:                                              ; preds = %262, %265
  %280 = load i8*, i8** %19, align 8
  %281 = getelementptr i8, i8* %280, i64 -24
  %282 = bitcast i8* %281 to i64*
  %283 = load i64, i64* %282, align 8
  %284 = getelementptr inbounds i8, i8* %24, i64 %283
  %285 = getelementptr inbounds i8, i8* %284, i64 160
  %286 = getelementptr inbounds i8, i8* %284, i64 488
  %287 = bitcast i8* %286 to i32*
  %288 = load i32, i32* %287, align 8
  %289 = bitcast i8* %285 to %class.SkString**
  %290 = load %class.SkString*, %class.SkString** %289, align 8
  %291 = sext i32 %288 to i64
  %292 = getelementptr inbounds %class.SkString, %class.SkString* %290, i64 %291
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %292, i64 -1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.46, i64 0, i64 0)) #12
  %293 = load i32, i32* %96, align 4
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %303, label %295

295:                                              ; preds = %279
  %296 = load i8*, i8** %19, align 8
  %297 = getelementptr i8, i8* %296, i64 -24
  %298 = bitcast i8* %297 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = getelementptr inbounds i8, i8* %24, i64 %299
  %301 = bitcast i8* %300 to %class.GrGLSLShaderBuilder*
  %302 = load i8*, i8** %95, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %301, i8* getelementptr inbounds ([365 x i8], [365 x i8]* @.str.47, i64 0, i64 0), i8* %302, i8* %302)
  br label %303

303:                                              ; preds = %279, %229, %295
  %304 = load i8*, i8** %19, align 8
  %305 = getelementptr i8, i8* %304, i64 -24
  %306 = bitcast i8* %305 to i64*
  %307 = load i64, i64* %306, align 8
  %308 = getelementptr inbounds i8, i8* %24, i64 %307
  %309 = bitcast i8* %308 to %class.GrGLSLShaderBuilder*
  %310 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 8
  %311 = load i8*, i8** %310, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %309, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.48, i64 0, i64 0), i8* %311)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %92) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLGeometryProcessorD0Ev(%class.GrGLSLGeometryProcessor*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #9

declare void @_ZN23GrGLSLGeometryProcessor12SetTransformERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK16GrResourceHandleINS0_17UniformHandleKindEERK8SkMatrixPSB_(%class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrShaderCaps* dereferenceable(144), %class.GrResourceHandle* dereferenceable(4), %class.SkMatrix* dereferenceable(40), %class.SkMatrix*) local_unnamed_addr #2

declare void @_ZN20GrGLSLVaryingHandler14emitAttributesERK19GrGeometryProcessor(%class.GrGLSLVaryingHandler*, %class.GrGeometryProcessor* dereferenceable(80)) local_unnamed_addr #2

declare void @_ZN20GrGLSLVaryingHandler23addPassThroughAttributeERKN19GrGeometryProcessor9AttributeEPKcNS_13InterpolationE(%class.GrGLSLVaryingHandler*, %"class.GrGeometryProcessor::Attribute"* dereferenceable(16), i8*, i32) local_unnamed_addr #2

declare void @_ZN20GrGLSLVaryingHandler10addVaryingEPKcP13GrGLSLVaryingNS_13InterpolationE(%class.GrGLSLVaryingHandler*, i8*, %class.GrGLSLVarying*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder*, i8*, ...) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #12
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %7 to %class.SkString**
  %11 = load %class.SkString*, %class.SkString** %10, align 8
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 %12
  call void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #12
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  ret void
}

declare void @_ZN23GrGLSLGeometryProcessor19WriteOutputPositionEP19GrGLSLVertexBuilderPNS_8GrGPArgsEPKc(%class.GrGLSLVertexBuilder*, %"struct.GrGLSLGeometryProcessor::GrGPArgs"*, i8*) local_unnamed_addr #2

declare void @_ZN23GrGLSLGeometryProcessor15WriteLocalCoordEP19GrGLSLVertexBuilderP20GrGLSLUniformHandlerRK12GrShaderCapsPNS_8GrGPArgsE11GrShaderVarRK8SkMatrixP16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE(%class.GrGLSLVertexBuilder*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps* dereferenceable(144), %"struct.GrGLSLGeometryProcessor::GrGPArgs"*, %class.GrShaderVar*, %class.SkMatrix* dereferenceable(40), %class.GrResourceHandle*) local_unnamed_addr #2

declare void @_ZN8SkString6insertEmPKc(%class.SkString*, i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #12

declare void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #12

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #2

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #2

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #2

declare void @_ZN12GrMeshDrawOp17createProgramInfoEPNS_6TargetE(%class.GrMeshDrawOp*, %"class.GrMeshDrawOp::Target"*) local_unnamed_addr #2

declare void @_Z17SkDebugf_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15CircularRRectOp21FillInOverstrokeVertsER14GrVertexWriterRK6SkRectfffffRK13GrVertexColor(%struct.GrVertexWriter* dereferenceable(8), %struct.SkRect* dereferenceable(16), float, float, float, float, float, %class.GrVertexColor* dereferenceable(20)) local_unnamed_addr #4 comdat align 2 {
  %9 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %10 = load float, float* %9, align 4
  %11 = fadd float %10, %2
  %12 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = fadd float %13, %2
  %15 = getelementptr inbounds %struct.GrVertexWriter, %struct.GrVertexWriter* %0, i64 0, i32 0
  %16 = bitcast %struct.GrVertexWriter* %0 to float**
  %17 = load float*, float** %16, align 8
  store float %11, float* %17, align 1
  %18 = load i8*, i8** %15, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 4
  store i8* %19, i8** %15, align 8
  %20 = bitcast i8* %19 to float*
  store float %14, float* %20, align 1
  %21 = load i8*, i8** %15, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 4
  store i8* %22, i8** %15, align 8
  %23 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %7, i64 0, i32 0, i64 0
  %24 = bitcast i8* %22 to i32*
  %25 = load i32, i32* %23, align 4
  store i32 %25, i32* %24, align 1
  %26 = load i8*, i8** %15, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 4
  store i8* %27, i8** %15, align 8
  %28 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %7, i64 0, i32 1
  %29 = load i8, i8* %28, align 4, !range !2
  %30 = icmp eq i8 %29, 0
  %31 = bitcast i8* %27 to i32*
  br i1 %30, label %48, label %32

32:                                               ; preds = %8
  %33 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %7, i64 0, i32 0, i64 1
  %34 = load i32, i32* %33, align 4
  store i32 %34, i32* %31, align 1
  %35 = load i8*, i8** %15, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 4
  store i8* %36, i8** %15, align 8
  %37 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %7, i64 0, i32 0, i64 2
  %38 = bitcast i8* %36 to i32*
  %39 = load i32, i32* %37, align 4
  store i32 %39, i32* %38, align 1
  %40 = load i8*, i8** %15, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 4
  store i8* %41, i8** %15, align 8
  %42 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %7, i64 0, i32 0, i64 3
  %43 = bitcast i8* %41 to i32*
  %44 = load i32, i32* %42, align 4
  store i32 %44, i32* %43, align 1
  %45 = load i8*, i8** %15, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 4
  store i8* %46, i8** %15, align 8
  %47 = bitcast i8* %46 to i32*
  br label %48

48:                                               ; preds = %8, %32
  %49 = phi i32* [ %31, %8 ], [ %47, %32 ]
  %50 = bitcast i32* %49 to float*
  store float %4, float* %50, align 1
  %51 = load i8*, i8** %15, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 4
  store i8* %52, i8** %15, align 8
  %53 = bitcast i8* %52 to i32*
  store i32 0, i32* %53, align 1
  %54 = load i8*, i8** %15, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 4
  store i8* %55, i8** %15, align 8
  %56 = bitcast i8* %55 to float*
  store float %5, float* %56, align 1
  %57 = load i8*, i8** %15, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 4
  store i8* %58, i8** %15, align 8
  %59 = bitcast i8* %58 to float*
  store float %6, float* %59, align 1
  %60 = load i8*, i8** %15, align 8
  %61 = getelementptr inbounds i8, i8* %60, i64 4
  store i8* %61, i8** %15, align 8
  %62 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %63 = load float, float* %62, align 4
  %64 = fsub float %63, %2
  %65 = load float, float* %12, align 4
  %66 = fadd float %65, %2
  %67 = bitcast i8* %61 to float*
  store float %64, float* %67, align 1
  %68 = load i8*, i8** %15, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 4
  store i8* %69, i8** %15, align 8
  %70 = bitcast i8* %69 to float*
  store float %66, float* %70, align 1
  %71 = load i8*, i8** %15, align 8
  %72 = getelementptr inbounds i8, i8* %71, i64 4
  store i8* %72, i8** %15, align 8
  %73 = bitcast i8* %72 to i32*
  %74 = load i32, i32* %23, align 4
  store i32 %74, i32* %73, align 1
  %75 = load i8*, i8** %15, align 8
  %76 = getelementptr inbounds i8, i8* %75, i64 4
  store i8* %76, i8** %15, align 8
  %77 = load i8, i8* %28, align 4, !range !2
  %78 = icmp eq i8 %77, 0
  %79 = bitcast i8* %76 to i32*
  br i1 %78, label %96, label %80

80:                                               ; preds = %48
  %81 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %7, i64 0, i32 0, i64 1
  %82 = load i32, i32* %81, align 4
  store i32 %82, i32* %79, align 1
  %83 = load i8*, i8** %15, align 8
  %84 = getelementptr inbounds i8, i8* %83, i64 4
  store i8* %84, i8** %15, align 8
  %85 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %7, i64 0, i32 0, i64 2
  %86 = bitcast i8* %84 to i32*
  %87 = load i32, i32* %85, align 4
  store i32 %87, i32* %86, align 1
  %88 = load i8*, i8** %15, align 8
  %89 = getelementptr inbounds i8, i8* %88, i64 4
  store i8* %89, i8** %15, align 8
  %90 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %7, i64 0, i32 0, i64 3
  %91 = bitcast i8* %89 to i32*
  %92 = load i32, i32* %90, align 4
  store i32 %92, i32* %91, align 1
  %93 = load i8*, i8** %15, align 8
  %94 = getelementptr inbounds i8, i8* %93, i64 4
  store i8* %94, i8** %15, align 8
  %95 = bitcast i8* %94 to i32*
  br label %96

96:                                               ; preds = %48, %80
  %97 = phi i32* [ %79, %48 ], [ %95, %80 ]
  %98 = bitcast i32* %97 to float*
  store float %4, float* %98, align 1
  %99 = load i8*, i8** %15, align 8
  %100 = getelementptr inbounds i8, i8* %99, i64 4
  store i8* %100, i8** %15, align 8
  %101 = bitcast i8* %100 to i32*
  store i32 0, i32* %101, align 1
  %102 = load i8*, i8** %15, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 4
  store i8* %103, i8** %15, align 8
  %104 = bitcast i8* %103 to float*
  store float %5, float* %104, align 1
  %105 = load i8*, i8** %15, align 8
  %106 = getelementptr inbounds i8, i8* %105, i64 4
  store i8* %106, i8** %15, align 8
  %107 = bitcast i8* %106 to float*
  store float %6, float* %107, align 1
  %108 = load i8*, i8** %15, align 8
  %109 = getelementptr inbounds i8, i8* %108, i64 4
  store i8* %109, i8** %15, align 8
  %110 = load float, float* %9, align 4
  %111 = fadd float %110, %3
  %112 = load float, float* %12, align 4
  %113 = fadd float %112, %3
  %114 = bitcast i8* %109 to float*
  store float %111, float* %114, align 1
  %115 = load i8*, i8** %15, align 8
  %116 = getelementptr inbounds i8, i8* %115, i64 4
  store i8* %116, i8** %15, align 8
  %117 = bitcast i8* %116 to float*
  store float %113, float* %117, align 1
  %118 = load i8*, i8** %15, align 8
  %119 = getelementptr inbounds i8, i8* %118, i64 4
  store i8* %119, i8** %15, align 8
  %120 = bitcast i8* %119 to i32*
  %121 = load i32, i32* %23, align 4
  store i32 %121, i32* %120, align 1
  %122 = load i8*, i8** %15, align 8
  %123 = getelementptr inbounds i8, i8* %122, i64 4
  store i8* %123, i8** %15, align 8
  %124 = load i8, i8* %28, align 4, !range !2
  %125 = icmp eq i8 %124, 0
  %126 = bitcast i8* %123 to i32*
  br i1 %125, label %143, label %127

127:                                              ; preds = %96
  %128 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %7, i64 0, i32 0, i64 1
  %129 = load i32, i32* %128, align 4
  store i32 %129, i32* %126, align 1
  %130 = load i8*, i8** %15, align 8
  %131 = getelementptr inbounds i8, i8* %130, i64 4
  store i8* %131, i8** %15, align 8
  %132 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %7, i64 0, i32 0, i64 2
  %133 = bitcast i8* %131 to i32*
  %134 = load i32, i32* %132, align 4
  store i32 %134, i32* %133, align 1
  %135 = load i8*, i8** %15, align 8
  %136 = getelementptr inbounds i8, i8* %135, i64 4
  store i8* %136, i8** %15, align 8
  %137 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %7, i64 0, i32 0, i64 3
  %138 = bitcast i8* %136 to i32*
  %139 = load i32, i32* %137, align 4
  store i32 %139, i32* %138, align 1
  %140 = load i8*, i8** %15, align 8
  %141 = getelementptr inbounds i8, i8* %140, i64 4
  store i8* %141, i8** %15, align 8
  %142 = bitcast i8* %141 to i32*
  br label %143

143:                                              ; preds = %96, %127
  %144 = phi i32* [ %126, %96 ], [ %142, %127 ]
  store i32 0, i32* %144, align 1
  %145 = load i8*, i8** %15, align 8
  %146 = getelementptr inbounds i8, i8* %145, i64 4
  store i8* %146, i8** %15, align 8
  %147 = bitcast i8* %146 to i32*
  store i32 0, i32* %147, align 1
  %148 = load i8*, i8** %15, align 8
  %149 = getelementptr inbounds i8, i8* %148, i64 4
  store i8* %149, i8** %15, align 8
  %150 = bitcast i8* %149 to float*
  store float %5, float* %150, align 1
  %151 = load i8*, i8** %15, align 8
  %152 = getelementptr inbounds i8, i8* %151, i64 4
  store i8* %152, i8** %15, align 8
  %153 = bitcast i8* %152 to float*
  store float %6, float* %153, align 1
  %154 = load i8*, i8** %15, align 8
  %155 = getelementptr inbounds i8, i8* %154, i64 4
  store i8* %155, i8** %15, align 8
  %156 = load float, float* %62, align 4
  %157 = fsub float %156, %3
  %158 = load float, float* %12, align 4
  %159 = fadd float %158, %3
  %160 = bitcast i8* %155 to float*
  store float %157, float* %160, align 1
  %161 = load i8*, i8** %15, align 8
  %162 = getelementptr inbounds i8, i8* %161, i64 4
  store i8* %162, i8** %15, align 8
  %163 = bitcast i8* %162 to float*
  store float %159, float* %163, align 1
  %164 = load i8*, i8** %15, align 8
  %165 = getelementptr inbounds i8, i8* %164, i64 4
  store i8* %165, i8** %15, align 8
  %166 = bitcast i8* %165 to i32*
  %167 = load i32, i32* %23, align 4
  store i32 %167, i32* %166, align 1
  %168 = load i8*, i8** %15, align 8
  %169 = getelementptr inbounds i8, i8* %168, i64 4
  store i8* %169, i8** %15, align 8
  %170 = load i8, i8* %28, align 4, !range !2
  %171 = icmp eq i8 %170, 0
  %172 = bitcast i8* %169 to i32*
  br i1 %171, label %189, label %173

173:                                              ; preds = %143
  %174 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %7, i64 0, i32 0, i64 1
  %175 = load i32, i32* %174, align 4
  store i32 %175, i32* %172, align 1
  %176 = load i8*, i8** %15, align 8
  %177 = getelementptr inbounds i8, i8* %176, i64 4
  store i8* %177, i8** %15, align 8
  %178 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %7, i64 0, i32 0, i64 2
  %179 = bitcast i8* %177 to i32*
  %180 = load i32, i32* %178, align 4
  store i32 %180, i32* %179, align 1
  %181 = load i8*, i8** %15, align 8
  %182 = getelementptr inbounds i8, i8* %181, i64 4
  store i8* %182, i8** %15, align 8
  %183 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %7, i64 0, i32 0, i64 3
  %184 = bitcast i8* %182 to i32*
  %185 = load i32, i32* %183, align 4
  store i32 %185, i32* %184, align 1
  %186 = load i8*, i8** %15, align 8
  %187 = getelementptr inbounds i8, i8* %186, i64 4
  store i8* %187, i8** %15, align 8
  %188 = bitcast i8* %187 to i32*
  br label %189

189:                                              ; preds = %143, %173
  %190 = phi i32* [ %172, %143 ], [ %188, %173 ]
  store i32 0, i32* %190, align 1
  %191 = load i8*, i8** %15, align 8
  %192 = getelementptr inbounds i8, i8* %191, i64 4
  store i8* %192, i8** %15, align 8
  %193 = bitcast i8* %192 to i32*
  store i32 0, i32* %193, align 1
  %194 = load i8*, i8** %15, align 8
  %195 = getelementptr inbounds i8, i8* %194, i64 4
  store i8* %195, i8** %15, align 8
  %196 = bitcast i8* %195 to float*
  store float %5, float* %196, align 1
  %197 = load i8*, i8** %15, align 8
  %198 = getelementptr inbounds i8, i8* %197, i64 4
  store i8* %198, i8** %15, align 8
  %199 = bitcast i8* %198 to float*
  store float %6, float* %199, align 1
  %200 = load i8*, i8** %15, align 8
  %201 = getelementptr inbounds i8, i8* %200, i64 4
  store i8* %201, i8** %15, align 8
  %202 = load float, float* %9, align 4
  %203 = fadd float %202, %3
  %204 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %205 = load float, float* %204, align 4
  %206 = fsub float %205, %3
  %207 = bitcast i8* %201 to float*
  store float %203, float* %207, align 1
  %208 = load i8*, i8** %15, align 8
  %209 = getelementptr inbounds i8, i8* %208, i64 4
  store i8* %209, i8** %15, align 8
  %210 = bitcast i8* %209 to float*
  store float %206, float* %210, align 1
  %211 = load i8*, i8** %15, align 8
  %212 = getelementptr inbounds i8, i8* %211, i64 4
  store i8* %212, i8** %15, align 8
  %213 = bitcast i8* %212 to i32*
  %214 = load i32, i32* %23, align 4
  store i32 %214, i32* %213, align 1
  %215 = load i8*, i8** %15, align 8
  %216 = getelementptr inbounds i8, i8* %215, i64 4
  store i8* %216, i8** %15, align 8
  %217 = load i8, i8* %28, align 4, !range !2
  %218 = icmp eq i8 %217, 0
  %219 = bitcast i8* %216 to i32*
  br i1 %218, label %236, label %220

220:                                              ; preds = %189
  %221 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %7, i64 0, i32 0, i64 1
  %222 = load i32, i32* %221, align 4
  store i32 %222, i32* %219, align 1
  %223 = load i8*, i8** %15, align 8
  %224 = getelementptr inbounds i8, i8* %223, i64 4
  store i8* %224, i8** %15, align 8
  %225 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %7, i64 0, i32 0, i64 2
  %226 = bitcast i8* %224 to i32*
  %227 = load i32, i32* %225, align 4
  store i32 %227, i32* %226, align 1
  %228 = load i8*, i8** %15, align 8
  %229 = getelementptr inbounds i8, i8* %228, i64 4
  store i8* %229, i8** %15, align 8
  %230 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %7, i64 0, i32 0, i64 3
  %231 = bitcast i8* %229 to i32*
  %232 = load i32, i32* %230, align 4
  store i32 %232, i32* %231, align 1
  %233 = load i8*, i8** %15, align 8
  %234 = getelementptr inbounds i8, i8* %233, i64 4
  store i8* %234, i8** %15, align 8
  %235 = bitcast i8* %234 to i32*
  br label %236

236:                                              ; preds = %189, %220
  %237 = phi i32* [ %219, %189 ], [ %235, %220 ]
  store i32 0, i32* %237, align 1
  %238 = load i8*, i8** %15, align 8
  %239 = getelementptr inbounds i8, i8* %238, i64 4
  store i8* %239, i8** %15, align 8
  %240 = bitcast i8* %239 to i32*
  store i32 0, i32* %240, align 1
  %241 = load i8*, i8** %15, align 8
  %242 = getelementptr inbounds i8, i8* %241, i64 4
  store i8* %242, i8** %15, align 8
  %243 = bitcast i8* %242 to float*
  store float %5, float* %243, align 1
  %244 = load i8*, i8** %15, align 8
  %245 = getelementptr inbounds i8, i8* %244, i64 4
  store i8* %245, i8** %15, align 8
  %246 = bitcast i8* %245 to float*
  store float %6, float* %246, align 1
  %247 = load i8*, i8** %15, align 8
  %248 = getelementptr inbounds i8, i8* %247, i64 4
  store i8* %248, i8** %15, align 8
  %249 = load float, float* %62, align 4
  %250 = fsub float %249, %3
  %251 = load float, float* %204, align 4
  %252 = fsub float %251, %3
  %253 = bitcast i8* %248 to float*
  store float %250, float* %253, align 1
  %254 = load i8*, i8** %15, align 8
  %255 = getelementptr inbounds i8, i8* %254, i64 4
  store i8* %255, i8** %15, align 8
  %256 = bitcast i8* %255 to float*
  store float %252, float* %256, align 1
  %257 = load i8*, i8** %15, align 8
  %258 = getelementptr inbounds i8, i8* %257, i64 4
  store i8* %258, i8** %15, align 8
  %259 = bitcast i8* %258 to i32*
  %260 = load i32, i32* %23, align 4
  store i32 %260, i32* %259, align 1
  %261 = load i8*, i8** %15, align 8
  %262 = getelementptr inbounds i8, i8* %261, i64 4
  store i8* %262, i8** %15, align 8
  %263 = load i8, i8* %28, align 4, !range !2
  %264 = icmp eq i8 %263, 0
  %265 = bitcast i8* %262 to i32*
  br i1 %264, label %282, label %266

266:                                              ; preds = %236
  %267 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %7, i64 0, i32 0, i64 1
  %268 = load i32, i32* %267, align 4
  store i32 %268, i32* %265, align 1
  %269 = load i8*, i8** %15, align 8
  %270 = getelementptr inbounds i8, i8* %269, i64 4
  store i8* %270, i8** %15, align 8
  %271 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %7, i64 0, i32 0, i64 2
  %272 = bitcast i8* %270 to i32*
  %273 = load i32, i32* %271, align 4
  store i32 %273, i32* %272, align 1
  %274 = load i8*, i8** %15, align 8
  %275 = getelementptr inbounds i8, i8* %274, i64 4
  store i8* %275, i8** %15, align 8
  %276 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %7, i64 0, i32 0, i64 3
  %277 = bitcast i8* %275 to i32*
  %278 = load i32, i32* %276, align 4
  store i32 %278, i32* %277, align 1
  %279 = load i8*, i8** %15, align 8
  %280 = getelementptr inbounds i8, i8* %279, i64 4
  store i8* %280, i8** %15, align 8
  %281 = bitcast i8* %280 to i32*
  br label %282

282:                                              ; preds = %236, %266
  %283 = phi i32* [ %265, %236 ], [ %281, %266 ]
  store i32 0, i32* %283, align 1
  %284 = load i8*, i8** %15, align 8
  %285 = getelementptr inbounds i8, i8* %284, i64 4
  store i8* %285, i8** %15, align 8
  %286 = bitcast i8* %285 to i32*
  store i32 0, i32* %286, align 1
  %287 = load i8*, i8** %15, align 8
  %288 = getelementptr inbounds i8, i8* %287, i64 4
  store i8* %288, i8** %15, align 8
  %289 = bitcast i8* %288 to float*
  store float %5, float* %289, align 1
  %290 = load i8*, i8** %15, align 8
  %291 = getelementptr inbounds i8, i8* %290, i64 4
  store i8* %291, i8** %15, align 8
  %292 = bitcast i8* %291 to float*
  store float %6, float* %292, align 1
  %293 = load i8*, i8** %15, align 8
  %294 = getelementptr inbounds i8, i8* %293, i64 4
  store i8* %294, i8** %15, align 8
  %295 = load float, float* %9, align 4
  %296 = fadd float %295, %2
  %297 = load float, float* %204, align 4
  %298 = fsub float %297, %2
  %299 = bitcast i8* %294 to float*
  store float %296, float* %299, align 1
  %300 = load i8*, i8** %15, align 8
  %301 = getelementptr inbounds i8, i8* %300, i64 4
  store i8* %301, i8** %15, align 8
  %302 = bitcast i8* %301 to float*
  store float %298, float* %302, align 1
  %303 = load i8*, i8** %15, align 8
  %304 = getelementptr inbounds i8, i8* %303, i64 4
  store i8* %304, i8** %15, align 8
  %305 = bitcast i8* %304 to i32*
  %306 = load i32, i32* %23, align 4
  store i32 %306, i32* %305, align 1
  %307 = load i8*, i8** %15, align 8
  %308 = getelementptr inbounds i8, i8* %307, i64 4
  store i8* %308, i8** %15, align 8
  %309 = load i8, i8* %28, align 4, !range !2
  %310 = icmp eq i8 %309, 0
  %311 = bitcast i8* %308 to i32*
  br i1 %310, label %328, label %312

312:                                              ; preds = %282
  %313 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %7, i64 0, i32 0, i64 1
  %314 = load i32, i32* %313, align 4
  store i32 %314, i32* %311, align 1
  %315 = load i8*, i8** %15, align 8
  %316 = getelementptr inbounds i8, i8* %315, i64 4
  store i8* %316, i8** %15, align 8
  %317 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %7, i64 0, i32 0, i64 2
  %318 = bitcast i8* %316 to i32*
  %319 = load i32, i32* %317, align 4
  store i32 %319, i32* %318, align 1
  %320 = load i8*, i8** %15, align 8
  %321 = getelementptr inbounds i8, i8* %320, i64 4
  store i8* %321, i8** %15, align 8
  %322 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %7, i64 0, i32 0, i64 3
  %323 = bitcast i8* %321 to i32*
  %324 = load i32, i32* %322, align 4
  store i32 %324, i32* %323, align 1
  %325 = load i8*, i8** %15, align 8
  %326 = getelementptr inbounds i8, i8* %325, i64 4
  store i8* %326, i8** %15, align 8
  %327 = bitcast i8* %326 to i32*
  br label %328

328:                                              ; preds = %282, %312
  %329 = phi i32* [ %311, %282 ], [ %327, %312 ]
  %330 = bitcast i32* %329 to float*
  store float %4, float* %330, align 1
  %331 = load i8*, i8** %15, align 8
  %332 = getelementptr inbounds i8, i8* %331, i64 4
  store i8* %332, i8** %15, align 8
  %333 = bitcast i8* %332 to i32*
  store i32 0, i32* %333, align 1
  %334 = load i8*, i8** %15, align 8
  %335 = getelementptr inbounds i8, i8* %334, i64 4
  store i8* %335, i8** %15, align 8
  %336 = bitcast i8* %335 to float*
  store float %5, float* %336, align 1
  %337 = load i8*, i8** %15, align 8
  %338 = getelementptr inbounds i8, i8* %337, i64 4
  store i8* %338, i8** %15, align 8
  %339 = bitcast i8* %338 to float*
  store float %6, float* %339, align 1
  %340 = load i8*, i8** %15, align 8
  %341 = getelementptr inbounds i8, i8* %340, i64 4
  store i8* %341, i8** %15, align 8
  %342 = load float, float* %62, align 4
  %343 = fsub float %342, %2
  %344 = load float, float* %204, align 4
  %345 = fsub float %344, %2
  %346 = bitcast i8* %341 to float*
  store float %343, float* %346, align 1
  %347 = load i8*, i8** %15, align 8
  %348 = getelementptr inbounds i8, i8* %347, i64 4
  store i8* %348, i8** %15, align 8
  %349 = bitcast i8* %348 to float*
  store float %345, float* %349, align 1
  %350 = load i8*, i8** %15, align 8
  %351 = getelementptr inbounds i8, i8* %350, i64 4
  store i8* %351, i8** %15, align 8
  %352 = bitcast i8* %351 to i32*
  %353 = load i32, i32* %23, align 4
  store i32 %353, i32* %352, align 1
  %354 = load i8*, i8** %15, align 8
  %355 = getelementptr inbounds i8, i8* %354, i64 4
  store i8* %355, i8** %15, align 8
  %356 = load i8, i8* %28, align 4, !range !2
  %357 = icmp eq i8 %356, 0
  %358 = bitcast i8* %355 to i32*
  br i1 %357, label %375, label %359

359:                                              ; preds = %328
  %360 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %7, i64 0, i32 0, i64 1
  %361 = load i32, i32* %360, align 4
  store i32 %361, i32* %358, align 1
  %362 = load i8*, i8** %15, align 8
  %363 = getelementptr inbounds i8, i8* %362, i64 4
  store i8* %363, i8** %15, align 8
  %364 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %7, i64 0, i32 0, i64 2
  %365 = bitcast i8* %363 to i32*
  %366 = load i32, i32* %364, align 4
  store i32 %366, i32* %365, align 1
  %367 = load i8*, i8** %15, align 8
  %368 = getelementptr inbounds i8, i8* %367, i64 4
  store i8* %368, i8** %15, align 8
  %369 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %7, i64 0, i32 0, i64 3
  %370 = bitcast i8* %368 to i32*
  %371 = load i32, i32* %369, align 4
  store i32 %371, i32* %370, align 1
  %372 = load i8*, i8** %15, align 8
  %373 = getelementptr inbounds i8, i8* %372, i64 4
  store i8* %373, i8** %15, align 8
  %374 = bitcast i8* %373 to i32*
  br label %375

375:                                              ; preds = %328, %359
  %376 = phi i32* [ %358, %328 ], [ %374, %359 ]
  %377 = bitcast i32* %376 to float*
  store float %4, float* %377, align 1
  %378 = load i8*, i8** %15, align 8
  %379 = getelementptr inbounds i8, i8* %378, i64 4
  store i8* %379, i8** %15, align 8
  %380 = bitcast i8* %379 to i32*
  store i32 0, i32* %380, align 1
  %381 = load i8*, i8** %15, align 8
  %382 = getelementptr inbounds i8, i8* %381, i64 4
  store i8* %382, i8** %15, align 8
  %383 = bitcast i8* %382 to float*
  store float %5, float* %383, align 1
  %384 = load i8*, i8** %15, align 8
  %385 = getelementptr inbounds i8, i8* %384, i64 4
  store i8* %385, i8** %15, align 8
  %386 = bitcast i8* %385 to float*
  store float %6, float* %386, align 1
  %387 = load i8*, i8** %15, align 8
  %388 = getelementptr inbounds i8, i8* %387, i64 4
  store i8* %388, i8** %15, align 8
  ret void
}

declare i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc4makeIZNS_4makeI12GrSimpleMeshJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS3_ENUlPcE_8__invokeESC_(i8*) #6 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -57
  %3 = getelementptr inbounds i8, i8* %0, i64 -25
  %4 = bitcast i8* %3 to %class.GrBuffer**
  %5 = load %class.GrBuffer*, %class.GrBuffer** %4, align 8
  %6 = icmp eq %class.GrBuffer* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.GrBuffer* %5 to void (%class.GrBuffer*)***
  %9 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %9, i64 3
  %11 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %10, align 8
  tail call void %11(%class.GrBuffer* nonnull %5) #12
  br label %12

12:                                               ; preds = %7, %1
  %13 = bitcast i8* %2 to %class.GrBuffer**
  %14 = load %class.GrBuffer*, %class.GrBuffer** %13, align 8
  %15 = icmp eq %class.GrBuffer* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = bitcast %class.GrBuffer* %14 to void (%class.GrBuffer*)***
  %18 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %18, i64 3
  %20 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %19, align 8
  tail call void %20(%class.GrBuffer* nonnull %14) #12
  br label %21

21:                                               ; preds = %12, %16
  ret i8* %2
}

declare void @_ZN14GrProcessorSetC1EO7GrPaint(%class.GrProcessorSet*, %class.GrPaint* dereferenceable(48)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrOp* @_ZN24GrSimpleMeshDrawOpHelper13FactoryHelperI17EllipticalRRectOpJRK8SkMatrixRK6SkRectRfS8_R7SkPointRbEEENSt3__110unique_ptrI4GrOpNSC_14default_deleteISE_EEEEP18GrRecordingContextO7GrPaintDpOT0_(%class.GrRecordingContext*, %class.GrPaint* dereferenceable(48), %class.SkMatrix* dereferenceable(40), %struct.SkRect* dereferenceable(16), float* dereferenceable(4), float* dereferenceable(4), %struct.SkPoint* dereferenceable(8), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %9 = alloca %struct.SkRGBA4f, align 4
  %10 = bitcast %struct.SkRGBA4f* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 5
  %12 = bitcast %struct.SkRGBA4f* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %10, i8* align 4 %12, i64 16, i1 false)
  %13 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 3
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %8
  %17 = tail call i8* @_Znwm(i64 192) #15
  br label %22

18:                                               ; preds = %8
  %19 = tail call i8* @_Znwm(i64 224) #12
  %20 = getelementptr inbounds i8, i8* %19, i64 192
  %21 = bitcast i8* %20 to %class.GrProcessorSet*
  tail call void @_ZN14GrProcessorSetC1EO7GrPaint(%class.GrProcessorSet* %21, %class.GrPaint* dereferenceable(48) %1) #12
  br label %22

22:                                               ; preds = %18, %16
  %23 = phi i8* [ %19, %18 ], [ %17, %16 ]
  %24 = phi %class.GrProcessorSet* [ %21, %18 ], [ null, %16 ]
  %25 = bitcast i8* %23 to %class.EllipticalRRectOp*
  %26 = load float, float* %4, align 4
  %27 = load float, float* %5, align 4
  %28 = bitcast %struct.SkPoint* %6 to <2 x float>*
  %29 = load <2 x float>, <2 x float>* %28, align 4
  %30 = load i8, i8* %7, align 1, !range !2
  %31 = icmp ne i8 %30, 0
  call void @_ZN17EllipticalRRectOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrixRK6SkRectff7SkPointb(%class.EllipticalRRectOp* nonnull %25, %class.GrProcessorSet* %24, %struct.SkRGBA4f* nonnull dereferenceable(16) %9, %class.SkMatrix* dereferenceable(40) %2, %struct.SkRect* dereferenceable(16) %3, float %26, float %27, <2 x float> %29, i1 zeroext %31) #12
  %32 = bitcast i8* %23 to %class.GrOp*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  ret %class.GrOp* %32
}

declare float @_ZN7SkPoint6LengthEff(float, float) local_unnamed_addr #2

declare void @_ZNK7SkPoint5scaleEfPS_(%struct.SkPoint*, float, %struct.SkPoint*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17EllipticalRRectOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrixRK6SkRectff7SkPointb(%class.EllipticalRRectOp*, %class.GrProcessorSet*, %struct.SkRGBA4f* dereferenceable(16), %class.SkMatrix* dereferenceable(40), %struct.SkRect* dereferenceable(16), float, float, <2 x float>, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %10 = alloca %struct.SkRGBA4f, align 8
  %11 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 0
  %12 = load atomic i8, i8* bitcast (i64* @_ZGVZN17EllipticalRRectOp7ClassIDEvE8kClassID to i8*) acquire, align 8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %22, !prof !3

14:                                               ; preds = %9
  %15 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN17EllipticalRRectOp7ClassIDEvE8kClassID) #12
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %14
  %18 = atomicrmw add i32* getelementptr inbounds (%"struct.std::__1::atomic.155", %"struct.std::__1::atomic.155"* @_ZN4GrOp14gCurrOpClassIDE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 329, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i64 0, i64 0)) #16
  unreachable

21:                                               ; preds = %17
  store i32 %18, i32* @_ZZN17EllipticalRRectOp7ClassIDEvE8kClassID, align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN17EllipticalRRectOp7ClassIDEvE8kClassID) #12
  br label %22

22:                                               ; preds = %9, %14, %21
  %23 = load i32, i32* @_ZZN17EllipticalRRectOp7ClassIDEvE8kClassID, align 4
  tail call void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp* %11, i32 %23) #12
  %24 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17EllipticalRRectOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %25 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 1
  %26 = bitcast %class.SkMatrix* %25 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %26, align 4
  %27 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 1, i32 0, i64 4
  %28 = bitcast float* %27 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %28, align 4
  %29 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 1, i32 0, i64 8
  store float 1.000000e+00, float* %29, align 4
  %30 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 1, i32 1
  store i32 16, i32* %30, align 4
  %31 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 2
  tail call void @_ZN24GrSimpleMeshDrawOpHelperC1EP14GrProcessorSet8GrAATypeNS_10InputFlagsE(%class.GrSimpleMeshDrawOpHelper* %31, %class.GrProcessorSet* %1, i32 1, i8 zeroext 0) #12
  %32 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 5
  store i8 0, i8* %32, align 2
  %33 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 6, i32 0, i32 0, i64 48
  %34 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 6, i32 0, i32 0, i64 0
  %35 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 6, i32 0, i32 0, i64 56
  %36 = bitcast i8* %35 to i64*
  %37 = bitcast i8* %33 to i8**
  store i8* %34, i8** %37, align 8
  store i64 8589934592, i64* %36, align 8
  %38 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 7
  %39 = bitcast %struct.GrSimpleMesh** %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false)
  %40 = bitcast %struct.SkRect* %4 to <4 x float>*
  %41 = load <4 x float>, <4 x float>* %40, align 4
  %42 = extractelement <2 x float> %7, i32 0
  %43 = fcmp ogt float %42, 0.000000e+00
  br i1 %43, label %44, label %67

44:                                               ; preds = %22
  br i1 %8, label %47, label %45

45:                                               ; preds = %44
  %46 = extractelement <2 x float> %7, i32 1
  br label %54

47:                                               ; preds = %44
  %48 = fsub float %5, %42
  %49 = extractelement <2 x float> %7, i32 1
  %50 = fsub float %6, %49
  %51 = fcmp oge float %48, 0.000000e+00
  %52 = fcmp oge float %50, 0.000000e+00
  %53 = and i1 %51, %52
  br label %54

54:                                               ; preds = %45, %47
  %55 = phi float [ %46, %45 ], [ %49, %47 ]
  %56 = phi float [ 0.000000e+00, %45 ], [ %48, %47 ]
  %57 = phi float [ 0.000000e+00, %45 ], [ %50, %47 ]
  %58 = phi i1 [ false, %45 ], [ %53, %47 ]
  %59 = fadd float %42, %5
  %60 = fadd float %55, %6
  %61 = insertelement <2 x float> undef, float %42, i32 0
  %62 = insertelement <2 x float> %61, float %55, i32 1
  %63 = shufflevector <2 x float> %62, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %64 = fsub <4 x float> %41, %63
  %65 = fadd <4 x float> %41, %63
  %66 = shufflevector <4 x float> %64, <4 x float> %65, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  br label %67

67:                                               ; preds = %54, %22
  %68 = phi float [ %60, %54 ], [ %6, %22 ]
  %69 = phi float [ %59, %54 ], [ %5, %22 ]
  %70 = phi float [ %56, %54 ], [ 0.000000e+00, %22 ]
  %71 = phi float [ %57, %54 ], [ 0.000000e+00, %22 ]
  %72 = phi i1 [ %58, %54 ], [ false, %22 ]
  %73 = phi <4 x float> [ %66, %54 ], [ %41, %22 ]
  %74 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 3
  %75 = zext i1 %72 to i8
  store i8 %75, i8* %74, align 8
  %76 = bitcast %class.SkMatrix* %25 to i8*
  %77 = bitcast %class.SkMatrix* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 4 %77, i64 40, i1 false)
  %78 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0
  %79 = bitcast float* %78 to <4 x float>*
  store <4 x float> %73, <4 x float>* %79, align 8
  %80 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  store i16 1, i16* %80, align 2
  %81 = fadd <4 x float> %73, <float -5.000000e-01, float -5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %82 = bitcast i8* %33 to %class.SkTArray.194*
  %83 = bitcast %struct.SkRGBA4f* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83)
  %84 = bitcast %struct.SkRGBA4f* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %83, i8* align 4 %84, i64 16, i1 false)
  tail call void @_ZN8SkTArrayIN17EllipticalRRectOp5RRectELb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.194* %82, i32 1, i32 1) #12
  %85 = bitcast i8* %33 to %"struct.EllipticalRRectOp::RRect"**
  %86 = load %"struct.EllipticalRRectOp::RRect"*, %"struct.EllipticalRRectOp::RRect"** %85, align 8
  %87 = load i64, i64* %36, align 8
  %88 = lshr i64 %87, 1
  %89 = and i64 %88, 2147483647
  %90 = getelementptr inbounds %"struct.EllipticalRRectOp::RRect", %"struct.EllipticalRRectOp::RRect"* %86, i64 %89
  %91 = add i64 %87, 2
  %92 = and i64 %91, 4294967294
  %93 = and i64 %87, -4294967295
  %94 = or i64 %92, %93
  store i64 %94, i64* %36, align 8
  %95 = bitcast %"struct.EllipticalRRectOp::RRect"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %95, i8* nonnull align 8 %83, i64 16, i1 false)
  %96 = getelementptr inbounds %"struct.EllipticalRRectOp::RRect", %"struct.EllipticalRRectOp::RRect"* %86, i64 %89, i32 1
  store float %69, float* %96, align 4
  %97 = getelementptr inbounds %"struct.EllipticalRRectOp::RRect", %"struct.EllipticalRRectOp::RRect"* %86, i64 %89, i32 2
  store float %68, float* %97, align 4
  %98 = getelementptr inbounds %"struct.EllipticalRRectOp::RRect", %"struct.EllipticalRRectOp::RRect"* %86, i64 %89, i32 3
  store float %70, float* %98, align 4
  %99 = getelementptr inbounds %"struct.EllipticalRRectOp::RRect", %"struct.EllipticalRRectOp::RRect"* %86, i64 %89, i32 4
  store float %71, float* %99, align 4
  %100 = getelementptr inbounds %"struct.EllipticalRRectOp::RRect", %"struct.EllipticalRRectOp::RRect"* %86, i64 %89, i32 5, i32 0
  %101 = bitcast float* %100 to <4 x float>*
  store <4 x float> %81, <4 x float>* %101, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17EllipticalRRectOpD2Ev(%class.EllipticalRRectOp*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17EllipticalRRectOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 6, i32 0, i32 0, i64 56
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 6, i32 0, i32 0, i64 48
  %10 = bitcast i8* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #12
  br label %12

12:                                               ; preds = %1, %8
  %13 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 2
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD1Ev(%class.GrSimpleMeshDrawOpHelper* %13) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %14 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %class.GrOp*, %class.GrOp** %14, align 8
  store %class.GrOp* null, %class.GrOp** %14, align 8
  %16 = icmp eq %class.GrOp* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  %18 = bitcast %class.GrOp* %15 to void (%class.GrOp*)***
  %19 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %19, i64 1
  %21 = load void (%class.GrOp*)*, void (%class.GrOp*)** %20, align 8
  tail call void %21(%class.GrOp* nonnull %15) #12
  br label %22

22:                                               ; preds = %12, %17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17EllipticalRRectOpD0Ev(%class.EllipticalRRectOp*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17EllipticalRRectOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 6, i32 0, i32 0, i64 56
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 6, i32 0, i32 0, i64 48
  %10 = bitcast i8* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #12
  br label %12

12:                                               ; preds = %8, %1
  %13 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 2
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD1Ev(%class.GrSimpleMeshDrawOpHelper* %13) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %14 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %class.GrOp*, %class.GrOp** %14, align 8
  store %class.GrOp* null, %class.GrOp** %14, align 8
  %16 = icmp eq %class.GrOp* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  %18 = bitcast %class.GrOp* %15 to void (%class.GrOp*)***
  %19 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %19, i64 1
  %21 = load void (%class.GrOp*)*, void (%class.GrOp*)** %20, align 8
  tail call void %21(%class.GrOp* nonnull %15) #12
  br label %22

22:                                               ; preds = %12, %17
  %23 = bitcast %class.EllipticalRRectOp* %0 to i8*
  tail call void @_ZdlPv(i8* %23) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK17EllipticalRRectOp4nameEv(%class.EllipticalRRectOp*) unnamed_addr #4 comdat align 2 {
  ret i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.52, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK17EllipticalRRectOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.EllipticalRRectOp*, %"class.std::__1::function.137"*) unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 8
  %4 = load %class.GrProgramInfo*, %class.GrProgramInfo** %3, align 8
  %5 = icmp eq %class.GrProgramInfo* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %4, i64 0, i32 5
  %8 = load %class.GrPipeline*, %class.GrPipeline** %7, align 8
  tail call void @_ZNK10GrPipeline12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrPipeline* %8, %"class.std::__1::function.137"* %1) #12
  br label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 2, i32 0
  %11 = load %class.GrProcessorSet*, %class.GrProcessorSet** %10, align 8
  %12 = icmp eq %class.GrProcessorSet* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZNK14GrProcessorSet12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrProcessorSet* nonnull %11, %"class.std::__1::function.137"* %1) #12
  br label %14

14:                                               ; preds = %13, %9, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN17EllipticalRRectOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps(%class.EllipticalRRectOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps* dereferenceable(232)) unnamed_addr #4 comdat align 2 {
  %5 = bitcast %class.GrOp* %1 to %class.EllipticalRRectOp*
  %6 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 2
  %7 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 1, i32 6, i32 2
  %8 = bitcast float* %7 to %class.GrSimpleMeshDrawOpHelper*
  %9 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %10 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 0, i32 6
  %11 = tail call zeroext i1 @_ZNK24GrSimpleMeshDrawOpHelper12isCompatibleERKS_RK6GrCapsRK6SkRectS7_b(%class.GrSimpleMeshDrawOpHelper* %6, %class.GrSimpleMeshDrawOpHelper* dereferenceable(16) %8, %class.GrCaps* dereferenceable(232) %3, %struct.SkRect* dereferenceable(16) %9, %struct.SkRect* dereferenceable(16) %10, i1 zeroext false) #12
  br i1 %11, label %12, label %111

12:                                               ; preds = %4
  %13 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 3
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 2, i32 1
  %16 = bitcast %"class.std::__1::unique_ptr"* %15 to i8*
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %14, %17
  br i1 %18, label %19, label %111

19:                                               ; preds = %12
  %20 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 2, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = and i8 %21, 4
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %34, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 1
  %26 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 1
  %27 = bitcast %class.GrOp* %26 to %class.SkMatrix*
  %28 = icmp eq %class.SkMatrix* %25, %27
  br i1 %28, label %34, label %29

29:                                               ; preds = %24
  %30 = bitcast %class.SkMatrix* %25 to i8*
  %31 = bitcast %class.GrOp* %26 to i8*
  %32 = tail call i32 @bcmp(i8* %30, i8* %31, i64 36) #12
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %111

34:                                               ; preds = %19, %24, %29
  %35 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 6, i32 0, i32 0, i64 48
  %36 = bitcast i8* %35 to %class.SkTArray.194*
  %37 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 3, i32 2
  %38 = getelementptr inbounds %class.GrOp*, %class.GrOp** %37, i64 1
  %39 = bitcast %class.GrOp** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = lshr i64 %40, 1
  %42 = trunc i64 %41 to i32
  %43 = and i32 %42, 2147483647
  %44 = bitcast %class.GrOp** %37 to %"struct.EllipticalRRectOp::RRect"**
  %45 = load %"struct.EllipticalRRectOp::RRect"*, %"struct.EllipticalRRectOp::RRect"** %44, align 8
  tail call void @_ZN8SkTArrayIN17EllipticalRRectOp5RRectELb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.194* %36, i32 %43, i32 1) #12
  %46 = icmp eq i32 %43, 0
  br i1 %46, label %94, label %47

47:                                               ; preds = %34
  %48 = bitcast i8* %35 to %"struct.EllipticalRRectOp::RRect"**
  %49 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 6, i32 0, i32 0, i64 56
  %50 = bitcast i8* %49 to i64*
  %51 = zext i32 %43 to i64
  %52 = and i64 %51, 1
  %53 = icmp eq i32 %43, 1
  br i1 %53, label %81, label %54

54:                                               ; preds = %47
  %55 = sub nsw i64 %51, %52
  br label %56

56:                                               ; preds = %56, %54
  %57 = phi i64 [ 0, %54 ], [ %78, %56 ]
  %58 = phi i64 [ %55, %54 ], [ %79, %56 ]
  %59 = load %"struct.EllipticalRRectOp::RRect"*, %"struct.EllipticalRRectOp::RRect"** %48, align 8
  %60 = load i64, i64* %50, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = getelementptr inbounds %"struct.EllipticalRRectOp::RRect", %"struct.EllipticalRRectOp::RRect"* %59, i64 %62
  %64 = getelementptr inbounds %"struct.EllipticalRRectOp::RRect", %"struct.EllipticalRRectOp::RRect"* %63, i64 %57
  %65 = bitcast %"struct.EllipticalRRectOp::RRect"* %64 to i8*
  %66 = getelementptr inbounds %"struct.EllipticalRRectOp::RRect", %"struct.EllipticalRRectOp::RRect"* %45, i64 %57
  %67 = bitcast %"struct.EllipticalRRectOp::RRect"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %65, i8* align 4 %67, i64 48, i1 false) #12
  %68 = or i64 %57, 1
  %69 = load %"struct.EllipticalRRectOp::RRect"*, %"struct.EllipticalRRectOp::RRect"** %48, align 8
  %70 = load i64, i64* %50, align 8
  %71 = lshr i64 %70, 1
  %72 = and i64 %71, 2147483647
  %73 = getelementptr inbounds %"struct.EllipticalRRectOp::RRect", %"struct.EllipticalRRectOp::RRect"* %69, i64 %72
  %74 = getelementptr inbounds %"struct.EllipticalRRectOp::RRect", %"struct.EllipticalRRectOp::RRect"* %73, i64 %68
  %75 = bitcast %"struct.EllipticalRRectOp::RRect"* %74 to i8*
  %76 = getelementptr inbounds %"struct.EllipticalRRectOp::RRect", %"struct.EllipticalRRectOp::RRect"* %45, i64 %68
  %77 = bitcast %"struct.EllipticalRRectOp::RRect"* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %75, i8* align 4 %77, i64 48, i1 false) #12
  %78 = add nuw nsw i64 %57, 2
  %79 = add i64 %58, -2
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %56

81:                                               ; preds = %56, %47
  %82 = phi i64 [ 0, %47 ], [ %78, %56 ]
  %83 = icmp eq i64 %52, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81
  %85 = load %"struct.EllipticalRRectOp::RRect"*, %"struct.EllipticalRRectOp::RRect"** %48, align 8
  %86 = load i64, i64* %50, align 8
  %87 = lshr i64 %86, 1
  %88 = and i64 %87, 2147483647
  %89 = getelementptr inbounds %"struct.EllipticalRRectOp::RRect", %"struct.EllipticalRRectOp::RRect"* %85, i64 %88
  %90 = getelementptr inbounds %"struct.EllipticalRRectOp::RRect", %"struct.EllipticalRRectOp::RRect"* %89, i64 %82
  %91 = bitcast %"struct.EllipticalRRectOp::RRect"* %90 to i8*
  %92 = getelementptr inbounds %"struct.EllipticalRRectOp::RRect", %"struct.EllipticalRRectOp::RRect"* %45, i64 %82
  %93 = bitcast %"struct.EllipticalRRectOp::RRect"* %92 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %91, i8* align 4 %93, i64 48, i1 false) #12
  br label %94

94:                                               ; preds = %84, %81, %34
  %95 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 6, i32 0, i32 0, i64 56
  %96 = bitcast i8* %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = and i64 %40, 4294967294
  %99 = add i64 %97, %98
  %100 = and i64 %99, 4294967294
  %101 = and i64 %97, -4294967295
  %102 = or i64 %100, %101
  store i64 %102, i64* %96, align 8
  %103 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 4
  %104 = load i8, i8* %103, align 1, !range !2
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %109

106:                                              ; preds = %94
  %107 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %5, i64 0, i32 4
  %108 = load i8, i8* %107, align 1, !range !2
  br label %109

109:                                              ; preds = %94, %106
  %110 = phi i8 [ 1, %94 ], [ %108, %106 ]
  store i8 %110, i8* %103, align 1
  br label %111

111:                                              ; preds = %29, %12, %4, %109
  %112 = phi i32 [ 0, %109 ], [ 2, %4 ], [ 2, %12 ], [ 2, %29 ]
  ret i32 %112
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17EllipticalRRectOp9onExecuteEP14GrOpFlushStateRK6SkRect(%class.EllipticalRRectOp*, %class.GrOpFlushState*, %struct.SkRect* dereferenceable(16)) unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 8
  %5 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %6 = icmp eq %class.GrProgramInfo* %5, null
  br i1 %6, label %35, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 7
  %9 = load %struct.GrSimpleMesh*, %struct.GrSimpleMesh** %8, align 8
  %10 = icmp eq %struct.GrSimpleMesh* %9, null
  br i1 %10, label %35, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 15
  %13 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass12bindPipelineERK13GrProgramInfoRK6SkRect(%class.GrOpsRenderPass* %13, %class.GrProgramInfo* nonnull dereferenceable(128) %5, %struct.SkRect* dereferenceable(16) %2) #12
  %14 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %5, i64 0, i32 5
  %15 = load %class.GrPipeline*, %class.GrPipeline** %14, align 8
  %16 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %15, i64 0, i32 5
  %17 = load i8, i8* %16, align 8
  %18 = and i8 %17, 32
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 10
  %22 = load %"struct.GrOpFlushState::OpArgs"*, %"struct.GrOpFlushState::OpArgs"** %21, align 8
  %23 = getelementptr inbounds %"struct.GrOpFlushState::OpArgs", %"struct.GrOpFlushState::OpArgs"* %22, i64 0, i32 4
  %24 = load %class.GrAppliedClip*, %class.GrAppliedClip** %23, align 8
  %25 = getelementptr inbounds %class.GrAppliedClip, %class.GrAppliedClip* %24, i64 0, i32 0, i32 0, i32 1
  %26 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass14setScissorRectERK7SkIRect(%class.GrOpsRenderPass* %26, %struct.SkIRect* dereferenceable(16) %25) #12
  br label %27

27:                                               ; preds = %11, %20
  %28 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %29 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %28, i64 0, i32 7
  %30 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %29, align 8
  %31 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %28, i64 0, i32 5
  %32 = load %class.GrPipeline*, %class.GrPipeline** %31, align 8
  %33 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrOpsRenderPass* %33, %class.GrGeometryProcessor* dereferenceable(80) %30, %class.GrSurfaceProxy** null, %class.GrPipeline* dereferenceable(128) %32) #12
  %34 = load %struct.GrSimpleMesh*, %struct.GrSimpleMesh** %8, align 8
  tail call void @_ZN14GrOpFlushState8drawMeshERK12GrSimpleMesh(%class.GrOpFlushState* %1, %struct.GrSimpleMesh* dereferenceable(48) %34) #12
  br label %35

35:                                               ; preds = %7, %3, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK17EllipticalRRectOp18fixedFunctionFlagsEv(%class.EllipticalRRectOp*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 2
  %3 = tail call i32 @_ZNK24GrSimpleMeshDrawOpHelper18fixedFunctionFlagsEv(%class.GrSimpleMeshDrawOpHelper* %2) #12
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN17EllipticalRRectOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType(%class.EllipticalRRectOp*, %class.GrCaps* dereferenceable(232), %class.GrAppliedClip*, i32) unnamed_addr #4 comdat align 2 {
  %5 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %1, i64 0, i32 2, i32 0
  %6 = load %class.GrShaderCaps*, %class.GrShaderCaps** %5, align 8
  %7 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %6, i64 0, i32 2
  %8 = bitcast i56* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 5
  %11 = lshr i64 %9, 17
  %12 = trunc i64 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  store i8 %14, i8* %10, align 2
  %15 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 6, i32 0, i32 0, i64 48
  %16 = bitcast i8* %15 to %"struct.EllipticalRRectOp::RRect"**
  %17 = load %"struct.EllipticalRRectOp::RRect"*, %"struct.EllipticalRRectOp::RRect"** %16, align 8
  %18 = getelementptr inbounds %"struct.EllipticalRRectOp::RRect", %"struct.EllipticalRRectOp::RRect"* %17, i64 0, i32 0
  %19 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 2
  %20 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 4
  %21 = tail call i32 @_ZN24GrSimpleMeshDrawOpHelper18finalizeProcessorsERK6GrCapsPK13GrAppliedClip11GrClampType27GrProcessorAnalysisCoverageP8SkRGBA4fIL11SkAlphaType2EEPb(%class.GrSimpleMeshDrawOpHelper* %19, %class.GrCaps* dereferenceable(232) %1, %class.GrAppliedClip* %2, i32 %3, i32 1, %struct.SkRGBA4f* %18, i8* %20) #12
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrProgramInfo* @_ZN17EllipticalRRectOp11programInfoEv(%class.EllipticalRRectOp*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 8
  %3 = load %class.GrProgramInfo*, %class.GrProgramInfo** %2, align 8
  ret %class.GrProgramInfo* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17EllipticalRRectOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.EllipticalRRectOp*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip* dereferenceable(72), %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #4 comdat align 2 {
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca %class.anon.195, align 8
  %13 = alloca %class.SkMatrix, align 16
  %14 = bitcast %class.SkMatrix* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #12
  %15 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 1
  %16 = bitcast %class.SkMatrix* %13 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %16, align 16
  %17 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %18, align 16
  %19 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %19, align 16
  store i32 16, i32* %15, align 4
  %20 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 1
  %21 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = trunc i32 %22 to i8
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %8
  %26 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %20) #12
  %27 = zext i8 %26 to i32
  store i32 %27, i32* %21, align 4
  br label %28

28:                                               ; preds = %25, %8
  %29 = phi i32 [ %27, %25 ], [ %22, %8 ]
  %30 = and i32 %29, 15
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  %33 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %13) #12
  br label %36

34:                                               ; preds = %28
  %35 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* %20, %class.SkMatrix* nonnull %13) #12
  br i1 %35, label %36, label %53

36:                                               ; preds = %32, %34
  %37 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 3
  %38 = load i8, i8* %37, align 8, !range !2
  %39 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 4
  %40 = load i8, i8* %39, align 1, !range !2
  %41 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 5
  %42 = load i8, i8* %41, align 2, !range !2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11)
  store i8 %38, i8* %9, align 1
  store i8 %40, i8* %10, align 1
  store i8 %42, i8* %11, align 1
  %43 = bitcast %class.anon.195* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #12
  %44 = getelementptr inbounds %class.anon.195, %class.anon.195* %12, i64 0, i32 0
  store i8* %9, i8** %44, align 8
  %45 = getelementptr inbounds %class.anon.195, %class.anon.195* %12, i64 0, i32 1
  store i8* %10, i8** %45, align 8
  %46 = getelementptr inbounds %class.anon.195, %class.anon.195* %12, i64 0, i32 2
  store i8* %11, i8** %46, align 8
  %47 = getelementptr inbounds %class.anon.195, %class.anon.195* %12, i64 0, i32 3
  store %class.SkMatrix* %13, %class.SkMatrix** %47, align 8
  %48 = call %class.EllipseGeometryProcessor* @_ZN12SkArenaAlloc4makeIZN24EllipseGeometryProcessor4MakeEPS_bbbRK8SkMatrixEUlPvE_EEDTclfp_LDnEEEOT_(%class.SkArenaAlloc* %2, %class.anon.195* nonnull dereferenceable(32) %12) #12
  %49 = bitcast %class.EllipseGeometryProcessor* %48 to %class.GrGeometryProcessor*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11)
  %50 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 2
  %51 = call %class.GrProgramInfo* @_ZN24GrSimpleMeshDrawOpHelper17createProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewEP19GrGeometryProcessor15GrPrimitiveType18GrXferBarrierFlags8GrLoadOp(%class.GrSimpleMeshDrawOpHelper* %50, %class.GrCaps* %1, %class.SkArenaAlloc* %2, %class.GrSurfaceProxyView* dereferenceable(16) %3, %class.GrAppliedClip* dereferenceable(72) %4, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %5, %class.GrGeometryProcessor* %49, i8 zeroext 0, i32 %6, i32 %7) #12
  %52 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 8
  store %class.GrProgramInfo* %51, %class.GrProgramInfo** %52, align 8
  br label %53

53:                                               ; preds = %34, %36
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17EllipticalRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE(%class.EllipticalRRectOp*, %"class.GrMeshDrawOp::Target"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %class.sk_sp.199, align 8
  %4 = alloca %class.sk_sp.199, align 8
  %5 = alloca %class.sk_sp.120, align 8
  %6 = alloca %class.sk_sp.120, align 8
  %7 = alloca %"class.GrMeshDrawOp::PatternHelper", align 8
  %8 = alloca %class.sk_sp.76, align 8
  %9 = alloca i32, align 8
  %10 = alloca i32, align 4
  %11 = alloca [4 x float], align 16
  %12 = alloca [4 x float], align 16
  %13 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 8
  %14 = load %class.GrProgramInfo*, %class.GrProgramInfo** %13, align 8
  %15 = icmp eq %class.GrProgramInfo* %14, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 0
  tail call void @_ZN12GrMeshDrawOp17createProgramInfoEPNS_6TargetE(%class.GrMeshDrawOp* %17, %"class.GrMeshDrawOp::Target"* %1) #12
  %18 = load %class.GrProgramInfo*, %class.GrProgramInfo** %13, align 8
  %19 = icmp eq %class.GrProgramInfo* %18, null
  br i1 %19, label %442, label %20

20:                                               ; preds = %16, %2
  %21 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 3
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = bitcast %"class.GrMeshDrawOp::Target"* %1 to %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)***
  %24 = load %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)**, %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)*** %23, align 8
  %25 = getelementptr inbounds %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)*, %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)** %24, i64 22
  %26 = load %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)*, %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)** %25, align 8
  %27 = tail call %class.GrResourceProvider* %26(%"class.GrMeshDrawOp::Target"* %1) #12
  %28 = load atomic i8, i8* bitcast (i64* @_ZGVZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE38gStrokeRRectOnlyIndexBufferKey_storage to i8*) acquire, align 8, !noalias !17
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %34, !prof !3

30:                                               ; preds = %20
  %31 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE38gStrokeRRectOnlyIndexBufferKey_storage) #12, !noalias !17
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %30
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE38gStrokeRRectOnlyIndexBufferKey_storage) #12, !noalias !17
  br label %34

34:                                               ; preds = %33, %30, %20
  %35 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZL35gStrokeRRectOnlyIndexBufferKey_once, i64 0, i32 0, i32 0, i32 0) acquire, align 1, !noalias !17
  switch i8 %35, label %36 [
    i8 2, label %55
    i8 0, label %37
  ]

36:                                               ; preds = %37, %34
  br label %52

37:                                               ; preds = %34
  %38 = cmpxchg i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZL35gStrokeRRectOnlyIndexBufferKey_once, i64 0, i32 0, i32 0, i32 0), i8 0, i8 1 monotonic monotonic, !noalias !17
  %39 = extractvalue { i8, i1 } %38, 1
  br i1 %39, label %40, label %36

40:                                               ; preds = %37
  store i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.198, %class.SkAlignedSTStorage.198* @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE38gStrokeRRectOnlyIndexBufferKey_storage, i64 0, i32 0, i64 8) to i32*), i32** bitcast (%class.SkAlignedSTStorage.198* @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE38gStrokeRRectOnlyIndexBufferKey_storage to i32**), align 8, !noalias !17
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.198, %class.SkAlignedSTStorage.198* @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE38gStrokeRRectOnlyIndexBufferKey_storage, i64 0, i32 0, i64 8) to i32*), align 8, !noalias !17
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.198, %class.SkAlignedSTStorage.198* @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE38gStrokeRRectOnlyIndexBufferKey_storage, i64 0, i32 0, i64 12) to i32*), align 4, !noalias !17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%class.SkAlignedSTStorage.198, %class.SkAlignedSTStorage.198* @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE38gStrokeRRectOnlyIndexBufferKey_storage, i64 0, i32 0, i64 40), i8 0, i64 16, i1 false) #12, !noalias !17
  %41 = tail call i32 @_ZN11GrUniqueKey14GenerateDomainEv() #12, !noalias !17
  %42 = load i32*, i32** bitcast (%class.SkAlignedSTStorage.198* @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE38gStrokeRRectOnlyIndexBufferKey_storage to i32**), align 8, !noalias !17
  %43 = icmp eq i32* %42, bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.198, %class.SkAlignedSTStorage.198* @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE38gStrokeRRectOnlyIndexBufferKey_storage, i64 0, i32 0, i64 8) to i32*)
  br i1 %43, label %46, label %44

44:                                               ; preds = %40
  %45 = bitcast i32* %42 to i8*
  tail call void @_Z7sk_freePv(i8* %45) #12, !noalias !17
  br label %46

46:                                               ; preds = %44, %40
  store i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.198, %class.SkAlignedSTStorage.198* @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE38gStrokeRRectOnlyIndexBufferKey_storage, i64 0, i32 0, i64 8) to i32*), i32** bitcast (%class.SkAlignedSTStorage.198* @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE38gStrokeRRectOnlyIndexBufferKey_storage to i32**), align 8, !noalias !17
  %47 = or i32 %41, 524288
  store i32 %47, i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.198, %class.SkAlignedSTStorage.198* @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE38gStrokeRRectOnlyIndexBufferKey_storage, i64 0, i32 0, i64 12) to i32*), align 4, !noalias !17
  store i8* null, i8** bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.198, %class.SkAlignedSTStorage.198* @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE38gStrokeRRectOnlyIndexBufferKey_storage, i64 0, i32 0, i64 48) to i8**), align 8, !noalias !17
  %48 = lshr i32 %47, 16
  %49 = zext i32 %48 to i64
  %50 = add nsw i64 %49, -4
  %51 = tail call i32 @_Z17GrResourceKeyHashPKjm(i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.198, %class.SkAlignedSTStorage.198* @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE38gStrokeRRectOnlyIndexBufferKey_storage, i64 0, i32 0, i64 12) to i32*), i64 %50) #12, !noalias !17
  store i32 %51, i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.198, %class.SkAlignedSTStorage.198* @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE38gStrokeRRectOnlyIndexBufferKey_storage, i64 0, i32 0, i64 8) to i32*), align 8, !noalias !17
  store atomic i8 2, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZL35gStrokeRRectOnlyIndexBufferKey_once, i64 0, i32 0, i32 0, i32 0) release, align 1, !noalias !17
  br label %55

52:                                               ; preds = %36, %52
  %53 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZL35gStrokeRRectOnlyIndexBufferKey_once, i64 0, i32 0, i32 0, i32 0) acquire, align 1, !noalias !17
  %54 = icmp eq i8 %53, 2
  br i1 %54, label %55, label %52

55:                                               ; preds = %52, %46, %34
  %56 = load atomic i8, i8* bitcast (i64* @_ZGVZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE30gStrokeRRectOnlyIndexBufferKey to i8*) acquire, align 8, !noalias !17
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %62, !prof !3

58:                                               ; preds = %55
  %59 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE30gStrokeRRectOnlyIndexBufferKey) #12, !noalias !17
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %58
  store i8* getelementptr inbounds (%class.SkAlignedSTStorage.198, %class.SkAlignedSTStorage.198* @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE38gStrokeRRectOnlyIndexBufferKey_storage, i64 0, i32 0, i64 0), i8** bitcast (%class.GrUniqueKey** @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE30gStrokeRRectOnlyIndexBufferKey to i8**), align 8, !noalias !17
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE30gStrokeRRectOnlyIndexBufferKey) #12, !noalias !17
  br label %62

62:                                               ; preds = %61, %58, %55
  %63 = load atomic i8, i8* bitcast (i64* @_ZGVZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE32gRRectOnlyIndexBufferKey_storage to i8*) acquire, align 8, !noalias !17
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %69, !prof !3

65:                                               ; preds = %62
  %66 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE32gRRectOnlyIndexBufferKey_storage) #12, !noalias !17
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %69, label %68

68:                                               ; preds = %65
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE32gRRectOnlyIndexBufferKey_storage) #12, !noalias !17
  br label %69

69:                                               ; preds = %68, %65, %62
  %70 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZL29gRRectOnlyIndexBufferKey_once, i64 0, i32 0, i32 0, i32 0) acquire, align 1, !noalias !17
  switch i8 %70, label %71 [
    i8 2, label %90
    i8 0, label %72
  ]

71:                                               ; preds = %72, %69
  br label %87

72:                                               ; preds = %69
  %73 = cmpxchg i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZL29gRRectOnlyIndexBufferKey_once, i64 0, i32 0, i32 0, i32 0), i8 0, i8 1 monotonic monotonic, !noalias !17
  %74 = extractvalue { i8, i1 } %73, 1
  br i1 %74, label %75, label %71

75:                                               ; preds = %72
  store i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.198, %class.SkAlignedSTStorage.198* @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE32gRRectOnlyIndexBufferKey_storage, i64 0, i32 0, i64 8) to i32*), i32** bitcast (%class.SkAlignedSTStorage.198* @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE32gRRectOnlyIndexBufferKey_storage to i32**), align 8, !noalias !17
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.198, %class.SkAlignedSTStorage.198* @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE32gRRectOnlyIndexBufferKey_storage, i64 0, i32 0, i64 8) to i32*), align 8, !noalias !17
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.198, %class.SkAlignedSTStorage.198* @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE32gRRectOnlyIndexBufferKey_storage, i64 0, i32 0, i64 12) to i32*), align 4, !noalias !17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%class.SkAlignedSTStorage.198, %class.SkAlignedSTStorage.198* @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE32gRRectOnlyIndexBufferKey_storage, i64 0, i32 0, i64 40), i8 0, i64 16, i1 false) #12, !noalias !17
  %76 = tail call i32 @_ZN11GrUniqueKey14GenerateDomainEv() #12, !noalias !17
  %77 = load i32*, i32** bitcast (%class.SkAlignedSTStorage.198* @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE32gRRectOnlyIndexBufferKey_storage to i32**), align 8, !noalias !17
  %78 = icmp eq i32* %77, bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.198, %class.SkAlignedSTStorage.198* @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE32gRRectOnlyIndexBufferKey_storage, i64 0, i32 0, i64 8) to i32*)
  br i1 %78, label %81, label %79

79:                                               ; preds = %75
  %80 = bitcast i32* %77 to i8*
  tail call void @_Z7sk_freePv(i8* %80) #12, !noalias !17
  br label %81

81:                                               ; preds = %79, %75
  store i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.198, %class.SkAlignedSTStorage.198* @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE32gRRectOnlyIndexBufferKey_storage, i64 0, i32 0, i64 8) to i32*), i32** bitcast (%class.SkAlignedSTStorage.198* @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE32gRRectOnlyIndexBufferKey_storage to i32**), align 8, !noalias !17
  %82 = or i32 %76, 524288
  store i32 %82, i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.198, %class.SkAlignedSTStorage.198* @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE32gRRectOnlyIndexBufferKey_storage, i64 0, i32 0, i64 12) to i32*), align 4, !noalias !17
  store i8* null, i8** bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.198, %class.SkAlignedSTStorage.198* @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE32gRRectOnlyIndexBufferKey_storage, i64 0, i32 0, i64 48) to i8**), align 8, !noalias !17
  %83 = lshr i32 %82, 16
  %84 = zext i32 %83 to i64
  %85 = add nsw i64 %84, -4
  %86 = tail call i32 @_Z17GrResourceKeyHashPKjm(i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.198, %class.SkAlignedSTStorage.198* @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE32gRRectOnlyIndexBufferKey_storage, i64 0, i32 0, i64 12) to i32*), i64 %85) #12, !noalias !17
  store i32 %86, i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.198, %class.SkAlignedSTStorage.198* @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE32gRRectOnlyIndexBufferKey_storage, i64 0, i32 0, i64 8) to i32*), align 8, !noalias !17
  store atomic i8 2, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZL29gRRectOnlyIndexBufferKey_once, i64 0, i32 0, i32 0, i32 0) release, align 1, !noalias !17
  br label %90

87:                                               ; preds = %71, %87
  %88 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZL29gRRectOnlyIndexBufferKey_once, i64 0, i32 0, i32 0, i32 0) acquire, align 1, !noalias !17
  %89 = icmp eq i8 %88, 2
  br i1 %89, label %90, label %87

90:                                               ; preds = %87, %81, %69
  %91 = load atomic i8, i8* bitcast (i64* @_ZGVZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE24gRRectOnlyIndexBufferKey to i8*) acquire, align 8, !noalias !17
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %93, label %97, !prof !3

93:                                               ; preds = %90
  %94 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE24gRRectOnlyIndexBufferKey) #12, !noalias !17
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %97, label %96

96:                                               ; preds = %93
  store i8* getelementptr inbounds (%class.SkAlignedSTStorage.198, %class.SkAlignedSTStorage.198* @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE32gRRectOnlyIndexBufferKey_storage, i64 0, i32 0, i64 0), i8** bitcast (%class.GrUniqueKey** @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE24gRRectOnlyIndexBufferKey to i8**), align 8, !noalias !17
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE24gRRectOnlyIndexBufferKey) #12, !noalias !17
  br label %97

97:                                               ; preds = %96, %93, %90
  %98 = icmp eq i8 %22, 1
  br i1 %98, label %114, label %99

99:                                               ; preds = %97
  %100 = bitcast %class.sk_sp.120* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #12, !noalias !17
  %101 = load %class.GrUniqueKey*, %class.GrUniqueKey** @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE24gRRectOnlyIndexBufferKey, align 8, !noalias !17
  %102 = bitcast %class.sk_sp.199* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #12, !noalias !20
  call void @_ZN18GrResourceProvider23findResourceByUniqueKeyERK11GrUniqueKey(%class.sk_sp.199* nonnull sret %4, %class.GrResourceProvider* %27, %class.GrUniqueKey* dereferenceable(56) %101) #12, !noalias !20
  %103 = bitcast %class.sk_sp.199* %4 to i64*
  %104 = load i64, i64* %103, align 8, !noalias !20
  %105 = bitcast %class.sk_sp.120* %5 to i64*
  store i64 %104, i64* %105, align 8, !alias.scope !25, !noalias !17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #12, !noalias !20
  %106 = icmp eq i64 %104, 0
  %107 = inttoptr i64 %104 to %class.GrGpuBuffer*
  br i1 %106, label %108, label %111

108:                                              ; preds = %99
  call void @_ZN18GrResourceProvider26createPatternedIndexBufferEPKtiiiPK11GrUniqueKey(%class.sk_sp.120* nonnull sret %5, %class.GrResourceProvider* %27, i16* getelementptr inbounds ([78 x i16], [78 x i16]* @_ZL23gOverstrokeRRectIndices, i64 0, i64 24), i32 54, i32 256, i32 16, %class.GrUniqueKey* %101) #12, !noalias !17
  %109 = getelementptr inbounds %class.sk_sp.120, %class.sk_sp.120* %5, i64 0, i32 0
  %110 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %109, align 8, !noalias !17
  br label %111

111:                                              ; preds = %108, %99
  %112 = phi %class.GrGpuBuffer* [ %110, %108 ], [ %107, %99 ]
  %113 = icmp eq %class.GrGpuBuffer* %112, null
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #12, !noalias !17
  br i1 %113, label %441, label %129

114:                                              ; preds = %97
  %115 = bitcast %class.sk_sp.120* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #12, !noalias !17
  %116 = load %class.GrUniqueKey*, %class.GrUniqueKey** @_ZZL22get_rrect_index_buffer9RRectTypeP18GrResourceProviderE30gStrokeRRectOnlyIndexBufferKey, align 8, !noalias !17
  %117 = bitcast %class.sk_sp.199* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #12, !noalias !26
  call void @_ZN18GrResourceProvider23findResourceByUniqueKeyERK11GrUniqueKey(%class.sk_sp.199* nonnull sret %3, %class.GrResourceProvider* %27, %class.GrUniqueKey* dereferenceable(56) %116) #12, !noalias !26
  %118 = bitcast %class.sk_sp.199* %3 to i64*
  %119 = load i64, i64* %118, align 8, !noalias !26
  %120 = bitcast %class.sk_sp.120* %6 to i64*
  store i64 %119, i64* %120, align 8, !alias.scope !31, !noalias !17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #12, !noalias !26
  %121 = icmp eq i64 %119, 0
  %122 = inttoptr i64 %119 to %class.GrGpuBuffer*
  br i1 %121, label %123, label %126

123:                                              ; preds = %114
  call void @_ZN18GrResourceProvider26createPatternedIndexBufferEPKtiiiPK11GrUniqueKey(%class.sk_sp.120* nonnull sret %6, %class.GrResourceProvider* %27, i16* getelementptr inbounds ([78 x i16], [78 x i16]* @_ZL23gOverstrokeRRectIndices, i64 0, i64 24), i32 48, i32 256, i32 16, %class.GrUniqueKey* %116) #12, !noalias !17
  %124 = getelementptr inbounds %class.sk_sp.120, %class.sk_sp.120* %6, i64 0, i32 0
  %125 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %124, align 8, !noalias !17
  br label %126

126:                                              ; preds = %123, %114
  %127 = phi %class.GrGpuBuffer* [ %125, %123 ], [ %122, %114 ]
  %128 = icmp eq %class.GrGpuBuffer* %127, null
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #12, !noalias !17
  br i1 %128, label %441, label %129

129:                                              ; preds = %111, %126
  %130 = phi %class.GrGpuBuffer* [ %127, %126 ], [ %112, %111 ]
  %131 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %130, i64 0, i32 1
  %132 = icmp eq %class.GrBuffer* %131, null
  br i1 %132, label %441, label %133

133:                                              ; preds = %129
  %134 = ptrtoint %class.GrBuffer* %131 to i64
  %135 = icmp eq i8 %22, 0
  %136 = select i1 %135, i32 54, i32 48
  %137 = bitcast %"class.GrMeshDrawOp::PatternHelper"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %137) #12
  %138 = getelementptr inbounds %"class.GrMeshDrawOp::PatternHelper", %"class.GrMeshDrawOp::PatternHelper"* %7, i64 0, i32 0
  %139 = getelementptr inbounds %"class.GrMeshDrawOp::PatternHelper", %"class.GrMeshDrawOp::PatternHelper"* %7, i64 0, i32 1
  %140 = bitcast %"class.GrMeshDrawOp::PatternHelper"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %140, i8 -86, i64 24, i1 false)
  %141 = load %class.GrProgramInfo*, %class.GrProgramInfo** %13, align 8
  %142 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %141, i64 0, i32 7
  %143 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %142, align 8
  %144 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %143, i64 0, i32 3, i32 3
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %class.sk_sp.76* %8 to i64*
  store i64 %134, i64* %146, align 8
  %147 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 6, i32 0, i32 0, i64 48
  %148 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 6, i32 0, i32 0, i64 56
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = lshr i64 %150, 1
  %152 = trunc i64 %151 to i32
  %153 = and i32 %152, 2147483647
  call void @_ZN12GrMeshDrawOp13PatternHelperC1EPNS_6TargetE15GrPrimitiveTypem5sk_spIK8GrBufferEiiii(%"class.GrMeshDrawOp::PatternHelper"* nonnull %7, %"class.GrMeshDrawOp::Target"* %1, i8 zeroext 0, i64 %145, %class.sk_sp.76* nonnull %8, i32 16, i32 %136, i32 %153, i32 256) #12
  %154 = getelementptr inbounds %class.sk_sp.76, %class.sk_sp.76* %8, i64 0, i32 0
  %155 = load %class.GrBuffer*, %class.GrBuffer** %154, align 8
  %156 = icmp eq %class.GrBuffer* %155, null
  br i1 %156, label %162, label %157

157:                                              ; preds = %133
  %158 = bitcast %class.GrBuffer* %155 to void (%class.GrBuffer*)***
  %159 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %158, align 8
  %160 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %159, i64 3
  %161 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %160, align 8
  call void %161(%class.GrBuffer* nonnull %155) #12
  br label %162

162:                                              ; preds = %133, %157
  %163 = load i8*, i8** %138, align 8
  %164 = icmp eq i8* %163, null
  br i1 %164, label %165, label %166

165:                                              ; preds = %162
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 3009, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.50, i64 0, i64 0)) #12
  br label %440

166:                                              ; preds = %162
  %167 = bitcast i8* %147 to %"struct.EllipticalRRectOp::RRect"**
  %168 = load %"struct.EllipticalRRectOp::RRect"*, %"struct.EllipticalRRectOp::RRect"** %167, align 8
  %169 = icmp eq %"struct.EllipticalRRectOp::RRect"* %168, null
  br i1 %169, label %191, label %170

170:                                              ; preds = %166
  %171 = load i64, i64* %149, align 8
  %172 = lshr i64 %171, 1
  %173 = and i64 %172, 2147483647
  %174 = getelementptr inbounds %"struct.EllipticalRRectOp::RRect", %"struct.EllipticalRRectOp::RRect"* %168, i64 %173
  %175 = icmp eq i64 %173, 0
  br i1 %175, label %191, label %176

176:                                              ; preds = %170
  %177 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 4
  %178 = bitcast i32* %9 to i8*
  %179 = bitcast i32* %10 to i8*
  %180 = bitcast [4 x float]* %11 to i8*
  %181 = getelementptr inbounds [4 x float], [4 x float]* %11, i64 0, i64 1
  %182 = getelementptr inbounds [4 x float], [4 x float]* %11, i64 0, i64 2
  %183 = getelementptr inbounds [4 x float], [4 x float]* %11, i64 0, i64 3
  %184 = bitcast [4 x float]* %11 to i32*
  %185 = bitcast [4 x float]* %12 to i8*
  %186 = getelementptr inbounds [4 x float], [4 x float]* %12, i64 0, i64 0
  %187 = getelementptr inbounds [4 x float], [4 x float]* %12, i64 0, i64 1
  %188 = getelementptr inbounds [4 x float], [4 x float]* %12, i64 0, i64 2
  %189 = getelementptr inbounds [4 x float], [4 x float]* %12, i64 0, i64 3
  %190 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 5
  br label %196

191:                                              ; preds = %265, %166, %170
  %192 = bitcast %struct.GrSimpleMesh** %139 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = getelementptr inbounds %class.EllipticalRRectOp, %class.EllipticalRRectOp* %0, i64 0, i32 7
  %195 = bitcast %struct.GrSimpleMesh** %194 to i64*
  store i64 %193, i64* %195, align 8
  br label %440

196:                                              ; preds = %176, %265
  %197 = phi %"struct.EllipticalRRectOp::RRect"* [ %168, %176 ], [ %266, %265 ]
  %198 = phi i8* [ %163, %176 ], [ %437, %265 ]
  %199 = load i8, i8* %177, align 1, !range !2
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %213, label %201

201:                                              ; preds = %196
  %202 = bitcast %"struct.EllipticalRRectOp::RRect"* %197 to i32*
  %203 = load i32, i32* %202, align 4
  %204 = getelementptr inbounds %"struct.EllipticalRRectOp::RRect", %"struct.EllipticalRRectOp::RRect"* %197, i64 0, i32 0, i32 1
  %205 = bitcast float* %204 to i32*
  %206 = load i32, i32* %205, align 4
  %207 = getelementptr inbounds %"struct.EllipticalRRectOp::RRect", %"struct.EllipticalRRectOp::RRect"* %197, i64 0, i32 0, i32 2
  %208 = bitcast float* %207 to i32*
  %209 = load i32, i32* %208, align 4
  %210 = getelementptr inbounds %"struct.EllipticalRRectOp::RRect", %"struct.EllipticalRRectOp::RRect"* %197, i64 0, i32 0, i32 3
  %211 = bitcast float* %210 to i32*
  %212 = load i32, i32* %211, align 4
  br label %216

213:                                              ; preds = %196
  %214 = getelementptr inbounds %"struct.EllipticalRRectOp::RRect", %"struct.EllipticalRRectOp::RRect"* %197, i64 0, i32 0
  %215 = call i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f* %214) #12
  br label %216

216:                                              ; preds = %201, %213
  %217 = phi i32 [ %206, %201 ], [ -1431655766, %213 ]
  %218 = phi i32 [ %203, %201 ], [ %215, %213 ]
  %219 = phi i32 [ %209, %201 ], [ -1431655766, %213 ]
  %220 = phi i32 [ %212, %201 ], [ -1431655766, %213 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %178)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %179)
  %221 = getelementptr inbounds %"struct.EllipticalRRectOp::RRect", %"struct.EllipticalRRectOp::RRect"* %197, i64 0, i32 1
  %222 = bitcast float* %221 to <2 x float>*
  %223 = load <2 x float>, <2 x float>* %222, align 4
  %224 = extractelement <2 x float> %223, i32 0
  %225 = fdiv float 1.000000e+00, %224
  %226 = extractelement <2 x float> %223, i32 1
  %227 = fdiv float 1.000000e+00, %226
  %228 = getelementptr inbounds %"struct.EllipticalRRectOp::RRect", %"struct.EllipticalRRectOp::RRect"* %197, i64 0, i32 3
  %229 = load float, float* %228, align 4
  %230 = fdiv float 1.000000e+00, %229
  %231 = getelementptr inbounds %"struct.EllipticalRRectOp::RRect", %"struct.EllipticalRRectOp::RRect"* %197, i64 0, i32 4
  %232 = load float, float* %231, align 4
  %233 = fdiv float 1.000000e+00, %232
  %234 = fcmp ogt float %230, 1.000000e+06
  %235 = bitcast float %230 to i32
  %236 = select i1 %234, i32 1232348160, i32 %235
  store i32 %236, i32* %9, align 8
  %237 = fcmp ogt float %233, 1.000000e+06
  %238 = bitcast float %233 to i32
  %239 = select i1 %237, i32 1232348160, i32 %238
  store i32 %239, i32* %10, align 4
  %240 = fadd <2 x float> %223, <float 5.000000e-01, float 5.000000e-01>
  %241 = load i8, i8* %21, align 8, !range !2
  %242 = icmp eq i8 %241, 0
  %243 = fdiv <2 x float> %240, %223
  %244 = select i1 %242, <2 x float> %243, <2 x float> %240
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %180) #12
  %245 = getelementptr inbounds %"struct.EllipticalRRectOp::RRect", %"struct.EllipticalRRectOp::RRect"* %197, i64 0, i32 5, i32 1
  %246 = bitcast float* %245 to i32*
  %247 = load i32, i32* %246, align 4
  store i32 %247, i32* %184, align 16
  %248 = bitcast i32 %247 to float
  %249 = extractelement <2 x float> %240, i32 1
  %250 = fadd float %249, %248
  store float %250, float* %181, align 4
  %251 = getelementptr inbounds %"struct.EllipticalRRectOp::RRect", %"struct.EllipticalRRectOp::RRect"* %197, i64 0, i32 5, i32 3
  %252 = load float, float* %251, align 4
  %253 = fsub float %252, %249
  store float %253, float* %182, align 8
  store float %252, float* %183, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %185) #12
  %254 = extractelement <2 x float> %244, i32 1
  store float %254, float* %186, align 16
  store float 0x3F30000000000000, float* %187, align 4
  store float 0x3F30000000000000, float* %188, align 8
  store float %254, float* %189, align 4
  %255 = load i8, i8* %190, align 2, !range !2
  %256 = fcmp olt float %224, %226
  %257 = select i1 %256, float %226, float %224
  %258 = getelementptr inbounds %"struct.EllipticalRRectOp::RRect", %"struct.EllipticalRRectOp::RRect"* %197, i64 0, i32 5, i32 0
  %259 = bitcast float* %258 to i32*
  %260 = icmp eq i8 %255, 0
  %261 = getelementptr inbounds %"struct.EllipticalRRectOp::RRect", %"struct.EllipticalRRectOp::RRect"* %197, i64 0, i32 5, i32 2
  %262 = bitcast float* %261 to i32*
  %263 = extractelement <2 x float> %244, i32 0
  %264 = extractelement <2 x float> %240, i32 0
  br label %268

265:                                              ; preds = %425
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %185) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %180) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %178)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %179)
  %266 = getelementptr inbounds %"struct.EllipticalRRectOp::RRect", %"struct.EllipticalRRectOp::RRect"* %197, i64 1
  %267 = icmp eq %"struct.EllipticalRRectOp::RRect"* %266, %174
  br i1 %267, label %191, label %196

268:                                              ; preds = %425, %216
  %269 = phi i64 [ 0, %216 ], [ %438, %425 ]
  %270 = phi i8* [ %198, %216 ], [ %437, %425 ]
  %271 = getelementptr inbounds [4 x float], [4 x float]* %11, i64 0, i64 %269
  %272 = getelementptr inbounds [4 x float], [4 x float]* %12, i64 0, i64 %269
  %273 = bitcast i8* %270 to i32*
  %274 = load i32, i32* %259, align 4
  store i32 %274, i32* %273, align 1
  %275 = getelementptr inbounds i8, i8* %270, i64 4
  %276 = bitcast i8* %275 to i32*
  %277 = bitcast float* %271 to i32*
  %278 = load i32, i32* %277, align 4
  store i32 %278, i32* %276, align 1
  %279 = getelementptr inbounds i8, i8* %270, i64 8
  %280 = bitcast i8* %279 to i32*
  store i32 %218, i32* %280, align 1
  %281 = getelementptr inbounds i8, i8* %270, i64 12
  %282 = bitcast i8* %281 to i32*
  br i1 %200, label %290, label %283

283:                                              ; preds = %268
  store i32 %217, i32* %282, align 1
  %284 = getelementptr inbounds i8, i8* %270, i64 16
  %285 = bitcast i8* %284 to i32*
  store i32 %219, i32* %285, align 1
  %286 = getelementptr inbounds i8, i8* %270, i64 20
  %287 = bitcast i8* %286 to i32*
  store i32 %220, i32* %287, align 1
  %288 = getelementptr inbounds i8, i8* %270, i64 24
  %289 = bitcast i8* %288 to i32*
  br label %290

290:                                              ; preds = %283, %268
  %291 = phi i64 [ 12, %268 ], [ 24, %283 ]
  %292 = phi i32* [ %282, %268 ], [ %289, %283 ]
  %293 = bitcast i32* %292 to float*
  store float %263, float* %293, align 1
  %294 = getelementptr inbounds i8, i8* %275, i64 %291
  %295 = bitcast i8* %294 to i32*
  %296 = bitcast float* %272 to i32*
  %297 = load i32, i32* %296, align 4
  store i32 %297, i32* %295, align 1
  %298 = getelementptr inbounds i8, i8* %294, i64 4
  br i1 %260, label %302, label %299

299:                                              ; preds = %290
  %300 = bitcast i8* %298 to float*
  store float %257, float* %300, align 1
  %301 = getelementptr inbounds i8, i8* %298, i64 4
  br label %302

302:                                              ; preds = %290, %299
  %303 = phi i8* [ %294, %290 ], [ %298, %299 ]
  %304 = phi i8* [ %298, %290 ], [ %301, %299 ]
  %305 = bitcast i8* %304 to float*
  store float %225, float* %305, align 1
  %306 = getelementptr inbounds i8, i8* %304, i64 4
  %307 = bitcast i8* %306 to float*
  store float %227, float* %307, align 1
  %308 = getelementptr inbounds i8, i8* %304, i64 8
  %309 = bitcast i8* %308 to i32*
  %310 = load i32, i32* %9, align 8
  store i32 %310, i32* %309, align 1
  %311 = getelementptr inbounds i8, i8* %304, i64 12
  %312 = bitcast i8* %311 to i32*
  %313 = load i32, i32* %10, align 4
  store i32 %313, i32* %312, align 1
  %314 = getelementptr inbounds i8, i8* %303, i64 20
  %315 = load float, float* %258, align 4
  %316 = fadd float %264, %315
  %317 = bitcast i8* %314 to float*
  store float %316, float* %317, align 1
  %318 = getelementptr inbounds i8, i8* %303, i64 24
  %319 = bitcast i8* %318 to i32*
  %320 = load i32, i32* %277, align 4
  store i32 %320, i32* %319, align 1
  %321 = getelementptr inbounds i8, i8* %303, i64 28
  %322 = bitcast i8* %321 to i32*
  store i32 %218, i32* %322, align 1
  %323 = getelementptr inbounds i8, i8* %303, i64 32
  %324 = bitcast i8* %323 to i32*
  br i1 %200, label %332, label %325

325:                                              ; preds = %302
  store i32 %217, i32* %324, align 1
  %326 = getelementptr inbounds i8, i8* %303, i64 36
  %327 = bitcast i8* %326 to i32*
  store i32 %219, i32* %327, align 1
  %328 = getelementptr inbounds i8, i8* %303, i64 40
  %329 = bitcast i8* %328 to i32*
  store i32 %220, i32* %329, align 1
  %330 = getelementptr inbounds i8, i8* %303, i64 44
  %331 = bitcast i8* %330 to i32*
  br label %332

332:                                              ; preds = %325, %302
  %333 = phi i64 [ 32, %302 ], [ 44, %325 ]
  %334 = phi i32* [ %324, %302 ], [ %331, %325 ]
  %335 = getelementptr inbounds i8, i8* %303, i64 4
  store i32 964689920, i32* %334, align 1
  %336 = getelementptr inbounds i8, i8* %335, i64 %333
  %337 = bitcast i8* %336 to i32*
  %338 = load i32, i32* %296, align 4
  store i32 %338, i32* %337, align 1
  %339 = getelementptr inbounds i8, i8* %336, i64 4
  br i1 %260, label %343, label %340

340:                                              ; preds = %332
  %341 = bitcast i8* %339 to float*
  store float %257, float* %341, align 1
  %342 = getelementptr inbounds i8, i8* %339, i64 4
  br label %343

343:                                              ; preds = %332, %340
  %344 = phi i8* [ %336, %332 ], [ %339, %340 ]
  %345 = phi i8* [ %339, %332 ], [ %342, %340 ]
  %346 = bitcast i8* %345 to float*
  store float %225, float* %346, align 1
  %347 = getelementptr inbounds i8, i8* %345, i64 4
  %348 = bitcast i8* %347 to float*
  store float %227, float* %348, align 1
  %349 = getelementptr inbounds i8, i8* %345, i64 8
  %350 = bitcast i8* %349 to i32*
  %351 = load i32, i32* %9, align 8
  store i32 %351, i32* %350, align 1
  %352 = getelementptr inbounds i8, i8* %345, i64 12
  %353 = bitcast i8* %352 to i32*
  %354 = load i32, i32* %10, align 4
  store i32 %354, i32* %353, align 1
  %355 = getelementptr inbounds i8, i8* %344, i64 20
  %356 = load float, float* %261, align 4
  %357 = fsub float %356, %264
  %358 = bitcast i8* %355 to float*
  store float %357, float* %358, align 1
  %359 = getelementptr inbounds i8, i8* %344, i64 24
  %360 = bitcast i8* %359 to i32*
  %361 = load i32, i32* %277, align 4
  store i32 %361, i32* %360, align 1
  %362 = getelementptr inbounds i8, i8* %344, i64 28
  %363 = bitcast i8* %362 to i32*
  store i32 %218, i32* %363, align 1
  %364 = getelementptr inbounds i8, i8* %344, i64 32
  %365 = bitcast i8* %364 to i32*
  br i1 %200, label %373, label %366

366:                                              ; preds = %343
  store i32 %217, i32* %365, align 1
  %367 = getelementptr inbounds i8, i8* %344, i64 36
  %368 = bitcast i8* %367 to i32*
  store i32 %219, i32* %368, align 1
  %369 = getelementptr inbounds i8, i8* %344, i64 40
  %370 = bitcast i8* %369 to i32*
  store i32 %220, i32* %370, align 1
  %371 = getelementptr inbounds i8, i8* %344, i64 44
  %372 = bitcast i8* %371 to i32*
  br label %373

373:                                              ; preds = %366, %343
  %374 = phi i64 [ 32, %343 ], [ 44, %366 ]
  %375 = phi i32* [ %365, %343 ], [ %372, %366 ]
  %376 = getelementptr inbounds i8, i8* %344, i64 4
  store i32 964689920, i32* %375, align 1
  %377 = getelementptr inbounds i8, i8* %376, i64 %374
  %378 = bitcast i8* %377 to i32*
  %379 = load i32, i32* %296, align 4
  store i32 %379, i32* %378, align 1
  %380 = getelementptr inbounds i8, i8* %377, i64 4
  br i1 %260, label %384, label %381

381:                                              ; preds = %373
  %382 = bitcast i8* %380 to float*
  store float %257, float* %382, align 1
  %383 = getelementptr inbounds i8, i8* %380, i64 4
  br label %384

384:                                              ; preds = %373, %381
  %385 = phi i8* [ %377, %373 ], [ %380, %381 ]
  %386 = phi i8* [ %380, %373 ], [ %383, %381 ]
  %387 = bitcast i8* %386 to float*
  store float %225, float* %387, align 1
  %388 = getelementptr inbounds i8, i8* %386, i64 4
  %389 = bitcast i8* %388 to float*
  store float %227, float* %389, align 1
  %390 = getelementptr inbounds i8, i8* %386, i64 8
  %391 = bitcast i8* %390 to i32*
  %392 = load i32, i32* %9, align 8
  store i32 %392, i32* %391, align 1
  %393 = getelementptr inbounds i8, i8* %386, i64 12
  %394 = bitcast i8* %393 to i32*
  %395 = load i32, i32* %10, align 4
  store i32 %395, i32* %394, align 1
  %396 = getelementptr inbounds i8, i8* %385, i64 20
  %397 = bitcast i8* %396 to i32*
  %398 = load i32, i32* %262, align 4
  store i32 %398, i32* %397, align 1
  %399 = getelementptr inbounds i8, i8* %385, i64 24
  %400 = bitcast i8* %399 to i32*
  %401 = load i32, i32* %277, align 4
  store i32 %401, i32* %400, align 1
  %402 = getelementptr inbounds i8, i8* %385, i64 28
  %403 = bitcast i8* %402 to i32*
  store i32 %218, i32* %403, align 1
  %404 = getelementptr inbounds i8, i8* %385, i64 32
  %405 = bitcast i8* %404 to i32*
  br i1 %200, label %413, label %406

406:                                              ; preds = %384
  store i32 %217, i32* %405, align 1
  %407 = getelementptr inbounds i8, i8* %385, i64 36
  %408 = bitcast i8* %407 to i32*
  store i32 %219, i32* %408, align 1
  %409 = getelementptr inbounds i8, i8* %385, i64 40
  %410 = bitcast i8* %409 to i32*
  store i32 %220, i32* %410, align 1
  %411 = getelementptr inbounds i8, i8* %385, i64 44
  %412 = bitcast i8* %411 to i32*
  br label %413

413:                                              ; preds = %406, %384
  %414 = phi i64 [ 32, %384 ], [ 44, %406 ]
  %415 = phi i32* [ %405, %384 ], [ %412, %406 ]
  %416 = getelementptr inbounds i8, i8* %385, i64 4
  %417 = bitcast i32* %415 to float*
  store float %263, float* %417, align 1
  %418 = getelementptr inbounds i8, i8* %416, i64 %414
  %419 = bitcast i8* %418 to i32*
  %420 = load i32, i32* %296, align 4
  store i32 %420, i32* %419, align 1
  %421 = getelementptr inbounds i8, i8* %418, i64 4
  br i1 %260, label %425, label %422

422:                                              ; preds = %413
  %423 = bitcast i8* %421 to float*
  store float %257, float* %423, align 1
  %424 = getelementptr inbounds i8, i8* %421, i64 4
  br label %425

425:                                              ; preds = %413, %422
  %426 = phi i8* [ %418, %413 ], [ %421, %422 ]
  %427 = phi i8* [ %421, %413 ], [ %424, %422 ]
  %428 = bitcast i8* %427 to float*
  store float %225, float* %428, align 1
  %429 = getelementptr inbounds i8, i8* %427, i64 4
  %430 = bitcast i8* %429 to float*
  store float %227, float* %430, align 1
  %431 = getelementptr inbounds i8, i8* %427, i64 8
  %432 = bitcast i8* %431 to i32*
  %433 = load i32, i32* %9, align 8
  store i32 %433, i32* %432, align 1
  %434 = getelementptr inbounds i8, i8* %427, i64 12
  %435 = bitcast i8* %434 to i32*
  %436 = load i32, i32* %10, align 4
  store i32 %436, i32* %435, align 1
  %437 = getelementptr inbounds i8, i8* %426, i64 20
  %438 = add nuw nsw i64 %269, 1
  %439 = icmp eq i64 %438, 4
  br i1 %439, label %265, label %268

440:                                              ; preds = %165, %191
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %137) #12
  br label %442

441:                                              ; preds = %111, %126, %129
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 3000, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.51, i64 0, i64 0)) #12
  br label %442

442:                                              ; preds = %441, %440, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN17EllipticalRRectOp5RRectELb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.194*, i32, i32) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.194, %class.SkTArray.194* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %66

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %66, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 48) #12
  %45 = load i64, i64* %4, align 8
  %46 = lshr i64 %45, 1
  %47 = and i64 %46, 2147483647
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %35
  %50 = mul nuw nsw i64 %47, 48
  %51 = bitcast %class.SkTArray.194* %0 to i8**
  %52 = load i8*, i8** %51, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %52, i64 %50, i1 false) #12
  %53 = load i64, i64* %4, align 8
  br label %54

54:                                               ; preds = %35, %49
  %55 = phi i64 [ %45, %35 ], [ %53, %49 ]
  %56 = and i64 %55, 1
  %57 = icmp eq i64 %56, 0
  %58 = bitcast %class.SkTArray.194* %0 to i8**
  br i1 %57, label %62, label %59

59:                                               ; preds = %54
  %60 = load i8*, i8** %58, align 8
  tail call void @_Z7sk_freePv(i8* %60) #12
  %61 = load i64, i64* %4, align 8
  br label %62

62:                                               ; preds = %54, %59
  %63 = phi i64 [ %61, %59 ], [ %55, %54 ]
  store i8* %44, i8** %58, align 8
  %64 = and i64 %63, -4294967298
  %65 = or i64 %64, 1
  store i64 %65, i64* %4, align 8
  br label %66

66:                                               ; preds = %62, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.EllipseGeometryProcessor* @_ZN12SkArenaAlloc4makeIZN24EllipseGeometryProcessor4MakeEPS_bbbRK8SkMatrixEUlPvE_EEDTclfp_LDnEEEOT_(%class.SkArenaAlloc*, %class.anon.195* dereferenceable(32)) local_unnamed_addr #4 comdat align 2 {
  %3 = tail call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %0, i32 201, i32 8) #12
  %4 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %0, i64 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = ptrtoint i8* %3 to i64
  %8 = sub i64 %7, %6
  %9 = trunc i64 %8 to i32
  %10 = getelementptr inbounds i8, i8* %3, i64 192
  store i8* %10, i8** %4, align 8
  tail call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %0, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZN24EllipseGeometryProcessor4MakeEPS_bbbRK8SkMatrixEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESB_, i32 %9) #12
  %11 = bitcast i8* %3 to %class.EllipseGeometryProcessor*
  %12 = getelementptr inbounds %class.anon.195, %class.anon.195* %1, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = load i8, i8* %13, align 1, !range !2
  %15 = getelementptr inbounds %class.anon.195, %class.anon.195* %1, i64 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = load i8, i8* %16, align 1, !range !2
  %18 = icmp eq i8 %17, 0
  %19 = getelementptr inbounds %class.anon.195, %class.anon.195* %1, i64 0, i32 2
  %20 = load i8*, i8** %19, align 8
  %21 = load i8, i8* %20, align 1, !range !2
  %22 = icmp eq i8 %21, 0
  %23 = getelementptr inbounds %class.anon.195, %class.anon.195* %1, i64 0, i32 3
  %24 = bitcast %class.SkMatrix** %23 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast i8* %3 to %class.GrGeometryProcessor*
  tail call void @_ZN19GrGeometryProcessorC2EN11GrProcessor7ClassIDE(%class.GrGeometryProcessor* %26, i32 18) #12
  %27 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV24EllipseGeometryProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds i8, i8* %3, i64 80
  %29 = bitcast i8* %28 to %"class.GrGeometryProcessor::Attribute"*
  %30 = getelementptr inbounds i8, i8* %3, i64 112
  %31 = getelementptr inbounds i8, i8* %3, i64 128
  %32 = getelementptr inbounds i8, i8* %3, i64 144
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 64, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 4 %25, i64 40, i1 false) #12
  %33 = getelementptr inbounds i8, i8* %3, i64 184
  store i8 %14, i8* %33, align 8
  %34 = getelementptr inbounds i8, i8* %3, i64 185
  store i8 %21, i8* %34, align 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.112 to i8*), i64 16, i1 false) #12
  %35 = select i1 %18, i64 133143986193, i64 133143986179
  %36 = getelementptr inbounds i8, i8* %3, i64 96
  %37 = bitcast i8* %36 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i8** %37, align 8
  %38 = getelementptr inbounds i8, i8* %3, i64 104
  %39 = bitcast i8* %38 to i64*
  store i64 %35, i64* %39, align 8
  br i1 %22, label %41, label %40

40:                                               ; preds = %2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.55 to i8*), i64 16, i1 false) #12
  br label %42

41:                                               ; preds = %2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.56 to i8*), i64 16, i1 false) #12
  br label %42

42:                                               ; preds = %40, %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.58 to i8*), i64 16, i1 false) #12
  tail call void @_ZN19GrGeometryProcessor19setVertexAttributesEPKNS_9AttributeEi(%class.GrGeometryProcessor* %26, %"class.GrGeometryProcessor::Attribute"* %29, i32 4) #12
  ret %class.EllipseGeometryProcessor* %11
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc4makeIZN24EllipseGeometryProcessor4MakeEPS_bbbRK8SkMatrixEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESB_(i8*) #6 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -201
  %3 = bitcast i8* %2 to %class.EllipseGeometryProcessor*
  %4 = bitcast i8* %2 to void (%class.EllipseGeometryProcessor*)***
  %5 = load void (%class.EllipseGeometryProcessor*)**, void (%class.EllipseGeometryProcessor*)*** %4, align 8
  %6 = load void (%class.EllipseGeometryProcessor*)*, void (%class.EllipseGeometryProcessor*)** %5, align 8
  tail call void %6(%class.EllipseGeometryProcessor* %3) #12
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN24EllipseGeometryProcessorD0Ev(%class.EllipseGeometryProcessor*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %class.EllipseGeometryProcessor* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK24EllipseGeometryProcessor4nameEv(%class.EllipseGeometryProcessor*) unnamed_addr #4 comdat align 2 {
  ret i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.59, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK24EllipseGeometryProcessor19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%class.EllipseGeometryProcessor*, %class.GrShaderCaps* dereferenceable(144), %class.GrProcessorKeyBuilder*) unnamed_addr #4 comdat align 2 {
  %4 = bitcast %class.EllipseGeometryProcessor* %0 to %class.GrGeometryProcessor*
  tail call void @_ZN24EllipseGeometryProcessor13GLSLProcessor6GenKeyERK19GrGeometryProcessorRK12GrShaderCapsP21GrProcessorKeyBuilder(%class.GrGeometryProcessor* dereferenceable(80) %4, %class.GrShaderCaps* dereferenceable(144) %1, %class.GrProcessorKeyBuilder* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrGLSLGeometryProcessor* @_ZNK24EllipseGeometryProcessor18createGLSLInstanceERK12GrShaderCaps(%class.EllipseGeometryProcessor*, %class.GrShaderCaps* dereferenceable(144)) unnamed_addr #4 comdat align 2 {
  %3 = tail call i8* @_Znwm(i64 72) #15
  %4 = bitcast i8* %3 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %3, i64 16
  %6 = bitcast i8* %5 to i64*
  %7 = getelementptr inbounds i8, i8* %3, i64 8
  %8 = bitcast i8* %7 to %"struct.GrGLSLGeometryProcessor::TransformInfo"**
  store %"struct.GrGLSLGeometryProcessor::TransformInfo"* null, %"struct.GrGLSLGeometryProcessor::TransformInfo"** %8, align 8
  store i64 1, i64* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN24EllipseGeometryProcessor13GLSLProcessorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 24
  %10 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13InvalidMatrixEv() #12
  %11 = bitcast %class.SkMatrix* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 4 %11, i64 40, i1 false) #12
  %12 = getelementptr inbounds i8, i8* %3, i64 64
  %13 = bitcast i8* %12 to i32*
  store i32 -1, i32* %13, align 4
  %14 = bitcast i8* %3 to %class.GrGLSLGeometryProcessor*
  ret %class.GrGLSLGeometryProcessor* %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN24EllipseGeometryProcessor13GLSLProcessor6GenKeyERK19GrGeometryProcessorRK12GrShaderCapsP21GrProcessorKeyBuilder(%class.GrGeometryProcessor* dereferenceable(80), %class.GrShaderCaps* dereferenceable(144), %class.GrProcessorKeyBuilder*) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %0, i64 2, i32 3
  %5 = bitcast %"class.GrGeometryProcessor::AttributeSet"* %4 to i8*
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = zext i8 %6 to i32
  %8 = bitcast %class.GrProcessorKeyBuilder* %2 to void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)***
  %9 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %9, i64 2
  %11 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %10, align 8
  tail call void %11(%class.GrProcessorKeyBuilder* %2, i32 1, i32 %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #12
  %12 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %0, i64 1, i32 4, i32 3
  %13 = bitcast i64* %12 to %class.SkMatrix*
  %14 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %1, i64 0, i32 2
  %15 = bitcast i56* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 1048576
  %18 = icmp eq i64 %17, 0
  %19 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %41

21:                                               ; preds = %3
  %22 = trunc i32 %20 to i8
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %21
  %25 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %13) #12
  %26 = zext i8 %25 to i32
  store i32 %26, i32* %19, align 4
  br label %27

27:                                               ; preds = %24, %21
  %28 = phi i32 [ %26, %24 ], [ %20, %21 ]
  %29 = and i32 %28, 15
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %53, label %31

31:                                               ; preds = %27
  %32 = trunc i32 %28 to i8
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %31
  %35 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %13) #12
  %36 = zext i8 %35 to i32
  store i32 %36, i32* %19, align 4
  br label %37

37:                                               ; preds = %34, %31
  %38 = phi i32 [ %36, %34 ], [ %28, %31 ]
  %39 = and i32 %38, 12
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %53, label %41

41:                                               ; preds = %37, %3
  %42 = phi i32 [ %38, %37 ], [ %20, %3 ]
  %43 = and i32 %42, 192
  %44 = icmp eq i32 %43, 128
  br i1 %44, label %45, label %48

45:                                               ; preds = %41
  %46 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %13) #12
  %47 = zext i8 %46 to i32
  store i32 %47, i32* %19, align 4
  br label %48

48:                                               ; preds = %45, %41
  %49 = phi i32 [ %47, %45 ], [ %42, %41 ]
  %50 = and i32 %49, 8
  %51 = icmp eq i32 %50, 0
  %52 = select i1 %51, i32 2, i32 3
  br label %53

53:                                               ; preds = %27, %37, %48
  %54 = phi i32 [ 0, %27 ], [ 1, %37 ], [ %52, %48 ]
  %55 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %56 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %55, i64 2
  %57 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %56, align 8
  tail call void %57(%class.GrProcessorKeyBuilder* %2, i32 2, i32 %54, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25, i64 0, i64 0)) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN24EllipseGeometryProcessor13GLSLProcessorD0Ev(%"class.EllipseGeometryProcessor::GLSLProcessor"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.EllipseGeometryProcessor::GLSLProcessor", %"class.EllipseGeometryProcessor::GLSLProcessor"* %0, i64 0, i32 0
  tail call void @_ZN23GrGLSLGeometryProcessorD2Ev(%class.GrGLSLGeometryProcessor* %2) #12
  %3 = bitcast %"class.EllipseGeometryProcessor::GLSLProcessor"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN24EllipseGeometryProcessor13GLSLProcessor7setDataERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK19GrGeometryProcessor(%"class.EllipseGeometryProcessor::GLSLProcessor"*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrShaderCaps* dereferenceable(144), %class.GrGeometryProcessor* dereferenceable(80)) unnamed_addr #4 comdat align 2 {
  %5 = getelementptr inbounds %"class.EllipseGeometryProcessor::GLSLProcessor", %"class.EllipseGeometryProcessor::GLSLProcessor"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %3, i64 1, i32 4, i32 3
  %7 = bitcast i64* %6 to %class.SkMatrix*
  %8 = getelementptr inbounds %"class.EllipseGeometryProcessor::GLSLProcessor", %"class.EllipseGeometryProcessor::GLSLProcessor"* %0, i64 0, i32 1
  tail call void @_ZN23GrGLSLGeometryProcessor12SetTransformERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK16GrResourceHandleINS0_17UniformHandleKindEERK8SkMatrixPSB_(%class.GrGLSLProgramDataManager* dereferenceable(8) %1, %class.GrShaderCaps* dereferenceable(144) %2, %class.GrResourceHandle* dereferenceable(4) %5, %class.SkMatrix* dereferenceable(40) %7, %class.SkMatrix* %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN24EllipseGeometryProcessor13GLSLProcessor10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS1_8GrGPArgsE(%"class.EllipseGeometryProcessor::GLSLProcessor"*, %"struct.GrGLSLGeometryProcessor::EmitArgs"* dereferenceable(88), %"struct.GrGLSLGeometryProcessor::GrGPArgs"*) unnamed_addr #4 comdat align 2 {
  %4 = alloca %class.SkString, align 8
  %5 = alloca %class.GrGLSLVarying, align 8
  %6 = alloca %class.GrGLSLVarying, align 8
  %7 = alloca %class.GrShaderVar, align 8
  %8 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 6
  %9 = bitcast %class.GrGeometryProcessor** %8 to %class.EllipseGeometryProcessor**
  %10 = load %class.EllipseGeometryProcessor*, %class.EllipseGeometryProcessor** %9, align 8
  %11 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 0
  %12 = load %class.GrGLSLVertexBuilder*, %class.GrGLSLVertexBuilder** %11, align 8
  %13 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 3
  %14 = load %class.GrGLSLVaryingHandler*, %class.GrGLSLVaryingHandler** %13, align 8
  %15 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 4
  %16 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %15, align 8
  %17 = bitcast %class.EllipseGeometryProcessor* %10 to %class.GrGeometryProcessor*
  tail call void @_ZN20GrGLSLVaryingHandler14emitAttributesERK19GrGeometryProcessor(%class.GrGLSLVaryingHandler* %14, %class.GrGeometryProcessor* dereferenceable(80) %17) #12
  %18 = getelementptr inbounds %class.EllipseGeometryProcessor, %class.EllipseGeometryProcessor* %10, i64 0, i32 8
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  %21 = select i1 %20, i32 22, i32 23
  %22 = bitcast %class.GrGLSLVarying* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22) #12
  %23 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %5, i64 0, i32 0
  %24 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %5, i64 0, i32 1
  %25 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %5, i64 0, i32 2
  %26 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %5, i64 0, i32 5
  store i32 %21, i32* %23, align 8
  %27 = bitcast i32* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %27, i8 0, i64 36, i1 false)
  call void @_ZN20GrGLSLVaryingHandler10addVaryingEPKcP13GrGLSLVaryingNS_13InterpolationE(%class.GrGLSLVaryingHandler* %14, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.60, i64 0, i64 0), %class.GrGLSLVarying* nonnull %5, i32 0) #12
  %28 = bitcast %class.GrGLSLVertexBuilder* %12 to %class.GrGLSLShaderBuilder*
  %29 = load i8*, i8** %25, align 8
  %30 = getelementptr inbounds %class.EllipseGeometryProcessor, %class.EllipseGeometryProcessor* %10, i64 0, i32 4, i32 0
  %31 = load i8*, i8** %30, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %28, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.61, i64 0, i64 0), i8* %29, i8* %31)
  %32 = bitcast %class.GrGLSLVarying* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %32) #12
  %33 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %6, i64 0, i32 0
  %34 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %6, i64 0, i32 1
  %35 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %6, i64 0, i32 2
  %36 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %6, i64 0, i32 5
  store i32 24, i32* %33, align 8
  %37 = bitcast i32* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %37, i8 0, i64 36, i1 false)
  call void @_ZN20GrGLSLVaryingHandler10addVaryingEPKcP13GrGLSLVaryingNS_13InterpolationE(%class.GrGLSLVaryingHandler* %14, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.62, i64 0, i64 0), %class.GrGLSLVarying* nonnull %6, i32 0) #12
  %38 = load i8*, i8** %35, align 8
  %39 = getelementptr inbounds %class.EllipseGeometryProcessor, %class.EllipseGeometryProcessor* %10, i64 0, i32 5, i32 0
  %40 = load i8*, i8** %39, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %28, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.61, i64 0, i64 0), i8* %38, i8* %40)
  %41 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 2
  %42 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %41, align 8
  %43 = bitcast %class.GrGLSLFPFragmentBuilder* %42 to i8**
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr i8, i8* %44, i64 -24
  %46 = bitcast i8* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %class.GrGLSLFPFragmentBuilder* %42 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 %47
  %50 = bitcast i8* %49 to %class.GrGLSLShaderBuilder*
  %51 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 7
  %52 = load i8*, i8** %51, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %50, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i64 0, i64 0), i8* %52)
  %53 = getelementptr inbounds %class.EllipseGeometryProcessor, %class.EllipseGeometryProcessor* %10, i64 0, i32 3
  %54 = load i8*, i8** %51, align 8
  call void @_ZN20GrGLSLVaryingHandler23addPassThroughAttributeERKN19GrGeometryProcessor9AttributeEPKcNS_13InterpolationE(%class.GrGLSLVaryingHandler* %14, %"class.GrGeometryProcessor::Attribute"* dereferenceable(16) %53, i8* %54, i32 0) #12
  %55 = getelementptr inbounds %class.EllipseGeometryProcessor, %class.EllipseGeometryProcessor* %10, i64 0, i32 2, i32 0
  %56 = load i8*, i8** %55, align 8
  call void @_ZN23GrGLSLGeometryProcessor19WriteOutputPositionEP19GrGLSLVertexBuilderPNS_8GrGPArgsEPKc(%class.GrGLSLVertexBuilder* %12, %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i8* %56) #12
  %57 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 5
  %58 = load %class.GrShaderCaps*, %class.GrShaderCaps** %57, align 8
  %59 = load i8*, i8** %55, align 8, !noalias !32
  %60 = getelementptr inbounds %class.EllipseGeometryProcessor, %class.EllipseGeometryProcessor* %10, i64 0, i32 2, i32 2
  %61 = load i32, i32* %60, align 4, !noalias !32
  %62 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #12, !noalias !32
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %4, i8* %59) #12, !noalias !32
  %63 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %7, i64 0, i32 0
  store i32 %61, i32* %63, align 8, !alias.scope !32
  %64 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %7, i64 0, i32 1
  store i32 2, i32* %64, align 4, !alias.scope !32
  %65 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %7, i64 0, i32 2
  store i32 0, i32* %65, align 8, !alias.scope !32
  %66 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %7, i64 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %66, %class.SkString* nonnull dereferenceable(8) %4) #12
  %67 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %7, i64 0, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %67) #12
  %68 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %7, i64 0, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %68) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #12, !noalias !32
  %69 = getelementptr inbounds %class.EllipseGeometryProcessor, %class.EllipseGeometryProcessor* %10, i64 0, i32 6
  %70 = getelementptr inbounds %"class.EllipseGeometryProcessor::GLSLProcessor", %"class.EllipseGeometryProcessor::GLSLProcessor"* %0, i64 0, i32 2
  call void @_ZN23GrGLSLGeometryProcessor15WriteLocalCoordEP19GrGLSLVertexBuilderP20GrGLSLUniformHandlerRK12GrShaderCapsPNS_8GrGPArgsE11GrShaderVarRK8SkMatrixP16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE(%class.GrGLSLVertexBuilder* %12, %class.GrGLSLUniformHandler* %16, %class.GrShaderCaps* dereferenceable(144) %58, %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, %class.GrShaderVar* nonnull %7, %class.SkMatrix* dereferenceable(40) %69, %class.GrResourceHandle* %70) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* %68) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* %67) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* %66) #12
  %71 = load i8*, i8** %43, align 8
  %72 = getelementptr i8, i8* %71, i64 -24
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds i8, i8* %48, i64 %74
  %76 = bitcast i8* %75 to %class.GrGLSLShaderBuilder*
  %77 = load i8*, i8** %26, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %76, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.63, i64 0, i64 0), i8* %77)
  %78 = getelementptr inbounds %class.EllipseGeometryProcessor, %class.EllipseGeometryProcessor* %10, i64 0, i32 7
  %79 = load i8, i8* %78, align 8, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %89, label %81

81:                                               ; preds = %3
  %82 = load i8*, i8** %43, align 8
  %83 = getelementptr i8, i8* %82, i64 -24
  %84 = bitcast i8* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds i8, i8* %48, i64 %85
  %87 = bitcast i8* %86 to %class.GrGLSLShaderBuilder*
  %88 = load i8*, i8** %36, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %87, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.64, i64 0, i64 0), i8* %88)
  br label %89

89:                                               ; preds = %3, %81
  %90 = load i8*, i8** %43, align 8
  %91 = getelementptr i8, i8* %90, i64 -24
  %92 = bitcast i8* %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds i8, i8* %48, i64 %93
  %95 = getelementptr inbounds i8, i8* %94, i64 160
  %96 = getelementptr inbounds i8, i8* %94, i64 488
  %97 = bitcast i8* %96 to i32*
  %98 = load i32, i32* %97, align 8
  %99 = bitcast i8* %95 to %class.SkString**
  %100 = load %class.SkString*, %class.SkString** %99, align 8
  %101 = sext i32 %98 to i64
  %102 = getelementptr inbounds %class.SkString, %class.SkString* %100, i64 %101
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %102, i64 -1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.65, i64 0, i64 0)) #12
  %103 = load i8, i8* %18, align 1, !range !2
  %104 = icmp eq i8 %103, 0
  %105 = load i8*, i8** %43, align 8
  %106 = getelementptr i8, i8* %105, i64 -24
  %107 = bitcast i8* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds i8, i8* %48, i64 %108
  %110 = bitcast i8* %109 to %class.GrGLSLShaderBuilder*
  br i1 %104, label %114, label %111

111:                                              ; preds = %89
  %112 = load i8*, i8** %26, align 8
  %113 = load i8*, i8** %36, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %110, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.66, i64 0, i64 0), i8* %112, i8* %113)
  br label %116

114:                                              ; preds = %89
  %115 = load i8*, i8** %36, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %110, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.67, i64 0, i64 0), i8* %115)
  br label %116

116:                                              ; preds = %114, %111
  %117 = load i8*, i8** %43, align 8
  %118 = getelementptr i8, i8* %117, i64 -24
  %119 = bitcast i8* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = getelementptr inbounds i8, i8* %48, i64 %120
  %122 = getelementptr inbounds i8, i8* %121, i64 160
  %123 = getelementptr inbounds i8, i8* %121, i64 488
  %124 = bitcast i8* %123 to i32*
  %125 = load i32, i32* %124, align 8
  %126 = bitcast i8* %122 to %class.SkString**
  %127 = load %class.SkString*, %class.SkString** %126, align 8
  %128 = sext i32 %125 to i64
  %129 = getelementptr inbounds %class.SkString, %class.SkString* %127, i64 %128
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %129, i64 -1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.68, i64 0, i64 0)) #12
  %130 = load %class.GrShaderCaps*, %class.GrShaderCaps** %57, align 8
  %131 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %130, i64 0, i32 2
  %132 = bitcast i56* %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = and i64 %133, 131072
  %135 = icmp eq i64 %134, 0
  %136 = load i8*, i8** %43, align 8
  %137 = getelementptr i8, i8* %136, i64 -24
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds i8, i8* %48, i64 %139
  %141 = getelementptr inbounds i8, i8* %140, i64 160
  %142 = getelementptr inbounds i8, i8* %140, i64 488
  %143 = bitcast i8* %142 to i32*
  %144 = load i32, i32* %143, align 8
  %145 = bitcast i8* %141 to %class.SkString**
  %146 = load %class.SkString*, %class.SkString** %145, align 8
  %147 = sext i32 %144 to i64
  %148 = getelementptr inbounds %class.SkString, %class.SkString* %146, i64 %147
  %149 = select i1 %135, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.69, i64 0, i64 0)
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %148, i64 -1, i8* %149) #12
  %150 = load i8, i8* %18, align 1, !range !2
  %151 = icmp eq i8 %150, 0
  %152 = load i8*, i8** %43, align 8
  %153 = getelementptr i8, i8* %152, i64 -24
  %154 = bitcast i8* %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = getelementptr inbounds i8, i8* %48, i64 %155
  br i1 %151, label %160, label %157

157:                                              ; preds = %116
  %158 = bitcast i8* %156 to %class.GrGLSLShaderBuilder*
  %159 = load i8*, i8** %26, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %158, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.71, i64 0, i64 0), i8* %159)
  br label %169

160:                                              ; preds = %116
  %161 = getelementptr inbounds i8, i8* %156, i64 160
  %162 = getelementptr inbounds i8, i8* %156, i64 488
  %163 = bitcast i8* %162 to i32*
  %164 = load i32, i32* %163, align 8
  %165 = bitcast i8* %161 to %class.SkString**
  %166 = load %class.SkString*, %class.SkString** %165, align 8
  %167 = sext i32 %164 to i64
  %168 = getelementptr inbounds %class.SkString, %class.SkString* %166, i64 %167
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %168, i64 -1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.72, i64 0, i64 0)) #12
  br label %169

169:                                              ; preds = %160, %157
  %170 = load i8*, i8** %43, align 8
  %171 = getelementptr i8, i8* %170, i64 -24
  %172 = bitcast i8* %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = getelementptr inbounds i8, i8* %48, i64 %173
  %175 = getelementptr inbounds i8, i8* %174, i64 160
  %176 = getelementptr inbounds i8, i8* %174, i64 488
  %177 = bitcast i8* %176 to i32*
  %178 = load i32, i32* %177, align 8
  %179 = bitcast i8* %175 to %class.SkString**
  %180 = load %class.SkString*, %class.SkString** %179, align 8
  %181 = sext i32 %178 to i64
  %182 = getelementptr inbounds %class.SkString, %class.SkString* %180, i64 %181
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %182, i64 -1, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.73, i64 0, i64 0)) #12
  %183 = load i8, i8* %78, align 8, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %288, label %185

185:                                              ; preds = %169
  %186 = load i8*, i8** %43, align 8
  %187 = getelementptr i8, i8* %186, i64 -24
  %188 = bitcast i8* %187 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = getelementptr inbounds i8, i8* %48, i64 %189
  %191 = bitcast i8* %190 to %class.GrGLSLShaderBuilder*
  %192 = load i8*, i8** %26, align 8
  %193 = load i8*, i8** %36, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %191, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.74, i64 0, i64 0), i8* %192, i8* %193)
  %194 = load i8*, i8** %43, align 8
  %195 = getelementptr i8, i8* %194, i64 -24
  %196 = bitcast i8* %195 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = getelementptr inbounds i8, i8* %48, i64 %197
  %199 = getelementptr inbounds i8, i8* %198, i64 160
  %200 = getelementptr inbounds i8, i8* %198, i64 488
  %201 = bitcast i8* %200 to i32*
  %202 = load i32, i32* %201, align 8
  %203 = bitcast i8* %199 to %class.SkString**
  %204 = load %class.SkString*, %class.SkString** %203, align 8
  %205 = sext i32 %202 to i64
  %206 = getelementptr inbounds %class.SkString, %class.SkString* %204, i64 %205
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %206, i64 -1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.75, i64 0, i64 0)) #12
  %207 = load i8, i8* %18, align 1, !range !2
  %208 = icmp eq i8 %207, 0
  %209 = load i8*, i8** %43, align 8
  %210 = getelementptr i8, i8* %209, i64 -24
  %211 = bitcast i8* %210 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = getelementptr inbounds i8, i8* %48, i64 %212
  %214 = bitcast i8* %213 to %class.GrGLSLShaderBuilder*
  br i1 %208, label %218, label %215

215:                                              ; preds = %185
  %216 = load i8*, i8** %26, align 8
  %217 = load i8*, i8** %36, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %214, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.76, i64 0, i64 0), i8* %216, i8* %217)
  br label %220

218:                                              ; preds = %185
  %219 = load i8*, i8** %36, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %214, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.77, i64 0, i64 0), i8* %219)
  br label %220

220:                                              ; preds = %218, %215
  %221 = load i8*, i8** %43, align 8
  %222 = getelementptr i8, i8* %221, i64 -24
  %223 = bitcast i8* %222 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = getelementptr inbounds i8, i8* %48, i64 %224
  %226 = getelementptr inbounds i8, i8* %225, i64 160
  %227 = getelementptr inbounds i8, i8* %225, i64 488
  %228 = bitcast i8* %227 to i32*
  %229 = load i32, i32* %228, align 8
  %230 = bitcast i8* %226 to %class.SkString**
  %231 = load %class.SkString*, %class.SkString** %230, align 8
  %232 = sext i32 %229 to i64
  %233 = getelementptr inbounds %class.SkString, %class.SkString* %231, i64 %232
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %233, i64 -1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.78, i64 0, i64 0)) #12
  %234 = load %class.GrShaderCaps*, %class.GrShaderCaps** %57, align 8
  %235 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %234, i64 0, i32 2
  %236 = bitcast i56* %235 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = and i64 %237, 131072
  %239 = icmp eq i64 %238, 0
  br i1 %239, label %240, label %254

240:                                              ; preds = %220
  %241 = load i8*, i8** %43, align 8
  %242 = getelementptr i8, i8* %241, i64 -24
  %243 = bitcast i8* %242 to i64*
  %244 = load i64, i64* %243, align 8
  %245 = getelementptr inbounds i8, i8* %48, i64 %244
  %246 = getelementptr inbounds i8, i8* %245, i64 160
  %247 = getelementptr inbounds i8, i8* %245, i64 488
  %248 = bitcast i8* %247 to i32*
  %249 = load i32, i32* %248, align 8
  %250 = bitcast i8* %246 to %class.SkString**
  %251 = load %class.SkString*, %class.SkString** %250, align 8
  %252 = sext i32 %249 to i64
  %253 = getelementptr inbounds %class.SkString, %class.SkString* %251, i64 %252
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %253, i64 -1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.70, i64 0, i64 0)) #12
  br label %254

254:                                              ; preds = %220, %240
  %255 = load i8, i8* %18, align 1, !range !2
  %256 = icmp eq i8 %255, 0
  %257 = load i8*, i8** %43, align 8
  %258 = getelementptr i8, i8* %257, i64 -24
  %259 = bitcast i8* %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = getelementptr inbounds i8, i8* %48, i64 %260
  br i1 %256, label %265, label %262

262:                                              ; preds = %254
  %263 = bitcast i8* %261 to %class.GrGLSLShaderBuilder*
  %264 = load i8*, i8** %26, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %263, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.79, i64 0, i64 0), i8* %264)
  br label %274

265:                                              ; preds = %254
  %266 = getelementptr inbounds i8, i8* %261, i64 160
  %267 = getelementptr inbounds i8, i8* %261, i64 488
  %268 = bitcast i8* %267 to i32*
  %269 = load i32, i32* %268, align 8
  %270 = bitcast i8* %266 to %class.SkString**
  %271 = load %class.SkString*, %class.SkString** %270, align 8
  %272 = sext i32 %269 to i64
  %273 = getelementptr inbounds %class.SkString, %class.SkString* %271, i64 %272
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %273, i64 -1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.80, i64 0, i64 0)) #12
  br label %274

274:                                              ; preds = %265, %262
  %275 = load i8*, i8** %43, align 8
  %276 = getelementptr i8, i8* %275, i64 -24
  %277 = bitcast i8* %276 to i64*
  %278 = load i64, i64* %277, align 8
  %279 = getelementptr inbounds i8, i8* %48, i64 %278
  %280 = getelementptr inbounds i8, i8* %279, i64 160
  %281 = getelementptr inbounds i8, i8* %279, i64 488
  %282 = bitcast i8* %281 to i32*
  %283 = load i32, i32* %282, align 8
  %284 = bitcast i8* %280 to %class.SkString**
  %285 = load %class.SkString*, %class.SkString** %284, align 8
  %286 = sext i32 %283 to i64
  %287 = getelementptr inbounds %class.SkString, %class.SkString* %285, i64 %286
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %287, i64 -1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.81, i64 0, i64 0)) #12
  br label %288

288:                                              ; preds = %169, %274
  %289 = load i8*, i8** %43, align 8
  %290 = getelementptr i8, i8* %289, i64 -24
  %291 = bitcast i8* %290 to i64*
  %292 = load i64, i64* %291, align 8
  %293 = getelementptr inbounds i8, i8* %48, i64 %292
  %294 = bitcast i8* %293 to %class.GrGLSLShaderBuilder*
  %295 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 8
  %296 = load i8*, i8** %295, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %294, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.82, i64 0, i64 0), i8* %296)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %32) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #12
  ret void
}

declare void @_ZN12GrMeshDrawOp13PatternHelperC1EPNS_6TargetE15GrPrimitiveTypem5sk_spIK8GrBufferEiiii(%"class.GrMeshDrawOp::PatternHelper"*, %"class.GrMeshDrawOp::Target"*, i8 zeroext, i64, %class.sk_sp.76*, i32, i32, i32, i32) unnamed_addr #2

declare i32 @_ZN11GrUniqueKey14GenerateDomainEv() local_unnamed_addr #2

declare i32 @_Z17GrResourceKeyHashPKjm(i32*, i64) local_unnamed_addr #2

declare void @_ZN18GrResourceProvider26createPatternedIndexBufferEPKtiiiPK11GrUniqueKey(%class.sk_sp.120* sret, %class.GrResourceProvider*, i16*, i32, i32, i32, %class.GrUniqueKey*) local_unnamed_addr #2

declare void @_ZN18GrResourceProvider23findResourceByUniqueKeyERK11GrUniqueKey(%class.sk_sp.199* sret, %class.GrResourceProvider*, %class.GrUniqueKey* dereferenceable(56)) local_unnamed_addr #2

declare void @_ZN7GrStyle14initPathEffectE5sk_spI12SkPathEffectE(%class.GrStyle*, %class.sk_sp.60*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrOp* @_ZN24GrSimpleMeshDrawOpHelper13FactoryHelperI21ButtCapDashedCircleOpJRK8SkMatrixR7SkPointRfS7_S7_S7_S7_S7_EEENSt3__110unique_ptrI4GrOpNS8_14default_deleteISA_EEEEP18GrRecordingContextO7GrPaintDpOT0_(%class.GrRecordingContext*, %class.GrPaint* dereferenceable(48), %class.SkMatrix* dereferenceable(40), %struct.SkPoint* dereferenceable(8), float* dereferenceable(4), float* dereferenceable(4), float* dereferenceable(4), float* dereferenceable(4), float* dereferenceable(4), float* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %11 = alloca %struct.SkRGBA4f, align 4
  %12 = bitcast %struct.SkRGBA4f* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #12
  %13 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 5
  %14 = bitcast %struct.SkRGBA4f* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %12, i8* align 4 %14, i64 16, i1 false)
  %15 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 3
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %10
  %19 = tail call i8* @_Znwm(i64 208) #15
  br label %24

20:                                               ; preds = %10
  %21 = tail call i8* @_Znwm(i64 240) #12
  %22 = getelementptr inbounds i8, i8* %21, i64 208
  %23 = bitcast i8* %22 to %class.GrProcessorSet*
  tail call void @_ZN14GrProcessorSetC1EO7GrPaint(%class.GrProcessorSet* %23, %class.GrPaint* dereferenceable(48) %1) #12
  br label %24

24:                                               ; preds = %20, %18
  %25 = phi i8* [ %21, %20 ], [ %19, %18 ]
  %26 = phi %class.GrProcessorSet* [ %23, %20 ], [ null, %18 ]
  %27 = bitcast i8* %25 to %class.ButtCapDashedCircleOp*
  %28 = bitcast %struct.SkPoint* %3 to <2 x float>*
  %29 = load <2 x float>, <2 x float>* %28, align 4
  %30 = load float, float* %4, align 4
  %31 = load float, float* %5, align 4
  %32 = load float, float* %6, align 4
  %33 = load float, float* %7, align 4
  %34 = load float, float* %8, align 4
  %35 = load float, float* %9, align 4
  call void @_ZN21ButtCapDashedCircleOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrix7SkPointffffff(%class.ButtCapDashedCircleOp* nonnull %27, %class.GrProcessorSet* %26, %struct.SkRGBA4f* nonnull dereferenceable(16) %11, %class.SkMatrix* dereferenceable(40) %2, <2 x float> %29, float %30, float %31, float %32, float %33, float %34, float %35) #12
  %36 = bitcast i8* %25 to %class.GrOp*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #12
  ret %class.GrOp* %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21ButtCapDashedCircleOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrix7SkPointffffff(%class.ButtCapDashedCircleOp*, %class.GrProcessorSet*, %struct.SkRGBA4f* dereferenceable(16), %class.SkMatrix* dereferenceable(40), <2 x float>, float, float, float, float, float, float) unnamed_addr #0 comdat align 2 {
  %12 = alloca <2 x float>, align 8
  %13 = bitcast <2 x float>* %12 to %struct.SkPoint*
  %14 = alloca %struct.SkPoint, align 4
  %15 = alloca %struct.SkRGBA4f, align 8
  store <2 x float> %4, <2 x float>* %12, align 8
  %16 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 0
  %17 = load atomic i8, i8* bitcast (i64* @_ZGVZN21ButtCapDashedCircleOp7ClassIDEvE8kClassID to i8*) acquire, align 8
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %27, !prof !3

19:                                               ; preds = %11
  %20 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN21ButtCapDashedCircleOp7ClassIDEvE8kClassID) #12
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %27, label %22

22:                                               ; preds = %19
  %23 = atomicrmw add i32* getelementptr inbounds (%"struct.std::__1::atomic.155", %"struct.std::__1::atomic.155"* @_ZN4GrOp14gCurrOpClassIDE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 329, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i64 0, i64 0)) #16
  unreachable

26:                                               ; preds = %22
  store i32 %23, i32* @_ZZN21ButtCapDashedCircleOp7ClassIDEvE8kClassID, align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN21ButtCapDashedCircleOp7ClassIDEvE8kClassID) #12
  br label %27

27:                                               ; preds = %11, %19, %26
  %28 = load i32, i32* @_ZZN21ButtCapDashedCircleOp7ClassIDEvE8kClassID, align 4
  tail call void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp* %16, i32 %28) #12
  %29 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV21ButtCapDashedCircleOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %30 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 1
  %31 = bitcast %class.SkMatrix* %30 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %31, align 4
  %32 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 1, i32 0, i64 4
  %33 = bitcast float* %32 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %33, align 4
  %34 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 1, i32 0, i64 8
  store float 1.000000e+00, float* %34, align 4
  %35 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 1, i32 1
  store i32 16, i32* %35, align 4
  %36 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 2
  tail call void @_ZN24GrSimpleMeshDrawOpHelperC1EP14GrProcessorSet8GrAATypeNS_10InputFlagsE(%class.GrSimpleMeshDrawOpHelper* %36, %class.GrProcessorSet* %1, i32 1, i8 zeroext 0) #12
  %37 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 3, i32 0, i32 0, i64 56
  %38 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 3, i32 0, i32 0, i64 0
  %39 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 3, i32 0, i32 0, i64 64
  %40 = bitcast i8* %39 to i64*
  %41 = bitcast i8* %37 to i8**
  store i8* %38, i8** %41, align 8
  store i64 8589934592, i64* %40, align 8
  %42 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 7
  %43 = bitcast %struct.GrSimpleMesh** %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false)
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* %3, %struct.SkPoint* nonnull %13, %struct.SkPoint* nonnull %13, i32 1) #12
  %44 = call float @_ZNK8SkMatrix9mapRadiusEf(%class.SkMatrix* %3, float %5) #12
  %45 = call float @_ZNK8SkMatrix9mapRadiusEf(%class.SkMatrix* %3, float %6) #12
  %46 = bitcast %struct.SkPoint* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #12
  %47 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %14, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %47, align 4
  %48 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %14, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %48, align 4
  %49 = fcmp une float %7, 0.000000e+00
  br i1 %49, label %51, label %50

50:                                               ; preds = %27
  store float 1.000000e+00, float* %47, align 4
  store float 0.000000e+00, float* %48, align 4
  br label %54

51:                                               ; preds = %27
  %52 = call float @sinf(float %7) #12
  store float %52, float* %48, align 4
  %53 = call float @cosf(float %7) #12
  store float %53, float* %47, align 4
  br label %54

54:                                               ; preds = %51, %50
  call void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix* %3, %struct.SkPoint* nonnull %14, %struct.SkPoint* nonnull %14, i32 1) #12
  %55 = load float, float* %48, align 4
  %56 = load float, float* %47, align 4
  %57 = call float @atan2f(float %55, float %56) #12
  %58 = bitcast %class.SkMatrix* %3 to <2 x float>*
  %59 = load <2 x float>, <2 x float>* %58, align 4
  %60 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 3
  %61 = bitcast float* %60 to <2 x float>*
  %62 = load <2 x float>, <2 x float>* %61, align 4
  %63 = shufflevector <2 x float> %62, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %64 = fmul <2 x float> %59, %63
  %65 = extractelement <2 x float> %64, i32 0
  %66 = extractelement <2 x float> %64, i32 1
  %67 = fsub float %65, %66
  %68 = fcmp olt float %67, 0.000000e+00
  %69 = fadd float %8, %9
  %70 = fmul float %69, 5.000000e-01
  %71 = fadd float %70, %10
  %72 = call float @fmodf(float %71, float %69) #12
  %73 = fsub float %72, %70
  %74 = call float @llvm.fabs.f32(float %45) #12
  %75 = fcmp ole float %74, 0x3F30000000000000
  %76 = fmul float %45, 5.000000e-01
  %77 = select i1 %75, float 5.000000e-01, float %76
  %78 = fadd float %44, %77
  %79 = fsub float %44, %77
  %80 = fadd float %78, 5.000000e-01
  %81 = fadd float %79, -5.000000e-01
  %82 = bitcast %class.SkMatrix* %30 to i8*
  %83 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 4 %83, i64 40, i1 false)
  %84 = load <2 x float>, <2 x float>* %12, align 8
  %85 = insertelement <2 x float> undef, float %80, i32 0
  %86 = shufflevector <2 x float> %85, <2 x float> undef, <2 x i32> zeroinitializer
  %87 = fsub <2 x float> %84, %86
  %88 = fadd <2 x float> %86, %84
  %89 = fsub float -0.000000e+00, %69
  %90 = select i1 %68, float %89, float %69
  %91 = bitcast i8* %37 to %class.SkTArray.203*
  %92 = bitcast %struct.SkRGBA4f* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92)
  %93 = bitcast %struct.SkRGBA4f* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %92, i8* align 4 %93, i64 16, i1 false)
  call void @_ZN8SkTArrayIN21ButtCapDashedCircleOp6CircleELb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.203* %91, i32 1, i32 1) #12
  %94 = bitcast i8* %37 to %"struct.ButtCapDashedCircleOp::Circle"**
  %95 = load %"struct.ButtCapDashedCircleOp::Circle"*, %"struct.ButtCapDashedCircleOp::Circle"** %94, align 8
  %96 = load i64, i64* %40, align 8
  %97 = lshr i64 %96, 1
  %98 = and i64 %97, 2147483647
  %99 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %95, i64 %98
  %100 = add i64 %96, 2
  %101 = and i64 %100, 4294967294
  %102 = and i64 %96, -4294967295
  %103 = or i64 %101, %102
  store i64 %103, i64* %40, align 8
  %104 = bitcast %"struct.ButtCapDashedCircleOp::Circle"* %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* nonnull align 8 %92, i64 16, i1 false)
  %105 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %95, i64 %98, i32 1
  store float %80, float* %105, align 4
  %106 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %95, i64 %98, i32 2
  store float %81, float* %106, align 4
  %107 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %95, i64 %98, i32 3
  store float %8, float* %107, align 4
  %108 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %95, i64 %98, i32 4
  store float %90, float* %108, align 4
  %109 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %95, i64 %98, i32 5
  store float %57, float* %109, align 4
  %110 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %95, i64 %98, i32 6
  store float %73, float* %110, align 4
  %111 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %95, i64 %98, i32 7
  %112 = bitcast %struct.SkRect* %111 to <2 x float>*
  store <2 x float> %87, <2 x float>* %112, align 4
  %113 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %95, i64 %98, i32 7, i32 2
  %114 = bitcast float* %113 to <2 x float>*
  store <2 x float> %88, <2 x float>* %114, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92)
  %115 = load <2 x float>, <2 x float>* %12, align 8
  %116 = shufflevector <2 x float> %115, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %117 = insertelement <4 x float> undef, float %78, i32 0
  %118 = shufflevector <4 x float> %117, <4 x float> undef, <4 x i32> zeroinitializer
  %119 = fsub <4 x float> %116, %118
  %120 = fadd <4 x float> %116, %118
  %121 = shufflevector <4 x float> %119, <4 x float> %120, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %122 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0
  %123 = bitcast float* %122 to <4 x float>*
  store <4 x float> %121, <4 x float>* %123, align 8
  %124 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  store i16 1, i16* %124, align 2
  %125 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 4
  store i32 16, i32* %125, align 8
  %126 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 5
  store i32 48, i32* %126, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #12
  ret void
}

declare float @_ZNK8SkMatrix9mapRadiusEf(%class.SkMatrix*, float) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare float @sinf(float) local_unnamed_addr #13

; Function Attrs: nofree nounwind
declare float @cosf(float) local_unnamed_addr #13

; Function Attrs: nofree nounwind
declare float @atan2f(float, float) local_unnamed_addr #13

; Function Attrs: nofree nounwind
declare float @fmodf(float, float) local_unnamed_addr #13

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21ButtCapDashedCircleOpD2Ev(%class.ButtCapDashedCircleOp*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV21ButtCapDashedCircleOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 3, i32 0, i32 0, i64 64
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 3, i32 0, i32 0, i64 56
  %10 = bitcast i8* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #12
  br label %12

12:                                               ; preds = %1, %8
  %13 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 2
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD1Ev(%class.GrSimpleMeshDrawOpHelper* %13) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %14 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %class.GrOp*, %class.GrOp** %14, align 8
  store %class.GrOp* null, %class.GrOp** %14, align 8
  %16 = icmp eq %class.GrOp* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  %18 = bitcast %class.GrOp* %15 to void (%class.GrOp*)***
  %19 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %19, i64 1
  %21 = load void (%class.GrOp*)*, void (%class.GrOp*)** %20, align 8
  tail call void %21(%class.GrOp* nonnull %15) #12
  br label %22

22:                                               ; preds = %12, %17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21ButtCapDashedCircleOpD0Ev(%class.ButtCapDashedCircleOp*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV21ButtCapDashedCircleOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 3, i32 0, i32 0, i64 64
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 3, i32 0, i32 0, i64 56
  %10 = bitcast i8* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #12
  br label %12

12:                                               ; preds = %8, %1
  %13 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 2
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD1Ev(%class.GrSimpleMeshDrawOpHelper* %13) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %14 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %class.GrOp*, %class.GrOp** %14, align 8
  store %class.GrOp* null, %class.GrOp** %14, align 8
  %16 = icmp eq %class.GrOp* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  %18 = bitcast %class.GrOp* %15 to void (%class.GrOp*)***
  %19 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %19, i64 1
  %21 = load void (%class.GrOp*)*, void (%class.GrOp*)** %20, align 8
  tail call void %21(%class.GrOp* nonnull %15) #12
  br label %22

22:                                               ; preds = %12, %17
  %23 = bitcast %class.ButtCapDashedCircleOp* %0 to i8*
  tail call void @_ZdlPv(i8* %23) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK21ButtCapDashedCircleOp4nameEv(%class.ButtCapDashedCircleOp*) unnamed_addr #4 comdat align 2 {
  ret i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.85, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK21ButtCapDashedCircleOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.ButtCapDashedCircleOp*, %"class.std::__1::function.137"*) unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 8
  %4 = load %class.GrProgramInfo*, %class.GrProgramInfo** %3, align 8
  %5 = icmp eq %class.GrProgramInfo* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %4, i64 0, i32 5
  %8 = load %class.GrPipeline*, %class.GrPipeline** %7, align 8
  tail call void @_ZNK10GrPipeline12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrPipeline* %8, %"class.std::__1::function.137"* %1) #12
  br label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 2, i32 0
  %11 = load %class.GrProcessorSet*, %class.GrProcessorSet** %10, align 8
  %12 = icmp eq %class.GrProcessorSet* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZNK14GrProcessorSet12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrProcessorSet* nonnull %11, %"class.std::__1::function.137"* %1) #12
  br label %14

14:                                               ; preds = %13, %9, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN21ButtCapDashedCircleOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps(%class.ButtCapDashedCircleOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps* dereferenceable(232)) unnamed_addr #4 comdat align 2 {
  %5 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 3, i32 6
  %8 = bitcast %struct.SkRect* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, %6
  %11 = icmp sgt i32 %10, 65536
  br i1 %11, label %118, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 2
  %14 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 1, i32 6, i32 2
  %15 = bitcast float* %14 to %class.GrSimpleMeshDrawOpHelper*
  %16 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %17 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 0, i32 6
  %18 = tail call zeroext i1 @_ZNK24GrSimpleMeshDrawOpHelper12isCompatibleERKS_RK6GrCapsRK6SkRectS7_b(%class.GrSimpleMeshDrawOpHelper* %13, %class.GrSimpleMeshDrawOpHelper* dereferenceable(16) %15, %class.GrCaps* dereferenceable(232) %3, %struct.SkRect* dereferenceable(16) %16, %struct.SkRect* dereferenceable(16) %17, i1 zeroext false) #12
  br i1 %18, label %19, label %118

19:                                               ; preds = %12
  %20 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 2, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = and i8 %21, 4
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %34, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 1
  %26 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 1
  %27 = bitcast %class.GrOp* %26 to %class.SkMatrix*
  %28 = icmp eq %class.SkMatrix* %25, %27
  br i1 %28, label %34, label %29

29:                                               ; preds = %24
  %30 = bitcast %class.SkMatrix* %25 to i8*
  %31 = bitcast %class.GrOp* %26 to i8*
  %32 = tail call i32 @bcmp(i8* %30, i8* %31, i64 36) #12
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %118

34:                                               ; preds = %19, %24, %29
  %35 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 3, i32 0, i32 0, i64 56
  %36 = bitcast i8* %35 to %class.SkTArray.203*
  %37 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 3, i32 2
  %38 = getelementptr inbounds %class.GrOp*, %class.GrOp** %37, i64 1
  %39 = bitcast %class.GrOp** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = lshr i64 %40, 1
  %42 = trunc i64 %41 to i32
  %43 = and i32 %42, 2147483647
  %44 = bitcast %class.GrOp** %37 to %"struct.ButtCapDashedCircleOp::Circle"**
  %45 = load %"struct.ButtCapDashedCircleOp::Circle"*, %"struct.ButtCapDashedCircleOp::Circle"** %44, align 8
  tail call void @_ZN8SkTArrayIN21ButtCapDashedCircleOp6CircleELb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.203* %36, i32 %43, i32 1) #12
  %46 = icmp eq i32 %43, 0
  br i1 %46, label %94, label %47

47:                                               ; preds = %34
  %48 = bitcast i8* %35 to %"struct.ButtCapDashedCircleOp::Circle"**
  %49 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 3, i32 0, i32 0, i64 64
  %50 = bitcast i8* %49 to i64*
  %51 = zext i32 %43 to i64
  %52 = and i64 %51, 1
  %53 = icmp eq i32 %43, 1
  br i1 %53, label %81, label %54

54:                                               ; preds = %47
  %55 = sub nsw i64 %51, %52
  br label %56

56:                                               ; preds = %56, %54
  %57 = phi i64 [ 0, %54 ], [ %78, %56 ]
  %58 = phi i64 [ %55, %54 ], [ %79, %56 ]
  %59 = load %"struct.ButtCapDashedCircleOp::Circle"*, %"struct.ButtCapDashedCircleOp::Circle"** %48, align 8
  %60 = load i64, i64* %50, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %59, i64 %62
  %64 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %63, i64 %57
  %65 = bitcast %"struct.ButtCapDashedCircleOp::Circle"* %64 to i8*
  %66 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %45, i64 %57
  %67 = bitcast %"struct.ButtCapDashedCircleOp::Circle"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %65, i8* align 4 %67, i64 56, i1 false) #12
  %68 = or i64 %57, 1
  %69 = load %"struct.ButtCapDashedCircleOp::Circle"*, %"struct.ButtCapDashedCircleOp::Circle"** %48, align 8
  %70 = load i64, i64* %50, align 8
  %71 = lshr i64 %70, 1
  %72 = and i64 %71, 2147483647
  %73 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %69, i64 %72
  %74 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %73, i64 %68
  %75 = bitcast %"struct.ButtCapDashedCircleOp::Circle"* %74 to i8*
  %76 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %45, i64 %68
  %77 = bitcast %"struct.ButtCapDashedCircleOp::Circle"* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %75, i8* align 4 %77, i64 56, i1 false) #12
  %78 = add nuw nsw i64 %57, 2
  %79 = add i64 %58, -2
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %56

81:                                               ; preds = %56, %47
  %82 = phi i64 [ 0, %47 ], [ %78, %56 ]
  %83 = icmp eq i64 %52, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81
  %85 = load %"struct.ButtCapDashedCircleOp::Circle"*, %"struct.ButtCapDashedCircleOp::Circle"** %48, align 8
  %86 = load i64, i64* %50, align 8
  %87 = lshr i64 %86, 1
  %88 = and i64 %87, 2147483647
  %89 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %85, i64 %88
  %90 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %89, i64 %82
  %91 = bitcast %"struct.ButtCapDashedCircleOp::Circle"* %90 to i8*
  %92 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %45, i64 %82
  %93 = bitcast %"struct.ButtCapDashedCircleOp::Circle"* %92 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %91, i8* align 4 %93, i64 56, i1 false) #12
  br label %94

94:                                               ; preds = %84, %81, %34
  %95 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 3, i32 0, i32 0, i64 64
  %96 = bitcast i8* %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = and i64 %40, 4294967294
  %99 = add i64 %97, %98
  %100 = and i64 %99, 4294967294
  %101 = and i64 %97, -4294967295
  %102 = or i64 %100, %101
  store i64 %102, i64* %96, align 8
  %103 = load i32, i32* %8, align 8
  %104 = load i32, i32* %5, align 8
  %105 = add nsw i32 %104, %103
  store i32 %105, i32* %5, align 8
  %106 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 3, i32 6, i32 1
  %107 = bitcast float* %106 to i32*
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 5
  %110 = load i32, i32* %109, align 4
  %111 = add nsw i32 %110, %108
  store i32 %111, i32* %109, align 4
  %112 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 3, i32 6, i32 2
  %113 = bitcast float* %112 to i8*
  %114 = load i8, i8* %113, align 8, !range !2
  %115 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 6
  %116 = load i8, i8* %115, align 8, !range !2
  %117 = or i8 %116, %114
  store i8 %117, i8* %115, align 8
  br label %118

118:                                              ; preds = %29, %12, %4, %94
  %119 = phi i32 [ 0, %94 ], [ 2, %4 ], [ 2, %12 ], [ 2, %29 ]
  ret i32 %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21ButtCapDashedCircleOp9onExecuteEP14GrOpFlushStateRK6SkRect(%class.ButtCapDashedCircleOp*, %class.GrOpFlushState*, %struct.SkRect* dereferenceable(16)) unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 8
  %5 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %6 = icmp eq %class.GrProgramInfo* %5, null
  br i1 %6, label %35, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 7
  %9 = load %struct.GrSimpleMesh*, %struct.GrSimpleMesh** %8, align 8
  %10 = icmp eq %struct.GrSimpleMesh* %9, null
  br i1 %10, label %35, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 15
  %13 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass12bindPipelineERK13GrProgramInfoRK6SkRect(%class.GrOpsRenderPass* %13, %class.GrProgramInfo* nonnull dereferenceable(128) %5, %struct.SkRect* dereferenceable(16) %2) #12
  %14 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %5, i64 0, i32 5
  %15 = load %class.GrPipeline*, %class.GrPipeline** %14, align 8
  %16 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %15, i64 0, i32 5
  %17 = load i8, i8* %16, align 8
  %18 = and i8 %17, 32
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 10
  %22 = load %"struct.GrOpFlushState::OpArgs"*, %"struct.GrOpFlushState::OpArgs"** %21, align 8
  %23 = getelementptr inbounds %"struct.GrOpFlushState::OpArgs", %"struct.GrOpFlushState::OpArgs"* %22, i64 0, i32 4
  %24 = load %class.GrAppliedClip*, %class.GrAppliedClip** %23, align 8
  %25 = getelementptr inbounds %class.GrAppliedClip, %class.GrAppliedClip* %24, i64 0, i32 0, i32 0, i32 1
  %26 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass14setScissorRectERK7SkIRect(%class.GrOpsRenderPass* %26, %struct.SkIRect* dereferenceable(16) %25) #12
  br label %27

27:                                               ; preds = %11, %20
  %28 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %29 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %28, i64 0, i32 7
  %30 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %29, align 8
  %31 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %28, i64 0, i32 5
  %32 = load %class.GrPipeline*, %class.GrPipeline** %31, align 8
  %33 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrOpsRenderPass* %33, %class.GrGeometryProcessor* dereferenceable(80) %30, %class.GrSurfaceProxy** null, %class.GrPipeline* dereferenceable(128) %32) #12
  %34 = load %struct.GrSimpleMesh*, %struct.GrSimpleMesh** %8, align 8
  tail call void @_ZN14GrOpFlushState8drawMeshERK12GrSimpleMesh(%class.GrOpFlushState* %1, %struct.GrSimpleMesh* dereferenceable(48) %34) #12
  br label %35

35:                                               ; preds = %7, %3, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK21ButtCapDashedCircleOp18fixedFunctionFlagsEv(%class.ButtCapDashedCircleOp*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 2
  %3 = tail call i32 @_ZNK24GrSimpleMeshDrawOpHelper18fixedFunctionFlagsEv(%class.GrSimpleMeshDrawOpHelper* %2) #12
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN21ButtCapDashedCircleOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType(%class.ButtCapDashedCircleOp*, %class.GrCaps* dereferenceable(232), %class.GrAppliedClip*, i32) unnamed_addr #4 comdat align 2 {
  %5 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 3, i32 0, i32 0, i64 56
  %6 = bitcast i8* %5 to %"struct.ButtCapDashedCircleOp::Circle"**
  %7 = load %"struct.ButtCapDashedCircleOp::Circle"*, %"struct.ButtCapDashedCircleOp::Circle"** %6, align 8
  %8 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 2
  %10 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 6
  %11 = tail call i32 @_ZN24GrSimpleMeshDrawOpHelper18finalizeProcessorsERK6GrCapsPK13GrAppliedClip11GrClampType27GrProcessorAnalysisCoverageP8SkRGBA4fIL11SkAlphaType2EEPb(%class.GrSimpleMeshDrawOpHelper* %9, %class.GrCaps* dereferenceable(232) %1, %class.GrAppliedClip* %2, i32 %3, i32 1, %struct.SkRGBA4f* %8, i8* %10) #12
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrProgramInfo* @_ZN21ButtCapDashedCircleOp11programInfoEv(%class.ButtCapDashedCircleOp*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 8
  %3 = load %class.GrProgramInfo*, %class.GrProgramInfo** %2, align 8
  ret %class.GrProgramInfo* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21ButtCapDashedCircleOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.ButtCapDashedCircleOp*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip* dereferenceable(72), %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #4 comdat align 2 {
  %9 = alloca %class.SkMatrix, align 16
  %10 = bitcast %class.SkMatrix* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #12
  %11 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 1
  %12 = bitcast %class.SkMatrix* %9 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %12, align 16
  %13 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 4
  %14 = bitcast float* %13 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %14, align 16
  %15 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %15, align 16
  store i32 16, i32* %11, align 4
  %16 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 1
  %17 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = trunc i32 %18 to i8
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %8
  %22 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %16) #12
  %23 = zext i8 %22 to i32
  store i32 %23, i32* %17, align 4
  br label %24

24:                                               ; preds = %21, %8
  %25 = phi i32 [ %23, %21 ], [ %18, %8 ]
  %26 = and i32 %25, 15
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %9) #12
  br label %32

30:                                               ; preds = %24
  %31 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* %16, %class.SkMatrix* nonnull %9) #12
  br i1 %31, label %32, label %59

32:                                               ; preds = %28, %30
  %33 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 6
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  %36 = call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %2, i32 193, i32 8) #12
  %37 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %2, i64 0, i32 1
  %38 = bitcast i8** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = ptrtoint i8* %36 to i64
  %41 = sub i64 %40, %39
  %42 = trunc i64 %41 to i32
  %43 = getelementptr inbounds i8, i8* %36, i64 184
  store i8* %43, i8** %37, align 8
  call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %2, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZN36ButtCapDashedCircleGeometryProcessor4MakeEPS_bRK8SkMatrixEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESB_, i32 %42) #12
  %44 = bitcast i8* %36 to %class.GrGeometryProcessor*
  call void @_ZN19GrGeometryProcessorC2EN11GrProcessor7ClassIDE(%class.GrGeometryProcessor* %44, i32 4) #12
  %45 = bitcast i8* %36 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV36ButtCapDashedCircleGeometryProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds i8, i8* %36, i64 76
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %46, i8* nonnull align 16 %10, i64 40, i1 false) #12
  %47 = getelementptr inbounds i8, i8* %36, i64 120
  %48 = bitcast i8* %47 to %"class.GrGeometryProcessor::Attribute"*
  %49 = getelementptr inbounds i8, i8* %36, i64 152
  %50 = getelementptr inbounds i8, i8* %36, i64 168
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.112 to i8*), i64 16, i1 false) #12
  %51 = select i1 %35, i64 133143986193, i64 133143986179
  %52 = getelementptr inbounds i8, i8* %36, i64 136
  %53 = bitcast i8* %52 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i8** %53, align 8
  %54 = getelementptr inbounds i8, i8* %36, i64 144
  %55 = bitcast i8* %54 to i64*
  store i64 %51, i64* %55, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.87 to i8*), i64 16, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.89 to i8*), i64 16, i1 false) #12
  call void @_ZN19GrGeometryProcessor19setVertexAttributesEPKNS_9AttributeEi(%class.GrGeometryProcessor* %44, %"class.GrGeometryProcessor::Attribute"* %48, i32 4) #12
  %56 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 2
  %57 = call %class.GrProgramInfo* @_ZN24GrSimpleMeshDrawOpHelper17createProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewEP19GrGeometryProcessor15GrPrimitiveType18GrXferBarrierFlags8GrLoadOp(%class.GrSimpleMeshDrawOpHelper* %56, %class.GrCaps* %1, %class.SkArenaAlloc* %2, %class.GrSurfaceProxyView* dereferenceable(16) %3, %class.GrAppliedClip* dereferenceable(72) %4, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %5, %class.GrGeometryProcessor* %44, i8 zeroext 0, i32 %6, i32 %7) #12
  %58 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 8
  store %class.GrProgramInfo* %57, %class.GrProgramInfo** %58, align 8
  br label %59

59:                                               ; preds = %30, %32
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21ButtCapDashedCircleOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE(%class.ButtCapDashedCircleOp*, %"class.GrMeshDrawOp::Target"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.sk_sp.76, align 8
  %4 = alloca i32, align 4
  %5 = alloca %class.sk_sp.76, align 8
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 8
  %8 = load %class.GrProgramInfo*, %class.GrProgramInfo** %7, align 8
  %9 = icmp eq %class.GrProgramInfo* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 0
  tail call void @_ZN12GrMeshDrawOp17createProgramInfoEPNS_6TargetE(%class.GrMeshDrawOp* %11, %"class.GrMeshDrawOp::Target"* %1) #12
  %12 = load %class.GrProgramInfo*, %class.GrProgramInfo** %7, align 8
  %13 = icmp eq %class.GrProgramInfo* %12, null
  br i1 %13, label %360, label %14

14:                                               ; preds = %10, %2
  %15 = phi %class.GrProgramInfo* [ %12, %10 ], [ %8, %2 ]
  %16 = bitcast %class.sk_sp.76* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %class.sk_sp.76, %class.sk_sp.76* %3, i64 0, i32 0
  store %class.GrBuffer* null, %class.GrBuffer** %17, align 8
  %18 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #12
  store i32 -1431655766, i32* %4, align 4
  %19 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %15, i64 0, i32 7
  %20 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %19, align 8
  %21 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %20, i64 0, i32 3, i32 3
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 4
  %24 = load i32, i32* %23, align 8
  %25 = bitcast %"class.GrMeshDrawOp::Target"* %1 to i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.76*, i32*)***
  %26 = load i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.76*, i32*)**, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.76*, i32*)*** %25, align 8
  %27 = getelementptr inbounds i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.76*, i32*)*, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.76*, i32*)** %26, i64 3
  %28 = load i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.76*, i32*)*, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.76*, i32*)** %27, align 8
  %29 = call i8* %28(%"class.GrMeshDrawOp::Target"* %1, i64 %22, i32 %24, %class.sk_sp.76* nonnull %3, i32* nonnull %4) #12
  %30 = icmp eq i8* %29, null
  br i1 %30, label %31, label %32

31:                                               ; preds = %14
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1671, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.50, i64 0, i64 0)) #12
  br label %351

32:                                               ; preds = %14
  %33 = bitcast %class.sk_sp.76* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  %34 = getelementptr inbounds %class.sk_sp.76, %class.sk_sp.76* %5, i64 0, i32 0
  store %class.GrBuffer* null, %class.GrBuffer** %34, align 8
  %35 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #12
  store i32 0, i32* %6, align 4
  %36 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = bitcast %"class.GrMeshDrawOp::Target"* %1 to i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.76*, i32*)***
  %39 = load i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.76*, i32*)**, i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.76*, i32*)*** %38, align 8
  %40 = getelementptr inbounds i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.76*, i32*)*, i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.76*, i32*)** %39, i64 4
  %41 = load i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.76*, i32*)*, i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.76*, i32*)** %40, align 8
  %42 = call i16* %41(%"class.GrMeshDrawOp::Target"* %1, i32 %37, %class.sk_sp.76* nonnull %5, i32* nonnull %6) #12
  %43 = icmp eq i16* %42, null
  br i1 %43, label %44, label %45

44:                                               ; preds = %32
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1679, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.51, i64 0, i64 0)) #12
  br label %342

45:                                               ; preds = %32
  %46 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 3, i32 0, i32 0, i64 56
  %47 = bitcast i8* %46 to %"struct.ButtCapDashedCircleOp::Circle"**
  %48 = load %"struct.ButtCapDashedCircleOp::Circle"*, %"struct.ButtCapDashedCircleOp::Circle"** %47, align 8
  %49 = icmp eq %"struct.ButtCapDashedCircleOp::Circle"* %48, null
  br i1 %49, label %60, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 3, i32 0, i32 0, i64 64
  %52 = bitcast i8* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = lshr i64 %53, 1
  %55 = and i64 %54, 2147483647
  %56 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %48, i64 %55
  %57 = icmp eq i64 %55, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %50
  %59 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 6
  br label %120

60:                                               ; preds = %313, %45, %50
  %61 = bitcast %"class.GrMeshDrawOp::Target"* %1 to %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)***
  %62 = load %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)**, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*** %61, align 8
  %63 = getelementptr inbounds %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)** %62, i64 29
  %64 = load %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)** %63, align 8
  %65 = call %class.SkArenaAlloc* %64(%"class.GrMeshDrawOp::Target"* %1) #12
  %66 = call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %65, i32 57, i32 8) #12
  %67 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %65, i64 0, i32 1
  %68 = bitcast i8** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = ptrtoint i8* %66 to i64
  %71 = sub i64 %70, %69
  %72 = trunc i64 %71 to i32
  %73 = getelementptr inbounds i8, i8* %66, i64 48
  store i8* %73, i8** %67, align 8
  call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %65, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeI12GrSimpleMeshJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS3_ENUlPcE_8__invokeESC_, i32 %72) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 48, i1 false) #12
  %74 = getelementptr inbounds %class.ButtCapDashedCircleOp, %class.ButtCapDashedCircleOp* %0, i64 0, i32 7
  %75 = bitcast %struct.GrSimpleMesh** %74 to i8**
  store i8* %66, i8** %75, align 8
  %76 = bitcast %class.sk_sp.76* %5 to i64*
  %77 = load i64, i64* %76, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %34, align 8
  %78 = load i32, i32* %36, align 4
  %79 = load i32, i32* %6, align 4
  %80 = load i32, i32* %23, align 8
  %81 = trunc i32 %80 to i16
  %82 = add i16 %81, -1
  %83 = bitcast %class.sk_sp.76* %3 to i64*
  %84 = load i64, i64* %83, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %17, align 8
  %85 = load i32, i32* %4, align 4
  %86 = bitcast i8* %66 to %class.GrBuffer**
  %87 = load %class.GrBuffer*, %class.GrBuffer** %86, align 8
  %88 = bitcast i8* %66 to i64*
  store i64 %77, i64* %88, align 8
  %89 = icmp eq %class.GrBuffer* %87, null
  br i1 %89, label %95, label %90

90:                                               ; preds = %60
  %91 = bitcast %class.GrBuffer* %87 to void (%class.GrBuffer*)***
  %92 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %91, align 8
  %93 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %92, i64 3
  %94 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %93, align 8
  call void %94(%class.GrBuffer* nonnull %87) #12
  br label %95

95:                                               ; preds = %90, %60
  %96 = getelementptr inbounds i8, i8* %66, i64 8
  %97 = bitcast i8* %96 to i32*
  store i32 %78, i32* %97, align 8
  %98 = getelementptr inbounds i8, i8* %66, i64 12
  %99 = bitcast i8* %98 to i32*
  store i32 0, i32* %99, align 4
  %100 = getelementptr inbounds i8, i8* %66, i64 20
  %101 = bitcast i8* %100 to i32*
  store i32 %79, i32* %101, align 4
  %102 = getelementptr inbounds i8, i8* %66, i64 24
  %103 = bitcast i8* %102 to i16*
  store i16 0, i16* %103, align 8
  %104 = getelementptr inbounds i8, i8* %66, i64 26
  %105 = bitcast i8* %104 to i16*
  store i16 %82, i16* %105, align 2
  %106 = getelementptr inbounds i8, i8* %66, i64 28
  store i8 0, i8* %106, align 4
  %107 = getelementptr inbounds i8, i8* %66, i64 32
  %108 = bitcast i8* %107 to %class.GrBuffer**
  %109 = load %class.GrBuffer*, %class.GrBuffer** %108, align 8
  %110 = bitcast i8* %107 to i64*
  store i64 %84, i64* %110, align 8
  %111 = icmp eq %class.GrBuffer* %109, null
  br i1 %111, label %117, label %112

112:                                              ; preds = %95
  %113 = bitcast %class.GrBuffer* %109 to void (%class.GrBuffer*)***
  %114 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %113, align 8
  %115 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %114, i64 3
  %116 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %115, align 8
  call void %116(%class.GrBuffer* nonnull %109) #12
  br label %117

117:                                              ; preds = %95, %112
  %118 = getelementptr inbounds i8, i8* %66, i64 44
  %119 = bitcast i8* %118 to i32*
  store i32 %85, i32* %119, align 4
  br label %342

120:                                              ; preds = %58, %313
  %121 = phi %"struct.ButtCapDashedCircleOp::Circle"* [ %48, %58 ], [ %316, %313 ]
  %122 = phi i32 [ 0, %58 ], [ %315, %313 ]
  %123 = phi i16* [ %42, %58 ], [ %314, %313 ]
  %124 = phi i8* [ %29, %58 ], [ %310, %313 ]
  %125 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %121, i64 0, i32 2
  %126 = load float, float* %125, align 4
  %127 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %121, i64 0, i32 1
  %128 = load float, float* %127, align 4
  %129 = fdiv float %126, %128
  %130 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %121, i64 0, i32 3
  %131 = bitcast float* %130 to i32*
  %132 = load i32, i32* %131, align 4
  %133 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %121, i64 0, i32 4
  %134 = bitcast float* %133 to i32*
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %121, i64 0, i32 5
  %137 = bitcast float* %136 to i32*
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %121, i64 0, i32 6
  %140 = bitcast float* %139 to i32*
  %141 = load i32, i32* %140, align 4
  %142 = bitcast i32 %135 to float
  %143 = fcmp olt float %142, 0.000000e+00
  br i1 %143, label %144, label %150

144:                                              ; preds = %120
  %145 = fsub float -0.000000e+00, %142
  %146 = bitcast float %145 to i32
  %147 = bitcast i32 %138 to float
  %148 = fsub float -0.000000e+00, %147
  %149 = bitcast float %148 to i32
  br label %150

150:                                              ; preds = %144, %120
  %151 = phi i32 [ %146, %144 ], [ %135, %120 ]
  %152 = phi i32 [ %149, %144 ], [ %138, %120 ]
  %153 = phi i8 [ 1, %144 ], [ 0, %120 ]
  %154 = load i8, i8* %59, align 8, !range !2
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %168, label %156

156:                                              ; preds = %150
  %157 = bitcast %"struct.ButtCapDashedCircleOp::Circle"* %121 to i32*
  %158 = load i32, i32* %157, align 4
  %159 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %121, i64 0, i32 0, i32 1
  %160 = bitcast float* %159 to i32*
  %161 = load i32, i32* %160, align 4
  %162 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %121, i64 0, i32 0, i32 2
  %163 = bitcast float* %162 to i32*
  %164 = load i32, i32* %163, align 4
  %165 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %121, i64 0, i32 0, i32 3
  %166 = bitcast float* %165 to i32*
  %167 = load i32, i32* %166, align 4
  br label %171

168:                                              ; preds = %150
  %169 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %121, i64 0, i32 0
  %170 = call i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f* %169) #12
  br label %171

171:                                              ; preds = %156, %168
  %172 = phi i32 [ %164, %156 ], [ -1431655766, %168 ]
  %173 = phi i32 [ %161, %156 ], [ -1431655766, %168 ]
  %174 = phi i32 [ %158, %156 ], [ %170, %168 ]
  %175 = phi i32 [ %167, %156 ], [ -1431655766, %168 ]
  %176 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %121, i64 0, i32 7, i32 0
  %177 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %121, i64 0, i32 7, i32 2
  %178 = bitcast float* %176 to <2 x float>*
  %179 = load <2 x float>, <2 x float>* %178, align 4
  %180 = fmul <2 x float> %179, <float 5.000000e-01, float 5.000000e-01>
  %181 = bitcast float* %177 to <2 x float>*
  %182 = load <2 x float>, <2 x float>* %181, align 4
  %183 = fmul <2 x float> %182, <float 5.000000e-01, float 5.000000e-01>
  %184 = fadd <2 x float> %180, %183
  %185 = extractelement <2 x float> %179, i32 0
  %186 = extractelement <2 x float> %182, i32 0
  %187 = fsub float %186, %185
  %188 = fmul float %187, 5.000000e-01
  %189 = icmp eq i8 %153, 0
  %190 = bitcast float* %127 to i32*
  %191 = insertelement <2 x float> undef, float %188, i32 0
  %192 = shufflevector <2 x float> %191, <2 x float> undef, <2 x i32> zeroinitializer
  br label %193

193:                                              ; preds = %218, %171
  %194 = phi i64 [ 0, %171 ], [ %235, %218 ]
  %195 = phi i8* [ %124, %171 ], [ %234, %218 ]
  %196 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* @_ZL13kOctagonOuter, i64 0, i64 %194, i32 0
  %197 = bitcast float* %196 to <2 x float>*
  %198 = load <2 x float>, <2 x float>* %197, align 8
  %199 = fmul <2 x float> %192, %198
  %200 = fadd <2 x float> %184, %199
  %201 = extractelement <2 x float> %198, i32 0
  %202 = insertelement <2 x float> undef, float %201, i32 0
  %203 = extractelement <2 x float> %198, i32 1
  %204 = fsub float -0.000000e+00, %203
  %205 = select i1 %189, float %203, float %204
  %206 = insertelement <2 x float> %202, float %205, i32 1
  %207 = bitcast i8* %195 to <2 x float>*
  store <2 x float> %200, <2 x float>* %207, align 1
  %208 = getelementptr inbounds i8, i8* %195, i64 8
  %209 = bitcast i8* %208 to i32*
  store i32 %174, i32* %209, align 1
  %210 = getelementptr inbounds i8, i8* %195, i64 12
  br i1 %155, label %218, label %211

211:                                              ; preds = %193
  %212 = bitcast i8* %210 to i32*
  store i32 %173, i32* %212, align 1
  %213 = getelementptr inbounds i8, i8* %195, i64 16
  %214 = bitcast i8* %213 to i32*
  store i32 %172, i32* %214, align 1
  %215 = getelementptr inbounds i8, i8* %195, i64 20
  %216 = bitcast i8* %215 to i32*
  store i32 %175, i32* %216, align 1
  %217 = getelementptr inbounds i8, i8* %195, i64 24
  br label %218

218:                                              ; preds = %193, %211
  %219 = phi i8* [ %210, %193 ], [ %217, %211 ]
  %220 = bitcast i8* %219 to <2 x float>*
  store <2 x float> %206, <2 x float>* %220, align 1
  %221 = getelementptr inbounds i8, i8* %219, i64 8
  %222 = bitcast i8* %221 to i32*
  %223 = load i32, i32* %190, align 4
  store i32 %223, i32* %222, align 1
  %224 = getelementptr inbounds i8, i8* %219, i64 12
  %225 = bitcast i8* %224 to float*
  store float %129, float* %225, align 1
  %226 = getelementptr inbounds i8, i8* %219, i64 16
  %227 = bitcast i8* %226 to i32*
  store i32 %132, i32* %227, align 1
  %228 = getelementptr inbounds i8, i8* %219, i64 20
  %229 = bitcast i8* %228 to i32*
  store i32 %151, i32* %229, align 1
  %230 = getelementptr inbounds i8, i8* %219, i64 24
  %231 = bitcast i8* %230 to i32*
  store i32 %152, i32* %231, align 1
  %232 = getelementptr inbounds i8, i8* %219, i64 28
  %233 = bitcast i8* %232 to i32*
  store i32 %141, i32* %233, align 1
  %234 = getelementptr inbounds i8, i8* %219, i64 32
  %235 = add nuw nsw i64 %194, 1
  %236 = icmp eq i64 %235, 8
  br i1 %236, label %264, label %193

237:                                              ; preds = %294
  %238 = trunc i32 %122 to i16
  %239 = getelementptr i16, i16* %123, i64 48
  %240 = icmp ult i16* %123, getelementptr inbounds ([48 x i16], [48 x i16]* @_ZL20gStrokeCircleIndices, i64 1, i64 0)
  %241 = icmp ugt i16* %239, getelementptr inbounds ([48 x i16], [48 x i16]* @_ZL20gStrokeCircleIndices, i64 0, i64 0)
  %242 = and i1 %240, %241
  br i1 %242, label %318, label %243

243:                                              ; preds = %237
  %244 = insertelement <8 x i16> undef, i16 %238, i32 0
  %245 = shufflevector <8 x i16> %244, <8 x i16> undef, <8 x i32> zeroinitializer
  %246 = getelementptr i16, i16* %123, i64 48
  %247 = add <8 x i16> %245, <i16 0, i16 1, i16 9, i16 0, i16 9, i16 8, i16 1, i16 2>
  %248 = bitcast i16* %123 to <8 x i16>*
  store <8 x i16> %247, <8 x i16>* %248, align 2, !alias.scope !35, !noalias !38
  %249 = getelementptr i16, i16* %123, i64 8
  %250 = add <8 x i16> %245, <i16 10, i16 1, i16 10, i16 9, i16 2, i16 3, i16 11, i16 2>
  %251 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %250, <8 x i16>* %251, align 2, !alias.scope !35, !noalias !38
  %252 = getelementptr i16, i16* %123, i64 16
  %253 = add <8 x i16> %245, <i16 11, i16 10, i16 3, i16 4, i16 12, i16 3, i16 12, i16 11>
  %254 = bitcast i16* %252 to <8 x i16>*
  store <8 x i16> %253, <8 x i16>* %254, align 2, !alias.scope !35, !noalias !38
  %255 = getelementptr i16, i16* %123, i64 24
  %256 = add <8 x i16> %245, <i16 4, i16 5, i16 13, i16 4, i16 13, i16 12, i16 5, i16 6>
  %257 = bitcast i16* %255 to <8 x i16>*
  store <8 x i16> %256, <8 x i16>* %257, align 2, !alias.scope !35, !noalias !38
  %258 = getelementptr i16, i16* %123, i64 32
  %259 = add <8 x i16> %245, <i16 14, i16 5, i16 14, i16 13, i16 6, i16 7, i16 15, i16 6>
  %260 = bitcast i16* %258 to <8 x i16>*
  store <8 x i16> %259, <8 x i16>* %260, align 2, !alias.scope !35, !noalias !38
  %261 = getelementptr i16, i16* %123, i64 40
  %262 = add <8 x i16> %245, <i16 15, i16 14, i16 7, i16 0, i16 8, i16 7, i16 8, i16 15>
  %263 = bitcast i16* %261 to <8 x i16>*
  store <8 x i16> %262, <8 x i16>* %263, align 2, !alias.scope !35, !noalias !38
  br label %313

264:                                              ; preds = %218, %294
  %265 = phi i64 [ %311, %294 ], [ 0, %218 ]
  %266 = phi i8* [ %310, %294 ], [ %234, %218 ]
  %267 = load float, float* %125, align 4
  %268 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* @_ZL13kOctagonInner, i64 0, i64 %265, i32 0
  %269 = bitcast float* %268 to <2 x float>*
  %270 = load <2 x float>, <2 x float>* %269, align 8
  %271 = insertelement <2 x float> undef, float %267, i32 0
  %272 = shufflevector <2 x float> %271, <2 x float> undef, <2 x i32> zeroinitializer
  %273 = fmul <2 x float> %272, %270
  %274 = fadd <2 x float> %184, %273
  %275 = extractelement <2 x float> %270, i32 1
  %276 = fsub float -0.000000e+00, %275
  %277 = select i1 %189, float %275, float %276
  %278 = extractelement <2 x float> %270, i32 0
  %279 = fmul float %129, %278
  %280 = insertelement <2 x float> undef, float %279, i32 0
  %281 = fmul float %129, %277
  %282 = insertelement <2 x float> %280, float %281, i32 1
  %283 = bitcast i8* %266 to <2 x float>*
  store <2 x float> %274, <2 x float>* %283, align 1
  %284 = getelementptr inbounds i8, i8* %266, i64 8
  %285 = bitcast i8* %284 to i32*
  store i32 %174, i32* %285, align 1
  %286 = getelementptr inbounds i8, i8* %266, i64 12
  br i1 %155, label %294, label %287

287:                                              ; preds = %264
  %288 = bitcast i8* %286 to i32*
  store i32 %173, i32* %288, align 1
  %289 = getelementptr inbounds i8, i8* %266, i64 16
  %290 = bitcast i8* %289 to i32*
  store i32 %172, i32* %290, align 1
  %291 = getelementptr inbounds i8, i8* %266, i64 20
  %292 = bitcast i8* %291 to i32*
  store i32 %175, i32* %292, align 1
  %293 = getelementptr inbounds i8, i8* %266, i64 24
  br label %294

294:                                              ; preds = %264, %287
  %295 = phi i8* [ %286, %264 ], [ %293, %287 ]
  %296 = bitcast i8* %295 to <2 x float>*
  store <2 x float> %282, <2 x float>* %296, align 1
  %297 = getelementptr inbounds i8, i8* %295, i64 8
  %298 = bitcast i8* %297 to i32*
  %299 = load i32, i32* %190, align 4
  store i32 %299, i32* %298, align 1
  %300 = getelementptr inbounds i8, i8* %295, i64 12
  %301 = bitcast i8* %300 to float*
  store float %129, float* %301, align 1
  %302 = getelementptr inbounds i8, i8* %295, i64 16
  %303 = bitcast i8* %302 to i32*
  store i32 %132, i32* %303, align 1
  %304 = getelementptr inbounds i8, i8* %295, i64 20
  %305 = bitcast i8* %304 to i32*
  store i32 %151, i32* %305, align 1
  %306 = getelementptr inbounds i8, i8* %295, i64 24
  %307 = bitcast i8* %306 to i32*
  store i32 %152, i32* %307, align 1
  %308 = getelementptr inbounds i8, i8* %295, i64 28
  %309 = bitcast i8* %308 to i32*
  store i32 %141, i32* %309, align 1
  %310 = getelementptr inbounds i8, i8* %295, i64 32
  %311 = add nuw nsw i64 %265, 1
  %312 = icmp eq i64 %311, 8
  br i1 %312, label %237, label %264

313:                                              ; preds = %318, %243
  %314 = phi i16* [ %246, %243 ], [ %339, %318 ]
  %315 = add nuw nsw i32 %122, 16
  %316 = getelementptr inbounds %"struct.ButtCapDashedCircleOp::Circle", %"struct.ButtCapDashedCircleOp::Circle"* %121, i64 1
  %317 = icmp eq %"struct.ButtCapDashedCircleOp::Circle"* %316, %56
  br i1 %317, label %60, label %120

318:                                              ; preds = %237, %318
  %319 = phi i64 [ %340, %318 ], [ 0, %237 ]
  %320 = phi i16* [ %339, %318 ], [ %123, %237 ]
  %321 = getelementptr inbounds [48 x i16], [48 x i16]* @_ZL20gStrokeCircleIndices, i64 0, i64 %319
  %322 = load i16, i16* %321, align 8
  %323 = add i16 %322, %238
  %324 = getelementptr inbounds i16, i16* %320, i64 1
  store i16 %323, i16* %320, align 2
  %325 = or i64 %319, 1
  %326 = getelementptr inbounds [48 x i16], [48 x i16]* @_ZL20gStrokeCircleIndices, i64 0, i64 %325
  %327 = load i16, i16* %326, align 2
  %328 = add i16 %327, %238
  %329 = getelementptr inbounds i16, i16* %320, i64 2
  store i16 %328, i16* %324, align 2
  %330 = or i64 %319, 2
  %331 = getelementptr inbounds [48 x i16], [48 x i16]* @_ZL20gStrokeCircleIndices, i64 0, i64 %330
  %332 = load i16, i16* %331, align 4
  %333 = add i16 %332, %238
  %334 = getelementptr inbounds i16, i16* %320, i64 3
  store i16 %333, i16* %329, align 2
  %335 = or i64 %319, 3
  %336 = getelementptr inbounds [48 x i16], [48 x i16]* @_ZL20gStrokeCircleIndices, i64 0, i64 %335
  %337 = load i16, i16* %336, align 2
  %338 = add i16 %337, %238
  %339 = getelementptr inbounds i16, i16* %320, i64 4
  store i16 %338, i16* %334, align 2
  %340 = add nuw nsw i64 %319, 4
  %341 = icmp eq i64 %340, 48
  br i1 %341, label %313, label %318, !llvm.loop !40

342:                                              ; preds = %117, %44
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #12
  %343 = load %class.GrBuffer*, %class.GrBuffer** %34, align 8
  %344 = icmp eq %class.GrBuffer* %343, null
  br i1 %344, label %350, label %345

345:                                              ; preds = %342
  %346 = bitcast %class.GrBuffer* %343 to void (%class.GrBuffer*)***
  %347 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %346, align 8
  %348 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %347, i64 3
  %349 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %348, align 8
  call void %349(%class.GrBuffer* nonnull %343) #12
  br label %350

350:                                              ; preds = %342, %345
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  br label %351

351:                                              ; preds = %350, %31
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #12
  %352 = load %class.GrBuffer*, %class.GrBuffer** %17, align 8
  %353 = icmp eq %class.GrBuffer* %352, null
  br i1 %353, label %359, label %354

354:                                              ; preds = %351
  %355 = bitcast %class.GrBuffer* %352 to void (%class.GrBuffer*)***
  %356 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %355, align 8
  %357 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %356, i64 3
  %358 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %357, align 8
  call void %358(%class.GrBuffer* nonnull %352) #12
  br label %359

359:                                              ; preds = %351, %354
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %360

360:                                              ; preds = %10, %359
  ret void
}

declare void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #2

declare void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN21ButtCapDashedCircleOp6CircleELb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.203*, i32, i32) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.203, %class.SkTArray.203* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %66

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %66, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 56) #12
  %45 = load i64, i64* %4, align 8
  %46 = lshr i64 %45, 1
  %47 = and i64 %46, 2147483647
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %35
  %50 = mul nuw nsw i64 %47, 56
  %51 = bitcast %class.SkTArray.203* %0 to i8**
  %52 = load i8*, i8** %51, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %52, i64 %50, i1 false) #12
  %53 = load i64, i64* %4, align 8
  br label %54

54:                                               ; preds = %35, %49
  %55 = phi i64 [ %45, %35 ], [ %53, %49 ]
  %56 = and i64 %55, 1
  %57 = icmp eq i64 %56, 0
  %58 = bitcast %class.SkTArray.203* %0 to i8**
  br i1 %57, label %62, label %59

59:                                               ; preds = %54
  %60 = load i8*, i8** %58, align 8
  tail call void @_Z7sk_freePv(i8* %60) #12
  %61 = load i64, i64* %4, align 8
  br label %62

62:                                               ; preds = %54, %59
  %63 = phi i64 [ %61, %59 ], [ %55, %54 ]
  store i8* %44, i8** %58, align 8
  %64 = and i64 %63, -4294967298
  %65 = or i64 %64, 1
  store i64 %65, i64* %4, align 8
  br label %66

66:                                               ; preds = %62, %32, %21
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc4makeIZN36ButtCapDashedCircleGeometryProcessor4MakeEPS_bRK8SkMatrixEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESB_(i8*) #6 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -193
  %3 = bitcast i8* %2 to %class.ButtCapDashedCircleGeometryProcessor*
  %4 = bitcast i8* %2 to void (%class.ButtCapDashedCircleGeometryProcessor*)***
  %5 = load void (%class.ButtCapDashedCircleGeometryProcessor*)**, void (%class.ButtCapDashedCircleGeometryProcessor*)*** %4, align 8
  %6 = load void (%class.ButtCapDashedCircleGeometryProcessor*)*, void (%class.ButtCapDashedCircleGeometryProcessor*)** %5, align 8
  tail call void %6(%class.ButtCapDashedCircleGeometryProcessor* %3) #12
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN36ButtCapDashedCircleGeometryProcessorD0Ev(%class.ButtCapDashedCircleGeometryProcessor*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %class.ButtCapDashedCircleGeometryProcessor* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK36ButtCapDashedCircleGeometryProcessor4nameEv(%class.ButtCapDashedCircleGeometryProcessor*) unnamed_addr #4 comdat align 2 {
  ret i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.90, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK36ButtCapDashedCircleGeometryProcessor19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%class.ButtCapDashedCircleGeometryProcessor*, %class.GrShaderCaps* dereferenceable(144), %class.GrProcessorKeyBuilder*) unnamed_addr #4 comdat align 2 {
  %4 = bitcast %class.ButtCapDashedCircleGeometryProcessor* %0 to %class.GrGeometryProcessor*
  tail call void @_ZN36ButtCapDashedCircleGeometryProcessor13GLSLProcessor6GenKeyERK19GrGeometryProcessorRK12GrShaderCapsP21GrProcessorKeyBuilder(%class.GrGeometryProcessor* dereferenceable(80) %4, %class.GrShaderCaps* dereferenceable(144) %1, %class.GrProcessorKeyBuilder* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrGLSLGeometryProcessor* @_ZNK36ButtCapDashedCircleGeometryProcessor18createGLSLInstanceERK12GrShaderCaps(%class.ButtCapDashedCircleGeometryProcessor*, %class.GrShaderCaps* dereferenceable(144)) unnamed_addr #4 comdat align 2 {
  %3 = tail call i8* @_Znwm(i64 72) #15
  %4 = bitcast i8* %3 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %3, i64 16
  %6 = bitcast i8* %5 to i64*
  %7 = getelementptr inbounds i8, i8* %3, i64 8
  %8 = bitcast i8* %7 to %"struct.GrGLSLGeometryProcessor::TransformInfo"**
  store %"struct.GrGLSLGeometryProcessor::TransformInfo"* null, %"struct.GrGLSLGeometryProcessor::TransformInfo"** %8, align 8
  store i64 1, i64* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN36ButtCapDashedCircleGeometryProcessor13GLSLProcessorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 24
  %10 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13InvalidMatrixEv() #12
  %11 = bitcast %class.SkMatrix* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 4 %11, i64 40, i1 false) #12
  %12 = getelementptr inbounds i8, i8* %3, i64 64
  %13 = bitcast i8* %12 to i32*
  store i32 -1, i32* %13, align 4
  %14 = bitcast i8* %3 to %class.GrGLSLGeometryProcessor*
  ret %class.GrGLSLGeometryProcessor* %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN36ButtCapDashedCircleGeometryProcessor13GLSLProcessor6GenKeyERK19GrGeometryProcessorRK12GrShaderCapsP21GrProcessorKeyBuilder(%class.GrGeometryProcessor* dereferenceable(80), %class.GrShaderCaps* dereferenceable(144), %class.GrProcessorKeyBuilder*) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %0, i64 0, i32 6
  %5 = bitcast [4 x i8]* %4 to %class.SkMatrix*
  %6 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %1, i64 0, i32 2
  %7 = bitcast i56* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 1048576
  %10 = icmp eq i64 %9, 0
  %11 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 9
  %12 = bitcast [4 x i8]* %11 to i32*
  %13 = load i32, i32* %12, align 4
  br i1 %10, label %14, label %34

14:                                               ; preds = %3
  %15 = trunc i32 %13 to i8
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %14
  %18 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %5) #12
  %19 = zext i8 %18 to i32
  store i32 %19, i32* %12, align 4
  br label %20

20:                                               ; preds = %17, %14
  %21 = phi i32 [ %19, %17 ], [ %13, %14 ]
  %22 = and i32 %21, 15
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %46, label %24

24:                                               ; preds = %20
  %25 = trunc i32 %21 to i8
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %5) #12
  %29 = zext i8 %28 to i32
  store i32 %29, i32* %12, align 4
  br label %30

30:                                               ; preds = %27, %24
  %31 = phi i32 [ %29, %27 ], [ %21, %24 ]
  %32 = and i32 %31, 12
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %30, %3
  %35 = phi i32 [ %31, %30 ], [ %13, %3 ]
  %36 = and i32 %35, 192
  %37 = icmp eq i32 %36, 128
  br i1 %37, label %38, label %41

38:                                               ; preds = %34
  %39 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %5) #12
  %40 = zext i8 %39 to i32
  store i32 %40, i32* %12, align 4
  br label %41

41:                                               ; preds = %38, %34
  %42 = phi i32 [ %40, %38 ], [ %35, %34 ]
  %43 = and i32 %42, 8
  %44 = icmp eq i32 %43, 0
  %45 = select i1 %44, i32 2, i32 3
  br label %46

46:                                               ; preds = %20, %30, %41
  %47 = phi i32 [ 0, %20 ], [ 1, %30 ], [ %45, %41 ]
  %48 = bitcast %class.GrProcessorKeyBuilder* %2 to void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)***
  %49 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %48, align 8
  %50 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %49, i64 2
  %51 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %50, align 8
  tail call void %51(%class.GrProcessorKeyBuilder* %2, i32 2, i32 %47, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25, i64 0, i64 0)) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN36ButtCapDashedCircleGeometryProcessor13GLSLProcessorD0Ev(%"class.ButtCapDashedCircleGeometryProcessor::GLSLProcessor"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.ButtCapDashedCircleGeometryProcessor::GLSLProcessor", %"class.ButtCapDashedCircleGeometryProcessor::GLSLProcessor"* %0, i64 0, i32 0
  tail call void @_ZN23GrGLSLGeometryProcessorD2Ev(%class.GrGLSLGeometryProcessor* %2) #12
  %3 = bitcast %"class.ButtCapDashedCircleGeometryProcessor::GLSLProcessor"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN36ButtCapDashedCircleGeometryProcessor13GLSLProcessor7setDataERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK19GrGeometryProcessor(%"class.ButtCapDashedCircleGeometryProcessor::GLSLProcessor"*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrShaderCaps* dereferenceable(144), %class.GrGeometryProcessor* dereferenceable(80)) unnamed_addr #4 comdat align 2 {
  %5 = getelementptr inbounds %"class.ButtCapDashedCircleGeometryProcessor::GLSLProcessor", %"class.ButtCapDashedCircleGeometryProcessor::GLSLProcessor"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %3, i64 0, i32 6
  %7 = bitcast [4 x i8]* %6 to %class.SkMatrix*
  %8 = getelementptr inbounds %"class.ButtCapDashedCircleGeometryProcessor::GLSLProcessor", %"class.ButtCapDashedCircleGeometryProcessor::GLSLProcessor"* %0, i64 0, i32 1
  tail call void @_ZN23GrGLSLGeometryProcessor12SetTransformERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK16GrResourceHandleINS0_17UniformHandleKindEERK8SkMatrixPSB_(%class.GrGLSLProgramDataManager* dereferenceable(8) %1, %class.GrShaderCaps* dereferenceable(144) %2, %class.GrResourceHandle* dereferenceable(4) %5, %class.SkMatrix* dereferenceable(40) %7, %class.SkMatrix* %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN36ButtCapDashedCircleGeometryProcessor13GLSLProcessor10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS1_8GrGPArgsE(%"class.ButtCapDashedCircleGeometryProcessor::GLSLProcessor"*, %"struct.GrGLSLGeometryProcessor::EmitArgs"* dereferenceable(88), %"struct.GrGLSLGeometryProcessor::GrGPArgs"*) unnamed_addr #4 comdat align 2 {
  %4 = alloca %class.SkString, align 8
  %5 = alloca %class.SkString, align 8
  %6 = alloca %class.SkString, align 8
  %7 = alloca %class.GrGLSLVarying, align 8
  %8 = alloca %class.GrGLSLVarying, align 8
  %9 = alloca %class.GrShaderVar, align 8
  %10 = alloca [2 x %class.GrShaderVar], align 16
  %11 = alloca %class.SkString, align 8
  %12 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 6
  %13 = bitcast %class.GrGeometryProcessor** %12 to %class.ButtCapDashedCircleGeometryProcessor**
  %14 = load %class.ButtCapDashedCircleGeometryProcessor*, %class.ButtCapDashedCircleGeometryProcessor** %13, align 8
  %15 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 0
  %16 = load %class.GrGLSLVertexBuilder*, %class.GrGLSLVertexBuilder** %15, align 8
  %17 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 3
  %18 = load %class.GrGLSLVaryingHandler*, %class.GrGLSLVaryingHandler** %17, align 8
  %19 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 4
  %20 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %19, align 8
  %21 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 2
  %22 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %21, align 8
  %23 = bitcast %class.ButtCapDashedCircleGeometryProcessor* %14 to %class.GrGeometryProcessor*
  tail call void @_ZN20GrGLSLVaryingHandler14emitAttributesERK19GrGeometryProcessor(%class.GrGLSLVaryingHandler* %18, %class.GrGeometryProcessor* dereferenceable(80) %23) #12
  %24 = bitcast %class.GrGLSLFPFragmentBuilder* %22 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr i8, i8* %25, i64 -24
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %class.GrGLSLFPFragmentBuilder* %22 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 %28
  %31 = getelementptr inbounds i8, i8* %30, i64 160
  %32 = getelementptr inbounds i8, i8* %30, i64 488
  %33 = bitcast i8* %32 to i32*
  %34 = load i32, i32* %33, align 8
  %35 = bitcast i8* %31 to %class.SkString**
  %36 = load %class.SkString*, %class.SkString** %35, align 8
  %37 = sext i32 %34 to i64
  %38 = getelementptr inbounds %class.SkString, %class.SkString* %36, i64 %37
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %38, i64 -1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.28, i64 0, i64 0)) #12
  %39 = getelementptr inbounds %class.ButtCapDashedCircleGeometryProcessor, %class.ButtCapDashedCircleGeometryProcessor* %14, i64 0, i32 4
  tail call void @_ZN20GrGLSLVaryingHandler23addPassThroughAttributeERKN19GrGeometryProcessor9AttributeEPKcNS_13InterpolationE(%class.GrGLSLVaryingHandler* %18, %"class.GrGeometryProcessor::Attribute"* dereferenceable(16) %39, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i64 0, i64 0), i32 0) #12
  %40 = load i8*, i8** %24, align 8
  %41 = getelementptr i8, i8* %40, i64 -24
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds i8, i8* %29, i64 %43
  %45 = getelementptr inbounds i8, i8* %44, i64 160
  %46 = getelementptr inbounds i8, i8* %44, i64 488
  %47 = bitcast i8* %46 to i32*
  %48 = load i32, i32* %47, align 8
  %49 = bitcast i8* %45 to %class.SkString**
  %50 = load %class.SkString*, %class.SkString** %49, align 8
  %51 = sext i32 %48 to i64
  %52 = getelementptr inbounds %class.SkString, %class.SkString* %50, i64 %51
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %52, i64 -1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.91, i64 0, i64 0)) #12
  %53 = getelementptr inbounds %class.ButtCapDashedCircleGeometryProcessor, %class.ButtCapDashedCircleGeometryProcessor* %14, i64 0, i32 5
  tail call void @_ZN20GrGLSLVaryingHandler23addPassThroughAttributeERKN19GrGeometryProcessor9AttributeEPKcNS_13InterpolationE(%class.GrGLSLVaryingHandler* %18, %"class.GrGeometryProcessor::Attribute"* dereferenceable(16) %53, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.92, i64 0, i64 0), i32 1) #12
  %54 = bitcast %class.GrGLSLVarying* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %54) #12
  %55 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %7, i64 0, i32 0
  %56 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %7, i64 0, i32 1
  %57 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %7, i64 0, i32 2
  %58 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %7, i64 0, i32 5
  store i32 31, i32* %55, align 8
  %59 = bitcast i32* %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 36, i1 false)
  call void @_ZN20GrGLSLVaryingHandler10addVaryingEPKcP13GrGLSLVaryingNS_13InterpolationE(%class.GrGLSLVaryingHandler* %18, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.93, i64 0, i64 0), %class.GrGLSLVarying* nonnull %7, i32 1) #12
  %60 = bitcast %class.GrGLSLVarying* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #12
  %61 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %8, i64 0, i32 0
  %62 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %8, i64 0, i32 1
  %63 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %8, i64 0, i32 2
  %64 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %8, i64 0, i32 5
  store i32 28, i32* %61, align 8
  %65 = bitcast i32* %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %65, i8 0, i64 36, i1 false)
  call void @_ZN20GrGLSLVaryingHandler10addVaryingEPKcP13GrGLSLVaryingNS_13InterpolationE(%class.GrGLSLVaryingHandler* %18, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.94, i64 0, i64 0), %class.GrGLSLVarying* nonnull %8, i32 1) #12
  %66 = bitcast %class.GrGLSLVertexBuilder* %16 to %class.GrGLSLShaderBuilder*
  %67 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %53, i64 0, i32 0
  %68 = load i8*, i8** %67, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %66, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.95, i64 0, i64 0), i8* %68)
  %69 = getelementptr inbounds %class.GrGLSLVertexBuilder, %class.GrGLSLVertexBuilder* %16, i64 0, i32 0, i32 0, i32 14
  %70 = load i32, i32* %69, align 8
  %71 = getelementptr inbounds %class.GrGLSLVertexBuilder, %class.GrGLSLVertexBuilder* %16, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %72 = load %class.SkString*, %class.SkString** %71, align 8
  %73 = sext i32 %70 to i64
  %74 = getelementptr inbounds %class.SkString, %class.SkString* %72, i64 %73
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %74, i64 -1, i8* getelementptr inbounds ([2226 x i8], [2226 x i8]* @.str.96, i64 0, i64 0)) #12
  %75 = load i8*, i8** %57, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %66, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.97, i64 0, i64 0), i8* %75)
  %76 = load i8*, i8** %63, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %66, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.98, i64 0, i64 0), i8* %76)
  %77 = load i8*, i8** %24, align 8
  %78 = getelementptr i8, i8* %77, i64 -24
  %79 = bitcast i8* %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds i8, i8* %29, i64 %80
  %82 = bitcast i8* %81 to %class.GrGLSLShaderBuilder*
  %83 = load i8*, i8** %58, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %82, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.99, i64 0, i64 0), i8* %83)
  %84 = load i8*, i8** %24, align 8
  %85 = getelementptr i8, i8* %84, i64 -24
  %86 = bitcast i8* %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds i8, i8* %29, i64 %87
  %89 = bitcast i8* %88 to %class.GrGLSLShaderBuilder*
  %90 = load i8*, i8** %64, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %89, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.100, i64 0, i64 0), i8* %90)
  %91 = load i8*, i8** %24, align 8
  %92 = getelementptr i8, i8* %91, i64 -24
  %93 = bitcast i8* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds i8, i8* %29, i64 %94
  %96 = bitcast i8* %95 to %class.GrGLSLShaderBuilder*
  %97 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 7
  %98 = load i8*, i8** %97, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %96, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i64 0, i64 0), i8* %98)
  %99 = getelementptr inbounds %class.ButtCapDashedCircleGeometryProcessor, %class.ButtCapDashedCircleGeometryProcessor* %14, i64 0, i32 3
  %100 = load i8*, i8** %97, align 8
  call void @_ZN20GrGLSLVaryingHandler23addPassThroughAttributeERKN19GrGeometryProcessor9AttributeEPKcNS_13InterpolationE(%class.GrGLSLVaryingHandler* %18, %"class.GrGeometryProcessor::Attribute"* dereferenceable(16) %99, i8* %100, i32 1) #12
  %101 = getelementptr inbounds %class.ButtCapDashedCircleGeometryProcessor, %class.ButtCapDashedCircleGeometryProcessor* %14, i64 0, i32 2, i32 0
  %102 = load i8*, i8** %101, align 8
  call void @_ZN23GrGLSLGeometryProcessor19WriteOutputPositionEP19GrGLSLVertexBuilderPNS_8GrGPArgsEPKc(%class.GrGLSLVertexBuilder* %16, %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i8* %102) #12
  %103 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 5
  %104 = load %class.GrShaderCaps*, %class.GrShaderCaps** %103, align 8
  %105 = load i8*, i8** %101, align 8, !noalias !41
  %106 = getelementptr inbounds %class.ButtCapDashedCircleGeometryProcessor, %class.ButtCapDashedCircleGeometryProcessor* %14, i64 0, i32 2, i32 2
  %107 = load i32, i32* %106, align 4, !noalias !41
  %108 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #12, !noalias !41
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %5, i8* %105) #12, !noalias !41
  %109 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %9, i64 0, i32 0
  store i32 %107, i32* %109, align 8, !alias.scope !41
  %110 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %9, i64 0, i32 1
  store i32 2, i32* %110, align 4, !alias.scope !41
  %111 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %9, i64 0, i32 2
  store i32 0, i32* %111, align 8, !alias.scope !41
  %112 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %9, i64 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %112, %class.SkString* nonnull dereferenceable(8) %5) #12
  %113 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %9, i64 0, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %113) #12
  %114 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %9, i64 0, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %114) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #12, !noalias !41
  %115 = getelementptr inbounds %class.ButtCapDashedCircleGeometryProcessor, %class.ButtCapDashedCircleGeometryProcessor* %14, i64 0, i32 1
  %116 = getelementptr inbounds %"class.ButtCapDashedCircleGeometryProcessor::GLSLProcessor", %"class.ButtCapDashedCircleGeometryProcessor::GLSLProcessor"* %0, i64 0, i32 2
  call void @_ZN23GrGLSLGeometryProcessor15WriteLocalCoordEP19GrGLSLVertexBuilderP20GrGLSLUniformHandlerRK12GrShaderCapsPNS_8GrGPArgsE11GrShaderVarRK8SkMatrixP16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE(%class.GrGLSLVertexBuilder* %16, %class.GrGLSLUniformHandler* %20, %class.GrShaderCaps* dereferenceable(144) %104, %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, %class.GrShaderVar* nonnull %9, %class.SkMatrix* dereferenceable(40) %115, %class.GrResourceHandle* %116) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* %114) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* %113) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* %112) #12
  %117 = bitcast [2 x %class.GrShaderVar]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %117) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %117, i8 -86, i64 80, i1 false)
  %118 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %10, i64 0, i64 0
  %119 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.101, i64 0, i64 0)) #12
  %120 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %10, i64 0, i64 0, i32 0
  store i32 21, i32* %120, align 16
  %121 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %10, i64 0, i64 0, i32 1
  store i32 0, i32* %121, align 4
  %122 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %10, i64 0, i64 0, i32 2
  store i32 0, i32* %122, align 8
  %123 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %10, i64 0, i64 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %123, %class.SkString* nonnull dereferenceable(8) %4) #12
  %124 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %10, i64 0, i64 0, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %124) #12
  %125 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %10, i64 0, i64 0, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %125) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119)
  %126 = bitcast %class.SkString* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.102, i64 0, i64 0)) #12
  %127 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %10, i64 0, i64 1, i32 0
  store i32 21, i32* %127, align 8
  %128 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %10, i64 0, i64 1, i32 1
  store i32 0, i32* %128, align 4
  %129 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %10, i64 0, i64 1, i32 2
  store i32 0, i32* %129, align 8
  %130 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %10, i64 0, i64 1, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %130, %class.SkString* nonnull dereferenceable(8) %6) #12
  %131 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %10, i64 0, i64 1, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %131) #12
  %132 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %10, i64 0, i64 1, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %132) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126)
  %133 = bitcast %class.SkString* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %133) #12
  %134 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %134, align 8
  %135 = load i8*, i8** %24, align 8
  %136 = getelementptr i8, i8* %135, i64 -24
  %137 = bitcast i8* %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = getelementptr inbounds i8, i8* %29, i64 %138
  %140 = bitcast i8* %139 to %class.GrGLSLShaderBuilder*
  call void @_ZN19GrGLSLShaderBuilder22getMangledFunctionNameEPKc(%class.SkString* nonnull sret %11, %class.GrGLSLShaderBuilder* %140, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.103, i64 0, i64 0)) #12
  %141 = load i8*, i8** %24, align 8
  %142 = getelementptr i8, i8* %141, i64 -24
  %143 = bitcast i8* %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = getelementptr inbounds i8, i8* %29, i64 %144
  %146 = bitcast i8* %145 to %class.GrGLSLShaderBuilder*
  %147 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %134, align 8
  %148 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %147, i64 0, i32 2
  call void @_ZN19GrGLSLShaderBuilder12emitFunctionE8GrSLTypePKc6SkSpanIK11GrShaderVarES2_(%class.GrGLSLShaderBuilder* %146, i32 21, i8* %148, %class.GrShaderVar* nonnull %118, i64 2, i8* getelementptr inbounds ([244 x i8], [244 x i8]* @.str.104, i64 0, i64 0)) #12
  %149 = load i8*, i8** %24, align 8
  %150 = getelementptr i8, i8* %149, i64 -24
  %151 = bitcast i8* %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = getelementptr inbounds i8, i8* %29, i64 %152
  %154 = getelementptr inbounds i8, i8* %153, i64 160
  %155 = getelementptr inbounds i8, i8* %153, i64 488
  %156 = bitcast i8* %155 to i32*
  %157 = load i32, i32* %156, align 8
  %158 = bitcast i8* %154 to %class.SkString**
  %159 = load %class.SkString*, %class.SkString** %158, align 8
  %160 = sext i32 %157 to i64
  %161 = getelementptr inbounds %class.SkString, %class.SkString* %159, i64 %160
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %161, i64 -1, i8* getelementptr inbounds ([1578 x i8], [1578 x i8]* @.str.105, i64 0, i64 0)) #12
  %162 = load i8*, i8** %24, align 8
  %163 = getelementptr i8, i8* %162, i64 -24
  %164 = bitcast i8* %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds i8, i8* %29, i64 %165
  %167 = bitcast i8* %166 to %class.GrGLSLShaderBuilder*
  %168 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %134, align 8
  %169 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %168, i64 0, i32 2
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %167, i8* getelementptr inbounds ([721 x i8], [721 x i8]* @.str.106, i64 0, i64 0), i8* %169, i8* %169)
  %170 = load i8*, i8** %24, align 8
  %171 = getelementptr i8, i8* %170, i64 -24
  %172 = bitcast i8* %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = getelementptr inbounds i8, i8* %29, i64 %173
  %175 = bitcast i8* %174 to %class.GrGLSLShaderBuilder*
  %176 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %134, align 8
  %177 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %176, i64 0, i32 2
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %175, i8* getelementptr inbounds ([666 x i8], [666 x i8]* @.str.107, i64 0, i64 0), i8* %177, i8* %177)
  %178 = load i8*, i8** %24, align 8
  %179 = getelementptr i8, i8* %178, i64 -24
  %180 = bitcast i8* %179 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = getelementptr inbounds i8, i8* %29, i64 %181
  %183 = bitcast i8* %182 to %class.GrGLSLShaderBuilder*
  %184 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %134, align 8
  %185 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %184, i64 0, i32 2
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %183, i8* getelementptr inbounds ([367 x i8], [367 x i8]* @.str.108, i64 0, i64 0), i8* %185, i8* %185, i8* %185, i8* %185, i8* %185, i8* %185)
  %186 = load i8*, i8** %24, align 8
  %187 = getelementptr i8, i8* %186, i64 -24
  %188 = bitcast i8* %187 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = getelementptr inbounds i8, i8* %29, i64 %189
  %191 = bitcast i8* %190 to %class.GrGLSLShaderBuilder*
  %192 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 8
  %193 = load i8*, i8** %192, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %191, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.48, i64 0, i64 0), i8* %193)
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %133) #12
  %194 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %10, i64 0, i64 1, i32 5
  call void @_ZN8SkStringD1Ev(%class.SkString* %194) #12
  %195 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %10, i64 0, i64 1, i32 4
  call void @_ZN8SkStringD1Ev(%class.SkString* %195) #12
  %196 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %10, i64 0, i64 1, i32 3
  call void @_ZN8SkStringD1Ev(%class.SkString* %196) #12
  %197 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %10, i64 0, i64 0, i32 5
  call void @_ZN8SkStringD1Ev(%class.SkString* %197) #12
  %198 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %10, i64 0, i64 0, i32 4
  call void @_ZN8SkStringD1Ev(%class.SkString* %198) #12
  %199 = getelementptr inbounds [2 x %class.GrShaderVar], [2 x %class.GrShaderVar]* %10, i64 0, i64 0, i32 3
  call void @_ZN8SkStringD1Ev(%class.SkString* %199) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %117) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %54) #12
  ret void
}

declare void @_ZN19GrGLSLShaderBuilder22getMangledFunctionNameEPKc(%class.SkString* sret, %class.GrGLSLShaderBuilder*, i8*) local_unnamed_addr #2

declare void @_ZN19GrGLSLShaderBuilder12emitFunctionE8GrSLTypePKc6SkSpanIK11GrShaderVarES2_(%class.GrGLSLShaderBuilder*, i32, i8*, %class.GrShaderVar*, i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8CircleOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrix7SkPointfRK7GrStylePKNS_9ArcParamsE(%class.CircleOp*, %class.GrProcessorSet*, %struct.SkRGBA4f* dereferenceable(16), %class.SkMatrix* dereferenceable(40), <2 x float>, float, %class.GrStyle* dereferenceable(64), %"struct.CircleOp::ArcParams"*) unnamed_addr #0 comdat align 2 {
  %9 = alloca <2 x float>, align 8
  %10 = alloca <2 x float>, align 8
  %11 = alloca <2 x float>, align 8
  %12 = bitcast <2 x float>* %11 to %struct.SkPoint*
  %13 = alloca <2 x float>, align 8
  %14 = bitcast <2 x float>* %13 to %struct.SkPoint*
  %15 = alloca <2 x float>, align 8
  %16 = bitcast <2 x float>* %15 to %struct.SkPoint*
  %17 = alloca %struct.SkRGBA4f, align 8
  %18 = alloca %struct.SkRGBA4f, align 8
  %19 = alloca %struct.SkPoint, align 4
  %20 = alloca %struct.SkRGBA4f, align 8
  %21 = alloca %struct.SkRGBA4f, align 8
  store <2 x float> %4, <2 x float>* %11, align 8
  %22 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 0
  %23 = load atomic i8, i8* bitcast (i64* @_ZGVZN8CircleOp7ClassIDEvE8kClassID to i8*) acquire, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %33, !prof !3

25:                                               ; preds = %8
  %26 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN8CircleOp7ClassIDEvE8kClassID) #12
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %25
  %29 = atomicrmw add i32* getelementptr inbounds (%"struct.std::__1::atomic.155", %"struct.std::__1::atomic.155"* @_ZN4GrOp14gCurrOpClassIDE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 329, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i64 0, i64 0)) #16
  unreachable

32:                                               ; preds = %28
  store i32 %29, i32* @_ZZN8CircleOp7ClassIDEvE8kClassID, align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN8CircleOp7ClassIDEvE8kClassID) #12
  br label %33

33:                                               ; preds = %8, %25, %32
  %34 = load i32, i32* @_ZZN8CircleOp7ClassIDEvE8kClassID, align 4
  tail call void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp* %22, i32 %34) #12
  %35 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV8CircleOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 1
  %37 = bitcast %class.SkMatrix* %36 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %37, align 4
  %38 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 1, i32 0, i64 4
  %39 = bitcast float* %38 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %39, align 4
  %40 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 1, i32 0, i64 8
  store float 1.000000e+00, float* %40, align 4
  %41 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 1, i32 1
  store i32 16, i32* %41, align 4
  %42 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 2
  tail call void @_ZN24GrSimpleMeshDrawOpHelperC1EP14GrProcessorSet8GrAATypeNS_10InputFlagsE(%class.GrSimpleMeshDrawOpHelper* %42, %class.GrProcessorSet* %1, i32 1, i8 zeroext 0) #12
  %43 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 3, i32 0, i32 0, i64 96
  %44 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 3, i32 0, i32 0, i64 0
  %45 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 3, i32 0, i32 0, i64 104
  %46 = bitcast i8* %45 to i64*
  %47 = bitcast i8* %43 to i8**
  store i8* %44, i8** %47, align 8
  store i64 8589934592, i64* %46, align 8
  %48 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 12
  %49 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %6, i64 0, i32 0
  %50 = bitcast %struct.GrSimpleMesh** %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 16, i1 false)
  %51 = tail call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* %49) #12
  %52 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 10
  store i8 0, i8* %52, align 4
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* %3, %struct.SkPoint* nonnull %12, %struct.SkPoint* nonnull %12, i32 1) #12
  %53 = call float @_ZNK8SkMatrix9mapRadiusEf(%class.SkMatrix* %3, float %5) #12
  %54 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %6, i64 0, i32 0, i32 1
  %55 = load float, float* %54, align 4
  %56 = call float @_ZNK8SkMatrix9mapRadiusEf(%class.SkMatrix* %3, float %55) #12
  %57 = and i32 %51, -3
  %58 = icmp eq i32 %57, 0
  switch i32 %51, label %68 [
    i32 3, label %59
    i32 2, label %59
    i32 0, label %59
  ]

59:                                               ; preds = %33, %33, %33
  %60 = call float @llvm.fabs.f32(float %56) #12
  %61 = fcmp ole float %60, 0x3F30000000000000
  %62 = fmul float %56, 5.000000e-01
  %63 = select i1 %61, float 5.000000e-01, float %62
  %64 = fadd float %53, %63
  br i1 %58, label %65, label %68

65:                                               ; preds = %59
  %66 = fsub float %53, %63
  %67 = fadd float %66, -5.000000e-01
  br label %68

68:                                               ; preds = %33, %59, %65
  %69 = phi float [ %63, %65 ], [ %63, %59 ], [ 0.000000e+00, %33 ]
  %70 = phi float [ %64, %65 ], [ %64, %59 ], [ %53, %33 ]
  %71 = phi float [ %67, %65 ], [ -1.000000e+00, %59 ], [ -1.000000e+00, %33 ]
  %72 = fadd float %70, 5.000000e-01
  %73 = fcmp ogt float %71, 0.000000e+00
  %74 = and i1 %58, %73
  %75 = zext i1 %74 to i8
  %76 = bitcast %class.SkMatrix* %36 to i8*
  %77 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 4 %77, i64 40, i1 false)
  %78 = getelementptr inbounds <2 x float>, <2 x float>* %11, i64 0, i64 0
  %79 = load float, float* %78, align 8
  %80 = fsub float %79, %72
  %81 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %12, i64 0, i32 1
  %82 = load float, float* %81, align 4
  %83 = fsub float %82, %72
  %84 = fadd float %72, %79
  %85 = fadd float %72, %82
  %86 = insertelement <2 x float> undef, float %80, i32 0
  %87 = insertelement <2 x float> %86, float %83, i32 1
  %88 = insertelement <2 x float> undef, float %84, i32 0
  %89 = insertelement <2 x float> %88, float %85, i32 1
  %90 = icmp eq %"struct.CircleOp::ArcParams"* %7, null
  br i1 %90, label %332, label %91

91:                                               ; preds = %68
  %92 = bitcast <2 x float>* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #12
  %93 = getelementptr inbounds <2 x float>, <2 x float>* %13, i64 0, i64 0
  %94 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %14, i64 0, i32 1
  %95 = bitcast <2 x float>* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #12
  %96 = getelementptr inbounds <2 x float>, <2 x float>* %15, i64 0, i64 0
  %97 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %16, i64 0, i32 1
  %98 = getelementptr inbounds %"struct.CircleOp::ArcParams", %"struct.CircleOp::ArcParams"* %7, i64 0, i32 0
  %99 = load float, float* %98, align 4
  %100 = call float @sinf(float %99) #12
  %101 = load float, float* %98, align 4
  %102 = call float @cosf(float %101) #12
  %103 = load float, float* %98, align 4
  %104 = getelementptr inbounds %"struct.CircleOp::ArcParams", %"struct.CircleOp::ArcParams"* %7, i64 0, i32 1
  %105 = load float, float* %104, align 4
  %106 = fadd float %103, %105
  %107 = call float @sinf(float %106) #12
  %108 = call float @cosf(float %106) #12
  %109 = bitcast float* %94 to i32*
  %110 = bitcast <2 x float>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110)
  %111 = bitcast <2 x float>* %10 to %struct.SkPoint*
  %112 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %111, i64 0, i32 1
  %113 = getelementptr inbounds <2 x float>, <2 x float>* %10, i64 0, i64 0
  store float %102, float* %113, align 8
  store float %100, float* %112, align 4
  call void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix* %3, %struct.SkPoint* nonnull %111, %struct.SkPoint* nonnull %111, i32 1) #12
  %114 = bitcast <2 x float>* %10 to i64*
  %115 = load i64, i64* %114, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110)
  %116 = bitcast <2 x float>* %13 to i64*
  store i64 %115, i64* %116, align 8
  %117 = bitcast float* %97 to i32*
  %118 = bitcast <2 x float>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118)
  %119 = bitcast <2 x float>* %9 to %struct.SkPoint*
  %120 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %119, i64 0, i32 1
  %121 = getelementptr inbounds <2 x float>, <2 x float>* %9, i64 0, i64 0
  store float %108, float* %121, align 8
  store float %107, float* %120, align 4
  call void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix* %3, %struct.SkPoint* nonnull %119, %struct.SkPoint* nonnull %119, i32 1) #12
  %122 = bitcast <2 x float>* %9 to i64*
  %123 = load i64, i64* %122, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118)
  %124 = bitcast <2 x float>* %15 to i64*
  store i64 %123, i64* %124, align 8
  %125 = call zeroext i1 @_ZN7SkPoint9normalizeEv(%struct.SkPoint* nonnull %14) #12
  %126 = call zeroext i1 @_ZN7SkPoint9normalizeEv(%struct.SkPoint* nonnull %16) #12
  %127 = bitcast %class.SkMatrix* %3 to <2 x float>*
  %128 = load <2 x float>, <2 x float>* %127, align 4
  %129 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 3
  %130 = bitcast float* %129 to <2 x float>*
  %131 = load <2 x float>, <2 x float>* %130, align 4
  %132 = shufflevector <2 x float> %131, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %133 = fmul <2 x float> %128, %132
  %134 = extractelement <2 x float> %133, i32 0
  %135 = extractelement <2 x float> %133, i32 1
  %136 = fsub float %134, %135
  %137 = fcmp olt float %136, 0.000000e+00
  br i1 %137, label %138, label %144

138:                                              ; preds = %91
  %139 = bitcast <2 x float>* %15 to i32*
  %140 = bitcast <2 x float>* %13 to i32*
  %141 = load i32, i32* %140, align 8
  %142 = load i32, i32* %109, align 4
  %143 = load i64, i64* %124, align 8
  store i64 %143, i64* %116, align 8
  store i32 %141, i32* %139, align 8
  store i32 %142, i32* %117, align 4
  br label %144

144:                                              ; preds = %138, %91
  %145 = load float, float* %54, align 4
  %146 = fcmp ogt float %145, 0.000000e+00
  br i1 %146, label %148, label %147

147:                                              ; preds = %144
  store i8 0, i8* %52, align 4
  br label %164

148:                                              ; preds = %144
  %149 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %6, i64 0, i32 0, i32 3
  %150 = load i32, i32* %149, align 4
  %151 = and i32 %150, 65535
  %152 = icmp eq i32 %151, 1
  %153 = zext i1 %152 to i8
  store i8 %153, i8* %52, align 4
  br i1 %152, label %154, label %164

154:                                              ; preds = %148
  %155 = fadd float %71, %72
  %156 = fmul float %72, 2.000000e+00
  %157 = fdiv float %155, %156
  %158 = load <2 x float>, <2 x float>* %13, align 8
  %159 = insertelement <2 x float> undef, float %157, i32 0
  %160 = shufflevector <2 x float> %159, <2 x float> undef, <2 x i32> zeroinitializer
  %161 = fmul <2 x float> %160, %158
  %162 = load <2 x float>, <2 x float>* %15, align 8
  %163 = fmul <2 x float> %160, %162
  br label %164

164:                                              ; preds = %147, %148, %154
  %165 = phi <2 x float> [ %163, %154 ], [ <float 1.000000e+10, float 1.000000e+10>, %148 ], [ <float 1.000000e+10, float 1.000000e+10>, %147 ]
  %166 = phi <2 x float> [ %161, %154 ], [ <float 1.000000e+10, float 1.000000e+10>, %148 ], [ <float 1.000000e+10, float 1.000000e+10>, %147 ]
  %167 = load float, float* %104, align 4
  %168 = call float @llvm.fabs.f32(float %167)
  %169 = getelementptr inbounds %"struct.CircleOp::ArcParams", %"struct.CircleOp::ArcParams"* %7, i64 0, i32 2
  %170 = load i8, i8* %169, align 4, !range !2
  %171 = icmp ne i8 %170, 0
  %172 = or i1 %58, %171
  br i1 %172, label %173, label %267

173:                                              ; preds = %164
  %174 = fadd float %168, 0xC00921FB60000000
  %175 = call float @llvm.fabs.f32(float %174) #12
  %176 = fcmp ugt float %175, 0x3F30000000000000
  br i1 %176, label %177, label %267

177:                                              ; preds = %173
  %178 = load i32, i32* %109, align 4
  %179 = load float, float* %93, align 8
  %180 = fsub float -0.000000e+00, %179
  %181 = load i32, i32* %117, align 4
  %182 = load float, float* %96, align 8
  %183 = fsub float -0.000000e+00, %182
  %184 = fcmp olt float %167, 0.000000e+00
  br i1 %184, label %185, label %186

185:                                              ; preds = %177
  br label %186

186:                                              ; preds = %185, %177
  %187 = phi i32 [ %178, %185 ], [ %181, %177 ]
  %188 = phi float [ %180, %185 ], [ %183, %177 ]
  %189 = phi i32 [ %181, %185 ], [ %178, %177 ]
  %190 = phi float [ %183, %185 ], [ %180, %177 ]
  %191 = bitcast i32 %189 to float
  %192 = fsub float -0.000000e+00, %191
  %193 = fsub float -0.000000e+00, %190
  %194 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 7
  store i8 1, i8* %194, align 1
  %195 = fcmp ogt float %168, 0x400921FB60000000
  %196 = bitcast i8* %43 to %class.SkTArray.211*
  br i1 %195, label %197, label %232

197:                                              ; preds = %186
  %198 = bitcast %struct.SkRGBA4f* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %198)
  %199 = bitcast %struct.SkRGBA4f* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %198, i8* align 4 %199, i64 16, i1 false)
  call void @_ZN8SkTArrayIN8CircleOp6CircleELb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.211* %196, i32 1, i32 1) #12
  %200 = bitcast i8* %43 to %"struct.CircleOp::Circle"**
  %201 = load %"struct.CircleOp::Circle"*, %"struct.CircleOp::Circle"** %200, align 8
  %202 = load i64, i64* %46, align 8
  %203 = lshr i64 %202, 1
  %204 = and i64 %203, 2147483647
  %205 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %201, i64 %204
  %206 = add i64 %202, 2
  %207 = and i64 %206, 4294967294
  %208 = and i64 %202, -4294967295
  %209 = or i64 %207, %208
  store i64 %209, i64* %46, align 8
  %210 = bitcast %"struct.CircleOp::Circle"* %205 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %210, i8* nonnull align 8 %198, i64 16, i1 false)
  %211 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %201, i64 %204, i32 1
  store float %71, float* %211, align 4
  %212 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %201, i64 %204, i32 2
  store float %72, float* %212, align 4
  %213 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %201, i64 %204, i32 3, i64 0
  store float %192, float* %213, align 4
  %214 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %201, i64 %204, i32 3, i64 1
  store float %193, float* %214, align 4
  %215 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %201, i64 %204, i32 3, i64 2
  %216 = bitcast float* %215 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %216, align 4
  %217 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %201, i64 %204, i32 5
  %218 = bitcast [3 x float]* %217 to i32*
  store i32 %187, i32* %218, align 4
  %219 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %201, i64 %204, i32 5, i64 1
  store float %188, float* %219, align 4
  %220 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %201, i64 %204, i32 5, i64 2
  store float 5.000000e-01, float* %220, align 4
  %221 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %201, i64 %204, i32 6
  %222 = bitcast [2 x %struct.SkPoint]* %221 to <2 x float>*
  store <2 x float> %166, <2 x float>* %222, align 4
  %223 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %201, i64 %204, i32 6, i64 1
  %224 = bitcast %struct.SkPoint* %223 to <2 x float>*
  store <2 x float> %165, <2 x float>* %224, align 4
  %225 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %201, i64 %204, i32 7
  %226 = bitcast %struct.SkRect* %225 to <2 x float>*
  store <2 x float> %87, <2 x float>* %226, align 4
  %227 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %201, i64 %204, i32 7, i32 2
  %228 = bitcast float* %227 to <2 x float>*
  store <2 x float> %89, <2 x float>* %228, align 4
  %229 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %201, i64 %204, i32 8
  store i8 %75, i8* %229, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %198)
  %230 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 8
  store i8 0, i8* %230, align 2
  %231 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 9
  store i8 1, i8* %231, align 1
  br label %331

232:                                              ; preds = %186
  %233 = bitcast %struct.SkRGBA4f* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %233)
  %234 = bitcast %struct.SkRGBA4f* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %233, i8* align 4 %234, i64 16, i1 false)
  call void @_ZN8SkTArrayIN8CircleOp6CircleELb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.211* %196, i32 1, i32 1) #12
  %235 = bitcast i8* %43 to %"struct.CircleOp::Circle"**
  %236 = load %"struct.CircleOp::Circle"*, %"struct.CircleOp::Circle"** %235, align 8
  %237 = load i64, i64* %46, align 8
  %238 = lshr i64 %237, 1
  %239 = and i64 %238, 2147483647
  %240 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %236, i64 %239
  %241 = add i64 %237, 2
  %242 = and i64 %241, 4294967294
  %243 = and i64 %237, -4294967295
  %244 = or i64 %242, %243
  store i64 %244, i64* %46, align 8
  %245 = bitcast %"struct.CircleOp::Circle"* %240 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %245, i8* nonnull align 8 %233, i64 16, i1 false)
  %246 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %236, i64 %239, i32 1
  store float %71, float* %246, align 4
  %247 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %236, i64 %239, i32 2
  store float %72, float* %247, align 4
  %248 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %236, i64 %239, i32 3, i64 0
  store float %192, float* %248, align 4
  %249 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %236, i64 %239, i32 3, i64 1
  store float %193, float* %249, align 4
  %250 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %236, i64 %239, i32 3, i64 2
  store float 5.000000e-01, float* %250, align 4
  %251 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %236, i64 %239, i32 4
  %252 = bitcast [3 x float]* %251 to i32*
  store i32 %187, i32* %252, align 4
  %253 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %236, i64 %239, i32 4, i64 1
  store float %188, float* %253, align 4
  %254 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %236, i64 %239, i32 4, i64 2
  %255 = bitcast float* %254 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %255, align 4
  %256 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %236, i64 %239, i32 6
  %257 = bitcast [2 x %struct.SkPoint]* %256 to <2 x float>*
  store <2 x float> %166, <2 x float>* %257, align 4
  %258 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %236, i64 %239, i32 6, i64 1
  %259 = bitcast %struct.SkPoint* %258 to <2 x float>*
  store <2 x float> %165, <2 x float>* %259, align 4
  %260 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %236, i64 %239, i32 7
  %261 = bitcast %struct.SkRect* %260 to <2 x float>*
  store <2 x float> %87, <2 x float>* %261, align 4
  %262 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %236, i64 %239, i32 7, i32 2
  %263 = bitcast float* %262 to <2 x float>*
  store <2 x float> %89, <2 x float>* %263, align 4
  %264 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %236, i64 %239, i32 8
  store i8 %75, i8* %264, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %233)
  %265 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 8
  store i8 1, i8* %265, align 2
  %266 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 9
  store i8 0, i8* %266, align 1
  br label %331

267:                                              ; preds = %164, %173
  call void @_ZNK7SkPoint5scaleEfPS_(%struct.SkPoint* nonnull %14, float %53, %struct.SkPoint* nonnull %14) #12
  call void @_ZNK7SkPoint5scaleEfPS_(%struct.SkPoint* nonnull %16, float %53, %struct.SkPoint* nonnull %16) #12
  %268 = bitcast %struct.SkPoint* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %268) #12
  %269 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %19, i64 0, i32 0
  %270 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %19, i64 0, i32 1
  %271 = load float, float* %94, align 4
  %272 = load float, float* %97, align 4
  %273 = fsub float %271, %272
  store float %273, float* %269, align 4
  %274 = load float, float* %96, align 8
  %275 = load float, float* %93, align 8
  %276 = fsub float %274, %275
  store float %276, float* %270, align 4
  %277 = call zeroext i1 @_ZN7SkPoint9normalizeEv(%struct.SkPoint* nonnull %19) #12
  %278 = load float, float* %104, align 4
  %279 = fcmp ogt float %278, 0.000000e+00
  %280 = load float, float* %269, align 4
  br i1 %279, label %283, label %281

281:                                              ; preds = %267
  %282 = load float, float* %270, align 4
  br label %287

283:                                              ; preds = %267
  %284 = fsub float -0.000000e+00, %280
  store float %284, float* %269, align 4
  %285 = load float, float* %270, align 4
  %286 = fsub float -0.000000e+00, %285
  store float %286, float* %270, align 4
  br label %287

287:                                              ; preds = %281, %283
  %288 = phi float [ %282, %281 ], [ %286, %283 ]
  %289 = phi float [ %280, %281 ], [ %284, %283 ]
  %290 = load float, float* %93, align 8
  %291 = fmul float %289, %290
  %292 = load float, float* %94, align 4
  %293 = fmul float %288, %292
  %294 = fadd float %291, %293
  %295 = fsub float 5.000000e-01, %294
  %296 = bitcast i8* %43 to %class.SkTArray.211*
  %297 = bitcast %struct.SkRGBA4f* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %297)
  %298 = bitcast %struct.SkRGBA4f* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %297, i8* align 4 %298, i64 16, i1 false)
  call void @_ZN8SkTArrayIN8CircleOp6CircleELb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.211* %296, i32 1, i32 1) #12
  %299 = bitcast i8* %43 to %"struct.CircleOp::Circle"**
  %300 = load %"struct.CircleOp::Circle"*, %"struct.CircleOp::Circle"** %299, align 8
  %301 = load i64, i64* %46, align 8
  %302 = lshr i64 %301, 1
  %303 = and i64 %302, 2147483647
  %304 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %300, i64 %303
  %305 = add i64 %301, 2
  %306 = and i64 %305, 4294967294
  %307 = and i64 %301, -4294967295
  %308 = or i64 %306, %307
  store i64 %308, i64* %46, align 8
  %309 = bitcast %"struct.CircleOp::Circle"* %304 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %309, i8* nonnull align 8 %297, i64 16, i1 false)
  %310 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %300, i64 %303, i32 1
  store float %71, float* %310, align 4
  %311 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %300, i64 %303, i32 2
  store float %72, float* %311, align 4
  %312 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %300, i64 %303, i32 3, i64 0
  store float %289, float* %312, align 4
  %313 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %300, i64 %303, i32 3, i64 1
  store float %288, float* %313, align 4
  %314 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %300, i64 %303, i32 3, i64 2
  store float %295, float* %314, align 4
  %315 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %300, i64 %303, i32 4, i64 0
  %316 = bitcast float* %315 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %316, align 4
  %317 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %300, i64 %303, i32 5, i64 1
  store float 0.000000e+00, float* %317, align 4
  %318 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %300, i64 %303, i32 5, i64 2
  store float 0.000000e+00, float* %318, align 4
  %319 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %300, i64 %303, i32 6
  %320 = bitcast [2 x %struct.SkPoint]* %319 to <2 x float>*
  store <2 x float> %166, <2 x float>* %320, align 4
  %321 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %300, i64 %303, i32 6, i64 1
  %322 = bitcast %struct.SkPoint* %321 to <2 x float>*
  store <2 x float> %165, <2 x float>* %322, align 4
  %323 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %300, i64 %303, i32 7
  %324 = bitcast %struct.SkRect* %323 to <2 x float>*
  store <2 x float> %87, <2 x float>* %324, align 4
  %325 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %300, i64 %303, i32 7, i32 2
  %326 = bitcast float* %325 to <2 x float>*
  store <2 x float> %89, <2 x float>* %326, align 4
  %327 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %300, i64 %303, i32 8
  store i8 %75, i8* %327, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %297)
  %328 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 7
  store i8 1, i8* %328, align 1
  %329 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 8
  store i8 0, i8* %329, align 2
  %330 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 9
  store i8 0, i8* %330, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %268) #12
  br label %331

331:                                              ; preds = %197, %232, %287
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #12
  br label %364

332:                                              ; preds = %68
  %333 = bitcast i8* %43 to %class.SkTArray.211*
  %334 = bitcast %struct.SkRGBA4f* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %334)
  %335 = bitcast %struct.SkRGBA4f* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %334, i8* align 4 %335, i64 16, i1 false)
  call void @_ZN8SkTArrayIN8CircleOp6CircleELb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.211* %333, i32 1, i32 1) #12
  %336 = bitcast i8* %43 to %"struct.CircleOp::Circle"**
  %337 = load %"struct.CircleOp::Circle"*, %"struct.CircleOp::Circle"** %336, align 8
  %338 = load i64, i64* %46, align 8
  %339 = lshr i64 %338, 1
  %340 = and i64 %339, 2147483647
  %341 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %337, i64 %340
  %342 = add i64 %338, 2
  %343 = and i64 %342, 4294967294
  %344 = and i64 %338, -4294967295
  %345 = or i64 %343, %344
  store i64 %345, i64* %46, align 8
  %346 = bitcast %"struct.CircleOp::Circle"* %341 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %346, i8* nonnull align 8 %334, i64 16, i1 false)
  %347 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %337, i64 %340, i32 1
  store float %71, float* %347, align 4
  %348 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %337, i64 %340, i32 2
  store float %72, float* %348, align 4
  %349 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %337, i64 %340, i32 3, i64 0
  %350 = bitcast float* %349 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %350, align 4
  %351 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %337, i64 %340, i32 4, i64 1
  %352 = bitcast float* %351 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %352, align 4
  %353 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %337, i64 %340, i32 5, i64 2
  store float 0.000000e+00, float* %353, align 4
  %354 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %337, i64 %340, i32 6
  %355 = bitcast [2 x %struct.SkPoint]* %354 to <2 x i64>*
  store <2 x i64> <i64 5770521767358825209, i64 5770521767358825209>, <2 x i64>* %355, align 4
  %356 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %337, i64 %340, i32 7
  %357 = bitcast %struct.SkRect* %356 to <2 x float>*
  store <2 x float> %87, <2 x float>* %357, align 4
  %358 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %337, i64 %340, i32 7, i32 2
  %359 = bitcast float* %358 to <2 x float>*
  store <2 x float> %89, <2 x float>* %359, align 4
  %360 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %337, i64 %340, i32 8
  store i8 %75, i8* %360, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %334)
  %361 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 7
  store i8 0, i8* %361, align 1
  %362 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 8
  store i8 0, i8* %362, align 2
  %363 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 9
  store i8 0, i8* %363, align 1
  br label %364

364:                                              ; preds = %332, %331
  %365 = fadd float %53, %69
  %366 = load <2 x float>, <2 x float>* %11, align 8
  %367 = shufflevector <2 x float> %366, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %368 = insertelement <4 x float> undef, float %365, i32 0
  %369 = shufflevector <4 x float> %368, <4 x float> undef, <4 x i32> zeroinitializer
  %370 = fsub <4 x float> %367, %369
  %371 = fadd <4 x float> %367, %369
  %372 = shufflevector <4 x float> %370, <4 x float> %371, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %373 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0
  %374 = bitcast float* %373 to <4 x float>*
  store <4 x float> %372, <4 x float>* %374, align 8
  %375 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  store i16 1, i16* %375, align 2
  %376 = select i1 %74, i32 16, i32 9
  %377 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 4
  store i32 %376, i32* %377, align 8
  %378 = select i1 %74, i32 48, i32 24
  %379 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 5
  store i32 %378, i32* %379, align 4
  %380 = xor i1 %74, true
  %381 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 6
  %382 = zext i1 %380 to i8
  store i8 %382, i8* %381, align 8
  ret void
}

declare zeroext i1 @_ZN7SkPoint9normalizeEv(%struct.SkPoint*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8CircleOpD2Ev(%class.CircleOp*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV8CircleOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 3, i32 0, i32 0, i64 104
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 3, i32 0, i32 0, i64 96
  %10 = bitcast i8* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #12
  br label %12

12:                                               ; preds = %1, %8
  %13 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 2
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD1Ev(%class.GrSimpleMeshDrawOpHelper* %13) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %14 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %class.GrOp*, %class.GrOp** %14, align 8
  store %class.GrOp* null, %class.GrOp** %14, align 8
  %16 = icmp eq %class.GrOp* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  %18 = bitcast %class.GrOp* %15 to void (%class.GrOp*)***
  %19 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %19, i64 1
  %21 = load void (%class.GrOp*)*, void (%class.GrOp*)** %20, align 8
  tail call void %21(%class.GrOp* nonnull %15) #12
  br label %22

22:                                               ; preds = %12, %17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8CircleOpD0Ev(%class.CircleOp*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV8CircleOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 3, i32 0, i32 0, i64 104
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 3, i32 0, i32 0, i64 96
  %10 = bitcast i8* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #12
  br label %12

12:                                               ; preds = %8, %1
  %13 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 2
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD1Ev(%class.GrSimpleMeshDrawOpHelper* %13) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %14 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %class.GrOp*, %class.GrOp** %14, align 8
  store %class.GrOp* null, %class.GrOp** %14, align 8
  %16 = icmp eq %class.GrOp* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  %18 = bitcast %class.GrOp* %15 to void (%class.GrOp*)***
  %19 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %19, i64 1
  %21 = load void (%class.GrOp*)*, void (%class.GrOp*)** %20, align 8
  tail call void %21(%class.GrOp* nonnull %15) #12
  br label %22

22:                                               ; preds = %12, %17
  %23 = bitcast %class.CircleOp* %0 to i8*
  tail call void @_ZdlPv(i8* %23) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK8CircleOp4nameEv(%class.CircleOp*) unnamed_addr #4 comdat align 2 {
  ret i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.109, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK8CircleOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.CircleOp*, %"class.std::__1::function.137"*) unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 13
  %4 = load %class.GrProgramInfo*, %class.GrProgramInfo** %3, align 8
  %5 = icmp eq %class.GrProgramInfo* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %4, i64 0, i32 5
  %8 = load %class.GrPipeline*, %class.GrPipeline** %7, align 8
  tail call void @_ZNK10GrPipeline12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrPipeline* %8, %"class.std::__1::function.137"* %1) #12
  br label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 2, i32 0
  %11 = load %class.GrProcessorSet*, %class.GrProcessorSet** %10, align 8
  %12 = icmp eq %class.GrProcessorSet* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZNK14GrProcessorSet12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrProcessorSet* nonnull %11, %"class.std::__1::function.137"* %1) #12
  br label %14

14:                                               ; preds = %13, %9, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8CircleOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps(%class.CircleOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps* dereferenceable(232)) unnamed_addr #4 comdat align 2 {
  %5 = bitcast %class.GrOp* %1 to %class.CircleOp*
  %6 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 4, i32 3
  %9 = bitcast i16* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = add nsw i32 %10, %7
  %12 = icmp sgt i32 %11, 65536
  br i1 %12, label %147, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 2
  %15 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 1, i32 6, i32 2
  %16 = bitcast float* %15 to %class.GrSimpleMeshDrawOpHelper*
  %17 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %18 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 0, i32 6
  %19 = tail call zeroext i1 @_ZNK24GrSimpleMeshDrawOpHelper12isCompatibleERKS_RK6GrCapsRK6SkRectS7_b(%class.GrSimpleMeshDrawOpHelper* %14, %class.GrSimpleMeshDrawOpHelper* dereferenceable(16) %16, %class.GrCaps* dereferenceable(232) %3, %struct.SkRect* dereferenceable(16) %17, %struct.SkRect* dereferenceable(16) %18, i1 zeroext false) #12
  br i1 %19, label %20, label %147

20:                                               ; preds = %13
  %21 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 2, i32 2
  %22 = load i8, i8* %21, align 1
  %23 = and i8 %22, 4
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %35, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 1
  %27 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 1
  %28 = bitcast %class.GrOp* %27 to %class.SkMatrix*
  %29 = icmp eq %class.SkMatrix* %26, %28
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = bitcast %class.SkMatrix* %26 to i8*
  %32 = bitcast %class.GrOp* %27 to i8*
  %33 = tail call i32 @bcmp(i8* %31, i8* %32, i64 36) #12
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %147

35:                                               ; preds = %20, %25, %30
  %36 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %5, i64 0, i32 7
  %37 = load i8, i8* %36, align 1, !range !2
  %38 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 7
  %39 = load i8, i8* %38, align 1, !range !2
  %40 = or i8 %39, %37
  store i8 %40, i8* %38, align 1
  %41 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %5, i64 0, i32 8
  %42 = load i8, i8* %41, align 2, !range !2
  %43 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 8
  %44 = load i8, i8* %43, align 2, !range !2
  %45 = or i8 %44, %42
  store i8 %45, i8* %43, align 2
  %46 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %5, i64 0, i32 9
  %47 = load i8, i8* %46, align 1, !range !2
  %48 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 9
  %49 = load i8, i8* %48, align 1, !range !2
  %50 = or i8 %49, %47
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 4, i32 6, i32 1
  %52 = bitcast float* %51 to i8*
  %53 = load i8, i8* %52, align 4, !range !2
  %54 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 10
  %55 = load i8, i8* %54, align 4, !range !2
  %56 = or i8 %55, %53
  store i8 %56, i8* %54, align 4
  %57 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %5, i64 0, i32 11
  %58 = load i8, i8* %57, align 1, !range !2
  %59 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 11
  %60 = load i8, i8* %59, align 1, !range !2
  %61 = or i8 %60, %58
  store i8 %61, i8* %59, align 1
  %62 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 3, i32 0, i32 0, i64 96
  %63 = bitcast i8* %62 to %class.SkTArray.211*
  %64 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 4, i32 1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 1
  %66 = bitcast %"class.std::__1::unique_ptr"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = lshr i64 %67, 1
  %69 = trunc i64 %68 to i32
  %70 = and i32 %69, 2147483647
  %71 = bitcast %"class.std::__1::unique_ptr"* %64 to %"struct.CircleOp::Circle"**
  %72 = load %"struct.CircleOp::Circle"*, %"struct.CircleOp::Circle"** %71, align 8
  tail call void @_ZN8SkTArrayIN8CircleOp6CircleELb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.211* %63, i32 %70, i32 1) #12
  %73 = icmp eq i32 %70, 0
  br i1 %73, label %121, label %74

74:                                               ; preds = %35
  %75 = bitcast i8* %62 to %"struct.CircleOp::Circle"**
  %76 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 3, i32 0, i32 0, i64 104
  %77 = bitcast i8* %76 to i64*
  %78 = zext i32 %70 to i64
  %79 = and i64 %78, 1
  %80 = icmp eq i32 %70, 1
  br i1 %80, label %108, label %81

81:                                               ; preds = %74
  %82 = sub nsw i64 %78, %79
  br label %83

83:                                               ; preds = %83, %81
  %84 = phi i64 [ 0, %81 ], [ %105, %83 ]
  %85 = phi i64 [ %82, %81 ], [ %106, %83 ]
  %86 = load %"struct.CircleOp::Circle"*, %"struct.CircleOp::Circle"** %75, align 8
  %87 = load i64, i64* %77, align 8
  %88 = lshr i64 %87, 1
  %89 = and i64 %88, 2147483647
  %90 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %86, i64 %89
  %91 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %90, i64 %84
  %92 = bitcast %"struct.CircleOp::Circle"* %91 to i8*
  %93 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %72, i64 %84
  %94 = bitcast %"struct.CircleOp::Circle"* %93 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %92, i8* align 4 %94, i64 96, i1 false) #12
  %95 = or i64 %84, 1
  %96 = load %"struct.CircleOp::Circle"*, %"struct.CircleOp::Circle"** %75, align 8
  %97 = load i64, i64* %77, align 8
  %98 = lshr i64 %97, 1
  %99 = and i64 %98, 2147483647
  %100 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %96, i64 %99
  %101 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %100, i64 %95
  %102 = bitcast %"struct.CircleOp::Circle"* %101 to i8*
  %103 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %72, i64 %95
  %104 = bitcast %"struct.CircleOp::Circle"* %103 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %104, i64 96, i1 false) #12
  %105 = add nuw nsw i64 %84, 2
  %106 = add i64 %85, -2
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %83

108:                                              ; preds = %83, %74
  %109 = phi i64 [ 0, %74 ], [ %105, %83 ]
  %110 = icmp eq i64 %79, 0
  br i1 %110, label %121, label %111

111:                                              ; preds = %108
  %112 = load %"struct.CircleOp::Circle"*, %"struct.CircleOp::Circle"** %75, align 8
  %113 = load i64, i64* %77, align 8
  %114 = lshr i64 %113, 1
  %115 = and i64 %114, 2147483647
  %116 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %112, i64 %115
  %117 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %116, i64 %109
  %118 = bitcast %"struct.CircleOp::Circle"* %117 to i8*
  %119 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %72, i64 %109
  %120 = bitcast %"struct.CircleOp::Circle"* %119 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %118, i8* align 4 %120, i64 96, i1 false) #12
  br label %121

121:                                              ; preds = %111, %108, %35
  %122 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 3, i32 0, i32 0, i64 104
  %123 = bitcast i8* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = and i64 %67, 4294967294
  %126 = add i64 %124, %125
  %127 = and i64 %126, 4294967294
  %128 = and i64 %124, -4294967295
  %129 = or i64 %127, %128
  store i64 %129, i64* %123, align 8
  %130 = load i32, i32* %9, align 8
  %131 = load i32, i32* %6, align 8
  %132 = add nsw i32 %131, %130
  store i32 %132, i32* %6, align 8
  %133 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 4, i32 5
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 5
  %136 = load i32, i32* %135, align 4
  %137 = add nsw i32 %136, %134
  store i32 %137, i32* %135, align 4
  %138 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 6
  %139 = load i8, i8* %138, align 8, !range !2
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %145, label %141

141:                                              ; preds = %121
  %142 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 4, i32 6
  %143 = bitcast %struct.SkRect* %142 to i8*
  %144 = load i8, i8* %143, align 8, !range !2
  br label %145

145:                                              ; preds = %121, %141
  %146 = phi i8 [ 0, %121 ], [ %144, %141 ]
  store i8 %146, i8* %138, align 8
  br label %147

147:                                              ; preds = %30, %13, %4, %145
  %148 = phi i32 [ 0, %145 ], [ 2, %4 ], [ 2, %13 ], [ 2, %30 ]
  ret i32 %148
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8CircleOp9onExecuteEP14GrOpFlushStateRK6SkRect(%class.CircleOp*, %class.GrOpFlushState*, %struct.SkRect* dereferenceable(16)) unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 13
  %5 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %6 = icmp eq %class.GrProgramInfo* %5, null
  br i1 %6, label %35, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 12
  %9 = load %struct.GrSimpleMesh*, %struct.GrSimpleMesh** %8, align 8
  %10 = icmp eq %struct.GrSimpleMesh* %9, null
  br i1 %10, label %35, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 15
  %13 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass12bindPipelineERK13GrProgramInfoRK6SkRect(%class.GrOpsRenderPass* %13, %class.GrProgramInfo* nonnull dereferenceable(128) %5, %struct.SkRect* dereferenceable(16) %2) #12
  %14 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %5, i64 0, i32 5
  %15 = load %class.GrPipeline*, %class.GrPipeline** %14, align 8
  %16 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %15, i64 0, i32 5
  %17 = load i8, i8* %16, align 8
  %18 = and i8 %17, 32
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 10
  %22 = load %"struct.GrOpFlushState::OpArgs"*, %"struct.GrOpFlushState::OpArgs"** %21, align 8
  %23 = getelementptr inbounds %"struct.GrOpFlushState::OpArgs", %"struct.GrOpFlushState::OpArgs"* %22, i64 0, i32 4
  %24 = load %class.GrAppliedClip*, %class.GrAppliedClip** %23, align 8
  %25 = getelementptr inbounds %class.GrAppliedClip, %class.GrAppliedClip* %24, i64 0, i32 0, i32 0, i32 1
  %26 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass14setScissorRectERK7SkIRect(%class.GrOpsRenderPass* %26, %struct.SkIRect* dereferenceable(16) %25) #12
  br label %27

27:                                               ; preds = %11, %20
  %28 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %29 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %28, i64 0, i32 7
  %30 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %29, align 8
  %31 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %28, i64 0, i32 5
  %32 = load %class.GrPipeline*, %class.GrPipeline** %31, align 8
  %33 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrOpsRenderPass* %33, %class.GrGeometryProcessor* dereferenceable(80) %30, %class.GrSurfaceProxy** null, %class.GrPipeline* dereferenceable(128) %32) #12
  %34 = load %struct.GrSimpleMesh*, %struct.GrSimpleMesh** %8, align 8
  tail call void @_ZN14GrOpFlushState8drawMeshERK12GrSimpleMesh(%class.GrOpFlushState* %1, %struct.GrSimpleMesh* dereferenceable(48) %34) #12
  br label %35

35:                                               ; preds = %7, %3, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK8CircleOp18fixedFunctionFlagsEv(%class.CircleOp*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 2
  %3 = tail call i32 @_ZNK24GrSimpleMeshDrawOpHelper18fixedFunctionFlagsEv(%class.GrSimpleMeshDrawOpHelper* %2) #12
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8CircleOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType(%class.CircleOp*, %class.GrCaps* dereferenceable(232), %class.GrAppliedClip*, i32) unnamed_addr #4 comdat align 2 {
  %5 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 3, i32 0, i32 0, i64 96
  %6 = bitcast i8* %5 to %"struct.CircleOp::Circle"**
  %7 = load %"struct.CircleOp::Circle"*, %"struct.CircleOp::Circle"** %6, align 8
  %8 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 2
  %10 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 11
  %11 = tail call i32 @_ZN24GrSimpleMeshDrawOpHelper18finalizeProcessorsERK6GrCapsPK13GrAppliedClip11GrClampType27GrProcessorAnalysisCoverageP8SkRGBA4fIL11SkAlphaType2EEPb(%class.GrSimpleMeshDrawOpHelper* %9, %class.GrCaps* dereferenceable(232) %1, %class.GrAppliedClip* %2, i32 %3, i32 1, %struct.SkRGBA4f* %8, i8* %10) #12
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrProgramInfo* @_ZN8CircleOp11programInfoEv(%class.CircleOp*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 13
  %3 = load %class.GrProgramInfo*, %class.GrProgramInfo** %2, align 8
  ret %class.GrProgramInfo* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8CircleOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.CircleOp*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip* dereferenceable(72), %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #4 comdat align 2 {
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca %class.anon, align 8
  %16 = alloca %class.SkMatrix, align 16
  %17 = bitcast %class.SkMatrix* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #12
  %18 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %16, i64 0, i32 1
  %19 = bitcast %class.SkMatrix* %16 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %19, align 16
  %20 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %16, i64 0, i32 0, i64 4
  %21 = bitcast float* %20 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %21, align 16
  %22 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %16, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %22, align 16
  store i32 16, i32* %18, align 4
  %23 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 1
  %24 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 1, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = trunc i32 %25 to i8
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %8
  %29 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %23) #12
  %30 = zext i8 %29 to i32
  store i32 %30, i32* %24, align 4
  br label %31

31:                                               ; preds = %28, %8
  %32 = phi i32 [ %30, %28 ], [ %25, %8 ]
  %33 = and i32 %32, 15
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %16) #12
  br label %39

37:                                               ; preds = %31
  %38 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* %23, %class.SkMatrix* nonnull %16) #12
  br i1 %38, label %39, label %66

39:                                               ; preds = %35, %37
  %40 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 6
  %41 = load i8, i8* %40, align 8, !range !2
  %42 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 7
  %43 = load i8, i8* %42, align 1, !range !2
  %44 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 8
  %45 = load i8, i8* %44, align 2, !range !2
  %46 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 9
  %47 = load i8, i8* %46, align 1, !range !2
  %48 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 10
  %49 = load i8, i8* %48, align 4, !range !2
  %50 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 11
  %51 = load i8, i8* %50, align 1, !range !2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14)
  %52 = xor i8 %41, 1
  store i8 %52, i8* %9, align 1
  store i8 %43, i8* %10, align 1
  store i8 %45, i8* %11, align 1
  store i8 %47, i8* %12, align 1
  store i8 %49, i8* %13, align 1
  store i8 %51, i8* %14, align 1
  %53 = bitcast %class.anon* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %53) #12
  %54 = getelementptr inbounds %class.anon, %class.anon* %15, i64 0, i32 0
  store i8* %9, i8** %54, align 8
  %55 = getelementptr inbounds %class.anon, %class.anon* %15, i64 0, i32 1
  store i8* %10, i8** %55, align 8
  %56 = getelementptr inbounds %class.anon, %class.anon* %15, i64 0, i32 2
  store i8* %11, i8** %56, align 8
  %57 = getelementptr inbounds %class.anon, %class.anon* %15, i64 0, i32 3
  store i8* %12, i8** %57, align 8
  %58 = getelementptr inbounds %class.anon, %class.anon* %15, i64 0, i32 4
  store i8* %13, i8** %58, align 8
  %59 = getelementptr inbounds %class.anon, %class.anon* %15, i64 0, i32 5
  store i8* %14, i8** %59, align 8
  %60 = getelementptr inbounds %class.anon, %class.anon* %15, i64 0, i32 6
  store %class.SkMatrix* %16, %class.SkMatrix** %60, align 8
  %61 = call %class.CircleGeometryProcessor* @_ZN12SkArenaAlloc4makeIZN23CircleGeometryProcessor4MakeEPS_bbbbbbRK8SkMatrixEUlPvE_EEDTclfp_LDnEEEOT_(%class.SkArenaAlloc* %2, %class.anon* nonnull dereferenceable(56) %15) #12
  %62 = bitcast %class.CircleGeometryProcessor* %61 to %class.GrGeometryProcessor*
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %53) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14)
  %63 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 2
  %64 = call %class.GrProgramInfo* @_ZN24GrSimpleMeshDrawOpHelper17createProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewEP19GrGeometryProcessor15GrPrimitiveType18GrXferBarrierFlags8GrLoadOp(%class.GrSimpleMeshDrawOpHelper* %63, %class.GrCaps* %1, %class.SkArenaAlloc* %2, %class.GrSurfaceProxyView* dereferenceable(16) %3, %class.GrAppliedClip* dereferenceable(72) %4, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %5, %class.GrGeometryProcessor* %62, i8 zeroext 0, i32 %6, i32 %7) #12
  %65 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 13
  store %class.GrProgramInfo* %64, %class.GrProgramInfo** %65, align 8
  br label %66

66:                                               ; preds = %37, %39
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8CircleOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE(%class.CircleOp*, %"class.GrMeshDrawOp::Target"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.sk_sp.76, align 8
  %4 = alloca i32, align 4
  %5 = alloca %class.sk_sp.76, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %struct.SkPoint*
  %9 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 13
  %10 = load %class.GrProgramInfo*, %class.GrProgramInfo** %9, align 8
  %11 = icmp eq %class.GrProgramInfo* %10, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 0
  tail call void @_ZN12GrMeshDrawOp17createProgramInfoEPNS_6TargetE(%class.GrMeshDrawOp* %13, %"class.GrMeshDrawOp::Target"* %1) #12
  %14 = load %class.GrProgramInfo*, %class.GrProgramInfo** %9, align 8
  %15 = icmp eq %class.GrProgramInfo* %14, null
  br i1 %15, label %472, label %16

16:                                               ; preds = %12, %2
  %17 = phi %class.GrProgramInfo* [ %14, %12 ], [ %10, %2 ]
  %18 = bitcast %class.sk_sp.76* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %class.sk_sp.76, %class.sk_sp.76* %3, i64 0, i32 0
  store %class.GrBuffer* null, %class.GrBuffer** %19, align 8
  %20 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #12
  store i32 -1431655766, i32* %4, align 4
  %21 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %17, i64 0, i32 7
  %22 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %21, align 8
  %23 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %22, i64 0, i32 3, i32 3
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = bitcast %"class.GrMeshDrawOp::Target"* %1 to i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.76*, i32*)***
  %28 = load i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.76*, i32*)**, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.76*, i32*)*** %27, align 8
  %29 = getelementptr inbounds i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.76*, i32*)*, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.76*, i32*)** %28, i64 3
  %30 = load i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.76*, i32*)*, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.76*, i32*)** %29, align 8
  %31 = call i8* %30(%"class.GrMeshDrawOp::Target"* %1, i64 %24, i32 %26, %class.sk_sp.76* nonnull %3, i32* nonnull %4) #12
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %34

33:                                               ; preds = %16
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1309, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.50, i64 0, i64 0)) #12
  br label %463

34:                                               ; preds = %16
  %35 = bitcast %class.sk_sp.76* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  %36 = getelementptr inbounds %class.sk_sp.76, %class.sk_sp.76* %5, i64 0, i32 0
  store %class.GrBuffer* null, %class.GrBuffer** %36, align 8
  %37 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #12
  store i32 0, i32* %6, align 4
  %38 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 5
  %39 = load i32, i32* %38, align 4
  %40 = bitcast %"class.GrMeshDrawOp::Target"* %1 to i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.76*, i32*)***
  %41 = load i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.76*, i32*)**, i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.76*, i32*)*** %40, align 8
  %42 = getelementptr inbounds i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.76*, i32*)*, i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.76*, i32*)** %41, i64 4
  %43 = load i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.76*, i32*)*, i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.76*, i32*)** %42, align 8
  %44 = call i16* %43(%"class.GrMeshDrawOp::Target"* %1, i32 %39, %class.sk_sp.76* nonnull %5, i32* nonnull %6) #12
  %45 = icmp eq i16* %44, null
  br i1 %45, label %46, label %47

46:                                               ; preds = %34
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1317, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.51, i64 0, i64 0)) #12
  br label %454

47:                                               ; preds = %34
  %48 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 3, i32 0, i32 0, i64 96
  %49 = bitcast i8* %48 to %"struct.CircleOp::Circle"**
  %50 = load %"struct.CircleOp::Circle"*, %"struct.CircleOp::Circle"** %49, align 8
  %51 = icmp eq %"struct.CircleOp::Circle"* %50, null
  br i1 %51, label %70, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 3, i32 0, i32 0, i64 104
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = lshr i64 %55, 1
  %57 = and i64 %56, 2147483647
  %58 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %50, i64 %57
  %59 = icmp eq i64 %57, 0
  br i1 %59, label %70, label %60

60:                                               ; preds = %52
  %61 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 11
  %62 = bitcast i64* %7 to i8*
  %63 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 7
  %64 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 8
  %65 = bitcast i64* %7 to float*
  %66 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %8, i64 0, i32 1
  %67 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 9
  %68 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 10
  %69 = bitcast i64* %7 to <2 x float>*
  br label %130

70:                                               ; preds = %422, %47, %52
  %71 = bitcast %"class.GrMeshDrawOp::Target"* %1 to %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)***
  %72 = load %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)**, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*** %71, align 8
  %73 = getelementptr inbounds %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)** %72, i64 29
  %74 = load %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)** %73, align 8
  %75 = call %class.SkArenaAlloc* %74(%"class.GrMeshDrawOp::Target"* %1) #12
  %76 = call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %75, i32 57, i32 8) #12
  %77 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %75, i64 0, i32 1
  %78 = bitcast i8** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = ptrtoint i8* %76 to i64
  %81 = sub i64 %80, %79
  %82 = trunc i64 %81 to i32
  %83 = getelementptr inbounds i8, i8* %76, i64 48
  store i8* %83, i8** %77, align 8
  call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %75, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeI12GrSimpleMeshJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS3_ENUlPcE_8__invokeESC_, i32 %82) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 48, i1 false) #12
  %84 = getelementptr inbounds %class.CircleOp, %class.CircleOp* %0, i64 0, i32 12
  %85 = bitcast %struct.GrSimpleMesh** %84 to i8**
  store i8* %76, i8** %85, align 8
  %86 = bitcast %class.sk_sp.76* %5 to i64*
  %87 = load i64, i64* %86, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %36, align 8
  %88 = load i32, i32* %38, align 4
  %89 = load i32, i32* %6, align 4
  %90 = load i32, i32* %25, align 8
  %91 = trunc i32 %90 to i16
  %92 = add i16 %91, -1
  %93 = bitcast %class.sk_sp.76* %3 to i64*
  %94 = load i64, i64* %93, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %19, align 8
  %95 = load i32, i32* %4, align 4
  %96 = bitcast i8* %76 to %class.GrBuffer**
  %97 = load %class.GrBuffer*, %class.GrBuffer** %96, align 8
  %98 = bitcast i8* %76 to i64*
  store i64 %87, i64* %98, align 8
  %99 = icmp eq %class.GrBuffer* %97, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %70
  %101 = bitcast %class.GrBuffer* %97 to void (%class.GrBuffer*)***
  %102 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %101, align 8
  %103 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %102, i64 3
  %104 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %103, align 8
  call void %104(%class.GrBuffer* nonnull %97) #12
  br label %105

105:                                              ; preds = %100, %70
  %106 = getelementptr inbounds i8, i8* %76, i64 8
  %107 = bitcast i8* %106 to i32*
  store i32 %88, i32* %107, align 8
  %108 = getelementptr inbounds i8, i8* %76, i64 12
  %109 = bitcast i8* %108 to i32*
  store i32 0, i32* %109, align 4
  %110 = getelementptr inbounds i8, i8* %76, i64 20
  %111 = bitcast i8* %110 to i32*
  store i32 %89, i32* %111, align 4
  %112 = getelementptr inbounds i8, i8* %76, i64 24
  %113 = bitcast i8* %112 to i16*
  store i16 0, i16* %113, align 8
  %114 = getelementptr inbounds i8, i8* %76, i64 26
  %115 = bitcast i8* %114 to i16*
  store i16 %92, i16* %115, align 2
  %116 = getelementptr inbounds i8, i8* %76, i64 28
  store i8 0, i8* %116, align 4
  %117 = getelementptr inbounds i8, i8* %76, i64 32
  %118 = bitcast i8* %117 to %class.GrBuffer**
  %119 = load %class.GrBuffer*, %class.GrBuffer** %118, align 8
  %120 = bitcast i8* %117 to i64*
  store i64 %94, i64* %120, align 8
  %121 = icmp eq %class.GrBuffer* %119, null
  br i1 %121, label %127, label %122

122:                                              ; preds = %105
  %123 = bitcast %class.GrBuffer* %119 to void (%class.GrBuffer*)***
  %124 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %123, align 8
  %125 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %124, i64 3
  %126 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %125, align 8
  call void %126(%class.GrBuffer* nonnull %119) #12
  br label %127

127:                                              ; preds = %105, %122
  %128 = getelementptr inbounds i8, i8* %76, i64 44
  %129 = bitcast i8* %128 to i32*
  store i32 %95, i32* %129, align 4
  br label %454

130:                                              ; preds = %60, %422
  %131 = phi i16* [ %44, %60 ], [ %423, %422 ]
  %132 = phi i32 [ 0, %60 ], [ %427, %422 ]
  %133 = phi %"struct.CircleOp::Circle"* [ %50, %60 ], [ %428, %422 ]
  %134 = phi i8* [ %31, %60 ], [ %388, %422 ]
  %135 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %133, i64 0, i32 1
  %136 = load float, float* %135, align 4
  %137 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %133, i64 0, i32 2
  %138 = load float, float* %137, align 4
  %139 = load i8, i8* %61, align 1, !range !2
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %153, label %141

141:                                              ; preds = %130
  %142 = bitcast %"struct.CircleOp::Circle"* %133 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %133, i64 0, i32 0, i32 1
  %145 = bitcast float* %144 to i32*
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %133, i64 0, i32 0, i32 2
  %148 = bitcast float* %147 to i32*
  %149 = load i32, i32* %148, align 4
  %150 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %133, i64 0, i32 0, i32 3
  %151 = bitcast float* %150 to i32*
  %152 = load i32, i32* %151, align 4
  br label %156

153:                                              ; preds = %130
  %154 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %133, i64 0, i32 0
  %155 = call i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f* %154) #12
  br label %156

156:                                              ; preds = %141, %153
  %157 = phi i32 [ %143, %141 ], [ %155, %153 ]
  %158 = phi i32 [ %146, %141 ], [ -1431655766, %153 ]
  %159 = phi i32 [ %149, %141 ], [ -1431655766, %153 ]
  %160 = phi i32 [ %152, %141 ], [ -1431655766, %153 ]
  %161 = fdiv float %136, %138
  %162 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %133, i64 0, i32 7, i32 0
  %163 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %133, i64 0, i32 7, i32 2
  %164 = bitcast float* %162 to <2 x float>*
  %165 = load <2 x float>, <2 x float>* %164, align 4
  %166 = fmul <2 x float> %165, <float 5.000000e-01, float 5.000000e-01>
  %167 = bitcast float* %163 to <2 x float>*
  %168 = load <2 x float>, <2 x float>* %167, align 4
  %169 = fmul <2 x float> %168, <float 5.000000e-01, float 5.000000e-01>
  %170 = fadd <2 x float> %166, %169
  %171 = extractelement <2 x float> %165, i32 0
  %172 = extractelement <2 x float> %168, i32 0
  %173 = fsub float %172, %171
  %174 = fmul float %173, 5.000000e-01
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #12
  store i64 0, i64* %7, align 8
  %175 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %133, i64 0, i32 8
  %176 = load i8, i8* %175, align 4, !range !2
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %178, label %205

178:                                              ; preds = %156
  %179 = load i8, i8* %63, align 1, !range !2
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %205, label %181

181:                                              ; preds = %178
  %182 = load i8, i8* %64, align 2, !range !2
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %205, label %184

184:                                              ; preds = %181
  %185 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %133, i64 0, i32 3, i64 0
  %186 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %133, i64 0, i32 4, i64 0
  %187 = bitcast float* %185 to <2 x float>*
  %188 = load <2 x float>, <2 x float>* %187, align 4
  %189 = bitcast float* %186 to <2 x float>*
  %190 = load <2 x float>, <2 x float>* %189, align 4
  %191 = fmul <2 x float> %188, %190
  %192 = extractelement <2 x float> %191, i32 0
  %193 = extractelement <2 x float> %191, i32 1
  %194 = fadd float %192, %193
  %195 = fcmp olt float %194, 0.000000e+00
  br i1 %195, label %196, label %205

196:                                              ; preds = %184
  %197 = extractelement <2 x float> %188, i32 1
  %198 = extractelement <2 x float> %190, i32 1
  %199 = fsub float %197, %198
  %200 = extractelement <2 x float> %188, i32 0
  %201 = extractelement <2 x float> %190, i32 0
  %202 = fsub float %201, %200
  store float %199, float* %65, align 8
  store float %202, float* %66, align 4
  %203 = call zeroext i1 @_ZN7SkPoint9normalizeEv(%struct.SkPoint* nonnull %8) #12
  %204 = fdiv float 5.000000e-01, %174
  br label %205

205:                                              ; preds = %181, %178, %156, %196, %184
  %206 = phi float [ 1.000000e+00, %156 ], [ %204, %196 ], [ 1.000000e+00, %184 ], [ 1.000000e+00, %181 ], [ 1.000000e+00, %178 ]
  %207 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %133, i64 0, i32 3
  %208 = bitcast [3 x float]* %207 to i8*
  %209 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %133, i64 0, i32 4
  %210 = bitcast [3 x float]* %209 to i8*
  %211 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %133, i64 0, i32 5
  %212 = bitcast [3 x float]* %211 to i8*
  %213 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %133, i64 0, i32 6
  %214 = bitcast [2 x %struct.SkPoint]* %213 to i8*
  %215 = insertelement <2 x float> undef, float %174, i32 0
  %216 = shufflevector <2 x float> %215, <2 x float> undef, <2 x i32> zeroinitializer
  br label %223

217:                                              ; preds = %284
  %218 = load i8, i8* %175, align 4, !range !2
  %219 = icmp eq i8 %218, 0
  br i1 %219, label %345, label %220

220:                                              ; preds = %217
  %221 = insertelement <2 x float> undef, float %161, i32 0
  %222 = shufflevector <2 x float> %221, <2 x float> undef, <2 x i32> zeroinitializer
  br label %288

223:                                              ; preds = %284, %205
  %224 = phi i64 [ 0, %205 ], [ %286, %284 ]
  %225 = phi i8* [ %134, %205 ], [ %285, %284 ]
  %226 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* @_ZL13kOctagonOuter, i64 0, i64 %224, i32 0
  %227 = bitcast float* %226 to <2 x float>*
  %228 = load <2 x float>, <2 x float>* %227, align 8
  %229 = load <2 x float>, <2 x float>* %69, align 8
  %230 = fmul <2 x float> %228, %229
  %231 = extractelement <2 x float> %230, i32 0
  %232 = extractelement <2 x float> %230, i32 1
  %233 = fadd float %231, %232
  %234 = fadd float %206, %233
  %235 = fcmp ogt float %234, 0.000000e+00
  %236 = select i1 %235, float 0.000000e+00, float %234
  %237 = insertelement <2 x float> undef, float %236, i32 0
  %238 = shufflevector <2 x float> %237, <2 x float> undef, <2 x i32> zeroinitializer
  %239 = fmul <2 x float> %229, %238
  %240 = fsub <2 x float> %228, %239
  %241 = fmul <2 x float> %216, %240
  %242 = fadd <2 x float> %170, %241
  %243 = bitcast i8* %225 to <2 x float>*
  store <2 x float> %242, <2 x float>* %243, align 1
  %244 = getelementptr inbounds i8, i8* %225, i64 8
  %245 = bitcast i8* %244 to i32*
  store i32 %157, i32* %245, align 1
  %246 = getelementptr inbounds i8, i8* %225, i64 12
  br i1 %140, label %254, label %247

247:                                              ; preds = %223
  %248 = bitcast i8* %246 to i32*
  store i32 %158, i32* %248, align 1
  %249 = getelementptr inbounds i8, i8* %225, i64 16
  %250 = bitcast i8* %249 to i32*
  store i32 %159, i32* %250, align 1
  %251 = getelementptr inbounds i8, i8* %225, i64 20
  %252 = bitcast i8* %251 to i32*
  store i32 %160, i32* %252, align 1
  %253 = getelementptr inbounds i8, i8* %225, i64 24
  br label %254

254:                                              ; preds = %223, %247
  %255 = phi i8* [ %246, %223 ], [ %253, %247 ]
  %256 = bitcast i8* %255 to <2 x float>*
  store <2 x float> %240, <2 x float>* %256, align 1
  %257 = getelementptr inbounds i8, i8* %255, i64 8
  %258 = bitcast i8* %257 to float*
  store float %138, float* %258, align 1
  %259 = getelementptr inbounds i8, i8* %255, i64 12
  %260 = bitcast i8* %259 to float*
  store float %161, float* %260, align 1
  %261 = getelementptr inbounds i8, i8* %255, i64 16
  %262 = load i8, i8* %63, align 1, !range !2
  %263 = icmp eq i8 %262, 0
  br i1 %263, label %266, label %264

264:                                              ; preds = %254
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %261, i8* align 4 %208, i64 12, i1 false) #12
  %265 = getelementptr inbounds i8, i8* %255, i64 28
  br label %266

266:                                              ; preds = %254, %264
  %267 = phi i8* [ %261, %254 ], [ %265, %264 ]
  %268 = load i8, i8* %64, align 2, !range !2
  %269 = icmp eq i8 %268, 0
  br i1 %269, label %272, label %270

270:                                              ; preds = %266
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %267, i8* align 4 %210, i64 12, i1 false) #12
  %271 = getelementptr inbounds i8, i8* %267, i64 12
  br label %272

272:                                              ; preds = %266, %270
  %273 = phi i8* [ %267, %266 ], [ %271, %270 ]
  %274 = load i8, i8* %67, align 1, !range !2
  %275 = icmp eq i8 %274, 0
  br i1 %275, label %278, label %276

276:                                              ; preds = %272
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %273, i8* align 4 %212, i64 12, i1 false) #12
  %277 = getelementptr inbounds i8, i8* %273, i64 12
  br label %278

278:                                              ; preds = %272, %276
  %279 = phi i8* [ %273, %272 ], [ %277, %276 ]
  %280 = load i8, i8* %68, align 4, !range !2
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %284, label %282

282:                                              ; preds = %278
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %279, i8* align 4 %214, i64 16, i1 false) #12
  %283 = getelementptr inbounds i8, i8* %279, i64 16
  br label %284

284:                                              ; preds = %278, %282
  %285 = phi i8* [ %279, %278 ], [ %283, %282 ]
  %286 = add nuw nsw i64 %224, 1
  %287 = icmp eq i64 %286, 8
  br i1 %287, label %217, label %223

288:                                              ; preds = %220, %341
  %289 = phi i64 [ %343, %341 ], [ 0, %220 ]
  %290 = phi i8* [ %342, %341 ], [ %285, %220 ]
  %291 = load float, float* %135, align 4
  %292 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* @_ZL13kOctagonInner, i64 0, i64 %289, i32 0
  %293 = bitcast float* %292 to <2 x float>*
  %294 = load <2 x float>, <2 x float>* %293, align 8
  %295 = insertelement <2 x float> undef, float %291, i32 0
  %296 = shufflevector <2 x float> %295, <2 x float> undef, <2 x i32> zeroinitializer
  %297 = fmul <2 x float> %296, %294
  %298 = fadd <2 x float> %170, %297
  %299 = fmul <2 x float> %222, %294
  %300 = bitcast i8* %290 to <2 x float>*
  store <2 x float> %298, <2 x float>* %300, align 1
  %301 = getelementptr inbounds i8, i8* %290, i64 8
  %302 = bitcast i8* %301 to i32*
  store i32 %157, i32* %302, align 1
  %303 = getelementptr inbounds i8, i8* %290, i64 12
  br i1 %140, label %311, label %304

304:                                              ; preds = %288
  %305 = bitcast i8* %303 to i32*
  store i32 %158, i32* %305, align 1
  %306 = getelementptr inbounds i8, i8* %290, i64 16
  %307 = bitcast i8* %306 to i32*
  store i32 %159, i32* %307, align 1
  %308 = getelementptr inbounds i8, i8* %290, i64 20
  %309 = bitcast i8* %308 to i32*
  store i32 %160, i32* %309, align 1
  %310 = getelementptr inbounds i8, i8* %290, i64 24
  br label %311

311:                                              ; preds = %288, %304
  %312 = phi i8* [ %303, %288 ], [ %310, %304 ]
  %313 = bitcast i8* %312 to <2 x float>*
  store <2 x float> %299, <2 x float>* %313, align 1
  %314 = getelementptr inbounds i8, i8* %312, i64 8
  %315 = bitcast i8* %314 to float*
  store float %138, float* %315, align 1
  %316 = getelementptr inbounds i8, i8* %312, i64 12
  %317 = bitcast i8* %316 to float*
  store float %161, float* %317, align 1
  %318 = getelementptr inbounds i8, i8* %312, i64 16
  %319 = load i8, i8* %63, align 1, !range !2
  %320 = icmp eq i8 %319, 0
  br i1 %320, label %323, label %321

321:                                              ; preds = %311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %318, i8* align 4 %208, i64 12, i1 false) #12
  %322 = getelementptr inbounds i8, i8* %312, i64 28
  br label %323

323:                                              ; preds = %311, %321
  %324 = phi i8* [ %318, %311 ], [ %322, %321 ]
  %325 = load i8, i8* %64, align 2, !range !2
  %326 = icmp eq i8 %325, 0
  br i1 %326, label %329, label %327

327:                                              ; preds = %323
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %324, i8* align 4 %210, i64 12, i1 false) #12
  %328 = getelementptr inbounds i8, i8* %324, i64 12
  br label %329

329:                                              ; preds = %323, %327
  %330 = phi i8* [ %324, %323 ], [ %328, %327 ]
  %331 = load i8, i8* %67, align 1, !range !2
  %332 = icmp eq i8 %331, 0
  br i1 %332, label %335, label %333

333:                                              ; preds = %329
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %330, i8* align 4 %212, i64 12, i1 false) #12
  %334 = getelementptr inbounds i8, i8* %330, i64 12
  br label %335

335:                                              ; preds = %329, %333
  %336 = phi i8* [ %330, %329 ], [ %334, %333 ]
  %337 = load i8, i8* %68, align 4, !range !2
  %338 = icmp eq i8 %337, 0
  br i1 %338, label %341, label %339

339:                                              ; preds = %335
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %336, i8* align 4 %214, i64 16, i1 false) #12
  %340 = getelementptr inbounds i8, i8* %336, i64 16
  br label %341

341:                                              ; preds = %335, %339
  %342 = phi i8* [ %336, %335 ], [ %340, %339 ]
  %343 = add nuw nsw i64 %289, 1
  %344 = icmp eq i64 %343, 8
  br i1 %344, label %387, label %288

345:                                              ; preds = %217
  %346 = bitcast i8* %285 to <2 x float>*
  store <2 x float> %170, <2 x float>* %346, align 1
  %347 = getelementptr inbounds i8, i8* %285, i64 8
  %348 = bitcast i8* %347 to i32*
  store i32 %157, i32* %348, align 1
  %349 = getelementptr inbounds i8, i8* %285, i64 12
  br i1 %140, label %357, label %350

350:                                              ; preds = %345
  %351 = bitcast i8* %349 to i32*
  store i32 %158, i32* %351, align 1
  %352 = getelementptr inbounds i8, i8* %285, i64 16
  %353 = bitcast i8* %352 to i32*
  store i32 %159, i32* %353, align 1
  %354 = getelementptr inbounds i8, i8* %285, i64 20
  %355 = bitcast i8* %354 to i32*
  store i32 %160, i32* %355, align 1
  %356 = getelementptr inbounds i8, i8* %285, i64 24
  br label %357

357:                                              ; preds = %345, %350
  %358 = phi i8* [ %349, %345 ], [ %356, %350 ]
  %359 = bitcast i8* %358 to i64*
  store i64 0, i64* %359, align 1
  %360 = getelementptr inbounds i8, i8* %358, i64 8
  %361 = bitcast i8* %360 to float*
  store float %138, float* %361, align 1
  %362 = getelementptr inbounds i8, i8* %358, i64 12
  %363 = bitcast i8* %362 to float*
  store float %161, float* %363, align 1
  %364 = getelementptr inbounds i8, i8* %358, i64 16
  %365 = load i8, i8* %63, align 1, !range !2
  %366 = icmp eq i8 %365, 0
  br i1 %366, label %369, label %367

367:                                              ; preds = %357
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %364, i8* align 4 %208, i64 12, i1 false) #12
  %368 = getelementptr inbounds i8, i8* %358, i64 28
  br label %369

369:                                              ; preds = %357, %367
  %370 = phi i8* [ %364, %357 ], [ %368, %367 ]
  %371 = load i8, i8* %64, align 2, !range !2
  %372 = icmp eq i8 %371, 0
  br i1 %372, label %375, label %373

373:                                              ; preds = %369
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %370, i8* align 4 %210, i64 12, i1 false) #12
  %374 = getelementptr inbounds i8, i8* %370, i64 12
  br label %375

375:                                              ; preds = %369, %373
  %376 = phi i8* [ %370, %369 ], [ %374, %373 ]
  %377 = load i8, i8* %67, align 1, !range !2
  %378 = icmp eq i8 %377, 0
  br i1 %378, label %381, label %379

379:                                              ; preds = %375
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %376, i8* align 4 %212, i64 12, i1 false) #12
  %380 = getelementptr inbounds i8, i8* %376, i64 12
  br label %381

381:                                              ; preds = %375, %379
  %382 = phi i8* [ %376, %375 ], [ %380, %379 ]
  %383 = load i8, i8* %68, align 4, !range !2
  %384 = icmp eq i8 %383, 0
  br i1 %384, label %387, label %385

385:                                              ; preds = %381
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %382, i8* align 4 %214, i64 16, i1 false) #12
  %386 = getelementptr inbounds i8, i8* %382, i64 16
  br label %387

387:                                              ; preds = %341, %381, %385
  %388 = phi i8* [ %382, %381 ], [ %386, %385 ], [ %342, %341 ]
  %389 = load i8, i8* %175, align 4, !range !2
  %390 = icmp ne i8 %389, 0
  %391 = select i1 %390, i16* getelementptr inbounds ([48 x i16], [48 x i16]* @_ZL20gStrokeCircleIndices, i64 0, i64 0), i16* getelementptr inbounds ([24 x i16], [24 x i16]* @_ZL18gFillCircleIndices, i64 0, i64 0)
  %392 = trunc i32 %132 to i16
  %393 = select i1 %390, i64 48, i64 24
  %394 = getelementptr i16, i16* %131, i64 %393
  %395 = getelementptr i16, i16* %391, i64 %393
  %396 = icmp ult i16* %131, %395
  %397 = icmp ult i16* %391, %394
  %398 = and i1 %396, %397
  br i1 %398, label %399, label %402

399:                                              ; preds = %420, %387
  %400 = phi i64 [ 0, %387 ], [ %403, %420 ]
  %401 = phi i16* [ %131, %387 ], [ %404, %420 ]
  br label %430

402:                                              ; preds = %387
  %403 = and i64 %393, 48
  %404 = getelementptr i16, i16* %131, i64 %403
  %405 = insertelement <8 x i16> undef, i16 %392, i32 0
  %406 = shufflevector <8 x i16> %405, <8 x i16> undef, <8 x i32> zeroinitializer
  %407 = insertelement <8 x i16> undef, i16 %392, i32 0
  %408 = shufflevector <8 x i16> %407, <8 x i16> undef, <8 x i32> zeroinitializer
  %409 = bitcast i16* %391 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 16, !alias.scope !44
  %411 = getelementptr inbounds i16, i16* %391, i64 8
  %412 = bitcast i16* %411 to <8 x i16>*
  %413 = load <8 x i16>, <8 x i16>* %412, align 16, !alias.scope !44
  %414 = add <8 x i16> %410, %406
  %415 = add <8 x i16> %413, %408
  %416 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %414, <8 x i16>* %416, align 2, !alias.scope !47, !noalias !44
  %417 = getelementptr i16, i16* %131, i64 8
  %418 = bitcast i16* %417 to <8 x i16>*
  store <8 x i16> %415, <8 x i16>* %418, align 2, !alias.scope !47, !noalias !44
  %419 = icmp eq i64 %403, 16
  br i1 %419, label %420, label %473, !llvm.loop !49

420:                                              ; preds = %473, %402
  %421 = icmp eq i64 %393, %403
  br i1 %421, label %422, label %399

422:                                              ; preds = %430, %420
  %423 = phi i16* [ %404, %420 ], [ %451, %430 ]
  %424 = load i8, i8* %175, align 4, !range !2
  %425 = icmp eq i8 %424, 0
  %426 = select i1 %425, i32 9, i32 16
  %427 = add nuw nsw i32 %426, %132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #12
  %428 = getelementptr inbounds %"struct.CircleOp::Circle", %"struct.CircleOp::Circle"* %133, i64 1
  %429 = icmp eq %"struct.CircleOp::Circle"* %428, %58
  br i1 %429, label %70, label %130

430:                                              ; preds = %430, %399
  %431 = phi i64 [ %400, %399 ], [ %452, %430 ]
  %432 = phi i16* [ %401, %399 ], [ %451, %430 ]
  %433 = getelementptr inbounds i16, i16* %391, i64 %431
  %434 = load i16, i16* %433, align 8
  %435 = add i16 %434, %392
  %436 = getelementptr inbounds i16, i16* %432, i64 1
  store i16 %435, i16* %432, align 2
  %437 = or i64 %431, 1
  %438 = getelementptr inbounds i16, i16* %391, i64 %437
  %439 = load i16, i16* %438, align 2
  %440 = add i16 %439, %392
  %441 = getelementptr inbounds i16, i16* %432, i64 2
  store i16 %440, i16* %436, align 2
  %442 = or i64 %431, 2
  %443 = getelementptr inbounds i16, i16* %391, i64 %442
  %444 = load i16, i16* %443, align 4
  %445 = add i16 %444, %392
  %446 = getelementptr inbounds i16, i16* %432, i64 3
  store i16 %445, i16* %441, align 2
  %447 = or i64 %431, 3
  %448 = getelementptr inbounds i16, i16* %391, i64 %447
  %449 = load i16, i16* %448, align 2
  %450 = add i16 %449, %392
  %451 = getelementptr inbounds i16, i16* %432, i64 4
  store i16 %450, i16* %446, align 2
  %452 = add nuw nsw i64 %431, 4
  %453 = icmp eq i64 %452, %393
  br i1 %453, label %422, label %430, !llvm.loop !50

454:                                              ; preds = %127, %46
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #12
  %455 = load %class.GrBuffer*, %class.GrBuffer** %36, align 8
  %456 = icmp eq %class.GrBuffer* %455, null
  br i1 %456, label %462, label %457

457:                                              ; preds = %454
  %458 = bitcast %class.GrBuffer* %455 to void (%class.GrBuffer*)***
  %459 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %458, align 8
  %460 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %459, i64 3
  %461 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %460, align 8
  call void %461(%class.GrBuffer* nonnull %455) #12
  br label %462

462:                                              ; preds = %454, %457
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  br label %463

463:                                              ; preds = %462, %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #12
  %464 = load %class.GrBuffer*, %class.GrBuffer** %19, align 8
  %465 = icmp eq %class.GrBuffer* %464, null
  br i1 %465, label %471, label %466

466:                                              ; preds = %463
  %467 = bitcast %class.GrBuffer* %464 to void (%class.GrBuffer*)***
  %468 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %467, align 8
  %469 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %468, i64 3
  %470 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %469, align 8
  call void %470(%class.GrBuffer* nonnull %464) #12
  br label %471

471:                                              ; preds = %463, %466
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  br label %472

472:                                              ; preds = %12, %471
  ret void

473:                                              ; preds = %402
  %474 = getelementptr i16, i16* %131, i64 16
  %475 = getelementptr inbounds i16, i16* %391, i64 16
  %476 = bitcast i16* %475 to <8 x i16>*
  %477 = load <8 x i16>, <8 x i16>* %476, align 16, !alias.scope !44
  %478 = getelementptr inbounds i16, i16* %391, i64 24
  %479 = bitcast i16* %478 to <8 x i16>*
  %480 = load <8 x i16>, <8 x i16>* %479, align 16, !alias.scope !44
  %481 = add <8 x i16> %477, %406
  %482 = add <8 x i16> %480, %408
  %483 = bitcast i16* %474 to <8 x i16>*
  store <8 x i16> %481, <8 x i16>* %483, align 2, !alias.scope !47, !noalias !44
  %484 = getelementptr i16, i16* %131, i64 24
  %485 = bitcast i16* %484 to <8 x i16>*
  store <8 x i16> %482, <8 x i16>* %485, align 2, !alias.scope !47, !noalias !44
  %486 = getelementptr i16, i16* %131, i64 32
  %487 = getelementptr inbounds i16, i16* %391, i64 32
  %488 = bitcast i16* %487 to <8 x i16>*
  %489 = load <8 x i16>, <8 x i16>* %488, align 16, !alias.scope !44
  %490 = getelementptr inbounds i16, i16* %391, i64 40
  %491 = bitcast i16* %490 to <8 x i16>*
  %492 = load <8 x i16>, <8 x i16>* %491, align 16, !alias.scope !44
  %493 = add <8 x i16> %489, %406
  %494 = add <8 x i16> %492, %408
  %495 = bitcast i16* %486 to <8 x i16>*
  store <8 x i16> %493, <8 x i16>* %495, align 2, !alias.scope !47, !noalias !44
  %496 = getelementptr i16, i16* %131, i64 40
  %497 = bitcast i16* %496 to <8 x i16>*
  store <8 x i16> %494, <8 x i16>* %497, align 2, !alias.scope !47, !noalias !44
  br label %420
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN8CircleOp6CircleELb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.211*, i32, i32) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.211, %class.SkTArray.211* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %66

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %66, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 96) #12
  %45 = load i64, i64* %4, align 8
  %46 = lshr i64 %45, 1
  %47 = and i64 %46, 2147483647
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %35
  %50 = mul nuw nsw i64 %47, 96
  %51 = bitcast %class.SkTArray.211* %0 to i8**
  %52 = load i8*, i8** %51, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %52, i64 %50, i1 false) #12
  %53 = load i64, i64* %4, align 8
  br label %54

54:                                               ; preds = %35, %49
  %55 = phi i64 [ %45, %35 ], [ %53, %49 ]
  %56 = and i64 %55, 1
  %57 = icmp eq i64 %56, 0
  %58 = bitcast %class.SkTArray.211* %0 to i8**
  br i1 %57, label %62, label %59

59:                                               ; preds = %54
  %60 = load i8*, i8** %58, align 8
  tail call void @_Z7sk_freePv(i8* %60) #12
  %61 = load i64, i64* %4, align 8
  br label %62

62:                                               ; preds = %54, %59
  %63 = phi i64 [ %61, %59 ], [ %55, %54 ]
  store i8* %44, i8** %58, align 8
  %64 = and i64 %63, -4294967298
  %65 = or i64 %64, 1
  store i64 %65, i64* %4, align 8
  br label %66

66:                                               ; preds = %62, %32, %21
  ret void
}

declare zeroext i1 @_ZNK8SkMatrix12isSimilarityEf(%class.SkMatrix*, float) local_unnamed_addr #2

declare %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9EllipseOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrixRKNS_17DeviceSpaceParamsERK11SkStrokeRec(%class.EllipseOp*, %class.GrProcessorSet*, %struct.SkRGBA4f* dereferenceable(16), %class.SkMatrix* dereferenceable(40), %"struct.EllipseOp::DeviceSpaceParams"* dereferenceable(24), %class.SkStrokeRec* dereferenceable(16)) unnamed_addr #4 comdat align 2 {
  %7 = alloca %struct.SkRGBA4f, align 8
  %8 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 0
  %9 = load atomic i8, i8* bitcast (i64* @_ZGVZN9EllipseOp7ClassIDEvE8kClassID to i8*) acquire, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %19, !prof !3

11:                                               ; preds = %6
  %12 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN9EllipseOp7ClassIDEvE8kClassID) #12
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %11
  %15 = atomicrmw add i32* getelementptr inbounds (%"struct.std::__1::atomic.155", %"struct.std::__1::atomic.155"* @_ZN4GrOp14gCurrOpClassIDE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 329, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i64 0, i64 0)) #16
  unreachable

18:                                               ; preds = %14
  store i32 %15, i32* @_ZZN9EllipseOp7ClassIDEvE8kClassID, align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN9EllipseOp7ClassIDEvE8kClassID) #12
  br label %19

19:                                               ; preds = %6, %11, %18
  %20 = load i32, i32* @_ZZN9EllipseOp7ClassIDEvE8kClassID, align 4
  tail call void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp* %8, i32 %20) #12
  %21 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV9EllipseOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 1
  %23 = bitcast %class.SkMatrix* %22 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %23, align 4
  %24 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 1, i32 0, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %25, align 4
  %26 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 1, i32 0, i64 8
  store float 1.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 1, i32 1
  store i32 16, i32* %27, align 4
  %28 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 2
  tail call void @_ZN24GrSimpleMeshDrawOpHelperC1EP14GrProcessorSet8GrAATypeNS_10InputFlagsE(%class.GrSimpleMeshDrawOpHelper* %28, %class.GrProcessorSet* %1, i32 1, i8 zeroext 0) #12
  %29 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 5
  store i8 0, i8* %29, align 2
  %30 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 6, i32 0, i32 0, i64 48
  %31 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 6, i32 0, i32 0, i64 0
  %32 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 6, i32 0, i32 0, i64 56
  %33 = bitcast i8* %32 to i64*
  %34 = bitcast i8* %30 to i8**
  store i8* %31, i8** %34, align 8
  store i64 8589934592, i64* %33, align 8
  %35 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 7
  %36 = bitcast %struct.GrSimpleMesh** %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false)
  %37 = tail call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* %5) #12
  %38 = and i32 %37, -3
  %39 = icmp eq i32 %38, 0
  %40 = bitcast i8* %30 to %class.SkTArray.214*
  %41 = bitcast %struct.SkRGBA4f* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41)
  %42 = bitcast %struct.SkRGBA4f* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* align 4 %42, i64 16, i1 false)
  %43 = getelementptr inbounds %"struct.EllipseOp::DeviceSpaceParams", %"struct.EllipseOp::DeviceSpaceParams"* %4, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.EllipseOp::DeviceSpaceParams", %"struct.EllipseOp::DeviceSpaceParams"* %4, i64 0, i32 3
  %45 = bitcast float* %43 to <4 x i32>*
  %46 = load <4 x i32>, <4 x i32>* %45, align 4
  %47 = bitcast %"struct.EllipseOp::DeviceSpaceParams"* %4 to <2 x float>*
  %48 = load <2 x float>, <2 x float>* %47, align 4
  %49 = shufflevector <4 x i32> %46, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
  %50 = bitcast <2 x i32> %49 to <2 x float>
  %51 = fsub <2 x float> %48, %50
  %52 = fadd <2 x float> %48, %50
  tail call void @_ZN8SkTArrayIN9EllipseOp7EllipseELb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.214* %40, i32 1, i32 1) #12
  %53 = bitcast i8* %30 to %"struct.EllipseOp::Ellipse"**
  %54 = load %"struct.EllipseOp::Ellipse"*, %"struct.EllipseOp::Ellipse"** %53, align 8
  %55 = load i64, i64* %33, align 8
  %56 = lshr i64 %55, 1
  %57 = and i64 %56, 2147483647
  %58 = getelementptr inbounds %"struct.EllipseOp::Ellipse", %"struct.EllipseOp::Ellipse"* %54, i64 %57
  %59 = add i64 %55, 2
  %60 = and i64 %59, 4294967294
  %61 = and i64 %55, -4294967295
  %62 = or i64 %60, %61
  store i64 %62, i64* %33, align 8
  %63 = bitcast %"struct.EllipseOp::Ellipse"* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %63, i8* nonnull align 8 %41, i64 16, i1 false)
  %64 = getelementptr inbounds %"struct.EllipseOp::Ellipse", %"struct.EllipseOp::Ellipse"* %54, i64 %57, i32 1
  %65 = bitcast float* %64 to <4 x i32>*
  store <4 x i32> %46, <4 x i32>* %65, align 4
  %66 = getelementptr inbounds %"struct.EllipseOp::Ellipse", %"struct.EllipseOp::Ellipse"* %54, i64 %57, i32 5
  %67 = bitcast %struct.SkRect* %66 to <2 x float>*
  store <2 x float> %51, <2 x float>* %67, align 4
  %68 = getelementptr inbounds %"struct.EllipseOp::Ellipse", %"struct.EllipseOp::Ellipse"* %54, i64 %57, i32 5, i32 2
  %69 = bitcast float* %68 to <2 x float>*
  store <2 x float> %52, <2 x float>* %69, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41)
  %70 = load %"struct.EllipseOp::Ellipse"*, %"struct.EllipseOp::Ellipse"** %53, align 8
  %71 = load i64, i64* %33, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = add nsw i64 %73, -1
  %75 = getelementptr inbounds %"struct.EllipseOp::Ellipse", %"struct.EllipseOp::Ellipse"* %70, i64 %74, i32 5
  %76 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %77 = bitcast %struct.SkRect* %76 to i8*
  %78 = bitcast %struct.SkRect* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 4 %78, i64 16, i1 false) #12
  %79 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  store i16 1, i16* %79, align 2
  %80 = getelementptr inbounds %"struct.EllipseOp::Ellipse", %"struct.EllipseOp::Ellipse"* %70, i64 0, i32 5, i32 0
  %81 = bitcast float* %80 to <4 x float>*
  %82 = load <4 x float>, <4 x float>* %81, align 4
  %83 = fadd <4 x float> %82, <float -5.000000e-01, float -5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %84 = bitcast float* %80 to <4 x float>*
  store <4 x float> %83, <4 x float>* %84, align 4
  %85 = load float, float* %44, align 4
  %86 = fcmp ogt float %85, 0.000000e+00
  %87 = and i1 %39, %86
  br i1 %87, label %88, label %93

88:                                               ; preds = %19
  %89 = getelementptr inbounds %"struct.EllipseOp::DeviceSpaceParams", %"struct.EllipseOp::DeviceSpaceParams"* %4, i64 0, i32 4
  %90 = load float, float* %89, align 4
  %91 = fcmp ogt float %90, 0.000000e+00
  %92 = zext i1 %91 to i8
  br label %93

93:                                               ; preds = %88, %19
  %94 = phi i8 [ 0, %19 ], [ %92, %88 ]
  %95 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 3
  store i8 %94, i8* %95, align 8
  %96 = bitcast %class.SkMatrix* %22 to i8*
  %97 = bitcast %class.SkMatrix* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 4 %97, i64 40, i1 false)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9EllipseOpD2Ev(%class.EllipseOp*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV9EllipseOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 6, i32 0, i32 0, i64 56
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 6, i32 0, i32 0, i64 48
  %10 = bitcast i8* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #12
  br label %12

12:                                               ; preds = %1, %8
  %13 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 2
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD1Ev(%class.GrSimpleMeshDrawOpHelper* %13) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %14 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %class.GrOp*, %class.GrOp** %14, align 8
  store %class.GrOp* null, %class.GrOp** %14, align 8
  %16 = icmp eq %class.GrOp* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  %18 = bitcast %class.GrOp* %15 to void (%class.GrOp*)***
  %19 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %19, i64 1
  %21 = load void (%class.GrOp*)*, void (%class.GrOp*)** %20, align 8
  tail call void %21(%class.GrOp* nonnull %15) #12
  br label %22

22:                                               ; preds = %12, %17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9EllipseOpD0Ev(%class.EllipseOp*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV9EllipseOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 6, i32 0, i32 0, i64 56
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 6, i32 0, i32 0, i64 48
  %10 = bitcast i8* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #12
  br label %12

12:                                               ; preds = %8, %1
  %13 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 2
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD1Ev(%class.GrSimpleMeshDrawOpHelper* %13) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %14 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %class.GrOp*, %class.GrOp** %14, align 8
  store %class.GrOp* null, %class.GrOp** %14, align 8
  %16 = icmp eq %class.GrOp* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  %18 = bitcast %class.GrOp* %15 to void (%class.GrOp*)***
  %19 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %19, i64 1
  %21 = load void (%class.GrOp*)*, void (%class.GrOp*)** %20, align 8
  tail call void %21(%class.GrOp* nonnull %15) #12
  br label %22

22:                                               ; preds = %12, %17
  %23 = bitcast %class.EllipseOp* %0 to i8*
  tail call void @_ZdlPv(i8* %23) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK9EllipseOp4nameEv(%class.EllipseOp*) unnamed_addr #4 comdat align 2 {
  ret i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.110, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK9EllipseOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.EllipseOp*, %"class.std::__1::function.137"*) unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 8
  %4 = load %class.GrProgramInfo*, %class.GrProgramInfo** %3, align 8
  %5 = icmp eq %class.GrProgramInfo* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %4, i64 0, i32 5
  %8 = load %class.GrPipeline*, %class.GrPipeline** %7, align 8
  tail call void @_ZNK10GrPipeline12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrPipeline* %8, %"class.std::__1::function.137"* %1) #12
  br label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 2, i32 0
  %11 = load %class.GrProcessorSet*, %class.GrProcessorSet** %10, align 8
  %12 = icmp eq %class.GrProcessorSet* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZNK14GrProcessorSet12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrProcessorSet* nonnull %11, %"class.std::__1::function.137"* %1) #12
  br label %14

14:                                               ; preds = %13, %9, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN9EllipseOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps(%class.EllipseOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps* dereferenceable(232)) unnamed_addr #4 comdat align 2 {
  %5 = bitcast %class.GrOp* %1 to %class.EllipseOp*
  %6 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 2
  %7 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 1, i32 6, i32 2
  %8 = bitcast float* %7 to %class.GrSimpleMeshDrawOpHelper*
  %9 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %10 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 0, i32 6
  %11 = tail call zeroext i1 @_ZNK24GrSimpleMeshDrawOpHelper12isCompatibleERKS_RK6GrCapsRK6SkRectS7_b(%class.GrSimpleMeshDrawOpHelper* %6, %class.GrSimpleMeshDrawOpHelper* dereferenceable(16) %8, %class.GrCaps* dereferenceable(232) %3, %struct.SkRect* dereferenceable(16) %9, %struct.SkRect* dereferenceable(16) %10, i1 zeroext false) #12
  br i1 %11, label %12, label %108

12:                                               ; preds = %4
  %13 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 3
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 2, i32 1
  %16 = bitcast %"class.std::__1::unique_ptr"* %15 to i8*
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %14, %17
  br i1 %18, label %19, label %108

19:                                               ; preds = %12
  %20 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 2, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = and i8 %21, 4
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %34, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 1
  %26 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 1
  %27 = bitcast %class.GrOp* %26 to %class.SkMatrix*
  %28 = icmp eq %class.SkMatrix* %25, %27
  br i1 %28, label %34, label %29

29:                                               ; preds = %24
  %30 = bitcast %class.SkMatrix* %25 to i8*
  %31 = bitcast %class.GrOp* %26 to i8*
  %32 = tail call i32 @bcmp(i8* %30, i8* %31, i64 36) #12
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %108

34:                                               ; preds = %19, %24, %29
  %35 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 6, i32 0, i32 0, i64 48
  %36 = bitcast i8* %35 to %class.SkTArray.214*
  %37 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 3, i32 2
  %38 = getelementptr inbounds %class.GrOp*, %class.GrOp** %37, i64 1
  %39 = bitcast %class.GrOp** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = lshr i64 %40, 1
  %42 = trunc i64 %41 to i32
  %43 = and i32 %42, 2147483647
  %44 = bitcast %class.GrOp** %37 to %"struct.EllipseOp::Ellipse"**
  %45 = load %"struct.EllipseOp::Ellipse"*, %"struct.EllipseOp::Ellipse"** %44, align 8
  tail call void @_ZN8SkTArrayIN9EllipseOp7EllipseELb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.214* %36, i32 %43, i32 1) #12
  %46 = icmp eq i32 %43, 0
  br i1 %46, label %94, label %47

47:                                               ; preds = %34
  %48 = bitcast i8* %35 to %"struct.EllipseOp::Ellipse"**
  %49 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 6, i32 0, i32 0, i64 56
  %50 = bitcast i8* %49 to i64*
  %51 = zext i32 %43 to i64
  %52 = and i64 %51, 1
  %53 = icmp eq i32 %43, 1
  br i1 %53, label %81, label %54

54:                                               ; preds = %47
  %55 = sub nsw i64 %51, %52
  br label %56

56:                                               ; preds = %56, %54
  %57 = phi i64 [ 0, %54 ], [ %78, %56 ]
  %58 = phi i64 [ %55, %54 ], [ %79, %56 ]
  %59 = load %"struct.EllipseOp::Ellipse"*, %"struct.EllipseOp::Ellipse"** %48, align 8
  %60 = load i64, i64* %50, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = getelementptr inbounds %"struct.EllipseOp::Ellipse", %"struct.EllipseOp::Ellipse"* %59, i64 %62
  %64 = getelementptr inbounds %"struct.EllipseOp::Ellipse", %"struct.EllipseOp::Ellipse"* %63, i64 %57
  %65 = bitcast %"struct.EllipseOp::Ellipse"* %64 to i8*
  %66 = getelementptr inbounds %"struct.EllipseOp::Ellipse", %"struct.EllipseOp::Ellipse"* %45, i64 %57
  %67 = bitcast %"struct.EllipseOp::Ellipse"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %65, i8* align 4 %67, i64 48, i1 false) #12
  %68 = or i64 %57, 1
  %69 = load %"struct.EllipseOp::Ellipse"*, %"struct.EllipseOp::Ellipse"** %48, align 8
  %70 = load i64, i64* %50, align 8
  %71 = lshr i64 %70, 1
  %72 = and i64 %71, 2147483647
  %73 = getelementptr inbounds %"struct.EllipseOp::Ellipse", %"struct.EllipseOp::Ellipse"* %69, i64 %72
  %74 = getelementptr inbounds %"struct.EllipseOp::Ellipse", %"struct.EllipseOp::Ellipse"* %73, i64 %68
  %75 = bitcast %"struct.EllipseOp::Ellipse"* %74 to i8*
  %76 = getelementptr inbounds %"struct.EllipseOp::Ellipse", %"struct.EllipseOp::Ellipse"* %45, i64 %68
  %77 = bitcast %"struct.EllipseOp::Ellipse"* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %75, i8* align 4 %77, i64 48, i1 false) #12
  %78 = add nuw nsw i64 %57, 2
  %79 = add i64 %58, -2
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %56

81:                                               ; preds = %56, %47
  %82 = phi i64 [ 0, %47 ], [ %78, %56 ]
  %83 = icmp eq i64 %52, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81
  %85 = load %"struct.EllipseOp::Ellipse"*, %"struct.EllipseOp::Ellipse"** %48, align 8
  %86 = load i64, i64* %50, align 8
  %87 = lshr i64 %86, 1
  %88 = and i64 %87, 2147483647
  %89 = getelementptr inbounds %"struct.EllipseOp::Ellipse", %"struct.EllipseOp::Ellipse"* %85, i64 %88
  %90 = getelementptr inbounds %"struct.EllipseOp::Ellipse", %"struct.EllipseOp::Ellipse"* %89, i64 %82
  %91 = bitcast %"struct.EllipseOp::Ellipse"* %90 to i8*
  %92 = getelementptr inbounds %"struct.EllipseOp::Ellipse", %"struct.EllipseOp::Ellipse"* %45, i64 %82
  %93 = bitcast %"struct.EllipseOp::Ellipse"* %92 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %91, i8* align 4 %93, i64 48, i1 false) #12
  br label %94

94:                                               ; preds = %84, %81, %34
  %95 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 6, i32 0, i32 0, i64 56
  %96 = bitcast i8* %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = and i64 %40, 4294967294
  %99 = add i64 %97, %98
  %100 = and i64 %99, 4294967294
  %101 = and i64 %97, -4294967295
  %102 = or i64 %100, %101
  store i64 %102, i64* %96, align 8
  %103 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %5, i64 0, i32 4
  %104 = load i8, i8* %103, align 1, !range !2
  %105 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 4
  %106 = load i8, i8* %105, align 1, !range !2
  %107 = or i8 %106, %104
  store i8 %107, i8* %105, align 1
  br label %108

108:                                              ; preds = %29, %12, %4, %94
  %109 = phi i32 [ 0, %94 ], [ 2, %4 ], [ 2, %12 ], [ 2, %29 ]
  ret i32 %109
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9EllipseOp9onExecuteEP14GrOpFlushStateRK6SkRect(%class.EllipseOp*, %class.GrOpFlushState*, %struct.SkRect* dereferenceable(16)) unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 8
  %5 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %6 = icmp eq %class.GrProgramInfo* %5, null
  br i1 %6, label %35, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 7
  %9 = load %struct.GrSimpleMesh*, %struct.GrSimpleMesh** %8, align 8
  %10 = icmp eq %struct.GrSimpleMesh* %9, null
  br i1 %10, label %35, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 15
  %13 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass12bindPipelineERK13GrProgramInfoRK6SkRect(%class.GrOpsRenderPass* %13, %class.GrProgramInfo* nonnull dereferenceable(128) %5, %struct.SkRect* dereferenceable(16) %2) #12
  %14 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %5, i64 0, i32 5
  %15 = load %class.GrPipeline*, %class.GrPipeline** %14, align 8
  %16 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %15, i64 0, i32 5
  %17 = load i8, i8* %16, align 8
  %18 = and i8 %17, 32
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 10
  %22 = load %"struct.GrOpFlushState::OpArgs"*, %"struct.GrOpFlushState::OpArgs"** %21, align 8
  %23 = getelementptr inbounds %"struct.GrOpFlushState::OpArgs", %"struct.GrOpFlushState::OpArgs"* %22, i64 0, i32 4
  %24 = load %class.GrAppliedClip*, %class.GrAppliedClip** %23, align 8
  %25 = getelementptr inbounds %class.GrAppliedClip, %class.GrAppliedClip* %24, i64 0, i32 0, i32 0, i32 1
  %26 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass14setScissorRectERK7SkIRect(%class.GrOpsRenderPass* %26, %struct.SkIRect* dereferenceable(16) %25) #12
  br label %27

27:                                               ; preds = %11, %20
  %28 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %29 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %28, i64 0, i32 7
  %30 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %29, align 8
  %31 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %28, i64 0, i32 5
  %32 = load %class.GrPipeline*, %class.GrPipeline** %31, align 8
  %33 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrOpsRenderPass* %33, %class.GrGeometryProcessor* dereferenceable(80) %30, %class.GrSurfaceProxy** null, %class.GrPipeline* dereferenceable(128) %32) #12
  %34 = load %struct.GrSimpleMesh*, %struct.GrSimpleMesh** %8, align 8
  tail call void @_ZN14GrOpFlushState8drawMeshERK12GrSimpleMesh(%class.GrOpFlushState* %1, %struct.GrSimpleMesh* dereferenceable(48) %34) #12
  br label %35

35:                                               ; preds = %7, %3, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK9EllipseOp18fixedFunctionFlagsEv(%class.EllipseOp*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 2
  %3 = tail call i32 @_ZNK24GrSimpleMeshDrawOpHelper18fixedFunctionFlagsEv(%class.GrSimpleMeshDrawOpHelper* %2) #12
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN9EllipseOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType(%class.EllipseOp*, %class.GrCaps* dereferenceable(232), %class.GrAppliedClip*, i32) unnamed_addr #4 comdat align 2 {
  %5 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %1, i64 0, i32 2, i32 0
  %6 = load %class.GrShaderCaps*, %class.GrShaderCaps** %5, align 8
  %7 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %6, i64 0, i32 2
  %8 = bitcast i56* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 131072
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %4
  %13 = lshr i64 %9, 19
  %14 = trunc i64 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  br label %17

17:                                               ; preds = %4, %12
  %18 = phi i8 [ 0, %4 ], [ %16, %12 ]
  %19 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 5
  store i8 %18, i8* %19, align 2
  %20 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 6, i32 0, i32 0, i64 48
  %21 = bitcast i8* %20 to %"struct.EllipseOp::Ellipse"**
  %22 = load %"struct.EllipseOp::Ellipse"*, %"struct.EllipseOp::Ellipse"** %21, align 8
  %23 = getelementptr inbounds %"struct.EllipseOp::Ellipse", %"struct.EllipseOp::Ellipse"* %22, i64 0, i32 0
  %24 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 2
  %25 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 4
  %26 = tail call i32 @_ZN24GrSimpleMeshDrawOpHelper18finalizeProcessorsERK6GrCapsPK13GrAppliedClip11GrClampType27GrProcessorAnalysisCoverageP8SkRGBA4fIL11SkAlphaType2EEPb(%class.GrSimpleMeshDrawOpHelper* %24, %class.GrCaps* dereferenceable(232) %1, %class.GrAppliedClip* %2, i32 %3, i32 1, %struct.SkRGBA4f* %23, i8* %25) #12
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrProgramInfo* @_ZN9EllipseOp11programInfoEv(%class.EllipseOp*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 8
  %3 = load %class.GrProgramInfo*, %class.GrProgramInfo** %2, align 8
  ret %class.GrProgramInfo* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9EllipseOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.EllipseOp*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip* dereferenceable(72), %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #4 comdat align 2 {
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca %class.anon.195, align 8
  %13 = alloca %class.SkMatrix, align 16
  %14 = bitcast %class.SkMatrix* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #12
  %15 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 1
  %16 = bitcast %class.SkMatrix* %13 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %16, align 16
  %17 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %18, align 16
  %19 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %19, align 16
  store i32 16, i32* %15, align 4
  %20 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 1
  %21 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = trunc i32 %22 to i8
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %8
  %26 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %20) #12
  %27 = zext i8 %26 to i32
  store i32 %27, i32* %21, align 4
  br label %28

28:                                               ; preds = %25, %8
  %29 = phi i32 [ %27, %25 ], [ %22, %8 ]
  %30 = and i32 %29, 15
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  %33 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %13) #12
  br label %36

34:                                               ; preds = %28
  %35 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* %20, %class.SkMatrix* nonnull %13) #12
  br i1 %35, label %36, label %53

36:                                               ; preds = %32, %34
  %37 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 3
  %38 = load i8, i8* %37, align 8, !range !2
  %39 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 4
  %40 = load i8, i8* %39, align 1, !range !2
  %41 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 5
  %42 = load i8, i8* %41, align 2, !range !2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11)
  store i8 %38, i8* %9, align 1
  store i8 %40, i8* %10, align 1
  store i8 %42, i8* %11, align 1
  %43 = bitcast %class.anon.195* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #12
  %44 = getelementptr inbounds %class.anon.195, %class.anon.195* %12, i64 0, i32 0
  store i8* %9, i8** %44, align 8
  %45 = getelementptr inbounds %class.anon.195, %class.anon.195* %12, i64 0, i32 1
  store i8* %10, i8** %45, align 8
  %46 = getelementptr inbounds %class.anon.195, %class.anon.195* %12, i64 0, i32 2
  store i8* %11, i8** %46, align 8
  %47 = getelementptr inbounds %class.anon.195, %class.anon.195* %12, i64 0, i32 3
  store %class.SkMatrix* %13, %class.SkMatrix** %47, align 8
  %48 = call %class.EllipseGeometryProcessor* @_ZN12SkArenaAlloc4makeIZN24EllipseGeometryProcessor4MakeEPS_bbbRK8SkMatrixEUlPvE_EEDTclfp_LDnEEEOT_(%class.SkArenaAlloc* %2, %class.anon.195* nonnull dereferenceable(32) %12) #12
  %49 = bitcast %class.EllipseGeometryProcessor* %48 to %class.GrGeometryProcessor*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11)
  %50 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 2
  %51 = call %class.GrProgramInfo* @_ZN24GrSimpleMeshDrawOpHelper17createProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewEP19GrGeometryProcessor15GrPrimitiveType18GrXferBarrierFlags8GrLoadOp(%class.GrSimpleMeshDrawOpHelper* %50, %class.GrCaps* %1, %class.SkArenaAlloc* %2, %class.GrSurfaceProxyView* dereferenceable(16) %3, %class.GrAppliedClip* dereferenceable(72) %4, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %5, %class.GrGeometryProcessor* %49, i8 zeroext 0, i32 %6, i32 %7) #12
  %52 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 8
  store %class.GrProgramInfo* %51, %class.GrProgramInfo** %52, align 8
  br label %53

53:                                               ; preds = %34, %36
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9EllipseOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE(%class.EllipseOp*, %"class.GrMeshDrawOp::Target"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.GrMeshDrawOp::QuadHelper", align 8
  %4 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 8
  %5 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %6 = icmp eq %class.GrProgramInfo* %5, null
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 0
  tail call void @_ZN12GrMeshDrawOp17createProgramInfoEPNS_6TargetE(%class.GrMeshDrawOp* %8, %"class.GrMeshDrawOp::Target"* %1) #12
  %9 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %10 = icmp eq %class.GrProgramInfo* %9, null
  br i1 %10, label %239, label %11

11:                                               ; preds = %7, %2
  %12 = phi %class.GrProgramInfo* [ %9, %7 ], [ %5, %2 ]
  %13 = bitcast %"class.GrMeshDrawOp::QuadHelper"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.GrMeshDrawOp::QuadHelper", %"class.GrMeshDrawOp::QuadHelper"* %3, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.GrMeshDrawOp::QuadHelper", %"class.GrMeshDrawOp::QuadHelper"* %3, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %12, i64 0, i32 7
  %17 = bitcast %"class.GrMeshDrawOp::QuadHelper"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  %18 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %16, align 8
  %19 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %18, i64 0, i32 3, i32 3
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 6, i32 0, i32 0, i64 56
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = lshr i64 %23, 1
  %25 = trunc i64 %24 to i32
  %26 = and i32 %25, 2147483647
  call void @_ZN12GrMeshDrawOp10QuadHelperC1EPNS_6TargetEmi(%"class.GrMeshDrawOp::QuadHelper"* nonnull %3, %"class.GrMeshDrawOp::Target"* %1, i64 %20, i32 %26) #12
  %27 = load i8*, i8** %14, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %30

29:                                               ; preds = %11
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 2000, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.50, i64 0, i64 0)) #12
  br label %238

30:                                               ; preds = %11
  %31 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 6, i32 0, i32 0, i64 48
  %32 = bitcast i8* %31 to %"struct.EllipseOp::Ellipse"**
  %33 = load %"struct.EllipseOp::Ellipse"*, %"struct.EllipseOp::Ellipse"** %32, align 8
  %34 = icmp eq %"struct.EllipseOp::Ellipse"* %33, null
  br i1 %34, label %45, label %35

35:                                               ; preds = %30
  %36 = load i64, i64* %22, align 8
  %37 = lshr i64 %36, 1
  %38 = and i64 %37, 2147483647
  %39 = getelementptr inbounds %"struct.EllipseOp::Ellipse", %"struct.EllipseOp::Ellipse"* %33, i64 %38
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 4
  %43 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 3
  %44 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 5
  br label %50

45:                                               ; preds = %231, %30, %35
  %46 = bitcast %struct.GrSimpleMesh** %15 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %class.EllipseOp, %class.EllipseOp* %0, i64 0, i32 7
  %49 = bitcast %struct.GrSimpleMesh** %48 to i64*
  store i64 %47, i64* %49, align 8
  br label %238

50:                                               ; preds = %41, %231
  %51 = phi %"struct.EllipseOp::Ellipse"* [ %33, %41 ], [ %236, %231 ]
  %52 = phi i8* [ %27, %41 ], [ %235, %231 ]
  %53 = load i8, i8* %42, align 1, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %67, label %55

55:                                               ; preds = %50
  %56 = bitcast %"struct.EllipseOp::Ellipse"* %51 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"struct.EllipseOp::Ellipse", %"struct.EllipseOp::Ellipse"* %51, i64 0, i32 0, i32 1
  %59 = bitcast float* %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"struct.EllipseOp::Ellipse", %"struct.EllipseOp::Ellipse"* %51, i64 0, i32 0, i32 2
  %62 = bitcast float* %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"struct.EllipseOp::Ellipse", %"struct.EllipseOp::Ellipse"* %51, i64 0, i32 0, i32 3
  %65 = bitcast float* %64 to i32*
  %66 = load i32, i32* %65, align 4
  br label %70

67:                                               ; preds = %50
  %68 = getelementptr inbounds %"struct.EllipseOp::Ellipse", %"struct.EllipseOp::Ellipse"* %51, i64 0, i32 0
  %69 = call i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f* %68) #12
  br label %70

70:                                               ; preds = %55, %67
  %71 = phi i32 [ %57, %55 ], [ %69, %67 ]
  %72 = phi i32 [ %60, %55 ], [ -1431655766, %67 ]
  %73 = phi i32 [ %63, %55 ], [ -1431655766, %67 ]
  %74 = phi i32 [ %66, %55 ], [ -1431655766, %67 ]
  %75 = getelementptr inbounds %"struct.EllipseOp::Ellipse", %"struct.EllipseOp::Ellipse"* %51, i64 0, i32 1
  %76 = bitcast float* %75 to <2 x i32>*
  %77 = load <2 x i32>, <2 x i32>* %76, align 4
  %78 = bitcast <2 x i32> %77 to <2 x float>
  %79 = getelementptr inbounds %"struct.EllipseOp::Ellipse", %"struct.EllipseOp::Ellipse"* %51, i64 0, i32 3
  %80 = load float, float* %79, align 4
  %81 = getelementptr inbounds %"struct.EllipseOp::Ellipse", %"struct.EllipseOp::Ellipse"* %51, i64 0, i32 4
  %82 = load float, float* %81, align 4
  %83 = extractelement <2 x float> %78, i32 0
  %84 = insertelement <4 x float> undef, float %83, i32 0
  %85 = extractelement <2 x float> %78, i32 1
  %86 = insertelement <4 x float> %84, float %85, i32 1
  %87 = insertelement <4 x float> %86, float %80, i32 2
  %88 = insertelement <4 x float> %87, float %82, i32 3
  %89 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %88
  %90 = fadd <2 x float> %78, <float 5.000000e-01, float 5.000000e-01>
  %91 = load i8, i8* %43, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  %93 = fdiv <2 x float> %90, %78
  %94 = select i1 %92, <2 x float> %93, <2 x float> %90
  %95 = getelementptr inbounds %"struct.EllipseOp::Ellipse", %"struct.EllipseOp::Ellipse"* %51, i64 0, i32 5, i32 0
  %96 = bitcast float* %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %"struct.EllipseOp::Ellipse", %"struct.EllipseOp::Ellipse"* %51, i64 0, i32 5, i32 1
  %99 = bitcast float* %98 to i32*
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"struct.EllipseOp::Ellipse", %"struct.EllipseOp::Ellipse"* %51, i64 0, i32 5, i32 2
  %102 = bitcast float* %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %"struct.EllipseOp::Ellipse", %"struct.EllipseOp::Ellipse"* %51, i64 0, i32 5, i32 3
  %105 = bitcast float* %104 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = extractelement <2 x float> %94, i32 0
  %108 = fsub float -0.000000e+00, %107
  %109 = extractelement <2 x float> %94, i32 1
  %110 = fsub float -0.000000e+00, %109
  %111 = load i8, i8* %44, align 2, !range !2
  %112 = fcmp olt float %83, %85
  %113 = extractelement <2 x i32> %77, i32 0
  %114 = extractelement <2 x i32> %77, i32 1
  %115 = select i1 %112, i32 %114, i32 %113
  %116 = bitcast i8* %52 to i32*
  store i32 %97, i32* %116, align 1
  %117 = getelementptr inbounds i8, i8* %52, i64 4
  %118 = bitcast i8* %117 to i32*
  store i32 %100, i32* %118, align 1
  %119 = getelementptr inbounds i8, i8* %52, i64 8
  %120 = bitcast i8* %119 to i32*
  store i32 %71, i32* %120, align 1
  %121 = getelementptr inbounds i8, i8* %52, i64 12
  %122 = bitcast i8* %121 to i32*
  br i1 %54, label %130, label %123

123:                                              ; preds = %70
  store i32 %72, i32* %122, align 1
  %124 = getelementptr inbounds i8, i8* %52, i64 16
  %125 = bitcast i8* %124 to i32*
  store i32 %73, i32* %125, align 1
  %126 = getelementptr inbounds i8, i8* %52, i64 20
  %127 = bitcast i8* %126 to i32*
  store i32 %74, i32* %127, align 1
  %128 = getelementptr inbounds i8, i8* %52, i64 24
  %129 = bitcast i8* %128 to i32*
  br label %130

130:                                              ; preds = %123, %70
  %131 = phi i64 [ 12, %70 ], [ 24, %123 ]
  %132 = phi i32* [ %122, %70 ], [ %129, %123 ]
  %133 = bitcast i32* %132 to float*
  store float %108, float* %133, align 1
  %134 = getelementptr inbounds i8, i8* %117, i64 %131
  %135 = bitcast i8* %134 to float*
  store float %110, float* %135, align 1
  %136 = getelementptr inbounds i8, i8* %134, i64 4
  %137 = icmp eq i8 %111, 0
  br i1 %137, label %141, label %138

138:                                              ; preds = %130
  %139 = bitcast i8* %136 to i32*
  store i32 %115, i32* %139, align 1
  %140 = getelementptr inbounds i8, i8* %136, i64 4
  br label %141

141:                                              ; preds = %138, %130
  %142 = phi i8* [ %134, %130 ], [ %136, %138 ]
  %143 = phi i8* [ %136, %130 ], [ %140, %138 ]
  %144 = bitcast i8* %143 to <4 x float>*
  store <4 x float> %89, <4 x float>* %144, align 1
  %145 = getelementptr inbounds i8, i8* %142, i64 20
  %146 = bitcast i8* %145 to i32*
  store i32 %97, i32* %146, align 1
  %147 = getelementptr inbounds i8, i8* %142, i64 24
  %148 = bitcast i8* %147 to i32*
  store i32 %106, i32* %148, align 1
  %149 = getelementptr inbounds i8, i8* %142, i64 28
  %150 = bitcast i8* %149 to i32*
  store i32 %71, i32* %150, align 1
  %151 = getelementptr inbounds i8, i8* %142, i64 32
  %152 = bitcast i8* %151 to i32*
  br i1 %54, label %160, label %153

153:                                              ; preds = %141
  store i32 %72, i32* %152, align 1
  %154 = getelementptr inbounds i8, i8* %142, i64 36
  %155 = bitcast i8* %154 to i32*
  store i32 %73, i32* %155, align 1
  %156 = getelementptr inbounds i8, i8* %142, i64 40
  %157 = bitcast i8* %156 to i32*
  store i32 %74, i32* %157, align 1
  %158 = getelementptr inbounds i8, i8* %142, i64 44
  %159 = bitcast i8* %158 to i32*
  br label %160

160:                                              ; preds = %153, %141
  %161 = phi i64 [ 32, %141 ], [ 44, %153 ]
  %162 = phi i32* [ %152, %141 ], [ %159, %153 ]
  %163 = getelementptr inbounds i8, i8* %142, i64 4
  %164 = bitcast i32* %162 to float*
  store float %108, float* %164, align 1
  %165 = getelementptr inbounds i8, i8* %163, i64 %161
  %166 = bitcast i8* %165 to float*
  store float %109, float* %166, align 1
  %167 = getelementptr inbounds i8, i8* %165, i64 4
  br i1 %137, label %171, label %168

168:                                              ; preds = %160
  %169 = bitcast i8* %167 to i32*
  store i32 %115, i32* %169, align 1
  %170 = getelementptr inbounds i8, i8* %167, i64 4
  br label %171

171:                                              ; preds = %168, %160
  %172 = phi i8* [ %165, %160 ], [ %167, %168 ]
  %173 = phi i8* [ %167, %160 ], [ %170, %168 ]
  %174 = bitcast i8* %173 to <4 x float>*
  store <4 x float> %89, <4 x float>* %174, align 1
  %175 = getelementptr inbounds i8, i8* %172, i64 20
  %176 = bitcast i8* %175 to i32*
  store i32 %103, i32* %176, align 1
  %177 = getelementptr inbounds i8, i8* %172, i64 24
  %178 = bitcast i8* %177 to i32*
  store i32 %100, i32* %178, align 1
  %179 = getelementptr inbounds i8, i8* %172, i64 28
  %180 = bitcast i8* %179 to i32*
  store i32 %71, i32* %180, align 1
  %181 = getelementptr inbounds i8, i8* %172, i64 32
  %182 = bitcast i8* %181 to i32*
  br i1 %54, label %190, label %183

183:                                              ; preds = %171
  store i32 %72, i32* %182, align 1
  %184 = getelementptr inbounds i8, i8* %172, i64 36
  %185 = bitcast i8* %184 to i32*
  store i32 %73, i32* %185, align 1
  %186 = getelementptr inbounds i8, i8* %172, i64 40
  %187 = bitcast i8* %186 to i32*
  store i32 %74, i32* %187, align 1
  %188 = getelementptr inbounds i8, i8* %172, i64 44
  %189 = bitcast i8* %188 to i32*
  br label %190

190:                                              ; preds = %183, %171
  %191 = phi i64 [ 32, %171 ], [ 44, %183 ]
  %192 = phi i32* [ %182, %171 ], [ %189, %183 ]
  %193 = getelementptr inbounds i8, i8* %172, i64 4
  %194 = bitcast i32* %192 to float*
  store float %107, float* %194, align 1
  %195 = getelementptr inbounds i8, i8* %193, i64 %191
  %196 = bitcast i8* %195 to float*
  store float %110, float* %196, align 1
  %197 = getelementptr inbounds i8, i8* %195, i64 4
  br i1 %137, label %201, label %198

198:                                              ; preds = %190
  %199 = bitcast i8* %197 to i32*
  store i32 %115, i32* %199, align 1
  %200 = getelementptr inbounds i8, i8* %197, i64 4
  br label %201

201:                                              ; preds = %198, %190
  %202 = phi i8* [ %195, %190 ], [ %197, %198 ]
  %203 = phi i8* [ %197, %190 ], [ %200, %198 ]
  %204 = bitcast i8* %203 to <4 x float>*
  store <4 x float> %89, <4 x float>* %204, align 1
  %205 = getelementptr inbounds i8, i8* %202, i64 20
  %206 = bitcast i8* %205 to i32*
  store i32 %103, i32* %206, align 1
  %207 = getelementptr inbounds i8, i8* %202, i64 24
  %208 = bitcast i8* %207 to i32*
  store i32 %106, i32* %208, align 1
  %209 = getelementptr inbounds i8, i8* %202, i64 28
  %210 = bitcast i8* %209 to i32*
  store i32 %71, i32* %210, align 1
  %211 = getelementptr inbounds i8, i8* %202, i64 32
  %212 = bitcast i8* %211 to i32*
  br i1 %54, label %220, label %213

213:                                              ; preds = %201
  store i32 %72, i32* %212, align 1
  %214 = getelementptr inbounds i8, i8* %202, i64 36
  %215 = bitcast i8* %214 to i32*
  store i32 %73, i32* %215, align 1
  %216 = getelementptr inbounds i8, i8* %202, i64 40
  %217 = bitcast i8* %216 to i32*
  store i32 %74, i32* %217, align 1
  %218 = getelementptr inbounds i8, i8* %202, i64 44
  %219 = bitcast i8* %218 to i32*
  br label %220

220:                                              ; preds = %213, %201
  %221 = phi i64 [ 32, %201 ], [ 44, %213 ]
  %222 = phi i32* [ %212, %201 ], [ %219, %213 ]
  %223 = getelementptr inbounds i8, i8* %202, i64 4
  %224 = bitcast i32* %222 to float*
  store float %107, float* %224, align 1
  %225 = getelementptr inbounds i8, i8* %223, i64 %221
  %226 = bitcast i8* %225 to float*
  store float %109, float* %226, align 1
  %227 = getelementptr inbounds i8, i8* %225, i64 4
  br i1 %137, label %231, label %228

228:                                              ; preds = %220
  %229 = bitcast i8* %227 to i32*
  store i32 %115, i32* %229, align 1
  %230 = getelementptr inbounds i8, i8* %227, i64 4
  br label %231

231:                                              ; preds = %220, %228
  %232 = phi i8* [ %225, %220 ], [ %227, %228 ]
  %233 = phi i8* [ %227, %220 ], [ %230, %228 ]
  %234 = bitcast i8* %233 to <4 x float>*
  store <4 x float> %89, <4 x float>* %234, align 1
  %235 = getelementptr inbounds i8, i8* %232, i64 20
  %236 = getelementptr inbounds %"struct.EllipseOp::Ellipse", %"struct.EllipseOp::Ellipse"* %51, i64 1
  %237 = icmp eq %"struct.EllipseOp::Ellipse"* %236, %39
  br i1 %237, label %45, label %50

238:                                              ; preds = %45, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  br label %239

239:                                              ; preds = %7, %238
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN9EllipseOp7EllipseELb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.214*, i32, i32) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.214, %class.SkTArray.214* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %66

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %66, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 48) #12
  %45 = load i64, i64* %4, align 8
  %46 = lshr i64 %45, 1
  %47 = and i64 %46, 2147483647
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %35
  %50 = mul nuw nsw i64 %47, 48
  %51 = bitcast %class.SkTArray.214* %0 to i8**
  %52 = load i8*, i8** %51, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %52, i64 %50, i1 false) #12
  %53 = load i64, i64* %4, align 8
  br label %54

54:                                               ; preds = %35, %49
  %55 = phi i64 [ %45, %35 ], [ %53, %49 ]
  %56 = and i64 %55, 1
  %57 = icmp eq i64 %56, 0
  %58 = bitcast %class.SkTArray.214* %0 to i8**
  br i1 %57, label %62, label %59

59:                                               ; preds = %54
  %60 = load i8*, i8** %58, align 8
  tail call void @_Z7sk_freePv(i8* %60) #12
  %61 = load i64, i64* %4, align 8
  br label %62

62:                                               ; preds = %54, %59
  %63 = phi i64 [ %61, %59 ], [ %55, %54 ]
  store i8* %44, i8** %58, align 8
  %64 = and i64 %63, -4294967298
  %65 = or i64 %64, 1
  store i64 %65, i64* %4, align 8
  br label %66

66:                                               ; preds = %62, %32, %21
  ret void
}

declare void @_ZN12GrMeshDrawOp10QuadHelperC1EPNS_6TargetEmi(%"class.GrMeshDrawOp::QuadHelper"*, %"class.GrMeshDrawOp::Target"*, i64, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11DIEllipseOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERKNS_17DeviceSpaceParamsERK8SkMatrix(%class.DIEllipseOp*, %class.GrProcessorSet*, %struct.SkRGBA4f* dereferenceable(16), %"struct.DIEllipseOp::DeviceSpaceParams"* dereferenceable(28), %class.SkMatrix* dereferenceable(40)) unnamed_addr #4 comdat align 2 {
  %6 = alloca { %class.SkMatrix, %struct.SkRGBA4f }, align 8
  %7 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 0
  %8 = load atomic i8, i8* bitcast (i64* @_ZGVZN11DIEllipseOp7ClassIDEvE8kClassID to i8*) acquire, align 8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %18, !prof !3

10:                                               ; preds = %5
  %11 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN11DIEllipseOp7ClassIDEvE8kClassID) #12
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %10
  %14 = atomicrmw add i32* getelementptr inbounds (%"struct.std::__1::atomic.155", %"struct.std::__1::atomic.155"* @_ZN4GrOp14gCurrOpClassIDE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %13
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 329, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i64 0, i64 0)) #16
  unreachable

17:                                               ; preds = %13
  store i32 %14, i32* @_ZZN11DIEllipseOp7ClassIDEvE8kClassID, align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN11DIEllipseOp7ClassIDEvE8kClassID) #12
  br label %18

18:                                               ; preds = %5, %10, %17
  %19 = load i32, i32* @_ZZN11DIEllipseOp7ClassIDEvE8kClassID, align 4
  tail call void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp* %7, i32 %19) #12
  %20 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV11DIEllipseOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 1
  tail call void @_ZN24GrSimpleMeshDrawOpHelperC1EP14GrProcessorSet8GrAATypeNS_10InputFlagsE(%class.GrSimpleMeshDrawOpHelper* %21, %class.GrProcessorSet* %1, i32 1, i8 zeroext 0) #12
  %22 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 3
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 4, i32 0, i32 0, i64 104
  %24 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 4, i32 0, i32 0, i64 0
  %25 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 4, i32 0, i32 0, i64 112
  %26 = bitcast i8* %25 to i64*
  %27 = bitcast i8* %23 to i8**
  store i8* %24, i8** %27, align 8
  store i64 8589934592, i64* %26, align 8
  %28 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 5
  %29 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 0
  %30 = bitcast %struct.GrSimpleMesh** %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false)
  %31 = load float, float* %29, align 4
  %32 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 1
  %33 = load float, float* %32, align 4
  %34 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 3
  %35 = load float, float* %34, align 4
  %36 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 4
  %37 = load float, float* %36, align 4
  %38 = fmul float %31, %31
  %39 = fmul float %35, %35
  %40 = fadd float %38, %39
  %41 = tail call float @sqrtf(float %40) #12
  %42 = fmul float %33, %33
  %43 = fmul float %37, %37
  %44 = fadd float %42, %43
  %45 = tail call float @sqrtf(float %44) #12
  %46 = insertelement <2 x float> undef, float %41, i32 0
  %47 = insertelement <2 x float> %46, float %45, i32 1
  %48 = fdiv <2 x float> <float 5.000000e-01, float 5.000000e-01>, %47
  %49 = bitcast i8* %23 to %class.SkTArray.218*
  %50 = bitcast { %class.SkMatrix, %struct.SkRGBA4f }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %50)
  %51 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %50, i8* align 4 %51, i64 40, i1 false)
  %52 = bitcast %struct.SkRGBA4f* %2 to i8*
  %53 = getelementptr inbounds { %class.SkMatrix, %struct.SkRGBA4f }, { %class.SkMatrix, %struct.SkRGBA4f }* %6, i64 0, i32 1
  %54 = bitcast %struct.SkRGBA4f* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 4 %52, i64 16, i1 false)
  %55 = getelementptr inbounds %"struct.DIEllipseOp::DeviceSpaceParams", %"struct.DIEllipseOp::DeviceSpaceParams"* %3, i64 0, i32 1
  %56 = bitcast float* %55 to <4 x i32>*
  %57 = load <4 x i32>, <4 x i32>* %56, align 4
  %58 = getelementptr inbounds %"struct.DIEllipseOp::DeviceSpaceParams", %"struct.DIEllipseOp::DeviceSpaceParams"* %3, i64 0, i32 5
  %59 = load i32, i32* %58, align 4
  %60 = bitcast %"struct.DIEllipseOp::DeviceSpaceParams"* %3 to <2 x float>*
  %61 = load <2 x float>, <2 x float>* %60, align 4
  %62 = shufflevector <4 x i32> %57, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
  %63 = bitcast <2 x i32> %62 to <2 x float>
  %64 = fsub <2 x float> %61, %63
  %65 = fsub <2 x float> %64, %48
  %66 = fadd <2 x float> %61, %63
  %67 = fadd <2 x float> %48, %66
  tail call void @_ZN8SkTArrayIN11DIEllipseOp7EllipseELb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.218* %49, i32 1, i32 1) #12
  %68 = bitcast i8* %23 to %"struct.DIEllipseOp::Ellipse"**
  %69 = load %"struct.DIEllipseOp::Ellipse"*, %"struct.DIEllipseOp::Ellipse"** %68, align 8
  %70 = load i64, i64* %26, align 8
  %71 = lshr i64 %70, 1
  %72 = and i64 %71, 2147483647
  %73 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %69, i64 %72
  %74 = add i64 %70, 2
  %75 = and i64 %74, 4294967294
  %76 = and i64 %70, -4294967295
  %77 = or i64 %75, %76
  store i64 %77, i64* %26, align 8
  %78 = bitcast %"struct.DIEllipseOp::Ellipse"* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* nonnull align 8 %50, i64 56, i1 false)
  %79 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %69, i64 %72, i32 2
  %80 = bitcast float* %79 to <4 x i32>*
  store <4 x i32> %57, <4 x i32>* %80, align 4
  %81 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %69, i64 %72, i32 6
  %82 = extractelement <2 x float> %48, i32 0
  store float %82, float* %81, align 4
  %83 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %69, i64 %72, i32 7
  %84 = extractelement <2 x float> %48, i32 1
  store float %84, float* %83, align 4
  %85 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %69, i64 %72, i32 8
  store i32 %59, i32* %85, align 4
  %86 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %69, i64 %72, i32 9
  %87 = bitcast %struct.SkRect* %86 to <2 x float>*
  store <2 x float> %65, <2 x float>* %87, align 4
  %88 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %69, i64 %72, i32 9, i32 2
  %89 = bitcast float* %88 to <2 x float>*
  store <2 x float> %67, <2 x float>* %89, align 4
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %50)
  %90 = load %"struct.DIEllipseOp::Ellipse"*, %"struct.DIEllipseOp::Ellipse"** %68, align 8
  %91 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %90, i64 0, i32 9
  %92 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %93 = tail call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %4, %struct.SkRect* %92, %struct.SkRect* dereferenceable(16) %91, i32 1) #12
  %94 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  store i16 1, i16* %94, align 2
  ret void
}

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #13

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11DIEllipseOpD2Ev(%class.DIEllipseOp*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV11DIEllipseOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 4, i32 0, i32 0, i64 112
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 4, i32 0, i32 0, i64 104
  %10 = bitcast i8* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #12
  br label %12

12:                                               ; preds = %1, %8
  %13 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 1
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD1Ev(%class.GrSimpleMeshDrawOpHelper* %13) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %14 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %class.GrOp*, %class.GrOp** %14, align 8
  store %class.GrOp* null, %class.GrOp** %14, align 8
  %16 = icmp eq %class.GrOp* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  %18 = bitcast %class.GrOp* %15 to void (%class.GrOp*)***
  %19 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %19, i64 1
  %21 = load void (%class.GrOp*)*, void (%class.GrOp*)** %20, align 8
  tail call void %21(%class.GrOp* nonnull %15) #12
  br label %22

22:                                               ; preds = %12, %17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11DIEllipseOpD0Ev(%class.DIEllipseOp*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV11DIEllipseOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 4, i32 0, i32 0, i64 112
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 4, i32 0, i32 0, i64 104
  %10 = bitcast i8* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #12
  br label %12

12:                                               ; preds = %8, %1
  %13 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 1
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD1Ev(%class.GrSimpleMeshDrawOpHelper* %13) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %14 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %class.GrOp*, %class.GrOp** %14, align 8
  store %class.GrOp* null, %class.GrOp** %14, align 8
  %16 = icmp eq %class.GrOp* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  %18 = bitcast %class.GrOp* %15 to void (%class.GrOp*)***
  %19 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %19, i64 1
  %21 = load void (%class.GrOp*)*, void (%class.GrOp*)** %20, align 8
  tail call void %21(%class.GrOp* nonnull %15) #12
  br label %22

22:                                               ; preds = %12, %17
  %23 = bitcast %class.DIEllipseOp* %0 to i8*
  tail call void @_ZdlPv(i8* %23) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK11DIEllipseOp4nameEv(%class.DIEllipseOp*) unnamed_addr #4 comdat align 2 {
  ret i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.111, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK11DIEllipseOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.DIEllipseOp*, %"class.std::__1::function.137"*) unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 6
  %4 = load %class.GrProgramInfo*, %class.GrProgramInfo** %3, align 8
  %5 = icmp eq %class.GrProgramInfo* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %4, i64 0, i32 5
  %8 = load %class.GrPipeline*, %class.GrPipeline** %7, align 8
  tail call void @_ZNK10GrPipeline12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrPipeline* %8, %"class.std::__1::function.137"* %1) #12
  br label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 1, i32 0
  %11 = load %class.GrProcessorSet*, %class.GrProcessorSet** %10, align 8
  %12 = icmp eq %class.GrProcessorSet* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZNK14GrProcessorSet12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrProcessorSet* nonnull %11, %"class.std::__1::function.137"* %1) #12
  br label %14

14:                                               ; preds = %13, %9, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN11DIEllipseOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps(%class.DIEllipseOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps* dereferenceable(232)) unnamed_addr #4 comdat align 2 {
  %5 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 1
  %6 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 1
  %7 = bitcast %class.GrOp* %6 to %class.GrSimpleMeshDrawOpHelper*
  %8 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %9 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 0, i32 6
  %10 = tail call zeroext i1 @_ZNK24GrSimpleMeshDrawOpHelper12isCompatibleERKS_RK6GrCapsRK6SkRectS7_b(%class.GrSimpleMeshDrawOpHelper* %5, %class.GrSimpleMeshDrawOpHelper* dereferenceable(16) %7, %class.GrCaps* dereferenceable(232) %3, %struct.SkRect* dereferenceable(16) %8, %struct.SkRect* dereferenceable(16) %9, i1 zeroext false) #12
  br i1 %10, label %11, label %100

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 4, i32 0, i32 0, i64 104
  %13 = bitcast i8* %12 to %"struct.DIEllipseOp::Ellipse"**
  %14 = load %"struct.DIEllipseOp::Ellipse"*, %"struct.DIEllipseOp::Ellipse"** %13, align 8
  %15 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %14, i64 0, i32 8
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 3, i32 6
  %18 = bitcast %struct.SkRect* %17 to %"struct.DIEllipseOp::Ellipse"**
  %19 = load %"struct.DIEllipseOp::Ellipse"*, %"struct.DIEllipseOp::Ellipse"** %18, align 8
  %20 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %19, i64 0, i32 8
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %16, %21
  br i1 %22, label %23, label %100

23:                                               ; preds = %11
  %24 = icmp eq %"struct.DIEllipseOp::Ellipse"* %14, %19
  br i1 %24, label %30, label %25

25:                                               ; preds = %23
  %26 = bitcast %"struct.DIEllipseOp::Ellipse"* %14 to i8*
  %27 = bitcast %"struct.DIEllipseOp::Ellipse"* %19 to i8*
  %28 = tail call i32 @bcmp(i8* %26, i8* %27, i64 36) #12
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %100

30:                                               ; preds = %23, %25
  %31 = bitcast i8* %12 to %class.SkTArray.218*
  %32 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 3, i32 6, i32 2
  %33 = bitcast float* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = lshr i64 %34, 1
  %36 = trunc i64 %35 to i32
  %37 = and i32 %36, 2147483647
  tail call void @_ZN8SkTArrayIN11DIEllipseOp7EllipseELb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.218* %31, i32 %37, i32 1) #12
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %85, label %39

39:                                               ; preds = %30
  %40 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 4, i32 0, i32 0, i64 112
  %41 = bitcast i8* %40 to i64*
  %42 = zext i32 %37 to i64
  %43 = and i64 %42, 1
  %44 = icmp eq i32 %37, 1
  br i1 %44, label %72, label %45

45:                                               ; preds = %39
  %46 = sub nsw i64 %42, %43
  br label %47

47:                                               ; preds = %47, %45
  %48 = phi i64 [ 0, %45 ], [ %69, %47 ]
  %49 = phi i64 [ %46, %45 ], [ %70, %47 ]
  %50 = load %"struct.DIEllipseOp::Ellipse"*, %"struct.DIEllipseOp::Ellipse"** %13, align 8
  %51 = load i64, i64* %41, align 8
  %52 = lshr i64 %51, 1
  %53 = and i64 %52, 2147483647
  %54 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %50, i64 %53
  %55 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %54, i64 %48
  %56 = bitcast %"struct.DIEllipseOp::Ellipse"* %55 to i8*
  %57 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %19, i64 %48
  %58 = bitcast %"struct.DIEllipseOp::Ellipse"* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %56, i8* align 4 %58, i64 100, i1 false) #12
  %59 = or i64 %48, 1
  %60 = load %"struct.DIEllipseOp::Ellipse"*, %"struct.DIEllipseOp::Ellipse"** %13, align 8
  %61 = load i64, i64* %41, align 8
  %62 = lshr i64 %61, 1
  %63 = and i64 %62, 2147483647
  %64 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %60, i64 %63
  %65 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %64, i64 %59
  %66 = bitcast %"struct.DIEllipseOp::Ellipse"* %65 to i8*
  %67 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %19, i64 %59
  %68 = bitcast %"struct.DIEllipseOp::Ellipse"* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %66, i8* align 4 %68, i64 100, i1 false) #12
  %69 = add nuw nsw i64 %48, 2
  %70 = add i64 %49, -2
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %47

72:                                               ; preds = %47, %39
  %73 = phi i64 [ 0, %39 ], [ %69, %47 ]
  %74 = icmp eq i64 %43, 0
  br i1 %74, label %85, label %75

75:                                               ; preds = %72
  %76 = load %"struct.DIEllipseOp::Ellipse"*, %"struct.DIEllipseOp::Ellipse"** %13, align 8
  %77 = load i64, i64* %41, align 8
  %78 = lshr i64 %77, 1
  %79 = and i64 %78, 2147483647
  %80 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %76, i64 %79
  %81 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %80, i64 %73
  %82 = bitcast %"struct.DIEllipseOp::Ellipse"* %81 to i8*
  %83 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %19, i64 %73
  %84 = bitcast %"struct.DIEllipseOp::Ellipse"* %83 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %82, i8* align 4 %84, i64 100, i1 false) #12
  br label %85

85:                                               ; preds = %75, %72, %30
  %86 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 4, i32 0, i32 0, i64 112
  %87 = bitcast i8* %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = and i64 %34, 4294967294
  %90 = add i64 %88, %89
  %91 = and i64 %90, 4294967294
  %92 = and i64 %88, -4294967295
  %93 = or i64 %91, %92
  store i64 %93, i64* %87, align 8
  %94 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 1, i32 2
  %95 = bitcast %class.GrOp** %94 to i8*
  %96 = load i8, i8* %95, align 8, !range !2
  %97 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 2
  %98 = load i8, i8* %97, align 8, !range !2
  %99 = or i8 %98, %96
  store i8 %99, i8* %97, align 8
  br label %100

100:                                              ; preds = %25, %11, %4, %85
  %101 = phi i32 [ 0, %85 ], [ 2, %4 ], [ 2, %11 ], [ 2, %25 ]
  ret i32 %101
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11DIEllipseOp9onExecuteEP14GrOpFlushStateRK6SkRect(%class.DIEllipseOp*, %class.GrOpFlushState*, %struct.SkRect* dereferenceable(16)) unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 6
  %5 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %6 = icmp eq %class.GrProgramInfo* %5, null
  br i1 %6, label %35, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 5
  %9 = load %struct.GrSimpleMesh*, %struct.GrSimpleMesh** %8, align 8
  %10 = icmp eq %struct.GrSimpleMesh* %9, null
  br i1 %10, label %35, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 15
  %13 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass12bindPipelineERK13GrProgramInfoRK6SkRect(%class.GrOpsRenderPass* %13, %class.GrProgramInfo* nonnull dereferenceable(128) %5, %struct.SkRect* dereferenceable(16) %2) #12
  %14 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %5, i64 0, i32 5
  %15 = load %class.GrPipeline*, %class.GrPipeline** %14, align 8
  %16 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %15, i64 0, i32 5
  %17 = load i8, i8* %16, align 8
  %18 = and i8 %17, 32
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 10
  %22 = load %"struct.GrOpFlushState::OpArgs"*, %"struct.GrOpFlushState::OpArgs"** %21, align 8
  %23 = getelementptr inbounds %"struct.GrOpFlushState::OpArgs", %"struct.GrOpFlushState::OpArgs"* %22, i64 0, i32 4
  %24 = load %class.GrAppliedClip*, %class.GrAppliedClip** %23, align 8
  %25 = getelementptr inbounds %class.GrAppliedClip, %class.GrAppliedClip* %24, i64 0, i32 0, i32 0, i32 1
  %26 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass14setScissorRectERK7SkIRect(%class.GrOpsRenderPass* %26, %struct.SkIRect* dereferenceable(16) %25) #12
  br label %27

27:                                               ; preds = %11, %20
  %28 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %29 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %28, i64 0, i32 7
  %30 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %29, align 8
  %31 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %28, i64 0, i32 5
  %32 = load %class.GrPipeline*, %class.GrPipeline** %31, align 8
  %33 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrOpsRenderPass* %33, %class.GrGeometryProcessor* dereferenceable(80) %30, %class.GrSurfaceProxy** null, %class.GrPipeline* dereferenceable(128) %32) #12
  %34 = load %struct.GrSimpleMesh*, %struct.GrSimpleMesh** %8, align 8
  tail call void @_ZN14GrOpFlushState8drawMeshERK12GrSimpleMesh(%class.GrOpFlushState* %1, %struct.GrSimpleMesh* dereferenceable(48) %34) #12
  br label %35

35:                                               ; preds = %7, %3, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK11DIEllipseOp18fixedFunctionFlagsEv(%class.DIEllipseOp*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 1
  %3 = tail call i32 @_ZNK24GrSimpleMeshDrawOpHelper18fixedFunctionFlagsEv(%class.GrSimpleMeshDrawOpHelper* %2) #12
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN11DIEllipseOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType(%class.DIEllipseOp*, %class.GrCaps* dereferenceable(232), %class.GrAppliedClip*, i32) unnamed_addr #4 comdat align 2 {
  %5 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %1, i64 0, i32 2, i32 0
  %6 = load %class.GrShaderCaps*, %class.GrShaderCaps** %5, align 8
  %7 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %6, i64 0, i32 2
  %8 = bitcast i56* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 131072
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %4
  %13 = lshr i64 %9, 19
  %14 = trunc i64 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  br label %17

17:                                               ; preds = %4, %12
  %18 = phi i8 [ 0, %4 ], [ %16, %12 ]
  %19 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 4, i32 0, i32 0, i64 104
  %21 = bitcast i8* %20 to %"struct.DIEllipseOp::Ellipse"**
  %22 = load %"struct.DIEllipseOp::Ellipse"*, %"struct.DIEllipseOp::Ellipse"** %21, align 8
  %23 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %22, i64 0, i32 1
  %24 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 1
  %25 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 2
  %26 = tail call i32 @_ZN24GrSimpleMeshDrawOpHelper18finalizeProcessorsERK6GrCapsPK13GrAppliedClip11GrClampType27GrProcessorAnalysisCoverageP8SkRGBA4fIL11SkAlphaType2EEPb(%class.GrSimpleMeshDrawOpHelper* %24, %class.GrCaps* dereferenceable(232) %1, %class.GrAppliedClip* %2, i32 %3, i32 1, %struct.SkRGBA4f* %23, i8* %25) #12
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrProgramInfo* @_ZN11DIEllipseOp11programInfoEv(%class.DIEllipseOp*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 6
  %3 = load %class.GrProgramInfo*, %class.GrProgramInfo** %2, align 8
  ret %class.GrProgramInfo* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11DIEllipseOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.DIEllipseOp*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip* dereferenceable(72), %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #4 comdat align 2 {
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  %12 = alloca %class.anon.219, align 8
  %13 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 2
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 3
  %16 = load i8, i8* %15, align 1, !range !2
  %17 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 4, i32 0, i32 0, i64 104
  %18 = bitcast i8* %17 to %"struct.DIEllipseOp::Ellipse"**
  %19 = load %"struct.DIEllipseOp::Ellipse"*, %"struct.DIEllipseOp::Ellipse"** %18, align 8
  %20 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %19, i64 0, i32 0
  %21 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %19, i64 0, i32 8
  %22 = load i32, i32* %21, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10)
  %23 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23)
  store i8 %14, i8* %9, align 1
  store i8 %16, i8* %10, align 1
  store i32 %22, i32* %11, align 4
  %24 = bitcast %class.anon.219* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #12
  %25 = getelementptr inbounds %class.anon.219, %class.anon.219* %12, i64 0, i32 0
  store i8* %9, i8** %25, align 8
  %26 = getelementptr inbounds %class.anon.219, %class.anon.219* %12, i64 0, i32 1
  store i8* %10, i8** %26, align 8
  %27 = getelementptr inbounds %class.anon.219, %class.anon.219* %12, i64 0, i32 2
  store %class.SkMatrix* %20, %class.SkMatrix** %27, align 8
  %28 = getelementptr inbounds %class.anon.219, %class.anon.219* %12, i64 0, i32 3
  store i32* %11, i32** %28, align 8
  %29 = call %class.DIEllipseGeometryProcessor* @_ZN12SkArenaAlloc4makeIZN26DIEllipseGeometryProcessor4MakeEPS_bbRK8SkMatrix14DIEllipseStyleEUlPvE_EEDTclfp_LDnEEEOT_(%class.SkArenaAlloc* %2, %class.anon.219* nonnull dereferenceable(32) %12) #12
  %30 = bitcast %class.DIEllipseGeometryProcessor* %29 to %class.GrGeometryProcessor*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23)
  %31 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 1
  %32 = call %class.GrProgramInfo* @_ZN24GrSimpleMeshDrawOpHelper17createProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewEP19GrGeometryProcessor15GrPrimitiveType18GrXferBarrierFlags8GrLoadOp(%class.GrSimpleMeshDrawOpHelper* %31, %class.GrCaps* %1, %class.SkArenaAlloc* %2, %class.GrSurfaceProxyView* dereferenceable(16) %3, %class.GrAppliedClip* dereferenceable(72) %4, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %5, %class.GrGeometryProcessor* %30, i8 zeroext 0, i32 %6, i32 %7) #12
  %33 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 6
  store %class.GrProgramInfo* %32, %class.GrProgramInfo** %33, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11DIEllipseOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE(%class.DIEllipseOp*, %"class.GrMeshDrawOp::Target"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.GrMeshDrawOp::QuadHelper", align 8
  %4 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 6
  %5 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %6 = icmp eq %class.GrProgramInfo* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 0
  tail call void @_ZN12GrMeshDrawOp17createProgramInfoEPNS_6TargetE(%class.GrMeshDrawOp* %8, %"class.GrMeshDrawOp::Target"* %1) #12
  %9 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi %class.GrProgramInfo* [ %5, %2 ], [ %9, %7 ]
  %12 = bitcast %"class.GrMeshDrawOp::QuadHelper"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"class.GrMeshDrawOp::QuadHelper", %"class.GrMeshDrawOp::QuadHelper"* %3, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.GrMeshDrawOp::QuadHelper", %"class.GrMeshDrawOp::QuadHelper"* %3, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %11, i64 0, i32 7
  %16 = bitcast %"class.GrMeshDrawOp::QuadHelper"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  %17 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %15, align 8
  %18 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %17, i64 0, i32 3, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 4, i32 0, i32 0, i64 112
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = lshr i64 %22, 1
  %24 = trunc i64 %23 to i32
  %25 = and i32 %24, 2147483647
  call void @_ZN12GrMeshDrawOp10QuadHelperC1EPNS_6TargetEmi(%"class.GrMeshDrawOp::QuadHelper"* nonnull %3, %"class.GrMeshDrawOp::Target"* %1, i64 %19, i32 %25) #12
  %26 = load i8*, i8** %13, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %258, label %28

28:                                               ; preds = %10
  %29 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 4, i32 0, i32 0, i64 104
  %30 = bitcast i8* %29 to %"struct.DIEllipseOp::Ellipse"**
  %31 = load %"struct.DIEllipseOp::Ellipse"*, %"struct.DIEllipseOp::Ellipse"** %30, align 8
  %32 = icmp eq %"struct.DIEllipseOp::Ellipse"* %31, null
  br i1 %32, label %42, label %33

33:                                               ; preds = %28
  %34 = load i64, i64* %21, align 8
  %35 = lshr i64 %34, 1
  %36 = and i64 %35, 2147483647
  %37 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %31, i64 %36
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 2
  %41 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 3
  br label %47

42:                                               ; preds = %249, %28, %33
  %43 = bitcast %struct.GrSimpleMesh** %14 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %class.DIEllipseOp, %class.DIEllipseOp* %0, i64 0, i32 5
  %46 = bitcast %struct.GrSimpleMesh** %45 to i64*
  store i64 %44, i64* %46, align 8
  br label %258

47:                                               ; preds = %39, %249
  %48 = phi %"struct.DIEllipseOp::Ellipse"* [ %31, %39 ], [ %256, %249 ]
  %49 = phi i8* [ %26, %39 ], [ %255, %249 ]
  %50 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %48, i64 0, i32 1
  %51 = load i8, i8* %40, align 8, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %65, label %53

53:                                               ; preds = %47
  %54 = bitcast %struct.SkRGBA4f* %50 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %48, i64 0, i32 1, i32 1
  %57 = bitcast float* %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %48, i64 0, i32 1, i32 2
  %60 = bitcast float* %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %48, i64 0, i32 1, i32 3
  %63 = bitcast float* %62 to i32*
  %64 = load i32, i32* %63, align 4
  br label %67

65:                                               ; preds = %47
  %66 = call i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f* %50) #12
  br label %67

67:                                               ; preds = %53, %65
  %68 = phi i32 [ %55, %53 ], [ %66, %65 ]
  %69 = phi i32 [ %58, %53 ], [ -1431655766, %65 ]
  %70 = phi i32 [ %61, %53 ], [ -1431655766, %65 ]
  %71 = phi i32 [ %64, %53 ], [ -1431655766, %65 ]
  %72 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %48, i64 0, i32 2
  %73 = bitcast float* %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %48, i64 0, i32 3
  %76 = load float, float* %75, align 4
  %77 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %48, i64 0, i32 6
  %78 = bitcast i32 %74 to float
  %79 = bitcast float* %77 to <2 x float>*
  %80 = load <2 x float>, <2 x float>* %79, align 4
  %81 = insertelement <2 x float> undef, float %78, i32 0
  %82 = insertelement <2 x float> %81, float %76, i32 1
  %83 = fdiv <2 x float> %80, %82
  %84 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %83
  %85 = load %"struct.DIEllipseOp::Ellipse"*, %"struct.DIEllipseOp::Ellipse"** %30, align 8
  %86 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %85, i64 0, i32 8
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  %89 = bitcast float %76 to i32
  br i1 %88, label %90, label %95

90:                                               ; preds = %67
  %91 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %48, i64 0, i32 4
  %92 = bitcast float* %91 to <2 x float>*
  %93 = load <2 x float>, <2 x float>* %92, align 4
  %94 = fdiv <2 x float> %82, %93
  br label %95

95:                                               ; preds = %90, %67
  %96 = phi <2 x float> [ %94, %90 ], [ %84, %67 ]
  %97 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %48, i64 0, i32 9, i32 0
  %98 = bitcast float* %97 to i32*
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %48, i64 0, i32 9, i32 1
  %101 = bitcast float* %100 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %48, i64 0, i32 9, i32 2
  %104 = bitcast float* %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %48, i64 0, i32 9, i32 3
  %107 = bitcast float* %106 to i32*
  %108 = load i32, i32* %107, align 4
  %109 = extractelement <2 x float> %83, i32 0
  %110 = fadd float %109, 1.000000e+00
  %111 = extractelement <2 x float> %83, i32 1
  %112 = fadd float %111, 1.000000e+00
  %113 = fsub float -0.000000e+00, %110
  %114 = fsub float -0.000000e+00, %112
  %115 = load i8, i8* %41, align 1, !range !2
  %116 = fcmp ogt float %76, %78
  %117 = select i1 %116, i32 %89, i32 %74
  %118 = extractelement <2 x float> %96, i32 0
  %119 = fadd float %109, %118
  %120 = extractelement <2 x float> %96, i32 1
  %121 = fadd float %111, %120
  %122 = fsub float -0.000000e+00, %119
  %123 = fsub float -0.000000e+00, %121
  %124 = bitcast i8* %49 to i32*
  store i32 %99, i32* %124, align 1
  %125 = getelementptr inbounds i8, i8* %49, i64 4
  %126 = bitcast i8* %125 to i32*
  store i32 %102, i32* %126, align 1
  %127 = getelementptr inbounds i8, i8* %49, i64 8
  %128 = bitcast i8* %127 to i32*
  store i32 %68, i32* %128, align 1
  %129 = getelementptr inbounds i8, i8* %49, i64 12
  %130 = bitcast i8* %129 to i32*
  br i1 %52, label %138, label %131

131:                                              ; preds = %95
  store i32 %69, i32* %130, align 1
  %132 = getelementptr inbounds i8, i8* %49, i64 16
  %133 = bitcast i8* %132 to i32*
  store i32 %70, i32* %133, align 1
  %134 = getelementptr inbounds i8, i8* %49, i64 20
  %135 = bitcast i8* %134 to i32*
  store i32 %71, i32* %135, align 1
  %136 = getelementptr inbounds i8, i8* %49, i64 24
  %137 = bitcast i8* %136 to i32*
  br label %138

138:                                              ; preds = %131, %95
  %139 = phi i64 [ 12, %95 ], [ 24, %131 ]
  %140 = phi i32* [ %130, %95 ], [ %137, %131 ]
  %141 = bitcast i32* %140 to float*
  store float %113, float* %141, align 1
  %142 = getelementptr inbounds i8, i8* %125, i64 %139
  %143 = bitcast i8* %142 to float*
  store float %114, float* %143, align 1
  %144 = getelementptr inbounds i8, i8* %142, i64 4
  %145 = icmp eq i8 %115, 0
  %146 = bitcast i8* %144 to i32*
  br i1 %145, label %150, label %147

147:                                              ; preds = %138
  store i32 %117, i32* %146, align 1
  %148 = getelementptr inbounds i8, i8* %144, i64 4
  %149 = bitcast i8* %148 to i32*
  br label %150

150:                                              ; preds = %138, %147
  %151 = phi i8* [ %142, %138 ], [ %144, %147 ]
  %152 = phi i32* [ %146, %138 ], [ %149, %147 ]
  %153 = bitcast i32* %152 to float*
  store float %122, float* %153, align 1
  %154 = getelementptr inbounds i8, i8* %151, i64 8
  %155 = bitcast i8* %154 to float*
  store float %123, float* %155, align 1
  %156 = getelementptr inbounds i8, i8* %151, i64 12
  %157 = bitcast i8* %156 to i32*
  store i32 %99, i32* %157, align 1
  %158 = getelementptr inbounds i8, i8* %151, i64 16
  %159 = bitcast i8* %158 to i32*
  store i32 %108, i32* %159, align 1
  %160 = getelementptr inbounds i8, i8* %151, i64 20
  %161 = bitcast i8* %160 to i32*
  store i32 %68, i32* %161, align 1
  %162 = getelementptr inbounds i8, i8* %151, i64 24
  %163 = bitcast i8* %162 to i32*
  br i1 %52, label %171, label %164

164:                                              ; preds = %150
  store i32 %69, i32* %163, align 1
  %165 = getelementptr inbounds i8, i8* %151, i64 28
  %166 = bitcast i8* %165 to i32*
  store i32 %70, i32* %166, align 1
  %167 = getelementptr inbounds i8, i8* %151, i64 32
  %168 = bitcast i8* %167 to i32*
  store i32 %71, i32* %168, align 1
  %169 = getelementptr inbounds i8, i8* %151, i64 36
  %170 = bitcast i8* %169 to i32*
  br label %171

171:                                              ; preds = %164, %150
  %172 = phi i64 [ 24, %150 ], [ 36, %164 ]
  %173 = phi i32* [ %163, %150 ], [ %170, %164 ]
  %174 = getelementptr inbounds i8, i8* %151, i64 4
  %175 = bitcast i32* %173 to float*
  store float %113, float* %175, align 1
  %176 = getelementptr inbounds i8, i8* %174, i64 %172
  %177 = bitcast i8* %176 to float*
  store float %112, float* %177, align 1
  %178 = getelementptr inbounds i8, i8* %176, i64 4
  %179 = bitcast i8* %178 to i32*
  br i1 %145, label %183, label %180

180:                                              ; preds = %171
  store i32 %117, i32* %179, align 1
  %181 = getelementptr inbounds i8, i8* %178, i64 4
  %182 = bitcast i8* %181 to i32*
  br label %183

183:                                              ; preds = %171, %180
  %184 = phi i8* [ %176, %171 ], [ %178, %180 ]
  %185 = phi i32* [ %179, %171 ], [ %182, %180 ]
  %186 = bitcast i32* %185 to float*
  store float %122, float* %186, align 1
  %187 = getelementptr inbounds i8, i8* %184, i64 8
  %188 = bitcast i8* %187 to float*
  store float %121, float* %188, align 1
  %189 = getelementptr inbounds i8, i8* %184, i64 12
  %190 = bitcast i8* %189 to i32*
  store i32 %105, i32* %190, align 1
  %191 = getelementptr inbounds i8, i8* %184, i64 16
  %192 = bitcast i8* %191 to i32*
  store i32 %102, i32* %192, align 1
  %193 = getelementptr inbounds i8, i8* %184, i64 20
  %194 = bitcast i8* %193 to i32*
  store i32 %68, i32* %194, align 1
  %195 = getelementptr inbounds i8, i8* %184, i64 24
  %196 = bitcast i8* %195 to i32*
  br i1 %52, label %204, label %197

197:                                              ; preds = %183
  store i32 %69, i32* %196, align 1
  %198 = getelementptr inbounds i8, i8* %184, i64 28
  %199 = bitcast i8* %198 to i32*
  store i32 %70, i32* %199, align 1
  %200 = getelementptr inbounds i8, i8* %184, i64 32
  %201 = bitcast i8* %200 to i32*
  store i32 %71, i32* %201, align 1
  %202 = getelementptr inbounds i8, i8* %184, i64 36
  %203 = bitcast i8* %202 to i32*
  br label %204

204:                                              ; preds = %197, %183
  %205 = phi i64 [ 24, %183 ], [ 36, %197 ]
  %206 = phi i32* [ %196, %183 ], [ %203, %197 ]
  %207 = getelementptr inbounds i8, i8* %184, i64 4
  %208 = bitcast i32* %206 to float*
  store float %110, float* %208, align 1
  %209 = getelementptr inbounds i8, i8* %207, i64 %205
  %210 = bitcast i8* %209 to float*
  store float %114, float* %210, align 1
  %211 = getelementptr inbounds i8, i8* %209, i64 4
  %212 = bitcast i8* %211 to i32*
  br i1 %145, label %216, label %213

213:                                              ; preds = %204
  store i32 %117, i32* %212, align 1
  %214 = getelementptr inbounds i8, i8* %211, i64 4
  %215 = bitcast i8* %214 to i32*
  br label %216

216:                                              ; preds = %204, %213
  %217 = phi i8* [ %209, %204 ], [ %211, %213 ]
  %218 = phi i32* [ %212, %204 ], [ %215, %213 ]
  %219 = bitcast i32* %218 to float*
  store float %119, float* %219, align 1
  %220 = getelementptr inbounds i8, i8* %217, i64 8
  %221 = bitcast i8* %220 to float*
  store float %123, float* %221, align 1
  %222 = getelementptr inbounds i8, i8* %217, i64 12
  %223 = bitcast i8* %222 to i32*
  store i32 %105, i32* %223, align 1
  %224 = getelementptr inbounds i8, i8* %217, i64 16
  %225 = bitcast i8* %224 to i32*
  store i32 %108, i32* %225, align 1
  %226 = getelementptr inbounds i8, i8* %217, i64 20
  %227 = bitcast i8* %226 to i32*
  store i32 %68, i32* %227, align 1
  %228 = getelementptr inbounds i8, i8* %217, i64 24
  %229 = bitcast i8* %228 to i32*
  br i1 %52, label %237, label %230

230:                                              ; preds = %216
  store i32 %69, i32* %229, align 1
  %231 = getelementptr inbounds i8, i8* %217, i64 28
  %232 = bitcast i8* %231 to i32*
  store i32 %70, i32* %232, align 1
  %233 = getelementptr inbounds i8, i8* %217, i64 32
  %234 = bitcast i8* %233 to i32*
  store i32 %71, i32* %234, align 1
  %235 = getelementptr inbounds i8, i8* %217, i64 36
  %236 = bitcast i8* %235 to i32*
  br label %237

237:                                              ; preds = %230, %216
  %238 = phi i64 [ 24, %216 ], [ 36, %230 ]
  %239 = phi i32* [ %229, %216 ], [ %236, %230 ]
  %240 = getelementptr inbounds i8, i8* %217, i64 4
  %241 = bitcast i32* %239 to float*
  store float %110, float* %241, align 1
  %242 = getelementptr inbounds i8, i8* %240, i64 %238
  %243 = bitcast i8* %242 to float*
  store float %112, float* %243, align 1
  %244 = getelementptr inbounds i8, i8* %242, i64 4
  %245 = bitcast i8* %244 to i32*
  br i1 %145, label %249, label %246

246:                                              ; preds = %237
  store i32 %117, i32* %245, align 1
  %247 = getelementptr inbounds i8, i8* %244, i64 4
  %248 = bitcast i8* %247 to i32*
  br label %249

249:                                              ; preds = %237, %246
  %250 = phi i8* [ %242, %237 ], [ %244, %246 ]
  %251 = phi i32* [ %245, %237 ], [ %248, %246 ]
  %252 = bitcast i32* %251 to float*
  store float %119, float* %252, align 1
  %253 = getelementptr inbounds i8, i8* %250, i64 8
  %254 = bitcast i8* %253 to float*
  store float %121, float* %254, align 1
  %255 = getelementptr inbounds i8, i8* %250, i64 12
  %256 = getelementptr inbounds %"struct.DIEllipseOp::Ellipse", %"struct.DIEllipseOp::Ellipse"* %48, i64 1
  %257 = icmp eq %"struct.DIEllipseOp::Ellipse"* %256, %37
  br i1 %257, label %42, label %47

258:                                              ; preds = %10, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN11DIEllipseOp7EllipseELb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.218*, i32, i32) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.218, %class.SkTArray.218* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %66

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %66, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 100) #12
  %45 = load i64, i64* %4, align 8
  %46 = lshr i64 %45, 1
  %47 = and i64 %46, 2147483647
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %35
  %50 = mul nuw nsw i64 %47, 100
  %51 = bitcast %class.SkTArray.218* %0 to i8**
  %52 = load i8*, i8** %51, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %52, i64 %50, i1 false) #12
  %53 = load i64, i64* %4, align 8
  br label %54

54:                                               ; preds = %35, %49
  %55 = phi i64 [ %45, %35 ], [ %53, %49 ]
  %56 = and i64 %55, 1
  %57 = icmp eq i64 %56, 0
  %58 = bitcast %class.SkTArray.218* %0 to i8**
  br i1 %57, label %62, label %59

59:                                               ; preds = %54
  %60 = load i8*, i8** %58, align 8
  tail call void @_Z7sk_freePv(i8* %60) #12
  %61 = load i64, i64* %4, align 8
  br label %62

62:                                               ; preds = %54, %59
  %63 = phi i64 [ %61, %59 ], [ %55, %54 ]
  store i8* %44, i8** %58, align 8
  %64 = and i64 %63, -4294967298
  %65 = or i64 %64, 1
  store i64 %65, i64* %4, align 8
  br label %66

66:                                               ; preds = %62, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.DIEllipseGeometryProcessor* @_ZN12SkArenaAlloc4makeIZN26DIEllipseGeometryProcessor4MakeEPS_bbRK8SkMatrix14DIEllipseStyleEUlPvE_EEDTclfp_LDnEEEOT_(%class.SkArenaAlloc*, %class.anon.219* dereferenceable(32)) local_unnamed_addr #4 comdat align 2 {
  %3 = tail call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %0, i32 201, i32 8) #12
  %4 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %0, i64 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = ptrtoint i8* %3 to i64
  %8 = sub i64 %7, %6
  %9 = trunc i64 %8 to i32
  %10 = getelementptr inbounds i8, i8* %3, i64 192
  store i8* %10, i8** %4, align 8
  tail call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %0, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZN26DIEllipseGeometryProcessor4MakeEPS_bbRK8SkMatrix14DIEllipseStyleEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESC_, i32 %9) #12
  %11 = bitcast i8* %3 to %class.DIEllipseGeometryProcessor*
  %12 = getelementptr inbounds %class.anon.219, %class.anon.219* %1, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = load i8, i8* %13, align 1, !range !2
  %15 = icmp eq i8 %14, 0
  %16 = getelementptr inbounds %class.anon.219, %class.anon.219* %1, i64 0, i32 1
  %17 = load i8*, i8** %16, align 8
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = icmp eq i8 %18, 0
  %20 = getelementptr inbounds %class.anon.219, %class.anon.219* %1, i64 0, i32 2
  %21 = bitcast %class.SkMatrix** %20 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %class.anon.219, %class.anon.219* %1, i64 0, i32 3
  %24 = load i32*, i32** %23, align 8
  %25 = load i32, i32* %24, align 4
  %26 = bitcast i8* %3 to %class.GrGeometryProcessor*
  tail call void @_ZN19GrGeometryProcessorC2EN11GrProcessor7ClassIDE(%class.GrGeometryProcessor* %26, i32 15) #12
  %27 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV26DIEllipseGeometryProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds i8, i8* %3, i64 80
  %29 = bitcast i8* %28 to %"class.GrGeometryProcessor::Attribute"*
  %30 = getelementptr inbounds i8, i8* %3, i64 112
  %31 = getelementptr inbounds i8, i8* %3, i64 128
  %32 = getelementptr inbounds i8, i8* %3, i64 144
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 64, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 4 %22, i64 40, i1 false) #12
  %33 = getelementptr inbounds i8, i8* %3, i64 184
  store i8 %18, i8* %33, align 8
  %34 = getelementptr inbounds i8, i8* %3, i64 188
  %35 = bitcast i8* %34 to i32*
  store i32 %25, i32* %35, align 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.112 to i8*), i64 16, i1 false) #12
  %36 = select i1 %15, i64 133143986193, i64 133143986179
  %37 = getelementptr inbounds i8, i8* %3, i64 96
  %38 = bitcast i8* %37 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i8** %38, align 8
  %39 = getelementptr inbounds i8, i8* %3, i64 104
  %40 = bitcast i8* %39 to i64*
  store i64 %36, i64* %40, align 8
  br i1 %19, label %42, label %41

41:                                               ; preds = %2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.114 to i8*), i64 16, i1 false) #12
  br label %43

42:                                               ; preds = %2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.115 to i8*), i64 16, i1 false) #12
  br label %43

43:                                               ; preds = %41, %42
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.117 to i8*), i64 16, i1 false) #12
  tail call void @_ZN19GrGeometryProcessor19setVertexAttributesEPKNS_9AttributeEi(%class.GrGeometryProcessor* %26, %"class.GrGeometryProcessor::Attribute"* %29, i32 4) #12
  ret %class.DIEllipseGeometryProcessor* %11
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc4makeIZN26DIEllipseGeometryProcessor4MakeEPS_bbRK8SkMatrix14DIEllipseStyleEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESC_(i8*) #6 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -201
  %3 = bitcast i8* %2 to %class.DIEllipseGeometryProcessor*
  %4 = bitcast i8* %2 to void (%class.DIEllipseGeometryProcessor*)***
  %5 = load void (%class.DIEllipseGeometryProcessor*)**, void (%class.DIEllipseGeometryProcessor*)*** %4, align 8
  %6 = load void (%class.DIEllipseGeometryProcessor*)*, void (%class.DIEllipseGeometryProcessor*)** %5, align 8
  tail call void %6(%class.DIEllipseGeometryProcessor* %3) #12
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN26DIEllipseGeometryProcessorD0Ev(%class.DIEllipseGeometryProcessor*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %class.DIEllipseGeometryProcessor* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK26DIEllipseGeometryProcessor4nameEv(%class.DIEllipseGeometryProcessor*) unnamed_addr #4 comdat align 2 {
  ret i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.118, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK26DIEllipseGeometryProcessor19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%class.DIEllipseGeometryProcessor*, %class.GrShaderCaps* dereferenceable(144), %class.GrProcessorKeyBuilder*) unnamed_addr #4 comdat align 2 {
  %4 = bitcast %class.DIEllipseGeometryProcessor* %0 to %class.GrGeometryProcessor*
  tail call void @_ZN26DIEllipseGeometryProcessor13GLSLProcessor6GenKeyERK19GrGeometryProcessorRK12GrShaderCapsP21GrProcessorKeyBuilder(%class.GrGeometryProcessor* dereferenceable(80) %4, %class.GrShaderCaps* dereferenceable(144) %1, %class.GrProcessorKeyBuilder* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrGLSLGeometryProcessor* @_ZNK26DIEllipseGeometryProcessor18createGLSLInstanceERK12GrShaderCaps(%class.DIEllipseGeometryProcessor*, %class.GrShaderCaps* dereferenceable(144)) unnamed_addr #4 comdat align 2 {
  %3 = tail call i8* @_Znwm(i64 72) #15
  %4 = bitcast i8* %3 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %3, i64 16
  %6 = bitcast i8* %5 to i64*
  %7 = getelementptr inbounds i8, i8* %3, i64 8
  %8 = bitcast i8* %7 to %"struct.GrGLSLGeometryProcessor::TransformInfo"**
  store %"struct.GrGLSLGeometryProcessor::TransformInfo"* null, %"struct.GrGLSLGeometryProcessor::TransformInfo"** %8, align 8
  store i64 1, i64* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN26DIEllipseGeometryProcessor13GLSLProcessorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 24
  %10 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13InvalidMatrixEv() #12
  %11 = bitcast %class.SkMatrix* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 4 %11, i64 40, i1 false) #12
  %12 = getelementptr inbounds i8, i8* %3, i64 64
  %13 = bitcast i8* %12 to i32*
  store i32 -1, i32* %13, align 4
  %14 = bitcast i8* %3 to %class.GrGLSLGeometryProcessor*
  ret %class.GrGLSLGeometryProcessor* %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN26DIEllipseGeometryProcessor13GLSLProcessor6GenKeyERK19GrGeometryProcessorRK12GrShaderCapsP21GrProcessorKeyBuilder(%class.GrGeometryProcessor* dereferenceable(80), %class.GrShaderCaps* dereferenceable(144), %class.GrProcessorKeyBuilder*) local_unnamed_addr #4 comdat align 2 {
  %4 = bitcast %class.GrGeometryProcessor* %0 to %class.DIEllipseGeometryProcessor*
  %5 = getelementptr inbounds %class.DIEllipseGeometryProcessor, %class.DIEllipseGeometryProcessor* %4, i64 0, i32 7
  %6 = load i32, i32* %5, align 4
  %7 = bitcast %class.GrProcessorKeyBuilder* %2 to void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)***
  %8 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %8, i64 2
  %10 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %9, align 8
  tail call void %10(%class.GrProcessorKeyBuilder* %2, i32 2, i32 %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.119, i64 0, i64 0)) #12
  %11 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %0, i64 1, i32 4, i32 3
  %12 = bitcast i64* %11 to %class.SkMatrix*
  %13 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %1, i64 0, i32 2
  %14 = bitcast i56* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, 1048576
  %17 = icmp eq i64 %16, 0
  %18 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %40

20:                                               ; preds = %3
  %21 = trunc i32 %19 to i8
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %20
  %24 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %12) #12
  %25 = zext i8 %24 to i32
  store i32 %25, i32* %18, align 4
  br label %26

26:                                               ; preds = %23, %20
  %27 = phi i32 [ %25, %23 ], [ %19, %20 ]
  %28 = and i32 %27, 15
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %52, label %30

30:                                               ; preds = %26
  %31 = trunc i32 %27 to i8
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  %34 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %12) #12
  %35 = zext i8 %34 to i32
  store i32 %35, i32* %18, align 4
  br label %36

36:                                               ; preds = %33, %30
  %37 = phi i32 [ %35, %33 ], [ %27, %30 ]
  %38 = and i32 %37, 12
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %36, %3
  %41 = phi i32 [ %37, %36 ], [ %19, %3 ]
  %42 = and i32 %41, 192
  %43 = icmp eq i32 %42, 128
  br i1 %43, label %44, label %47

44:                                               ; preds = %40
  %45 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %12) #12
  %46 = zext i8 %45 to i32
  store i32 %46, i32* %18, align 4
  br label %47

47:                                               ; preds = %44, %40
  %48 = phi i32 [ %46, %44 ], [ %41, %40 ]
  %49 = and i32 %48, 8
  %50 = icmp eq i32 %49, 0
  %51 = select i1 %50, i32 2, i32 3
  br label %52

52:                                               ; preds = %26, %36, %47
  %53 = phi i32 [ 0, %26 ], [ 1, %36 ], [ %51, %47 ]
  %54 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %7, align 8
  %55 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %54, i64 2
  %56 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %55, align 8
  tail call void %56(%class.GrProcessorKeyBuilder* %2, i32 2, i32 %53, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.120, i64 0, i64 0)) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLGeometryProcessorD2Ev(%class.GrGLSLGeometryProcessor*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLGeometryProcessor, %class.GrGLSLGeometryProcessor* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV23GrGLSLGeometryProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLSLGeometryProcessor, %class.GrGLSLGeometryProcessor* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.GrGLSLGeometryProcessor, %class.GrGLSLGeometryProcessor* %0, i64 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.162, %class.SkTArray.162* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %14, %1
  %11 = phi i64 [ %5, %1 ], [ %24, %14 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %31, label %28

14:                                               ; preds = %14, %8
  %15 = phi i64 [ 0, %8 ], [ %23, %14 ]
  %16 = load %"struct.GrGLSLGeometryProcessor::TransformInfo"*, %"struct.GrGLSLGeometryProcessor::TransformInfo"** %9, align 8
  %17 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 1, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %17) #12
  %18 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 1, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %18) #12
  %19 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 1, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %19) #12
  %20 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 0, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %20) #12
  %21 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 0, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %21) #12
  %22 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 0, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %22) #12
  %23 = add nuw nsw i64 %15, 1
  %24 = load i64, i64* %4, align 8
  %25 = lshr i64 %24, 1
  %26 = and i64 %25, 2147483647
  %27 = icmp ult i64 %23, %26
  br i1 %27, label %14, label %10

28:                                               ; preds = %10
  %29 = bitcast %class.SkTArray.162* %3 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void @_Z7sk_freePv(i8* %30) #12
  br label %31

31:                                               ; preds = %10, %28
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN26DIEllipseGeometryProcessor13GLSLProcessorD0Ev(%"class.DIEllipseGeometryProcessor::GLSLProcessor"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.DIEllipseGeometryProcessor::GLSLProcessor", %"class.DIEllipseGeometryProcessor::GLSLProcessor"* %0, i64 0, i32 0
  tail call void @_ZN23GrGLSLGeometryProcessorD2Ev(%class.GrGLSLGeometryProcessor* %2) #12
  %3 = bitcast %"class.DIEllipseGeometryProcessor::GLSLProcessor"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN26DIEllipseGeometryProcessor13GLSLProcessor7setDataERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK19GrGeometryProcessor(%"class.DIEllipseGeometryProcessor::GLSLProcessor"*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrShaderCaps* dereferenceable(144), %class.GrGeometryProcessor* dereferenceable(80)) unnamed_addr #4 comdat align 2 {
  %5 = getelementptr inbounds %"class.DIEllipseGeometryProcessor::GLSLProcessor", %"class.DIEllipseGeometryProcessor::GLSLProcessor"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %3, i64 1, i32 4, i32 3
  %7 = bitcast i64* %6 to %class.SkMatrix*
  %8 = getelementptr inbounds %"class.DIEllipseGeometryProcessor::GLSLProcessor", %"class.DIEllipseGeometryProcessor::GLSLProcessor"* %0, i64 0, i32 1
  tail call void @_ZN23GrGLSLGeometryProcessor12SetTransformERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK16GrResourceHandleINS0_17UniformHandleKindEERK8SkMatrixPSB_(%class.GrGLSLProgramDataManager* dereferenceable(8) %1, %class.GrShaderCaps* dereferenceable(144) %2, %class.GrResourceHandle* dereferenceable(4) %5, %class.SkMatrix* dereferenceable(40) %7, %class.SkMatrix* %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN26DIEllipseGeometryProcessor13GLSLProcessor10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS1_8GrGPArgsE(%"class.DIEllipseGeometryProcessor::GLSLProcessor"*, %"struct.GrGLSLGeometryProcessor::EmitArgs"* dereferenceable(88), %"struct.GrGLSLGeometryProcessor::GrGPArgs"*) unnamed_addr #4 comdat align 2 {
  %4 = alloca %class.SkString, align 8
  %5 = alloca %class.GrGLSLVarying, align 8
  %6 = alloca %class.GrGLSLVarying, align 8
  %7 = alloca %class.GrShaderVar, align 8
  %8 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 6
  %9 = bitcast %class.GrGeometryProcessor** %8 to %class.DIEllipseGeometryProcessor**
  %10 = load %class.DIEllipseGeometryProcessor*, %class.DIEllipseGeometryProcessor** %9, align 8
  %11 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 0
  %12 = load %class.GrGLSLVertexBuilder*, %class.GrGLSLVertexBuilder** %11, align 8
  %13 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 3
  %14 = load %class.GrGLSLVaryingHandler*, %class.GrGLSLVaryingHandler** %13, align 8
  %15 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 4
  %16 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %15, align 8
  %17 = bitcast %class.DIEllipseGeometryProcessor* %10 to %class.GrGeometryProcessor*
  tail call void @_ZN20GrGLSLVaryingHandler14emitAttributesERK19GrGeometryProcessor(%class.GrGLSLVaryingHandler* %14, %class.GrGeometryProcessor* dereferenceable(80) %17) #12
  %18 = getelementptr inbounds %class.DIEllipseGeometryProcessor, %class.DIEllipseGeometryProcessor* %10, i64 0, i32 6
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  %21 = select i1 %20, i32 22, i32 23
  %22 = bitcast %class.GrGLSLVarying* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22) #12
  %23 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %5, i64 0, i32 0
  %24 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %5, i64 0, i32 1
  %25 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %5, i64 0, i32 2
  %26 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %5, i64 0, i32 5
  store i32 %21, i32* %23, align 8
  %27 = bitcast i32* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %27, i8 0, i64 36, i1 false)
  call void @_ZN20GrGLSLVaryingHandler10addVaryingEPKcP13GrGLSLVaryingNS_13InterpolationE(%class.GrGLSLVaryingHandler* %14, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.121, i64 0, i64 0), %class.GrGLSLVarying* nonnull %5, i32 0) #12
  %28 = bitcast %class.GrGLSLVertexBuilder* %12 to %class.GrGLSLShaderBuilder*
  %29 = load i8*, i8** %25, align 8
  %30 = getelementptr inbounds %class.DIEllipseGeometryProcessor, %class.DIEllipseGeometryProcessor* %10, i64 0, i32 3, i32 0
  %31 = load i8*, i8** %30, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %28, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.61, i64 0, i64 0), i8* %29, i8* %31)
  %32 = bitcast %class.GrGLSLVarying* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %32) #12
  %33 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %6, i64 0, i32 0
  %34 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %6, i64 0, i32 1
  %35 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %6, i64 0, i32 2
  %36 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %6, i64 0, i32 5
  store i32 22, i32* %33, align 8
  %37 = bitcast i32* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %37, i8 0, i64 36, i1 false)
  call void @_ZN20GrGLSLVaryingHandler10addVaryingEPKcP13GrGLSLVaryingNS_13InterpolationE(%class.GrGLSLVaryingHandler* %14, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.122, i64 0, i64 0), %class.GrGLSLVarying* nonnull %6, i32 0) #12
  %38 = load i8*, i8** %35, align 8
  %39 = getelementptr inbounds %class.DIEllipseGeometryProcessor, %class.DIEllipseGeometryProcessor* %10, i64 0, i32 4, i32 0
  %40 = load i8*, i8** %39, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %28, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.61, i64 0, i64 0), i8* %38, i8* %40)
  %41 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 2
  %42 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %41, align 8
  %43 = bitcast %class.GrGLSLFPFragmentBuilder* %42 to i8**
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr i8, i8* %44, i64 -24
  %46 = bitcast i8* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %class.GrGLSLFPFragmentBuilder* %42 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 %47
  %50 = bitcast i8* %49 to %class.GrGLSLShaderBuilder*
  %51 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 7
  %52 = load i8*, i8** %51, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %50, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i64 0, i64 0), i8* %52)
  %53 = getelementptr inbounds %class.DIEllipseGeometryProcessor, %class.DIEllipseGeometryProcessor* %10, i64 0, i32 2
  %54 = load i8*, i8** %51, align 8
  call void @_ZN20GrGLSLVaryingHandler23addPassThroughAttributeERKN19GrGeometryProcessor9AttributeEPKcNS_13InterpolationE(%class.GrGLSLVaryingHandler* %14, %"class.GrGeometryProcessor::Attribute"* dereferenceable(16) %53, i8* %54, i32 0) #12
  %55 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 5
  %56 = load %class.GrShaderCaps*, %class.GrShaderCaps** %55, align 8
  %57 = getelementptr inbounds %class.DIEllipseGeometryProcessor, %class.DIEllipseGeometryProcessor* %10, i64 0, i32 1, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds %class.DIEllipseGeometryProcessor, %class.DIEllipseGeometryProcessor* %10, i64 0, i32 5
  %60 = getelementptr inbounds %"class.DIEllipseGeometryProcessor::GLSLProcessor", %"class.DIEllipseGeometryProcessor::GLSLProcessor"* %0, i64 0, i32 2
  call void @_ZN23GrGLSLGeometryProcessor19WriteOutputPositionEP19GrGLSLVertexBuilderP20GrGLSLUniformHandlerRK12GrShaderCapsPNS_8GrGPArgsEPKcRK8SkMatrixP16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE(%class.GrGLSLVertexBuilder* %12, %class.GrGLSLUniformHandler* %16, %class.GrShaderCaps* dereferenceable(144) %56, %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i8* %58, %class.SkMatrix* dereferenceable(40) %59, %class.GrResourceHandle* %60) #12
  %61 = bitcast %class.GrShaderVar* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %61) #12
  %62 = load i8*, i8** %57, align 8, !noalias !51
  %63 = getelementptr inbounds %class.DIEllipseGeometryProcessor, %class.DIEllipseGeometryProcessor* %10, i64 0, i32 1, i32 2
  %64 = load i32, i32* %63, align 4, !noalias !51
  %65 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #12, !noalias !51
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %4, i8* %62) #12, !noalias !51
  %66 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %7, i64 0, i32 0
  store i32 %64, i32* %66, align 8, !alias.scope !51
  %67 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %7, i64 0, i32 1
  store i32 2, i32* %67, align 4, !alias.scope !51
  %68 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %7, i64 0, i32 2
  store i32 0, i32* %68, align 8, !alias.scope !51
  %69 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %7, i64 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %69, %class.SkString* nonnull dereferenceable(8) %4) #12
  %70 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %7, i64 0, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %70) #12
  %71 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %7, i64 0, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %71) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #12, !noalias !51
  %72 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 1
  %73 = bitcast %class.GrShaderVar* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* nonnull align 8 %61, i64 12, i1 false) #12
  %74 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 1, i32 3
  %75 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %74, %class.SkString* dereferenceable(8) %69) #12
  %76 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 1, i32 4
  %77 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %76, %class.SkString* dereferenceable(8) %70) #12
  %78 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 1, i32 5
  %79 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %78, %class.SkString* dereferenceable(8) %71) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* %71) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* %70) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* %69) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %61) #12
  %80 = load i8*, i8** %43, align 8
  %81 = getelementptr i8, i8* %80, i64 -24
  %82 = bitcast i8* %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds i8, i8* %48, i64 %83
  %85 = bitcast i8* %84 to %class.GrGLSLShaderBuilder*
  %86 = load i8*, i8** %26, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %85, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.123, i64 0, i64 0), i8* %86)
  %87 = load i8*, i8** %43, align 8
  %88 = getelementptr i8, i8* %87, i64 -24
  %89 = bitcast i8* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds i8, i8* %48, i64 %90
  %92 = getelementptr inbounds i8, i8* %91, i64 160
  %93 = getelementptr inbounds i8, i8* %91, i64 488
  %94 = bitcast i8* %93 to i32*
  %95 = load i32, i32* %94, align 8
  %96 = bitcast i8* %92 to %class.SkString**
  %97 = load %class.SkString*, %class.SkString** %96, align 8
  %98 = sext i32 %95 to i64
  %99 = getelementptr inbounds %class.SkString, %class.SkString* %97, i64 %98
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %99, i64 -1, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.124, i64 0, i64 0)) #12
  %100 = load i8*, i8** %43, align 8
  %101 = getelementptr i8, i8* %100, i64 -24
  %102 = bitcast i8* %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = getelementptr inbounds i8, i8* %48, i64 %103
  %105 = bitcast i8* %104 to %class.GrGLSLShaderBuilder*
  %106 = load i8*, i8** %26, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %105, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.125, i64 0, i64 0), i8* %106)
  %107 = load i8*, i8** %43, align 8
  %108 = getelementptr i8, i8* %107, i64 -24
  %109 = bitcast i8* %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds i8, i8* %48, i64 %110
  %112 = bitcast i8* %111 to %class.GrGLSLShaderBuilder*
  %113 = load i8*, i8** %26, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %112, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.126, i64 0, i64 0), i8* %113)
  %114 = load i8*, i8** %43, align 8
  %115 = getelementptr i8, i8* %114, i64 -24
  %116 = bitcast i8* %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = getelementptr inbounds i8, i8* %48, i64 %117
  %119 = bitcast i8* %118 to %class.GrGLSLShaderBuilder*
  %120 = load i8*, i8** %26, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %119, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.127, i64 0, i64 0), i8* %120, i8* %120, i8* %120, i8* %120)
  %121 = load i8, i8* %18, align 8, !range !2
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %3
  %124 = load i8*, i8** %43, align 8
  %125 = getelementptr i8, i8* %124, i64 -24
  %126 = bitcast i8* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = getelementptr inbounds i8, i8* %48, i64 %127
  %129 = bitcast i8* %128 to %class.GrGLSLShaderBuilder*
  %130 = load i8*, i8** %26, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %129, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.128, i64 0, i64 0), i8* %130)
  br label %131

131:                                              ; preds = %3, %123
  %132 = load i8*, i8** %43, align 8
  %133 = getelementptr i8, i8* %132, i64 -24
  %134 = bitcast i8* %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = getelementptr inbounds i8, i8* %48, i64 %135
  %137 = getelementptr inbounds i8, i8* %136, i64 160
  %138 = getelementptr inbounds i8, i8* %136, i64 488
  %139 = bitcast i8* %138 to i32*
  %140 = load i32, i32* %139, align 8
  %141 = bitcast i8* %137 to %class.SkString**
  %142 = load %class.SkString*, %class.SkString** %141, align 8
  %143 = sext i32 %140 to i64
  %144 = getelementptr inbounds %class.SkString, %class.SkString* %142, i64 %143
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %144, i64 -1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.129, i64 0, i64 0)) #12
  %145 = load %class.GrShaderCaps*, %class.GrShaderCaps** %55, align 8
  %146 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %145, i64 0, i32 2
  %147 = bitcast i56* %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = and i64 %148, 131072
  %150 = icmp eq i64 %149, 0
  %151 = load i8*, i8** %43, align 8
  %152 = getelementptr i8, i8* %151, i64 -24
  %153 = bitcast i8* %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = getelementptr inbounds i8, i8* %48, i64 %154
  %156 = getelementptr inbounds i8, i8* %155, i64 160
  %157 = getelementptr inbounds i8, i8* %155, i64 488
  %158 = bitcast i8* %157 to i32*
  %159 = load i32, i32* %158, align 8
  %160 = bitcast i8* %156 to %class.SkString**
  %161 = load %class.SkString*, %class.SkString** %160, align 8
  %162 = sext i32 %159 to i64
  %163 = getelementptr inbounds %class.SkString, %class.SkString* %161, i64 %162
  %164 = select i1 %150, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.69, i64 0, i64 0)
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %163, i64 -1, i8* %164) #12
  %165 = load i8*, i8** %43, align 8
  %166 = getelementptr i8, i8* %165, i64 -24
  %167 = bitcast i8* %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = getelementptr inbounds i8, i8* %48, i64 %168
  %170 = getelementptr inbounds i8, i8* %169, i64 160
  %171 = getelementptr inbounds i8, i8* %169, i64 488
  %172 = bitcast i8* %171 to i32*
  %173 = load i32, i32* %172, align 8
  %174 = bitcast i8* %170 to %class.SkString**
  %175 = load %class.SkString*, %class.SkString** %174, align 8
  %176 = sext i32 %173 to i64
  %177 = getelementptr inbounds %class.SkString, %class.SkString* %175, i64 %176
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %177, i64 -1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.72, i64 0, i64 0)) #12
  %178 = load i8, i8* %18, align 8, !range !2
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %188, label %180

180:                                              ; preds = %131
  %181 = load i8*, i8** %43, align 8
  %182 = getelementptr i8, i8* %181, i64 -24
  %183 = bitcast i8* %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = getelementptr inbounds i8, i8* %48, i64 %184
  %186 = bitcast i8* %185 to %class.GrGLSLShaderBuilder*
  %187 = load i8*, i8** %26, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %186, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.130, i64 0, i64 0), i8* %187)
  br label %188

188:                                              ; preds = %131, %180
  %189 = getelementptr inbounds %class.DIEllipseGeometryProcessor, %class.DIEllipseGeometryProcessor* %10, i64 0, i32 7
  %190 = load i32, i32* %189, align 4
  %191 = icmp eq i32 %190, 1
  %192 = load i8*, i8** %43, align 8
  %193 = getelementptr i8, i8* %192, i64 -24
  %194 = bitcast i8* %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = getelementptr inbounds i8, i8* %48, i64 %195
  %197 = getelementptr inbounds i8, i8* %196, i64 160
  %198 = getelementptr inbounds i8, i8* %196, i64 488
  %199 = bitcast i8* %198 to i32*
  %200 = load i32, i32* %199, align 8
  %201 = bitcast i8* %197 to %class.SkString**
  %202 = load %class.SkString*, %class.SkString** %201, align 8
  %203 = sext i32 %200 to i64
  %204 = getelementptr inbounds %class.SkString, %class.SkString* %202, i64 %203
  br i1 %191, label %205, label %219

205:                                              ; preds = %188
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %204, i64 -1, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.131, i64 0, i64 0)) #12
  %206 = load i8*, i8** %43, align 8
  %207 = getelementptr i8, i8* %206, i64 -24
  %208 = bitcast i8* %207 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = getelementptr inbounds i8, i8* %48, i64 %209
  %211 = getelementptr inbounds i8, i8* %210, i64 160
  %212 = getelementptr inbounds i8, i8* %210, i64 488
  %213 = bitcast i8* %212 to i32*
  %214 = load i32, i32* %213, align 8
  %215 = bitcast i8* %211 to %class.SkString**
  %216 = load %class.SkString*, %class.SkString** %215, align 8
  %217 = sext i32 %214 to i64
  %218 = getelementptr inbounds %class.SkString, %class.SkString* %216, i64 %217
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %218, i64 -1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.132, i64 0, i64 0)) #12
  br label %220

219:                                              ; preds = %188
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %204, i64 -1, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.73, i64 0, i64 0)) #12
  br label %220

220:                                              ; preds = %219, %205
  %221 = load i32, i32* %189, align 4
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %347

223:                                              ; preds = %220
  %224 = load i8*, i8** %43, align 8
  %225 = getelementptr i8, i8* %224, i64 -24
  %226 = bitcast i8* %225 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = getelementptr inbounds i8, i8* %48, i64 %227
  %229 = bitcast i8* %228 to %class.GrGLSLShaderBuilder*
  %230 = load i8*, i8** %36, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %229, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.133, i64 0, i64 0), i8* %230)
  %231 = load i8*, i8** %43, align 8
  %232 = getelementptr i8, i8* %231, i64 -24
  %233 = bitcast i8* %232 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = getelementptr inbounds i8, i8* %48, i64 %234
  %236 = getelementptr inbounds i8, i8* %235, i64 160
  %237 = getelementptr inbounds i8, i8* %235, i64 488
  %238 = bitcast i8* %237 to i32*
  %239 = load i32, i32* %238, align 8
  %240 = bitcast i8* %236 to %class.SkString**
  %241 = load %class.SkString*, %class.SkString** %240, align 8
  %242 = sext i32 %239 to i64
  %243 = getelementptr inbounds %class.SkString, %class.SkString* %241, i64 %242
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %243, i64 -1, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.134, i64 0, i64 0)) #12
  %244 = load i8*, i8** %43, align 8
  %245 = getelementptr i8, i8* %244, i64 -24
  %246 = bitcast i8* %245 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = getelementptr inbounds i8, i8* %48, i64 %247
  %249 = bitcast i8* %248 to %class.GrGLSLShaderBuilder*
  %250 = load i8*, i8** %36, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %249, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.135, i64 0, i64 0), i8* %250)
  %251 = load i8*, i8** %43, align 8
  %252 = getelementptr i8, i8* %251, i64 -24
  %253 = bitcast i8* %252 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = getelementptr inbounds i8, i8* %48, i64 %254
  %256 = bitcast i8* %255 to %class.GrGLSLShaderBuilder*
  %257 = load i8*, i8** %36, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %256, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.136, i64 0, i64 0), i8* %257)
  %258 = load i8*, i8** %43, align 8
  %259 = getelementptr i8, i8* %258, i64 -24
  %260 = bitcast i8* %259 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = getelementptr inbounds i8, i8* %48, i64 %261
  %263 = bitcast i8* %262 to %class.GrGLSLShaderBuilder*
  %264 = load i8*, i8** %36, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %263, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.137, i64 0, i64 0), i8* %264, i8* %264, i8* %264, i8* %264)
  %265 = load i8, i8* %18, align 8, !range !2
  %266 = icmp eq i8 %265, 0
  br i1 %266, label %275, label %267

267:                                              ; preds = %223
  %268 = load i8*, i8** %43, align 8
  %269 = getelementptr i8, i8* %268, i64 -24
  %270 = bitcast i8* %269 to i64*
  %271 = load i64, i64* %270, align 8
  %272 = getelementptr inbounds i8, i8* %48, i64 %271
  %273 = bitcast i8* %272 to %class.GrGLSLShaderBuilder*
  %274 = load i8*, i8** %26, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %273, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.128, i64 0, i64 0), i8* %274)
  br label %275

275:                                              ; preds = %223, %267
  %276 = load i8*, i8** %43, align 8
  %277 = getelementptr i8, i8* %276, i64 -24
  %278 = bitcast i8* %277 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = getelementptr inbounds i8, i8* %48, i64 %279
  %281 = getelementptr inbounds i8, i8* %280, i64 160
  %282 = getelementptr inbounds i8, i8* %280, i64 488
  %283 = bitcast i8* %282 to i32*
  %284 = load i32, i32* %283, align 8
  %285 = bitcast i8* %281 to %class.SkString**
  %286 = load %class.SkString*, %class.SkString** %285, align 8
  %287 = sext i32 %284 to i64
  %288 = getelementptr inbounds %class.SkString, %class.SkString* %286, i64 %287
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %288, i64 -1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.138, i64 0, i64 0)) #12
  %289 = load %class.GrShaderCaps*, %class.GrShaderCaps** %55, align 8
  %290 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %289, i64 0, i32 2
  %291 = bitcast i56* %290 to i64*
  %292 = load i64, i64* %291, align 8
  %293 = and i64 %292, 131072
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %295, label %309

295:                                              ; preds = %275
  %296 = load i8*, i8** %43, align 8
  %297 = getelementptr i8, i8* %296, i64 -24
  %298 = bitcast i8* %297 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = getelementptr inbounds i8, i8* %48, i64 %299
  %301 = getelementptr inbounds i8, i8* %300, i64 160
  %302 = getelementptr inbounds i8, i8* %300, i64 488
  %303 = bitcast i8* %302 to i32*
  %304 = load i32, i32* %303, align 8
  %305 = bitcast i8* %301 to %class.SkString**
  %306 = load %class.SkString*, %class.SkString** %305, align 8
  %307 = sext i32 %304 to i64
  %308 = getelementptr inbounds %class.SkString, %class.SkString* %306, i64 %307
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %308, i64 -1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.70, i64 0, i64 0)) #12
  br label %309

309:                                              ; preds = %275, %295
  %310 = load i8*, i8** %43, align 8
  %311 = getelementptr i8, i8* %310, i64 -24
  %312 = bitcast i8* %311 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = getelementptr inbounds i8, i8* %48, i64 %313
  %315 = getelementptr inbounds i8, i8* %314, i64 160
  %316 = getelementptr inbounds i8, i8* %314, i64 488
  %317 = bitcast i8* %316 to i32*
  %318 = load i32, i32* %317, align 8
  %319 = bitcast i8* %315 to %class.SkString**
  %320 = load %class.SkString*, %class.SkString** %319, align 8
  %321 = sext i32 %318 to i64
  %322 = getelementptr inbounds %class.SkString, %class.SkString* %320, i64 %321
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %322, i64 -1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.80, i64 0, i64 0)) #12
  %323 = load i8, i8* %18, align 8, !range !2
  %324 = icmp eq i8 %323, 0
  br i1 %324, label %333, label %325

325:                                              ; preds = %309
  %326 = load i8*, i8** %43, align 8
  %327 = getelementptr i8, i8* %326, i64 -24
  %328 = bitcast i8* %327 to i64*
  %329 = load i64, i64* %328, align 8
  %330 = getelementptr inbounds i8, i8* %48, i64 %329
  %331 = bitcast i8* %330 to %class.GrGLSLShaderBuilder*
  %332 = load i8*, i8** %26, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %331, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.130, i64 0, i64 0), i8* %332)
  br label %333

333:                                              ; preds = %309, %325
  %334 = load i8*, i8** %43, align 8
  %335 = getelementptr i8, i8* %334, i64 -24
  %336 = bitcast i8* %335 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = getelementptr inbounds i8, i8* %48, i64 %337
  %339 = getelementptr inbounds i8, i8* %338, i64 160
  %340 = getelementptr inbounds i8, i8* %338, i64 488
  %341 = bitcast i8* %340 to i32*
  %342 = load i32, i32* %341, align 8
  %343 = bitcast i8* %339 to %class.SkString**
  %344 = load %class.SkString*, %class.SkString** %343, align 8
  %345 = sext i32 %342 to i64
  %346 = getelementptr inbounds %class.SkString, %class.SkString* %344, i64 %345
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %346, i64 -1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.81, i64 0, i64 0)) #12
  br label %347

347:                                              ; preds = %333, %220
  %348 = load i8*, i8** %43, align 8
  %349 = getelementptr i8, i8* %348, i64 -24
  %350 = bitcast i8* %349 to i64*
  %351 = load i64, i64* %350, align 8
  %352 = getelementptr inbounds i8, i8* %48, i64 %351
  %353 = bitcast i8* %352 to %class.GrGLSLShaderBuilder*
  %354 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 8
  %355 = load i8*, i8** %354, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %353, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.82, i64 0, i64 0), i8* %355)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %32) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #12
  ret void
}

declare void @_ZN23GrGLSLGeometryProcessor19WriteOutputPositionEP19GrGLSLVertexBuilderP20GrGLSLUniformHandlerRK12GrShaderCapsPNS_8GrGPArgsEPKcRK8SkMatrixP16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE(%class.GrGLSLVertexBuilder*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps* dereferenceable(144), %"struct.GrGLSLGeometryProcessor::GrGPArgs"*, i8*, %class.SkMatrix* dereferenceable(40), %class.GrResourceHandle*) local_unnamed_addr #2

declare dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString*, %class.SkString* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind readonly }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 1048575}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = !{!7}
!7 = distinct !{!7, !8}
!8 = distinct !{!8, !"LVerDomain"}
!9 = !{!10}
!10 = distinct !{!10, !8}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.isvectorized", i32 1}
!13 = distinct !{!13, !12}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK19GrGeometryProcessor9Attribute11asShaderVarEv: argument 0"}
!16 = distinct !{!16, !"_ZNK19GrGeometryProcessor9Attribute11asShaderVarEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZL22get_rrect_index_buffer9RRectTypeP18GrResourceProvider: argument 0"}
!19 = distinct !{!19, !"_ZL22get_rrect_index_buffer9RRectTypeP18GrResourceProvider"}
!20 = !{!21, !23, !18}
!21 = distinct !{!21, !22, !"_ZN18GrResourceProvider15findByUniqueKeyIK11GrGpuBufferEENSt3__19enable_ifIXsr3std10is_base_ofI13GrGpuResourceT_EE5valueE5sk_spIS6_EE4typeERK11GrUniqueKey: argument 0"}
!22 = distinct !{!22, !"_ZN18GrResourceProvider15findByUniqueKeyIK11GrGpuBufferEENSt3__19enable_ifIXsr3std10is_base_ofI13GrGpuResourceT_EE5valueE5sk_spIS6_EE4typeERK11GrUniqueKey"}
!23 = distinct !{!23, !24, !"_ZN18GrResourceProvider32findOrCreatePatternedIndexBufferEPKtiiiRK11GrUniqueKey: argument 0"}
!24 = distinct !{!24, !"_ZN18GrResourceProvider32findOrCreatePatternedIndexBufferEPKtiiiRK11GrUniqueKey"}
!25 = !{!21, !23}
!26 = !{!27, !29, !18}
!27 = distinct !{!27, !28, !"_ZN18GrResourceProvider15findByUniqueKeyIK11GrGpuBufferEENSt3__19enable_ifIXsr3std10is_base_ofI13GrGpuResourceT_EE5valueE5sk_spIS6_EE4typeERK11GrUniqueKey: argument 0"}
!28 = distinct !{!28, !"_ZN18GrResourceProvider15findByUniqueKeyIK11GrGpuBufferEENSt3__19enable_ifIXsr3std10is_base_ofI13GrGpuResourceT_EE5valueE5sk_spIS6_EE4typeERK11GrUniqueKey"}
!29 = distinct !{!29, !30, !"_ZN18GrResourceProvider32findOrCreatePatternedIndexBufferEPKtiiiRK11GrUniqueKey: argument 0"}
!30 = distinct !{!30, !"_ZN18GrResourceProvider32findOrCreatePatternedIndexBufferEPKtiiiRK11GrUniqueKey"}
!31 = !{!27, !29}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK19GrGeometryProcessor9Attribute11asShaderVarEv: argument 0"}
!34 = distinct !{!34, !"_ZNK19GrGeometryProcessor9Attribute11asShaderVarEv"}
!35 = !{!36}
!36 = distinct !{!36, !37}
!37 = distinct !{!37, !"LVerDomain"}
!38 = !{!39}
!39 = distinct !{!39, !37}
!40 = distinct !{!40, !12}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZNK19GrGeometryProcessor9Attribute11asShaderVarEv: argument 0"}
!43 = distinct !{!43, !"_ZNK19GrGeometryProcessor9Attribute11asShaderVarEv"}
!44 = !{!45}
!45 = distinct !{!45, !46}
!46 = distinct !{!46, !"LVerDomain"}
!47 = !{!48}
!48 = distinct !{!48, !46}
!49 = distinct !{!49, !12}
!50 = distinct !{!50, !12}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZNK19GrGeometryProcessor9Attribute11asShaderVarEv: argument 0"}
!53 = distinct !{!53, !"_ZNK19GrGeometryProcessor9Attribute11asShaderVarEv"}
