; ModuleID = '../../extensions/common/permissions/socket_permission_data.cc'
source_filename = "../../extensions/common/permissions/socket_permission_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::SocketPermissionData" = type { %"class.extensions::SocketPermissionEntry", %"class.std::__1::basic_string" }
%"class.extensions::SocketPermissionEntry" = type { %"struct.content::SocketPermissionRequest", i8, [7 x i8] }
%"struct.content::SocketPermissionRequest" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.extensions::APIPermission::CheckParam" = type { i8 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.4" }
%"union.absl::variant_internal::DestructibleUnionImpl.4" = type { %"union.absl::variant_internal::DestructibleUnionImpl.5" }
%"union.absl::variant_internal::DestructibleUnionImpl.5" = type { %"union.absl::variant_internal::DestructibleUnionImpl.6" }
%"union.absl::variant_internal::DestructibleUnionImpl.6" = type { %"union.absl::variant_internal::DestructibleUnionImpl.7" }
%"union.absl::variant_internal::DestructibleUnionImpl.7" = type { %"class.std::__1::basic_string" }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.std::__1::basic_string"* }

@.str = private unnamed_addr constant [2 x i8] c":\00", align 1
@_ZN12_GLOBAL__N_111kTCPConnectE = internal constant [12 x i8] c"tcp-connect\00", align 1
@_ZN12_GLOBAL__N_110kTCPListenE = internal constant [11 x i8] c"tcp-listen\00", align 1
@_ZN12_GLOBAL__N_18kUDPBindE = internal constant [9 x i8] c"udp-bind\00", align 1
@_ZN12_GLOBAL__N_110kUDPSendToE = internal constant [12 x i8] c"udp-send-to\00", align 1
@_ZN12_GLOBAL__N_123kUDPMulticastMembershipE = internal constant [25 x i8] c"udp-multicast-membership\00", align 16
@_ZN12_GLOBAL__N_112kResolveHostE = internal constant [13 x i8] c"resolve-host\00", align 1
@_ZN12_GLOBAL__N_113kResolveProxyE = internal constant [14 x i8] c"resolve-proxy\00", align 1
@_ZN12_GLOBAL__N_113kNetworkStateE = internal constant [14 x i8] c"network-state\00", align 1
@_ZN12_GLOBAL__N_18kInvalidE = internal constant [8 x i8] c"invalid\00", align 1
@switch.table._ZNK10extensions20SocketPermissionData11GetAsStringEv = private unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN12_GLOBAL__N_111kTCPConnectE, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN12_GLOBAL__N_110kTCPListenE, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN12_GLOBAL__N_18kUDPBindE, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN12_GLOBAL__N_110kUDPSendToE, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZN12_GLOBAL__N_123kUDPMulticastMembershipE, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN12_GLOBAL__N_112kResolveHostE, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN12_GLOBAL__N_113kResolveProxyE, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN12_GLOBAL__N_113kNetworkStateE, i64 0, i64 0)], align 8

@_ZN10extensions20SocketPermissionDataC1Ev = hidden unnamed_addr alias void (%"class.extensions::SocketPermissionData"*), void (%"class.extensions::SocketPermissionData"*)* @_ZN10extensions20SocketPermissionDataC2Ev
@_ZN10extensions20SocketPermissionDataD1Ev = hidden unnamed_addr alias void (%"class.extensions::SocketPermissionData"*), void (%"class.extensions::SocketPermissionData"*)* @_ZN10extensions20SocketPermissionDataD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions20SocketPermissionDataC2Ev(%"class.extensions::SocketPermissionData"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SocketPermissionData", %"class.extensions::SocketPermissionData"* %0, i64 0, i32 0
  tail call void @_ZN10extensions21SocketPermissionEntryC1Ev(%"class.extensions::SocketPermissionEntry"* %2) #7
  %3 = getelementptr inbounds %"class.extensions::SocketPermissionData", %"class.extensions::SocketPermissionData"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #7
  ret void
}

declare void @_ZN10extensions21SocketPermissionEntryC1Ev(%"class.extensions::SocketPermissionEntry"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions20SocketPermissionDataD2Ev(%"class.extensions::SocketPermissionData"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SocketPermissionData", %"class.extensions::SocketPermissionData"* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #8
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"class.extensions::SocketPermissionData", %"class.extensions::SocketPermissionData"* %0, i64 0, i32 0
  tail call void @_ZN10extensions21SocketPermissionEntryD1Ev(%"class.extensions::SocketPermissionEntry"* %11) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN10extensions21SocketPermissionEntryD1Ev(%"class.extensions::SocketPermissionEntry"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions20SocketPermissionDataltERKS0_(%"class.extensions::SocketPermissionData"*, %"class.extensions::SocketPermissionData"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::SocketPermissionData", %"class.extensions::SocketPermissionData"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.extensions::SocketPermissionData", %"class.extensions::SocketPermissionData"* %1, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK10extensions21SocketPermissionEntryltERKS0_(%"class.extensions::SocketPermissionEntry"* %3, %"class.extensions::SocketPermissionEntry"* dereferenceable(48) %4) #7
  ret i1 %5
}

declare zeroext i1 @_ZNK10extensions21SocketPermissionEntryltERKS0_(%"class.extensions::SocketPermissionEntry"*, %"class.extensions::SocketPermissionEntry"* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions20SocketPermissionDataeqERKS0_(%"class.extensions::SocketPermissionData"*, %"class.extensions::SocketPermissionData"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::SocketPermissionData", %"class.extensions::SocketPermissionData"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.extensions::SocketPermissionData", %"class.extensions::SocketPermissionData"* %1, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK10extensions21SocketPermissionEntryeqERKS0_(%"class.extensions::SocketPermissionEntry"* %3, %"class.extensions::SocketPermissionEntry"* dereferenceable(48) %4) #7
  ret i1 %5
}

declare zeroext i1 @_ZNK10extensions21SocketPermissionEntryeqERKS0_(%"class.extensions::SocketPermissionEntry"*, %"class.extensions::SocketPermissionEntry"* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions20SocketPermissionData5CheckEPKNS_13APIPermission10CheckParamE(%"class.extensions::SocketPermissionData"*, %"struct.extensions::APIPermission::CheckParam"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"struct.extensions::APIPermission::CheckParam"* %1, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = bitcast %"struct.extensions::APIPermission::CheckParam"* %1 to %"struct.content::SocketPermissionRequest"*
  %6 = getelementptr inbounds %"class.extensions::SocketPermissionData", %"class.extensions::SocketPermissionData"* %0, i64 0, i32 0
  %7 = tail call zeroext i1 @_ZNK10extensions21SocketPermissionEntry5CheckERKN7content23SocketPermissionRequestE(%"class.extensions::SocketPermissionEntry"* %6, %"struct.content::SocketPermissionRequest"* nonnull dereferenceable(40) %5) #7
  br label %8

8:                                                ; preds = %2, %4
  %9 = phi i1 [ %7, %4 ], [ false, %2 ]
  ret i1 %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZNK10extensions21SocketPermissionEntry5CheckERKN7content23SocketPermissionRequestE(%"class.extensions::SocketPermissionEntry"*, %"struct.content::SocketPermissionRequest"* dereferenceable(40)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.base::Value"* @_ZNK10extensions20SocketPermissionData7ToValueEv(%"class.extensions::SocketPermissionData"*) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions20SocketPermissionData11GetAsStringEv(%"class.extensions::SocketPermissionData"* %0)
  %3 = tail call i8* @_Znwm(i64 32) #8
  %4 = bitcast i8* %3 to %"class.base::Value"*
  %5 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %12 = select i1 %8, i8* %10, i8* %11
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %7 to i64
  %16 = select i1 %8, i64 %14, i64 %15
  tail call void @_ZN4base5ValueC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull %4, i8* %12, i64 %16) #7
  ret %"class.base::Value"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions20SocketPermissionData11GetAsStringEv(%"class.extensions::SocketPermissionData"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.extensions::SocketPermissionData", %"class.extensions::SocketPermissionData"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.extensions::SocketPermissionData", %"class.extensions::SocketPermissionData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  br label %13

11:                                               ; preds = %1
  %12 = zext i8 %6 to i64
  br label %13

13:                                               ; preds = %8, %11
  %14 = phi i64 [ %10, %8 ], [ %12, %11 ]
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %58

16:                                               ; preds = %13
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* %3, i64 64) #7
  %17 = getelementptr inbounds %"class.extensions::SocketPermissionData", %"class.extensions::SocketPermissionData"* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.extensions::SocketPermissionData", %"class.extensions::SocketPermissionData"* %0, i64 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = add i32 %19, -1
  %21 = icmp ult i32 %20, 8
  br i1 %21, label %22, label %26

22:                                               ; preds = %16
  %23 = sext i32 %20 to i64
  %24 = getelementptr inbounds [8 x i8*], [8 x i8*]* @switch.table._ZNK10extensions20SocketPermissionData11GetAsStringEv, i64 0, i64 %23
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %16, %22
  %27 = phi i8* [ %25, %22 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN12_GLOBAL__N_18kInvalidE, i64 0, i64 0), %16 ]
  %28 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %3, i8* nonnull %27) #7
  %29 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #7
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 24, i1 false)
  call void @_ZNK10extensions21SocketPermissionEntry22GetHostPatternAsStringEv(%"class.std::__1::basic_string"* nonnull sret %2, %"class.extensions::SocketPermissionEntry"* %17) #7
  %33 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = load i64, i64* %31, align 8
  %38 = zext i8 %35 to i64
  %39 = select i1 %36, i64 %37, i64 %38
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %52, label %41

41:                                               ; preds = %26
  %42 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %3, i64 1, i8 signext 58) #7
  %43 = load i8, i8* %34, align 1
  %44 = icmp slt i8 %43, 0
  %45 = load i8*, i8** %30, align 8
  %46 = load i64, i64* %31, align 8
  %47 = zext i8 %43 to i64
  %48 = select i1 %44, i8* %45, i8* %29
  %49 = select i1 %44, i64 %46, i64 %47
  %50 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %42, i8* %48, i64 %49) #7
  %51 = load i8, i8* %34, align 1
  br label %52

52:                                               ; preds = %41, %26
  %53 = phi i8 [ %51, %41 ], [ %35, %26 ]
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %52
  %56 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %56) #8
  br label %57

57:                                               ; preds = %52, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #7
  br label %58

58:                                               ; preds = %13, %57
  ret %"class.std::__1::basic_string"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions20SocketPermissionData9FromValueEPKN4base5ValueE(%"class.extensions::SocketPermissionData"*, %"class.base::Value"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #7
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #7
  %6 = call zeroext i1 @_ZNK4base5Value11GetAsStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"* %1, %"class.std::__1::basic_string"* nonnull %3) #7
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = call zeroext i1 @_ZN10extensions20SocketPermissionData5ParseERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::SocketPermissionData"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3)
  br label %9

9:                                                ; preds = %2, %7
  %10 = phi i1 [ %8, %7 ], [ false, %2 ]
  %11 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %9
  %16 = load i8*, i8** %5, align 8
  call void @_ZdlPv(i8* %16) #8
  br label %17

17:                                               ; preds = %9, %15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #7
  ret i1 %10
}

declare zeroext i1 @_ZNK4base5Value11GetAsStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"*, %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions20SocketPermissionData5ParseERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::SocketPermissionData"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.30", align 8
  tail call void @_ZN10extensions20SocketPermissionData5ResetEv(%"class.extensions::SocketPermissionData"* %0)
  %4 = bitcast %"class.std::__1::vector.30"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #7
  %5 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %3, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = bitcast %"class.std::__1::vector.30"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %10 = load i8, i8* %8, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %15 = select i1 %11, i8* %13, i8* %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %10 to i64
  %19 = select i1 %11, i64 %17, i64 %18
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.30"* nonnull sret %3, i8* %15, i64 %19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1, i32 0, i32 0) #7
  %20 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %21 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %22 = icmp eq %"class.std::__1::basic_string"* %20, %21
  br i1 %22, label %183, label %23

23:                                               ; preds = %2
  %24 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp eq i64 %31, 11
  br i1 %32, label %33, label %40

33:                                               ; preds = %23
  %34 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %20, i64 0, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN12_GLOBAL__N_111kTCPConnectE, i64 0, i64 0), i64 11) #7
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %134, label %36

36:                                               ; preds = %33
  %37 = load i8, i8* %25, align 1
  %38 = load i64, i64* %28, align 8
  %39 = zext i8 %37 to i64
  br label %40

40:                                               ; preds = %36, %23
  %41 = phi i64 [ %39, %36 ], [ %30, %23 ]
  %42 = phi i64 [ %38, %36 ], [ %29, %23 ]
  %43 = phi i8 [ %37, %36 ], [ %26, %23 ]
  %44 = icmp slt i8 %43, 0
  %45 = select i1 %44, i64 %42, i64 %41
  %46 = icmp eq i64 %45, 10
  br i1 %46, label %47, label %54

47:                                               ; preds = %40
  %48 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %20, i64 0, i64 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN12_GLOBAL__N_110kTCPListenE, i64 0, i64 0), i64 10) #7
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %134, label %50

50:                                               ; preds = %47
  %51 = load i8, i8* %25, align 1
  %52 = load i64, i64* %28, align 8
  %53 = zext i8 %51 to i64
  br label %54

54:                                               ; preds = %50, %40
  %55 = phi i64 [ %53, %50 ], [ %41, %40 ]
  %56 = phi i64 [ %52, %50 ], [ %42, %40 ]
  %57 = phi i8 [ %51, %50 ], [ %43, %40 ]
  %58 = icmp slt i8 %57, 0
  %59 = select i1 %58, i64 %56, i64 %55
  %60 = icmp eq i64 %59, 8
  br i1 %60, label %61, label %68

61:                                               ; preds = %54
  %62 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %20, i64 0, i64 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN12_GLOBAL__N_18kUDPBindE, i64 0, i64 0), i64 8) #7
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %134, label %64

64:                                               ; preds = %61
  %65 = load i8, i8* %25, align 1
  %66 = load i64, i64* %28, align 8
  %67 = zext i8 %65 to i64
  br label %68

68:                                               ; preds = %64, %54
  %69 = phi i64 [ %67, %64 ], [ %55, %54 ]
  %70 = phi i64 [ %66, %64 ], [ %56, %54 ]
  %71 = phi i8 [ %65, %64 ], [ %57, %54 ]
  %72 = icmp slt i8 %71, 0
  %73 = select i1 %72, i64 %70, i64 %69
  %74 = icmp eq i64 %73, 11
  br i1 %74, label %75, label %82

75:                                               ; preds = %68
  %76 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %20, i64 0, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN12_GLOBAL__N_110kUDPSendToE, i64 0, i64 0), i64 11) #7
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %134, label %78

78:                                               ; preds = %75
  %79 = load i8, i8* %25, align 1
  %80 = load i64, i64* %28, align 8
  %81 = zext i8 %79 to i64
  br label %82

82:                                               ; preds = %78, %68
  %83 = phi i64 [ %81, %78 ], [ %69, %68 ]
  %84 = phi i64 [ %80, %78 ], [ %70, %68 ]
  %85 = phi i8 [ %79, %78 ], [ %71, %68 ]
  %86 = icmp slt i8 %85, 0
  %87 = select i1 %86, i64 %84, i64 %83
  %88 = icmp eq i64 %87, 24
  br i1 %88, label %89, label %96

89:                                               ; preds = %82
  %90 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %20, i64 0, i64 -1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZN12_GLOBAL__N_123kUDPMulticastMembershipE, i64 0, i64 0), i64 24) #7
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %134, label %92

92:                                               ; preds = %89
  %93 = load i8, i8* %25, align 1
  %94 = load i64, i64* %28, align 8
  %95 = zext i8 %93 to i64
  br label %96

96:                                               ; preds = %92, %82
  %97 = phi i64 [ %95, %92 ], [ %83, %82 ]
  %98 = phi i64 [ %94, %92 ], [ %84, %82 ]
  %99 = phi i8 [ %93, %92 ], [ %85, %82 ]
  %100 = icmp slt i8 %99, 0
  %101 = select i1 %100, i64 %98, i64 %97
  %102 = icmp eq i64 %101, 12
  br i1 %102, label %103, label %110

103:                                              ; preds = %96
  %104 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %20, i64 0, i64 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN12_GLOBAL__N_112kResolveHostE, i64 0, i64 0), i64 12) #7
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %134, label %106

106:                                              ; preds = %103
  %107 = load i8, i8* %25, align 1
  %108 = load i64, i64* %28, align 8
  %109 = zext i8 %107 to i64
  br label %110

110:                                              ; preds = %106, %96
  %111 = phi i64 [ %109, %106 ], [ %97, %96 ]
  %112 = phi i64 [ %108, %106 ], [ %98, %96 ]
  %113 = phi i8 [ %107, %106 ], [ %99, %96 ]
  %114 = icmp slt i8 %113, 0
  %115 = select i1 %114, i64 %112, i64 %111
  %116 = icmp eq i64 %115, 13
  br i1 %116, label %117, label %124

117:                                              ; preds = %110
  %118 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %20, i64 0, i64 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN12_GLOBAL__N_113kResolveProxyE, i64 0, i64 0), i64 13) #7
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %134, label %120

120:                                              ; preds = %117
  %121 = load i8, i8* %25, align 1
  %122 = load i64, i64* %28, align 8
  %123 = zext i8 %121 to i64
  br label %124

124:                                              ; preds = %120, %110
  %125 = phi i64 [ %123, %120 ], [ %111, %110 ]
  %126 = phi i64 [ %122, %120 ], [ %112, %110 ]
  %127 = phi i8 [ %121, %120 ], [ %113, %110 ]
  %128 = icmp slt i8 %127, 0
  %129 = select i1 %128, i64 %126, i64 %125
  %130 = icmp eq i64 %129, 13
  br i1 %130, label %131, label %180

131:                                              ; preds = %124
  %132 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %20, i64 0, i64 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN12_GLOBAL__N_113kNetworkStateE, i64 0, i64 0), i64 13) #7
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %180

134:                                              ; preds = %131, %33, %47, %61, %75, %89, %103, %117
  %135 = phi i32 [ 7, %117 ], [ 6, %103 ], [ 5, %89 ], [ 4, %75 ], [ 3, %61 ], [ 2, %47 ], [ 1, %33 ], [ 8, %131 ]
  %136 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %137 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %136, i64 1
  %138 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %139 = icmp eq %"class.std::__1::basic_string"* %137, %138
  br i1 %139, label %161, label %140

140:                                              ; preds = %134, %150
  %141 = phi %"class.std::__1::basic_string"* [ %156, %150 ], [ %136, %134 ]
  %142 = phi %"class.std::__1::basic_string"* [ %155, %150 ], [ %137, %134 ]
  %143 = bitcast %"class.std::__1::basic_string"* %141 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %144 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %143, i64 0, i32 1, i32 0
  %145 = load i8, i8* %144, align 1
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %147, label %150

147:                                              ; preds = %140
  %148 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %141, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load i8*, i8** %148, align 8
  call void @_ZdlPv(i8* %149) #8
  br label %150

150:                                              ; preds = %147, %140
  %151 = bitcast %"class.std::__1::basic_string"* %141 to i8*
  %152 = bitcast %"class.std::__1::basic_string"* %142 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 24, i1 false) #7
  %153 = bitcast %"class.std::__1::basic_string"* %142 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %154 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %153, i64 0, i32 1, i32 0
  store i8 0, i8* %154, align 1
  store i8 0, i8* %152, align 1
  %155 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %142, i64 1
  %156 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %141, i64 1
  %157 = icmp eq %"class.std::__1::basic_string"* %155, %138
  br i1 %157, label %158, label %140

158:                                              ; preds = %150
  %159 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %160 = icmp eq %"class.std::__1::basic_string"* %159, %156
  br i1 %160, label %176, label %161

161:                                              ; preds = %158, %134
  %162 = phi %"class.std::__1::basic_string"* [ %156, %158 ], [ %136, %134 ]
  %163 = phi %"class.std::__1::basic_string"* [ %159, %158 ], [ %137, %134 ]
  br label %164

164:                                              ; preds = %174, %161
  %165 = phi %"class.std::__1::basic_string"* [ %166, %174 ], [ %163, %161 ]
  %166 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %165, i64 -1
  %167 = bitcast %"class.std::__1::basic_string"* %166 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %168 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %167, i64 0, i32 1, i32 0
  %169 = load i8, i8* %168, align 1
  %170 = icmp slt i8 %169, 0
  br i1 %170, label %171, label %174

171:                                              ; preds = %164
  %172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %166, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load i8*, i8** %172, align 8
  call void @_ZdlPv(i8* %173) #8
  br label %174

174:                                              ; preds = %171, %164
  %175 = icmp eq %"class.std::__1::basic_string"* %166, %162
  br i1 %175, label %176, label %164

176:                                              ; preds = %174, %158
  %177 = phi %"class.std::__1::basic_string"* [ %156, %158 ], [ %162, %174 ]
  store %"class.std::__1::basic_string"* %177, %"class.std::__1::basic_string"** %6, align 8
  %178 = getelementptr inbounds %"class.extensions::SocketPermissionData", %"class.extensions::SocketPermissionData"* %0, i64 0, i32 0
  %179 = call zeroext i1 @_ZN10extensions21SocketPermissionEntry16ParseHostPatternEN7content23SocketPermissionRequest13OperationTypeERKNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEEPS0_(i32 %135, %"class.std::__1::vector.30"* nonnull dereferenceable(24) %3, %"class.extensions::SocketPermissionEntry"* %178) #7
  br label %180

180:                                              ; preds = %176, %131, %124
  %181 = phi i1 [ false, %124 ], [ false, %131 ], [ %179, %176 ]
  %182 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  br label %183

183:                                              ; preds = %180, %2
  %184 = phi %"class.std::__1::basic_string"* [ %182, %180 ], [ %20, %2 ]
  %185 = phi i1 [ %181, %180 ], [ false, %2 ]
  %186 = icmp eq %"class.std::__1::basic_string"* %184, null
  br i1 %186, label %208, label %187

187:                                              ; preds = %183
  %188 = bitcast %"class.std::__1::basic_string"* %184 to i8*
  %189 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %190 = icmp eq %"class.std::__1::basic_string"* %189, %184
  br i1 %190, label %206, label %191

191:                                              ; preds = %187, %201
  %192 = phi %"class.std::__1::basic_string"* [ %193, %201 ], [ %189, %187 ]
  %193 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %192, i64 -1
  %194 = bitcast %"class.std::__1::basic_string"* %193 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %195 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %194, i64 0, i32 1, i32 0
  %196 = load i8, i8* %195, align 1
  %197 = icmp slt i8 %196, 0
  br i1 %197, label %198, label %201

198:                                              ; preds = %191
  %199 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %193, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load i8*, i8** %199, align 8
  call void @_ZdlPv(i8* %200) #8
  br label %201

201:                                              ; preds = %198, %191
  %202 = icmp eq %"class.std::__1::basic_string"* %193, %184
  br i1 %202, label %203, label %191

203:                                              ; preds = %201
  %204 = bitcast %"class.std::__1::vector.30"* %3 to i8**
  %205 = load i8*, i8** %204, align 8
  br label %206

206:                                              ; preds = %203, %187
  %207 = phi i8* [ %205, %203 ], [ %188, %187 ]
  store %"class.std::__1::basic_string"* %184, %"class.std::__1::basic_string"** %6, align 8
  call void @_ZdlPv(i8* %207) #8
  br label %208

208:                                              ; preds = %183, %206
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #7
  ret i1 %185
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(48) %"class.extensions::SocketPermissionEntry"* @_ZN10extensions20SocketPermissionData5entryEv(%"class.extensions::SocketPermissionData"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SocketPermissionData", %"class.extensions::SocketPermissionData"* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %"class.extensions::SocketPermissionData", %"class.extensions::SocketPermissionData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %10, align 8
  br label %13

11:                                               ; preds = %1
  %12 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  store i8 0, i8* %12, align 1
  store i8 0, i8* %4, align 1
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.extensions::SocketPermissionData", %"class.extensions::SocketPermissionData"* %0, i64 0, i32 0
  ret %"class.extensions::SocketPermissionEntry"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions20SocketPermissionData5ResetEv(%"class.extensions::SocketPermissionData"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.extensions::SocketPermissionEntry", align 8
  %3 = bitcast %"class.extensions::SocketPermissionEntry"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %3) #7
  call void @_ZN10extensions21SocketPermissionEntryC1Ev(%"class.extensions::SocketPermissionEntry"* nonnull %2) #7
  %4 = getelementptr inbounds %"class.extensions::SocketPermissionData", %"class.extensions::SocketPermissionData"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %2, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.extensions::SocketPermissionData", %"class.extensions::SocketPermissionData"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 %6, i32* %7, align 8
  %8 = getelementptr inbounds %"class.extensions::SocketPermissionData", %"class.extensions::SocketPermissionData"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %2, i64 0, i32 0, i32 2
  %10 = icmp eq %"class.extensions::SocketPermissionEntry"* %4, %2
  br i1 %10, label %40, label %11

11:                                               ; preds = %1
  %12 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %15, label %30, label %20

20:                                               ; preds = %11
  br i1 %19, label %24, label %21

21:                                               ; preds = %20
  %22 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %23 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 24, i1 false) #7
  br label %40

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %2, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %8, i8* %26, i64 %28) #7
  br label %40

30:                                               ; preds = %11
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %2, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %36 = zext i8 %18 to i64
  %37 = select i1 %19, i8* %32, i8* %35
  %38 = select i1 %19, i64 %34, i64 %36
  %39 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %8, i8* %37, i64 %38) #7
  br label %40

40:                                               ; preds = %1, %21, %24, %30
  %41 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %2, i64 0, i32 0, i32 3
  %42 = load i16, i16* %41, align 8
  %43 = getelementptr inbounds %"class.extensions::SocketPermissionData", %"class.extensions::SocketPermissionData"* %0, i64 0, i32 0, i32 0, i32 3
  store i16 %42, i16* %43, align 8
  %44 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %2, i64 0, i32 1
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = getelementptr inbounds %"class.extensions::SocketPermissionData", %"class.extensions::SocketPermissionData"* %0, i64 0, i32 0, i32 1
  store i8 %45, i8* %46, align 8
  call void @_ZN10extensions21SocketPermissionEntryD1Ev(%"class.extensions::SocketPermissionEntry"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %3) #7
  %47 = getelementptr inbounds %"class.extensions::SocketPermissionData", %"class.extensions::SocketPermissionData"* %0, i64 0, i32 1
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %56

52:                                               ; preds = %40
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  store i8 0, i8* %54, align 1
  %55 = getelementptr inbounds %"class.extensions::SocketPermissionData", %"class.extensions::SocketPermissionData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %55, align 8
  br label %58

56:                                               ; preds = %40
  %57 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  store i8 0, i8* %57, align 1
  store i8 0, i8* %49, align 1
  br label %58

58:                                               ; preds = %52, %56
  ret void
}

declare void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.30"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN10extensions21SocketPermissionEntry16ParseHostPatternEN7content23SocketPermissionRequest13OperationTypeERKNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEEPS0_(i32, %"class.std::__1::vector.30"* dereferenceable(24), %"class.extensions::SocketPermissionEntry"*) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

declare void @_ZNK10extensions21SocketPermissionEntry22GetHostPatternAsStringEv(%"class.std::__1::basic_string"* sret, %"class.extensions::SocketPermissionEntry"*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #1

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN4base5ValueC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
