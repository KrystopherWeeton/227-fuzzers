; ModuleID = '../../media/cdm/cdm_type_conversion.cc'
source_filename = "../../media/cdm/cdm_type_conversion.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::VideoColorSpace" = type { i8, i8, i8, i8 }
%"struct.cdm::ColorSpace" = type { i8, i8, i8, i8 }
%"struct.cdm::AudioDecoderConfig_2" = type { i32, i32, i32, i32, i8*, i32, i32 }
%"class.media::AudioDecoderConfig" = type <{ i32, i32, i32, i32, i32, i32, %"class.std::__1::vector", i32, i32, i32, i32, %"class.base::TimeDelta", i32, i8, [3 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.base::TimeDelta" = type { i64 }
%"struct.cdm::VideoDecoderConfig_3" = type { i32, i32, i32, %"struct.cdm::ColorSpace", %"struct.cdm::Size", i8*, i32, i32 }
%"struct.cdm::Size" = type { i32, i32 }
%"class.media::VideoDecoderConfig" = type <{ i32, i32, i32, i32, %"struct.media::VideoTransformation", %"class.gfx::Size", %"class.gfx::Rect", %"class.gfx::Size", %"class.std::__1::vector", i32, %"class.media::VideoColorSpace", %"class.absl::optional", i8, [3 x i8] }>
%"struct.media::VideoTransformation" = type <{ i32, i8, [3 x i8] }>
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.gfx::PointF" = type { float, float }
%"class.media::DecoderBuffer" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.std::__1::unique_ptr", %"class.base::TimeDelta", %"class.base::TimeDelta", i64, i64, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.16", %"struct.std::__1::pair", i8, [7 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.media::ReadOnlyUnalignedMapping"* }
%"class.media::ReadOnlyUnalignedMapping" = type { %"class.base::ReadOnlySharedMemoryMapping", i64, i64 }
%"class.base::ReadOnlySharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.media::UnalignedSharedMemory"* }
%"class.media::UnalignedSharedMemory" = type { %"class.base::subtle::PlatformSharedMemoryRegion", %"class.base::WritableSharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping", i8, i64, i8* }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.media::DecryptConfig"* }
%"class.media::DecryptConfig" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.25", %"class.absl::optional.32", [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.21 }
%union.anon.21 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"struct.media::SubsampleEntry"*, %"struct.media::SubsampleEntry"*, %"class.std::__1::__compressed_pair.27" }
%"struct.media::SubsampleEntry" = type { i32, i32 }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.media::SubsampleEntry"* }
%"class.absl::optional.32" = type { %"class.absl::optional_internal::optional_data.33" }
%"class.absl::optional_internal::optional_data.33" = type { %"class.absl::optional_internal::optional_data_base.34" }
%"class.absl::optional_internal::optional_data_base.34" = type { %"class.absl::optional_internal::optional_data_dtor_base.35" }
%"class.absl::optional_internal::optional_data_dtor_base.35" = type { i8, %union.anon.36 }
%union.anon.36 = type { %"class.media::EncryptionPattern" }
%"class.media::EncryptionPattern" = type { i32, i32 }
%"struct.std::__1::pair" = type { %"class.base::TimeDelta", %"class.base::TimeDelta" }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"struct.cdm::SubsampleEntry"*, %"struct.cdm::SubsampleEntry"*, %"class.std::__1::__compressed_pair.42" }
%"struct.cdm::SubsampleEntry" = type { i32, i32 }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.cdm::SubsampleEntry"* }
%"struct.cdm::InputBuffer_2" = type { i8*, i32, i32, i8*, i32, i32, i8*, i32, i32, %"struct.cdm::SubsampleEntry"*, i32, i32, %"struct.cdm::Pattern", i64 }
%"struct.cdm::Pattern" = type { i32, i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

@switch.table._ZN5media17ToCdmInitDataTypeENS_15EmeInitDataTypeE = private unnamed_addr constant [3 x i32] [i32 2, i32 0, i32 1], align 4
@switch.table._ZN5media17ToEmeInitDataTypeEN3cdm12InitDataTypeE = private unnamed_addr constant [3 x i32] [i32 2, i32 3, i32 1], align 4
@switch.table._ZN5media26ToMediaCdmPromiseExceptionEN3cdm9ExceptionE = private unnamed_addr constant [4 x i32] [i32 3, i32 0, i32 1, i32 2], align 4
@switch.table._ZN5media14ToCdmExceptionENS_10CdmPromise9ExceptionE = private unnamed_addr constant [4 x i32] [i32 1, i32 2, i32 3, i32 0], align 4
@switch.table._ZN5media22ToMediaDecryptorStatusEN3cdm6StatusE = private unnamed_addr constant [6 x i32] [i32 0, i32 2, i32 1, i32 3, i32 3, i32 3], align 4
@switch.table._ZN5media17ToMediaVideoCodecEN3cdm10VideoCodecE = private unnamed_addr constant [4 x i32] [i32 6, i32 1, i32 7, i32 10], align 4
@switch.table._ZN5media24ToMediaVideoCodecProfileEN3cdm17VideoCodecProfileE = private unnamed_addr constant [15 x i32] [i32 11, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 12, i32 13, i32 14, i32 15, i32 24, i32 25, i32 26], align 4
@switch.table._ZN5media18ToMediaVideoFormatEN3cdm11VideoFormatE = private unnamed_addr constant [24 x i32] [i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24], align 4
@switch.table._ZN5media23ToCdmVideoDecoderConfigERKNS_18VideoDecoderConfigE = private unnamed_addr constant [10 x i32] [i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 3, i32 0, i32 0, i32 4], align 4
@switch.table._ZN5media23ToCdmVideoDecoderConfigERKNS_18VideoDecoderConfigE.1 = private unnamed_addr constant [27 x i32] [i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 0, i32 0, i32 0, i32 0, i32 1, i32 9, i32 10, i32 11, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 13, i32 14, i32 15], align 4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5media15ToCdmColorSpaceERKNS_15VideoColorSpaceE(%"class.media::VideoColorSpace"* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.media::VideoColorSpace", %"class.media::VideoColorSpace"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 1
  %4 = getelementptr inbounds %"class.media::VideoColorSpace", %"class.media::VideoColorSpace"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = getelementptr inbounds %"class.media::VideoColorSpace", %"class.media::VideoColorSpace"* %0, i64 0, i32 2
  %7 = load i8, i8* %6, align 1
  %8 = getelementptr inbounds %"class.media::VideoColorSpace", %"class.media::VideoColorSpace"* %0, i64 0, i32 3
  %9 = load i8, i8* %8, align 1
  %10 = add i8 %9, -1
  %11 = icmp ult i8 %10, 3
  br i1 %11, label %12, label %16

12:                                               ; preds = %1
  %13 = zext i8 %10 to i32
  %14 = shl nuw i32 %13, 24
  %15 = add i32 %14, 16777216
  br label %16

16:                                               ; preds = %12, %1
  %17 = phi i32 [ 0, %1 ], [ %15, %12 ]
  %18 = zext i8 %7 to i32
  %19 = shl nuw nsw i32 %18, 16
  %20 = zext i8 %5 to i32
  %21 = shl nuw nsw i32 %20, 8
  %22 = zext i8 %3 to i32
  %23 = or i32 %21, %22
  %24 = or i32 %23, %19
  %25 = or i32 %24, %17
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5media17ToMediaColorSpaceERKN3cdm10ColorSpaceE(%"struct.cdm::ColorSpace"* nocapture readonly dereferenceable(4)) local_unnamed_addr #1 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to %"class.media::VideoColorSpace"*
  %4 = getelementptr inbounds %"struct.cdm::ColorSpace", %"struct.cdm::ColorSpace"* %0, i64 0, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i32
  %7 = getelementptr inbounds %"struct.cdm::ColorSpace", %"struct.cdm::ColorSpace"* %0, i64 0, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = getelementptr inbounds %"struct.cdm::ColorSpace", %"struct.cdm::ColorSpace"* %0, i64 0, i32 2
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  %13 = getelementptr inbounds %"struct.cdm::ColorSpace", %"struct.cdm::ColorSpace"* %0, i64 0, i32 3
  %14 = load i8, i8* %13, align 1
  %15 = add i8 %14, -1
  %16 = icmp ult i8 %15, 3
  %17 = select i1 %16, i8 %14, i8 0
  call void @_ZN5media15VideoColorSpaceC1EiiiN3gfx10ColorSpace7RangeIDE(%"class.media::VideoColorSpace"* nonnull %3, i32 %6, i32 %9, i32 %12, i8 zeroext %17) #10
  %18 = load i32, i32* %2, align 4
  ret i32 %18
}

declare void @_ZN5media15VideoColorSpaceC1EiiiN3gfx10ColorSpace7RangeIDE(%"class.media::VideoColorSpace"*, i32, i32, i32, i8 zeroext) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5media16ToCdmHdcpVersionENS_11HdcpVersionE(i32) local_unnamed_addr #3 {
  %2 = icmp ult i32 %0, 9
  %3 = select i1 %2, i32 %0, i32 9
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5media16ToCdmSessionTypeENS_14CdmSessionTypeE(i32) local_unnamed_addr #3 {
  %2 = icmp eq i32 %0, 1
  %3 = zext i1 %2 to i32
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5media18ToMediaSessionTypeEN3cdm11SessionTypeE(i32) local_unnamed_addr #3 {
  %2 = icmp eq i32 %0, 1
  %3 = zext i1 %2 to i32
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5media17ToCdmInitDataTypeENS_15EmeInitDataTypeE(i32) local_unnamed_addr #3 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 3
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN5media17ToCdmInitDataTypeENS_15EmeInitDataTypeE, i64 0, i64 %5
  %7 = load i32, i32* %6, align 4
  ret i32 %7

8:                                                ; preds = %1
  ret i32 1
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5media17ToEmeInitDataTypeEN3cdm12InitDataTypeE(i32) local_unnamed_addr #3 {
  %2 = icmp ult i32 %0, 3
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN5media17ToEmeInitDataTypeEN3cdm12InitDataTypeE, i64 0, i64 %4
  %6 = load i32, i32* %5, align 4
  ret i32 %6

7:                                                ; preds = %1
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5media16ToMediaKeyStatusEN3cdm9KeyStatusE(i32) local_unnamed_addr #3 {
  %2 = icmp ult i32 %0, 7
  %3 = select i1 %2, i32 %0, i32 1
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5media14ToCdmKeyStatusENS_17CdmKeyInformation9KeyStatusE(i32) local_unnamed_addr #3 {
  %2 = icmp ult i32 %0, 7
  %3 = select i1 %2, i32 %0, i32 1
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5media21ToCdmEncryptionSchemeENS_16EncryptionSchemeE(i32) local_unnamed_addr #3 {
  %2 = icmp eq i32 %0, 1
  %3 = zext i1 %2 to i32
  %4 = icmp eq i32 %0, 2
  %5 = select i1 %4, i32 2, i32 %3
  ret i32 %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5media26ToMediaCdmPromiseExceptionEN3cdm9ExceptionE(i32) local_unnamed_addr #3 {
  %2 = icmp ult i32 %0, 4
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN5media26ToMediaCdmPromiseExceptionEN3cdm9ExceptionE, i64 0, i64 %4
  %6 = load i32, i32* %5, align 4
  ret i32 %6

7:                                                ; preds = %1
  ret i32 1
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5media14ToCdmExceptionENS_10CdmPromise9ExceptionE(i32) local_unnamed_addr #3 {
  %2 = icmp ult i32 %0, 4
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN5media14ToCdmExceptionENS_10CdmPromise9ExceptionE, i64 0, i64 %4
  %6 = load i32, i32* %5, align 4
  ret i32 %6

7:                                                ; preds = %1
  ret i32 2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5media18ToMediaMessageTypeEN3cdm11MessageTypeE(i32) local_unnamed_addr #3 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 3
  %4 = select i1 %3, i32 %0, i32 0
  ret i32 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5media16ToCdmMessageTypeENS_14CdmMessageTypeE(i32) local_unnamed_addr #3 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 3
  %4 = select i1 %3, i32 %0, i32 0
  ret i32 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5media15ToCdmStreamTypeENS_9Decryptor10StreamTypeE(i32) local_unnamed_addr #3 {
  %2 = icmp ne i32 %0, 0
  %3 = zext i1 %2 to i32
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5media22ToMediaDecryptorStatusEN3cdm6StatusE(i32) local_unnamed_addr #3 {
  %2 = icmp ult i32 %0, 6
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table._ZN5media22ToMediaDecryptorStatusEN3cdm6StatusE, i64 0, i64 %4
  %6 = load i32, i32* %5, align 4
  ret i32 %6

7:                                                ; preds = %1
  ret i32 3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5media15ToCdmAudioCodecENS_10AudioCodecE(i32) local_unnamed_addr #3 {
  %2 = icmp eq i32 %0, 1
  %3 = select i1 %2, i32 2, i32 0
  %4 = icmp eq i32 %0, 4
  %5 = select i1 %4, i32 1, i32 %3
  ret i32 %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5media19ToMediaSampleFormatEN3cdm11AudioFormatE(i32) local_unnamed_addr #3 {
  %2 = icmp ult i32 %0, 7
  %3 = select i1 %2, i32 %0, i32 0
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5media15ToCdmVideoCodecENS_10VideoCodecE(i32) local_unnamed_addr #3 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 10
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [10 x i32], [10 x i32]* @switch.table._ZN5media23ToCdmVideoDecoderConfigERKNS_18VideoDecoderConfigE, i64 0, i64 %5
  %7 = load i32, i32* %6, align 4
  ret i32 %7

8:                                                ; preds = %1
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5media17ToMediaVideoCodecEN3cdm10VideoCodecE(i32) local_unnamed_addr #3 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 4
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN5media17ToMediaVideoCodecEN3cdm10VideoCodecE, i64 0, i64 %5
  %7 = load i32, i32* %6, align 4
  ret i32 %7

8:                                                ; preds = %1
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5media22ToCdmVideoCodecProfileENS_17VideoCodecProfileE(i32) local_unnamed_addr #3 {
  %2 = icmp ult i32 %0, 27
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [27 x i32], [27 x i32]* @switch.table._ZN5media23ToCdmVideoDecoderConfigERKNS_18VideoDecoderConfigE.1, i64 0, i64 %4
  %6 = load i32, i32* %5, align 4
  ret i32 %6

7:                                                ; preds = %1
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5media24ToMediaVideoCodecProfileEN3cdm17VideoCodecProfileE(i32) local_unnamed_addr #3 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 15
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [15 x i32], [15 x i32]* @switch.table._ZN5media24ToMediaVideoCodecProfileEN3cdm17VideoCodecProfileE, i64 0, i64 %5
  %7 = load i32, i32* %6, align 4
  ret i32 %7

8:                                                ; preds = %1
  ret i32 -1
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5media16ToCdmVideoFormatENS_16VideoPixelFormatE(i32) local_unnamed_addr #3 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 24
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [24 x i32], [24 x i32]* @switch.table._ZN5media18ToMediaVideoFormatEN3cdm11VideoFormatE, i64 0, i64 %5
  %7 = load i32, i32* %6, align 4
  ret i32 %7

8:                                                ; preds = %1
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5media18ToMediaVideoFormatEN3cdm11VideoFormatE(i32) local_unnamed_addr #3 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 24
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [24 x i32], [24 x i32]* @switch.table._ZN5media18ToMediaVideoFormatEN3cdm11VideoFormatE, i64 0, i64 %5
  %7 = load i32, i32* %6, align 4
  ret i32 %7

8:                                                ; preds = %1
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media23ToCdmAudioDecoderConfigERKNS_18AudioDecoderConfigE(%"struct.cdm::AudioDecoderConfig_2"* noalias nocapture sret, %"class.media::AudioDecoderConfig"* nocapture readonly dereferenceable(80)) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %"class.media::AudioDecoderConfig", %"class.media::AudioDecoderConfig"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  %6 = select i1 %5, i32 2, i32 0
  %7 = icmp eq i32 %4, 4
  %8 = select i1 %7, i32 1, i32 %6
  %9 = getelementptr inbounds %"struct.cdm::AudioDecoderConfig_2", %"struct.cdm::AudioDecoderConfig_2"* %0, i64 0, i32 0
  store i32 %8, i32* %9, align 8
  %10 = getelementptr inbounds %"class.media::AudioDecoderConfig", %"class.media::AudioDecoderConfig"* %1, i64 0, i32 8
  %11 = load i32, i32* %10, align 4
  %12 = tail call i32 @_ZN5media27ChannelLayoutToChannelCountENS_13ChannelLayoutE(i32 %11) #10
  %13 = getelementptr inbounds %"struct.cdm::AudioDecoderConfig_2", %"struct.cdm::AudioDecoderConfig_2"* %0, i64 0, i32 1
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %"class.media::AudioDecoderConfig", %"class.media::AudioDecoderConfig"* %1, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = shl nsw i32 %15, 3
  %17 = getelementptr inbounds %"struct.cdm::AudioDecoderConfig_2", %"struct.cdm::AudioDecoderConfig_2"* %0, i64 0, i32 2
  store i32 %16, i32* %17, align 8
  %18 = getelementptr inbounds %"class.media::AudioDecoderConfig", %"class.media::AudioDecoderConfig"* %1, i64 0, i32 4
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"struct.cdm::AudioDecoderConfig_2", %"struct.cdm::AudioDecoderConfig_2"* %0, i64 0, i32 3
  store i32 %19, i32* %20, align 4
  %21 = getelementptr inbounds %"class.media::AudioDecoderConfig", %"class.media::AudioDecoderConfig"* %1, i64 0, i32 6
  %22 = bitcast %"class.std::__1::vector"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"struct.cdm::AudioDecoderConfig_2", %"struct.cdm::AudioDecoderConfig_2"* %0, i64 0, i32 4
  %25 = bitcast i8** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = getelementptr inbounds %"class.media::AudioDecoderConfig", %"class.media::AudioDecoderConfig"* %1, i64 0, i32 6, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %28, %23
  %30 = trunc i64 %29 to i32
  %31 = getelementptr inbounds %"struct.cdm::AudioDecoderConfig_2", %"struct.cdm::AudioDecoderConfig_2"* %0, i64 0, i32 5
  store i32 %30, i32* %31, align 8
  %32 = getelementptr inbounds %"class.media::AudioDecoderConfig", %"class.media::AudioDecoderConfig"* %1, i64 0, i32 7
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 1
  %35 = zext i1 %34 to i32
  %36 = icmp eq i32 %33, 2
  %37 = select i1 %36, i32 2, i32 %35
  %38 = getelementptr inbounds %"struct.cdm::AudioDecoderConfig_2", %"struct.cdm::AudioDecoderConfig_2"* %0, i64 0, i32 6
  store i32 %37, i32* %38, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare i32 @_ZN5media27ChannelLayoutToChannelCountENS_13ChannelLayoutE(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media23ToCdmVideoDecoderConfigERKNS_18VideoDecoderConfigE(%"struct.cdm::VideoDecoderConfig_3"* noalias nocapture sret, %"class.media::VideoDecoderConfig"* nocapture readonly dereferenceable(144)) local_unnamed_addr #1 {
  %3 = bitcast %"struct.cdm::VideoDecoderConfig_3"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 40, i1 false)
  %4 = getelementptr inbounds %"class.media::VideoDecoderConfig", %"class.media::VideoDecoderConfig"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, -1
  %7 = icmp ult i32 %6, 10
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = sext i32 %6 to i64
  %10 = getelementptr inbounds [10 x i32], [10 x i32]* @switch.table._ZN5media23ToCdmVideoDecoderConfigERKNS_18VideoDecoderConfigE, i64 0, i64 %9
  %11 = load i32, i32* %10, align 4
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i32 [ %11, %8 ], [ 0, %2 ]
  %14 = getelementptr inbounds %"struct.cdm::VideoDecoderConfig_3", %"struct.cdm::VideoDecoderConfig_3"* %0, i64 0, i32 0
  store i32 %13, i32* %14, align 8
  %15 = getelementptr inbounds %"class.media::VideoDecoderConfig", %"class.media::VideoDecoderConfig"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp ult i32 %16, 27
  br i1 %17, label %18, label %22

18:                                               ; preds = %12
  %19 = sext i32 %16 to i64
  %20 = getelementptr inbounds [27 x i32], [27 x i32]* @switch.table._ZN5media23ToCdmVideoDecoderConfigERKNS_18VideoDecoderConfigE.1, i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %12, %18
  %23 = phi i32 [ %21, %18 ], [ 0, %12 ]
  %24 = getelementptr inbounds %"struct.cdm::VideoDecoderConfig_3", %"struct.cdm::VideoDecoderConfig_3"* %0, i64 0, i32 1
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %"struct.cdm::VideoDecoderConfig_3", %"struct.cdm::VideoDecoderConfig_3"* %0, i64 0, i32 2
  store i32 2, i32* %25, align 8
  %26 = getelementptr inbounds %"class.media::VideoDecoderConfig", %"class.media::VideoDecoderConfig"* %1, i64 0, i32 10, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = getelementptr inbounds %"class.media::VideoDecoderConfig", %"class.media::VideoDecoderConfig"* %1, i64 0, i32 10, i32 1
  %29 = load i8, i8* %28, align 1
  %30 = getelementptr inbounds %"class.media::VideoDecoderConfig", %"class.media::VideoDecoderConfig"* %1, i64 0, i32 10, i32 2
  %31 = load i8, i8* %30, align 1
  %32 = getelementptr inbounds %"class.media::VideoDecoderConfig", %"class.media::VideoDecoderConfig"* %1, i64 0, i32 10, i32 3
  %33 = load i8, i8* %32, align 1
  %34 = add i8 %33, -1
  %35 = icmp ult i8 %34, 3
  br i1 %35, label %36, label %40

36:                                               ; preds = %22
  %37 = zext i8 %34 to i32
  %38 = shl nuw i32 %37, 24
  %39 = add i32 %38, 16777216
  br label %40

40:                                               ; preds = %36, %22
  %41 = phi i32 [ 0, %22 ], [ %39, %36 ]
  %42 = zext i8 %31 to i32
  %43 = shl nuw nsw i32 %42, 16
  %44 = zext i8 %29 to i32
  %45 = shl nuw nsw i32 %44, 8
  %46 = zext i8 %27 to i32
  %47 = or i32 %45, %46
  %48 = or i32 %47, %43
  %49 = or i32 %48, %41
  %50 = getelementptr inbounds %"struct.cdm::VideoDecoderConfig_3", %"struct.cdm::VideoDecoderConfig_3"* %0, i64 0, i32 3
  %51 = bitcast %"struct.cdm::ColorSpace"* %50 to i32*
  store i32 %49, i32* %51, align 4
  %52 = getelementptr inbounds %"class.media::VideoDecoderConfig", %"class.media::VideoDecoderConfig"* %1, i64 0, i32 5, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"struct.cdm::VideoDecoderConfig_3", %"struct.cdm::VideoDecoderConfig_3"* %0, i64 0, i32 4, i32 0
  store i32 %53, i32* %54, align 8
  %55 = getelementptr inbounds %"class.media::VideoDecoderConfig", %"class.media::VideoDecoderConfig"* %1, i64 0, i32 5, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %"struct.cdm::VideoDecoderConfig_3", %"struct.cdm::VideoDecoderConfig_3"* %0, i64 0, i32 4, i32 1
  store i32 %56, i32* %57, align 4
  %58 = getelementptr inbounds %"class.media::VideoDecoderConfig", %"class.media::VideoDecoderConfig"* %1, i64 0, i32 8
  %59 = bitcast %"class.std::__1::vector"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"struct.cdm::VideoDecoderConfig_3", %"struct.cdm::VideoDecoderConfig_3"* %0, i64 0, i32 5
  %62 = bitcast i8** %61 to i64*
  store i64 %60, i64* %62, align 8
  %63 = getelementptr inbounds %"class.media::VideoDecoderConfig", %"class.media::VideoDecoderConfig"* %1, i64 0, i32 8, i32 0, i32 1
  %64 = bitcast i8** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %60
  %67 = trunc i64 %66 to i32
  %68 = getelementptr inbounds %"struct.cdm::VideoDecoderConfig_3", %"struct.cdm::VideoDecoderConfig_3"* %0, i64 0, i32 6
  store i32 %67, i32* %68, align 8
  %69 = getelementptr inbounds %"class.media::VideoDecoderConfig", %"class.media::VideoDecoderConfig"* %1, i64 0, i32 9
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, 1
  %72 = zext i1 %71 to i32
  %73 = icmp eq i32 %70, 2
  %74 = select i1 %73, i32 2, i32 %72
  %75 = getelementptr inbounds %"struct.cdm::VideoDecoderConfig_3", %"struct.cdm::VideoDecoderConfig_3"* %0, i64 0, i32 7
  store i32 %74, i32* %75, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media16ToCdmInputBufferERKNS_13DecoderBufferEPNSt3__16vectorIN3cdm14SubsampleEntryENS3_9allocatorIS6_EEEEPNS5_13InputBuffer_2E(%"class.media::DecoderBuffer"* nocapture readonly dereferenceable(112), %"class.std::__1::vector.40"*, %"struct.cdm::InputBuffer_2"* nocapture) local_unnamed_addr #1 {
  %4 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %5 = load %"class.media::ReadOnlyUnalignedMapping"*, %"class.media::ReadOnlyUnalignedMapping"** %4, align 8
  %6 = icmp eq %"class.media::ReadOnlyUnalignedMapping"* %5, null
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %9 = load %"class.media::UnalignedSharedMemory"*, %"class.media::UnalignedSharedMemory"** %8, align 8
  %10 = icmp eq %"class.media::UnalignedSharedMemory"* %9, null
  br i1 %10, label %11, label %25

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %251, label %29

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.media::ReadOnlyUnalignedMapping", %"class.media::ReadOnlyUnalignedMapping"* %5, i64 0, i32 0, i32 0, i32 1
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = tail call i8* @_ZNK5media24ReadOnlyUnalignedMapping6memoryEv(%"class.media::ReadOnlyUnalignedMapping"* nonnull %5) #10
  br label %32

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %23 = load %"class.media::UnalignedSharedMemory"*, %"class.media::UnalignedSharedMemory"** %22, align 8
  %24 = icmp eq %"class.media::UnalignedSharedMemory"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %7, %21
  %26 = phi %"class.media::UnalignedSharedMemory"* [ %23, %21 ], [ %9, %7 ]
  %27 = getelementptr inbounds %"class.media::UnalignedSharedMemory", %"class.media::UnalignedSharedMemory"* %26, i64 0, i32 5
  %28 = load i8*, i8** %27, align 8
  br label %32

29:                                               ; preds = %11, %21
  %30 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  br label %32

32:                                               ; preds = %19, %25, %29
  %33 = phi i8* [ %20, %19 ], [ %28, %25 ], [ %31, %29 ]
  %34 = getelementptr inbounds %"struct.cdm::InputBuffer_2", %"struct.cdm::InputBuffer_2"* %2, i64 0, i32 0
  store i8* %33, i8** %34, align 8
  %35 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 6
  %36 = load i64, i64* %35, align 8
  %37 = trunc i64 %36 to i32
  %38 = getelementptr inbounds %"struct.cdm::InputBuffer_2", %"struct.cdm::InputBuffer_2"* %2, i64 0, i32 1
  store i32 %37, i32* %38, align 8
  %39 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 4, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.cdm::InputBuffer_2", %"struct.cdm::InputBuffer_2"* %2, i64 0, i32 13
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %43 = load %"class.media::DecryptConfig"*, %"class.media::DecryptConfig"** %42, align 8
  %44 = icmp eq %"class.media::DecryptConfig"* %43, null
  br i1 %44, label %251, label %45

45:                                               ; preds = %32
  %46 = getelementptr inbounds %"class.media::DecryptConfig", %"class.media::DecryptConfig"* %43, i64 0, i32 2
  %47 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  br label %56

54:                                               ; preds = %45
  %55 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  br label %56

56:                                               ; preds = %51, %54
  %57 = phi i8* [ %53, %51 ], [ %55, %54 ]
  %58 = getelementptr inbounds %"struct.cdm::InputBuffer_2", %"struct.cdm::InputBuffer_2"* %2, i64 0, i32 3
  store i8* %57, i8** %58, align 8
  %59 = load i8, i8* %48, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.media::DecryptConfig", %"class.media::DecryptConfig"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  br label %66

64:                                               ; preds = %56
  %65 = zext i8 %59 to i64
  br label %66

66:                                               ; preds = %61, %64
  %67 = phi i64 [ %63, %61 ], [ %65, %64 ]
  %68 = trunc i64 %67 to i32
  %69 = getelementptr inbounds %"struct.cdm::InputBuffer_2", %"struct.cdm::InputBuffer_2"* %2, i64 0, i32 4
  store i32 %68, i32* %69, align 8
  %70 = getelementptr inbounds %"class.media::DecryptConfig", %"class.media::DecryptConfig"* %43, i64 0, i32 3
  %71 = bitcast %"class.std::__1::basic_string"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  br label %80

78:                                               ; preds = %66
  %79 = bitcast %"class.std::__1::basic_string"* %70 to i8*
  br label %80

80:                                               ; preds = %75, %78
  %81 = phi i8* [ %77, %75 ], [ %79, %78 ]
  %82 = getelementptr inbounds %"struct.cdm::InputBuffer_2", %"struct.cdm::InputBuffer_2"* %2, i64 0, i32 6
  store i8* %81, i8** %82, align 8
  %83 = load i8, i8* %72, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.media::DecryptConfig", %"class.media::DecryptConfig"* %43, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %87 = load i64, i64* %86, align 8
  br label %90

88:                                               ; preds = %80
  %89 = zext i8 %83 to i64
  br label %90

90:                                               ; preds = %85, %88
  %91 = phi i64 [ %87, %85 ], [ %89, %88 ]
  %92 = trunc i64 %91 to i32
  %93 = getelementptr inbounds %"struct.cdm::InputBuffer_2", %"struct.cdm::InputBuffer_2"* %2, i64 0, i32 7
  store i32 %92, i32* %93, align 8
  %94 = getelementptr inbounds %"class.media::DecryptConfig", %"class.media::DecryptConfig"* %43, i64 0, i32 4
  %95 = getelementptr inbounds %"class.media::DecryptConfig", %"class.media::DecryptConfig"* %43, i64 0, i32 4, i32 0, i32 1
  %96 = bitcast %"struct.media::SubsampleEntry"** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.std::__1::vector.25"* %94 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = sub i64 %97, %99
  %101 = ashr exact i64 %100, 3
  %102 = icmp eq i64 %100, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %90
  %104 = bitcast %"class.std::__1::vector.40"* %1 to i64*
  br label %224

105:                                              ; preds = %90
  %106 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %107 = bitcast %"struct.cdm::SubsampleEntry"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.std::__1::vector.40"* %1 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = sub i64 %108, %110
  %112 = ashr exact i64 %111, 3
  %113 = icmp ult i64 %112, %101
  br i1 %113, label %114, label %137

114:                                              ; preds = %105
  %115 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %1, i64 0, i32 0, i32 1
  %116 = bitcast %"struct.cdm::SubsampleEntry"** %115 to i64*
  %117 = icmp ugt i64 %101, 2305843009213693951
  br i1 %117, label %118, label %119

118:                                              ; preds = %114
  tail call void @abort() #11
  unreachable

119:                                              ; preds = %114
  %120 = load i64, i64* %116, align 8
  %121 = sub i64 %120, %110
  %122 = ashr exact i64 %121, 3
  %123 = tail call i8* @_Znwm(i64 %100) #12
  %124 = bitcast i8* %123 to %"struct.cdm::SubsampleEntry"*
  %125 = getelementptr inbounds %"struct.cdm::SubsampleEntry", %"struct.cdm::SubsampleEntry"* %124, i64 %122
  %126 = ptrtoint %"struct.cdm::SubsampleEntry"* %125 to i64
  %127 = getelementptr inbounds %"struct.cdm::SubsampleEntry", %"struct.cdm::SubsampleEntry"* %124, i64 %101
  %128 = ptrtoint %"struct.cdm::SubsampleEntry"* %127 to i64
  %129 = ptrtoint i8* %123 to i64
  %130 = icmp sgt i64 %121, 0
  br i1 %130, label %131, label %133

131:                                              ; preds = %119
  %132 = inttoptr i64 %110 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %123, i8* align 4 %132, i64 %121, i1 false) #10
  br label %133

133:                                              ; preds = %131, %119
  store i64 %129, i64* %109, align 8
  store i64 %126, i64* %116, align 8
  store i64 %128, i64* %107, align 8
  %134 = icmp eq i64 %110, 0
  br i1 %134, label %137, label %135

135:                                              ; preds = %133
  %136 = inttoptr i64 %110 to i8*
  tail call void @_ZdlPv(i8* %136) #12
  br label %137

137:                                              ; preds = %105, %133, %135
  %138 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %94, i64 0, i32 0, i32 0
  %139 = load %"struct.media::SubsampleEntry"*, %"struct.media::SubsampleEntry"** %138, align 8
  %140 = load %"struct.media::SubsampleEntry"*, %"struct.media::SubsampleEntry"** %95, align 8
  %141 = icmp eq %"struct.media::SubsampleEntry"* %139, %140
  br i1 %141, label %224, label %142

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %1, i64 0, i32 0, i32 1
  %144 = bitcast %"struct.cdm::SubsampleEntry"** %143 to i64*
  %145 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %1, i64 0, i32 0, i32 0
  br label %146

146:                                              ; preds = %142, %221
  %147 = phi %"struct.media::SubsampleEntry"* [ %139, %142 ], [ %222, %221 ]
  %148 = getelementptr inbounds %"struct.media::SubsampleEntry", %"struct.media::SubsampleEntry"* %147, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  %150 = getelementptr inbounds %"struct.media::SubsampleEntry", %"struct.media::SubsampleEntry"* %147, i64 0, i32 1
  %151 = load i32, i32* %150, align 4
  %152 = load %"struct.cdm::SubsampleEntry"*, %"struct.cdm::SubsampleEntry"** %143, align 8
  %153 = load %"struct.cdm::SubsampleEntry"*, %"struct.cdm::SubsampleEntry"** %106, align 8
  %154 = icmp ult %"struct.cdm::SubsampleEntry"* %152, %153
  %155 = ptrtoint %"struct.cdm::SubsampleEntry"* %153 to i64
  br i1 %154, label %156, label %164

156:                                              ; preds = %146
  %157 = bitcast %"struct.cdm::SubsampleEntry"* %152 to i64*
  %158 = zext i32 %151 to i64
  %159 = shl nuw i64 %158, 32
  %160 = zext i32 %149 to i64
  %161 = or i64 %159, %160
  store i64 %161, i64* %157, align 4
  %162 = getelementptr inbounds %"struct.cdm::SubsampleEntry", %"struct.cdm::SubsampleEntry"* %152, i64 1
  %163 = ptrtoint %"struct.cdm::SubsampleEntry"* %162 to i64
  store i64 %163, i64* %144, align 8
  br label %221

164:                                              ; preds = %146
  %165 = ptrtoint %"struct.cdm::SubsampleEntry"* %152 to i64
  %166 = load i64, i64* %109, align 8
  %167 = sub i64 %165, %166
  %168 = ashr exact i64 %167, 3
  %169 = add nsw i64 %168, 1
  %170 = icmp ugt i64 %169, 2305843009213693951
  br i1 %170, label %171, label %173

171:                                              ; preds = %164
  %172 = bitcast %"class.std::__1::vector.40"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %172) #11
  unreachable

173:                                              ; preds = %164
  %174 = sub i64 %155, %166
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %175, 1152921504606846975
  br i1 %176, label %177, label %185

177:                                              ; preds = %173
  %178 = ashr exact i64 %174, 2
  %179 = icmp ult i64 %178, %169
  %180 = select i1 %179, i64 %169, i64 %178
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %190, label %182

182:                                              ; preds = %177
  %183 = icmp ugt i64 %180, 2305843009213693951
  br i1 %183, label %184, label %185

184:                                              ; preds = %182
  tail call void @abort() #11
  unreachable

185:                                              ; preds = %182, %173
  %186 = phi i64 [ %180, %182 ], [ 2305843009213693951, %173 ]
  %187 = shl i64 %186, 3
  %188 = tail call i8* @_Znwm(i64 %187) #12
  %189 = bitcast i8* %188 to %"struct.cdm::SubsampleEntry"*
  br label %190

190:                                              ; preds = %185, %177
  %191 = phi i64 [ %186, %185 ], [ 0, %177 ]
  %192 = phi %"struct.cdm::SubsampleEntry"* [ %189, %185 ], [ null, %177 ]
  %193 = getelementptr inbounds %"struct.cdm::SubsampleEntry", %"struct.cdm::SubsampleEntry"* %192, i64 %168
  %194 = getelementptr inbounds %"struct.cdm::SubsampleEntry", %"struct.cdm::SubsampleEntry"* %192, i64 %191
  %195 = ptrtoint %"struct.cdm::SubsampleEntry"* %194 to i64
  %196 = bitcast %"struct.cdm::SubsampleEntry"* %193 to i64*
  %197 = zext i32 %151 to i64
  %198 = shl nuw i64 %197, 32
  %199 = zext i32 %149 to i64
  %200 = or i64 %198, %199
  store i64 %200, i64* %196, align 4
  %201 = getelementptr inbounds %"struct.cdm::SubsampleEntry", %"struct.cdm::SubsampleEntry"* %193, i64 1
  %202 = ptrtoint %"struct.cdm::SubsampleEntry"* %201 to i64
  %203 = load %"struct.cdm::SubsampleEntry"*, %"struct.cdm::SubsampleEntry"** %145, align 8
  %204 = load i64, i64* %144, align 8
  %205 = ptrtoint %"struct.cdm::SubsampleEntry"* %203 to i64
  %206 = sub i64 %204, %205
  %207 = ashr exact i64 %206, 3
  %208 = sub nsw i64 0, %207
  %209 = getelementptr inbounds %"struct.cdm::SubsampleEntry", %"struct.cdm::SubsampleEntry"* %193, i64 %208
  %210 = ptrtoint %"struct.cdm::SubsampleEntry"* %209 to i64
  %211 = icmp sgt i64 %206, 0
  br i1 %211, label %212, label %216

212:                                              ; preds = %190
  %213 = bitcast %"struct.cdm::SubsampleEntry"* %209 to i8*
  %214 = bitcast %"struct.cdm::SubsampleEntry"* %203 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %213, i8* align 4 %214, i64 %206, i1 false) #10
  %215 = load %"struct.cdm::SubsampleEntry"*, %"struct.cdm::SubsampleEntry"** %145, align 8
  br label %216

216:                                              ; preds = %212, %190
  %217 = phi %"struct.cdm::SubsampleEntry"* [ %203, %190 ], [ %215, %212 ]
  store i64 %210, i64* %109, align 8
  store i64 %202, i64* %144, align 8
  store i64 %195, i64* %107, align 8
  %218 = icmp eq %"struct.cdm::SubsampleEntry"* %217, null
  br i1 %218, label %221, label %219

219:                                              ; preds = %216
  %220 = bitcast %"struct.cdm::SubsampleEntry"* %217 to i8*
  tail call void @_ZdlPv(i8* %220) #12
  br label %221

221:                                              ; preds = %156, %216, %219
  %222 = getelementptr inbounds %"struct.media::SubsampleEntry", %"struct.media::SubsampleEntry"* %147, i64 1
  %223 = icmp eq %"struct.media::SubsampleEntry"* %222, %140
  br i1 %223, label %224, label %146

224:                                              ; preds = %221, %103, %137
  %225 = phi i64* [ %104, %103 ], [ %109, %137 ], [ %109, %221 ]
  %226 = load i64, i64* %225, align 8
  %227 = getelementptr inbounds %"struct.cdm::InputBuffer_2", %"struct.cdm::InputBuffer_2"* %2, i64 0, i32 9
  %228 = bitcast %"struct.cdm::SubsampleEntry"** %227 to i64*
  store i64 %226, i64* %228, align 8
  %229 = trunc i64 %101 to i32
  %230 = getelementptr inbounds %"struct.cdm::InputBuffer_2", %"struct.cdm::InputBuffer_2"* %2, i64 0, i32 10
  store i32 %229, i32* %230, align 8
  %231 = getelementptr inbounds %"class.media::DecryptConfig", %"class.media::DecryptConfig"* %43, i64 0, i32 0
  %232 = load i32, i32* %231, align 8
  %233 = icmp eq i32 %232, 1
  %234 = zext i1 %233 to i32
  %235 = icmp eq i32 %232, 2
  %236 = select i1 %235, i32 2, i32 %234
  %237 = getelementptr inbounds %"struct.cdm::InputBuffer_2", %"struct.cdm::InputBuffer_2"* %2, i64 0, i32 2
  store i32 %236, i32* %237, align 4
  %238 = tail call zeroext i1 @_ZNK5media13DecryptConfig10HasPatternEv(%"class.media::DecryptConfig"* nonnull %43) #10
  br i1 %238, label %239, label %251

239:                                              ; preds = %224
  %240 = getelementptr inbounds %"class.media::DecryptConfig", %"class.media::DecryptConfig"* %43, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %241 = load i8, i8* %240, align 4, !range !2
  %242 = icmp eq i8 %241, 0
  br i1 %242, label %243, label %244, !prof !3

243:                                              ; preds = %239
  tail call void @llvm.trap() #10
  unreachable

244:                                              ; preds = %239
  %245 = getelementptr inbounds %"class.media::DecryptConfig", %"class.media::DecryptConfig"* %43, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %246 = load i32, i32* %245, align 4
  %247 = getelementptr inbounds %"class.media::DecryptConfig", %"class.media::DecryptConfig"* %43, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %248 = load i32, i32* %247, align 4
  %249 = getelementptr inbounds %"struct.cdm::InputBuffer_2", %"struct.cdm::InputBuffer_2"* %2, i64 0, i32 12, i32 0
  store i32 %246, i32* %249, align 8
  %250 = getelementptr inbounds %"struct.cdm::InputBuffer_2", %"struct.cdm::InputBuffer_2"* %2, i64 0, i32 12, i32 1
  store i32 %248, i32* %250, align 4
  br label %251

251:                                              ; preds = %32, %244, %224, %11
  ret void
}

declare zeroext i1 @_ZNK5media13DecryptConfig10HasPatternEv(%"class.media::DecryptConfig"*) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare i8* @_ZNK5media24ReadOnlyUnalignedMapping6memoryEv(%"class.media::ReadOnlyUnalignedMapping"*) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
