; ModuleID = '../../net/cert/internal/crl.cc'
source_filename = "../../net/cert/internal/crl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::ParsedCrlTbsCertList" = type { i32, %"class.net::der::Input", %"class.net::der::Input", %"struct.net::der::GeneralizedTime", %"class.absl::optional", %"class.absl::optional.0", %"class.absl::optional.0" }
%"class.net::der::Input" = type { i8*, i64 }
%"struct.net::der::GeneralizedTime" = type { i16, i8, i8, i8, i8, i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.net::der::GeneralizedTime" }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"class.net::der::Input" }
%"class.net::der::BitString" = type <{ %"class.net::der::Input", i8, [7 x i8] }>
%"class.net::der::Parser" = type { %struct.cbs_st, i64 }
%struct.cbs_st = type { i8*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.net::GeneralNames"* }
%"struct.net::GeneralNames" = type <{ %"class.std::__1::vector", %"class.std::__1::vector.8", %"class.std::__1::vector.8", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector.8", %"class.std::__1::vector.15", %"class.std::__1::vector.22", %"class.std::__1::vector", i32, [4 x i8] }>
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.10" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"class.net::IPAddress"*, %"class.net::IPAddress"*, %"class.std::__1::__compressed_pair.17" }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.net::IPAddress"* }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.24" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::der::Input"*, %"class.net::der::Input"*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.net::der::Input"* }
%"class.net::CertErrors" = type { %"class.std::__1::vector.30" }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"struct.net::CertError"*, %"struct.net::CertError"*, %"class.std::__1::__compressed_pair.38" }
%"struct.net::CertError" = type { i32, i8*, %"class.std::__1::unique_ptr.32" }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.net::CertErrorParams"* }
%"class.net::CertErrorParams" = type opaque
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.net::CertError"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.51" }
%"struct.std::__1::pair.51" = type { %"class.net::der::Input", %"struct.net::ParsedExtension" }
%"struct.net::ParsedExtension" = type <{ %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8] }>
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair.99" }
%class.scoped_refptr = type { %"class.net::ParsedCertificate"* }
%"class.net::ParsedCertificate" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::unique_ptr.55", %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::BitString", %"struct.net::ParsedTbsCertificate", %"class.std::__1::unique_ptr.59", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"struct.net::ParsedBasicConstraints", i8, [3 x i8], %"class.net::der::BitString", i8, %"class.std::__1::vector", %"struct.net::ParsedExtension", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.77", i8, [7 x i8], %"struct.net::ParsedExtension", %"class.std::__1::vector.8", %"class.std::__1::vector.8", i8, %"class.std::__1::vector", i8, %"struct.net::ParsedPolicyConstraints", i8, %"class.std::__1::vector.83", i8, i8, %"class.absl::optional.90", %"class.absl::optional.0", %"class.std::__1::map" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"struct.net::ParsedTbsCertificate" = type { i32, %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::Input", %"struct.net::der::GeneralizedTime", %"struct.net::der::GeneralizedTime", %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8], %"class.net::der::BitString", i8, [7 x i8], %"class.net::der::BitString", i8, %"class.net::der::Input" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.net::SignatureAlgorithm"* }
%"class.net::SignatureAlgorithm" = type { i32, i32, %"class.std::__1::unique_ptr.62" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.net::SignatureAlgorithmParameters"* }
%"class.net::SignatureAlgorithmParameters" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.73 }
%union.anon.73 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.net::ParsedBasicConstraints" = type { i8, i8, i8 }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.net::NameConstraints"* }
%"class.net::NameConstraints" = type opaque
%"struct.net::ParsedPolicyConstraints" = type { i8, i8, i8, i8 }
%"class.std::__1::vector.83" = type { %"class.std::__1::__vector_base.84" }
%"class.std::__1::__vector_base.84" = type { %"struct.net::ParsedPolicyMapping"*, %"struct.net::ParsedPolicyMapping"*, %"class.std::__1::__compressed_pair.85" }
%"struct.net::ParsedPolicyMapping" = type { %"class.net::der::Input", %"class.net::der::Input" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"struct.net::ParsedPolicyMapping"* }
%"class.absl::optional.90" = type { %"class.absl::optional_internal::optional_data.91" }
%"class.absl::optional_internal::optional_data.91" = type { %"class.absl::optional_internal::optional_data_base.92" }
%"class.absl::optional_internal::optional_data_base.92" = type { %"class.absl::optional_internal::optional_data_dtor_base.93" }
%"class.absl::optional_internal::optional_data_dtor_base.93" = type { i8, %union.anon.94 }
%union.anon.94 = type { %"struct.net::ParsedAuthorityKeyIdentifier" }
%"struct.net::ParsedAuthorityKeyIdentifier" = type { %"class.absl::optional.0", %"class.absl::optional.0", %"class.absl::optional.0" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %class.scoped_refptr* }
%"struct.net::ParsedDistributionPoint" = type <{ %"class.std::__1::vector.8", i8, [7 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"struct.std::__1::__less" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN4base18STLSetIntersectionINSt3__16vectorINS_16BasicStringPieceIcNS1_11char_traitsIcEEEENS1_9allocatorIS6_EEEES9_S9_EET_RKT0_RKT1_ = comdat any

$_ZNSt3__16__sortIRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEvT0_SA_T_ = comdat any

$_ZNSt3__17__sort3IRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEjT0_SA_SA_T_ = comdat any

$_ZNSt3__17__sort4IRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEjT0_SA_SA_SA_T_ = comdat any

$_ZNSt3__17__sort5IRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEjT0_SA_SA_SA_SA_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEvT0_SA_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEbT0_SA_T_ = comdat any

$_ZNSt3__16vectorIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS5_EEE6insertENS_11__wrap_iterIPKS5_EERSA_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS2_15ParsedExtensionEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

@_ZZN3net12_GLOBAL__N_127IssuingDistributionPointOidEvE3oid = internal constant [3 x i8] c"U\1D\1C", align 1

@_ZN3net20ParsedCrlTbsCertListC1Ev = hidden unnamed_addr alias void (%"struct.net::ParsedCrlTbsCertList"*), void (%"struct.net::ParsedCrlTbsCertList"*)* @_ZN3net20ParsedCrlTbsCertListC2Ev
@_ZN3net20ParsedCrlTbsCertListD1Ev = hidden unnamed_addr alias void (%"struct.net::ParsedCrlTbsCertList"*), void (%"struct.net::ParsedCrlTbsCertList"*)* @_ZN3net20ParsedCrlTbsCertListD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net23ParseCrlCertificateListERKNS_3der5InputEPS1_S4_PNS0_9BitStringE(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"*, %"class.net::der::Input"*, %"class.net::der::BitString"*) local_unnamed_addr #0 {
  %5 = alloca %"class.net::der::Parser", align 8
  %6 = alloca %"class.net::der::Parser", align 8
  %7 = bitcast %"class.net::der::Parser"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = bitcast %"class.net::der::Parser"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %5, %"class.net::der::Input"* dereferenceable(16) %0) #11
  %9 = bitcast %"class.net::der::Parser"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = bitcast %"class.net::der::Parser"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %6) #11
  %11 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %5, %"class.net::der::Parser"* nonnull %6) #11
  br i1 %11, label %12, label %23

12:                                               ; preds = %4
  %13 = call zeroext i1 @_ZN3net3der6Parser10ReadRawTLVEPNS0_5InputE(%"class.net::der::Parser"* nonnull %6, %"class.net::der::Input"* %1) #11
  br i1 %13, label %14, label %23

14:                                               ; preds = %12
  %15 = call zeroext i1 @_ZN3net3der6Parser10ReadRawTLVEPNS0_5InputE(%"class.net::der::Parser"* nonnull %6, %"class.net::der::Input"* %2) #11
  br i1 %15, label %16, label %23

16:                                               ; preds = %14
  %17 = call zeroext i1 @_ZN3net3der6Parser13ReadBitStringEPNS0_9BitStringE(%"class.net::der::Parser"* nonnull %6, %"class.net::der::BitString"* %3) #11
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %6) #11
  br i1 %19, label %23, label %20

20:                                               ; preds = %18
  %21 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %5) #11
  %22 = xor i1 %21, true
  br label %23

23:                                               ; preds = %20, %18, %16, %14, %12, %4
  %24 = phi i1 [ false, %4 ], [ false, %12 ], [ false, %14 ], [ false, %16 ], [ false, %18 ], [ %22, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  ret i1 %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"*, %"class.net::der::Input"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"*) unnamed_addr #2

declare zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"*, %"class.net::der::Parser"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3net3der6Parser10ReadRawTLVEPNS0_5InputE(%"class.net::der::Parser"*, %"class.net::der::Input"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3net3der6Parser13ReadBitStringEPNS0_9BitStringE(%"class.net::der::Parser"*, %"class.net::der::BitString"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net19ParseCrlTbsCertListERKNS_3der5InputEPNS_20ParsedCrlTbsCertListE(%"class.net::der::Input"* dereferenceable(16), %"struct.net::ParsedCrlTbsCertList"*) local_unnamed_addr #0 {
  %3 = alloca %"class.net::der::Parser", align 8
  %4 = alloca %"class.net::der::Parser", align 8
  %5 = alloca %"class.absl::optional.0", align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.net::der::Input", align 8
  %9 = alloca i64, align 8
  %10 = bitcast i64* %9 to %"struct.net::der::GeneralizedTime"*
  %11 = alloca %"class.net::der::Input", align 8
  %12 = alloca i32, align 4
  %13 = alloca %"class.net::der::Input", align 8
  %14 = bitcast %"class.net::der::Parser"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  %15 = bitcast %"class.net::der::Parser"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %3, %"class.net::der::Input"* dereferenceable(16) %0) #11
  %16 = bitcast %"class.net::der::Parser"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #11
  %17 = bitcast %"class.net::der::Parser"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %4) #11
  %18 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %3, %"class.net::der::Parser"* nonnull %4) #11
  br i1 %18, label %19, label %123

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false)
  store i8 0, i8* %20, align 8
  %21 = call zeroext i1 @_ZN3net3der6Parser15ReadOptionalTagEjPN4absl8optionalINS0_5InputEEE(%"class.net::der::Parser"* nonnull %4, i32 2, %"class.absl::optional.0"* nonnull %5) #11
  br i1 %21, label %22, label %121

22:                                               ; preds = %19
  %23 = load i8, i8* %20, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %35, label %25

25:                                               ; preds = %22
  %26 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  store i64 -6148914691236517206, i64* %6, align 8
  %27 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %28 = call zeroext i1 @_ZN3net3der11ParseUint64ERKNS0_5InputEPm(%"class.net::der::Input"* dereferenceable(16) %27, i64* nonnull %6) #11
  %29 = load i64, i64* %6, align 8
  %30 = icmp eq i64 %29, 1
  %31 = and i1 %28, %30
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %1, i64 0, i32 0
  store i32 1, i32* %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  br label %37

34:                                               ; preds = %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  br label %121

35:                                               ; preds = %22
  %36 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %1, i64 0, i32 0
  store i32 0, i32* %36, align 8
  br label %37

37:                                               ; preds = %32, %35
  %38 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %1, i64 0, i32 1
  %39 = call zeroext i1 @_ZN3net3der6Parser10ReadRawTLVEPNS0_5InputE(%"class.net::der::Parser"* nonnull %4, %"class.net::der::Input"* %38) #11
  br i1 %39, label %40, label %121

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %1, i64 0, i32 2
  %42 = call zeroext i1 @_ZN3net3der6Parser10ReadRawTLVEPNS0_5InputE(%"class.net::der::Parser"* nonnull %4, %"class.net::der::Input"* %41) #11
  br i1 %42, label %43, label %121

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %1, i64 0, i32 3
  %45 = call zeroext i1 @_ZN3net24ReadUTCOrGeneralizedTimeEPNS_3der6ParserEPNS0_15GeneralizedTimeE(%"class.net::der::Parser"* nonnull %4, %"struct.net::der::GeneralizedTime"* %44) #11
  br i1 %45, label %46, label %121

46:                                               ; preds = %43
  %47 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47) #11
  store i32 -1431655766, i32* %7, align 4
  %48 = bitcast %"class.net::der::Input"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #11
  %49 = bitcast %"class.net::der::Input"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %8) #11
  %50 = call zeroext i1 @_ZN3net3der6Parser15PeekTagAndValueEPjPNS0_5InputE(%"class.net::der::Parser"* nonnull %4, i32* nonnull %7, %"class.net::der::Input"* nonnull %8) #11
  br i1 %50, label %51, label %72

51:                                               ; preds = %46
  %52 = load i32, i32* %7, align 4
  %53 = add i32 %52, -23
  %54 = icmp ult i32 %53, 2
  br i1 %54, label %55, label %72

55:                                               ; preds = %51
  %56 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  store i64 -6148914691236517206, i64* %9, align 8
  %57 = call zeroext i1 @_ZN3net24ReadUTCOrGeneralizedTimeEPNS_3der6ParserEPNS0_15GeneralizedTimeE(%"class.net::der::Parser"* nonnull %4, %"struct.net::der::GeneralizedTime"* nonnull %10) #11
  br i1 %57, label %58, label %71

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %60 = load i8, i8* %59, align 2, !range !2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %64 = bitcast %"struct.net::der::GeneralizedTime"* %63 to i64*
  %65 = load i64, i64* %9, align 8
  store i64 %65, i64* %64, align 2
  br label %70

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %68 = bitcast %union.anon* %67 to i64*
  %69 = load i64, i64* %9, align 8
  store i64 %69, i64* %68, align 2
  store i8 1, i8* %59, align 2
  br label %70

70:                                               ; preds = %62, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  br label %74

71:                                               ; preds = %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  br label %119

72:                                               ; preds = %51, %46
  %73 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %73, align 2
  br label %74

74:                                               ; preds = %70, %72
  %75 = bitcast %"class.net::der::Input"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #11
  %76 = bitcast %"class.net::der::Input"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %11) #11
  %77 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %77) #11
  store i32 -1431655766, i32* %12, align 4
  %78 = call zeroext i1 @_ZN3net3der6Parser15PeekTagAndValueEPjPNS0_5InputE(%"class.net::der::Parser"* nonnull %4, i32* nonnull %12, %"class.net::der::Input"* nonnull %11) #11
  %79 = load i32, i32* %12, align 4
  %80 = icmp eq i32 %79, 536870928
  %81 = and i1 %78, %80
  br i1 %81, label %82, label %98

82:                                               ; preds = %74
  %83 = bitcast %"class.net::der::Input"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #11
  %84 = bitcast %"class.net::der::Input"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %13) #11
  %85 = call zeroext i1 @_ZN3net3der6Parser10ReadRawTLVEPNS0_5InputE(%"class.net::der::Parser"* nonnull %4, %"class.net::der::Input"* nonnull %13) #11
  br i1 %85, label %86, label %97

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %88 = load i8, i8* %87, align 8, !range !2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %92 = bitcast %"class.net::der::Input"* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* nonnull align 8 %83, i64 16, i1 false) #11
  br label %96

93:                                               ; preds = %86
  %94 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %95 = bitcast %union.anon.4* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* nonnull align 8 %83, i64 16, i1 false) #11
  store i8 1, i8* %87, align 8
  br label %96

96:                                               ; preds = %90, %93
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #11
  br label %100

97:                                               ; preds = %82
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #11
  br label %117

98:                                               ; preds = %74
  %99 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %99, align 8
  br label %100

100:                                              ; preds = %96, %98
  %101 = call i32 @_ZN3net3der26ContextSpecificConstructedEh(i8 zeroext 0) #11
  %102 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %1, i64 0, i32 6
  %103 = call zeroext i1 @_ZN3net3der6Parser15ReadOptionalTagEjPN4absl8optionalINS0_5InputEEE(%"class.net::der::Parser"* nonnull %4, i32 %101, %"class.absl::optional.0"* %102) #11
  br i1 %103, label %104, label %117

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %102, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %112, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %1, i64 0, i32 0
  %110 = load i32, i32* %109, align 8
  %111 = icmp eq i32 %110, 1
  br i1 %111, label %112, label %117

112:                                              ; preds = %104, %108
  %113 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %4) #11
  br i1 %113, label %117, label %114

114:                                              ; preds = %112
  %115 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %3) #11
  %116 = xor i1 %115, true
  br label %117

117:                                              ; preds = %114, %112, %108, %100, %97
  %118 = phi i1 [ false, %97 ], [ false, %100 ], [ false, %108 ], [ false, %112 ], [ %116, %114 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %77) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #11
  br label %119

119:                                              ; preds = %71, %117
  %120 = phi i1 [ %118, %117 ], [ false, %71 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #11
  br label %121

121:                                              ; preds = %43, %40, %37, %34, %19, %119
  %122 = phi i1 [ %120, %119 ], [ false, %34 ], [ false, %19 ], [ false, %37 ], [ false, %40 ], [ false, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #11
  br label %123

123:                                              ; preds = %2, %121
  %124 = phi i1 [ %122, %121 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  ret i1 %124
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZN3net3der6Parser15ReadOptionalTagEjPN4absl8optionalINS0_5InputEEE(%"class.net::der::Parser"*, i32, %"class.absl::optional.0"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3net3der11ParseUint64ERKNS0_5InputEPm(%"class.net::der::Input"* dereferenceable(16), i64*) local_unnamed_addr #2

declare zeroext i1 @_ZN3net24ReadUTCOrGeneralizedTimeEPNS_3der6ParserEPNS0_15GeneralizedTimeE(%"class.net::der::Parser"*, %"struct.net::der::GeneralizedTime"*) local_unnamed_addr #2

declare void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"*) unnamed_addr #2

declare zeroext i1 @_ZN3net3der6Parser15PeekTagAndValueEPjPNS0_5InputE(%"class.net::der::Parser"*, i32*, %"class.net::der::Input"*) local_unnamed_addr #2

declare i32 @_ZN3net3der26ContextSpecificConstructedEh(i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net29ParseIssuingDistributionPointERKNS_3der5InputEPNSt3__110unique_ptrINS_12GeneralNamesENS4_14default_deleteIS6_EEEEPNS_18ContainedCertsTypeE(%"class.net::der::Input"* dereferenceable(16), %"class.std::__1::unique_ptr"* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %4 = alloca %"class.net::der::Parser", align 8
  %5 = alloca %"class.net::der::Parser", align 8
  %6 = alloca %"class.absl::optional.0", align 8
  %7 = alloca %"class.net::der::Parser", align 8
  %8 = alloca %"class.absl::optional.0", align 8
  %9 = alloca %"class.net::CertErrors", align 8
  %10 = alloca %"class.absl::optional.0", align 8
  %11 = alloca i8, align 1
  %12 = alloca %"class.absl::optional.0", align 8
  %13 = alloca i8, align 1
  %14 = bitcast %"class.net::der::Parser"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  %15 = bitcast %"class.net::der::Parser"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %4, %"class.net::der::Input"* dereferenceable(16) %0) #11
  %16 = bitcast %"class.net::der::Parser"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #11
  %17 = bitcast %"class.net::der::Parser"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %5) #11
  %18 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %4, %"class.net::der::Parser"* nonnull %5) #11
  br i1 %18, label %19, label %102

19:                                               ; preds = %3
  %20 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %5) #11
  br i1 %20, label %21, label %102

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  store i8 0, i8* %22, align 8
  %23 = call zeroext i1 @_ZN3net3der6Parser15ReadOptionalTagEjPN4absl8optionalINS0_5InputEEE(%"class.net::der::Parser"* nonnull %5, i32 -1610612736, %"class.absl::optional.0"* nonnull %6) #11
  br i1 %23, label %24, label %100

24:                                               ; preds = %21
  %25 = load i8, i8* %22, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %59, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.net::der::Parser"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #11
  %29 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %30 = bitcast %"class.net::der::Parser"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %7, %"class.net::der::Input"* dereferenceable(16) %29) #11
  %31 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false)
  store i8 0, i8* %31, align 8
  %32 = call zeroext i1 @_ZN3net3der6Parser15ReadOptionalTagEjPN4absl8optionalINS0_5InputEEE(%"class.net::der::Parser"* nonnull %7, i32 -1610612736, %"class.absl::optional.0"* nonnull %8) #11
  %33 = load i8, i8* %31, align 8
  %34 = icmp ne i8 %33, 0
  %35 = and i1 %32, %34
  br i1 %35, label %36, label %58

36:                                               ; preds = %27
  %37 = bitcast %"class.net::CertErrors"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #11
  %38 = bitcast %"class.net::CertErrors"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 24, i1 false)
  call void @_ZN3net10CertErrorsC1Ev(%"class.net::CertErrors"* nonnull %9) #11
  %39 = load i8, i8* %31, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %36
  call void @llvm.trap() #11
  unreachable

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %44 = call %"struct.net::GeneralNames"* @_ZN3net12GeneralNames15CreateFromValueERKNS_3der5InputEPNS_10CertErrorsE(%"class.net::der::Input"* dereferenceable(16) %43, %"class.net::CertErrors"* nonnull %9) #11
  %45 = ptrtoint %"struct.net::GeneralNames"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %47 = load %"struct.net::GeneralNames"*, %"struct.net::GeneralNames"** %46, align 8
  %48 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  store i64 %45, i64* %48, align 8
  %49 = icmp eq %"struct.net::GeneralNames"* %47, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %42
  call void @_ZN3net12GeneralNamesD1Ev(%"struct.net::GeneralNames"* nonnull %47) #11
  %51 = bitcast %"struct.net::GeneralNames"* %47 to i8*
  call void @_ZdlPv(i8* %51) #12
  %52 = load %"struct.net::GeneralNames"*, %"struct.net::GeneralNames"** %46, align 8
  br label %53

53:                                               ; preds = %50, %42
  %54 = phi %"struct.net::GeneralNames"* [ %52, %50 ], [ %44, %42 ]
  %55 = icmp eq %"struct.net::GeneralNames"* %54, null
  br i1 %55, label %99, label %56

56:                                               ; preds = %53
  %57 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %7) #11
  call void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #11
  br i1 %57, label %100, label %59

58:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #11
  br label %100

59:                                               ; preds = %56, %24
  store i32 0, i32* %2, align 4
  %60 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 24, i1 false)
  store i8 0, i8* %60, align 8
  %61 = call zeroext i1 @_ZN3net3der6Parser15ReadOptionalTagEjPN4absl8optionalINS0_5InputEEE(%"class.net::der::Parser"* nonnull %5, i32 -2147483647, %"class.absl::optional.0"* nonnull %10) #11
  br i1 %61, label %62, label %97

62:                                               ; preds = %59
  %63 = load i8, i8* %60, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %74, label %65

65:                                               ; preds = %62
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #11
  store i8 -86, i8* %11, align 1
  %66 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %67 = call zeroext i1 @_ZN3net3der9ParseBoolERKNS0_5InputEPb(%"class.net::der::Input"* dereferenceable(16) %66, i8* nonnull %11) #11
  %68 = xor i1 %67, true
  %69 = load i8, i8* %11, align 1
  %70 = icmp eq i8 %69, 0
  %71 = or i1 %70, %68
  br i1 %71, label %73, label %72

72:                                               ; preds = %65
  store i32 1, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #11
  br label %74

73:                                               ; preds = %65
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #11
  br label %97

74:                                               ; preds = %62, %72
  %75 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 -86, i64 24, i1 false)
  store i8 0, i8* %75, align 8
  %76 = call zeroext i1 @_ZN3net3der6Parser15ReadOptionalTagEjPN4absl8optionalINS0_5InputEEE(%"class.net::der::Parser"* nonnull %5, i32 -2147483646, %"class.absl::optional.0"* nonnull %12) #11
  br i1 %76, label %77, label %95

77:                                               ; preds = %74
  %78 = load i8, i8* %75, align 8, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %92, label %80

80:                                               ; preds = %77
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #11
  store i8 -86, i8* %13, align 1
  %81 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %82 = call zeroext i1 @_ZN3net3der9ParseBoolERKNS0_5InputEPb(%"class.net::der::Input"* dereferenceable(16) %81, i8* nonnull %13) #11
  %83 = xor i1 %82, true
  %84 = load i8, i8* %13, align 1
  %85 = icmp eq i8 %84, 0
  %86 = or i1 %85, %83
  br i1 %86, label %91, label %87

87:                                               ; preds = %80
  %88 = load i32, i32* %2, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  store i32 2, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #11
  br label %92

91:                                               ; preds = %80, %87
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #11
  br label %95

92:                                               ; preds = %77, %90
  %93 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %5) #11
  %94 = xor i1 %93, true
  br label %95

95:                                               ; preds = %92, %91, %74
  %96 = phi i1 [ false, %91 ], [ false, %74 ], [ %94, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #11
  br label %97

97:                                               ; preds = %73, %59, %95
  %98 = phi i1 [ %96, %95 ], [ false, %73 ], [ false, %59 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #11
  br label %100

99:                                               ; preds = %53
  call void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #11
  br label %100

100:                                              ; preds = %56, %99, %58, %21, %97
  %101 = phi i1 [ %98, %97 ], [ false, %56 ], [ false, %21 ], [ false, %58 ], [ false, %99 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #11
  br label %102

102:                                              ; preds = %19, %3, %100
  %103 = phi i1 [ %101, %100 ], [ false, %3 ], [ false, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  ret i1 %103
}

declare void @_ZN3net10CertErrorsC1Ev(%"class.net::CertErrors"*) unnamed_addr #2

declare %"struct.net::GeneralNames"* @_ZN3net12GeneralNames15CreateFromValueERKNS_3der5InputEPNS_10CertErrorsE(%"class.net::der::Input"* dereferenceable(16), %"class.net::CertErrors"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"*) unnamed_addr #3

declare zeroext i1 @_ZN3net3der9ParseBoolERKNS0_5InputEPb(%"class.net::der::Input"* dereferenceable(16), i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19GetCRLStatusForCertERKNS_3der5InputENS_10CrlVersionERKN4absl8optionalIS1_EE(%"class.net::der::Input"* dereferenceable(16), i32, %"class.absl::optional.0"* dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"class.net::der::Parser", align 8
  %5 = alloca %"class.net::der::Parser", align 8
  %6 = alloca %"class.net::der::Parser", align 8
  %7 = alloca %"class.net::der::Input", align 8
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"struct.net::der::GeneralizedTime"*
  %10 = alloca %"class.net::der::Input", align 8
  %11 = alloca %"class.std::__1::map", align 8
  %12 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %118, label %15

15:                                               ; preds = %3
  %16 = bitcast %"class.net::der::Parser"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = bitcast %"class.net::der::Parser"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %4, %"class.net::der::Input"* dereferenceable(16) %17) #11
  %19 = bitcast %"class.net::der::Parser"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %20 = bitcast %"class.net::der::Parser"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %5) #11
  %21 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %4, %"class.net::der::Parser"* nonnull %5) #11
  br i1 %21, label %22, label %116

22:                                               ; preds = %15
  %23 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %5) #11
  br i1 %23, label %24, label %116

24:                                               ; preds = %22
  %25 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %4) #11
  br i1 %25, label %116, label %26

26:                                               ; preds = %24
  %27 = bitcast %"class.net::der::Parser"* %6 to i8*
  %28 = bitcast %"class.net::der::Input"* %7 to i8*
  %29 = bitcast i64* %8 to i8*
  %30 = icmp eq i32 %1, 1
  %31 = bitcast %"class.net::der::Input"* %10 to i8*
  %32 = bitcast %"class.std::__1::map"* %11 to i8*
  %33 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %11, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %11, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %36 = bitcast %"class.std::__1::__tree_node_base"** %34 to i8*
  %37 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %11, i64 0, i32 0
  %38 = bitcast %"class.std::__1::__tree_end_node"* %35 to %"class.std::__1::__tree_node"**
  %39 = bitcast %"class.net::der::Parser"* %6 to i8*
  %40 = bitcast %"class.net::der::Input"* %7 to i8*
  %41 = bitcast %"class.net::der::Input"* %10 to i8*
  %42 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %5) #11
  br i1 %42, label %43, label %116

43:                                               ; preds = %26, %108
  %44 = phi i8 [ %110, %108 ], [ 0, %26 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %6) #11
  %45 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %5, %"class.net::der::Parser"* nonnull %6) #11
  br i1 %45, label %47, label %46

46:                                               ; preds = %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #11
  br label %116

47:                                               ; preds = %43
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %7) #11
  %48 = call zeroext i1 @_ZN3net3der6Parser7ReadTagEjPNS0_5InputE(%"class.net::der::Parser"* nonnull %6, i32 2, %"class.net::der::Input"* nonnull %7) #11
  br i1 %48, label %50, label %49

49:                                               ; preds = %47
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #11
  br label %116

50:                                               ; preds = %47
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  store i64 -6148914691236517206, i64* %8, align 8
  %51 = call zeroext i1 @_ZN3net24ReadUTCOrGeneralizedTimeEPNS_3der6ParserEPNS0_15GeneralizedTimeE(%"class.net::der::Parser"* nonnull %6, %"struct.net::der::GeneralizedTime"* nonnull %9) #11
  br i1 %51, label %52, label %115

52:                                               ; preds = %50
  %53 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %6) #11
  br i1 %53, label %54, label %102

54:                                               ; preds = %52
  br i1 %30, label %55, label %115

55:                                               ; preds = %54
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %10) #11
  %56 = call zeroext i1 @_ZN3net3der6Parser10ReadRawTLVEPNS0_5InputE(%"class.net::der::Parser"* nonnull %6, %"class.net::der::Input"* nonnull %10) #11
  br i1 %56, label %58, label %57

57:                                               ; preds = %55
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #11
  br label %115

58:                                               ; preds = %55
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %35, %"class.std::__1::__tree_end_node"** %33, align 8
  %59 = call zeroext i1 @_ZN3net15ParseExtensionsERKNS_3der5InputEPNSt3__13mapIS1_NS_15ParsedExtensionENS4_4lessIS1_EENS4_9allocatorINS4_4pairIS2_S6_EEEEEE(%"class.net::der::Input"* nonnull dereferenceable(16) %10, %"class.std::__1::map"* nonnull %11) #11
  br i1 %59, label %60, label %104

60:                                               ; preds = %58
  %61 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %33, align 8
  %62 = icmp eq %"class.std::__1::__tree_end_node"* %61, %35
  br i1 %62, label %100, label %63

63:                                               ; preds = %60, %97
  %64 = phi %"class.std::__1::__tree_end_node"* [ %98, %97 ], [ %61, %60 ]
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 10
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i8*
  %67 = load i8, i8* %66, align 8, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %106

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 1, i32 0
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  %72 = icmp eq %"class.std::__1::__tree_node_base"* %71, null
  br i1 %72, label %73, label %81

73:                                               ; preds = %69
  %74 = bitcast %"class.std::__1::__tree_end_node"* %64 to %"class.std::__1::__tree_node_base"*
  %75 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 2
  %76 = bitcast %"class.std::__1::__tree_end_node"* %75 to %"class.std::__1::__tree_end_node"**
  %77 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %77, i64 0, i32 0
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  %80 = icmp eq %"class.std::__1::__tree_node_base"* %79, %74
  br i1 %80, label %97, label %88

81:                                               ; preds = %69, %81
  %82 = phi %"class.std::__1::__tree_node_base"* [ %84, %81 ], [ %71, %69 ]
  %83 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %82, i64 0, i32 0, i32 0
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  %85 = icmp eq %"class.std::__1::__tree_node_base"* %84, null
  br i1 %85, label %86, label %81

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %82, i64 0, i32 0
  br label %97

88:                                               ; preds = %73, %88
  %89 = phi %"class.std::__1::__tree_end_node"** [ %92, %88 ], [ %76, %73 ]
  %90 = bitcast %"class.std::__1::__tree_end_node"** %89 to %"class.std::__1::__tree_node_base"**
  %91 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %90, align 8
  %92 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %91, i64 0, i32 2
  %93 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %92, align 8
  %94 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %93, i64 0, i32 0
  %95 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %94, align 8
  %96 = icmp eq %"class.std::__1::__tree_node_base"* %95, %91
  br i1 %96, label %97, label %88

97:                                               ; preds = %88, %73, %86
  %98 = phi %"class.std::__1::__tree_end_node"* [ %87, %86 ], [ %77, %73 ], [ %93, %88 ]
  %99 = icmp eq %"class.std::__1::__tree_end_node"* %98, %35
  br i1 %99, label %100, label %63

100:                                              ; preds = %97, %60
  %101 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %38, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS2_15ParsedExtensionEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* nonnull %37, %"class.std::__1::__tree_node"* %101) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #11
  br label %102

102:                                              ; preds = %100, %52
  %103 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %6) #11
  br i1 %103, label %115, label %108

104:                                              ; preds = %58
  %105 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %38, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS2_15ParsedExtensionEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* nonnull %37, %"class.std::__1::__tree_node"* %105) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #11
  br label %115

106:                                              ; preds = %63
  %107 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %38, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS2_15ParsedExtensionEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* nonnull %37, %"class.std::__1::__tree_node"* %107) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #11
  br label %115

108:                                              ; preds = %102
  %109 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* nonnull dereferenceable(16) %7, %"class.net::der::Input"* dereferenceable(16) %0) #11
  %110 = select i1 %109, i8 1, i8 %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #11
  %111 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %5) #11
  br i1 %111, label %43, label %112

112:                                              ; preds = %108
  %113 = and i8 %110, 1
  %114 = zext i8 %113 to i32
  br label %116

115:                                              ; preds = %50, %54, %102, %57, %104, %106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #11
  br label %116

116:                                              ; preds = %26, %112, %115, %49, %46, %24, %22, %15
  %117 = phi i32 [ 2, %15 ], [ 2, %22 ], [ 2, %24 ], [ 2, %46 ], [ 2, %49 ], [ 2, %115 ], [ %114, %112 ], [ 0, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #11
  br label %118

118:                                              ; preds = %3, %116
  %119 = phi i32 [ %117, %116 ], [ 0, %3 ]
  ret i32 %119
}

declare zeroext i1 @_ZN3net3der6Parser7ReadTagEjPNS0_5InputE(%"class.net::der::Parser"*, i32, %"class.net::der::Input"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3net15ParseExtensionsERKNS_3der5InputEPNSt3__13mapIS1_NS_15ParsedExtensionENS4_4lessIS1_EENS4_9allocatorINS4_4pairIS2_S6_EEEEEE(%"class.net::der::Input"* dereferenceable(16), %"class.std::__1::map"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20ParsedCrlTbsCertListC2Ev(%"struct.net::ParsedCrlTbsCertList"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %0, i64 0, i32 1
  tail call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* %3) #11
  %4 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %0, i64 0, i32 2
  tail call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* %4) #11
  %5 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %5, align 2
  %6 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %7, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net20ParsedCrlTbsCertListD2Ev(%"struct.net::ParsedCrlTbsCertList"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net8CheckCRLEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_6vectorI13scoped_refptrINS_17ParsedCertificateEENS2_9allocatorIS9_EEEEmRKNS_23ParsedDistributionPointERKNS0_4TimeERKNS0_9TimeDeltaE(i8*, i64, %"class.std::__1::vector.52"* nocapture readonly dereferenceable(24), i64, %"struct.net::ParsedDistributionPoint"* nocapture readonly dereferenceable(32), %"class.base::Time"* dereferenceable(8), %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #0 {
  %8 = alloca <2 x i64>, align 16
  %9 = bitcast <2 x i64>* %8 to %"class.net::der::Input"*
  %10 = alloca %"struct.std::__1::__less", align 1
  %11 = alloca %"struct.std::__1::__less", align 1
  %12 = alloca %"class.std::__1::vector.8", align 8
  %13 = alloca <2 x i64>, align 16
  %14 = bitcast <2 x i64>* %13 to %"class.net::der::Input"*
  %15 = alloca %"class.net::der::Parser", align 8
  %16 = alloca %"class.net::der::Input", align 8
  %17 = alloca %"class.net::CertErrors", align 8
  %18 = alloca %"class.base::BasicStringPiece", align 8
  %19 = alloca %"class.net::der::Input", align 8
  %20 = alloca %"class.net::der::Input", align 8
  %21 = alloca %"class.net::der::BitString", align 8
  %22 = alloca %"class.net::der::Input", align 8
  %23 = alloca %"struct.net::ParsedCrlTbsCertList", align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = alloca %"class.net::der::Input", align 8
  %26 = alloca <2 x i64>, align 16
  %27 = bitcast <2 x i64>* %26 to %"class.net::der::Input"*
  %28 = alloca %"class.std::__1::map", align 8
  %29 = alloca %"struct.net::ParsedExtension", align 8
  %30 = alloca %"class.net::der::Input", align 8
  %31 = alloca %"class.std::__1::unique_ptr", align 8
  %32 = alloca i32, align 4
  %33 = alloca %"class.std::__1::vector.8", align 8
  %34 = alloca %"class.std::__1::vector.8", align 8
  %35 = alloca %"class.net::der::Input", align 8
  %36 = alloca <2 x i64>, align 16
  %37 = bitcast <2 x i64>* %36 to %"class.net::der::Input"*
  %38 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %18, i64 0, i32 0
  store i8* %0, i8** %38, align 8
  %39 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %18, i64 0, i32 1
  store i64 %1, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %2, i64 0, i32 0, i32 0
  %41 = load %class.scoped_refptr*, %class.scoped_refptr** %40, align 8
  %42 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %41, i64 %3, i32 0
  %43 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %42, align 8
  %44 = bitcast %"class.net::der::Input"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #11
  %45 = bitcast %"class.net::der::Input"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %19) #11
  %46 = bitcast %"class.net::der::Input"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #11
  %47 = bitcast %"class.net::der::Input"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %20) #11
  %48 = bitcast %"class.net::der::BitString"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #11
  %49 = getelementptr inbounds %"class.net::der::BitString", %"class.net::der::BitString"* %21, i64 0, i32 1
  %50 = getelementptr inbounds %"class.net::der::BitString", %"class.net::der::BitString"* %21, i64 0, i32 0
  %51 = bitcast %"class.net::der::BitString"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %50) #11
  store i8 0, i8* %49, align 8
  %52 = bitcast %"class.net::der::Input"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #11
  call void @_ZN3net3der5InputC1ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::der::Input"* nonnull %22, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %18) #11
  %53 = call zeroext i1 @_ZN3net23ParseCrlCertificateListERKNS_3der5InputEPS1_S4_PNS0_9BitStringE(%"class.net::der::Input"* nonnull dereferenceable(16) %22, %"class.net::der::Input"* nonnull %19, %"class.net::der::Input"* nonnull %20, %"class.net::der::BitString"* nonnull %21)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #11
  br i1 %53, label %54, label %376

54:                                               ; preds = %7
  %55 = bitcast %"struct.net::ParsedCrlTbsCertList"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %55) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 112, i1 false)
  %56 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %23, i64 0, i32 0
  store i32 0, i32* %56, align 8
  %57 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %23, i64 0, i32 1
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* %57) #11
  %58 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %23, i64 0, i32 2
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* %58) #11
  %59 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %23, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %59, align 8
  %60 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %23, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %60, align 8
  %61 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %23, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %61, align 8
  %62 = call zeroext i1 @_ZN3net19ParseCrlTbsCertListERKNS_3der5InputEPNS_20ParsedCrlTbsCertListE(%"class.net::der::Input"* nonnull dereferenceable(16) %19, %"struct.net::ParsedCrlTbsCertList"* nonnull %23)
  br i1 %62, label %63, label %374

63:                                               ; preds = %54
  %64 = call zeroext i1 @_ZN3net18SignatureAlgorithm12IsEquivalentERKNS_3der5InputES4_(%"class.net::der::Input"* nonnull dereferenceable(16) %20, %"class.net::der::Input"* dereferenceable(16) %57) #11
  br i1 %64, label %65, label %374

65:                                               ; preds = %63
  %66 = call %"class.net::SignatureAlgorithm"* @_ZN3net18SignatureAlgorithm6CreateERKNS_3der5InputEPNS_10CertErrorsE(%"class.net::der::Input"* nonnull dereferenceable(16) %20, %"class.net::CertErrors"* null) #11
  %67 = icmp eq %"class.net::SignatureAlgorithm"* %66, null
  br i1 %67, label %374, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %23, i64 0, i32 3
  %70 = load i8, i8* %59, align 8, !range !2
  %71 = icmp eq i8 %70, 0
  %72 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %23, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %73 = select i1 %71, %"struct.net::der::GeneralizedTime"* null, %"struct.net::der::GeneralizedTime"* %72
  %74 = call zeroext i1 @_ZN3net24CheckRevocationDateValidERKNS_3der15GeneralizedTimeEPS2_RKN4base4TimeERKNS5_9TimeDeltaE(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %69, %"struct.net::der::GeneralizedTime"* %73, %"class.base::Time"* dereferenceable(8) %5, %"class.base::TimeDelta"* dereferenceable(8) %6) #11
  br i1 %74, label %75, label %371

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %4, i64 0, i32 1
  %77 = load i8, i8* %76, align 8, !range !2
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %79, label %371

79:                                               ; preds = %75
  %80 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %80) #11
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 0, i64 24, i1 false) #11
  %82 = bitcast %"class.net::der::Parser"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 -86, i64 24, i1 false) #11
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %15, %"class.net::der::Input"* dereferenceable(16) %58) #11
  %83 = bitcast %"class.net::der::Input"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 -86, i64 16, i1 false) #11
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %16) #11
  %84 = bitcast %"class.net::CertErrors"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 -86, i64 24, i1 false) #11
  call void @_ZN3net10CertErrorsC1Ev(%"class.net::CertErrors"* nonnull %17) #11
  %85 = call zeroext i1 @_ZN3net3der6Parser7ReadTagEjPNS0_5InputE(%"class.net::der::Parser"* nonnull %15, i32 536870928, %"class.net::der::Input"* nonnull %16) #11
  br i1 %85, label %86, label %361

86:                                               ; preds = %79
  %87 = call zeroext i1 @_ZN3net13NormalizeNameERKNS_3der5InputEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPNS_10CertErrorsE(%"class.net::der::Input"* nonnull dereferenceable(16) %16, %"class.std::__1::basic_string"* nonnull %24, %"class.net::CertErrors"* nonnull %17) #11
  br i1 %87, label %88, label %360

88:                                               ; preds = %86
  %89 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %15) #11
  call void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #11
  br i1 %89, label %362, label %90

90:                                               ; preds = %88
  %91 = bitcast %"class.net::der::Input"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91) #11
  call void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"* nonnull %25, %"class.std::__1::basic_string"* nonnull %24) #11
  %92 = bitcast <2 x i64>* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #11
  %93 = bitcast <2 x i64>* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93)
  %94 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %43, i64 0, i32 9
  call void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"* nonnull %14, %"class.std::__1::basic_string"* %94) #11
  %95 = load <2 x i64>, <2 x i64>* %13, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93)
  store <2 x i64> %95, <2 x i64>* %26, align 16
  %96 = call zeroext i1 @_ZN3net3derneERKNS0_5InputES3_(%"class.net::der::Input"* nonnull dereferenceable(16) %25, %"class.net::der::Input"* nonnull dereferenceable(16) %27) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #11
  br i1 %96, label %362, label %97

97:                                               ; preds = %90
  %98 = load i8, i8* %61, align 8, !range !2
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %315, label %100

100:                                              ; preds = %97
  %101 = bitcast %"class.std::__1::map"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #11
  %102 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %28, i64 0, i32 0, i32 0
  %103 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %28, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %104 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %28, i64 0, i32 0, i32 1, i32 0, i32 0
  %105 = bitcast %"class.std::__1::__tree_node_base"** %103 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %104, %"class.std::__1::__tree_end_node"** %102, align 8
  %106 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %23, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %107 = call zeroext i1 @_ZN3net15ParseExtensionsERKNS_3der5InputEPNSt3__13mapIS1_NS_15ParsedExtensionENS4_4lessIS1_EENS4_9allocatorINS4_4pairIS2_S6_EEEEEE(%"class.net::der::Input"* dereferenceable(16) %106, %"class.std::__1::map"* nonnull %28) #11
  br i1 %107, label %108, label %309

108:                                              ; preds = %100
  %109 = bitcast %"struct.net::ParsedExtension"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %109) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 -86, i64 40, i1 false)
  %110 = getelementptr inbounds %"struct.net::ParsedExtension", %"struct.net::ParsedExtension"* %29, i64 0, i32 0
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %110) #11
  %111 = getelementptr inbounds %"struct.net::ParsedExtension", %"struct.net::ParsedExtension"* %29, i64 0, i32 1
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* %111) #11
  %112 = getelementptr inbounds %"struct.net::ParsedExtension", %"struct.net::ParsedExtension"* %29, i64 0, i32 2
  store i8 0, i8* %112, align 8
  %113 = bitcast %"class.net::der::Input"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %113) #11
  %114 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %30, i64 0, i32 0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZZN3net12_GLOBAL__N_127IssuingDistributionPointOidEvE3oid, i64 0, i64 0), i8** %114, align 8
  %115 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %30, i64 0, i32 1
  store i64 3, i64* %115, align 8
  %116 = call zeroext i1 @_ZN3net16ConsumeExtensionERKNS_3der5InputEPNSt3__13mapIS1_NS_15ParsedExtensionENS4_4lessIS1_EENS4_9allocatorINS4_4pairIS2_S6_EEEEEEPS6_(%"class.net::der::Input"* nonnull dereferenceable(16) %30, %"class.std::__1::map"* nonnull %28, %"struct.net::ParsedExtension"* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %113) #11
  br i1 %116, label %117, label %267

117:                                              ; preds = %108
  %118 = bitcast %"class.std::__1::unique_ptr"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #11
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %31, i64 0, i32 0, i32 0, i32 0
  %120 = bitcast %"class.std::__1::unique_ptr"* %31 to i64*
  store i64 0, i64* %120, align 8
  %121 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %121) #11
  store i32 -1431655766, i32* %32, align 4
  %122 = call zeroext i1 @_ZN3net29ParseIssuingDistributionPointERKNS_3der5InputEPNSt3__110unique_ptrINS_12GeneralNamesENS4_14default_deleteIS6_EEEEPNS_18ContainedCertsTypeE(%"class.net::der::Input"* dereferenceable(16) %111, %"class.std::__1::unique_ptr"* nonnull %31, i32* nonnull %32)
  %123 = load %"struct.net::GeneralNames"*, %"struct.net::GeneralNames"** %119, align 8
  br i1 %122, label %124, label %258

124:                                              ; preds = %117
  %125 = icmp eq %"struct.net::GeneralNames"* %123, null
  br i1 %125, label %235, label %126

126:                                              ; preds = %124
  %127 = bitcast %"class.std::__1::vector.8"* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %127, i8 0, i64 24, i1 false) #11
  %128 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %4, i64 0, i32 0, i32 0, i32 1
  %129 = bitcast %"class.base::BasicStringPiece"** %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"struct.net::ParsedDistributionPoint"* %4 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = sub i64 %130, %132
  %134 = ashr exact i64 %133, 4
  %135 = icmp eq i64 %133, 0
  br i1 %135, label %159, label %136

136:                                              ; preds = %126
  %137 = icmp ugt i64 %134, 1152921504606846975
  br i1 %137, label %138, label %140

138:                                              ; preds = %136
  %139 = bitcast %"class.std::__1::vector.8"* %33 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %139) #13
  unreachable

140:                                              ; preds = %136
  %141 = call i8* @_Znwm(i64 %133) #12
  %142 = bitcast i8* %141 to %"class.base::BasicStringPiece"*
  %143 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %33, i64 0, i32 0, i32 1
  %144 = bitcast %"class.base::BasicStringPiece"** %143 to i8**
  store i8* %141, i8** %144, align 8
  %145 = bitcast %"class.std::__1::vector.8"* %33 to i8**
  store i8* %141, i8** %145, align 8
  %146 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %142, i64 %134
  %147 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %33, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.base::BasicStringPiece"* %146, %"class.base::BasicStringPiece"** %147, align 8
  %148 = bitcast %"class.base::BasicStringPiece"** %143 to i64*
  %149 = ptrtoint i8* %141 to i64
  %150 = icmp sgt i64 %133, 0
  br i1 %150, label %151, label %156

151:                                              ; preds = %140
  %152 = lshr exact i64 %133, 4
  %153 = inttoptr i64 %132 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %141, i8* align 8 %153, i64 %133, i1 false) #11
  %154 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %142, i64 %152
  %155 = ptrtoint %"class.base::BasicStringPiece"* %154 to i64
  br label %156

156:                                              ; preds = %151, %140
  %157 = phi i64 [ %155, %151 ], [ %149, %140 ]
  store i64 %157, i64* %148, align 8
  %158 = inttoptr i64 %157 to %"class.base::BasicStringPiece"*
  br label %159

159:                                              ; preds = %126, %156
  %160 = phi %"class.base::BasicStringPiece"* [ null, %126 ], [ %158, %156 ]
  %161 = phi %"class.base::BasicStringPiece"* [ null, %126 ], [ %142, %156 ]
  %162 = getelementptr inbounds %"struct.net::GeneralNames", %"struct.net::GeneralNames"* %123, i64 0, i32 6
  %163 = bitcast %"class.std::__1::vector.8"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %163, i8 0, i64 24, i1 false) #11
  %164 = getelementptr inbounds %"struct.net::GeneralNames", %"struct.net::GeneralNames"* %123, i64 0, i32 6, i32 0, i32 1
  %165 = bitcast %"class.base::BasicStringPiece"** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"class.std::__1::vector.8"* %162 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = sub i64 %166, %168
  %170 = ashr exact i64 %169, 4
  %171 = icmp eq i64 %169, 0
  br i1 %171, label %199, label %172

172:                                              ; preds = %159
  %173 = icmp ugt i64 %170, 1152921504606846975
  br i1 %173, label %174, label %176

174:                                              ; preds = %172
  %175 = bitcast %"class.std::__1::vector.8"* %34 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %175) #13
  unreachable

176:                                              ; preds = %172
  %177 = call i8* @_Znwm(i64 %169) #12
  %178 = bitcast i8* %177 to %"class.base::BasicStringPiece"*
  %179 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %34, i64 0, i32 0, i32 1
  %180 = bitcast %"class.base::BasicStringPiece"** %179 to i8**
  store i8* %177, i8** %180, align 8
  %181 = bitcast %"class.std::__1::vector.8"* %34 to i8**
  store i8* %177, i8** %181, align 8
  %182 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %178, i64 %170
  %183 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %34, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.base::BasicStringPiece"* %182, %"class.base::BasicStringPiece"** %183, align 8
  %184 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %162, i64 0, i32 0, i32 0
  %185 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %184, align 8
  %186 = load i64, i64* %165, align 8
  %187 = bitcast %"class.base::BasicStringPiece"** %179 to i64*
  %188 = ptrtoint i8* %177 to i64
  %189 = ptrtoint %"class.base::BasicStringPiece"* %185 to i64
  %190 = sub i64 %186, %189
  %191 = icmp sgt i64 %190, 0
  br i1 %191, label %192, label %197

192:                                              ; preds = %176
  %193 = lshr exact i64 %190, 4
  %194 = bitcast %"class.base::BasicStringPiece"* %185 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %177, i8* align 8 %194, i64 %190, i1 false) #11
  %195 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %178, i64 %193
  %196 = ptrtoint %"class.base::BasicStringPiece"* %195 to i64
  br label %197

197:                                              ; preds = %192, %176
  %198 = phi i64 [ %196, %192 ], [ %188, %176 ]
  store i64 %198, i64* %187, align 8
  br label %199

199:                                              ; preds = %159, %197
  %200 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %33, i64 0, i32 0, i32 0
  %201 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %33, i64 0, i32 0, i32 1
  %202 = getelementptr inbounds %"struct.std::__1::__less", %"struct.std::__1::__less"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %202) #11
  call void @_ZNSt3__16__sortIRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEvT0_SA_T_(%"class.base::BasicStringPiece"* %161, %"class.base::BasicStringPiece"* %160, %"struct.std::__1::__less"* nonnull dereferenceable(1) %11) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %202) #11
  %203 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %34, i64 0, i32 0, i32 0
  %204 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %203, align 8
  %205 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %34, i64 0, i32 0, i32 1
  %206 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %205, align 8
  %207 = getelementptr inbounds %"struct.std::__1::__less", %"struct.std::__1::__less"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %207) #11
  call void @_ZNSt3__16__sortIRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEvT0_SA_T_(%"class.base::BasicStringPiece"* %204, %"class.base::BasicStringPiece"* %206, %"struct.std::__1::__less"* nonnull dereferenceable(1) %10) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %207) #11
  %208 = bitcast %"class.std::__1::vector.8"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %208) #11
  call void @_ZN4base18STLSetIntersectionINSt3__16vectorINS_16BasicStringPieceIcNS1_11char_traitsIcEEEENS1_9allocatorIS6_EEEES9_S9_EET_RKT0_RKT1_(%"class.std::__1::vector.8"* nonnull sret %12, %"class.std::__1::vector.8"* nonnull dereferenceable(24) %33, %"class.std::__1::vector.8"* nonnull dereferenceable(24) %34) #11
  %209 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %12, i64 0, i32 0, i32 0
  %210 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %209, align 8
  %211 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %12, i64 0, i32 0, i32 1
  %212 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %211, align 8
  %213 = icmp eq %"class.base::BasicStringPiece"* %210, %212
  %214 = icmp eq %"class.base::BasicStringPiece"* %210, null
  br i1 %214, label %219, label %215

215:                                              ; preds = %199
  %216 = ptrtoint %"class.base::BasicStringPiece"* %210 to i64
  %217 = bitcast %"class.base::BasicStringPiece"** %211 to i64*
  store i64 %216, i64* %217, align 8
  %218 = bitcast %"class.base::BasicStringPiece"* %210 to i8*
  call void @_ZdlPv(i8* %218) #12
  br label %219

219:                                              ; preds = %199, %215
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %208) #11
  %220 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %203, align 8
  %221 = icmp eq %"class.base::BasicStringPiece"* %220, null
  br i1 %221, label %226, label %222

222:                                              ; preds = %219
  %223 = ptrtoint %"class.base::BasicStringPiece"* %220 to i64
  %224 = bitcast %"class.base::BasicStringPiece"** %205 to i64*
  store i64 %223, i64* %224, align 8
  %225 = bitcast %"class.base::BasicStringPiece"* %220 to i8*
  call void @_ZdlPv(i8* %225) #12
  br label %226

226:                                              ; preds = %219, %222
  %227 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %200, align 8
  %228 = icmp eq %"class.base::BasicStringPiece"* %227, null
  br i1 %228, label %233, label %229

229:                                              ; preds = %226
  %230 = ptrtoint %"class.base::BasicStringPiece"* %227 to i64
  %231 = bitcast %"class.base::BasicStringPiece"** %201 to i64*
  store i64 %230, i64* %231, align 8
  %232 = bitcast %"class.base::BasicStringPiece"* %227 to i8*
  call void @_ZdlPv(i8* %232) #12
  br label %233

233:                                              ; preds = %226, %229
  br i1 %213, label %234, label %235

234:                                              ; preds = %233
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121) #11
  store %"struct.net::GeneralNames"* null, %"struct.net::GeneralNames"** %119, align 8
  br label %261

235:                                              ; preds = %233, %124
  %236 = load i32, i32* %32, align 4
  switch i32 %236, label %257 [
    i32 1, label %237
    i32 2, label %249
  ]

237:                                              ; preds = %235
  %238 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %43, i64 0, i32 10
  %239 = load i8, i8* %238, align 8, !range !2
  %240 = icmp eq i8 %239, 0
  br i1 %240, label %245, label %241

241:                                              ; preds = %237
  %242 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %43, i64 0, i32 11, i32 0
  %243 = load i8, i8* %242, align 1, !range !2
  %244 = icmp eq i8 %243, 0
  br i1 %244, label %245, label %258

245:                                              ; preds = %237, %241
  %246 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %43, i64 0, i32 6, i32 0
  %247 = load i32, i32* %246, align 8
  %248 = icmp ult i32 %247, 2
  br i1 %248, label %258, label %257

249:                                              ; preds = %235
  %250 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %43, i64 0, i32 10
  %251 = load i8, i8* %250, align 8, !range !2
  %252 = icmp eq i8 %251, 0
  br i1 %252, label %258, label %253

253:                                              ; preds = %249
  %254 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %43, i64 0, i32 11, i32 0
  %255 = load i8, i8* %254, align 1, !range !2
  %256 = icmp eq i8 %255, 0
  br i1 %256, label %258, label %257

257:                                              ; preds = %245, %253, %235
  br label %258

258:                                              ; preds = %117, %249, %245, %253, %241, %257
  %259 = phi i32 [ 0, %257 ], [ 1, %241 ], [ 1, %253 ], [ 1, %249 ], [ 1, %245 ], [ 1, %117 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121) #11
  store %"struct.net::GeneralNames"* null, %"struct.net::GeneralNames"** %119, align 8
  %260 = icmp eq %"struct.net::GeneralNames"* %123, null
  br i1 %260, label %264, label %261

261:                                              ; preds = %234, %258
  %262 = phi i32 [ 1, %234 ], [ %259, %258 ]
  call void @_ZN3net12GeneralNamesD1Ev(%"struct.net::GeneralNames"* nonnull %123) #11
  %263 = bitcast %"struct.net::GeneralNames"* %123 to i8*
  call void @_ZdlPv(i8* %263) #12
  br label %264

264:                                              ; preds = %258, %261
  %265 = phi i32 [ %259, %258 ], [ %262, %261 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #11
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %307

267:                                              ; preds = %264, %108
  %268 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %102, align 8
  %269 = icmp eq %"class.std::__1::__tree_end_node"* %268, %104
  br i1 %269, label %307, label %270

270:                                              ; preds = %267, %304
  %271 = phi %"class.std::__1::__tree_end_node"* [ %305, %304 ], [ %268, %267 ]
  %272 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %271, i64 10
  %273 = bitcast %"class.std::__1::__tree_end_node"* %272 to i8*
  %274 = load i8, i8* %273, align 8, !range !2
  %275 = icmp eq i8 %274, 0
  br i1 %275, label %276, label %307

276:                                              ; preds = %270
  %277 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %271, i64 1, i32 0
  %278 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %277, align 8
  %279 = icmp eq %"class.std::__1::__tree_node_base"* %278, null
  br i1 %279, label %280, label %288

280:                                              ; preds = %276
  %281 = bitcast %"class.std::__1::__tree_end_node"* %271 to %"class.std::__1::__tree_node_base"*
  %282 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %271, i64 2
  %283 = bitcast %"class.std::__1::__tree_end_node"* %282 to %"class.std::__1::__tree_end_node"**
  %284 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %283, align 8
  %285 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %284, i64 0, i32 0
  %286 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %285, align 8
  %287 = icmp eq %"class.std::__1::__tree_node_base"* %286, %281
  br i1 %287, label %304, label %295

288:                                              ; preds = %276, %288
  %289 = phi %"class.std::__1::__tree_node_base"* [ %291, %288 ], [ %278, %276 ]
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %289, i64 0, i32 0, i32 0
  %291 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %290, align 8
  %292 = icmp eq %"class.std::__1::__tree_node_base"* %291, null
  br i1 %292, label %293, label %288

293:                                              ; preds = %288
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %289, i64 0, i32 0
  br label %304

295:                                              ; preds = %280, %295
  %296 = phi %"class.std::__1::__tree_end_node"** [ %299, %295 ], [ %283, %280 ]
  %297 = bitcast %"class.std::__1::__tree_end_node"** %296 to %"class.std::__1::__tree_node_base"**
  %298 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %297, align 8
  %299 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %298, i64 0, i32 2
  %300 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %299, align 8
  %301 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %300, i64 0, i32 0
  %302 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %301, align 8
  %303 = icmp eq %"class.std::__1::__tree_node_base"* %302, %298
  br i1 %303, label %304, label %295

304:                                              ; preds = %295, %280, %293
  %305 = phi %"class.std::__1::__tree_end_node"* [ %294, %293 ], [ %284, %280 ], [ %300, %295 ]
  %306 = icmp eq %"class.std::__1::__tree_end_node"* %305, %104
  br i1 %306, label %307, label %270

307:                                              ; preds = %270, %304, %267, %264
  %308 = phi i32 [ 1, %264 ], [ 0, %267 ], [ 1, %270 ], [ 0, %304 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %109) #11
  br label %309

309:                                              ; preds = %100, %307
  %310 = phi i32 [ %308, %307 ], [ 1, %100 ]
  %311 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %28, i64 0, i32 0
  %312 = bitcast %"class.std::__1::__tree_end_node"* %104 to %"class.std::__1::__tree_node"**
  %313 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %312, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS2_15ParsedExtensionEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* nonnull %311, %"class.std::__1::__tree_node"* %313) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #11
  %314 = icmp eq i32 %310, 0
  br i1 %314, label %315, label %362

315:                                              ; preds = %97, %309
  %316 = add i64 %3, 1
  %317 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %2, i64 0, i32 0, i32 1
  %318 = bitcast %class.scoped_refptr** %317 to i64*
  %319 = load i64, i64* %318, align 8
  %320 = bitcast %"class.std::__1::vector.52"* %2 to i64*
  %321 = load i64, i64* %320, align 8
  %322 = sub i64 %319, %321
  %323 = ashr exact i64 %322, 3
  %324 = icmp ult i64 %316, %323
  br i1 %324, label %325, label %362

325:                                              ; preds = %315
  %326 = bitcast %"class.net::der::Input"* %35 to i8*
  %327 = bitcast <2 x i64>* %36 to i8*
  %328 = bitcast <2 x i64>* %8 to i8*
  br label %329

329:                                              ; preds = %325, %348
  %330 = phi i64 [ %321, %325 ], [ %351, %348 ]
  %331 = phi i64 [ %316, %325 ], [ %349, %348 ]
  %332 = inttoptr i64 %330 to %class.scoped_refptr*
  %333 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %332, i64 %331, i32 0
  %334 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %333, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %326) #11
  call void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"* nonnull %35, %"class.std::__1::basic_string"* nonnull %24) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %327) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %328)
  %335 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %334, i64 0, i32 8
  call void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"* nonnull %9, %"class.std::__1::basic_string"* %335) #11
  %336 = load <2 x i64>, <2 x i64>* %8, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %328)
  store <2 x i64> %336, <2 x i64>* %36, align 16
  %337 = call zeroext i1 @_ZN3net3derneERKNS0_5InputES3_(%"class.net::der::Input"* nonnull dereferenceable(16) %35, %"class.net::der::Input"* nonnull dereferenceable(16) %37) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %327) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %326) #11
  br i1 %337, label %348, label %338

338:                                              ; preds = %329
  %339 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %334, i64 0, i32 12
  %340 = load i8, i8* %339, align 4, !range !2
  %341 = icmp eq i8 %340, 0
  br i1 %341, label %345, label %342

342:                                              ; preds = %338
  %343 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %334, i64 0, i32 14
  %344 = call zeroext i1 @_ZNK3net3der9BitString10AssertsBitEm(%"class.net::der::BitString"* %343, i64 6) #11
  br i1 %344, label %345, label %348

345:                                              ; preds = %338, %342
  %346 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %334, i64 0, i32 6, i32 7
  %347 = call zeroext i1 @_ZN3net16VerifySignedDataERKNS_18SignatureAlgorithmERKNS_3der5InputERKNS3_9BitStringES6_(%"class.net::SignatureAlgorithm"* nonnull dereferenceable(16) %66, %"class.net::der::Input"* nonnull dereferenceable(16) %19, %"class.net::der::BitString"* nonnull dereferenceable(24) %21, %"class.net::der::Input"* dereferenceable(16) %346) #11
  br i1 %347, label %355, label %348

348:                                              ; preds = %345, %342, %329
  %349 = add nuw i64 %331, 1
  %350 = load i64, i64* %318, align 8
  %351 = load i64, i64* %320, align 8
  %352 = sub i64 %350, %351
  %353 = ashr exact i64 %352, 3
  %354 = icmp ult i64 %349, %353
  br i1 %354, label %329, label %362

355:                                              ; preds = %345
  %356 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %43, i64 0, i32 6, i32 1
  %357 = load i32, i32* %56, align 8
  %358 = getelementptr inbounds %"struct.net::ParsedCrlTbsCertList", %"struct.net::ParsedCrlTbsCertList"* %23, i64 0, i32 5
  %359 = call i32 @_ZN3net19GetCRLStatusForCertERKNS_3der5InputENS_10CrlVersionERKN4absl8optionalIS1_EE(%"class.net::der::Input"* dereferenceable(16) %356, i32 %357, %"class.absl::optional.0"* dereferenceable(24) %358)
  br label %362

360:                                              ; preds = %86
  call void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #11
  br label %362

361:                                              ; preds = %79
  call void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #11
  br label %362

362:                                              ; preds = %348, %315, %88, %361, %360, %355, %90, %309
  %363 = phi i32 [ 2, %309 ], [ 2, %88 ], [ 2, %90 ], [ %359, %355 ], [ 2, %360 ], [ 2, %361 ], [ 2, %315 ], [ 2, %348 ]
  %364 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %365 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %364, i64 0, i32 1, i32 0
  %366 = load i8, i8* %365, align 1
  %367 = icmp slt i8 %366, 0
  br i1 %367, label %368, label %370

368:                                              ; preds = %362
  %369 = load i8*, i8** %81, align 8
  call void @_ZdlPv(i8* %369) #12
  br label %370

370:                                              ; preds = %368, %362
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %80) #11
  br label %371

371:                                              ; preds = %370, %68, %75
  %372 = phi i32 [ %363, %370 ], [ 2, %75 ], [ 2, %68 ]
  call void @_ZN3net18SignatureAlgorithmD1Ev(%"class.net::SignatureAlgorithm"* nonnull %66) #11
  %373 = bitcast %"class.net::SignatureAlgorithm"* %66 to i8*
  call void @_ZdlPv(i8* %373) #12
  br label %374

374:                                              ; preds = %65, %371, %63, %54
  %375 = phi i32 [ 2, %54 ], [ 2, %63 ], [ %372, %371 ], [ 2, %65 ]
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %55) #11
  br label %376

376:                                              ; preds = %7, %374
  %377 = phi i32 [ %375, %374 ], [ 2, %7 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #11
  ret i32 %377
}

declare void @_ZN3net3der5InputC1ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::der::Input"*, %"class.base::BasicStringPiece"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN3net18SignatureAlgorithm12IsEquivalentERKNS_3der5InputES4_(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.net::SignatureAlgorithm"* @_ZN3net18SignatureAlgorithm6CreateERKNS_3der5InputEPNS_10CertErrorsE(%"class.net::der::Input"* dereferenceable(16), %"class.net::CertErrors"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3net24CheckRevocationDateValidERKNS_3der15GeneralizedTimeEPS2_RKN4base4TimeERKNS5_9TimeDeltaE(%"struct.net::der::GeneralizedTime"* dereferenceable(8), %"struct.net::der::GeneralizedTime"*, %"class.base::Time"* dereferenceable(8), %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN3net3derneERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"*, %"class.std::__1::basic_string"*) unnamed_addr #2

declare zeroext i1 @_ZN3net16ConsumeExtensionERKNS_3der5InputEPNSt3__13mapIS1_NS_15ParsedExtensionENS4_4lessIS1_EENS4_9allocatorINS4_4pairIS2_S6_EEEEEEPS6_(%"class.net::der::Input"* dereferenceable(16), %"class.std::__1::map"*, %"struct.net::ParsedExtension"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK3net3der9BitString10AssertsBitEm(%"class.net::der::BitString"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN3net16VerifySignedDataERKNS_18SignatureAlgorithmERKNS_3der5InputERKNS3_9BitStringES6_(%"class.net::SignatureAlgorithm"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16), %"class.net::der::BitString"* dereferenceable(24), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare zeroext i1 @_ZN3net13NormalizeNameERKNS_3der5InputEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPNS_10CertErrorsE(%"class.net::der::Input"* dereferenceable(16), %"class.std::__1::basic_string"*, %"class.net::CertErrors"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base18STLSetIntersectionINSt3__16vectorINS_16BasicStringPieceIcNS1_11char_traitsIcEEEENS1_9allocatorIS6_EEEES9_S9_EET_RKT0_RKT1_(%"class.std::__1::vector.8"* noalias sret, %"class.std::__1::vector.8"* dereferenceable(24), %"class.std::__1::vector.8"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = bitcast %"class.std::__1::vector.8"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #11
  %5 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %1, i64 0, i32 0, i32 1
  %8 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %2, i64 0, i32 0, i32 0
  %10 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %2, i64 0, i32 0, i32 1
  %12 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %11, align 8
  %13 = icmp ne %"class.base::BasicStringPiece"* %6, %8
  %14 = icmp ne %"class.base::BasicStringPiece"* %10, %12
  %15 = and i1 %13, %14
  br i1 %15, label %16, label %62

16:                                               ; preds = %3, %55
  %17 = phi %"class.base::BasicStringPiece"* [ %58, %55 ], [ %6, %3 ]
  %18 = phi %"class.base::BasicStringPiece"* [ %57, %55 ], [ null, %3 ]
  %19 = phi %"class.base::BasicStringPiece"* [ %56, %55 ], [ %10, %3 ]
  %20 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %19, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %19, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = icmp ugt i64 %23, %27
  %29 = select i1 %28, i64 %27, i64 %23
  %30 = tail call i32 @memcmp(i8* %21, i8* %25, i64 %29) #11
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %16
  %33 = icmp ult i64 %23, %27
  br i1 %33, label %36, label %38

34:                                               ; preds = %16
  %35 = icmp slt i32 %30, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %34, %32
  %37 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 1
  br label %55

38:                                               ; preds = %34, %32
  %39 = tail call i32 @memcmp(i8* %25, i8* %21, i64 %29) #11
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %45

41:                                               ; preds = %38
  %42 = icmp eq i64 %27, %23
  %43 = xor i1 %28, true
  %44 = or i1 %42, %43
  br i1 %44, label %47, label %51

45:                                               ; preds = %38
  %46 = icmp slt i32 %39, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %45, %41
  %48 = tail call %"class.base::BasicStringPiece"* @_ZNSt3__16vectorIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS5_EEE6insertENS_11__wrap_iterIPKS5_EERSA_(%"class.std::__1::vector.8"* %0, %"class.base::BasicStringPiece"* %18, %"class.base::BasicStringPiece"* dereferenceable(16) %17) #11
  %49 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %48, i64 1
  %50 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 1
  br label %51

51:                                               ; preds = %47, %45, %41
  %52 = phi %"class.base::BasicStringPiece"* [ %18, %45 ], [ %49, %47 ], [ %18, %41 ]
  %53 = phi %"class.base::BasicStringPiece"* [ %17, %45 ], [ %50, %47 ], [ %17, %41 ]
  %54 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %19, i64 1
  br label %55

55:                                               ; preds = %51, %36
  %56 = phi %"class.base::BasicStringPiece"* [ %19, %36 ], [ %54, %51 ]
  %57 = phi %"class.base::BasicStringPiece"* [ %18, %36 ], [ %52, %51 ]
  %58 = phi %"class.base::BasicStringPiece"* [ %37, %36 ], [ %53, %51 ]
  %59 = icmp ne %"class.base::BasicStringPiece"* %58, %8
  %60 = icmp ne %"class.base::BasicStringPiece"* %56, %12
  %61 = and i1 %60, %59
  br i1 %61, label %16, label %62

62:                                               ; preds = %55, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEvT0_SA_T_(%"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"struct.std::__1::__less"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %302, %3
  %5 = phi %"class.base::BasicStringPiece"* [ %1, %3 ], [ %269, %302 ]
  %6 = phi %"class.base::BasicStringPiece"* [ %0, %3 ], [ %17, %302 ]
  %7 = ptrtoint %"class.base::BasicStringPiece"* %5 to i64
  %8 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 -1
  %9 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 0
  %10 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 -1, i32 1
  %11 = bitcast %"class.base::BasicStringPiece"* %8 to i8*
  %12 = bitcast %"class.base::BasicStringPiece"* %8 to i64*
  %13 = ptrtoint %"class.base::BasicStringPiece"* %5 to i64
  br label %14

14:                                               ; preds = %311, %4
  %15 = phi %"class.base::BasicStringPiece"* [ %6, %4 ], [ %312, %311 ]
  br label %16

16:                                               ; preds = %173, %14
  %17 = phi %"class.base::BasicStringPiece"* [ %15, %14 ], [ %140, %173 ]
  %18 = ptrtoint %"class.base::BasicStringPiece"* %17 to i64
  %19 = sub i64 %7, %18
  %20 = ashr exact i64 %19, 4
  switch i64 %20, label %59 [
    i64 0, label %315
    i64 1, label %315
    i64 2, label %21
    i64 3, label %44
    i64 4, label %48
    i64 5, label %53
  ]

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 -1
  %23 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %22, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 -1, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp ugt i64 %26, %30
  %32 = select i1 %31, i64 %30, i64 %26
  %33 = tail call i32 @memcmp(i8* %24, i8* %28, i64 %32) #11
  %34 = icmp eq i32 %33, 0
  %35 = ptrtoint i8* %28 to i64
  br i1 %34, label %36, label %38

36:                                               ; preds = %21
  %37 = icmp ult i64 %26, %30
  br i1 %37, label %40, label %315

38:                                               ; preds = %21
  %39 = icmp slt i32 %33, 0
  br i1 %39, label %40, label %315

40:                                               ; preds = %36, %38
  %41 = bitcast %"class.base::BasicStringPiece"* %17 to i8*
  %42 = bitcast %"class.base::BasicStringPiece"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 16, i1 false) #11
  %43 = bitcast %"class.base::BasicStringPiece"* %22 to i64*
  store i64 %35, i64* %43, align 8
  store i64 %30, i64* %25, align 8
  br label %315

44:                                               ; preds = %16
  %45 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 1
  %46 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 -1
  %47 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEjT0_SA_SA_T_(%"class.base::BasicStringPiece"* %17, %"class.base::BasicStringPiece"* %45, %"class.base::BasicStringPiece"* %46, %"struct.std::__1::__less"* dereferenceable(1) %2)
  br label %315

48:                                               ; preds = %16
  %49 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 1
  %50 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 2
  %51 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 -1
  %52 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEjT0_SA_SA_SA_T_(%"class.base::BasicStringPiece"* %17, %"class.base::BasicStringPiece"* %49, %"class.base::BasicStringPiece"* %50, %"class.base::BasicStringPiece"* %51, %"struct.std::__1::__less"* dereferenceable(1) %2)
  br label %315

53:                                               ; preds = %16
  %54 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 1
  %55 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 2
  %56 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 3
  %57 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 -1
  %58 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEjT0_SA_SA_SA_SA_T_(%"class.base::BasicStringPiece"* %17, %"class.base::BasicStringPiece"* %54, %"class.base::BasicStringPiece"* %55, %"class.base::BasicStringPiece"* %56, %"class.base::BasicStringPiece"* %57, %"struct.std::__1::__less"* dereferenceable(1) %2)
  br label %315

59:                                               ; preds = %16
  %60 = icmp slt i64 %19, 496
  br i1 %60, label %61, label %62

61:                                               ; preds = %59
  tail call void @_ZNSt3__118__insertion_sort_3IRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEvT0_SA_T_(%"class.base::BasicStringPiece"* %17, %"class.base::BasicStringPiece"* %5, %"struct.std::__1::__less"* dereferenceable(1) %2)
  br label %315

62:                                               ; preds = %59
  %63 = icmp sgt i64 %19, 15984
  %64 = sdiv i64 %20, 2
  %65 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 %64
  br i1 %63, label %66, label %71

66:                                               ; preds = %62
  %67 = sdiv i64 %20, 4
  %68 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 %67
  %69 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %65, i64 %67
  %70 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEjT0_SA_SA_SA_SA_T_(%"class.base::BasicStringPiece"* %17, %"class.base::BasicStringPiece"* %68, %"class.base::BasicStringPiece"* %65, %"class.base::BasicStringPiece"* %69, %"class.base::BasicStringPiece"* %8, %"struct.std::__1::__less"* dereferenceable(1) %2)
  br label %73

71:                                               ; preds = %62
  %72 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEjT0_SA_SA_T_(%"class.base::BasicStringPiece"* %17, %"class.base::BasicStringPiece"* %65, %"class.base::BasicStringPiece"* %8, %"struct.std::__1::__less"* dereferenceable(1) %2)
  br label %73

73:                                               ; preds = %71, %66
  %74 = phi i32 [ %70, %66 ], [ %72, %71 ]
  %75 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %65, i64 0, i32 0
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 %64, i32 1
  %82 = load i64, i64* %81, align 8
  %83 = icmp ugt i64 %78, %82
  %84 = select i1 %83, i64 %82, i64 %78
  %85 = tail call i32 @memcmp(i8* %76, i8* %80, i64 %84) #11
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %73
  %88 = icmp ult i64 %78, %82
  br i1 %88, label %204, label %91

89:                                               ; preds = %73
  %90 = icmp slt i32 %85, 0
  br i1 %90, label %204, label %91

91:                                               ; preds = %87, %89
  br label %92

92:                                               ; preds = %91, %194
  %93 = phi %"class.base::BasicStringPiece"* [ %94, %194 ], [ %8, %91 ]
  %94 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %93, i64 -1
  %95 = icmp eq %"class.base::BasicStringPiece"* %17, %94
  br i1 %95, label %96, label %181

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 1
  %98 = load i8*, i8** %9, align 8
  %99 = load i64, i64* %10, align 8
  %100 = icmp ugt i64 %78, %99
  %101 = select i1 %100, i64 %99, i64 %78
  %102 = tail call i32 @memcmp(i8* %76, i8* %98, i64 %101) #11
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %96
  %105 = icmp ult i64 %78, %99
  br i1 %105, label %131, label %108

106:                                              ; preds = %96
  %107 = icmp slt i32 %102, 0
  br i1 %107, label %131, label %108

108:                                              ; preds = %104, %106
  %109 = icmp eq %"class.base::BasicStringPiece"* %97, %8
  br i1 %109, label %315, label %110

110:                                              ; preds = %108, %128
  %111 = phi %"class.base::BasicStringPiece"* [ %129, %128 ], [ %97, %108 ]
  %112 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %111, i64 0, i32 0
  %113 = load i8*, i8** %112, align 8
  %114 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %111, i64 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = icmp ugt i64 %78, %115
  %117 = select i1 %116, i64 %115, i64 %78
  %118 = tail call i32 @memcmp(i8* %76, i8* %113, i64 %117) #11
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %122

120:                                              ; preds = %110
  %121 = icmp ult i64 %78, %115
  br i1 %121, label %124, label %128

122:                                              ; preds = %110
  %123 = icmp slt i32 %118, 0
  br i1 %123, label %124, label %128

124:                                              ; preds = %120, %122
  %125 = ptrtoint i8* %113 to i64
  %126 = bitcast %"class.base::BasicStringPiece"* %111 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* align 8 %11, i64 16, i1 false) #11
  store i64 %125, i64* %12, align 8
  store i64 %115, i64* %10, align 8
  %127 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %111, i64 1
  br label %131

128:                                              ; preds = %120, %122
  %129 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %111, i64 1
  %130 = icmp eq %"class.base::BasicStringPiece"* %129, %8
  br i1 %130, label %315, label %110

131:                                              ; preds = %104, %124, %106
  %132 = phi %"class.base::BasicStringPiece"* [ %97, %106 ], [ %127, %124 ], [ %97, %104 ]
  %133 = icmp eq %"class.base::BasicStringPiece"* %132, %8
  br i1 %133, label %315, label %134

134:                                              ; preds = %131, %175
  %135 = phi %"class.base::BasicStringPiece"* [ %180, %175 ], [ %132, %131 ]
  %136 = phi %"class.base::BasicStringPiece"* [ %159, %175 ], [ %8, %131 ]
  %137 = load i8*, i8** %75, align 8
  %138 = load i64, i64* %77, align 8
  br label %139

139:                                              ; preds = %155, %134
  %140 = phi %"class.base::BasicStringPiece"* [ %135, %134 ], [ %156, %155 ]
  %141 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %140, i64 0, i32 0
  %142 = load i8*, i8** %141, align 8
  %143 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %140, i64 0, i32 1
  %144 = load i64, i64* %143, align 8
  %145 = icmp ugt i64 %138, %144
  %146 = select i1 %145, i64 %144, i64 %138
  %147 = tail call i32 @memcmp(i8* %137, i8* %142, i64 %146) #11
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %151

149:                                              ; preds = %139
  %150 = icmp ult i64 %138, %144
  br i1 %150, label %153, label %155

151:                                              ; preds = %139
  %152 = icmp slt i32 %147, 0
  br i1 %152, label %153, label %155

153:                                              ; preds = %149, %151
  %154 = ptrtoint i8* %142 to i64
  br label %157

155:                                              ; preds = %149, %151
  %156 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %140, i64 1
  br label %139

157:                                              ; preds = %153, %170
  %158 = phi %"class.base::BasicStringPiece"* [ %159, %170 ], [ %136, %153 ]
  %159 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %158, i64 -1
  %160 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %159, i64 0, i32 0
  %161 = load i8*, i8** %160, align 8
  %162 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %158, i64 -1, i32 1
  %163 = load i64, i64* %162, align 8
  %164 = icmp ugt i64 %138, %163
  %165 = select i1 %164, i64 %163, i64 %138
  %166 = tail call i32 @memcmp(i8* %137, i8* %161, i64 %165) #11
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %170

168:                                              ; preds = %157
  %169 = icmp ult i64 %138, %163
  br i1 %169, label %170, label %173

170:                                              ; preds = %168, %157
  %171 = phi i32 [ %166, %157 ], [ -1, %168 ]
  %172 = icmp slt i32 %171, 0
  br i1 %172, label %157, label %173

173:                                              ; preds = %168, %170
  %174 = icmp ult %"class.base::BasicStringPiece"* %140, %159
  br i1 %174, label %175, label %16

175:                                              ; preds = %173
  %176 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %158, i64 -1, i32 1
  %177 = bitcast %"class.base::BasicStringPiece"* %140 to i8*
  %178 = bitcast %"class.base::BasicStringPiece"* %159 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %177, i8* align 8 %178, i64 16, i1 false) #11
  %179 = bitcast %"class.base::BasicStringPiece"* %159 to i64*
  store i64 %154, i64* %179, align 8
  store i64 %144, i64* %176, align 8
  %180 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %140, i64 1
  br label %134

181:                                              ; preds = %92
  %182 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %94, i64 0, i32 0
  %183 = load i8*, i8** %182, align 8
  %184 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %93, i64 -1, i32 1
  %185 = load i64, i64* %184, align 8
  %186 = icmp ugt i64 %185, %82
  %187 = select i1 %186, i64 %82, i64 %185
  %188 = tail call i32 @memcmp(i8* %183, i8* %80, i64 %187) #11
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %194

190:                                              ; preds = %181
  %191 = icmp eq i64 %185, %82
  br i1 %191, label %194, label %192

192:                                              ; preds = %190
  %193 = icmp ult i64 %185, %82
  br i1 %193, label %197, label %194

194:                                              ; preds = %192, %181, %190
  %195 = phi i32 [ 1, %192 ], [ %188, %181 ], [ 0, %190 ]
  %196 = icmp slt i32 %195, 0
  br i1 %196, label %197, label %92

197:                                              ; preds = %192, %194
  %198 = ptrtoint i8* %76 to i64
  %199 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %93, i64 -1, i32 1
  %200 = bitcast %"class.base::BasicStringPiece"* %17 to i8*
  %201 = bitcast %"class.base::BasicStringPiece"* %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %200, i8* align 8 %201, i64 16, i1 false) #11
  %202 = bitcast %"class.base::BasicStringPiece"* %94 to i64*
  store i64 %198, i64* %202, align 8
  store i64 %78, i64* %199, align 8
  %203 = add i32 %74, 1
  br label %204

204:                                              ; preds = %89, %87, %197
  %205 = phi i32 [ %203, %197 ], [ %74, %87 ], [ %74, %89 ]
  %206 = phi %"class.base::BasicStringPiece"* [ %94, %197 ], [ %8, %87 ], [ %8, %89 ]
  %207 = ptrtoint %"class.base::BasicStringPiece"* %17 to i64
  %208 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 1
  %209 = icmp ult %"class.base::BasicStringPiece"* %208, %206
  br i1 %209, label %210, label %266

210:                                              ; preds = %204, %257
  %211 = phi %"class.base::BasicStringPiece"* [ %264, %257 ], [ %65, %204 ]
  %212 = phi i32 [ %262, %257 ], [ %205, %204 ]
  %213 = phi %"class.base::BasicStringPiece"* [ %265, %257 ], [ %208, %204 ]
  %214 = phi %"class.base::BasicStringPiece"* [ %239, %257 ], [ %206, %204 ]
  %215 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %211, i64 0, i32 0
  %216 = load i8*, i8** %215, align 8
  %217 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %211, i64 0, i32 1
  %218 = load i64, i64* %217, align 8
  br label %219

219:                                              ; preds = %235, %210
  %220 = phi %"class.base::BasicStringPiece"* [ %213, %210 ], [ %236, %235 ]
  %221 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %220, i64 0, i32 0
  %222 = load i8*, i8** %221, align 8
  %223 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %220, i64 0, i32 1
  %224 = load i64, i64* %223, align 8
  %225 = icmp ugt i64 %224, %218
  %226 = select i1 %225, i64 %218, i64 %224
  %227 = tail call i32 @memcmp(i8* %222, i8* %216, i64 %226) #11
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %231

229:                                              ; preds = %219
  %230 = icmp ult i64 %224, %218
  br i1 %230, label %235, label %233

231:                                              ; preds = %219
  %232 = icmp slt i32 %227, 0
  br i1 %232, label %235, label %233

233:                                              ; preds = %229, %231
  %234 = ptrtoint i8* %222 to i64
  br label %237

235:                                              ; preds = %229, %231
  %236 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %220, i64 1
  br label %219

237:                                              ; preds = %233, %252
  %238 = phi %"class.base::BasicStringPiece"* [ %239, %252 ], [ %214, %233 ]
  %239 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %238, i64 -1
  %240 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %239, i64 0, i32 0
  %241 = load i8*, i8** %240, align 8
  %242 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %238, i64 -1, i32 1
  %243 = load i64, i64* %242, align 8
  %244 = icmp ugt i64 %243, %218
  %245 = select i1 %244, i64 %218, i64 %243
  %246 = tail call i32 @memcmp(i8* %241, i8* %216, i64 %245) #11
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %252

248:                                              ; preds = %237
  %249 = icmp eq i64 %243, %218
  br i1 %249, label %252, label %250

250:                                              ; preds = %248
  %251 = icmp ult i64 %243, %218
  br i1 %251, label %255, label %252

252:                                              ; preds = %250, %237, %248
  %253 = phi i32 [ 1, %250 ], [ %246, %237 ], [ 0, %248 ]
  %254 = icmp slt i32 %253, 0
  br i1 %254, label %255, label %237

255:                                              ; preds = %250, %252
  %256 = icmp ugt %"class.base::BasicStringPiece"* %220, %239
  br i1 %256, label %266, label %257

257:                                              ; preds = %255
  %258 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %238, i64 -1, i32 1
  %259 = bitcast %"class.base::BasicStringPiece"* %220 to i8*
  %260 = bitcast %"class.base::BasicStringPiece"* %239 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %259, i8* align 8 %260, i64 16, i1 false) #11
  %261 = bitcast %"class.base::BasicStringPiece"* %239 to i64*
  store i64 %234, i64* %261, align 8
  store i64 %224, i64* %258, align 8
  %262 = add i32 %212, 1
  %263 = icmp eq %"class.base::BasicStringPiece"* %211, %220
  %264 = select i1 %263, %"class.base::BasicStringPiece"* %239, %"class.base::BasicStringPiece"* %211
  %265 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %220, i64 1
  br label %210

266:                                              ; preds = %255, %204
  %267 = phi %"class.base::BasicStringPiece"* [ %65, %204 ], [ %211, %255 ]
  %268 = phi i32 [ %205, %204 ], [ %212, %255 ]
  %269 = phi %"class.base::BasicStringPiece"* [ %208, %204 ], [ %220, %255 ]
  %270 = icmp eq %"class.base::BasicStringPiece"* %269, %267
  br i1 %270, label %294, label %271

271:                                              ; preds = %266
  %272 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %267, i64 0, i32 0
  %273 = load i8*, i8** %272, align 8
  %274 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %267, i64 0, i32 1
  %275 = load i64, i64* %274, align 8
  %276 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %269, i64 0, i32 0
  %277 = load i8*, i8** %276, align 8
  %278 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %269, i64 0, i32 1
  %279 = load i64, i64* %278, align 8
  %280 = icmp ugt i64 %275, %279
  %281 = select i1 %280, i64 %279, i64 %275
  %282 = tail call i32 @memcmp(i8* %273, i8* %277, i64 %281) #11
  %283 = icmp eq i32 %282, 0
  %284 = ptrtoint i8* %277 to i64
  br i1 %283, label %285, label %287

285:                                              ; preds = %271
  %286 = icmp ult i64 %275, %279
  br i1 %286, label %289, label %294

287:                                              ; preds = %271
  %288 = icmp slt i32 %282, 0
  br i1 %288, label %289, label %294

289:                                              ; preds = %285, %287
  %290 = bitcast %"class.base::BasicStringPiece"* %269 to i8*
  %291 = bitcast %"class.base::BasicStringPiece"* %267 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %290, i8* align 8 %291, i64 16, i1 false) #11
  %292 = bitcast %"class.base::BasicStringPiece"* %267 to i64*
  store i64 %284, i64* %292, align 8
  store i64 %279, i64* %274, align 8
  %293 = add i32 %268, 1
  br label %294

294:                                              ; preds = %285, %266, %289, %287
  %295 = phi i32 [ %293, %289 ], [ %268, %287 ], [ %268, %266 ], [ %268, %285 ]
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %304

297:                                              ; preds = %294
  %298 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEbT0_SA_T_(%"class.base::BasicStringPiece"* %17, %"class.base::BasicStringPiece"* %269, %"struct.std::__1::__less"* dereferenceable(1) %2)
  %299 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %269, i64 1
  %300 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEbT0_SA_T_(%"class.base::BasicStringPiece"* %299, %"class.base::BasicStringPiece"* %5, %"struct.std::__1::__less"* dereferenceable(1) %2)
  br i1 %300, label %301, label %303

301:                                              ; preds = %297
  br i1 %298, label %315, label %302

302:                                              ; preds = %301, %313
  br label %4

303:                                              ; preds = %297
  br i1 %298, label %311, label %304

304:                                              ; preds = %303, %294
  %305 = ptrtoint %"class.base::BasicStringPiece"* %269 to i64
  %306 = sub i64 %305, %207
  %307 = sub i64 %13, %305
  %308 = icmp slt i64 %306, %307
  br i1 %308, label %309, label %313

309:                                              ; preds = %304
  tail call void @_ZNSt3__16__sortIRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEvT0_SA_T_(%"class.base::BasicStringPiece"* %17, %"class.base::BasicStringPiece"* %269, %"struct.std::__1::__less"* dereferenceable(1) %2)
  %310 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %269, i64 1
  br label %311

311:                                              ; preds = %309, %303
  %312 = phi %"class.base::BasicStringPiece"* [ %299, %303 ], [ %310, %309 ]
  br label %14

313:                                              ; preds = %304
  %314 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %269, i64 1
  tail call void @_ZNSt3__16__sortIRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEvT0_SA_T_(%"class.base::BasicStringPiece"* %314, %"class.base::BasicStringPiece"* %5, %"struct.std::__1::__less"* dereferenceable(1) %2)
  br label %302

315:                                              ; preds = %301, %131, %16, %16, %108, %128, %36, %38, %40, %44, %48, %53, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEjT0_SA_SA_T_(%"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"struct.std::__1::__less"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %5 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %8, %12
  %14 = select i1 %13, i64 %12, i64 %8
  %15 = tail call i32 @memcmp(i8* %6, i8* %10, i64 %14) #11
  %16 = icmp eq i32 %15, 0
  %17 = ptrtoint i8* %6 to i64
  %18 = ptrtoint i8* %10 to i64
  br i1 %16, label %19, label %24

19:                                               ; preds = %4
  %20 = icmp eq i64 %8, %12
  br i1 %20, label %24, label %21

21:                                               ; preds = %19
  %22 = icmp ult i64 %8, %12
  %23 = select i1 %22, i32 -1, i32 1
  br label %24

24:                                               ; preds = %4, %19, %21
  %25 = phi i32 [ %23, %21 ], [ %15, %4 ], [ 0, %19 ]
  %26 = icmp slt i32 %25, 0
  %27 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp ugt i64 %30, %8
  %32 = select i1 %31, i64 %8, i64 %30
  %33 = tail call i32 @memcmp(i8* %28, i8* %6, i64 %32) #11
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %40

35:                                               ; preds = %24
  %36 = icmp eq i64 %30, %8
  br i1 %36, label %40, label %37

37:                                               ; preds = %35
  %38 = icmp ult i64 %30, %8
  %39 = select i1 %38, i32 -1, i32 1
  br label %40

40:                                               ; preds = %24, %35, %37
  %41 = phi i32 [ %39, %37 ], [ %33, %24 ], [ 0, %35 ]
  %42 = icmp slt i32 %41, 0
  br i1 %26, label %64, label %43

43:                                               ; preds = %40
  br i1 %42, label %44, label %85

44:                                               ; preds = %43
  %45 = bitcast %"class.base::BasicStringPiece"* %1 to i64*
  %46 = bitcast %"class.base::BasicStringPiece"* %1 to i8*
  %47 = bitcast %"class.base::BasicStringPiece"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 16, i1 false) #11
  %48 = bitcast %"class.base::BasicStringPiece"* %2 to i64*
  store i64 %17, i64* %48, align 8
  store i64 %8, i64* %29, align 8
  %49 = load i8*, i8** %5, align 8
  %50 = load i64, i64* %7, align 8
  %51 = load i8*, i8** %9, align 8
  %52 = load i64, i64* %11, align 8
  %53 = icmp ugt i64 %50, %52
  %54 = select i1 %53, i64 %52, i64 %50
  %55 = tail call i32 @memcmp(i8* %49, i8* %51, i64 %54) #11
  %56 = icmp eq i32 %55, 0
  %57 = ptrtoint i8* %51 to i64
  br i1 %56, label %58, label %60

58:                                               ; preds = %44
  %59 = icmp ult i64 %50, %52
  br i1 %59, label %62, label %85

60:                                               ; preds = %44
  %61 = icmp slt i32 %55, 0
  br i1 %61, label %62, label %85

62:                                               ; preds = %58, %60
  %63 = bitcast %"class.base::BasicStringPiece"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %46, i64 16, i1 false) #11
  store i64 %57, i64* %45, align 8
  store i64 %52, i64* %7, align 8
  br label %85

64:                                               ; preds = %40
  %65 = bitcast %"class.base::BasicStringPiece"* %0 to i8*
  br i1 %42, label %66, label %69

66:                                               ; preds = %64
  %67 = bitcast %"class.base::BasicStringPiece"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %67, i64 16, i1 false) #11
  %68 = bitcast %"class.base::BasicStringPiece"* %2 to i64*
  store i64 %18, i64* %68, align 8
  store i64 %12, i64* %29, align 8
  br label %85

69:                                               ; preds = %64
  %70 = bitcast %"class.base::BasicStringPiece"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %70, i64 16, i1 false) #11
  %71 = bitcast %"class.base::BasicStringPiece"* %1 to i64*
  store i64 %18, i64* %71, align 8
  store i64 %12, i64* %7, align 8
  %72 = load i8*, i8** %27, align 8
  %73 = load i64, i64* %29, align 8
  %74 = icmp ugt i64 %73, %12
  %75 = select i1 %74, i64 %12, i64 %73
  %76 = tail call i32 @memcmp(i8* %72, i8* %10, i64 %75) #11
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %69
  %79 = icmp ult i64 %73, %12
  br i1 %79, label %82, label %85

80:                                               ; preds = %69
  %81 = icmp slt i32 %76, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %78, %80
  %83 = bitcast %"class.base::BasicStringPiece"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %83, i64 16, i1 false) #11
  %84 = bitcast %"class.base::BasicStringPiece"* %2 to i64*
  store i64 %18, i64* %84, align 8
  store i64 %12, i64* %29, align 8
  br label %85

85:                                               ; preds = %78, %58, %80, %82, %60, %62, %43, %66
  %86 = phi i32 [ 1, %66 ], [ 0, %43 ], [ 2, %62 ], [ 1, %60 ], [ 2, %82 ], [ 1, %80 ], [ 1, %58 ], [ 1, %78 ]
  ret i32 %86
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEjT0_SA_SA_SA_T_(%"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"struct.std::__1::__less"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %6 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEjT0_SA_SA_T_(%"class.base::BasicStringPiece"* %0, %"class.base::BasicStringPiece"* %1, %"class.base::BasicStringPiece"* %2, %"struct.std::__1::__less"* dereferenceable(1) %4)
  %7 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ugt i64 %10, %14
  %16 = select i1 %15, i64 %14, i64 %10
  %17 = tail call i32 @memcmp(i8* %8, i8* %12, i64 %16) #11
  %18 = icmp eq i32 %17, 0
  %19 = ptrtoint i8* %12 to i64
  br i1 %18, label %20, label %22

20:                                               ; preds = %5
  %21 = icmp ult i64 %10, %14
  br i1 %21, label %24, label %67

22:                                               ; preds = %5
  %23 = icmp slt i32 %17, 0
  br i1 %23, label %24, label %67

24:                                               ; preds = %20, %22
  %25 = bitcast %"class.base::BasicStringPiece"* %2 to i64*
  %26 = bitcast %"class.base::BasicStringPiece"* %2 to i8*
  %27 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false) #11
  %28 = bitcast %"class.base::BasicStringPiece"* %3 to i64*
  store i64 %19, i64* %28, align 8
  store i64 %14, i64* %9, align 8
  %29 = add i32 %6, 1
  %30 = load i8*, i8** %11, align 8
  %31 = load i64, i64* %13, align 8
  %32 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = icmp ugt i64 %31, %35
  %37 = select i1 %36, i64 %35, i64 %31
  %38 = tail call i32 @memcmp(i8* %30, i8* %33, i64 %37) #11
  %39 = icmp eq i32 %38, 0
  %40 = ptrtoint i8* %33 to i64
  br i1 %39, label %41, label %43

41:                                               ; preds = %24
  %42 = icmp ult i64 %31, %35
  br i1 %42, label %45, label %67

43:                                               ; preds = %24
  %44 = icmp slt i32 %38, 0
  br i1 %44, label %45, label %67

45:                                               ; preds = %41, %43
  %46 = bitcast %"class.base::BasicStringPiece"* %1 to i64*
  %47 = bitcast %"class.base::BasicStringPiece"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %26, i64 16, i1 false) #11
  store i64 %40, i64* %25, align 8
  store i64 %35, i64* %13, align 8
  %48 = add i32 %6, 2
  %49 = load i8*, i8** %32, align 8
  %50 = load i64, i64* %34, align 8
  %51 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = icmp ugt i64 %50, %54
  %56 = select i1 %55, i64 %54, i64 %50
  %57 = tail call i32 @memcmp(i8* %49, i8* %52, i64 %56) #11
  %58 = icmp eq i32 %57, 0
  %59 = ptrtoint i8* %52 to i64
  br i1 %58, label %60, label %62

60:                                               ; preds = %45
  %61 = icmp ult i64 %50, %54
  br i1 %61, label %64, label %67

62:                                               ; preds = %45
  %63 = icmp slt i32 %57, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %60, %62
  %65 = bitcast %"class.base::BasicStringPiece"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %47, i64 16, i1 false) #11
  store i64 %59, i64* %46, align 8
  store i64 %54, i64* %34, align 8
  %66 = add i32 %6, 3
  br label %67

67:                                               ; preds = %60, %41, %20, %43, %64, %62, %22
  %68 = phi i32 [ %66, %64 ], [ %48, %62 ], [ %29, %43 ], [ %6, %22 ], [ %6, %20 ], [ %29, %41 ], [ %48, %60 ]
  ret i32 %68
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEjT0_SA_SA_SA_SA_T_(%"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"struct.std::__1::__less"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEjT0_SA_SA_SA_T_(%"class.base::BasicStringPiece"* %0, %"class.base::BasicStringPiece"* %1, %"class.base::BasicStringPiece"* %2, %"class.base::BasicStringPiece"* %3, %"struct.std::__1::__less"* dereferenceable(1) %5)
  %8 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ugt i64 %11, %15
  %17 = select i1 %16, i64 %15, i64 %11
  %18 = tail call i32 @memcmp(i8* %9, i8* %13, i64 %17) #11
  %19 = icmp eq i32 %18, 0
  %20 = ptrtoint i8* %13 to i64
  br i1 %19, label %21, label %23

21:                                               ; preds = %6
  %22 = icmp ult i64 %11, %15
  br i1 %22, label %25, label %87

23:                                               ; preds = %6
  %24 = icmp slt i32 %18, 0
  br i1 %24, label %25, label %87

25:                                               ; preds = %21, %23
  %26 = bitcast %"class.base::BasicStringPiece"* %3 to i64*
  %27 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  %28 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 16, i1 false) #11
  %29 = bitcast %"class.base::BasicStringPiece"* %4 to i64*
  store i64 %20, i64* %29, align 8
  store i64 %15, i64* %10, align 8
  %30 = add i32 %7, 1
  %31 = load i8*, i8** %12, align 8
  %32 = load i64, i64* %14, align 8
  %33 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = icmp ugt i64 %32, %36
  %38 = select i1 %37, i64 %36, i64 %32
  %39 = tail call i32 @memcmp(i8* %31, i8* %34, i64 %38) #11
  %40 = icmp eq i32 %39, 0
  %41 = ptrtoint i8* %34 to i64
  br i1 %40, label %42, label %44

42:                                               ; preds = %25
  %43 = icmp ult i64 %32, %36
  br i1 %43, label %46, label %87

44:                                               ; preds = %25
  %45 = icmp slt i32 %39, 0
  br i1 %45, label %46, label %87

46:                                               ; preds = %42, %44
  %47 = bitcast %"class.base::BasicStringPiece"* %2 to i64*
  %48 = bitcast %"class.base::BasicStringPiece"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %27, i64 16, i1 false) #11
  store i64 %41, i64* %26, align 8
  store i64 %36, i64* %14, align 8
  %49 = add i32 %7, 2
  %50 = load i8*, i8** %33, align 8
  %51 = load i64, i64* %35, align 8
  %52 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = icmp ugt i64 %51, %55
  %57 = select i1 %56, i64 %55, i64 %51
  %58 = tail call i32 @memcmp(i8* %50, i8* %53, i64 %57) #11
  %59 = icmp eq i32 %58, 0
  %60 = ptrtoint i8* %53 to i64
  br i1 %59, label %61, label %63

61:                                               ; preds = %46
  %62 = icmp ult i64 %51, %55
  br i1 %62, label %65, label %87

63:                                               ; preds = %46
  %64 = icmp slt i32 %58, 0
  br i1 %64, label %65, label %87

65:                                               ; preds = %61, %63
  %66 = bitcast %"class.base::BasicStringPiece"* %1 to i64*
  %67 = bitcast %"class.base::BasicStringPiece"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %48, i64 16, i1 false) #11
  store i64 %60, i64* %47, align 8
  store i64 %55, i64* %35, align 8
  %68 = add i32 %7, 3
  %69 = load i8*, i8** %52, align 8
  %70 = load i64, i64* %54, align 8
  %71 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 0
  %72 = load i8*, i8** %71, align 8
  %73 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = icmp ugt i64 %70, %74
  %76 = select i1 %75, i64 %74, i64 %70
  %77 = tail call i32 @memcmp(i8* %69, i8* %72, i64 %76) #11
  %78 = icmp eq i32 %77, 0
  %79 = ptrtoint i8* %72 to i64
  br i1 %78, label %80, label %82

80:                                               ; preds = %65
  %81 = icmp ult i64 %70, %74
  br i1 %81, label %84, label %87

82:                                               ; preds = %65
  %83 = icmp slt i32 %77, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %80, %82
  %85 = bitcast %"class.base::BasicStringPiece"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %67, i64 16, i1 false) #11
  store i64 %79, i64* %66, align 8
  store i64 %74, i64* %54, align 8
  %86 = add i32 %7, 4
  br label %87

87:                                               ; preds = %80, %61, %42, %21, %44, %82, %84, %63, %23
  %88 = phi i32 [ %86, %84 ], [ %68, %82 ], [ %49, %63 ], [ %30, %44 ], [ %7, %23 ], [ %7, %21 ], [ %30, %42 ], [ %49, %61 ], [ %68, %80 ]
  ret i32 %88
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEvT0_SA_T_(%"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"struct.std::__1::__less"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 2
  %5 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 1
  %6 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEjT0_SA_SA_T_(%"class.base::BasicStringPiece"* %0, %"class.base::BasicStringPiece"* %5, %"class.base::BasicStringPiece"* %4, %"struct.std::__1::__less"* dereferenceable(1) %2)
  %7 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 3
  %8 = icmp eq %"class.base::BasicStringPiece"* %7, %1
  br i1 %8, label %9, label %10

9:                                                ; preds = %55, %3
  ret void

10:                                               ; preds = %3, %55
  %11 = phi %"class.base::BasicStringPiece"* [ %56, %55 ], [ %7, %3 ]
  %12 = phi %"class.base::BasicStringPiece"* [ %11, %55 ], [ %4, %3 ]
  %13 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %11, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %11, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %12, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %12, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp ugt i64 %16, %20
  %22 = select i1 %21, i64 %20, i64 %16
  %23 = tail call i32 @memcmp(i8* %14, i8* %18, i64 %22) #11
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %10
  %26 = icmp ult i64 %16, %20
  br i1 %26, label %29, label %55

27:                                               ; preds = %10
  %28 = icmp slt i32 %23, 0
  br i1 %28, label %29, label %55

29:                                               ; preds = %25, %27
  br label %30

30:                                               ; preds = %29, %48
  %31 = phi %"class.base::BasicStringPiece"* [ %32, %48 ], [ %11, %29 ]
  %32 = phi %"class.base::BasicStringPiece"* [ %37, %48 ], [ %12, %29 ]
  %33 = bitcast %"class.base::BasicStringPiece"* %31 to i8*
  %34 = bitcast %"class.base::BasicStringPiece"* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 16, i1 false)
  %35 = icmp eq %"class.base::BasicStringPiece"* %32, %0
  br i1 %35, label %51, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %32, i64 -1
  %38 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %37, i64 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %32, i64 -1, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = icmp ugt i64 %16, %41
  %43 = select i1 %42, i64 %41, i64 %16
  %44 = tail call i32 @memcmp(i8* %14, i8* %39, i64 %43) #11
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %36
  %47 = icmp ult i64 %16, %41
  br i1 %47, label %48, label %51

48:                                               ; preds = %46, %36
  %49 = phi i32 [ %44, %36 ], [ -1, %46 ]
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %30, label %51

51:                                               ; preds = %46, %30, %48
  %52 = phi %"class.base::BasicStringPiece"* [ %32, %46 ], [ %0, %30 ], [ %32, %48 ]
  %53 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %52, i64 0, i32 0
  store i8* %14, i8** %53, align 8
  %54 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %52, i64 0, i32 1
  store i64 %16, i64* %54, align 8
  br label %55

55:                                               ; preds = %25, %51, %27
  %56 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %11, i64 1
  %57 = icmp eq %"class.base::BasicStringPiece"* %56, %1
  br i1 %57, label %9, label %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEbT0_SA_T_(%"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"struct.std::__1::__less"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = ptrtoint %"class.base::BasicStringPiece"* %1 to i64
  %5 = ptrtoint %"class.base::BasicStringPiece"* %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 4
  switch i64 %7, label %46 [
    i64 0, label %107
    i64 1, label %107
    i64 2, label %8
    i64 3, label %31
    i64 4, label %35
    i64 5, label %40
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 -1
  %10 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 -1, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ugt i64 %13, %17
  %19 = select i1 %18, i64 %17, i64 %13
  %20 = tail call i32 @memcmp(i8* %11, i8* %15, i64 %19) #11
  %21 = icmp eq i32 %20, 0
  %22 = ptrtoint i8* %15 to i64
  br i1 %21, label %23, label %25

23:                                               ; preds = %8
  %24 = icmp ult i64 %13, %17
  br i1 %24, label %27, label %107

25:                                               ; preds = %8
  %26 = icmp slt i32 %20, 0
  br i1 %26, label %27, label %107

27:                                               ; preds = %23, %25
  %28 = bitcast %"class.base::BasicStringPiece"* %0 to i8*
  %29 = bitcast %"class.base::BasicStringPiece"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 16, i1 false) #11
  %30 = bitcast %"class.base::BasicStringPiece"* %9 to i64*
  store i64 %22, i64* %30, align 8
  store i64 %17, i64* %12, align 8
  br label %107

31:                                               ; preds = %3
  %32 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 1
  %33 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 -1
  %34 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEjT0_SA_SA_T_(%"class.base::BasicStringPiece"* %0, %"class.base::BasicStringPiece"* %32, %"class.base::BasicStringPiece"* %33, %"struct.std::__1::__less"* dereferenceable(1) %2)
  br label %107

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 1
  %37 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 2
  %38 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 -1
  %39 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEjT0_SA_SA_SA_T_(%"class.base::BasicStringPiece"* %0, %"class.base::BasicStringPiece"* %36, %"class.base::BasicStringPiece"* %37, %"class.base::BasicStringPiece"* %38, %"struct.std::__1::__less"* dereferenceable(1) %2)
  br label %107

40:                                               ; preds = %3
  %41 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 1
  %42 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 2
  %43 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 3
  %44 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 -1
  %45 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEjT0_SA_SA_SA_SA_T_(%"class.base::BasicStringPiece"* %0, %"class.base::BasicStringPiece"* %41, %"class.base::BasicStringPiece"* %42, %"class.base::BasicStringPiece"* %43, %"class.base::BasicStringPiece"* %44, %"struct.std::__1::__less"* dereferenceable(1) %2)
  br label %107

46:                                               ; preds = %3
  %47 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 2
  %48 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 1
  %49 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EEPS6_EEjT0_SA_SA_T_(%"class.base::BasicStringPiece"* %0, %"class.base::BasicStringPiece"* %48, %"class.base::BasicStringPiece"* %47, %"struct.std::__1::__less"* dereferenceable(1) %2)
  %50 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 3
  %51 = icmp eq %"class.base::BasicStringPiece"* %50, %1
  br i1 %51, label %107, label %52

52:                                               ; preds = %46, %100
  %53 = phi %"class.base::BasicStringPiece"* [ %102, %100 ], [ %50, %46 ]
  %54 = phi i32 [ %101, %100 ], [ 0, %46 ]
  %55 = phi %"class.base::BasicStringPiece"* [ %53, %100 ], [ %47, %46 ]
  %56 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %53, i64 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %53, i64 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %55, i64 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %55, i64 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = icmp ugt i64 %59, %63
  %65 = select i1 %64, i64 %63, i64 %59
  %66 = tail call i32 @memcmp(i8* %57, i8* %61, i64 %65) #11
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %52
  %69 = icmp ult i64 %59, %63
  br i1 %69, label %72, label %100

70:                                               ; preds = %52
  %71 = icmp slt i32 %66, 0
  br i1 %71, label %72, label %100

72:                                               ; preds = %68, %70
  br label %73

73:                                               ; preds = %72, %91
  %74 = phi %"class.base::BasicStringPiece"* [ %75, %91 ], [ %53, %72 ]
  %75 = phi %"class.base::BasicStringPiece"* [ %80, %91 ], [ %55, %72 ]
  %76 = bitcast %"class.base::BasicStringPiece"* %74 to i8*
  %77 = bitcast %"class.base::BasicStringPiece"* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 16, i1 false)
  %78 = icmp eq %"class.base::BasicStringPiece"* %75, %0
  br i1 %78, label %94, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %75, i64 -1
  %81 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %80, i64 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %75, i64 -1, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = icmp ugt i64 %59, %84
  %86 = select i1 %85, i64 %84, i64 %59
  %87 = tail call i32 @memcmp(i8* %57, i8* %82, i64 %86) #11
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %79
  %90 = icmp ult i64 %59, %84
  br i1 %90, label %91, label %94

91:                                               ; preds = %89, %79
  %92 = phi i32 [ %87, %79 ], [ -1, %89 ]
  %93 = icmp slt i32 %92, 0
  br i1 %93, label %73, label %94

94:                                               ; preds = %89, %73, %91
  %95 = phi %"class.base::BasicStringPiece"* [ %75, %89 ], [ %0, %73 ], [ %75, %91 ]
  %96 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %95, i64 0, i32 0
  store i8* %57, i8** %96, align 8
  %97 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %95, i64 0, i32 1
  store i64 %59, i64* %97, align 8
  %98 = add i32 %54, 1
  %99 = icmp eq i32 %98, 8
  br i1 %99, label %104, label %100

100:                                              ; preds = %94, %68, %70
  %101 = phi i32 [ %98, %94 ], [ %54, %70 ], [ %54, %68 ]
  %102 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %53, i64 1
  %103 = icmp eq %"class.base::BasicStringPiece"* %102, %1
  br i1 %103, label %107, label %52

104:                                              ; preds = %94
  %105 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %53, i64 1
  %106 = icmp eq %"class.base::BasicStringPiece"* %105, %1
  br label %107

107:                                              ; preds = %100, %104, %46, %23, %25, %27, %3, %3, %40, %35, %31
  %108 = phi i1 [ true, %40 ], [ true, %35 ], [ true, %31 ], [ true, %3 ], [ true, %3 ], [ true, %27 ], [ true, %25 ], [ true, %23 ], [ true, %46 ], [ %106, %104 ], [ true, %100 ]
  ret i1 %108
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::BasicStringPiece"* @_ZNSt3__16vectorIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS5_EEE6insertENS_11__wrap_iterIPKS5_EERSA_(%"class.std::__1::vector.8"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.base::BasicStringPiece"* %1 to i64
  %5 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 1
  %7 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %8, align 8
  %10 = icmp ult %"class.base::BasicStringPiece"* %7, %9
  %11 = ptrtoint %"class.base::BasicStringPiece"* %7 to i64
  %12 = ptrtoint %"class.base::BasicStringPiece"* %9 to i64
  br i1 %10, label %13, label %97

13:                                               ; preds = %3
  %14 = icmp eq %"class.base::BasicStringPiece"* %7, %1
  br i1 %14, label %15, label %21

15:                                               ; preds = %13
  %16 = bitcast %"class.base::BasicStringPiece"* %1 to i8*
  %17 = bitcast %"class.base::BasicStringPiece"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 16, i1 false) #11
  %18 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 1
  %19 = ptrtoint %"class.base::BasicStringPiece"* %18 to i64
  %20 = bitcast %"class.base::BasicStringPiece"** %6 to i64*
  store i64 %19, i64* %20, align 8
  br label %235

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 1
  %23 = ptrtoint %"class.base::BasicStringPiece"* %22 to i64
  %24 = sub i64 %11, %23
  %25 = ashr exact i64 %24, 4
  %26 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 %25
  %27 = bitcast %"class.base::BasicStringPiece"** %6 to i64*
  %28 = icmp ult %"class.base::BasicStringPiece"* %26, %7
  br i1 %28, label %29, label %58

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 %30, i32 0
  %32 = bitcast i8** %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 4
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 3
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %50, label %40

40:                                               ; preds = %29, %40
  %41 = phi %"class.base::BasicStringPiece"* [ %47, %40 ], [ %7, %29 ]
  %42 = phi %"class.base::BasicStringPiece"* [ %46, %40 ], [ %26, %29 ]
  %43 = phi i64 [ %48, %40 ], [ %38, %29 ]
  %44 = bitcast %"class.base::BasicStringPiece"* %41 to i8*
  %45 = bitcast %"class.base::BasicStringPiece"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 16, i1 false) #11
  %46 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %42, i64 1
  %47 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %41, i64 1
  %48 = add i64 %43, -1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %40, !llvm.loop !4

50:                                               ; preds = %40, %29
  %51 = phi %"class.base::BasicStringPiece"* [ %7, %29 ], [ %47, %40 ]
  %52 = phi %"class.base::BasicStringPiece"* [ %26, %29 ], [ %46, %40 ]
  %53 = phi %"class.base::BasicStringPiece"* [ undef, %29 ], [ %47, %40 ]
  %54 = icmp ult i8* %34, inttoptr (i64 48 to i8*)
  br i1 %54, label %55, label %66

55:                                               ; preds = %66, %50
  %56 = phi %"class.base::BasicStringPiece"* [ %53, %50 ], [ %84, %66 ]
  %57 = ptrtoint %"class.base::BasicStringPiece"* %56 to i64
  br label %58

58:                                               ; preds = %55, %21
  %59 = phi i64 [ %57, %55 ], [ %11, %21 ]
  store i64 %59, i64* %27, align 8
  %60 = icmp eq i64 %24, 0
  br i1 %60, label %86, label %61

61:                                               ; preds = %58
  %62 = sub nsw i64 0, %25
  %63 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 %62
  %64 = bitcast %"class.base::BasicStringPiece"* %63 to i8*
  %65 = bitcast %"class.base::BasicStringPiece"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 %24, i1 false) #11
  br label %86

66:                                               ; preds = %50, %66
  %67 = phi %"class.base::BasicStringPiece"* [ %84, %66 ], [ %51, %50 ]
  %68 = phi %"class.base::BasicStringPiece"* [ %83, %66 ], [ %52, %50 ]
  %69 = bitcast %"class.base::BasicStringPiece"* %67 to i8*
  %70 = bitcast %"class.base::BasicStringPiece"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 16, i1 false) #11
  %71 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %68, i64 1
  %72 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %67, i64 1
  %73 = bitcast %"class.base::BasicStringPiece"* %72 to i8*
  %74 = bitcast %"class.base::BasicStringPiece"* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 16, i1 false) #11
  %75 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %68, i64 2
  %76 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %67, i64 2
  %77 = bitcast %"class.base::BasicStringPiece"* %76 to i8*
  %78 = bitcast %"class.base::BasicStringPiece"* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 16, i1 false) #11
  %79 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %68, i64 3
  %80 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %67, i64 3
  %81 = bitcast %"class.base::BasicStringPiece"* %80 to i8*
  %82 = bitcast %"class.base::BasicStringPiece"* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 16, i1 false) #11
  %83 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %68, i64 4
  %84 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %67, i64 4
  %85 = icmp ult %"class.base::BasicStringPiece"* %83, %7
  br i1 %85, label %66, label %55

86:                                               ; preds = %58, %61
  %87 = icmp ugt %"class.base::BasicStringPiece"* %1, %2
  br i1 %87, label %93, label %88

88:                                               ; preds = %86
  %89 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %6, align 8
  %90 = icmp ugt %"class.base::BasicStringPiece"* %89, %2
  %91 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 1
  %92 = select i1 %90, %"class.base::BasicStringPiece"* %91, %"class.base::BasicStringPiece"* %2
  br label %93

93:                                               ; preds = %88, %86
  %94 = phi %"class.base::BasicStringPiece"* [ %2, %86 ], [ %92, %88 ]
  %95 = bitcast %"class.base::BasicStringPiece"* %1 to i8*
  %96 = bitcast %"class.base::BasicStringPiece"* %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 16, i1 false)
  br label %235

97:                                               ; preds = %3
  %98 = bitcast %"class.base::BasicStringPiece"** %6 to i64*
  %99 = bitcast %"class.std::__1::vector.8"* %0 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = sub i64 %11, %100
  %102 = ashr exact i64 %101, 4
  %103 = add nsw i64 %102, 1
  %104 = icmp ugt i64 %103, 1152921504606846975
  br i1 %104, label %105, label %107

105:                                              ; preds = %97
  %106 = bitcast %"class.std::__1::vector.8"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %106) #13
  unreachable

107:                                              ; preds = %97
  %108 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %109 = sub i64 %12, %100
  %110 = ashr exact i64 %109, 4
  %111 = icmp ult i64 %110, 576460752303423487
  br i1 %111, label %115, label %112

112:                                              ; preds = %107
  %113 = sub i64 %4, %100
  %114 = ashr exact i64 %113, 4
  br label %125

115:                                              ; preds = %107
  %116 = ashr exact i64 %109, 3
  %117 = icmp ult i64 %116, %103
  %118 = select i1 %117, i64 %103, i64 %116
  %119 = sub i64 %4, %100
  %120 = ashr exact i64 %119, 4
  %121 = icmp eq i64 %118, 0
  br i1 %121, label %131, label %122

122:                                              ; preds = %115
  %123 = icmp ugt i64 %118, 1152921504606846975
  br i1 %123, label %124, label %125

124:                                              ; preds = %122
  tail call void @abort() #13
  unreachable

125:                                              ; preds = %112, %122
  %126 = phi i64 [ 1152921504606846975, %112 ], [ %118, %122 ]
  %127 = phi i64 [ %114, %112 ], [ %120, %122 ]
  %128 = shl i64 %126, 4
  %129 = tail call i8* @_Znwm(i64 %128) #12
  %130 = bitcast i8* %129 to %"class.base::BasicStringPiece"*
  br label %131

131:                                              ; preds = %115, %125
  %132 = phi i64 [ %127, %125 ], [ %120, %115 ]
  %133 = phi i64 [ %126, %125 ], [ 0, %115 ]
  %134 = phi i8* [ %129, %125 ], [ null, %115 ]
  %135 = phi %"class.base::BasicStringPiece"* [ %130, %125 ], [ null, %115 ]
  %136 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %135, i64 %132
  %137 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %135, i64 %133
  %138 = ptrtoint %"class.base::BasicStringPiece"* %137 to i64
  %139 = icmp eq i64 %132, %133
  %140 = bitcast %"class.base::BasicStringPiece"* %136 to i8*
  br i1 %139, label %141, label %165

141:                                              ; preds = %131
  %142 = icmp sgt i64 %132, 0
  br i1 %142, label %143, label %148

143:                                              ; preds = %141
  %144 = add nuw nsw i64 %132, 1
  %145 = sdiv i64 %144, -2
  %146 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %136, i64 %145
  %147 = bitcast %"class.base::BasicStringPiece"* %146 to i8*
  br label %165

148:                                              ; preds = %141
  %149 = shl nsw i64 %132, 1
  %150 = icmp eq i64 %132, 0
  %151 = select i1 %150, i64 1, i64 %149
  %152 = icmp ugt i64 %151, 1152921504606846975
  br i1 %152, label %153, label %154

153:                                              ; preds = %148
  tail call void @abort() #13
  unreachable

154:                                              ; preds = %148
  %155 = lshr i64 %151, 2
  %156 = shl i64 %151, 4
  %157 = tail call i8* @_Znwm(i64 %156) #12
  %158 = bitcast i8* %157 to %"class.base::BasicStringPiece"*
  %159 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %158, i64 %155
  %160 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %158, i64 %151
  %161 = ptrtoint %"class.base::BasicStringPiece"* %160 to i64
  %162 = icmp eq %"class.base::BasicStringPiece"* %135, null
  %163 = bitcast %"class.base::BasicStringPiece"* %159 to i8*
  br i1 %162, label %165, label %164

164:                                              ; preds = %154
  tail call void @_ZdlPv(i8* %134) #12
  br label %165

165:                                              ; preds = %131, %143, %154, %164
  %166 = phi %"class.base::BasicStringPiece"* [ %146, %143 ], [ %159, %154 ], [ %159, %164 ], [ %136, %131 ]
  %167 = phi i64 [ %138, %143 ], [ %161, %154 ], [ %161, %164 ], [ %138, %131 ]
  %168 = phi i8* [ %147, %143 ], [ %163, %154 ], [ %163, %164 ], [ %140, %131 ]
  %169 = bitcast %"class.base::BasicStringPiece"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %168, i8* align 8 %169, i64 16, i1 false) #11
  %170 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %166, i64 1
  %171 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %5, align 8
  %172 = ptrtoint %"class.base::BasicStringPiece"* %171 to i64
  %173 = sub i64 %4, %172
  %174 = ashr exact i64 %173, 4
  %175 = sub nsw i64 0, %174
  %176 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %166, i64 %175
  %177 = ptrtoint %"class.base::BasicStringPiece"* %176 to i64
  %178 = icmp sgt i64 %173, 0
  br i1 %178, label %179, label %182

179:                                              ; preds = %165
  %180 = bitcast %"class.base::BasicStringPiece"* %176 to i8*
  %181 = bitcast %"class.base::BasicStringPiece"* %171 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %180, i8* align 8 %181, i64 %173, i1 false) #11
  br label %182

182:                                              ; preds = %179, %165
  %183 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %6, align 8
  %184 = icmp eq %"class.base::BasicStringPiece"* %183, %1
  br i1 %184, label %228, label %185

185:                                              ; preds = %182
  %186 = getelementptr %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %183, i64 -1, i32 0
  %187 = ptrtoint i8** %186 to i64
  %188 = sub i64 %187, %4
  %189 = lshr i64 %188, 4
  %190 = add nuw nsw i64 %189, 1
  %191 = and i64 %190, 3
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %203, label %193

193:                                              ; preds = %185, %193
  %194 = phi %"class.base::BasicStringPiece"* [ %200, %193 ], [ %170, %185 ]
  %195 = phi %"class.base::BasicStringPiece"* [ %199, %193 ], [ %1, %185 ]
  %196 = phi i64 [ %201, %193 ], [ %191, %185 ]
  %197 = bitcast %"class.base::BasicStringPiece"* %194 to i8*
  %198 = bitcast %"class.base::BasicStringPiece"* %195 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %197, i8* align 8 %198, i64 16, i1 false) #11
  %199 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %195, i64 1
  %200 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %194, i64 1
  %201 = add i64 %196, -1
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %203, label %193, !llvm.loop !6

203:                                              ; preds = %193, %185
  %204 = phi %"class.base::BasicStringPiece"* [ undef, %185 ], [ %200, %193 ]
  %205 = phi %"class.base::BasicStringPiece"* [ %170, %185 ], [ %200, %193 ]
  %206 = phi %"class.base::BasicStringPiece"* [ %1, %185 ], [ %199, %193 ]
  %207 = icmp ult i64 %188, 48
  br i1 %207, label %228, label %208

208:                                              ; preds = %203, %208
  %209 = phi %"class.base::BasicStringPiece"* [ %226, %208 ], [ %205, %203 ]
  %210 = phi %"class.base::BasicStringPiece"* [ %225, %208 ], [ %206, %203 ]
  %211 = bitcast %"class.base::BasicStringPiece"* %209 to i8*
  %212 = bitcast %"class.base::BasicStringPiece"* %210 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %211, i8* align 8 %212, i64 16, i1 false) #11
  %213 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %210, i64 1
  %214 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %209, i64 1
  %215 = bitcast %"class.base::BasicStringPiece"* %214 to i8*
  %216 = bitcast %"class.base::BasicStringPiece"* %213 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %215, i8* align 8 %216, i64 16, i1 false) #11
  %217 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %210, i64 2
  %218 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %209, i64 2
  %219 = bitcast %"class.base::BasicStringPiece"* %218 to i8*
  %220 = bitcast %"class.base::BasicStringPiece"* %217 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %219, i8* align 8 %220, i64 16, i1 false) #11
  %221 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %210, i64 3
  %222 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %209, i64 3
  %223 = bitcast %"class.base::BasicStringPiece"* %222 to i8*
  %224 = bitcast %"class.base::BasicStringPiece"* %221 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %223, i8* align 8 %224, i64 16, i1 false) #11
  %225 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %210, i64 4
  %226 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %209, i64 4
  %227 = icmp eq %"class.base::BasicStringPiece"* %225, %183
  br i1 %227, label %228, label %208

228:                                              ; preds = %203, %208, %182
  %229 = phi %"class.base::BasicStringPiece"* [ %170, %182 ], [ %204, %203 ], [ %226, %208 ]
  %230 = ptrtoint %"class.base::BasicStringPiece"* %229 to i64
  %231 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %5, align 8
  store i64 %177, i64* %99, align 8
  store i64 %230, i64* %98, align 8
  store i64 %167, i64* %108, align 8
  %232 = icmp eq %"class.base::BasicStringPiece"* %231, null
  br i1 %232, label %235, label %233

233:                                              ; preds = %228
  %234 = bitcast %"class.base::BasicStringPiece"* %231 to i8*
  tail call void @_ZdlPv(i8* %234) #12
  br label %235

235:                                              ; preds = %233, %228, %15, %93
  %236 = phi %"class.base::BasicStringPiece"* [ %1, %15 ], [ %1, %93 ], [ %166, %228 ], [ %166, %233 ]
  ret %"class.base::BasicStringPiece"* %236
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN3net12GeneralNamesD1Ev(%"struct.net::GeneralNames"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS2_15ParsedExtensionEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS2_15ParsedExtensionEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS2_15ParsedExtensionEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net18SignatureAlgorithmD1Ev(%"class.net::SignatureAlgorithm"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !5}
