; ModuleID = '../../net/third_party/quiche/src/quic/core/qpack/qpack_encoder.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/qpack/qpack_encoder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.quic::QpackEncoder" = type <{ %"class.quic::QpackDecoderStreamReceiver::Delegate", %"class.quic::QpackEncoder::DecoderStreamErrorDelegate"*, %"class.quic::QpackDecoderStreamReceiver", %"class.quic::QpackEncoderStreamSender", %"class.quic::QpackEncoderHeaderTable", i64, %"class.quic::QpackBlockingManager", i32, [4 x i8] }>
%"class.quic::QpackDecoderStreamReceiver::Delegate" = type { i32 (...)** }
%"class.quic::QpackDecoderStreamReceiver" = type <{ %"class.quic::QpackInstructionDecoder::Delegate", %"class.quic::QpackStreamReceiver", %"class.quic::QpackInstructionDecoder", %"class.quic::QpackDecoderStreamReceiver::Delegate"*, i8, [7 x i8] }>
%"class.quic::QpackInstructionDecoder::Delegate" = type { i32 (...)** }
%"class.quic::QpackStreamReceiver" = type { i32 (...)** }
%"class.quic::QpackInstructionDecoder" = type { %"class.std::__1::vector"*, %"class.quic::QpackInstructionDecoder::Delegate"*, i8, i64, i64, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i64, %"class.http2::HpackVarintDecoder", %"class.http2::HpackHuffmanDecoder", i8, i32, %"struct.quic::QpackInstruction"*, %"class.std::__1::__wrap_iter" }
%"class.std::__1::vector" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.http2::HpackVarintDecoder" = type <{ i64, i8, [7 x i8] }>
%"class.http2::HpackHuffmanDecoder" = type { %"class.http2::HuffmanBitBuffer" }
%"class.http2::HuffmanBitBuffer" = type { i64, i64 }
%"struct.quic::QpackInstruction" = type { %"struct.quic::QpackInstructionOpcode", %"class.std::__1::vector.1" }
%"struct.quic::QpackInstructionOpcode" = type { i8, i8 }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.quic::QpackInstructionField"*, %"struct.quic::QpackInstructionField"*, %"class.std::__1::__compressed_pair.2" }
%"struct.quic::QpackInstructionField" = type { i32, i8 }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.quic::QpackInstructionField"* }
%"class.std::__1::__wrap_iter" = type { %"struct.quic::QpackInstructionField"* }
%"class.quic::QpackEncoderStreamSender" = type { %"class.quic::QpackStreamSenderDelegate"*, %"class.quic::QpackInstructionEncoder", %"class.std::__1::basic_string" }
%"class.quic::QpackStreamSenderDelegate" = type { i32 (...)** }
%"class.quic::QpackInstructionEncoder" = type { i8, i64, i8, i32, %"struct.quic::QpackInstruction"*, %"class.std::__1::__wrap_iter" }
%"class.quic::QpackEncoderHeaderTable" = type { %"class.quic::QpackHeaderTableBase.base", %"class.absl::flat_hash_map"*, %"class.absl::flat_hash_map.23"*, %"class.absl::flat_hash_map", %"class.absl::flat_hash_map.23" }
%"class.quic::QpackHeaderTableBase.base" = type <{ i32 (...)**, %"class.std::__1::deque", i64, i64, i64, i64, i64, i8 }>
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.12" }
%"struct.std::__1::__split_buffer" = type { %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"**, %"class.std::__1::__compressed_pair.7" }
%"class.spdy::HpackEntry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.spdy::HpackEntry"** }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i64 }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type { %"struct.std::__1::pair.102" }
%"struct.std::__1::pair.102" = type { %"struct.spdy::HpackLookupEntry", i64 }
%"struct.spdy::HpackLookupEntry" = type { %"class.absl::string_view", %"class.absl::string_view" }
%"class.absl::string_view" = type { i8*, i64 }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.absl::flat_hash_map.23" = type { %"class.absl::container_internal::raw_hash_map.24" }
%"class.absl::container_internal::raw_hash_map.24" = type { %"class.absl::container_internal::raw_hash_set.25" }
%"class.absl::container_internal::raw_hash_set.25" = type { i8*, %"union.absl::container_internal::map_slot_type.26"*, i64, i64, %"class.absl::container_internal::CompressedTuple.27" }
%"union.absl::container_internal::map_slot_type.26" = type { %"struct.std::__1::pair.104" }
%"struct.std::__1::pair.104" = type { %"class.absl::string_view", i64 }
%"class.absl::container_internal::CompressedTuple.27" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.28" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.28" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.quic::QpackBlockingManager" = type { %"class.absl::flat_hash_map.34", %"class.std::__1::map", i64 }
%"class.absl::flat_hash_map.34" = type { %"class.absl::container_internal::raw_hash_map.35" }
%"class.absl::container_internal::raw_hash_map.35" = type { %"class.absl::container_internal::raw_hash_set.36" }
%"class.absl::container_internal::raw_hash_set.36" = type { i8*, %"union.absl::container_internal::map_slot_type.37"*, i64, i64, %"class.absl::container_internal::CompressedTuple.38" }
%"union.absl::container_internal::map_slot_type.37" = type { %"struct.std::__1::pair.106" }
%"struct.std::__1::pair.106" = type { i32, %"class.std::__1::list.107" }
%"class.std::__1::list.107" = type { %"class.std::__1::__list_imp.108" }
%"class.std::__1::__list_imp.108" = type { %"struct.std::__1::__list_node_base.109", %"class.std::__1::__compressed_pair.110" }
%"struct.std::__1::__list_node_base.109" = type { %"struct.std::__1::__list_node_base.109"*, %"struct.std::__1::__list_node_base.109"* }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.absl::container_internal::CompressedTuple.38" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.39" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.39" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.49", %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.quic::QpackEncoder::DecoderStreamErrorDelegate" = type { i32 (...)** }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.115" }
%"struct.std::__1::pair.115" = type { i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.quic::QpackInstructionWithValues" = type { %"struct.quic::QpackInstruction"*, i8, i64, i64, %"class.absl::string_view", %"class.absl::string_view" }
%"class.std::__1::multiset" = type { %"class.std::__1::__tree.57" }
%"class.std::__1::__tree.57" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.58", %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__tree_node.133" = type { %"class.std::__1::__tree_node_base.base", i64 }
%"class.std::__1::vector.87" = type { %"class.std::__1::__vector_base.88" }
%"class.std::__1::__vector_base.88" = type { %"class.quic::QpackInstructionWithValues"*, %"class.quic::QpackInstructionWithValues"*, %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.quic::QpackInstructionWithValues"* }
%"class.spdy::Http2HeaderBlock" = type { %"class.quiche::QuicheLinkedHashMap", %"class.spdy::SpdyHeaderStorage", i64, i64 }
%"class.quiche::QuicheLinkedHashMap" = type { %"class.absl::node_hash_map", %"class.std::__1::list" }
%"class.absl::node_hash_map" = type { %"class.absl::container_internal::raw_hash_map.64" }
%"class.absl::container_internal::raw_hash_map.64" = type { %"class.absl::container_internal::raw_hash_set.65" }
%"class.absl::container_internal::raw_hash_set.65" = type { i8*, %"struct.std::__1::pair"**, i64, i64, %"class.absl::container_internal::CompressedTuple.66" }
%"struct.std::__1::pair" = type { %"class.absl::string_view", %"class.std::__1::__list_iterator" }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.absl::container_internal::CompressedTuple.66" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.67" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.67" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.spdy::SpdyHeaderStorage" = type { %"class.spdy::SpdySimpleArena" }
%"class.spdy::SpdySimpleArena" = type { i64, %"class.std::__1::vector.77", %"class.spdy::SpdySimpleArena::Status" }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.spdy::SpdySimpleArena::Block"*, %"struct.spdy::SpdySimpleArena::Block"*, %"class.std::__1::__compressed_pair.82" }
%"struct.spdy::SpdySimpleArena::Block" = type { %"class.std::__1::unique_ptr", i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { i8* }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"struct.spdy::SpdySimpleArena::Block"* }
%"class.spdy::SpdySimpleArena::Status" = type { i64 }
%"class.quic::ValueSplittingHeaderList" = type { %"class.spdy::Http2HeaderBlock"* }
%"class.quic::ValueSplittingHeaderList::const_iterator" = type { %"class.spdy::Http2HeaderBlock"*, %"class.spdy::Http2HeaderBlock::iterator", i64, i64, %"struct.std::__1::pair.94" }
%"class.spdy::Http2HeaderBlock::iterator" = type { %"class.std::__1::__list_const_iterator" }
%"class.std::__1::__list_const_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"struct.std::__1::pair.94" = type { %"class.absl::string_view", %"class.absl::string_view" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.96", [4 x i8] }>
%"struct.std::__1::atomic.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__atomic_base.98" }
%"struct.std::__1::__atomic_base.98" = type { %"struct.std::__1::__cxx_atomic_impl.99" }
%"struct.std::__1::__cxx_atomic_impl.99" = type { %"struct.std::__1::__cxx_atomic_base_impl.100" }
%"struct.std::__1::__cxx_atomic_base_impl.100" = type { i32 }
%"class.quic::QpackHeaderTableBase" = type <{ i32 (...)**, %"class.std::__1::deque", i64, i64, i64, i64, i64, i8, [7 x i8] }>
%"class.absl::AlphaNum" = type { %"class.absl::string_view", [32 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::__split_buffer.123" = type { %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"**, %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.8", %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.std::__1::allocator.10"* }
%"class.std::__1::allocator.10" = type { i8 }

$_ZNSt3__16__treeINS_12__value_typeImmEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__14listINS3_8multisetImNS3_4lessImEENS3_9allocatorImEEEENS8_ISA_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS8_INS3_4pairIKjSC_EEEEE13destroy_slotsEv = comdat any

$_ZN4quic20QpackHeaderTableBaseINSt3__15dequeIN4spdy10HpackEntryENS1_9allocatorIS4_EEEEED2Ev = comdat any

$_ZN4quic20QpackHeaderTableBaseINSt3__15dequeIN4spdy10HpackEntryENS1_9allocatorIS4_EEEEED0Ev = comdat any

$_ZN4quic20QpackHeaderTableBaseINSt3__15dequeIN4spdy10HpackEntryENS1_9allocatorIS4_EEEEE11InsertEntryEN4absl11string_viewESA_ = comdat any

$_ZN4quic20QpackHeaderTableBaseINSt3__15dequeIN4spdy10HpackEntryENS1_9allocatorIS4_EEEEE18RemoveEntryFromEndEv = comdat any

$_ZNSt3__112__deque_baseIN4spdy10HpackEntryENS_9allocatorIS2_EEE5clearEv = comdat any

$_ZNSt3__15dequeIN4spdy10HpackEntryENS_9allocatorIS2_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPN4spdy10HpackEntryENS_9allocatorIS3_EEE9push_backEOS3_ = comdat any

$_ZNSt3__114__split_bufferIPN4spdy10HpackEntryENS_9allocatorIS3_EEE10push_frontEOS3_ = comdat any

$_ZNSt3__114__split_bufferIPN4spdy10HpackEntryERNS_9allocatorIS3_EEE10push_frontERKS3_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE7destroyEPNS_11__tree_nodeImPvEE = comdat any

$_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = comdat any

$_ZTVN4quic20QpackHeaderTableBaseINSt3__15dequeIN4spdy10HpackEntryENS1_9allocatorIS4_EEEEEE = comdat any

@_ZTVN4quic12QpackEncoderE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.quic::QpackEncoder"*)* @_ZN4quic12QpackEncoderD2Ev to i8*), i8* bitcast (void (%"class.quic::QpackEncoder"*)* @_ZN4quic12QpackEncoderD0Ev to i8*), i8* bitcast (void (%"class.quic::QpackEncoder"*, i64)* @_ZN4quic12QpackEncoder22OnInsertCountIncrementEm to i8*), i8* bitcast (void (%"class.quic::QpackEncoder"*, i32)* @_ZN4quic12QpackEncoder23OnHeaderAcknowledgementEj to i8*), i8* bitcast (void (%"class.quic::QpackEncoder"*, i32)* @_ZN4quic12QpackEncoder20OnStreamCancellationEj to i8*), i8* bitcast (void (%"class.quic::QpackEncoder"*, i32, i8*, i64)* @_ZN4quic12QpackEncoder15OnErrorDetectedENS_13QuicErrorCodeEN4absl11string_viewE to i8*)] }, align 8
@.str = private unnamed_addr constant [58 x i8] c"Net.QuicSession.Qpack.HeaderListCountWhenInsertionBlocked\00", align 1
@.str.1 = private unnamed_addr constant [61 x i8] c"Net.QuicSession.Qpack.HeaderListCountWhenInsertionNotBlocked\00", align 1
@.str.2 = private unnamed_addr constant [62 x i8] c"Net.QuicSession.Qpack.HeaderListCountWhenBlockedStreamLimited\00", align 1
@.str.3 = private unnamed_addr constant [65 x i8] c"Net.QuicSession.Qpack.HeaderListCountWhenNotBlockedStreamLimited\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"Invalid increment value 0.\00", align 1
@.str.5 = private unnamed_addr constant [52 x i8] c"Insert Count Increment instruction causes overflow.\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"Increment value \00", align 1
@.str.7 = private unnamed_addr constant [33 x i8] c" raises known received count to \00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c" exceeding inserted entry count \00", align 1
@.str.9 = private unnamed_addr constant [44 x i8] c"Header Acknowledgement received for stream \00", align 1
@.str.10 = private unnamed_addr constant [36 x i8] c" with no outstanding header blocks.\00", align 1
@_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = linkonce_odr hidden constant [16 x i8] c"\FF\80\80\80\80\80\80\80\80\80\80\80\80\80\80\80", comdat, align 16
@_ZTVN4quic23QpackEncoderHeaderTableE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN4quic20QpackHeaderTableBaseINSt3__15dequeIN4spdy10HpackEntryENS1_9allocatorIS4_EEEEEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.quic::QpackHeaderTableBase"*)* @_ZN4quic20QpackHeaderTableBaseINSt3__15dequeIN4spdy10HpackEntryENS1_9allocatorIS4_EEEEED2Ev to i8*), i8* bitcast (void (%"class.quic::QpackHeaderTableBase"*)* @_ZN4quic20QpackHeaderTableBaseINSt3__15dequeIN4spdy10HpackEntryENS1_9allocatorIS4_EEEEED0Ev to i8*), i8* bitcast (i64 (%"class.quic::QpackHeaderTableBase"*, i8*, i64, i8*, i64)* @_ZN4quic20QpackHeaderTableBaseINSt3__15dequeIN4spdy10HpackEntryENS1_9allocatorIS4_EEEEE11InsertEntryEN4absl11string_viewESA_ to i8*), i8* bitcast (void (%"class.quic::QpackHeaderTableBase"*)* @_ZN4quic20QpackHeaderTableBaseINSt3__15dequeIN4spdy10HpackEntryENS1_9allocatorIS4_EEEEE18RemoveEntryFromEndEv to i8*)] }, comdat, align 8
@_ZTVN4quic26QpackDecoderStreamReceiverE = external unnamed_addr constant { [7 x i8*], [5 x i8*] }, align 8
@_ZZN4quic12QpackEncoder15FirstPassEncodeEjRKN4spdy16Http2HeaderBlockEPNSt3__18multisetImNS5_4lessImEENS5_9allocatorImEEEEPmE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN4quic12QpackEncoder15FirstPassEncodeEjRKN4spdy16Http2HeaderBlockEPNSt3__18multisetImNS5_4lessImEENS5_9allocatorImEEEEPmE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN4quic12QpackEncoder15FirstPassEncodeEjRKN4spdy16Http2HeaderBlockEPNSt3__18multisetImNS5_4lessImEENS5_9allocatorImEEEEPmE24atomic_histogram_pointer_1.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN4quic12QpackEncoder15FirstPassEncodeEjRKN4spdy16Http2HeaderBlockEPNSt3__18multisetImNS5_4lessImEENS5_9allocatorImEEEEPmE24atomic_histogram_pointer_2.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN4quic12QpackEncoderC1EPNS0_26DecoderStreamErrorDelegateE = hidden unnamed_addr alias void (%"class.quic::QpackEncoder"*, %"class.quic::QpackEncoder::DecoderStreamErrorDelegate"*), void (%"class.quic::QpackEncoder"*, %"class.quic::QpackEncoder::DecoderStreamErrorDelegate"*)* @_ZN4quic12QpackEncoderC2EPNS0_26DecoderStreamErrorDelegateE
@_ZN4quic12QpackEncoderD1Ev = hidden unnamed_addr alias void (%"class.quic::QpackEncoder"*), void (%"class.quic::QpackEncoder"*)* @_ZN4quic12QpackEncoderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic12QpackEncoderC2EPNS0_26DecoderStreamErrorDelegateE(%"class.quic::QpackEncoder"*, %"class.quic::QpackEncoder::DecoderStreamErrorDelegate"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4quic12QpackEncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 1
  store %"class.quic::QpackEncoder::DecoderStreamErrorDelegate"* %1, %"class.quic::QpackEncoder::DecoderStreamErrorDelegate"** %5, align 8
  %6 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 2
  tail call void @_ZN4quic26QpackDecoderStreamReceiverC1EPNS0_8DelegateE(%"class.quic::QpackDecoderStreamReceiver"* %6, %"class.quic::QpackDecoderStreamReceiver::Delegate"* %3) #10
  %7 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 3
  tail call void @_ZN4quic24QpackEncoderStreamSenderC1Ev(%"class.quic::QpackEncoderStreamSender"* %7) #10
  %8 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 4
  tail call void @_ZN4quic23QpackEncoderHeaderTableC1Ev(%"class.quic::QpackEncoderHeaderTable"* %8) #10
  %9 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 5
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 6
  tail call void @_ZN4quic20QpackBlockingManagerC1Ev(%"class.quic::QpackBlockingManager"* %10) #10
  %11 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 7
  store i32 0, i32* %11, align 8
  ret void
}

declare void @_ZN4quic26QpackDecoderStreamReceiverC1EPNS0_8DelegateE(%"class.quic::QpackDecoderStreamReceiver"*, %"class.quic::QpackDecoderStreamReceiver::Delegate"*) unnamed_addr #1

declare void @_ZN4quic24QpackEncoderStreamSenderC1Ev(%"class.quic::QpackEncoderStreamSender"*) unnamed_addr #1

declare void @_ZN4quic23QpackEncoderHeaderTableC1Ev(%"class.quic::QpackEncoderHeaderTable"*) unnamed_addr #1

declare void @_ZN4quic20QpackBlockingManagerC1Ev(%"class.quic::QpackBlockingManager"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic12QpackEncoderD2Ev(%"class.quic::QpackEncoder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4quic12QpackEncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 6, i32 1, i32 0
  %4 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 6, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImmEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %3, %"class.std::__1::__tree_node"* %6) #10
  %7 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__14listINS3_8multisetImNS3_4lessImEENS3_9allocatorImEEEENS8_ISA_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS8_INS3_4pairIKjSC_EEEEE13destroy_slotsEv(%"class.absl::container_internal::raw_hash_set.36"* %7) #10
  %8 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 4, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4quic23QpackEncoderHeaderTableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 4, i32 4, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 4, i32 4, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 4, i32 4, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #11
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.26"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #10
  br label %17

17:                                               ; preds = %12, %1
  %18 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 4, i32 3, i32 0, i32 0, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 4, i32 3, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 4, i32 3, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #11
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %23, align 8
  %25 = bitcast %"union.absl::container_internal::map_slot_type"** %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 32, i1 false) #10
  br label %26

26:                                               ; preds = %17, %21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4quic20QpackHeaderTableBaseINSt3__15dequeIN4spdy10HpackEntryENS1_9allocatorIS4_EEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %27 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 4, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__112__deque_baseIN4spdy10HpackEntryENS_9allocatorIS2_EEE5clearEv(%"class.std::__1::__deque_base"* %27) #10
  %28 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 1
  %29 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %28, align 8
  %30 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 2
  %31 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %30, align 8
  %32 = icmp eq %"class.spdy::HpackEntry"** %29, %31
  br i1 %32, label %51, label %33

33:                                               ; preds = %26, %33
  %34 = phi %"class.spdy::HpackEntry"** [ %37, %33 ], [ %29, %26 ]
  %35 = bitcast %"class.spdy::HpackEntry"** %34 to i8**
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #11
  %37 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %34, i64 1
  %38 = icmp eq %"class.spdy::HpackEntry"** %37, %31
  br i1 %38, label %39, label %33

39:                                               ; preds = %33
  %40 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %28, align 8
  %41 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %30, align 8
  %42 = icmp eq %"class.spdy::HpackEntry"** %41, %40
  br i1 %42, label %51, label %43

43:                                               ; preds = %39
  %44 = ptrtoint %"class.spdy::HpackEntry"** %40 to i64
  %45 = getelementptr %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %41, i64 -1
  %46 = ptrtoint %"class.spdy::HpackEntry"** %45 to i64
  %47 = sub i64 %46, %44
  %48 = lshr i64 %47, 3
  %49 = xor i64 %48, -1
  %50 = getelementptr %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %41, i64 %49
  store %"class.spdy::HpackEntry"** %50, %"class.spdy::HpackEntry"*** %30, align 8
  br label %51

51:                                               ; preds = %43, %39, %26
  %52 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %27, i64 0, i32 0, i32 0
  %53 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %52, align 8
  %54 = icmp eq %"class.spdy::HpackEntry"** %53, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %51
  %56 = bitcast %"class.spdy::HpackEntry"** %53 to i8*
  tail call void @_ZdlPv(i8* %56) #11
  br label %57

57:                                               ; preds = %51, %55
  %58 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 3, i32 2
  %59 = bitcast %"class.std::__1::basic_string"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  tail call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %57, %63
  %67 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 2, i32 0, i32 0
  %68 = bitcast i32 (...)*** %67 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTVN4quic26QpackDecoderStreamReceiverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTVN4quic26QpackDecoderStreamReceiverE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %68, align 8
  %69 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 2, i32 2, i32 10
  tail call void @_ZN5http219HpackHuffmanDecoderD1Ev(%"class.http2::HpackHuffmanDecoder"* %69) #10
  %70 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 2, i32 2, i32 6
  %71 = bitcast %"class.std::__1::basic_string"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  tail call void @_ZdlPv(i8* %77) #11
  br label %78

78:                                               ; preds = %75, %66
  %79 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 2, i32 2, i32 5
  %80 = bitcast %"class.std::__1::basic_string"* %79 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  tail call void @_ZdlPv(i8* %86) #11
  br label %87

87:                                               ; preds = %78, %84
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic12QpackEncoderD0Ev(%"class.quic::QpackEncoder"*) unnamed_addr #0 align 2 {
  tail call void @_ZN4quic12QpackEncoderD2Ev(%"class.quic::QpackEncoder"* %0) #10
  %2 = bitcast %"class.quic::QpackEncoder"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic12QpackEncoder24EncodeIndexedHeaderFieldEbmPNSt3__18multisetImNS1_4lessImEENS1_9allocatorImEEEE(%"class.quic::QpackInstructionWithValues"* noalias sret, i1 zeroext, i64, %"class.std::__1::multiset"*) local_unnamed_addr #0 align 2 {
  br i1 %1, label %60, label %5

5:                                                ; preds = %4
  %6 = tail call i8* @_Znwm(i64 40) #11, !noalias !2
  %7 = getelementptr inbounds i8, i8* %6, i64 32
  %8 = bitcast i8* %7 to i64*
  store i64 %2, i64* %8, align 8, !noalias !2
  %9 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node.133"**
  %11 = load %"class.std::__1::__tree_node.133"*, %"class.std::__1::__tree_node.133"** %10, align 8
  %12 = icmp eq %"class.std::__1::__tree_node.133"* %11, null
  br i1 %12, label %35, label %13

13:                                               ; preds = %5, %32
  %14 = phi %"class.std::__1::__tree_node.133"* [ %34, %32 ], [ %11, %5 ]
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %14, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, %2
  br i1 %17, label %18, label %25

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %14, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %19, align 8
  %21 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %21, label %22, label %32

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %14, i64 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %14, i64 0, i32 0, i32 0
  br label %37

25:                                               ; preds = %13
  %26 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %14, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %32

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %14, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %14, i64 0, i32 0, i32 0
  br label %37

32:                                               ; preds = %25, %18
  %33 = phi %"class.std::__1::__tree_node_base"* [ %20, %18 ], [ %27, %25 ]
  %34 = bitcast %"class.std::__1::__tree_node_base"* %33 to %"class.std::__1::__tree_node.133"*
  br label %13

35:                                               ; preds = %5
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 0, i32 0
  br label %37

37:                                               ; preds = %35, %29, %22
  %38 = phi %"class.std::__1::__tree_end_node"* [ %9, %35 ], [ %24, %22 ], [ %31, %29 ]
  %39 = phi %"class.std::__1::__tree_node_base"** [ %36, %35 ], [ %23, %22 ], [ %30, %29 ]
  %40 = bitcast i8* %6 to %"class.std::__1::__tree_node_base"*
  %41 = getelementptr inbounds i8, i8* %6, i64 16
  %42 = bitcast i8* %41 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %42, align 8
  %43 = bitcast %"class.std::__1::__tree_node_base"** %39 to i8**
  store i8* %6, i8** %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %3, i64 0, i32 0, i32 0
  %45 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %44, align 8
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %45, i64 0, i32 0
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node_base"* %47, null
  br i1 %48, label %53, label %49

49:                                               ; preds = %37
  %50 = ptrtoint %"class.std::__1::__tree_node_base"* %47 to i64
  %51 = bitcast %"class.std::__1::multiset"* %3 to i64*
  store i64 %50, i64* %51, align 8
  %52 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  br label %53

53:                                               ; preds = %37, %49
  %54 = phi %"class.std::__1::__tree_node_base"* [ %40, %37 ], [ %52, %49 ]
  %55 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %56, %"class.std::__1::__tree_node_base"* %54) #10
  %57 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, 1
  store i64 %59, i64* %57, align 8
  br label %60

60:                                               ; preds = %53, %4
  tail call void @_ZN4quic26QpackInstructionWithValues18IndexedHeaderFieldEbm(%"class.quic::QpackInstructionWithValues"* sret %0, i1 zeroext %1, i64 %2) #10
  ret void
}

declare void @_ZN4quic26QpackInstructionWithValues18IndexedHeaderFieldEbm(%"class.quic::QpackInstructionWithValues"* sret, i1 zeroext, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic12QpackEncoder41EncodeLiteralHeaderFieldWithNameReferenceEbmN4absl11string_viewEPNSt3__18multisetImNS3_4lessImEENS3_9allocatorImEEEE(%"class.quic::QpackInstructionWithValues"* noalias sret, i1 zeroext, i64, i8*, i64, %"class.std::__1::multiset"*) local_unnamed_addr #0 align 2 {
  br i1 %1, label %62, label %7

7:                                                ; preds = %6
  %8 = tail call i8* @_Znwm(i64 40) #11, !noalias !5
  %9 = getelementptr inbounds i8, i8* %8, i64 32
  %10 = bitcast i8* %9 to i64*
  store i64 %2, i64* %10, align 8, !noalias !5
  %11 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node.133"**
  %13 = load %"class.std::__1::__tree_node.133"*, %"class.std::__1::__tree_node.133"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node.133"* %13, null
  br i1 %14, label %37, label %15

15:                                               ; preds = %7, %34
  %16 = phi %"class.std::__1::__tree_node.133"* [ %36, %34 ], [ %13, %7 ]
  %17 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %16, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ugt i64 %18, %2
  br i1 %19, label %20, label %27

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %16, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %21, align 8
  %23 = icmp eq %"class.std::__1::__tree_node_base"* %22, null
  br i1 %23, label %24, label %34

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %16, i64 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %16, i64 0, i32 0, i32 0
  br label %39

27:                                               ; preds = %15
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %16, i64 0, i32 0, i32 1
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, null
  br i1 %30, label %31, label %34

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %16, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %16, i64 0, i32 0, i32 0
  br label %39

34:                                               ; preds = %27, %20
  %35 = phi %"class.std::__1::__tree_node_base"* [ %22, %20 ], [ %29, %27 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %35 to %"class.std::__1::__tree_node.133"*
  br label %15

37:                                               ; preds = %7
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 0, i32 0
  br label %39

39:                                               ; preds = %37, %31, %24
  %40 = phi %"class.std::__1::__tree_end_node"* [ %11, %37 ], [ %26, %24 ], [ %33, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %25, %24 ], [ %32, %31 ]
  %42 = bitcast i8* %8 to %"class.std::__1::__tree_node_base"*
  %43 = getelementptr inbounds i8, i8* %8, i64 16
  %44 = bitcast i8* %43 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_node_base"** %41 to i8**
  store i8* %8, i8** %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %5, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %46, align 8
  %48 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %47, i64 0, i32 0
  %49 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  %50 = icmp eq %"class.std::__1::__tree_node_base"* %49, null
  br i1 %50, label %55, label %51

51:                                               ; preds = %39
  %52 = ptrtoint %"class.std::__1::__tree_node_base"* %49 to i64
  %53 = bitcast %"class.std::__1::multiset"* %5 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  br label %55

55:                                               ; preds = %39, %51
  %56 = phi %"class.std::__1::__tree_node_base"* [ %42, %39 ], [ %54, %51 ]
  %57 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %58, %"class.std::__1::__tree_node_base"* %56) #10
  %59 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %59, align 8
  br label %62

62:                                               ; preds = %55, %6
  tail call void @_ZN4quic26QpackInstructionWithValues31LiteralHeaderFieldNameReferenceEbmN4absl11string_viewE(%"class.quic::QpackInstructionWithValues"* sret %0, i1 zeroext %1, i64 %2, i8* %3, i64 %4) #10
  ret void
}

declare void @_ZN4quic26QpackInstructionWithValues31LiteralHeaderFieldNameReferenceEbmN4absl11string_viewE(%"class.quic::QpackInstructionWithValues"* sret, i1 zeroext, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic12QpackEncoder24EncodeLiteralHeaderFieldEN4absl11string_viewES2_(%"class.quic::QpackInstructionWithValues"* noalias sret, i8*, i64, i8*, i64) local_unnamed_addr #0 align 2 {
  tail call void @_ZN4quic26QpackInstructionWithValues18LiteralHeaderFieldEN4absl11string_viewES2_(%"class.quic::QpackInstructionWithValues"* sret %0, i8* %1, i64 %2, i8* %3, i64 %4) #10
  ret void
}

declare void @_ZN4quic26QpackInstructionWithValues18LiteralHeaderFieldEN4absl11string_viewES2_(%"class.quic::QpackInstructionWithValues"* sret, i8*, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic12QpackEncoder15FirstPassEncodeEjRKN4spdy16Http2HeaderBlockEPNSt3__18multisetImNS5_4lessImEENS5_9allocatorImEEEEPm(%"class.std::__1::vector.87"* noalias sret, %"class.quic::QpackEncoder"*, i32, %"class.spdy::Http2HeaderBlock"* dereferenceable(120), %"class.std::__1::multiset"*, i64*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.quic::ValueSplittingHeaderList", align 8
  %8 = alloca %"class.quic::ValueSplittingHeaderList::const_iterator", align 8
  %9 = alloca %"class.quic::ValueSplittingHeaderList::const_iterator", align 8
  %10 = alloca i8, align 1
  %11 = alloca i64, align 8
  %12 = alloca %"class.quic::QpackInstructionWithValues", align 8
  %13 = alloca %"class.quic::QpackInstructionWithValues", align 8
  %14 = alloca %"class.quic::QpackInstructionWithValues", align 8
  %15 = alloca %"class.quic::QpackInstructionWithValues", align 8
  %16 = alloca %"class.quic::QpackInstructionWithValues", align 8
  %17 = alloca %"class.quic::QpackInstructionWithValues", align 8
  %18 = alloca %"class.quic::QpackInstructionWithValues", align 8
  %19 = alloca %"class.quic::QpackInstructionWithValues", align 8
  %20 = alloca %"class.quic::QpackInstructionWithValues", align 8
  %21 = alloca %"class.quic::QpackInstructionWithValues", align 8
  %22 = alloca %"class.quic::QpackInstructionWithValues", align 8
  %23 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %1, i64 0, i32 3
  %24 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %1, i64 0, i32 3, i32 2
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %6
  %30 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %1, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  br label %34

32:                                               ; preds = %6
  %33 = zext i8 %27 to i64
  br label %34

34:                                               ; preds = %29, %32
  %35 = phi i64 [ %31, %29 ], [ %33, %32 ]
  %36 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %0, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %"class.std::__1::vector.87"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #10
  %39 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.quic::QpackInstructionWithValues"** %37 to i64*
  %42 = bitcast %"class.std::__1::vector.87"* %0 to i64*
  %43 = icmp eq i64 %40, 0
  br i1 %43, label %57, label %44

44:                                               ; preds = %34
  %45 = icmp ugt i64 %40, 288230376151711743
  br i1 %45, label %46, label %47

46:                                               ; preds = %44
  tail call void @abort() #12
  unreachable

47:                                               ; preds = %44
  %48 = shl i64 %40, 6
  %49 = tail call i8* @_Znwm(i64 %48) #11
  %50 = bitcast i8* %49 to %"class.quic::QpackInstructionWithValues"*
  %51 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %50, i64 %40
  %52 = ptrtoint %"class.quic::QpackInstructionWithValues"* %51 to i64
  %53 = insertelement <2 x i8*> undef, i8* %49, i32 0
  %54 = shufflevector <2 x i8*> %53, <2 x i8*> undef, <2 x i32> zeroinitializer
  %55 = ptrtoint <2 x i8*> %54 to <2 x i64>
  %56 = bitcast %"class.std::__1::vector.87"* %0 to <2 x i64>*
  store <2 x i64> %55, <2 x i64>* %56, align 8
  store i64 %52, i64* %41, align 8
  br label %57

57:                                               ; preds = %47, %34
  %58 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %1, i64 0, i32 6
  %59 = tail call i64 @_ZNK4quic20QpackBlockingManager23smallest_blocking_indexEv(%"class.quic::QpackBlockingManager"* %58) #10
  %60 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %1, i64 0, i32 6, i32 2
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %1, i64 0, i32 4
  %63 = tail call i64 @_ZNK4quic23QpackEncoderHeaderTable14draining_indexEf(%"class.quic::QpackEncoderHeaderTable"* %62, float 2.500000e-01) #10
  %64 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %1, i64 0, i32 5
  %65 = load i64, i64* %64, align 8
  %66 = tail call zeroext i1 @_ZNK4quic20QpackBlockingManager26blocking_allowed_on_streamEjm(%"class.quic::QpackBlockingManager"* %58, i32 %2, i64 %65) #10
  %67 = bitcast %"class.quic::ValueSplittingHeaderList"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #10
  call void @_ZN4quic24ValueSplittingHeaderListC1EPKN4spdy16Http2HeaderBlockE(%"class.quic::ValueSplittingHeaderList"* nonnull %7, %"class.spdy::Http2HeaderBlock"* %3) #10
  %68 = bitcast %"class.quic::ValueSplittingHeaderList::const_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %68) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 64, i1 false)
  call void @_ZNK4quic24ValueSplittingHeaderList5beginEv(%"class.quic::ValueSplittingHeaderList::const_iterator"* nonnull sret %8, %"class.quic::ValueSplittingHeaderList"* nonnull %7) #10
  %69 = bitcast %"class.quic::ValueSplittingHeaderList::const_iterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %69) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 64, i1 false)
  call void @_ZNK4quic24ValueSplittingHeaderList3endEv(%"class.quic::ValueSplittingHeaderList::const_iterator"* nonnull sret %9, %"class.quic::ValueSplittingHeaderList"* nonnull %7) #10
  %70 = call zeroext i1 @_ZNK4quic24ValueSplittingHeaderList14const_iteratorneERKS1_(%"class.quic::ValueSplittingHeaderList::const_iterator"* nonnull %8, %"class.quic::ValueSplittingHeaderList::const_iterator"* nonnull dereferenceable(64) %9) #10
  br i1 %70, label %71, label %95

71:                                               ; preds = %57
  %72 = bitcast i64* %11 to i8*
  %73 = bitcast %"class.quic::QpackInstructionWithValues"* %21 to i8*
  %74 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %75 = bitcast %"class.std::__1::__tree_end_node"* %74 to %"class.std::__1::__tree_node.133"**
  %76 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %74, i64 0, i32 0
  %77 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %4, i64 0, i32 0, i32 0
  %78 = bitcast %"class.std::__1::multiset"* %4 to i64*
  %79 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %81 = bitcast %"class.quic::QpackInstructionWithValues"** %36 to i64*
  %82 = bitcast %"class.quic::QpackInstructionWithValues"* %22 to i8*
  %83 = bitcast %"class.quic::QpackInstructionWithValues"* %17 to i8*
  %84 = bitcast %"class.quic::QpackInstructionWithValues"* %16 to i8*
  %85 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %1, i64 0, i32 4, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %86 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %1, i64 0, i32 4, i32 0, i32 6
  %87 = bitcast %"class.quic::QpackInstructionWithValues"* %18 to i8*
  %88 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %1, i64 0, i32 4, i32 0, i32 7
  %89 = bitcast %"class.quic::QpackInstructionWithValues"* %19 to i8*
  %90 = bitcast %"class.quic::QpackInstructionWithValues"* %20 to i8*
  %91 = bitcast %"class.quic::QpackInstructionWithValues"* %12 to i8*
  %92 = bitcast %"class.quic::QpackInstructionWithValues"* %13 to i8*
  %93 = bitcast %"class.quic::QpackInstructionWithValues"* %14 to i8*
  %94 = bitcast %"class.quic::QpackInstructionWithValues"* %15 to i8*
  br label %110

95:                                               ; preds = %1147, %57
  %96 = phi i8 [ 0, %57 ], [ %1149, %1147 ]
  %97 = phi i8 [ 0, %57 ], [ %1150, %1147 ]
  %98 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %9, i64 0, i32 1
  call void @_ZN4spdy16Http2HeaderBlock8iteratorD1Ev(%"class.spdy::Http2HeaderBlock::iterator"* %98) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %69) #10
  %99 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %8, i64 0, i32 1
  call void @_ZN4spdy16Http2HeaderBlock8iteratorD1Ev(%"class.spdy::Http2HeaderBlock::iterator"* %99) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %68) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #10
  %100 = load i8, i8* %26, align 1
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %102, label %105

102:                                              ; preds = %95
  %103 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %1, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %104 = load i64, i64* %103, align 8
  br label %107

105:                                              ; preds = %95
  %106 = zext i8 %100 to i64
  br label %107

107:                                              ; preds = %102, %105
  %108 = phi i64 [ %104, %102 ], [ %106, %105 ]
  %109 = icmp eq i64* %5, null
  br i1 %109, label %1155, label %1153

110:                                              ; preds = %71, %1147
  %111 = phi i8 [ 0, %71 ], [ %1150, %1147 ]
  %112 = phi i8 [ 0, %71 ], [ %1149, %1147 ]
  %113 = phi i64 [ %59, %71 ], [ %1148, %1147 ]
  %114 = call dereferenceable(32) %"struct.std::__1::pair.94"* @_ZNK4quic24ValueSplittingHeaderList14const_iteratordeEv(%"class.quic::ValueSplittingHeaderList::const_iterator"* nonnull %8) #10
  %115 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %114, i64 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  %117 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %114, i64 0, i32 0, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %114, i64 0, i32 1, i32 0
  %120 = load i8*, i8** %119, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair.94", %"struct.std::__1::pair.94"* %114, i64 0, i32 1, i32 1
  %122 = load i64, i64* %121, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #10
  store i8 -86, i8* %10, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #10
  store i64 -6148914691236517206, i64* %11, align 8
  %123 = call i32 @_ZNK4quic23QpackEncoderHeaderTable15FindHeaderFieldEN4absl11string_viewES2_PbPm(%"class.quic::QpackEncoderHeaderTable"* %62, i8* %116, i64 %118, i8* %120, i64 %122, i8* nonnull %10, i64* nonnull %11) #10
  switch i32 %123, label %1147 [
    i32 0, label %124
    i32 1, label %468
    i32 2, label %983
  ]

124:                                              ; preds = %110
  %125 = load i8, i8* %10, align 1, !range !8
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %182, label %127

127:                                              ; preds = %124
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %91) #10
  %128 = load i64, i64* %11, align 8
  call void @_ZN4quic26QpackInstructionWithValues18IndexedHeaderFieldEbm(%"class.quic::QpackInstructionWithValues"* nonnull sret %12, i1 zeroext true, i64 %128) #10
  %129 = load %"class.quic::QpackInstructionWithValues"*, %"class.quic::QpackInstructionWithValues"** %36, align 8
  %130 = load %"class.quic::QpackInstructionWithValues"*, %"class.quic::QpackInstructionWithValues"** %37, align 8
  %131 = icmp ult %"class.quic::QpackInstructionWithValues"* %129, %130
  %132 = ptrtoint %"class.quic::QpackInstructionWithValues"* %130 to i64
  br i1 %131, label %133, label %137

133:                                              ; preds = %127
  %134 = bitcast %"class.quic::QpackInstructionWithValues"* %129 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* nonnull align 8 %91, i64 64, i1 false) #10
  %135 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %129, i64 1
  %136 = ptrtoint %"class.quic::QpackInstructionWithValues"* %135 to i64
  store i64 %136, i64* %81, align 8
  br label %181

137:                                              ; preds = %127
  %138 = ptrtoint %"class.quic::QpackInstructionWithValues"* %129 to i64
  %139 = load i64, i64* %42, align 8
  %140 = sub i64 %138, %139
  %141 = ashr exact i64 %140, 6
  %142 = add nsw i64 %141, 1
  %143 = icmp ugt i64 %142, 288230376151711743
  br i1 %143, label %144, label %146

144:                                              ; preds = %137
  %145 = bitcast %"class.std::__1::vector.87"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %145) #12
  unreachable

146:                                              ; preds = %137
  %147 = sub i64 %132, %139
  %148 = ashr exact i64 %147, 6
  %149 = icmp ult i64 %148, 144115188075855871
  br i1 %149, label %150, label %158

150:                                              ; preds = %146
  %151 = ashr exact i64 %147, 5
  %152 = icmp ult i64 %151, %142
  %153 = select i1 %152, i64 %142, i64 %151
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %163, label %155

155:                                              ; preds = %150
  %156 = icmp ugt i64 %153, 288230376151711743
  br i1 %156, label %157, label %158

157:                                              ; preds = %155
  call void @abort() #12
  unreachable

158:                                              ; preds = %155, %146
  %159 = phi i64 [ %153, %155 ], [ 288230376151711743, %146 ]
  %160 = shl i64 %159, 6
  %161 = call i8* @_Znwm(i64 %160) #11
  %162 = bitcast i8* %161 to %"class.quic::QpackInstructionWithValues"*
  br label %163

163:                                              ; preds = %158, %150
  %164 = phi i64 [ %159, %158 ], [ 0, %150 ]
  %165 = phi i8* [ %161, %158 ], [ null, %150 ]
  %166 = phi %"class.quic::QpackInstructionWithValues"* [ %162, %158 ], [ null, %150 ]
  %167 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %166, i64 %141
  %168 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %166, i64 %164
  %169 = ptrtoint %"class.quic::QpackInstructionWithValues"* %168 to i64
  %170 = bitcast %"class.quic::QpackInstructionWithValues"* %167 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %170, i8* nonnull align 8 %91, i64 64, i1 false) #10
  %171 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %167, i64 1
  %172 = ptrtoint %"class.quic::QpackInstructionWithValues"* %171 to i64
  %173 = ptrtoint %"class.quic::QpackInstructionWithValues"* %166 to i64
  %174 = icmp sgt i64 %140, 0
  br i1 %174, label %175, label %177

175:                                              ; preds = %163
  %176 = inttoptr i64 %139 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* align 8 %176, i64 %140, i1 false) #10
  br label %177

177:                                              ; preds = %175, %163
  store i64 %173, i64* %42, align 8
  store i64 %172, i64* %81, align 8
  store i64 %169, i64* %41, align 8
  %178 = icmp eq i64 %139, 0
  br i1 %178, label %181, label %179

179:                                              ; preds = %177
  %180 = inttoptr i64 %139 to i8*
  call void @_ZdlPv(i8* %180) #11
  br label %181

181:                                              ; preds = %133, %177, %179
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %91) #10
  br label %1147

182:                                              ; preds = %124
  %183 = load i64, i64* %11, align 8
  %184 = icmp ult i64 %183, %63
  br i1 %184, label %291, label %185

185:                                              ; preds = %182
  %186 = icmp ult i64 %183, %61
  %187 = or i1 %66, %186
  br i1 %187, label %188, label %412

188:                                              ; preds = %185
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %92) #10
  %189 = call i8* @_Znwm(i64 40) #11, !noalias !9
  %190 = getelementptr inbounds i8, i8* %189, i64 32
  %191 = bitcast i8* %190 to i64*
  store i64 %183, i64* %191, align 8, !noalias !12
  %192 = load %"class.std::__1::__tree_node.133"*, %"class.std::__1::__tree_node.133"** %75, align 8, !noalias !15
  %193 = icmp eq %"class.std::__1::__tree_node.133"* %192, null
  br i1 %193, label %216, label %194

194:                                              ; preds = %188, %213
  %195 = phi %"class.std::__1::__tree_node.133"* [ %215, %213 ], [ %192, %188 ]
  %196 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %195, i64 0, i32 1
  %197 = load i64, i64* %196, align 8
  %198 = icmp ugt i64 %197, %183
  br i1 %198, label %199, label %206

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %195, i64 0, i32 0, i32 0, i32 0
  %201 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %200, align 8
  %202 = icmp eq %"class.std::__1::__tree_node_base"* %201, null
  br i1 %202, label %203, label %213

203:                                              ; preds = %199
  %204 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %195, i64 0, i32 0, i32 0, i32 0
  %205 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %195, i64 0, i32 0, i32 0
  br label %216

206:                                              ; preds = %194
  %207 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %195, i64 0, i32 0, i32 1
  %208 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %207, align 8
  %209 = icmp eq %"class.std::__1::__tree_node_base"* %208, null
  br i1 %209, label %210, label %213

210:                                              ; preds = %206
  %211 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %195, i64 0, i32 0, i32 1
  %212 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %195, i64 0, i32 0, i32 0
  br label %216

213:                                              ; preds = %206, %199
  %214 = phi %"class.std::__1::__tree_node_base"* [ %201, %199 ], [ %208, %206 ]
  %215 = bitcast %"class.std::__1::__tree_node_base"* %214 to %"class.std::__1::__tree_node.133"*
  br label %194

216:                                              ; preds = %188, %210, %203
  %217 = phi %"class.std::__1::__tree_end_node"* [ %205, %203 ], [ %212, %210 ], [ %74, %188 ]
  %218 = phi %"class.std::__1::__tree_node_base"** [ %204, %203 ], [ %211, %210 ], [ %76, %188 ]
  %219 = bitcast i8* %189 to %"class.std::__1::__tree_node_base"*
  %220 = getelementptr inbounds i8, i8* %189, i64 16
  %221 = bitcast i8* %220 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %189, i8 0, i64 16, i1 false) #10, !noalias !15
  store %"class.std::__1::__tree_end_node"* %217, %"class.std::__1::__tree_end_node"** %221, align 8, !noalias !15
  %222 = bitcast %"class.std::__1::__tree_node_base"** %218 to i8**
  store i8* %189, i8** %222, align 8
  %223 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %77, align 8, !noalias !15
  %224 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %223, i64 0, i32 0
  %225 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %224, align 8
  %226 = icmp eq %"class.std::__1::__tree_node_base"* %225, null
  br i1 %226, label %230, label %227

227:                                              ; preds = %216
  %228 = ptrtoint %"class.std::__1::__tree_node_base"* %225 to i64
  store i64 %228, i64* %78, align 8, !noalias !15
  %229 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %218, align 8
  br label %230

230:                                              ; preds = %216, %227
  %231 = phi %"class.std::__1::__tree_node_base"* [ %219, %216 ], [ %229, %227 ]
  %232 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8, !noalias !15
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %232, %"class.std::__1::__tree_node_base"* %231) #10
  %233 = load i64, i64* %80, align 8, !noalias !15
  %234 = add i64 %233, 1
  store i64 %234, i64* %80, align 8, !noalias !15
  call void @_ZN4quic26QpackInstructionWithValues18IndexedHeaderFieldEbm(%"class.quic::QpackInstructionWithValues"* nonnull sret %13, i1 zeroext false, i64 %183) #10
  %235 = load %"class.quic::QpackInstructionWithValues"*, %"class.quic::QpackInstructionWithValues"** %36, align 8
  %236 = load %"class.quic::QpackInstructionWithValues"*, %"class.quic::QpackInstructionWithValues"** %37, align 8
  %237 = icmp ult %"class.quic::QpackInstructionWithValues"* %235, %236
  %238 = ptrtoint %"class.quic::QpackInstructionWithValues"* %236 to i64
  br i1 %237, label %239, label %243

239:                                              ; preds = %230
  %240 = bitcast %"class.quic::QpackInstructionWithValues"* %235 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %240, i8* nonnull align 8 %92, i64 64, i1 false) #10
  %241 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %235, i64 1
  %242 = ptrtoint %"class.quic::QpackInstructionWithValues"* %241 to i64
  store i64 %242, i64* %81, align 8
  br label %287

243:                                              ; preds = %230
  %244 = ptrtoint %"class.quic::QpackInstructionWithValues"* %235 to i64
  %245 = load i64, i64* %42, align 8
  %246 = sub i64 %244, %245
  %247 = ashr exact i64 %246, 6
  %248 = add nsw i64 %247, 1
  %249 = icmp ugt i64 %248, 288230376151711743
  br i1 %249, label %250, label %252

250:                                              ; preds = %243
  %251 = bitcast %"class.std::__1::vector.87"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %251) #12
  unreachable

252:                                              ; preds = %243
  %253 = sub i64 %238, %245
  %254 = ashr exact i64 %253, 6
  %255 = icmp ult i64 %254, 144115188075855871
  br i1 %255, label %256, label %264

256:                                              ; preds = %252
  %257 = ashr exact i64 %253, 5
  %258 = icmp ult i64 %257, %248
  %259 = select i1 %258, i64 %248, i64 %257
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %269, label %261

261:                                              ; preds = %256
  %262 = icmp ugt i64 %259, 288230376151711743
  br i1 %262, label %263, label %264

263:                                              ; preds = %261
  call void @abort() #12
  unreachable

264:                                              ; preds = %261, %252
  %265 = phi i64 [ %259, %261 ], [ 288230376151711743, %252 ]
  %266 = shl i64 %265, 6
  %267 = call i8* @_Znwm(i64 %266) #11
  %268 = bitcast i8* %267 to %"class.quic::QpackInstructionWithValues"*
  br label %269

269:                                              ; preds = %264, %256
  %270 = phi i64 [ %265, %264 ], [ 0, %256 ]
  %271 = phi i8* [ %267, %264 ], [ null, %256 ]
  %272 = phi %"class.quic::QpackInstructionWithValues"* [ %268, %264 ], [ null, %256 ]
  %273 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %272, i64 %247
  %274 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %272, i64 %270
  %275 = ptrtoint %"class.quic::QpackInstructionWithValues"* %274 to i64
  %276 = bitcast %"class.quic::QpackInstructionWithValues"* %273 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %276, i8* nonnull align 8 %92, i64 64, i1 false) #10
  %277 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %273, i64 1
  %278 = ptrtoint %"class.quic::QpackInstructionWithValues"* %277 to i64
  %279 = ptrtoint %"class.quic::QpackInstructionWithValues"* %272 to i64
  %280 = icmp sgt i64 %246, 0
  br i1 %280, label %281, label %283

281:                                              ; preds = %269
  %282 = inttoptr i64 %245 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %271, i8* align 8 %282, i64 %246, i1 false) #10
  br label %283

283:                                              ; preds = %281, %269
  store i64 %279, i64* %42, align 8
  store i64 %278, i64* %81, align 8
  store i64 %275, i64* %41, align 8
  %284 = icmp eq i64 %245, 0
  br i1 %284, label %287, label %285

285:                                              ; preds = %283
  %286 = inttoptr i64 %245 to i8*
  call void @_ZdlPv(i8* %286) #11
  br label %287

287:                                              ; preds = %239, %283, %285
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %92) #10
  %288 = load i64, i64* %11, align 8
  %289 = icmp ult i64 %288, %113
  %290 = select i1 %289, i64 %288, i64 %113
  store i8 1, i8* %88, align 8
  br label %1147

291:                                              ; preds = %182
  br i1 %66, label %292, label %412

292:                                              ; preds = %291
  %293 = call i64 @_ZN4spdy10HpackEntry4SizeEN4absl11string_viewES2_(i8* %116, i64 %118, i8* %120, i64 %122) #10
  %294 = load i64, i64* %11, align 8
  %295 = icmp ult i64 %294, %113
  %296 = select i1 %295, i64 %294, i64 %113
  %297 = call i64 @_ZNK4quic23QpackEncoderHeaderTable38MaxInsertSizeWithoutEvictingGivenEntryEm(%"class.quic::QpackEncoderHeaderTable"* %62, i64 %296) #10
  %298 = icmp ugt i64 %293, %297
  br i1 %298, label %412, label %299

299:                                              ; preds = %292
  %300 = load i64, i64* %11, align 8
  %301 = load i64, i64* %85, align 8
  %302 = load i64, i64* %86, align 8
  %303 = add i64 %302, %301
  %304 = call i64 @_ZN4quic46QpackAbsoluteIndexToEncoderStreamRelativeIndexEmm(i64 %300, i64 %303) #10
  call void @_ZN4quic24QpackEncoderStreamSender13SendDuplicateEm(%"class.quic::QpackEncoderStreamSender"* %23, i64 %304) #10
  %305 = call i64 @_ZN4quic23QpackEncoderHeaderTable11InsertEntryEN4absl11string_viewES2_(%"class.quic::QpackEncoderHeaderTable"* %62, i8* %116, i64 %118, i8* %120, i64 %122) #10
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %93) #10
  %306 = load i8, i8* %10, align 1, !range !8
  %307 = icmp ne i8 %306, 0
  br i1 %307, label %355, label %308

308:                                              ; preds = %299
  %309 = call i8* @_Znwm(i64 40) #11, !noalias !16
  %310 = getelementptr inbounds i8, i8* %309, i64 32
  %311 = bitcast i8* %310 to i64*
  store i64 %305, i64* %311, align 8, !noalias !19
  %312 = load %"class.std::__1::__tree_node.133"*, %"class.std::__1::__tree_node.133"** %75, align 8, !noalias !22
  %313 = icmp eq %"class.std::__1::__tree_node.133"* %312, null
  br i1 %313, label %336, label %314

314:                                              ; preds = %308, %333
  %315 = phi %"class.std::__1::__tree_node.133"* [ %335, %333 ], [ %312, %308 ]
  %316 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %315, i64 0, i32 1
  %317 = load i64, i64* %316, align 8
  %318 = icmp ugt i64 %317, %305
  br i1 %318, label %319, label %326

319:                                              ; preds = %314
  %320 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %315, i64 0, i32 0, i32 0, i32 0
  %321 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %320, align 8
  %322 = icmp eq %"class.std::__1::__tree_node_base"* %321, null
  br i1 %322, label %323, label %333

323:                                              ; preds = %319
  %324 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %315, i64 0, i32 0, i32 0, i32 0
  %325 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %315, i64 0, i32 0, i32 0
  br label %336

326:                                              ; preds = %314
  %327 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %315, i64 0, i32 0, i32 1
  %328 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %327, align 8
  %329 = icmp eq %"class.std::__1::__tree_node_base"* %328, null
  br i1 %329, label %330, label %333

330:                                              ; preds = %326
  %331 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %315, i64 0, i32 0, i32 1
  %332 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %315, i64 0, i32 0, i32 0
  br label %336

333:                                              ; preds = %326, %319
  %334 = phi %"class.std::__1::__tree_node_base"* [ %321, %319 ], [ %328, %326 ]
  %335 = bitcast %"class.std::__1::__tree_node_base"* %334 to %"class.std::__1::__tree_node.133"*
  br label %314

336:                                              ; preds = %308, %330, %323
  %337 = phi %"class.std::__1::__tree_end_node"* [ %325, %323 ], [ %332, %330 ], [ %74, %308 ]
  %338 = phi %"class.std::__1::__tree_node_base"** [ %324, %323 ], [ %331, %330 ], [ %76, %308 ]
  %339 = bitcast i8* %309 to %"class.std::__1::__tree_node_base"*
  %340 = getelementptr inbounds i8, i8* %309, i64 16
  %341 = bitcast i8* %340 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %309, i8 0, i64 16, i1 false) #10, !noalias !22
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %341, align 8, !noalias !22
  %342 = bitcast %"class.std::__1::__tree_node_base"** %338 to i8**
  store i8* %309, i8** %342, align 8
  %343 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %77, align 8, !noalias !22
  %344 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %343, i64 0, i32 0
  %345 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %344, align 8
  %346 = icmp eq %"class.std::__1::__tree_node_base"* %345, null
  br i1 %346, label %350, label %347

347:                                              ; preds = %336
  %348 = ptrtoint %"class.std::__1::__tree_node_base"* %345 to i64
  store i64 %348, i64* %78, align 8, !noalias !22
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %338, align 8
  br label %350

350:                                              ; preds = %347, %336
  %351 = phi %"class.std::__1::__tree_node_base"* [ %339, %336 ], [ %349, %347 ]
  %352 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8, !noalias !22
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %352, %"class.std::__1::__tree_node_base"* %351) #10
  %353 = load i64, i64* %80, align 8, !noalias !22
  %354 = add i64 %353, 1
  store i64 %354, i64* %80, align 8, !noalias !22
  br label %355

355:                                              ; preds = %299, %350
  call void @_ZN4quic26QpackInstructionWithValues18IndexedHeaderFieldEbm(%"class.quic::QpackInstructionWithValues"* nonnull sret %14, i1 zeroext %307, i64 %305) #10
  %356 = load %"class.quic::QpackInstructionWithValues"*, %"class.quic::QpackInstructionWithValues"** %36, align 8
  %357 = load %"class.quic::QpackInstructionWithValues"*, %"class.quic::QpackInstructionWithValues"** %37, align 8
  %358 = icmp ult %"class.quic::QpackInstructionWithValues"* %356, %357
  %359 = ptrtoint %"class.quic::QpackInstructionWithValues"* %357 to i64
  br i1 %358, label %360, label %364

360:                                              ; preds = %355
  %361 = bitcast %"class.quic::QpackInstructionWithValues"* %356 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %361, i8* nonnull align 8 %93, i64 64, i1 false) #10
  %362 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %356, i64 1
  %363 = ptrtoint %"class.quic::QpackInstructionWithValues"* %362 to i64
  store i64 %363, i64* %81, align 8
  br label %408

364:                                              ; preds = %355
  %365 = ptrtoint %"class.quic::QpackInstructionWithValues"* %356 to i64
  %366 = load i64, i64* %42, align 8
  %367 = sub i64 %365, %366
  %368 = ashr exact i64 %367, 6
  %369 = add nsw i64 %368, 1
  %370 = icmp ugt i64 %369, 288230376151711743
  br i1 %370, label %371, label %373

371:                                              ; preds = %364
  %372 = bitcast %"class.std::__1::vector.87"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %372) #12
  unreachable

373:                                              ; preds = %364
  %374 = sub i64 %359, %366
  %375 = ashr exact i64 %374, 6
  %376 = icmp ult i64 %375, 144115188075855871
  br i1 %376, label %377, label %385

377:                                              ; preds = %373
  %378 = ashr exact i64 %374, 5
  %379 = icmp ult i64 %378, %369
  %380 = select i1 %379, i64 %369, i64 %378
  %381 = icmp eq i64 %380, 0
  br i1 %381, label %390, label %382

382:                                              ; preds = %377
  %383 = icmp ugt i64 %380, 288230376151711743
  br i1 %383, label %384, label %385

384:                                              ; preds = %382
  call void @abort() #12
  unreachable

385:                                              ; preds = %382, %373
  %386 = phi i64 [ %380, %382 ], [ 288230376151711743, %373 ]
  %387 = shl i64 %386, 6
  %388 = call i8* @_Znwm(i64 %387) #11
  %389 = bitcast i8* %388 to %"class.quic::QpackInstructionWithValues"*
  br label %390

390:                                              ; preds = %385, %377
  %391 = phi i64 [ %386, %385 ], [ 0, %377 ]
  %392 = phi i8* [ %388, %385 ], [ null, %377 ]
  %393 = phi %"class.quic::QpackInstructionWithValues"* [ %389, %385 ], [ null, %377 ]
  %394 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %393, i64 %368
  %395 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %393, i64 %391
  %396 = ptrtoint %"class.quic::QpackInstructionWithValues"* %395 to i64
  %397 = bitcast %"class.quic::QpackInstructionWithValues"* %394 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %397, i8* nonnull align 8 %93, i64 64, i1 false) #10
  %398 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %394, i64 1
  %399 = ptrtoint %"class.quic::QpackInstructionWithValues"* %398 to i64
  %400 = ptrtoint %"class.quic::QpackInstructionWithValues"* %393 to i64
  %401 = icmp sgt i64 %367, 0
  br i1 %401, label %402, label %404

402:                                              ; preds = %390
  %403 = inttoptr i64 %366 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %392, i8* align 8 %403, i64 %367, i1 false) #10
  br label %404

404:                                              ; preds = %402, %390
  store i64 %400, i64* %42, align 8
  store i64 %399, i64* %81, align 8
  store i64 %396, i64* %41, align 8
  %405 = icmp eq i64 %366, 0
  br i1 %405, label %408, label %406

406:                                              ; preds = %404
  %407 = inttoptr i64 %366 to i8*
  call void @_ZdlPv(i8* %407) #11
  br label %408

408:                                              ; preds = %360, %404, %406
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %93) #10
  %409 = load i64, i64* %11, align 8
  %410 = icmp ult i64 %409, %113
  %411 = select i1 %410, i64 %409, i64 %113
  store i8 1, i8* %88, align 8
  br label %1147

412:                                              ; preds = %292, %291, %185
  %413 = phi i8 [ 1, %185 ], [ 1, %291 ], [ %112, %292 ]
  %414 = phi i8 [ %111, %185 ], [ %111, %291 ], [ 1, %292 ]
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %94) #10
  call void @_ZN4quic26QpackInstructionWithValues18LiteralHeaderFieldEN4absl11string_viewES2_(%"class.quic::QpackInstructionWithValues"* nonnull sret %15, i8* %116, i64 %118, i8* %120, i64 %122) #10
  %415 = load %"class.quic::QpackInstructionWithValues"*, %"class.quic::QpackInstructionWithValues"** %36, align 8
  %416 = load %"class.quic::QpackInstructionWithValues"*, %"class.quic::QpackInstructionWithValues"** %37, align 8
  %417 = icmp ult %"class.quic::QpackInstructionWithValues"* %415, %416
  %418 = ptrtoint %"class.quic::QpackInstructionWithValues"* %416 to i64
  br i1 %417, label %419, label %423

419:                                              ; preds = %412
  %420 = bitcast %"class.quic::QpackInstructionWithValues"* %415 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %420, i8* nonnull align 8 %94, i64 64, i1 false) #10
  %421 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %415, i64 1
  %422 = ptrtoint %"class.quic::QpackInstructionWithValues"* %421 to i64
  store i64 %422, i64* %81, align 8
  br label %467

423:                                              ; preds = %412
  %424 = ptrtoint %"class.quic::QpackInstructionWithValues"* %415 to i64
  %425 = load i64, i64* %42, align 8
  %426 = sub i64 %424, %425
  %427 = ashr exact i64 %426, 6
  %428 = add nsw i64 %427, 1
  %429 = icmp ugt i64 %428, 288230376151711743
  br i1 %429, label %430, label %432

430:                                              ; preds = %423
  %431 = bitcast %"class.std::__1::vector.87"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %431) #12
  unreachable

432:                                              ; preds = %423
  %433 = sub i64 %418, %425
  %434 = ashr exact i64 %433, 6
  %435 = icmp ult i64 %434, 144115188075855871
  br i1 %435, label %436, label %444

436:                                              ; preds = %432
  %437 = ashr exact i64 %433, 5
  %438 = icmp ult i64 %437, %428
  %439 = select i1 %438, i64 %428, i64 %437
  %440 = icmp eq i64 %439, 0
  br i1 %440, label %449, label %441

441:                                              ; preds = %436
  %442 = icmp ugt i64 %439, 288230376151711743
  br i1 %442, label %443, label %444

443:                                              ; preds = %441
  call void @abort() #12
  unreachable

444:                                              ; preds = %441, %432
  %445 = phi i64 [ %439, %441 ], [ 288230376151711743, %432 ]
  %446 = shl i64 %445, 6
  %447 = call i8* @_Znwm(i64 %446) #11
  %448 = bitcast i8* %447 to %"class.quic::QpackInstructionWithValues"*
  br label %449

449:                                              ; preds = %444, %436
  %450 = phi i64 [ %445, %444 ], [ 0, %436 ]
  %451 = phi i8* [ %447, %444 ], [ null, %436 ]
  %452 = phi %"class.quic::QpackInstructionWithValues"* [ %448, %444 ], [ null, %436 ]
  %453 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %452, i64 %427
  %454 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %452, i64 %450
  %455 = ptrtoint %"class.quic::QpackInstructionWithValues"* %454 to i64
  %456 = bitcast %"class.quic::QpackInstructionWithValues"* %453 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %456, i8* nonnull align 8 %94, i64 64, i1 false) #10
  %457 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %453, i64 1
  %458 = ptrtoint %"class.quic::QpackInstructionWithValues"* %457 to i64
  %459 = ptrtoint %"class.quic::QpackInstructionWithValues"* %452 to i64
  %460 = icmp sgt i64 %426, 0
  br i1 %460, label %461, label %463

461:                                              ; preds = %449
  %462 = inttoptr i64 %425 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %451, i8* align 8 %462, i64 %426, i1 false) #10
  br label %463

463:                                              ; preds = %461, %449
  store i64 %459, i64* %42, align 8
  store i64 %458, i64* %81, align 8
  store i64 %455, i64* %41, align 8
  %464 = icmp eq i64 %425, 0
  br i1 %464, label %467, label %465

465:                                              ; preds = %463
  %466 = inttoptr i64 %425 to i8*
  call void @_ZdlPv(i8* %466) #11
  br label %467

467:                                              ; preds = %419, %463, %465
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %94) #10
  br label %1147

468:                                              ; preds = %110
  %469 = load i8, i8* %10, align 1, !range !8
  %470 = icmp eq i8 %469, 0
  br i1 %470, label %690, label %471

471:                                              ; preds = %468
  br i1 %66, label %474, label %472

472:                                              ; preds = %471
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %83) #10
  %473 = load i64, i64* %11, align 8
  br label %634

474:                                              ; preds = %471
  %475 = call i64 @_ZN4spdy10HpackEntry4SizeEN4absl11string_viewES2_(i8* %116, i64 %118, i8* %120, i64 %122) #10
  %476 = call i64 @_ZNK4quic23QpackEncoderHeaderTable38MaxInsertSizeWithoutEvictingGivenEntryEm(%"class.quic::QpackEncoderHeaderTable"* %62, i64 %113) #10
  %477 = icmp ugt i64 %475, %476
  %478 = load i8, i8* %10, align 1
  br i1 %477, label %584, label %479

479:                                              ; preds = %474
  %480 = icmp ne i8 %478, 0
  %481 = load i64, i64* %11, align 8
  call void @_ZN4quic24QpackEncoderStreamSender27SendInsertWithNameReferenceEbmN4absl11string_viewE(%"class.quic::QpackEncoderStreamSender"* %23, i1 zeroext %480, i64 %481, i8* %120, i64 %122) #10
  %482 = call i64 @_ZN4quic23QpackEncoderHeaderTable11InsertEntryEN4absl11string_viewES2_(%"class.quic::QpackEncoderHeaderTable"* %62, i8* %116, i64 %118, i8* %120, i64 %122) #10
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %84) #10
  %483 = call i8* @_Znwm(i64 40) #11, !noalias !23
  %484 = getelementptr inbounds i8, i8* %483, i64 32
  %485 = bitcast i8* %484 to i64*
  store i64 %482, i64* %485, align 8, !noalias !26
  %486 = load %"class.std::__1::__tree_node.133"*, %"class.std::__1::__tree_node.133"** %75, align 8, !noalias !29
  %487 = icmp eq %"class.std::__1::__tree_node.133"* %486, null
  br i1 %487, label %510, label %488

488:                                              ; preds = %479, %507
  %489 = phi %"class.std::__1::__tree_node.133"* [ %509, %507 ], [ %486, %479 ]
  %490 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %489, i64 0, i32 1
  %491 = load i64, i64* %490, align 8
  %492 = icmp ugt i64 %491, %482
  br i1 %492, label %493, label %500

493:                                              ; preds = %488
  %494 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %489, i64 0, i32 0, i32 0, i32 0
  %495 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %494, align 8
  %496 = icmp eq %"class.std::__1::__tree_node_base"* %495, null
  br i1 %496, label %497, label %507

497:                                              ; preds = %493
  %498 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %489, i64 0, i32 0, i32 0, i32 0
  %499 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %489, i64 0, i32 0, i32 0
  br label %510

500:                                              ; preds = %488
  %501 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %489, i64 0, i32 0, i32 1
  %502 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %501, align 8
  %503 = icmp eq %"class.std::__1::__tree_node_base"* %502, null
  br i1 %503, label %504, label %507

504:                                              ; preds = %500
  %505 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %489, i64 0, i32 0, i32 1
  %506 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %489, i64 0, i32 0, i32 0
  br label %510

507:                                              ; preds = %500, %493
  %508 = phi %"class.std::__1::__tree_node_base"* [ %495, %493 ], [ %502, %500 ]
  %509 = bitcast %"class.std::__1::__tree_node_base"* %508 to %"class.std::__1::__tree_node.133"*
  br label %488

510:                                              ; preds = %479, %504, %497
  %511 = phi %"class.std::__1::__tree_end_node"* [ %499, %497 ], [ %506, %504 ], [ %74, %479 ]
  %512 = phi %"class.std::__1::__tree_node_base"** [ %498, %497 ], [ %505, %504 ], [ %76, %479 ]
  %513 = bitcast i8* %483 to %"class.std::__1::__tree_node_base"*
  %514 = getelementptr inbounds i8, i8* %483, i64 16
  %515 = bitcast i8* %514 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %483, i8 0, i64 16, i1 false) #10, !noalias !29
  store %"class.std::__1::__tree_end_node"* %511, %"class.std::__1::__tree_end_node"** %515, align 8, !noalias !29
  %516 = bitcast %"class.std::__1::__tree_node_base"** %512 to i8**
  store i8* %483, i8** %516, align 8
  %517 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %77, align 8, !noalias !29
  %518 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %517, i64 0, i32 0
  %519 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %518, align 8
  %520 = icmp eq %"class.std::__1::__tree_node_base"* %519, null
  br i1 %520, label %524, label %521

521:                                              ; preds = %510
  %522 = ptrtoint %"class.std::__1::__tree_node_base"* %519 to i64
  store i64 %522, i64* %78, align 8, !noalias !29
  %523 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %512, align 8
  br label %524

524:                                              ; preds = %510, %521
  %525 = phi %"class.std::__1::__tree_node_base"* [ %513, %510 ], [ %523, %521 ]
  %526 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8, !noalias !29
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %526, %"class.std::__1::__tree_node_base"* %525) #10
  %527 = load i64, i64* %80, align 8, !noalias !29
  %528 = add i64 %527, 1
  store i64 %528, i64* %80, align 8, !noalias !29
  call void @_ZN4quic26QpackInstructionWithValues18IndexedHeaderFieldEbm(%"class.quic::QpackInstructionWithValues"* nonnull sret %16, i1 zeroext false, i64 %482) #10
  %529 = load %"class.quic::QpackInstructionWithValues"*, %"class.quic::QpackInstructionWithValues"** %36, align 8
  %530 = load %"class.quic::QpackInstructionWithValues"*, %"class.quic::QpackInstructionWithValues"** %37, align 8
  %531 = icmp ult %"class.quic::QpackInstructionWithValues"* %529, %530
  %532 = ptrtoint %"class.quic::QpackInstructionWithValues"* %530 to i64
  br i1 %531, label %533, label %537

533:                                              ; preds = %524
  %534 = bitcast %"class.quic::QpackInstructionWithValues"* %529 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %534, i8* nonnull align 8 %84, i64 64, i1 false) #10
  %535 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %529, i64 1
  %536 = ptrtoint %"class.quic::QpackInstructionWithValues"* %535 to i64
  store i64 %536, i64* %81, align 8
  br label %581

537:                                              ; preds = %524
  %538 = ptrtoint %"class.quic::QpackInstructionWithValues"* %529 to i64
  %539 = load i64, i64* %42, align 8
  %540 = sub i64 %538, %539
  %541 = ashr exact i64 %540, 6
  %542 = add nsw i64 %541, 1
  %543 = icmp ugt i64 %542, 288230376151711743
  br i1 %543, label %544, label %546

544:                                              ; preds = %537
  %545 = bitcast %"class.std::__1::vector.87"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %545) #12
  unreachable

546:                                              ; preds = %537
  %547 = sub i64 %532, %539
  %548 = ashr exact i64 %547, 6
  %549 = icmp ult i64 %548, 144115188075855871
  br i1 %549, label %550, label %558

550:                                              ; preds = %546
  %551 = ashr exact i64 %547, 5
  %552 = icmp ult i64 %551, %542
  %553 = select i1 %552, i64 %542, i64 %551
  %554 = icmp eq i64 %553, 0
  br i1 %554, label %563, label %555

555:                                              ; preds = %550
  %556 = icmp ugt i64 %553, 288230376151711743
  br i1 %556, label %557, label %558

557:                                              ; preds = %555
  call void @abort() #12
  unreachable

558:                                              ; preds = %555, %546
  %559 = phi i64 [ %553, %555 ], [ 288230376151711743, %546 ]
  %560 = shl i64 %559, 6
  %561 = call i8* @_Znwm(i64 %560) #11
  %562 = bitcast i8* %561 to %"class.quic::QpackInstructionWithValues"*
  br label %563

563:                                              ; preds = %558, %550
  %564 = phi i64 [ %559, %558 ], [ 0, %550 ]
  %565 = phi i8* [ %561, %558 ], [ null, %550 ]
  %566 = phi %"class.quic::QpackInstructionWithValues"* [ %562, %558 ], [ null, %550 ]
  %567 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %566, i64 %541
  %568 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %566, i64 %564
  %569 = ptrtoint %"class.quic::QpackInstructionWithValues"* %568 to i64
  %570 = bitcast %"class.quic::QpackInstructionWithValues"* %567 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %570, i8* nonnull align 8 %84, i64 64, i1 false) #10
  %571 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %567, i64 1
  %572 = ptrtoint %"class.quic::QpackInstructionWithValues"* %571 to i64
  %573 = ptrtoint %"class.quic::QpackInstructionWithValues"* %566 to i64
  %574 = icmp sgt i64 %540, 0
  br i1 %574, label %575, label %577

575:                                              ; preds = %563
  %576 = inttoptr i64 %539 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %565, i8* align 8 %576, i64 %540, i1 false) #10
  br label %577

577:                                              ; preds = %575, %563
  store i64 %573, i64* %42, align 8
  store i64 %572, i64* %81, align 8
  store i64 %569, i64* %41, align 8
  %578 = icmp eq i64 %539, 0
  br i1 %578, label %581, label %579

579:                                              ; preds = %577
  %580 = inttoptr i64 %539 to i8*
  call void @_ZdlPv(i8* %580) #11
  br label %581

581:                                              ; preds = %533, %577, %579
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %84) #10
  %582 = icmp ult i64 %482, %113
  %583 = select i1 %582, i64 %482, i64 %113
  br label %1147

584:                                              ; preds = %474
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %83) #10
  %585 = icmp eq i8 %478, 0
  %586 = load i64, i64* %11, align 8
  br i1 %585, label %587, label %634

587:                                              ; preds = %584
  %588 = call i8* @_Znwm(i64 40) #11, !noalias !30
  %589 = getelementptr inbounds i8, i8* %588, i64 32
  %590 = bitcast i8* %589 to i64*
  store i64 %586, i64* %590, align 8, !noalias !33
  %591 = load %"class.std::__1::__tree_node.133"*, %"class.std::__1::__tree_node.133"** %75, align 8, !noalias !36
  %592 = icmp eq %"class.std::__1::__tree_node.133"* %591, null
  br i1 %592, label %615, label %593

593:                                              ; preds = %587, %612
  %594 = phi %"class.std::__1::__tree_node.133"* [ %614, %612 ], [ %591, %587 ]
  %595 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %594, i64 0, i32 1
  %596 = load i64, i64* %595, align 8
  %597 = icmp ugt i64 %596, %586
  br i1 %597, label %598, label %605

598:                                              ; preds = %593
  %599 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %594, i64 0, i32 0, i32 0, i32 0
  %600 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %599, align 8
  %601 = icmp eq %"class.std::__1::__tree_node_base"* %600, null
  br i1 %601, label %602, label %612

602:                                              ; preds = %598
  %603 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %594, i64 0, i32 0, i32 0, i32 0
  %604 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %594, i64 0, i32 0, i32 0
  br label %615

605:                                              ; preds = %593
  %606 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %594, i64 0, i32 0, i32 1
  %607 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %606, align 8
  %608 = icmp eq %"class.std::__1::__tree_node_base"* %607, null
  br i1 %608, label %609, label %612

609:                                              ; preds = %605
  %610 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %594, i64 0, i32 0, i32 1
  %611 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %594, i64 0, i32 0, i32 0
  br label %615

612:                                              ; preds = %605, %598
  %613 = phi %"class.std::__1::__tree_node_base"* [ %600, %598 ], [ %607, %605 ]
  %614 = bitcast %"class.std::__1::__tree_node_base"* %613 to %"class.std::__1::__tree_node.133"*
  br label %593

615:                                              ; preds = %587, %609, %602
  %616 = phi %"class.std::__1::__tree_end_node"* [ %604, %602 ], [ %611, %609 ], [ %74, %587 ]
  %617 = phi %"class.std::__1::__tree_node_base"** [ %603, %602 ], [ %610, %609 ], [ %76, %587 ]
  %618 = bitcast i8* %588 to %"class.std::__1::__tree_node_base"*
  %619 = getelementptr inbounds i8, i8* %588, i64 16
  %620 = bitcast i8* %619 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %588, i8 0, i64 16, i1 false) #10, !noalias !36
  store %"class.std::__1::__tree_end_node"* %616, %"class.std::__1::__tree_end_node"** %620, align 8, !noalias !36
  %621 = bitcast %"class.std::__1::__tree_node_base"** %617 to i8**
  store i8* %588, i8** %621, align 8
  %622 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %77, align 8, !noalias !36
  %623 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %622, i64 0, i32 0
  %624 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %623, align 8
  %625 = icmp eq %"class.std::__1::__tree_node_base"* %624, null
  br i1 %625, label %629, label %626

626:                                              ; preds = %615
  %627 = ptrtoint %"class.std::__1::__tree_node_base"* %624 to i64
  store i64 %627, i64* %78, align 8, !noalias !36
  %628 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %617, align 8
  br label %629

629:                                              ; preds = %626, %615
  %630 = phi %"class.std::__1::__tree_node_base"* [ %618, %615 ], [ %628, %626 ]
  %631 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8, !noalias !36
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %631, %"class.std::__1::__tree_node_base"* %630) #10
  %632 = load i64, i64* %80, align 8, !noalias !36
  %633 = add i64 %632, 1
  store i64 %633, i64* %80, align 8, !noalias !36
  br label %634

634:                                              ; preds = %584, %472, %629
  %635 = phi i64 [ %473, %472 ], [ %586, %584 ], [ %586, %629 ]
  %636 = phi i1 [ true, %472 ], [ true, %584 ], [ false, %629 ]
  call void @_ZN4quic26QpackInstructionWithValues31LiteralHeaderFieldNameReferenceEbmN4absl11string_viewE(%"class.quic::QpackInstructionWithValues"* nonnull sret %17, i1 zeroext %636, i64 %635, i8* %120, i64 %122) #10
  %637 = load %"class.quic::QpackInstructionWithValues"*, %"class.quic::QpackInstructionWithValues"** %36, align 8
  %638 = load %"class.quic::QpackInstructionWithValues"*, %"class.quic::QpackInstructionWithValues"** %37, align 8
  %639 = icmp ult %"class.quic::QpackInstructionWithValues"* %637, %638
  %640 = ptrtoint %"class.quic::QpackInstructionWithValues"* %638 to i64
  br i1 %639, label %641, label %645

641:                                              ; preds = %634
  %642 = bitcast %"class.quic::QpackInstructionWithValues"* %637 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %642, i8* nonnull align 8 %83, i64 64, i1 false) #10
  %643 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %637, i64 1
  %644 = ptrtoint %"class.quic::QpackInstructionWithValues"* %643 to i64
  store i64 %644, i64* %81, align 8
  br label %689

645:                                              ; preds = %634
  %646 = ptrtoint %"class.quic::QpackInstructionWithValues"* %637 to i64
  %647 = load i64, i64* %42, align 8
  %648 = sub i64 %646, %647
  %649 = ashr exact i64 %648, 6
  %650 = add nsw i64 %649, 1
  %651 = icmp ugt i64 %650, 288230376151711743
  br i1 %651, label %652, label %654

652:                                              ; preds = %645
  %653 = bitcast %"class.std::__1::vector.87"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %653) #12
  unreachable

654:                                              ; preds = %645
  %655 = sub i64 %640, %647
  %656 = ashr exact i64 %655, 6
  %657 = icmp ult i64 %656, 144115188075855871
  br i1 %657, label %658, label %666

658:                                              ; preds = %654
  %659 = ashr exact i64 %655, 5
  %660 = icmp ult i64 %659, %650
  %661 = select i1 %660, i64 %650, i64 %659
  %662 = icmp eq i64 %661, 0
  br i1 %662, label %671, label %663

663:                                              ; preds = %658
  %664 = icmp ugt i64 %661, 288230376151711743
  br i1 %664, label %665, label %666

665:                                              ; preds = %663
  call void @abort() #12
  unreachable

666:                                              ; preds = %663, %654
  %667 = phi i64 [ %661, %663 ], [ 288230376151711743, %654 ]
  %668 = shl i64 %667, 6
  %669 = call i8* @_Znwm(i64 %668) #11
  %670 = bitcast i8* %669 to %"class.quic::QpackInstructionWithValues"*
  br label %671

671:                                              ; preds = %666, %658
  %672 = phi i64 [ %667, %666 ], [ 0, %658 ]
  %673 = phi i8* [ %669, %666 ], [ null, %658 ]
  %674 = phi %"class.quic::QpackInstructionWithValues"* [ %670, %666 ], [ null, %658 ]
  %675 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %674, i64 %649
  %676 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %674, i64 %672
  %677 = ptrtoint %"class.quic::QpackInstructionWithValues"* %676 to i64
  %678 = bitcast %"class.quic::QpackInstructionWithValues"* %675 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %678, i8* nonnull align 8 %83, i64 64, i1 false) #10
  %679 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %675, i64 1
  %680 = ptrtoint %"class.quic::QpackInstructionWithValues"* %679 to i64
  %681 = ptrtoint %"class.quic::QpackInstructionWithValues"* %674 to i64
  %682 = icmp sgt i64 %648, 0
  br i1 %682, label %683, label %685

683:                                              ; preds = %671
  %684 = inttoptr i64 %647 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %673, i8* align 8 %684, i64 %648, i1 false) #10
  br label %685

685:                                              ; preds = %683, %671
  store i64 %681, i64* %42, align 8
  store i64 %680, i64* %81, align 8
  store i64 %677, i64* %41, align 8
  %686 = icmp eq i64 %647, 0
  br i1 %686, label %689, label %687

687:                                              ; preds = %685
  %688 = inttoptr i64 %647 to i8*
  call void @_ZdlPv(i8* %688) #11
  br label %689

689:                                              ; preds = %641, %685, %687
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %83) #10
  br label %1147

690:                                              ; preds = %468
  br i1 %66, label %691, label %813

691:                                              ; preds = %690
  %692 = call i64 @_ZN4spdy10HpackEntry4SizeEN4absl11string_viewES2_(i8* %116, i64 %118, i8* %120, i64 %122) #10
  %693 = load i64, i64* %11, align 8
  %694 = icmp ult i64 %693, %113
  %695 = select i1 %694, i64 %693, i64 %113
  %696 = call i64 @_ZNK4quic23QpackEncoderHeaderTable38MaxInsertSizeWithoutEvictingGivenEntryEm(%"class.quic::QpackEncoderHeaderTable"* %62, i64 %695) #10
  %697 = icmp ugt i64 %692, %696
  br i1 %697, label %813, label %698

698:                                              ; preds = %691
  %699 = load i8, i8* %10, align 1, !range !8
  %700 = icmp ne i8 %699, 0
  %701 = load i64, i64* %11, align 8
  %702 = load i64, i64* %85, align 8
  %703 = load i64, i64* %86, align 8
  %704 = add i64 %703, %702
  %705 = call i64 @_ZN4quic46QpackAbsoluteIndexToEncoderStreamRelativeIndexEmm(i64 %701, i64 %704) #10
  call void @_ZN4quic24QpackEncoderStreamSender27SendInsertWithNameReferenceEbmN4absl11string_viewE(%"class.quic::QpackEncoderStreamSender"* %23, i1 zeroext %700, i64 %705, i8* %120, i64 %122) #10
  %706 = call i64 @_ZN4quic23QpackEncoderHeaderTable11InsertEntryEN4absl11string_viewES2_(%"class.quic::QpackEncoderHeaderTable"* %62, i8* %116, i64 %118, i8* %120, i64 %122) #10
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %87) #10
  %707 = load i8, i8* %10, align 1, !range !8
  %708 = icmp ne i8 %707, 0
  br i1 %708, label %756, label %709

709:                                              ; preds = %698
  %710 = call i8* @_Znwm(i64 40) #11, !noalias !37
  %711 = getelementptr inbounds i8, i8* %710, i64 32
  %712 = bitcast i8* %711 to i64*
  store i64 %706, i64* %712, align 8, !noalias !40
  %713 = load %"class.std::__1::__tree_node.133"*, %"class.std::__1::__tree_node.133"** %75, align 8, !noalias !43
  %714 = icmp eq %"class.std::__1::__tree_node.133"* %713, null
  br i1 %714, label %737, label %715

715:                                              ; preds = %709, %734
  %716 = phi %"class.std::__1::__tree_node.133"* [ %736, %734 ], [ %713, %709 ]
  %717 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %716, i64 0, i32 1
  %718 = load i64, i64* %717, align 8
  %719 = icmp ugt i64 %718, %706
  br i1 %719, label %720, label %727

720:                                              ; preds = %715
  %721 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %716, i64 0, i32 0, i32 0, i32 0
  %722 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %721, align 8
  %723 = icmp eq %"class.std::__1::__tree_node_base"* %722, null
  br i1 %723, label %724, label %734

724:                                              ; preds = %720
  %725 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %716, i64 0, i32 0, i32 0, i32 0
  %726 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %716, i64 0, i32 0, i32 0
  br label %737

727:                                              ; preds = %715
  %728 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %716, i64 0, i32 0, i32 1
  %729 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %728, align 8
  %730 = icmp eq %"class.std::__1::__tree_node_base"* %729, null
  br i1 %730, label %731, label %734

731:                                              ; preds = %727
  %732 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %716, i64 0, i32 0, i32 1
  %733 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %716, i64 0, i32 0, i32 0
  br label %737

734:                                              ; preds = %727, %720
  %735 = phi %"class.std::__1::__tree_node_base"* [ %722, %720 ], [ %729, %727 ]
  %736 = bitcast %"class.std::__1::__tree_node_base"* %735 to %"class.std::__1::__tree_node.133"*
  br label %715

737:                                              ; preds = %709, %731, %724
  %738 = phi %"class.std::__1::__tree_end_node"* [ %726, %724 ], [ %733, %731 ], [ %74, %709 ]
  %739 = phi %"class.std::__1::__tree_node_base"** [ %725, %724 ], [ %732, %731 ], [ %76, %709 ]
  %740 = bitcast i8* %710 to %"class.std::__1::__tree_node_base"*
  %741 = getelementptr inbounds i8, i8* %710, i64 16
  %742 = bitcast i8* %741 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %710, i8 0, i64 16, i1 false) #10, !noalias !43
  store %"class.std::__1::__tree_end_node"* %738, %"class.std::__1::__tree_end_node"** %742, align 8, !noalias !43
  %743 = bitcast %"class.std::__1::__tree_node_base"** %739 to i8**
  store i8* %710, i8** %743, align 8
  %744 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %77, align 8, !noalias !43
  %745 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %744, i64 0, i32 0
  %746 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %745, align 8
  %747 = icmp eq %"class.std::__1::__tree_node_base"* %746, null
  br i1 %747, label %751, label %748

748:                                              ; preds = %737
  %749 = ptrtoint %"class.std::__1::__tree_node_base"* %746 to i64
  store i64 %749, i64* %78, align 8, !noalias !43
  %750 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %739, align 8
  br label %751

751:                                              ; preds = %748, %737
  %752 = phi %"class.std::__1::__tree_node_base"* [ %740, %737 ], [ %750, %748 ]
  %753 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8, !noalias !43
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %753, %"class.std::__1::__tree_node_base"* %752) #10
  %754 = load i64, i64* %80, align 8, !noalias !43
  %755 = add i64 %754, 1
  store i64 %755, i64* %80, align 8, !noalias !43
  br label %756

756:                                              ; preds = %698, %751
  call void @_ZN4quic26QpackInstructionWithValues18IndexedHeaderFieldEbm(%"class.quic::QpackInstructionWithValues"* nonnull sret %18, i1 zeroext %708, i64 %706) #10
  %757 = load %"class.quic::QpackInstructionWithValues"*, %"class.quic::QpackInstructionWithValues"** %36, align 8
  %758 = load %"class.quic::QpackInstructionWithValues"*, %"class.quic::QpackInstructionWithValues"** %37, align 8
  %759 = icmp ult %"class.quic::QpackInstructionWithValues"* %757, %758
  %760 = ptrtoint %"class.quic::QpackInstructionWithValues"* %758 to i64
  br i1 %759, label %761, label %765

761:                                              ; preds = %756
  %762 = bitcast %"class.quic::QpackInstructionWithValues"* %757 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %762, i8* nonnull align 8 %87, i64 64, i1 false) #10
  %763 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %757, i64 1
  %764 = ptrtoint %"class.quic::QpackInstructionWithValues"* %763 to i64
  store i64 %764, i64* %81, align 8
  br label %809

765:                                              ; preds = %756
  %766 = ptrtoint %"class.quic::QpackInstructionWithValues"* %757 to i64
  %767 = load i64, i64* %42, align 8
  %768 = sub i64 %766, %767
  %769 = ashr exact i64 %768, 6
  %770 = add nsw i64 %769, 1
  %771 = icmp ugt i64 %770, 288230376151711743
  br i1 %771, label %772, label %774

772:                                              ; preds = %765
  %773 = bitcast %"class.std::__1::vector.87"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %773) #12
  unreachable

774:                                              ; preds = %765
  %775 = sub i64 %760, %767
  %776 = ashr exact i64 %775, 6
  %777 = icmp ult i64 %776, 144115188075855871
  br i1 %777, label %778, label %786

778:                                              ; preds = %774
  %779 = ashr exact i64 %775, 5
  %780 = icmp ult i64 %779, %770
  %781 = select i1 %780, i64 %770, i64 %779
  %782 = icmp eq i64 %781, 0
  br i1 %782, label %791, label %783

783:                                              ; preds = %778
  %784 = icmp ugt i64 %781, 288230376151711743
  br i1 %784, label %785, label %786

785:                                              ; preds = %783
  call void @abort() #12
  unreachable

786:                                              ; preds = %783, %774
  %787 = phi i64 [ %781, %783 ], [ 288230376151711743, %774 ]
  %788 = shl i64 %787, 6
  %789 = call i8* @_Znwm(i64 %788) #11
  %790 = bitcast i8* %789 to %"class.quic::QpackInstructionWithValues"*
  br label %791

791:                                              ; preds = %786, %778
  %792 = phi i64 [ %787, %786 ], [ 0, %778 ]
  %793 = phi i8* [ %789, %786 ], [ null, %778 ]
  %794 = phi %"class.quic::QpackInstructionWithValues"* [ %790, %786 ], [ null, %778 ]
  %795 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %794, i64 %769
  %796 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %794, i64 %792
  %797 = ptrtoint %"class.quic::QpackInstructionWithValues"* %796 to i64
  %798 = bitcast %"class.quic::QpackInstructionWithValues"* %795 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %798, i8* nonnull align 8 %87, i64 64, i1 false) #10
  %799 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %795, i64 1
  %800 = ptrtoint %"class.quic::QpackInstructionWithValues"* %799 to i64
  %801 = ptrtoint %"class.quic::QpackInstructionWithValues"* %794 to i64
  %802 = icmp sgt i64 %768, 0
  br i1 %802, label %803, label %805

803:                                              ; preds = %791
  %804 = inttoptr i64 %767 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %793, i8* align 8 %804, i64 %768, i1 false) #10
  br label %805

805:                                              ; preds = %803, %791
  store i64 %801, i64* %42, align 8
  store i64 %800, i64* %81, align 8
  store i64 %797, i64* %41, align 8
  %806 = icmp eq i64 %767, 0
  br i1 %806, label %809, label %807

807:                                              ; preds = %805
  %808 = inttoptr i64 %767 to i8*
  call void @_ZdlPv(i8* %808) #11
  br label %809

809:                                              ; preds = %761, %805, %807
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %87) #10
  %810 = load i64, i64* %11, align 8
  %811 = icmp ult i64 %810, %113
  %812 = select i1 %811, i64 %810, i64 %113
  store i8 1, i8* %88, align 8
  br label %1147

813:                                              ; preds = %691, %690
  %814 = phi i8 [ 1, %690 ], [ %112, %691 ]
  %815 = phi i8 [ %111, %690 ], [ 1, %691 ]
  %816 = load i64, i64* %11, align 8
  %817 = icmp ult i64 %816, %61
  %818 = or i1 %66, %817
  %819 = xor i1 %818, true
  %820 = icmp ult i64 %816, %63
  %821 = or i1 %820, %819
  br i1 %821, label %929, label %822

822:                                              ; preds = %813
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %89) #10
  %823 = load i8, i8* %10, align 1, !range !8
  %824 = icmp ne i8 %823, 0
  br i1 %824, label %872, label %825

825:                                              ; preds = %822
  %826 = call i8* @_Znwm(i64 40) #11, !noalias !44
  %827 = getelementptr inbounds i8, i8* %826, i64 32
  %828 = bitcast i8* %827 to i64*
  store i64 %816, i64* %828, align 8, !noalias !47
  %829 = load %"class.std::__1::__tree_node.133"*, %"class.std::__1::__tree_node.133"** %75, align 8, !noalias !50
  %830 = icmp eq %"class.std::__1::__tree_node.133"* %829, null
  br i1 %830, label %853, label %831

831:                                              ; preds = %825, %850
  %832 = phi %"class.std::__1::__tree_node.133"* [ %852, %850 ], [ %829, %825 ]
  %833 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %832, i64 0, i32 1
  %834 = load i64, i64* %833, align 8
  %835 = icmp ugt i64 %834, %816
  br i1 %835, label %836, label %843

836:                                              ; preds = %831
  %837 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %832, i64 0, i32 0, i32 0, i32 0
  %838 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %837, align 8
  %839 = icmp eq %"class.std::__1::__tree_node_base"* %838, null
  br i1 %839, label %840, label %850

840:                                              ; preds = %836
  %841 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %832, i64 0, i32 0, i32 0, i32 0
  %842 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %832, i64 0, i32 0, i32 0
  br label %853

843:                                              ; preds = %831
  %844 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %832, i64 0, i32 0, i32 1
  %845 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %844, align 8
  %846 = icmp eq %"class.std::__1::__tree_node_base"* %845, null
  br i1 %846, label %847, label %850

847:                                              ; preds = %843
  %848 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %832, i64 0, i32 0, i32 1
  %849 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %832, i64 0, i32 0, i32 0
  br label %853

850:                                              ; preds = %843, %836
  %851 = phi %"class.std::__1::__tree_node_base"* [ %838, %836 ], [ %845, %843 ]
  %852 = bitcast %"class.std::__1::__tree_node_base"* %851 to %"class.std::__1::__tree_node.133"*
  br label %831

853:                                              ; preds = %825, %847, %840
  %854 = phi %"class.std::__1::__tree_end_node"* [ %842, %840 ], [ %849, %847 ], [ %74, %825 ]
  %855 = phi %"class.std::__1::__tree_node_base"** [ %841, %840 ], [ %848, %847 ], [ %76, %825 ]
  %856 = bitcast i8* %826 to %"class.std::__1::__tree_node_base"*
  %857 = getelementptr inbounds i8, i8* %826, i64 16
  %858 = bitcast i8* %857 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %826, i8 0, i64 16, i1 false) #10, !noalias !50
  store %"class.std::__1::__tree_end_node"* %854, %"class.std::__1::__tree_end_node"** %858, align 8, !noalias !50
  %859 = bitcast %"class.std::__1::__tree_node_base"** %855 to i8**
  store i8* %826, i8** %859, align 8
  %860 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %77, align 8, !noalias !50
  %861 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %860, i64 0, i32 0
  %862 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %861, align 8
  %863 = icmp eq %"class.std::__1::__tree_node_base"* %862, null
  br i1 %863, label %867, label %864

864:                                              ; preds = %853
  %865 = ptrtoint %"class.std::__1::__tree_node_base"* %862 to i64
  store i64 %865, i64* %78, align 8, !noalias !50
  %866 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %855, align 8
  br label %867

867:                                              ; preds = %864, %853
  %868 = phi %"class.std::__1::__tree_node_base"* [ %856, %853 ], [ %866, %864 ]
  %869 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8, !noalias !50
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %869, %"class.std::__1::__tree_node_base"* %868) #10
  %870 = load i64, i64* %80, align 8, !noalias !50
  %871 = add i64 %870, 1
  store i64 %871, i64* %80, align 8, !noalias !50
  br label %872

872:                                              ; preds = %822, %867
  call void @_ZN4quic26QpackInstructionWithValues31LiteralHeaderFieldNameReferenceEbmN4absl11string_viewE(%"class.quic::QpackInstructionWithValues"* nonnull sret %19, i1 zeroext %824, i64 %816, i8* %120, i64 %122) #10
  %873 = load %"class.quic::QpackInstructionWithValues"*, %"class.quic::QpackInstructionWithValues"** %36, align 8
  %874 = load %"class.quic::QpackInstructionWithValues"*, %"class.quic::QpackInstructionWithValues"** %37, align 8
  %875 = icmp ult %"class.quic::QpackInstructionWithValues"* %873, %874
  %876 = ptrtoint %"class.quic::QpackInstructionWithValues"* %874 to i64
  br i1 %875, label %877, label %881

877:                                              ; preds = %872
  %878 = bitcast %"class.quic::QpackInstructionWithValues"* %873 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %878, i8* nonnull align 8 %89, i64 64, i1 false) #10
  %879 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %873, i64 1
  %880 = ptrtoint %"class.quic::QpackInstructionWithValues"* %879 to i64
  store i64 %880, i64* %81, align 8
  br label %925

881:                                              ; preds = %872
  %882 = ptrtoint %"class.quic::QpackInstructionWithValues"* %873 to i64
  %883 = load i64, i64* %42, align 8
  %884 = sub i64 %882, %883
  %885 = ashr exact i64 %884, 6
  %886 = add nsw i64 %885, 1
  %887 = icmp ugt i64 %886, 288230376151711743
  br i1 %887, label %888, label %890

888:                                              ; preds = %881
  %889 = bitcast %"class.std::__1::vector.87"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %889) #12
  unreachable

890:                                              ; preds = %881
  %891 = sub i64 %876, %883
  %892 = ashr exact i64 %891, 6
  %893 = icmp ult i64 %892, 144115188075855871
  br i1 %893, label %894, label %902

894:                                              ; preds = %890
  %895 = ashr exact i64 %891, 5
  %896 = icmp ult i64 %895, %886
  %897 = select i1 %896, i64 %886, i64 %895
  %898 = icmp eq i64 %897, 0
  br i1 %898, label %907, label %899

899:                                              ; preds = %894
  %900 = icmp ugt i64 %897, 288230376151711743
  br i1 %900, label %901, label %902

901:                                              ; preds = %899
  call void @abort() #12
  unreachable

902:                                              ; preds = %899, %890
  %903 = phi i64 [ %897, %899 ], [ 288230376151711743, %890 ]
  %904 = shl i64 %903, 6
  %905 = call i8* @_Znwm(i64 %904) #11
  %906 = bitcast i8* %905 to %"class.quic::QpackInstructionWithValues"*
  br label %907

907:                                              ; preds = %902, %894
  %908 = phi i64 [ %903, %902 ], [ 0, %894 ]
  %909 = phi i8* [ %905, %902 ], [ null, %894 ]
  %910 = phi %"class.quic::QpackInstructionWithValues"* [ %906, %902 ], [ null, %894 ]
  %911 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %910, i64 %885
  %912 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %910, i64 %908
  %913 = ptrtoint %"class.quic::QpackInstructionWithValues"* %912 to i64
  %914 = bitcast %"class.quic::QpackInstructionWithValues"* %911 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %914, i8* nonnull align 8 %89, i64 64, i1 false) #10
  %915 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %911, i64 1
  %916 = ptrtoint %"class.quic::QpackInstructionWithValues"* %915 to i64
  %917 = ptrtoint %"class.quic::QpackInstructionWithValues"* %910 to i64
  %918 = icmp sgt i64 %884, 0
  br i1 %918, label %919, label %921

919:                                              ; preds = %907
  %920 = inttoptr i64 %883 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %909, i8* align 8 %920, i64 %884, i1 false) #10
  br label %921

921:                                              ; preds = %919, %907
  store i64 %917, i64* %42, align 8
  store i64 %916, i64* %81, align 8
  store i64 %913, i64* %41, align 8
  %922 = icmp eq i64 %883, 0
  br i1 %922, label %925, label %923

923:                                              ; preds = %921
  %924 = inttoptr i64 %883 to i8*
  call void @_ZdlPv(i8* %924) #11
  br label %925

925:                                              ; preds = %877, %921, %923
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %89) #10
  %926 = load i64, i64* %11, align 8
  %927 = icmp ult i64 %926, %113
  %928 = select i1 %927, i64 %926, i64 %113
  store i8 1, i8* %88, align 8
  br label %1147

929:                                              ; preds = %813
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %90) #10
  call void @_ZN4quic26QpackInstructionWithValues18LiteralHeaderFieldEN4absl11string_viewES2_(%"class.quic::QpackInstructionWithValues"* nonnull sret %20, i8* %116, i64 %118, i8* %120, i64 %122) #10
  %930 = load %"class.quic::QpackInstructionWithValues"*, %"class.quic::QpackInstructionWithValues"** %36, align 8
  %931 = load %"class.quic::QpackInstructionWithValues"*, %"class.quic::QpackInstructionWithValues"** %37, align 8
  %932 = icmp ult %"class.quic::QpackInstructionWithValues"* %930, %931
  %933 = ptrtoint %"class.quic::QpackInstructionWithValues"* %931 to i64
  br i1 %932, label %934, label %938

934:                                              ; preds = %929
  %935 = bitcast %"class.quic::QpackInstructionWithValues"* %930 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %935, i8* nonnull align 8 %90, i64 64, i1 false) #10
  %936 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %930, i64 1
  %937 = ptrtoint %"class.quic::QpackInstructionWithValues"* %936 to i64
  store i64 %937, i64* %81, align 8
  br label %982

938:                                              ; preds = %929
  %939 = ptrtoint %"class.quic::QpackInstructionWithValues"* %930 to i64
  %940 = load i64, i64* %42, align 8
  %941 = sub i64 %939, %940
  %942 = ashr exact i64 %941, 6
  %943 = add nsw i64 %942, 1
  %944 = icmp ugt i64 %943, 288230376151711743
  br i1 %944, label %945, label %947

945:                                              ; preds = %938
  %946 = bitcast %"class.std::__1::vector.87"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %946) #12
  unreachable

947:                                              ; preds = %938
  %948 = sub i64 %933, %940
  %949 = ashr exact i64 %948, 6
  %950 = icmp ult i64 %949, 144115188075855871
  br i1 %950, label %951, label %959

951:                                              ; preds = %947
  %952 = ashr exact i64 %948, 5
  %953 = icmp ult i64 %952, %943
  %954 = select i1 %953, i64 %943, i64 %952
  %955 = icmp eq i64 %954, 0
  br i1 %955, label %964, label %956

956:                                              ; preds = %951
  %957 = icmp ugt i64 %954, 288230376151711743
  br i1 %957, label %958, label %959

958:                                              ; preds = %956
  call void @abort() #12
  unreachable

959:                                              ; preds = %956, %947
  %960 = phi i64 [ %954, %956 ], [ 288230376151711743, %947 ]
  %961 = shl i64 %960, 6
  %962 = call i8* @_Znwm(i64 %961) #11
  %963 = bitcast i8* %962 to %"class.quic::QpackInstructionWithValues"*
  br label %964

964:                                              ; preds = %959, %951
  %965 = phi i64 [ %960, %959 ], [ 0, %951 ]
  %966 = phi i8* [ %962, %959 ], [ null, %951 ]
  %967 = phi %"class.quic::QpackInstructionWithValues"* [ %963, %959 ], [ null, %951 ]
  %968 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %967, i64 %942
  %969 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %967, i64 %965
  %970 = ptrtoint %"class.quic::QpackInstructionWithValues"* %969 to i64
  %971 = bitcast %"class.quic::QpackInstructionWithValues"* %968 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %971, i8* nonnull align 8 %90, i64 64, i1 false) #10
  %972 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %968, i64 1
  %973 = ptrtoint %"class.quic::QpackInstructionWithValues"* %972 to i64
  %974 = ptrtoint %"class.quic::QpackInstructionWithValues"* %967 to i64
  %975 = icmp sgt i64 %941, 0
  br i1 %975, label %976, label %978

976:                                              ; preds = %964
  %977 = inttoptr i64 %940 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %966, i8* align 8 %977, i64 %941, i1 false) #10
  br label %978

978:                                              ; preds = %976, %964
  store i64 %974, i64* %42, align 8
  store i64 %973, i64* %81, align 8
  store i64 %970, i64* %41, align 8
  %979 = icmp eq i64 %940, 0
  br i1 %979, label %982, label %980

980:                                              ; preds = %978
  %981 = inttoptr i64 %940 to i8*
  call void @_ZdlPv(i8* %981) #11
  br label %982

982:                                              ; preds = %934, %978, %980
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %90) #10
  br label %1147

983:                                              ; preds = %110
  br i1 %66, label %984, label %1091

984:                                              ; preds = %983
  %985 = call i64 @_ZN4spdy10HpackEntry4SizeEN4absl11string_viewES2_(i8* %116, i64 %118, i8* %120, i64 %122) #10
  %986 = call i64 @_ZNK4quic23QpackEncoderHeaderTable38MaxInsertSizeWithoutEvictingGivenEntryEm(%"class.quic::QpackEncoderHeaderTable"* %62, i64 %113) #10
  %987 = icmp ugt i64 %985, %986
  br i1 %987, label %1091, label %988

988:                                              ; preds = %984
  call void @_ZN4quic24QpackEncoderStreamSender30SendInsertWithoutNameReferenceEN4absl11string_viewES2_(%"class.quic::QpackEncoderStreamSender"* %23, i8* %116, i64 %118, i8* %120, i64 %122) #10
  %989 = call i64 @_ZN4quic23QpackEncoderHeaderTable11InsertEntryEN4absl11string_viewES2_(%"class.quic::QpackEncoderHeaderTable"* %62, i8* %116, i64 %118, i8* %120, i64 %122) #10
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %73) #10
  %990 = call i8* @_Znwm(i64 40) #11, !noalias !51
  %991 = getelementptr inbounds i8, i8* %990, i64 32
  %992 = bitcast i8* %991 to i64*
  store i64 %989, i64* %992, align 8, !noalias !54
  %993 = load %"class.std::__1::__tree_node.133"*, %"class.std::__1::__tree_node.133"** %75, align 8, !noalias !57
  %994 = icmp eq %"class.std::__1::__tree_node.133"* %993, null
  br i1 %994, label %1017, label %995

995:                                              ; preds = %988, %1014
  %996 = phi %"class.std::__1::__tree_node.133"* [ %1016, %1014 ], [ %993, %988 ]
  %997 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %996, i64 0, i32 1
  %998 = load i64, i64* %997, align 8
  %999 = icmp ugt i64 %998, %989
  br i1 %999, label %1000, label %1007

1000:                                             ; preds = %995
  %1001 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %996, i64 0, i32 0, i32 0, i32 0
  %1002 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1001, align 8
  %1003 = icmp eq %"class.std::__1::__tree_node_base"* %1002, null
  br i1 %1003, label %1004, label %1014

1004:                                             ; preds = %1000
  %1005 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %996, i64 0, i32 0, i32 0, i32 0
  %1006 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %996, i64 0, i32 0, i32 0
  br label %1017

1007:                                             ; preds = %995
  %1008 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %996, i64 0, i32 0, i32 1
  %1009 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1008, align 8
  %1010 = icmp eq %"class.std::__1::__tree_node_base"* %1009, null
  br i1 %1010, label %1011, label %1014

1011:                                             ; preds = %1007
  %1012 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %996, i64 0, i32 0, i32 1
  %1013 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %996, i64 0, i32 0, i32 0
  br label %1017

1014:                                             ; preds = %1007, %1000
  %1015 = phi %"class.std::__1::__tree_node_base"* [ %1002, %1000 ], [ %1009, %1007 ]
  %1016 = bitcast %"class.std::__1::__tree_node_base"* %1015 to %"class.std::__1::__tree_node.133"*
  br label %995

1017:                                             ; preds = %988, %1011, %1004
  %1018 = phi %"class.std::__1::__tree_end_node"* [ %1006, %1004 ], [ %1013, %1011 ], [ %74, %988 ]
  %1019 = phi %"class.std::__1::__tree_node_base"** [ %1005, %1004 ], [ %1012, %1011 ], [ %76, %988 ]
  %1020 = bitcast i8* %990 to %"class.std::__1::__tree_node_base"*
  %1021 = getelementptr inbounds i8, i8* %990, i64 16
  %1022 = bitcast i8* %1021 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %990, i8 0, i64 16, i1 false) #10, !noalias !57
  store %"class.std::__1::__tree_end_node"* %1018, %"class.std::__1::__tree_end_node"** %1022, align 8, !noalias !57
  %1023 = bitcast %"class.std::__1::__tree_node_base"** %1019 to i8**
  store i8* %990, i8** %1023, align 8
  %1024 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %77, align 8, !noalias !57
  %1025 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1024, i64 0, i32 0
  %1026 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1025, align 8
  %1027 = icmp eq %"class.std::__1::__tree_node_base"* %1026, null
  br i1 %1027, label %1031, label %1028

1028:                                             ; preds = %1017
  %1029 = ptrtoint %"class.std::__1::__tree_node_base"* %1026 to i64
  store i64 %1029, i64* %78, align 8, !noalias !57
  %1030 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1019, align 8
  br label %1031

1031:                                             ; preds = %1017, %1028
  %1032 = phi %"class.std::__1::__tree_node_base"* [ %1020, %1017 ], [ %1030, %1028 ]
  %1033 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8, !noalias !57
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %1033, %"class.std::__1::__tree_node_base"* %1032) #10
  %1034 = load i64, i64* %80, align 8, !noalias !57
  %1035 = add i64 %1034, 1
  store i64 %1035, i64* %80, align 8, !noalias !57
  call void @_ZN4quic26QpackInstructionWithValues18IndexedHeaderFieldEbm(%"class.quic::QpackInstructionWithValues"* nonnull sret %21, i1 zeroext false, i64 %989) #10
  %1036 = load %"class.quic::QpackInstructionWithValues"*, %"class.quic::QpackInstructionWithValues"** %36, align 8
  %1037 = load %"class.quic::QpackInstructionWithValues"*, %"class.quic::QpackInstructionWithValues"** %37, align 8
  %1038 = icmp ult %"class.quic::QpackInstructionWithValues"* %1036, %1037
  %1039 = ptrtoint %"class.quic::QpackInstructionWithValues"* %1037 to i64
  br i1 %1038, label %1040, label %1044

1040:                                             ; preds = %1031
  %1041 = bitcast %"class.quic::QpackInstructionWithValues"* %1036 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1041, i8* nonnull align 8 %73, i64 64, i1 false) #10
  %1042 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %1036, i64 1
  %1043 = ptrtoint %"class.quic::QpackInstructionWithValues"* %1042 to i64
  store i64 %1043, i64* %81, align 8
  br label %1088

1044:                                             ; preds = %1031
  %1045 = ptrtoint %"class.quic::QpackInstructionWithValues"* %1036 to i64
  %1046 = load i64, i64* %42, align 8
  %1047 = sub i64 %1045, %1046
  %1048 = ashr exact i64 %1047, 6
  %1049 = add nsw i64 %1048, 1
  %1050 = icmp ugt i64 %1049, 288230376151711743
  br i1 %1050, label %1051, label %1053

1051:                                             ; preds = %1044
  %1052 = bitcast %"class.std::__1::vector.87"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1052) #12
  unreachable

1053:                                             ; preds = %1044
  %1054 = sub i64 %1039, %1046
  %1055 = ashr exact i64 %1054, 6
  %1056 = icmp ult i64 %1055, 144115188075855871
  br i1 %1056, label %1057, label %1065

1057:                                             ; preds = %1053
  %1058 = ashr exact i64 %1054, 5
  %1059 = icmp ult i64 %1058, %1049
  %1060 = select i1 %1059, i64 %1049, i64 %1058
  %1061 = icmp eq i64 %1060, 0
  br i1 %1061, label %1070, label %1062

1062:                                             ; preds = %1057
  %1063 = icmp ugt i64 %1060, 288230376151711743
  br i1 %1063, label %1064, label %1065

1064:                                             ; preds = %1062
  call void @abort() #12
  unreachable

1065:                                             ; preds = %1062, %1053
  %1066 = phi i64 [ %1060, %1062 ], [ 288230376151711743, %1053 ]
  %1067 = shl i64 %1066, 6
  %1068 = call i8* @_Znwm(i64 %1067) #11
  %1069 = bitcast i8* %1068 to %"class.quic::QpackInstructionWithValues"*
  br label %1070

1070:                                             ; preds = %1065, %1057
  %1071 = phi i64 [ %1066, %1065 ], [ 0, %1057 ]
  %1072 = phi i8* [ %1068, %1065 ], [ null, %1057 ]
  %1073 = phi %"class.quic::QpackInstructionWithValues"* [ %1069, %1065 ], [ null, %1057 ]
  %1074 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %1073, i64 %1048
  %1075 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %1073, i64 %1071
  %1076 = ptrtoint %"class.quic::QpackInstructionWithValues"* %1075 to i64
  %1077 = bitcast %"class.quic::QpackInstructionWithValues"* %1074 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1077, i8* nonnull align 8 %73, i64 64, i1 false) #10
  %1078 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %1074, i64 1
  %1079 = ptrtoint %"class.quic::QpackInstructionWithValues"* %1078 to i64
  %1080 = ptrtoint %"class.quic::QpackInstructionWithValues"* %1073 to i64
  %1081 = icmp sgt i64 %1047, 0
  br i1 %1081, label %1082, label %1084

1082:                                             ; preds = %1070
  %1083 = inttoptr i64 %1046 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1072, i8* align 8 %1083, i64 %1047, i1 false) #10
  br label %1084

1084:                                             ; preds = %1082, %1070
  store i64 %1080, i64* %42, align 8
  store i64 %1079, i64* %81, align 8
  store i64 %1076, i64* %41, align 8
  %1085 = icmp eq i64 %1046, 0
  br i1 %1085, label %1088, label %1086

1086:                                             ; preds = %1084
  %1087 = inttoptr i64 %1046 to i8*
  call void @_ZdlPv(i8* %1087) #11
  br label %1088

1088:                                             ; preds = %1040, %1084, %1086
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %73) #10
  %1089 = icmp ult i64 %989, %113
  %1090 = select i1 %1089, i64 %989, i64 %113
  br label %1147

1091:                                             ; preds = %984, %983
  %1092 = phi i8 [ 1, %983 ], [ %112, %984 ]
  %1093 = phi i8 [ %111, %983 ], [ 1, %984 ]
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %82) #10
  call void @_ZN4quic26QpackInstructionWithValues18LiteralHeaderFieldEN4absl11string_viewES2_(%"class.quic::QpackInstructionWithValues"* nonnull sret %22, i8* %116, i64 %118, i8* %120, i64 %122) #10
  %1094 = load %"class.quic::QpackInstructionWithValues"*, %"class.quic::QpackInstructionWithValues"** %36, align 8
  %1095 = load %"class.quic::QpackInstructionWithValues"*, %"class.quic::QpackInstructionWithValues"** %37, align 8
  %1096 = icmp ult %"class.quic::QpackInstructionWithValues"* %1094, %1095
  %1097 = ptrtoint %"class.quic::QpackInstructionWithValues"* %1095 to i64
  br i1 %1096, label %1098, label %1102

1098:                                             ; preds = %1091
  %1099 = bitcast %"class.quic::QpackInstructionWithValues"* %1094 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1099, i8* nonnull align 8 %82, i64 64, i1 false) #10
  %1100 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %1094, i64 1
  %1101 = ptrtoint %"class.quic::QpackInstructionWithValues"* %1100 to i64
  store i64 %1101, i64* %81, align 8
  br label %1146

1102:                                             ; preds = %1091
  %1103 = ptrtoint %"class.quic::QpackInstructionWithValues"* %1094 to i64
  %1104 = load i64, i64* %42, align 8
  %1105 = sub i64 %1103, %1104
  %1106 = ashr exact i64 %1105, 6
  %1107 = add nsw i64 %1106, 1
  %1108 = icmp ugt i64 %1107, 288230376151711743
  br i1 %1108, label %1109, label %1111

1109:                                             ; preds = %1102
  %1110 = bitcast %"class.std::__1::vector.87"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1110) #12
  unreachable

1111:                                             ; preds = %1102
  %1112 = sub i64 %1097, %1104
  %1113 = ashr exact i64 %1112, 6
  %1114 = icmp ult i64 %1113, 144115188075855871
  br i1 %1114, label %1115, label %1123

1115:                                             ; preds = %1111
  %1116 = ashr exact i64 %1112, 5
  %1117 = icmp ult i64 %1116, %1107
  %1118 = select i1 %1117, i64 %1107, i64 %1116
  %1119 = icmp eq i64 %1118, 0
  br i1 %1119, label %1128, label %1120

1120:                                             ; preds = %1115
  %1121 = icmp ugt i64 %1118, 288230376151711743
  br i1 %1121, label %1122, label %1123

1122:                                             ; preds = %1120
  call void @abort() #12
  unreachable

1123:                                             ; preds = %1120, %1111
  %1124 = phi i64 [ %1118, %1120 ], [ 288230376151711743, %1111 ]
  %1125 = shl i64 %1124, 6
  %1126 = call i8* @_Znwm(i64 %1125) #11
  %1127 = bitcast i8* %1126 to %"class.quic::QpackInstructionWithValues"*
  br label %1128

1128:                                             ; preds = %1123, %1115
  %1129 = phi i64 [ %1124, %1123 ], [ 0, %1115 ]
  %1130 = phi i8* [ %1126, %1123 ], [ null, %1115 ]
  %1131 = phi %"class.quic::QpackInstructionWithValues"* [ %1127, %1123 ], [ null, %1115 ]
  %1132 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %1131, i64 %1106
  %1133 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %1131, i64 %1129
  %1134 = ptrtoint %"class.quic::QpackInstructionWithValues"* %1133 to i64
  %1135 = bitcast %"class.quic::QpackInstructionWithValues"* %1132 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1135, i8* nonnull align 8 %82, i64 64, i1 false) #10
  %1136 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %1132, i64 1
  %1137 = ptrtoint %"class.quic::QpackInstructionWithValues"* %1136 to i64
  %1138 = ptrtoint %"class.quic::QpackInstructionWithValues"* %1131 to i64
  %1139 = icmp sgt i64 %1105, 0
  br i1 %1139, label %1140, label %1142

1140:                                             ; preds = %1128
  %1141 = inttoptr i64 %1104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1130, i8* align 8 %1141, i64 %1105, i1 false) #10
  br label %1142

1142:                                             ; preds = %1140, %1128
  store i64 %1138, i64* %42, align 8
  store i64 %1137, i64* %81, align 8
  store i64 %1134, i64* %41, align 8
  %1143 = icmp eq i64 %1104, 0
  br i1 %1143, label %1146, label %1144

1144:                                             ; preds = %1142
  %1145 = inttoptr i64 %1104 to i8*
  call void @_ZdlPv(i8* %1145) #11
  br label %1146

1146:                                             ; preds = %1098, %1142, %1144
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %82) #10
  br label %1147

1147:                                             ; preds = %110, %1146, %1088, %982, %925, %809, %689, %581, %467, %408, %287, %181
  %1148 = phi i64 [ %113, %110 ], [ %113, %1146 ], [ %1090, %1088 ], [ %113, %982 ], [ %928, %925 ], [ %812, %809 ], [ %113, %689 ], [ %583, %581 ], [ %113, %467 ], [ %411, %408 ], [ %290, %287 ], [ %113, %181 ]
  %1149 = phi i8 [ %112, %110 ], [ %1092, %1146 ], [ %112, %1088 ], [ %814, %982 ], [ %814, %925 ], [ %112, %809 ], [ %112, %689 ], [ %112, %581 ], [ %413, %467 ], [ %112, %408 ], [ %112, %287 ], [ %112, %181 ]
  %1150 = phi i8 [ %111, %110 ], [ %1093, %1146 ], [ %111, %1088 ], [ %815, %982 ], [ %815, %925 ], [ %111, %809 ], [ %111, %689 ], [ %111, %581 ], [ %414, %467 ], [ %111, %408 ], [ %111, %287 ], [ %111, %181 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #10
  %1151 = call dereferenceable(64) %"class.quic::ValueSplittingHeaderList::const_iterator"* @_ZN4quic24ValueSplittingHeaderList14const_iteratorppEv(%"class.quic::ValueSplittingHeaderList::const_iterator"* nonnull %8) #10
  %1152 = call zeroext i1 @_ZNK4quic24ValueSplittingHeaderList14const_iteratorneERKS1_(%"class.quic::ValueSplittingHeaderList::const_iterator"* nonnull %8, %"class.quic::ValueSplittingHeaderList::const_iterator"* nonnull dereferenceable(64) %9) #10
  br i1 %1152, label %110, label %95

1153:                                             ; preds = %107
  %1154 = sub i64 %108, %35
  store i64 %1154, i64* %5, align 8
  br label %1155

1155:                                             ; preds = %107, %1153
  call void @_ZN4quic24QpackEncoderStreamSender5FlushEv(%"class.quic::QpackEncoderStreamSender"* %23) #10
  %1156 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %1, i64 0, i32 7
  %1157 = load i32, i32* %1156, align 8
  %1158 = add nsw i32 %1157, 1
  store i32 %1158, i32* %1156, align 8
  %1159 = and i8 %97, 1
  %1160 = icmp eq i8 %1159, 0
  br i1 %1160, label %1175, label %1161

1161:                                             ; preds = %1155
  %1162 = load atomic i64, i64* @_ZZN4quic12QpackEncoder15FirstPassEncodeEjRKN4spdy16Http2HeaderBlockEPNSt3__18multisetImNS5_4lessImEENS5_9allocatorImEEEEPmE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %1163 = inttoptr i64 %1162 to %"class.base::HistogramBase"*
  %1164 = icmp eq i64 %1162, 0
  br i1 %1164, label %1165, label %1168

1165:                                             ; preds = %1161
  %1166 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 1, i32 1000, i32 50, i32 1) #10
  %1167 = ptrtoint %"class.base::HistogramBase"* %1166 to i64
  store atomic i64 %1167, i64* @_ZZN4quic12QpackEncoder15FirstPassEncodeEjRKN4spdy16Http2HeaderBlockEPNSt3__18multisetImNS5_4lessImEENS5_9allocatorImEEEEPmE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %1168

1168:                                             ; preds = %1161, %1165
  %1169 = phi %"class.base::HistogramBase"* [ %1163, %1161 ], [ %1166, %1165 ]
  %1170 = load i32, i32* %1156, align 8
  %1171 = bitcast %"class.base::HistogramBase"* %1169 to void (%"class.base::HistogramBase"*, i32)***
  %1172 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %1171, align 8
  %1173 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %1172, i64 6
  %1174 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %1173, align 8
  call void %1174(%"class.base::HistogramBase"* %1169, i32 %1170) #10
  br label %1189

1175:                                             ; preds = %1155
  %1176 = load atomic i64, i64* @_ZZN4quic12QpackEncoder15FirstPassEncodeEjRKN4spdy16Http2HeaderBlockEPNSt3__18multisetImNS5_4lessImEENS5_9allocatorImEEEEPmE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %1177 = inttoptr i64 %1176 to %"class.base::HistogramBase"*
  %1178 = icmp eq i64 %1176, 0
  br i1 %1178, label %1179, label %1182

1179:                                             ; preds = %1175
  %1180 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i32 1, i32 1000, i32 50, i32 1) #10
  %1181 = ptrtoint %"class.base::HistogramBase"* %1180 to i64
  store atomic i64 %1181, i64* @_ZZN4quic12QpackEncoder15FirstPassEncodeEjRKN4spdy16Http2HeaderBlockEPNSt3__18multisetImNS5_4lessImEENS5_9allocatorImEEEEPmE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %1182

1182:                                             ; preds = %1175, %1179
  %1183 = phi %"class.base::HistogramBase"* [ %1177, %1175 ], [ %1180, %1179 ]
  %1184 = load i32, i32* %1156, align 8
  %1185 = bitcast %"class.base::HistogramBase"* %1183 to void (%"class.base::HistogramBase"*, i32)***
  %1186 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %1185, align 8
  %1187 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %1186, i64 6
  %1188 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %1187, align 8
  call void %1188(%"class.base::HistogramBase"* %1183, i32 %1184) #10
  br label %1189

1189:                                             ; preds = %1182, %1168
  %1190 = and i8 %96, 1
  %1191 = icmp eq i8 %1190, 0
  br i1 %1191, label %1206, label %1192

1192:                                             ; preds = %1189
  %1193 = load atomic i64, i64* @_ZZN4quic12QpackEncoder15FirstPassEncodeEjRKN4spdy16Http2HeaderBlockEPNSt3__18multisetImNS5_4lessImEENS5_9allocatorImEEEEPmE24atomic_histogram_pointer_1.0.0.0.0.0 acquire, align 8
  %1194 = inttoptr i64 %1193 to %"class.base::HistogramBase"*
  %1195 = icmp eq i64 %1193, 0
  br i1 %1195, label %1196, label %1199

1196:                                             ; preds = %1192
  %1197 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 1000, i32 50, i32 1) #10
  %1198 = ptrtoint %"class.base::HistogramBase"* %1197 to i64
  store atomic i64 %1198, i64* @_ZZN4quic12QpackEncoder15FirstPassEncodeEjRKN4spdy16Http2HeaderBlockEPNSt3__18multisetImNS5_4lessImEENS5_9allocatorImEEEEPmE24atomic_histogram_pointer_1.0.0.0.0.0 release, align 8
  br label %1199

1199:                                             ; preds = %1192, %1196
  %1200 = phi %"class.base::HistogramBase"* [ %1194, %1192 ], [ %1197, %1196 ]
  %1201 = load i32, i32* %1156, align 8
  %1202 = bitcast %"class.base::HistogramBase"* %1200 to void (%"class.base::HistogramBase"*, i32)***
  %1203 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %1202, align 8
  %1204 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %1203, i64 6
  %1205 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %1204, align 8
  call void %1205(%"class.base::HistogramBase"* %1200, i32 %1201) #10
  br label %1220

1206:                                             ; preds = %1189
  %1207 = load atomic i64, i64* @_ZZN4quic12QpackEncoder15FirstPassEncodeEjRKN4spdy16Http2HeaderBlockEPNSt3__18multisetImNS5_4lessImEENS5_9allocatorImEEEEPmE24atomic_histogram_pointer_2.0.0.0.0.0 acquire, align 8
  %1208 = inttoptr i64 %1207 to %"class.base::HistogramBase"*
  %1209 = icmp eq i64 %1207, 0
  br i1 %1209, label %1210, label %1213

1210:                                             ; preds = %1206
  %1211 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.3, i64 0, i64 0), i32 1, i32 1000, i32 50, i32 1) #10
  %1212 = ptrtoint %"class.base::HistogramBase"* %1211 to i64
  store atomic i64 %1212, i64* @_ZZN4quic12QpackEncoder15FirstPassEncodeEjRKN4spdy16Http2HeaderBlockEPNSt3__18multisetImNS5_4lessImEENS5_9allocatorImEEEEPmE24atomic_histogram_pointer_2.0.0.0.0.0 release, align 8
  br label %1213

1213:                                             ; preds = %1206, %1210
  %1214 = phi %"class.base::HistogramBase"* [ %1208, %1206 ], [ %1211, %1210 ]
  %1215 = load i32, i32* %1156, align 8
  %1216 = bitcast %"class.base::HistogramBase"* %1214 to void (%"class.base::HistogramBase"*, i32)***
  %1217 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %1216, align 8
  %1218 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %1217, i64 6
  %1219 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %1218, align 8
  call void %1219(%"class.base::HistogramBase"* %1214, i32 %1215) #10
  br label %1220

1220:                                             ; preds = %1213, %1199
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare i64 @_ZNK4quic20QpackBlockingManager23smallest_blocking_indexEv(%"class.quic::QpackBlockingManager"*) local_unnamed_addr #1

declare i64 @_ZNK4quic23QpackEncoderHeaderTable14draining_indexEf(%"class.quic::QpackEncoderHeaderTable"*, float) local_unnamed_addr #1

declare zeroext i1 @_ZNK4quic20QpackBlockingManager26blocking_allowed_on_streamEjm(%"class.quic::QpackBlockingManager"*, i32, i64) local_unnamed_addr #1

declare void @_ZN4quic24ValueSplittingHeaderListC1EPKN4spdy16Http2HeaderBlockE(%"class.quic::ValueSplittingHeaderList"*, %"class.spdy::Http2HeaderBlock"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZNK4quic24ValueSplittingHeaderList5beginEv(%"class.quic::ValueSplittingHeaderList::const_iterator"* sret, %"class.quic::ValueSplittingHeaderList"*) local_unnamed_addr #1

declare void @_ZNK4quic24ValueSplittingHeaderList3endEv(%"class.quic::ValueSplittingHeaderList::const_iterator"* sret, %"class.quic::ValueSplittingHeaderList"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4quic24ValueSplittingHeaderList14const_iteratorneERKS1_(%"class.quic::ValueSplittingHeaderList::const_iterator"*, %"class.quic::ValueSplittingHeaderList::const_iterator"* dereferenceable(64)) local_unnamed_addr #1

declare dereferenceable(32) %"struct.std::__1::pair.94"* @_ZNK4quic24ValueSplittingHeaderList14const_iteratordeEv(%"class.quic::ValueSplittingHeaderList::const_iterator"*) local_unnamed_addr #1

declare i32 @_ZNK4quic23QpackEncoderHeaderTable15FindHeaderFieldEN4absl11string_viewES2_PbPm(%"class.quic::QpackEncoderHeaderTable"*, i8*, i64, i8*, i64, i8*, i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare i64 @_ZN4spdy10HpackEntry4SizeEN4absl11string_viewES2_(i8*, i64, i8*, i64) local_unnamed_addr #1

declare i64 @_ZNK4quic23QpackEncoderHeaderTable38MaxInsertSizeWithoutEvictingGivenEntryEm(%"class.quic::QpackEncoderHeaderTable"*, i64) local_unnamed_addr #1

declare void @_ZN4quic24QpackEncoderStreamSender13SendDuplicateEm(%"class.quic::QpackEncoderStreamSender"*, i64) local_unnamed_addr #1

declare i64 @_ZN4quic46QpackAbsoluteIndexToEncoderStreamRelativeIndexEmm(i64, i64) local_unnamed_addr #1

declare i64 @_ZN4quic23QpackEncoderHeaderTable11InsertEntryEN4absl11string_viewES2_(%"class.quic::QpackEncoderHeaderTable"*, i8*, i64, i8*, i64) unnamed_addr #1

declare void @_ZN4quic24QpackEncoderStreamSender27SendInsertWithNameReferenceEbmN4absl11string_viewE(%"class.quic::QpackEncoderStreamSender"*, i1 zeroext, i64, i8*, i64) local_unnamed_addr #1

declare void @_ZN4quic24QpackEncoderStreamSender30SendInsertWithoutNameReferenceEN4absl11string_viewES2_(%"class.quic::QpackEncoderStreamSender"*, i8*, i64, i8*, i64) local_unnamed_addr #1

declare dereferenceable(64) %"class.quic::ValueSplittingHeaderList::const_iterator"* @_ZN4quic24ValueSplittingHeaderList14const_iteratorppEv(%"class.quic::ValueSplittingHeaderList::const_iterator"*) local_unnamed_addr #1

declare void @_ZN4quic24QpackEncoderStreamSender5FlushEv(%"class.quic::QpackEncoderStreamSender"*) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4quic12QpackEncoder16SecondPassEncodeENSt3__16vectorINS_26QpackInstructionWithValuesENS1_9allocatorIS3_EEEEm(%"class.std::__1::basic_string"* noalias sret, %"class.quic::QpackEncoder"* nocapture readonly, %"class.std::__1::vector.87"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.quic::QpackInstructionEncoder", align 8
  %6 = alloca %"class.quic::QpackInstructionWithValues", align 8
  %7 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 40, i1 false)
  call void @_ZN4quic23QpackInstructionEncoderC1Ev(%"class.quic::QpackInstructionEncoder"* nonnull %5) #10
  %8 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #10
  %9 = bitcast %"class.quic::QpackInstructionWithValues"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %1, i64 0, i32 4, i32 0, i32 5
  %11 = load i64, i64* %10, align 8
  %12 = call i64 @_ZN4quic30QpackEncodeRequiredInsertCountEmm(i64 %3, i64 %11) #10
  call void @_ZN4quic26QpackInstructionWithValues6PrefixEm(%"class.quic::QpackInstructionWithValues"* nonnull sret %6, i64 %12) #10
  call void @_ZN4quic23QpackInstructionEncoder6EncodeERKNS_26QpackInstructionWithValuesEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.quic::QpackInstructionEncoder"* nonnull %5, %"class.quic::QpackInstructionWithValues"* nonnull dereferenceable(64) %6, %"class.std::__1::basic_string"* %0) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #10
  %13 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %2, i64 0, i32 0, i32 0
  %14 = load %"class.quic::QpackInstructionWithValues"*, %"class.quic::QpackInstructionWithValues"** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %2, i64 0, i32 0, i32 1
  %16 = load %"class.quic::QpackInstructionWithValues"*, %"class.quic::QpackInstructionWithValues"** %15, align 8
  %17 = icmp eq %"class.quic::QpackInstructionWithValues"* %14, %16
  br i1 %17, label %18, label %19

18:                                               ; preds = %37, %4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #10
  ret void

19:                                               ; preds = %4, %37
  %20 = phi %"class.quic::QpackInstructionWithValues"* [ %38, %37 ], [ %14, %4 ]
  %21 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %20, i64 0, i32 0
  %22 = load %"struct.quic::QpackInstruction"*, %"struct.quic::QpackInstruction"** %21, align 8
  %23 = call %"struct.quic::QpackInstruction"* @_ZN4quic34QpackIndexedHeaderFieldInstructionEv() #10
  %24 = icmp eq %"struct.quic::QpackInstruction"* %22, %23
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = load %"struct.quic::QpackInstruction"*, %"struct.quic::QpackInstruction"** %21, align 8
  %27 = call %"struct.quic::QpackInstruction"* @_ZN4quic47QpackLiteralHeaderFieldNameReferenceInstructionEv() #10
  %28 = icmp eq %"struct.quic::QpackInstruction"* %26, %27
  br i1 %28, label %29, label %37

29:                                               ; preds = %25, %19
  %30 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %20, i64 0, i32 1
  %31 = load i8, i8* %30, align 8, !range !8
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %20, i64 0, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = call i64 @_ZN4quic46QpackAbsoluteIndexToRequestStreamRelativeIndexEmm(i64 %35, i64 %3) #10
  store i64 %36, i64* %34, align 8
  br label %37

37:                                               ; preds = %29, %33, %25
  call void @_ZN4quic23QpackInstructionEncoder6EncodeERKNS_26QpackInstructionWithValuesEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.quic::QpackInstructionEncoder"* nonnull %5, %"class.quic::QpackInstructionWithValues"* dereferenceable(64) %20, %"class.std::__1::basic_string"* %0) #10
  %38 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %20, i64 1
  %39 = icmp eq %"class.quic::QpackInstructionWithValues"* %38, %16
  br i1 %39, label %18, label %19
}

declare void @_ZN4quic23QpackInstructionEncoderC1Ev(%"class.quic::QpackInstructionEncoder"*) unnamed_addr #1

declare void @_ZN4quic23QpackInstructionEncoder6EncodeERKNS_26QpackInstructionWithValuesEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.quic::QpackInstructionEncoder"*, %"class.quic::QpackInstructionWithValues"* dereferenceable(64), %"class.std::__1::basic_string"*) local_unnamed_addr #1

declare void @_ZN4quic26QpackInstructionWithValues6PrefixEm(%"class.quic::QpackInstructionWithValues"* sret, i64) local_unnamed_addr #1

declare i64 @_ZN4quic30QpackEncodeRequiredInsertCountEmm(i64, i64) local_unnamed_addr #1

declare %"struct.quic::QpackInstruction"* @_ZN4quic34QpackIndexedHeaderFieldInstructionEv() local_unnamed_addr #1

declare %"struct.quic::QpackInstruction"* @_ZN4quic47QpackLiteralHeaderFieldNameReferenceInstructionEv() local_unnamed_addr #1

declare i64 @_ZN4quic46QpackAbsoluteIndexToRequestStreamRelativeIndexEmm(i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic12QpackEncoder16EncodeHeaderListEjRKN4spdy16Http2HeaderBlockEPm(%"class.std::__1::basic_string"* noalias sret, %"class.quic::QpackEncoder"*, i32, %"class.spdy::Http2HeaderBlock"* dereferenceable(120), i64*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::multiset", align 16
  %7 = alloca %"class.std::__1::vector.87", align 16
  %8 = alloca %"class.std::__1::multiset", align 16
  %9 = alloca %"class.std::__1::vector.87", align 16
  %10 = bitcast %"class.std::__1::multiset"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %6, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %15 = bitcast %"class.std::__1::__tree_node_base"** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %14, %"class.std::__1::__tree_end_node"** %11, align 16
  %16 = bitcast %"class.std::__1::vector.87"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %7, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %7, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.std::__1::vector.87"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -86, i64 24, i1 false)
  call void @_ZN4quic12QpackEncoder15FirstPassEncodeEjRKN4spdy16Http2HeaderBlockEPNSt3__18multisetImNS5_4lessImEENS5_9allocatorImEEEEPm(%"class.std::__1::vector.87"* nonnull sret %7, %"class.quic::QpackEncoder"* %1, i32 %2, %"class.spdy::Http2HeaderBlock"* dereferenceable(120) %3, %"class.std::__1::multiset"* nonnull %6, i64* %4)
  %21 = load i64, i64* %13, align 16
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %41, label %23

23:                                               ; preds = %5
  %24 = call i64 @_ZN4quic20QpackBlockingManager19RequiredInsertCountERKNSt3__18multisetImNS1_4lessImEENS1_9allocatorImEEEE(%"class.std::__1::multiset"* nonnull dereferenceable(24) %6) #10
  %25 = load i64, i64* %13, align 16
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %41, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %1, i64 0, i32 6
  %29 = bitcast %"class.std::__1::multiset"* %6 to <2 x i64>*
  %30 = load <2 x i64>, <2 x i64>* %29, align 16
  %31 = bitcast %"class.std::__1::multiset"* %8 to <2 x i64>*
  store <2 x i64> %30, <2 x i64>* %31, align 16
  %32 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64 %25, i64* %32, align 16
  %33 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  %34 = extractelement <2 x i64> %30, i32 1
  %35 = inttoptr i64 %34 to %"class.std::__1::__tree_node_base"*
  %36 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %35, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %33, %"class.std::__1::__tree_end_node"** %36, align 8
  store %"class.std::__1::__tree_end_node"* %14, %"class.std::__1::__tree_end_node"** %11, align 16
  %37 = bitcast %"class.std::__1::__tree_end_node"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #10
  call void @_ZN4quic20QpackBlockingManager17OnHeaderBlockSentEjNSt3__18multisetImNS1_4lessImEENS1_9allocatorImEEEE(%"class.quic::QpackBlockingManager"* %28, i32 %2, %"class.std::__1::multiset"* nonnull %8) #10
  %38 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %8, i64 0, i32 0
  %39 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_node.133"**
  %40 = load %"class.std::__1::__tree_node.133"*, %"class.std::__1::__tree_node.133"** %39, align 8
  call void @_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE7destroyEPNS_11__tree_nodeImPvEE(%"class.std::__1::__tree.57"* nonnull %38, %"class.std::__1::__tree_node.133"* %40) #10
  br label %41

41:                                               ; preds = %5, %27, %23
  %42 = phi i64 [ %24, %27 ], [ %24, %23 ], [ 0, %5 ]
  %43 = bitcast %"class.quic::QpackInstructionWithValues"** %18 to i64*
  %44 = bitcast %"class.std::__1::vector.87"* %7 to <2 x i64>*
  %45 = load <2 x i64>, <2 x i64>* %44, align 16
  %46 = bitcast %"class.std::__1::vector.87"* %9 to <2 x i64>*
  store <2 x i64> %45, <2 x i64>* %46, align 16
  %47 = bitcast %"class.quic::QpackInstructionWithValues"** %19 to i64*
  %48 = load i64, i64* %47, align 16
  %49 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %50 = bitcast %"class.quic::QpackInstructionWithValues"** %49 to i64*
  store i64 %48, i64* %50, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 0, i64 24, i1 false) #10
  call void @_ZNK4quic12QpackEncoder16SecondPassEncodeENSt3__16vectorINS_26QpackInstructionWithValuesENS1_9allocatorIS3_EEEEm(%"class.std::__1::basic_string"* sret %0, %"class.quic::QpackEncoder"* %1, %"class.std::__1::vector.87"* nonnull %9, i64 %42)
  %51 = extractelement <2 x i64> %45, i32 0
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %41
  %54 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %9, i64 0, i32 0, i32 1
  %55 = bitcast %"class.quic::QpackInstructionWithValues"** %54 to i64*
  store i64 %51, i64* %55, align 8
  %56 = inttoptr i64 %51 to i8*
  call void @_ZdlPv(i8* %56) #11
  br label %57

57:                                               ; preds = %41, %53
  %58 = load %"class.quic::QpackInstructionWithValues"*, %"class.quic::QpackInstructionWithValues"** %17, align 16
  %59 = icmp eq %"class.quic::QpackInstructionWithValues"* %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %57
  %61 = ptrtoint %"class.quic::QpackInstructionWithValues"* %58 to i64
  store i64 %61, i64* %43, align 8
  %62 = bitcast %"class.quic::QpackInstructionWithValues"* %58 to i8*
  call void @_ZdlPv(i8* %62) #11
  br label %63

63:                                               ; preds = %57, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #10
  %64 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %6, i64 0, i32 0
  %65 = bitcast %"class.std::__1::__tree_end_node"* %14 to %"class.std::__1::__tree_node.133"**
  %66 = load %"class.std::__1::__tree_node.133"*, %"class.std::__1::__tree_node.133"** %65, align 8
  call void @_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE7destroyEPNS_11__tree_nodeImPvEE(%"class.std::__1::__tree.57"* nonnull %64, %"class.std::__1::__tree_node.133"* %66) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  ret void
}

declare i64 @_ZN4quic20QpackBlockingManager19RequiredInsertCountERKNSt3__18multisetImNS1_4lessImEENS1_9allocatorImEEEE(%"class.std::__1::multiset"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4quic20QpackBlockingManager17OnHeaderBlockSentEjNSt3__18multisetImNS1_4lessImEENS1_9allocatorImEEEE(%"class.quic::QpackBlockingManager"*, i32, %"class.std::__1::multiset"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic12QpackEncoder30SetMaximumDynamicTableCapacityEm(%"class.quic::QpackEncoder"* nocapture, i64) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 4, i32 0, i32 4
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  store i64 %1, i64* %3, align 8
  %7 = lshr i64 %1, 5
  %8 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 4, i32 0, i32 5
  store i64 %7, i64* %8, align 8
  br label %11

9:                                                ; preds = %2
  %10 = icmp eq i64 %4, %1
  br label %11

11:                                               ; preds = %6, %9
  %12 = phi i1 [ true, %6 ], [ %10, %9 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic12QpackEncoder23SetDynamicTableCapacityEm(%"class.quic::QpackEncoder"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 3
  tail call void @_ZN4quic24QpackEncoderStreamSender27SendSetDynamicTableCapacityEm(%"class.quic::QpackEncoderStreamSender"* %3, i64 %1) #10
  %4 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 4
  %5 = bitcast %"class.quic::QpackEncoderHeaderTable"* %4 to %"class.quic::QpackHeaderTableBase"*
  %6 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 4, i32 0, i32 4
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 4, i32 0, i32 3
  store i64 %1, i64* %10, align 8
  %11 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 4, i32 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %12, %1
  br i1 %13, label %14, label %22

14:                                               ; preds = %9
  %15 = bitcast %"class.quic::QpackEncoderHeaderTable"* %4 to void (%"class.quic::QpackHeaderTableBase"*)***
  br label %16

16:                                               ; preds = %16, %14
  %17 = load void (%"class.quic::QpackHeaderTableBase"*)**, void (%"class.quic::QpackHeaderTableBase"*)*** %15, align 8
  %18 = getelementptr inbounds void (%"class.quic::QpackHeaderTableBase"*)*, void (%"class.quic::QpackHeaderTableBase"*)** %17, i64 3
  %19 = load void (%"class.quic::QpackHeaderTableBase"*)*, void (%"class.quic::QpackHeaderTableBase"*)** %18, align 8
  tail call void %19(%"class.quic::QpackHeaderTableBase"* %5) #10
  %20 = load i64, i64* %11, align 8
  %21 = icmp ugt i64 %20, %1
  br i1 %21, label %16, label %22

22:                                               ; preds = %16, %2, %9
  ret void
}

declare void @_ZN4quic24QpackEncoderStreamSender27SendSetDynamicTableCapacityEm(%"class.quic::QpackEncoderStreamSender"*, i64) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic12QpackEncoder24SetMaximumBlockedStreamsEm(%"class.quic::QpackEncoder"* nocapture, i64) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i64 %1, i64* %3, align 8
  br label %7

7:                                                ; preds = %2, %6
  %8 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic12QpackEncoder22OnInsertCountIncrementEm(%"class.quic::QpackEncoder"*, i64) unnamed_addr #0 align 2 {
  %3 = alloca [6 x %"class.absl::string_view"], align 16
  %4 = alloca %"class.absl::AlphaNum", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.absl::AlphaNum", align 16
  %7 = alloca %"class.absl::AlphaNum", align 8
  %8 = icmp eq i64 %1, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = bitcast %"class.quic::QpackEncoder"* %0 to void (%"class.quic::QpackEncoder"*, i32, i8*, i64)***
  %11 = load void (%"class.quic::QpackEncoder"*, i32, i8*, i64)**, void (%"class.quic::QpackEncoder"*, i32, i8*, i64)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.quic::QpackEncoder"*, i32, i8*, i64)*, void (%"class.quic::QpackEncoder"*, i32, i8*, i64)** %11, i64 5
  %13 = load void (%"class.quic::QpackEncoder"*, i32, i8*, i64)*, void (%"class.quic::QpackEncoder"*, i32, i8*, i64)** %12, align 8
  tail call void %13(%"class.quic::QpackEncoder"* %0, i32 187, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i64 26) #10
  br label %114

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 6
  %16 = tail call zeroext i1 @_ZN4quic20QpackBlockingManager22OnInsertCountIncrementEm(%"class.quic::QpackBlockingManager"* %15, i64 %1) #10
  br i1 %16, label %22, label %17

17:                                               ; preds = %14
  %18 = bitcast %"class.quic::QpackEncoder"* %0 to void (%"class.quic::QpackEncoder"*, i32, i8*, i64)***
  %19 = load void (%"class.quic::QpackEncoder"*, i32, i8*, i64)**, void (%"class.quic::QpackEncoder"*, i32, i8*, i64)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.quic::QpackEncoder"*, i32, i8*, i64)*, void (%"class.quic::QpackEncoder"*, i32, i8*, i64)** %19, i64 5
  %21 = load void (%"class.quic::QpackEncoder"*, i32, i8*, i64)*, void (%"class.quic::QpackEncoder"*, i32, i8*, i64)** %20, align 8
  tail call void %21(%"class.quic::QpackEncoder"* %0, i32 188, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5, i64 0, i64 0), i64 51) #10
  br label %22

22:                                               ; preds = %17, %14
  %23 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 6, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 4, i32 0, i32 6
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, %26
  %30 = icmp ugt i64 %24, %29
  br i1 %30, label %31, label %114

31:                                               ; preds = %22
  %32 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #10
  %33 = bitcast %"class.absl::AlphaNum"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %33) #10
  %34 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 1, i64 0
  %35 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEmPc(i64 %1, i8* %34) #10
  %36 = ptrtoint i8* %35 to i64
  %37 = ptrtoint i8* %34 to i64
  %38 = sub i64 %36, %37
  %39 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 0
  store i8* %34, i8** %39, align 16
  %40 = icmp sgt i64 %38, -1
  br i1 %40, label %42, label %41, !prof !58

41:                                               ; preds = %31
  call void @llvm.trap() #10
  unreachable

42:                                               ; preds = %31
  %43 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 1
  store i64 %38, i64* %43, align 8
  %44 = bitcast %"class.absl::AlphaNum"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %44) #10
  %45 = load i64, i64* %23, align 8
  %46 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %7, i64 0, i32 1, i64 0
  %47 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEmPc(i64 %45, i8* %46) #10
  %48 = ptrtoint i8* %47 to i64
  %49 = ptrtoint i8* %46 to i64
  %50 = sub i64 %48, %49
  %51 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %7, i64 0, i32 0, i32 0
  store i8* %46, i8** %51, align 8
  %52 = icmp sgt i64 %50, -1
  br i1 %52, label %54, label %53, !prof !58

53:                                               ; preds = %42
  call void @llvm.trap() #10
  unreachable

54:                                               ; preds = %42
  %55 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %7, i64 0, i32 0, i32 1
  store i64 %50, i64* %55, align 8
  %56 = load i64, i64* %25, align 8
  %57 = load i64, i64* %27, align 8
  %58 = add i64 %57, %56
  %59 = bitcast [6 x %"class.absl::string_view"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %59) #10, !noalias !59
  %60 = bitcast [6 x %"class.absl::string_view"]* %3 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([17 x i8]* @.str.6 to i64), i64 16>, <2 x i64>* %60, align 16, !noalias !59
  %61 = bitcast %"class.absl::AlphaNum"* %6 to <2 x i64>*
  %62 = load <2 x i64>, <2 x i64>* %61, align 16, !noalias !59
  %63 = getelementptr inbounds [6 x %"class.absl::string_view"], [6 x %"class.absl::string_view"]* %3, i64 0, i64 1, i32 0
  %64 = bitcast i8** %63 to <2 x i64>*
  store <2 x i64> %62, <2 x i64>* %64, align 16, !noalias !59
  %65 = getelementptr inbounds [6 x %"class.absl::string_view"], [6 x %"class.absl::string_view"]* %3, i64 0, i64 2, i32 0
  %66 = bitcast i8** %65 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([33 x i8]* @.str.7 to i64), i64 32>, <2 x i64>* %66, align 16, !noalias !59
  %67 = getelementptr inbounds [6 x %"class.absl::string_view"], [6 x %"class.absl::string_view"]* %3, i64 0, i64 3, i32 0
  %68 = bitcast i8** %67 to i64*
  store i64 %49, i64* %68, align 16, !noalias !59
  %69 = getelementptr inbounds [6 x %"class.absl::string_view"], [6 x %"class.absl::string_view"]* %3, i64 0, i64 3, i32 1
  store i64 %50, i64* %69, align 8, !noalias !59
  %70 = getelementptr inbounds [6 x %"class.absl::string_view"], [6 x %"class.absl::string_view"]* %3, i64 0, i64 4, i32 0
  %71 = bitcast i8** %70 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([33 x i8]* @.str.8 to i64), i64 32>, <2 x i64>* %71, align 16, !noalias !59
  %72 = bitcast %"class.absl::AlphaNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %72) #10, !noalias !59
  %73 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 1, i64 0
  %74 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEmPc(i64 %58, i8* %73) #10, !noalias !59
  %75 = ptrtoint i8* %74 to i64
  %76 = ptrtoint i8* %73 to i64
  %77 = sub i64 %75, %76
  %78 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 0
  store i8* %73, i8** %78, align 8, !noalias !59
  %79 = icmp sgt i64 %77, -1
  br i1 %79, label %81, label %80, !prof !58

80:                                               ; preds = %54
  call void @llvm.trap() #10
  unreachable

81:                                               ; preds = %54
  %82 = getelementptr inbounds [6 x %"class.absl::string_view"], [6 x %"class.absl::string_view"]* %3, i64 0, i64 0
  %83 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 1
  store i64 %77, i64* %83, align 8, !noalias !59
  %84 = getelementptr inbounds [6 x %"class.absl::string_view"], [6 x %"class.absl::string_view"]* %3, i64 0, i64 5, i32 0
  store i8* %73, i8** %84, align 16, !noalias !59
  %85 = getelementptr inbounds [6 x %"class.absl::string_view"], [6 x %"class.absl::string_view"]* %3, i64 0, i64 5, i32 1
  store i64 %77, i64* %85, align 8, !noalias !59
  call void @_ZN4absl16strings_internal9CatPiecesESt16initializer_listINS_11string_viewEE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.absl::string_view"* nonnull %82, i64 6) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %72) #10, !noalias !59
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %59) #10, !noalias !59
  %86 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %81
  %91 = zext i8 %88 to i64
  %92 = ptrtoint %"class.std::__1::basic_string"* %5 to i64
  br label %100

93:                                               ; preds = %81
  %94 = bitcast %"class.std::__1::basic_string"* %5 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = icmp sgt i64 %97, -1
  br i1 %98, label %100, label %99, !prof !58

99:                                               ; preds = %93
  call void @llvm.trap() #10
  unreachable

100:                                              ; preds = %90, %93
  %101 = phi i64 [ %95, %93 ], [ %92, %90 ]
  %102 = phi i64 [ %97, %93 ], [ %91, %90 ]
  %103 = inttoptr i64 %101 to i8*
  %104 = bitcast %"class.quic::QpackEncoder"* %0 to void (%"class.quic::QpackEncoder"*, i32, i8*, i64)***
  %105 = load void (%"class.quic::QpackEncoder"*, i32, i8*, i64)**, void (%"class.quic::QpackEncoder"*, i32, i8*, i64)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.quic::QpackEncoder"*, i32, i8*, i64)*, void (%"class.quic::QpackEncoder"*, i32, i8*, i64)** %105, i64 5
  %107 = load void (%"class.quic::QpackEncoder"*, i32, i8*, i64)*, void (%"class.quic::QpackEncoder"*, i32, i8*, i64)** %106, align 8
  call void %107(%"class.quic::QpackEncoder"* %0, i32 189, i8* %103, i64 %102) #10
  %108 = load i8, i8* %87, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %100
  %111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i8*, i8** %111, align 8
  call void @_ZdlPv(i8* %112) #11
  br label %113

113:                                              ; preds = %100, %110
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %44) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %33) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #10
  br label %114

114:                                              ; preds = %9, %113, %22
  ret void
}

declare zeroext i1 @_ZN4quic20QpackBlockingManager22OnInsertCountIncrementEm(%"class.quic::QpackBlockingManager"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic12QpackEncoder23OnHeaderAcknowledgementEj(%"class.quic::QpackEncoder"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.absl::AlphaNum", align 8
  %5 = alloca %"class.absl::AlphaNum", align 8
  %6 = alloca %"class.absl::AlphaNum", align 8
  %7 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 6
  %8 = tail call zeroext i1 @_ZN4quic20QpackBlockingManager23OnHeaderAcknowledgementEj(%"class.quic::QpackBlockingManager"* %7, i32 %1) #10
  br i1 %8, label %56, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = bitcast %"class.absl::AlphaNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8** %12, align 8
  %13 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 1
  store i64 43, i64* %13, align 8
  %14 = bitcast %"class.absl::AlphaNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 1, i64 0
  %16 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEjPc(i32 %1, i8* %15) #10
  %17 = ptrtoint i8* %16 to i64
  %18 = ptrtoint i8* %15 to i64
  %19 = sub i64 %17, %18
  %20 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 0
  store i8* %15, i8** %20, align 8
  %21 = icmp sgt i64 %19, -1
  br i1 %21, label %23, label %22, !prof !58

22:                                               ; preds = %9
  call void @llvm.trap() #10
  unreachable

23:                                               ; preds = %9
  %24 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 1
  store i64 %19, i64* %24, align 8
  %25 = bitcast %"class.absl::AlphaNum"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %25) #10
  %26 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10, i64 0, i64 0), i8** %26, align 8
  %27 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 1
  store i64 35, i64* %27, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_(%"class.std::__1::basic_string"* nonnull sret %3, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %4, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %5, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %6) #10
  %28 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %23
  %33 = zext i8 %30 to i64
  %34 = ptrtoint %"class.std::__1::basic_string"* %3 to i64
  br label %42

35:                                               ; preds = %23
  %36 = bitcast %"class.std::__1::basic_string"* %3 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = icmp sgt i64 %39, -1
  br i1 %40, label %42, label %41, !prof !58

41:                                               ; preds = %35
  call void @llvm.trap() #10
  unreachable

42:                                               ; preds = %32, %35
  %43 = phi i64 [ %37, %35 ], [ %34, %32 ]
  %44 = phi i64 [ %39, %35 ], [ %33, %32 ]
  %45 = inttoptr i64 %43 to i8*
  %46 = bitcast %"class.quic::QpackEncoder"* %0 to void (%"class.quic::QpackEncoder"*, i32, i8*, i64)***
  %47 = load void (%"class.quic::QpackEncoder"*, i32, i8*, i64)**, void (%"class.quic::QpackEncoder"*, i32, i8*, i64)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.quic::QpackEncoder"*, i32, i8*, i64)*, void (%"class.quic::QpackEncoder"*, i32, i8*, i64)** %47, i64 5
  %49 = load void (%"class.quic::QpackEncoder"*, i32, i8*, i64)*, void (%"class.quic::QpackEncoder"*, i32, i8*, i64)** %48, align 8
  call void %49(%"class.quic::QpackEncoder"* %0, i32 190, i8* %45, i64 %44) #10
  %50 = load i8, i8* %29, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %54) #11
  br label %55

55:                                               ; preds = %42, %52
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %25) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  br label %56

56:                                               ; preds = %55, %2
  ret void
}

declare zeroext i1 @_ZN4quic20QpackBlockingManager23OnHeaderAcknowledgementEj(%"class.quic::QpackBlockingManager"*, i32) local_unnamed_addr #1

declare void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_(%"class.std::__1::basic_string"* sret, %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic12QpackEncoder20OnStreamCancellationEj(%"class.quic::QpackEncoder"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 6
  tail call void @_ZN4quic20QpackBlockingManager20OnStreamCancellationEj(%"class.quic::QpackBlockingManager"* %3, i32 %1) #10
  ret void
}

declare void @_ZN4quic20QpackBlockingManager20OnStreamCancellationEj(%"class.quic::QpackBlockingManager"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic12QpackEncoder15OnErrorDetectedENS_13QuicErrorCodeEN4absl11string_viewE(%"class.quic::QpackEncoder"* nocapture readonly, i32, i8*, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %0, i64 0, i32 1
  %6 = load %"class.quic::QpackEncoder::DecoderStreamErrorDelegate"*, %"class.quic::QpackEncoder::DecoderStreamErrorDelegate"** %5, align 8
  %7 = bitcast %"class.quic::QpackEncoder::DecoderStreamErrorDelegate"* %6 to void (%"class.quic::QpackEncoder::DecoderStreamErrorDelegate"*, i32, i8*, i64)***
  %8 = load void (%"class.quic::QpackEncoder::DecoderStreamErrorDelegate"*, i32, i8*, i64)**, void (%"class.quic::QpackEncoder::DecoderStreamErrorDelegate"*, i32, i8*, i64)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.quic::QpackEncoder::DecoderStreamErrorDelegate"*, i32, i8*, i64)*, void (%"class.quic::QpackEncoder::DecoderStreamErrorDelegate"*, i32, i8*, i64)** %8, i64 2
  %10 = load void (%"class.quic::QpackEncoder::DecoderStreamErrorDelegate"*, i32, i8*, i64)*, void (%"class.quic::QpackEncoder::DecoderStreamErrorDelegate"*, i32, i8*, i64)** %9, align 8
  tail call void %10(%"class.quic::QpackEncoder::DecoderStreamErrorDelegate"* %6, i32 %1, i8* %2, i64 %3) #10
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeImmEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImmEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImmEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__14listINS3_8multisetImNS3_4lessImEENS3_9allocatorImEEEENS8_ISA_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS8_INS3_4pairIKjSC_EEEEE13destroy_slotsEv(%"class.absl::container_internal::raw_hash_set.36"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.36", %"class.absl::container_internal::raw_hash_set.36"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %58, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.36", %"class.absl::container_internal::raw_hash_set.36"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.36", %"class.absl::container_internal::raw_hash_set.36"* %0, i64 0, i32 1
  br label %13

8:                                                ; preds = %54
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.36", %"class.absl::container_internal::raw_hash_set.36"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.36", %"class.absl::container_internal::raw_hash_set.36"* %0, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #11
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %10, align 8
  %12 = bitcast %"union.absl::container_internal::map_slot_type.37"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 32, i1 false)
  br label %58

13:                                               ; preds = %5, %54
  %14 = phi i64 [ 0, %5 ], [ %55, %54 ]
  %15 = load i8*, i8** %6, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = load i8, i8* %16, align 1
  %18 = icmp sgt i8 %17, -1
  br i1 %18, label %19, label %54

19:                                               ; preds = %13
  %20 = load %"union.absl::container_internal::map_slot_type.37"*, %"union.absl::container_internal::map_slot_type.37"** %7, align 8
  %21 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.37", %"union.absl::container_internal::map_slot_type.37"* %20, i64 %14, i32 0, i32 1, i32 0
  %22 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.37", %"union.absl::container_internal::map_slot_type.37"* %20, i64 %14, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %54, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.37", %"union.absl::container_internal::map_slot_type.37"* %20, i64 %14, i32 0, i32 1, i32 0, i32 0, i32 1
  %27 = load %"struct.std::__1::__list_node_base.109"*, %"struct.std::__1::__list_node_base.109"** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::__list_imp.108", %"class.std::__1::__list_imp.108"* %21, i64 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::__list_imp.108", %"class.std::__1::__list_imp.108"* %21, i64 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__list_node_base.109"*, %"struct.std::__1::__list_node_base.109"** %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__list_node_base.109", %"struct.std::__1::__list_node_base.109"* %30, i64 0, i32 1
  %32 = bitcast %"struct.std::__1::__list_node_base.109"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node_base.109", %"struct.std::__1::__list_node_base.109"* %27, i64 0, i32 0
  %35 = load %"struct.std::__1::__list_node_base.109"*, %"struct.std::__1::__list_node_base.109"** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__list_node_base.109", %"struct.std::__1::__list_node_base.109"* %35, i64 0, i32 1
  %37 = bitcast %"struct.std::__1::__list_node_base.109"** %36 to i64*
  store i64 %33, i64* %37, align 8
  %38 = bitcast %"struct.std::__1::__list_node_base.109"* %27 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"struct.std::__1::__list_node_base.109"** %31 to i64**
  %41 = load i64*, i64** %40, align 8
  store i64 %39, i64* %41, align 8
  store i64 0, i64* %22, align 8
  %42 = icmp eq %"struct.std::__1::__list_node_base.109"* %27, %28
  br i1 %42, label %54, label %43

43:                                               ; preds = %25, %43
  %44 = phi %"struct.std::__1::__list_node_base.109"* [ %46, %43 ], [ %27, %25 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base.109", %"struct.std::__1::__list_node_base.109"* %44, i64 0, i32 1
  %46 = load %"struct.std::__1::__list_node_base.109"*, %"struct.std::__1::__list_node_base.109"** %45, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__list_node_base.109", %"struct.std::__1::__list_node_base.109"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__list_node_base.109"* %47 to %"class.std::__1::__tree.57"*
  %49 = getelementptr inbounds %"struct.std::__1::__list_node_base.109", %"struct.std::__1::__list_node_base.109"* %44, i64 1, i32 1
  %50 = bitcast %"struct.std::__1::__list_node_base.109"** %49 to %"class.std::__1::__tree_node.133"**
  %51 = load %"class.std::__1::__tree_node.133"*, %"class.std::__1::__tree_node.133"** %50, align 8
  tail call void @_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE7destroyEPNS_11__tree_nodeImPvEE(%"class.std::__1::__tree.57"* %48, %"class.std::__1::__tree_node.133"* %51) #10
  %52 = bitcast %"struct.std::__1::__list_node_base.109"* %44 to i8*
  tail call void @_ZdlPv(i8* %52) #11
  %53 = icmp eq %"struct.std::__1::__list_node_base.109"* %46, %28
  br i1 %53, label %54, label %43

54:                                               ; preds = %43, %25, %19, %13
  %55 = add i64 %14, 1
  %56 = load i64, i64* %2, align 8
  %57 = icmp eq i64 %55, %56
  br i1 %57, label %8, label %13

58:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic20QpackHeaderTableBaseINSt3__15dequeIN4spdy10HpackEntryENS1_9allocatorIS4_EEEEED2Ev(%"class.quic::QpackHeaderTableBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.quic::QpackHeaderTableBase", %"class.quic::QpackHeaderTableBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4quic20QpackHeaderTableBaseINSt3__15dequeIN4spdy10HpackEntryENS1_9allocatorIS4_EEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.quic::QpackHeaderTableBase", %"class.quic::QpackHeaderTableBase"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__112__deque_baseIN4spdy10HpackEntryENS_9allocatorIS2_EEE5clearEv(%"class.std::__1::__deque_base"* %3) #10
  %4 = getelementptr inbounds %"class.quic::QpackHeaderTableBase", %"class.quic::QpackHeaderTableBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %5 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %4, align 8
  %6 = getelementptr inbounds %"class.quic::QpackHeaderTableBase", %"class.quic::QpackHeaderTableBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %7 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %6, align 8
  %8 = icmp eq %"class.spdy::HpackEntry"** %5, %7
  br i1 %8, label %27, label %9

9:                                                ; preds = %1, %9
  %10 = phi %"class.spdy::HpackEntry"** [ %13, %9 ], [ %5, %1 ]
  %11 = bitcast %"class.spdy::HpackEntry"** %10 to i8**
  %12 = load i8*, i8** %11, align 8
  tail call void @_ZdlPv(i8* %12) #11
  %13 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %10, i64 1
  %14 = icmp eq %"class.spdy::HpackEntry"** %13, %7
  br i1 %14, label %15, label %9

15:                                               ; preds = %9
  %16 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %4, align 8
  %17 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %6, align 8
  %18 = icmp eq %"class.spdy::HpackEntry"** %17, %16
  br i1 %18, label %27, label %19

19:                                               ; preds = %15
  %20 = ptrtoint %"class.spdy::HpackEntry"** %16 to i64
  %21 = getelementptr %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %17, i64 -1
  %22 = ptrtoint %"class.spdy::HpackEntry"** %21 to i64
  %23 = sub i64 %22, %20
  %24 = lshr i64 %23, 3
  %25 = xor i64 %24, -1
  %26 = getelementptr %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %17, i64 %25
  store %"class.spdy::HpackEntry"** %26, %"class.spdy::HpackEntry"*** %6, align 8
  br label %27

27:                                               ; preds = %19, %15, %1
  %28 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %3, i64 0, i32 0, i32 0
  %29 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %28, align 8
  %30 = icmp eq %"class.spdy::HpackEntry"** %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.spdy::HpackEntry"** %29 to i8*
  tail call void @_ZdlPv(i8* %32) #11
  br label %33

33:                                               ; preds = %27, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic20QpackHeaderTableBaseINSt3__15dequeIN4spdy10HpackEntryENS1_9allocatorIS4_EEEEED0Ev(%"class.quic::QpackHeaderTableBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.quic::QpackHeaderTableBase", %"class.quic::QpackHeaderTableBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4quic20QpackHeaderTableBaseINSt3__15dequeIN4spdy10HpackEntryENS1_9allocatorIS4_EEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.quic::QpackHeaderTableBase", %"class.quic::QpackHeaderTableBase"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__112__deque_baseIN4spdy10HpackEntryENS_9allocatorIS2_EEE5clearEv(%"class.std::__1::__deque_base"* %3) #10
  %4 = getelementptr inbounds %"class.quic::QpackHeaderTableBase", %"class.quic::QpackHeaderTableBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %5 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %4, align 8
  %6 = getelementptr inbounds %"class.quic::QpackHeaderTableBase", %"class.quic::QpackHeaderTableBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %7 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %6, align 8
  %8 = icmp eq %"class.spdy::HpackEntry"** %5, %7
  br i1 %8, label %27, label %9

9:                                                ; preds = %1, %9
  %10 = phi %"class.spdy::HpackEntry"** [ %13, %9 ], [ %5, %1 ]
  %11 = bitcast %"class.spdy::HpackEntry"** %10 to i8**
  %12 = load i8*, i8** %11, align 8
  tail call void @_ZdlPv(i8* %12) #11
  %13 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %10, i64 1
  %14 = icmp eq %"class.spdy::HpackEntry"** %13, %7
  br i1 %14, label %15, label %9

15:                                               ; preds = %9
  %16 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %4, align 8
  %17 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %6, align 8
  %18 = icmp eq %"class.spdy::HpackEntry"** %17, %16
  br i1 %18, label %27, label %19

19:                                               ; preds = %15
  %20 = ptrtoint %"class.spdy::HpackEntry"** %16 to i64
  %21 = getelementptr %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %17, i64 -1
  %22 = ptrtoint %"class.spdy::HpackEntry"** %21 to i64
  %23 = sub i64 %22, %20
  %24 = lshr i64 %23, 3
  %25 = xor i64 %24, -1
  %26 = getelementptr %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %17, i64 %25
  store %"class.spdy::HpackEntry"** %26, %"class.spdy::HpackEntry"*** %6, align 8
  br label %27

27:                                               ; preds = %19, %15, %1
  %28 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %3, i64 0, i32 0, i32 0
  %29 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %28, align 8
  %30 = icmp eq %"class.spdy::HpackEntry"** %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.spdy::HpackEntry"** %29 to i8*
  tail call void @_ZdlPv(i8* %32) #11
  br label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.quic::QpackHeaderTableBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %34) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4quic20QpackHeaderTableBaseINSt3__15dequeIN4spdy10HpackEntryENS1_9allocatorIS4_EEEEE11InsertEntryEN4absl11string_viewESA_(%"class.quic::QpackHeaderTableBase"*, i8*, i64, i8*, i64) unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.spdy::HpackEntry", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = getelementptr inbounds %"class.quic::QpackHeaderTableBase", %"class.quic::QpackHeaderTableBase"* %0, i64 0, i32 6
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.quic::QpackHeaderTableBase", %"class.quic::QpackHeaderTableBase"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.quic::QpackHeaderTableBase", %"class.quic::QpackHeaderTableBase"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, %10
  %15 = bitcast %"class.spdy::HpackEntry"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %15) #10
  %16 = icmp eq i8* %1, null
  %17 = bitcast %"class.spdy::HpackEntry"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 48, i1 false)
  br i1 %16, label %18, label %20

18:                                               ; preds = %5
  %19 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #10, !alias.scope !62
  br label %45

20:                                               ; preds = %5
  %21 = icmp ugt i64 %2, -17
  br i1 %21, label %22, label %24

22:                                               ; preds = %20
  %23 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %23) #12
  unreachable

24:                                               ; preds = %20
  %25 = icmp ult i64 %2, 23
  br i1 %25, label %34, label %26

26:                                               ; preds = %24
  %27 = add nuw i64 %2, 16
  %28 = and i64 %27, -16
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %29, i8** %30, align 8, !alias.scope !62
  %31 = or i64 %28, -9223372036854775808
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %31, i64* %32, align 8, !alias.scope !62
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %2, i64* %33, align 8, !alias.scope !62
  br label %40

34:                                               ; preds = %24
  %35 = trunc i64 %2 to i8
  %36 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  store i8 %35, i8* %37, align 1, !alias.scope !62
  %38 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %39 = icmp eq i64 %2, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %34, %26
  %41 = phi i8* [ %29, %26 ], [ %38, %34 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %41, i8* nonnull align 1 %1, i64 %2, i1 false) #10
  br label %42

42:                                               ; preds = %40, %34
  %43 = phi i8* [ %38, %34 ], [ %41, %40 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %2
  store i8 0, i8* %44, align 1
  br label %45

45:                                               ; preds = %18, %42
  %46 = icmp eq i8* %3, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %45
  %48 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 24, i1 false) #10, !alias.scope !65
  br label %74

49:                                               ; preds = %45
  %50 = icmp ugt i64 %4, -17
  br i1 %50, label %51, label %53

51:                                               ; preds = %49
  %52 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %52) #12
  unreachable

53:                                               ; preds = %49
  %54 = icmp ult i64 %4, 23
  br i1 %54, label %63, label %55

55:                                               ; preds = %53
  %56 = add nuw i64 %4, 16
  %57 = and i64 %56, -16
  %58 = tail call i8* @_Znwm(i64 %57) #11
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %58, i8** %59, align 8, !alias.scope !65
  %60 = or i64 %57, -9223372036854775808
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %60, i64* %61, align 8, !alias.scope !65
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %4, i64* %62, align 8, !alias.scope !65
  br label %69

63:                                               ; preds = %53
  %64 = trunc i64 %4 to i8
  %65 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  store i8 %64, i8* %66, align 1, !alias.scope !65
  %67 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %68 = icmp eq i64 %4, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %63, %55
  %70 = phi i8* [ %58, %55 ], [ %67, %63 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %70, i8* nonnull align 1 %3, i64 %4, i1 false) #10
  br label %71

71:                                               ; preds = %69, %63
  %72 = phi i8* [ %67, %63 ], [ %70, %69 ]
  %73 = getelementptr inbounds i8, i8* %72, i64 %4
  store i8 0, i8* %73, align 1
  br label %74

74:                                               ; preds = %47, %71
  call void @_ZN4spdy10HpackEntryC1ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_(%"class.spdy::HpackEntry"* nonnull %6, %"class.std::__1::basic_string"* nonnull %7, %"class.std::__1::basic_string"* nonnull %8) #10
  %75 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  call void @_ZdlPv(i8* %81) #11
  br label %82

82:                                               ; preds = %74, %79
  %83 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  call void @_ZdlPv(i8* %89) #11
  br label %90

90:                                               ; preds = %82, %87
  %91 = call i64 @_ZNK4spdy10HpackEntry4SizeEv(%"class.spdy::HpackEntry"* nonnull %6) #10
  %92 = getelementptr inbounds %"class.quic::QpackHeaderTableBase", %"class.quic::QpackHeaderTableBase"* %0, i64 0, i32 3
  %93 = load i64, i64* %92, align 8
  %94 = sub i64 %93, %91
  %95 = getelementptr inbounds %"class.quic::QpackHeaderTableBase", %"class.quic::QpackHeaderTableBase"* %0, i64 0, i32 2
  %96 = load i64, i64* %95, align 8
  %97 = icmp ugt i64 %96, %94
  br i1 %97, label %98, label %106

98:                                               ; preds = %90
  %99 = bitcast %"class.quic::QpackHeaderTableBase"* %0 to void (%"class.quic::QpackHeaderTableBase"*)***
  br label %100

100:                                              ; preds = %100, %98
  %101 = load void (%"class.quic::QpackHeaderTableBase"*)**, void (%"class.quic::QpackHeaderTableBase"*)*** %99, align 8
  %102 = getelementptr inbounds void (%"class.quic::QpackHeaderTableBase"*)*, void (%"class.quic::QpackHeaderTableBase"*)** %101, i64 3
  %103 = load void (%"class.quic::QpackHeaderTableBase"*)*, void (%"class.quic::QpackHeaderTableBase"*)** %102, align 8
  call void %103(%"class.quic::QpackHeaderTableBase"* %0) #10
  %104 = load i64, i64* %95, align 8
  %105 = icmp ugt i64 %104, %94
  br i1 %105, label %100, label %106

106:                                              ; preds = %100, %90
  %107 = phi i64 [ %96, %90 ], [ %104, %100 ]
  %108 = add i64 %107, %91
  store i64 %108, i64* %95, align 8
  %109 = getelementptr inbounds %"class.quic::QpackHeaderTableBase", %"class.quic::QpackHeaderTableBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %110 = bitcast %"class.spdy::HpackEntry"*** %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = getelementptr inbounds %"class.quic::QpackHeaderTableBase", %"class.quic::QpackHeaderTableBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %113 = bitcast %"class.spdy::HpackEntry"*** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = sub i64 %111, %114
  %116 = ashr exact i64 %115, 3
  %117 = icmp eq i64 %115, 0
  %118 = mul i64 %116, 85
  %119 = add i64 %118, -1
  %120 = select i1 %117, i64 0, i64 %119
  %121 = getelementptr inbounds %"class.quic::QpackHeaderTableBase", %"class.quic::QpackHeaderTableBase"* %0, i64 0, i32 1, i32 0, i32 1
  %122 = load i64, i64* %121, align 8
  %123 = load i64, i64* %12, align 8
  %124 = add i64 %123, %122
  %125 = icmp eq i64 %120, %124
  %126 = inttoptr i64 %114 to %"class.spdy::HpackEntry"**
  %127 = inttoptr i64 %111 to %"class.spdy::HpackEntry"**
  br i1 %125, label %128, label %134

128:                                              ; preds = %106
  call void @_ZNSt3__15dequeIN4spdy10HpackEntryENS_9allocatorIS2_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %11) #10
  %129 = load i64, i64* %12, align 8
  %130 = load i64, i64* %121, align 8
  %131 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %112, align 8
  %132 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %109, align 8
  %133 = add i64 %130, %129
  br label %134

134:                                              ; preds = %128, %106
  %135 = phi i64 [ %133, %128 ], [ %124, %106 ]
  %136 = phi %"class.spdy::HpackEntry"** [ %132, %128 ], [ %127, %106 ]
  %137 = phi %"class.spdy::HpackEntry"** [ %131, %128 ], [ %126, %106 ]
  %138 = icmp eq %"class.spdy::HpackEntry"** %136, %137
  br i1 %138, label %145, label %139

139:                                              ; preds = %134
  %140 = udiv i64 %135, 85
  %141 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %137, i64 %140
  %142 = load %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %141, align 8
  %143 = urem i64 %135, 85
  %144 = getelementptr inbounds %"class.spdy::HpackEntry", %"class.spdy::HpackEntry"* %142, i64 %143
  br label %145

145:                                              ; preds = %134, %139
  %146 = phi %"class.spdy::HpackEntry"* [ %144, %139 ], [ null, %134 ]
  %147 = bitcast %"class.spdy::HpackEntry"* %146 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* nonnull align 8 %15, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #10
  %148 = getelementptr inbounds %"class.spdy::HpackEntry", %"class.spdy::HpackEntry"* %146, i64 0, i32 1
  %149 = getelementptr inbounds %"class.spdy::HpackEntry", %"class.spdy::HpackEntry"* %6, i64 0, i32 1
  %150 = bitcast %"class.std::__1::basic_string"* %148 to i8*
  %151 = bitcast %"class.std::__1::basic_string"* %149 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 24, i1 false) #10
  %152 = load i64, i64* %12, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %15) #10
  ret i64 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic20QpackHeaderTableBaseINSt3__15dequeIN4spdy10HpackEntryENS1_9allocatorIS4_EEEEE18RemoveEntryFromEndEv(%"class.quic::QpackHeaderTableBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.quic::QpackHeaderTableBase", %"class.quic::QpackHeaderTableBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %3 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %2, align 8
  %4 = getelementptr inbounds %"class.quic::QpackHeaderTableBase", %"class.quic::QpackHeaderTableBase"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = udiv i64 %5, 85
  %7 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %3, i64 %6
  %8 = load %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %7, align 8
  %9 = urem i64 %5, 85
  %10 = getelementptr inbounds %"class.spdy::HpackEntry", %"class.spdy::HpackEntry"* %8, i64 %9
  %11 = tail call i64 @_ZNK4spdy10HpackEntry4SizeEv(%"class.spdy::HpackEntry"* %10) #10
  %12 = getelementptr inbounds %"class.quic::QpackHeaderTableBase", %"class.quic::QpackHeaderTableBase"* %0, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %13, %11
  store i64 %14, i64* %12, align 8
  %15 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %2, align 8
  %16 = load i64, i64* %4, align 8
  %17 = udiv i64 %16, 85
  %18 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %15, i64 %17
  %19 = load %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %18, align 8
  %20 = urem i64 %16, 85
  %21 = getelementptr inbounds %"class.spdy::HpackEntry", %"class.spdy::HpackEntry"* %19, i64 %20
  %22 = getelementptr inbounds %"class.spdy::HpackEntry", %"class.spdy::HpackEntry"* %19, i64 %20, i32 1
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %1
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %27, %1
  %31 = bitcast %"class.spdy::HpackEntry"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.spdy::HpackEntry", %"class.spdy::HpackEntry"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  tail call void @_ZdlPv(i8* %37) #11
  br label %38

38:                                               ; preds = %35, %30
  %39 = bitcast i64* %4 to <2 x i64>*
  %40 = load <2 x i64>, <2 x i64>* %39, align 8
  %41 = add <2 x i64> %40, <i64 1, i64 -1>
  %42 = bitcast i64* %4 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  %43 = extractelement <2 x i64> %41, i32 0
  %44 = icmp ult i64 %43, 170
  br i1 %44, label %53, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.spdy::HpackEntry"*** %2 to i8***
  %47 = load i8**, i8*** %46, align 8
  %48 = load i8*, i8** %47, align 8
  tail call void @_ZdlPv(i8* %48) #11
  %49 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %2, align 8
  %50 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %49, i64 1
  store %"class.spdy::HpackEntry"** %50, %"class.spdy::HpackEntry"*** %2, align 8
  %51 = load i64, i64* %4, align 8
  %52 = add i64 %51, -85
  store i64 %52, i64* %4, align 8
  br label %53

53:                                               ; preds = %38, %45
  %54 = getelementptr inbounds %"class.quic::QpackHeaderTableBase", %"class.quic::QpackHeaderTableBase"* %0, i64 0, i32 6
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 1
  store i64 %56, i64* %54, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseIN4spdy10HpackEntryENS_9allocatorIS2_EEE5clearEv(%"class.std::__1::__deque_base"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = udiv i64 %5, 85
  %7 = urem i64 %5, 85
  %8 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %3, i64 %6
  %9 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 2
  %10 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %9, align 8
  %11 = icmp eq %"class.spdy::HpackEntry"** %10, %3
  %12 = ptrtoint %"class.spdy::HpackEntry"** %10 to i64
  %13 = ptrtoint %"class.spdy::HpackEntry"** %3 to i64
  %14 = bitcast %"class.spdy::HpackEntry"** %3 to i8**
  br i1 %11, label %15, label %17

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  br label %29

17:                                               ; preds = %1
  %18 = load %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %8, align 8
  %19 = getelementptr inbounds %"class.spdy::HpackEntry", %"class.spdy::HpackEntry"* %18, i64 %7
  %20 = ptrtoint %"class.spdy::HpackEntry"* %19 to i64
  %21 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, %5
  %24 = udiv i64 %23, 85
  %25 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %3, i64 %24
  %26 = load %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %25, align 8
  %27 = urem i64 %23, 85
  %28 = getelementptr inbounds %"class.spdy::HpackEntry", %"class.spdy::HpackEntry"* %26, i64 %27
  br label %29

29:                                               ; preds = %15, %17
  %30 = phi i64* [ %21, %17 ], [ %16, %15 ]
  %31 = phi i64 [ %20, %17 ], [ 0, %15 ]
  %32 = phi %"class.spdy::HpackEntry"* [ %28, %17 ], [ null, %15 ]
  %33 = inttoptr i64 %31 to %"class.spdy::HpackEntry"*
  %34 = icmp eq %"class.spdy::HpackEntry"* %32, %33
  br i1 %34, label %35, label %51

35:                                               ; preds = %29
  %36 = bitcast %"class.spdy::HpackEntry"*** %9 to i64*
  br label %43

37:                                               ; preds = %82
  %38 = bitcast %"class.spdy::HpackEntry"*** %9 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.spdy::HpackEntry"*** %2 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = inttoptr i64 %41 to i8**
  br label %43

43:                                               ; preds = %35, %37
  %44 = phi i64* [ %36, %35 ], [ %38, %37 ]
  %45 = phi i8** [ %14, %35 ], [ %42, %37 ]
  %46 = phi i64 [ %13, %35 ], [ %41, %37 ]
  %47 = phi i64 [ %12, %35 ], [ %39, %37 ]
  store i64 0, i64* %30, align 8
  %48 = sub i64 %47, %46
  %49 = ashr exact i64 %48, 3
  %50 = icmp ugt i64 %49, 2
  br i1 %50, label %87, label %98

51:                                               ; preds = %29, %82
  %52 = phi %"class.spdy::HpackEntry"* [ %85, %82 ], [ %33, %29 ]
  %53 = phi %"class.spdy::HpackEntry"** [ %84, %82 ], [ %8, %29 ]
  %54 = phi i64 [ %83, %82 ], [ %31, %29 ]
  %55 = getelementptr inbounds %"class.spdy::HpackEntry", %"class.spdy::HpackEntry"* %52, i64 0, i32 1
  %56 = bitcast %"class.std::__1::basic_string"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  tail call void @_ZdlPv(i8* %62) #11
  br label %63

63:                                               ; preds = %60, %51
  %64 = inttoptr i64 %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.spdy::HpackEntry", %"class.spdy::HpackEntry"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  tail call void @_ZdlPv(i8* %70) #11
  br label %71

71:                                               ; preds = %63, %68
  %72 = getelementptr inbounds %"class.spdy::HpackEntry", %"class.spdy::HpackEntry"* %52, i64 1
  %73 = ptrtoint %"class.spdy::HpackEntry"* %72 to i64
  %74 = bitcast %"class.spdy::HpackEntry"** %53 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = sub i64 %73, %75
  %77 = icmp eq i64 %76, 4080
  br i1 %77, label %78, label %82

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %53, i64 1
  %80 = bitcast %"class.spdy::HpackEntry"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  br label %82

82:                                               ; preds = %71, %78
  %83 = phi i64 [ %81, %78 ], [ %73, %71 ]
  %84 = phi %"class.spdy::HpackEntry"** [ %79, %78 ], [ %53, %71 ]
  %85 = inttoptr i64 %83 to %"class.spdy::HpackEntry"*
  %86 = icmp eq %"class.spdy::HpackEntry"* %32, %85
  br i1 %86, label %37, label %51

87:                                               ; preds = %43, %87
  %88 = phi i8** [ %97, %87 ], [ %45, %43 ]
  %89 = load i8*, i8** %88, align 8
  tail call void @_ZdlPv(i8* %89) #11
  %90 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %2, align 8
  %91 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %90, i64 1
  store %"class.spdy::HpackEntry"** %91, %"class.spdy::HpackEntry"*** %2, align 8
  %92 = load i64, i64* %44, align 8
  %93 = ptrtoint %"class.spdy::HpackEntry"** %91 to i64
  %94 = sub i64 %92, %93
  %95 = ashr exact i64 %94, 3
  %96 = icmp ugt i64 %95, 2
  %97 = bitcast %"class.spdy::HpackEntry"** %91 to i8**
  br i1 %96, label %87, label %98

98:                                               ; preds = %87, %43
  %99 = phi i64 [ %49, %43 ], [ %95, %87 ]
  switch i64 %99, label %103 [
    i64 1, label %101
    i64 2, label %100
  ]

100:                                              ; preds = %98
  br label %101

101:                                              ; preds = %98, %100
  %102 = phi i64 [ 85, %100 ], [ 42, %98 ]
  store i64 %102, i64* %4, align 8
  br label %103

103:                                              ; preds = %101, %98
  ret void
}

declare void @_ZN4spdy10HpackEntryC1ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_(%"class.spdy::HpackEntry"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) unnamed_addr #1

declare i64 @_ZNK4spdy10HpackEntry4SizeEv(%"class.spdy::HpackEntry"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN4spdy10HpackEntryENS_9allocatorIS2_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.spdy::HpackEntry"*, align 8
  %3 = alloca %"class.spdy::HpackEntry"*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.123", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 84
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -85
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %10, align 8
  %12 = bitcast %"class.spdy::HpackEntry"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %11, i64 1
  store %"class.spdy::HpackEntry"** %14, %"class.spdy::HpackEntry"*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %17, align 8
  %19 = icmp eq %"class.spdy::HpackEntry"** %16, %18
  %20 = ptrtoint %"class.spdy::HpackEntry"** %18 to i64
  %21 = bitcast %"class.spdy::HpackEntry"** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %23, align 8
  %25 = icmp ugt %"class.spdy::HpackEntry"** %14, %24
  %26 = ptrtoint %"class.spdy::HpackEntry"** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"class.spdy::HpackEntry"** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %14, i64 %32
  %34 = ptrtoint %"class.spdy::HpackEntry"** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"class.spdy::HpackEntry"** %33 to i8*
  %40 = bitcast %"class.spdy::HpackEntry"** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #10
  %41 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"class.spdy::HpackEntry"** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %33, i64 %36
  store %"class.spdy::HpackEntry"** %44, %"class.spdy::HpackEntry"*** %15, align 8
  %45 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %43, i64 %32
  store %"class.spdy::HpackEntry"** %45, %"class.spdy::HpackEntry"*** %10, align 8
  %46 = bitcast %"class.spdy::HpackEntry"** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"class.spdy::HpackEntry"*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #12
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #11
  %60 = bitcast i8* %59 to %"class.spdy::HpackEntry"**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %60, i64 %57
  %63 = ptrtoint %"class.spdy::HpackEntry"** %62 to i64
  %64 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %60, i64 %53
  %65 = ptrtoint %"class.spdy::HpackEntry"** %64 to i64
  %66 = ptrtoint %"class.spdy::HpackEntry"** %14 to i64
  %67 = ptrtoint %"class.spdy::HpackEntry"** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"class.spdy::HpackEntry"** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"class.spdy::HpackEntry"** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"class.spdy::HpackEntry"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %79, i64 1
  %87 = ptrtoint %"class.spdy::HpackEntry"** %86 to i64
  %88 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !68

91:                                               ; preds = %78
  %92 = ptrtoint %"class.spdy::HpackEntry"** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"class.spdy::HpackEntry"** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"class.spdy::HpackEntry"** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"class.spdy::HpackEntry"** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"class.spdy::HpackEntry"** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"class.spdy::HpackEntry"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %99, i64 1
  %106 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %101, i64 1
  %107 = bitcast %"class.spdy::HpackEntry"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.spdy::HpackEntry"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %99, i64 2
  %111 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %101, i64 2
  %112 = bitcast %"class.spdy::HpackEntry"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.spdy::HpackEntry"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %99, i64 3
  %116 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %101, i64 3
  %117 = bitcast %"class.spdy::HpackEntry"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.spdy::HpackEntry"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %99, i64 4
  %121 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %101, i64 4
  %122 = bitcast %"class.spdy::HpackEntry"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.spdy::HpackEntry"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %99, i64 5
  %126 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %101, i64 5
  %127 = bitcast %"class.spdy::HpackEntry"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.spdy::HpackEntry"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %99, i64 6
  %131 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %101, i64 6
  %132 = bitcast %"class.spdy::HpackEntry"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.spdy::HpackEntry"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %99, i64 7
  %136 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %101, i64 7
  %137 = bitcast %"class.spdy::HpackEntry"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.spdy::HpackEntry"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %99, i64 8
  %141 = ptrtoint %"class.spdy::HpackEntry"** %140 to i64
  %142 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %101, i64 8
  %143 = icmp eq %"class.spdy::HpackEntry"** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"class.spdy::HpackEntry"** %70 to i64
  %146 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"class.spdy::HpackEntry"** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"class.spdy::HpackEntry"*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"class.spdy::HpackEntry"*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"class.spdy::HpackEntry"** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"class.spdy::HpackEntry"** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #11
  %156 = bitcast %"class.spdy::HpackEntry"*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %15, align 8
  %161 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %160, i64 1
  store %"class.spdy::HpackEntry"** %161, %"class.spdy::HpackEntry"*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"class.spdy::HpackEntry"*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"class.spdy::HpackEntry"*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"class.spdy::HpackEntry"*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"class.spdy::HpackEntry"**
  %181 = inttoptr i64 %169 to %"class.spdy::HpackEntry"**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"class.spdy::HpackEntry"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #10
  %186 = tail call i8* @_Znwm(i64 4080) #11
  %187 = bitcast %"class.spdy::HpackEntry"** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPN4spdy10HpackEntryENS_9allocatorIS3_EEE9push_backEOS3_(%"struct.std::__1::__split_buffer"* %163, %"class.spdy::HpackEntry"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #10
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"class.spdy::HpackEntry"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #10
  %190 = tail call i8* @_Znwm(i64 4080) #11
  %191 = bitcast %"class.spdy::HpackEntry"** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPN4spdy10HpackEntryENS_9allocatorIS3_EEE10push_frontEOS3_(%"struct.std::__1::__split_buffer"* %163, %"class.spdy::HpackEntry"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #10
  %192 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %167, align 8
  %193 = bitcast %"class.spdy::HpackEntry"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %192, i64 1
  store %"class.spdy::HpackEntry"** %195, %"class.spdy::HpackEntry"*** %167, align 8
  %196 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %164, align 8
  %197 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %172, align 8
  %198 = icmp eq %"class.spdy::HpackEntry"** %196, %197
  %199 = ptrtoint %"class.spdy::HpackEntry"** %197 to i64
  %200 = bitcast %"class.spdy::HpackEntry"** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %202, align 8
  %204 = icmp ugt %"class.spdy::HpackEntry"** %195, %203
  %205 = ptrtoint %"class.spdy::HpackEntry"** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"class.spdy::HpackEntry"** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %195, i64 %211
  %213 = ptrtoint %"class.spdy::HpackEntry"** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"class.spdy::HpackEntry"** %212 to i8*
  %219 = bitcast %"class.spdy::HpackEntry"** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #10
  %220 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"class.spdy::HpackEntry"** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %212, i64 %215
  store %"class.spdy::HpackEntry"** %223, %"class.spdy::HpackEntry"*** %164, align 8
  %224 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %222, i64 %211
  store %"class.spdy::HpackEntry"** %224, %"class.spdy::HpackEntry"*** %167, align 8
  %225 = bitcast %"class.spdy::HpackEntry"** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #12
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #11
  %237 = bitcast i8* %236 to %"class.spdy::HpackEntry"**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %237, i64 %234
  %240 = ptrtoint %"class.spdy::HpackEntry"** %239 to i64
  %241 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %237, i64 %230
  %242 = ptrtoint %"class.spdy::HpackEntry"** %241 to i64
  %243 = ptrtoint %"class.spdy::HpackEntry"** %195 to i64
  %244 = ptrtoint %"class.spdy::HpackEntry"** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"class.spdy::HpackEntry"** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"class.spdy::HpackEntry"** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"class.spdy::HpackEntry"** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %256, i64 1
  %264 = ptrtoint %"class.spdy::HpackEntry"** %263 to i64
  %265 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !70

268:                                              ; preds = %255
  %269 = ptrtoint %"class.spdy::HpackEntry"** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"class.spdy::HpackEntry"** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"class.spdy::HpackEntry"** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"class.spdy::HpackEntry"** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"class.spdy::HpackEntry"** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"class.spdy::HpackEntry"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %276, i64 1
  %283 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %278, i64 1
  %284 = bitcast %"class.spdy::HpackEntry"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"class.spdy::HpackEntry"** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %276, i64 2
  %288 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %278, i64 2
  %289 = bitcast %"class.spdy::HpackEntry"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"class.spdy::HpackEntry"** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %276, i64 3
  %293 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %278, i64 3
  %294 = bitcast %"class.spdy::HpackEntry"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"class.spdy::HpackEntry"** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %276, i64 4
  %298 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %278, i64 4
  %299 = bitcast %"class.spdy::HpackEntry"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"class.spdy::HpackEntry"** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %276, i64 5
  %303 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %278, i64 5
  %304 = bitcast %"class.spdy::HpackEntry"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"class.spdy::HpackEntry"** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %276, i64 6
  %308 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %278, i64 6
  %309 = bitcast %"class.spdy::HpackEntry"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"class.spdy::HpackEntry"** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %276, i64 7
  %313 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %278, i64 7
  %314 = bitcast %"class.spdy::HpackEntry"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"class.spdy::HpackEntry"** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %276, i64 8
  %318 = ptrtoint %"class.spdy::HpackEntry"** %317 to i64
  %319 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %278, i64 8
  %320 = icmp eq %"class.spdy::HpackEntry"** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"class.spdy::HpackEntry"** %247 to i64
  %323 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"class.spdy::HpackEntry"** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"class.spdy::HpackEntry"** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"class.spdy::HpackEntry"** %325 to i8*
  call void @_ZdlPv(i8* %330) #11
  %331 = bitcast %"class.spdy::HpackEntry"*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %164, align 8
  %336 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %335, i64 1
  store %"class.spdy::HpackEntry"** %336, %"class.spdy::HpackEntry"*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.123"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #10
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.123", %"struct.std::__1::__split_buffer.123"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.123", %"struct.std::__1::__split_buffer.123"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.123", %"struct.std::__1::__split_buffer.123"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.123", %"struct.std::__1::__split_buffer.123"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.123"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"class.spdy::HpackEntry"** null, %"class.spdy::HpackEntry"*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.10"** %342 to %"class.std::__1::__compressed_pair.7"**
  store %"class.std::__1::__compressed_pair.7"* %346, %"class.std::__1::__compressed_pair.7"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #12
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #11
  %354 = bitcast i8* %353 to %"class.spdy::HpackEntry"**
  %355 = bitcast %"struct.std::__1::__split_buffer.123"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %354, i64 %171
  store %"class.spdy::HpackEntry"** %356, %"class.spdy::HpackEntry"*** %340, align 8
  store %"class.spdy::HpackEntry"** %356, %"class.spdy::HpackEntry"*** %339, align 8
  %357 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %354, i64 %345
  store %"class.spdy::HpackEntry"** %357, %"class.spdy::HpackEntry"*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4080) #11
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"class.spdy::HpackEntry"** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"class.spdy::HpackEntry"** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"class.spdy::HpackEntry"** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %356, i64 %370
  store %"class.spdy::HpackEntry"** %371, %"class.spdy::HpackEntry"*** %340, align 8
  store %"class.spdy::HpackEntry"** %371, %"class.spdy::HpackEntry"*** %339, align 8
  %372 = ptrtoint %"class.spdy::HpackEntry"** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #12
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.123"* %4 to i64*
  %382 = bitcast %"class.spdy::HpackEntry"*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #11
  %386 = bitcast i8* %385 to %"class.spdy::HpackEntry"**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %386, i64 %383
  %389 = ptrtoint %"class.spdy::HpackEntry"** %388 to i64
  %390 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %386, i64 %377
  %391 = ptrtoint %"class.spdy::HpackEntry"** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"class.spdy::HpackEntry"*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"class.spdy::HpackEntry"*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #11
  %394 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %164, align 8
  %395 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %167, align 8
  %396 = ptrtoint %"class.spdy::HpackEntry"** %395 to i64
  %397 = ptrtoint %"class.spdy::HpackEntry"** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"class.spdy::HpackEntry"** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"class.spdy::HpackEntry"** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"class.spdy::HpackEntry"** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"class.spdy::HpackEntry"** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %406, i64 1
  store %"class.spdy::HpackEntry"** %408, %"class.spdy::HpackEntry"*** %340, align 8
  %409 = icmp eq %"class.spdy::HpackEntry"** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"class.spdy::HpackEntry"** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.123"* %4 to i64*
  %413 = bitcast %"class.spdy::HpackEntry"*** %339 to i64*
  %414 = bitcast %"class.spdy::HpackEntry"*** %340 to i64*
  %415 = bitcast %"class.spdy::HpackEntry"*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"class.spdy::HpackEntry"** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.123"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"class.spdy::HpackEntry"*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"class.spdy::HpackEntry"*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"class.spdy::HpackEntry"*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"class.spdy::HpackEntry"**
  %441 = inttoptr i64 %434 to %"class.spdy::HpackEntry"**
  %442 = icmp eq %"class.spdy::HpackEntry"** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %441, i64 -1
  %445 = ptrtoint %"class.spdy::HpackEntry"** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %441, i64 %448
  store %"class.spdy::HpackEntry"** %449, %"class.spdy::HpackEntry"*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #11
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #10
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"class.spdy::HpackEntry"** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPN4spdy10HpackEntryERNS_9allocatorIS3_EEE10push_frontERKS3_(%"struct.std::__1::__split_buffer.123"* nonnull %4, %"class.spdy::HpackEntry"** dereferenceable(8) %457)
  %458 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %167, align 8
  %459 = icmp eq %"class.spdy::HpackEntry"** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN4spdy10HpackEntryENS_9allocatorIS3_EEE9push_backEOS3_(%"struct.std::__1::__split_buffer"*, %"class.spdy::HpackEntry"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %5, align 8
  %7 = icmp eq %"class.spdy::HpackEntry"** %4, %6
  %8 = ptrtoint %"class.spdy::HpackEntry"** %6 to i64
  %9 = bitcast %"class.spdy::HpackEntry"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %13, align 8
  %15 = icmp ugt %"class.spdy::HpackEntry"** %12, %14
  %16 = ptrtoint %"class.spdy::HpackEntry"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.spdy::HpackEntry"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %12, i64 %22
  %24 = ptrtoint %"class.spdy::HpackEntry"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.spdy::HpackEntry"** %23 to i8*
  %30 = bitcast %"class.spdy::HpackEntry"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #10
  %31 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.spdy::HpackEntry"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %23, i64 %26
  store %"class.spdy::HpackEntry"** %34, %"class.spdy::HpackEntry"*** %3, align 8
  %35 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %33, i64 %22
  store %"class.spdy::HpackEntry"** %35, %"class.spdy::HpackEntry"*** %11, align 8
  %36 = bitcast %"class.spdy::HpackEntry"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.spdy::HpackEntry"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #11
  %50 = bitcast i8* %49 to %"class.spdy::HpackEntry"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %50, i64 %47
  %53 = ptrtoint %"class.spdy::HpackEntry"** %52 to i64
  %54 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %50, i64 %43
  %55 = ptrtoint %"class.spdy::HpackEntry"** %54 to i64
  %56 = ptrtoint %"class.spdy::HpackEntry"** %12 to i64
  %57 = ptrtoint %"class.spdy::HpackEntry"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.spdy::HpackEntry"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.spdy::HpackEntry"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.spdy::HpackEntry"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %69, i64 1
  %77 = ptrtoint %"class.spdy::HpackEntry"** %76 to i64
  %78 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !71

81:                                               ; preds = %68
  %82 = ptrtoint %"class.spdy::HpackEntry"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.spdy::HpackEntry"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.spdy::HpackEntry"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.spdy::HpackEntry"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.spdy::HpackEntry"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.spdy::HpackEntry"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %89, i64 1
  %96 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %91, i64 1
  %97 = bitcast %"class.spdy::HpackEntry"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.spdy::HpackEntry"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %89, i64 2
  %101 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %91, i64 2
  %102 = bitcast %"class.spdy::HpackEntry"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.spdy::HpackEntry"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %89, i64 3
  %106 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %91, i64 3
  %107 = bitcast %"class.spdy::HpackEntry"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.spdy::HpackEntry"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %89, i64 4
  %111 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %91, i64 4
  %112 = bitcast %"class.spdy::HpackEntry"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.spdy::HpackEntry"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %89, i64 5
  %116 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %91, i64 5
  %117 = bitcast %"class.spdy::HpackEntry"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.spdy::HpackEntry"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %89, i64 6
  %121 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %91, i64 6
  %122 = bitcast %"class.spdy::HpackEntry"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.spdy::HpackEntry"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %89, i64 7
  %126 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %91, i64 7
  %127 = bitcast %"class.spdy::HpackEntry"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.spdy::HpackEntry"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %89, i64 8
  %131 = ptrtoint %"class.spdy::HpackEntry"** %130 to i64
  %132 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %91, i64 8
  %133 = icmp eq %"class.spdy::HpackEntry"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.spdy::HpackEntry"** %60 to i64
  %136 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.spdy::HpackEntry"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.spdy::HpackEntry"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.spdy::HpackEntry"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.spdy::HpackEntry"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.spdy::HpackEntry"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #11
  %146 = bitcast %"class.spdy::HpackEntry"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.spdy::HpackEntry"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %3, align 8
  %153 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %152, i64 1
  store %"class.spdy::HpackEntry"** %153, %"class.spdy::HpackEntry"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN4spdy10HpackEntryENS_9allocatorIS3_EEE10push_frontEOS3_(%"struct.std::__1::__split_buffer"*, %"class.spdy::HpackEntry"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %5, align 8
  %7 = icmp eq %"class.spdy::HpackEntry"** %4, %6
  %8 = ptrtoint %"class.spdy::HpackEntry"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %12, align 8
  %14 = icmp ult %"class.spdy::HpackEntry"** %11, %13
  %15 = bitcast %"class.spdy::HpackEntry"*** %12 to i64*
  %16 = ptrtoint %"class.spdy::HpackEntry"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.spdy::HpackEntry"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %11, i64 %22
  %24 = ptrtoint %"class.spdy::HpackEntry"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %23, i64 %29
  %31 = bitcast %"class.spdy::HpackEntry"** %30 to i8*
  %32 = bitcast %"class.spdy::HpackEntry"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #10
  %33 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.spdy::HpackEntry"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.spdy::HpackEntry"** [ %30, %27 ], [ %23, %17 ]
  store %"class.spdy::HpackEntry"** %36, %"class.spdy::HpackEntry"*** %3, align 8
  %37 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %35, i64 %22
  store %"class.spdy::HpackEntry"** %37, %"class.spdy::HpackEntry"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #11
  %51 = bitcast i8* %50 to %"class.spdy::HpackEntry"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %51, i64 %48
  %54 = ptrtoint %"class.spdy::HpackEntry"** %53 to i64
  %55 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %51, i64 %43
  %56 = ptrtoint %"class.spdy::HpackEntry"** %55 to i64
  %57 = ptrtoint %"class.spdy::HpackEntry"** %4 to i64
  %58 = ptrtoint %"class.spdy::HpackEntry"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.spdy::HpackEntry"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.spdy::HpackEntry"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.spdy::HpackEntry"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %70, i64 1
  %78 = ptrtoint %"class.spdy::HpackEntry"** %77 to i64
  %79 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !72

82:                                               ; preds = %69
  %83 = ptrtoint %"class.spdy::HpackEntry"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.spdy::HpackEntry"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.spdy::HpackEntry"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.spdy::HpackEntry"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.spdy::HpackEntry"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.spdy::HpackEntry"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %90, i64 1
  %97 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %92, i64 1
  %98 = bitcast %"class.spdy::HpackEntry"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.spdy::HpackEntry"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %90, i64 2
  %102 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %92, i64 2
  %103 = bitcast %"class.spdy::HpackEntry"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.spdy::HpackEntry"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %90, i64 3
  %107 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %92, i64 3
  %108 = bitcast %"class.spdy::HpackEntry"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.spdy::HpackEntry"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %90, i64 4
  %112 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %92, i64 4
  %113 = bitcast %"class.spdy::HpackEntry"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.spdy::HpackEntry"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %90, i64 5
  %117 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %92, i64 5
  %118 = bitcast %"class.spdy::HpackEntry"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.spdy::HpackEntry"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %90, i64 6
  %122 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %92, i64 6
  %123 = bitcast %"class.spdy::HpackEntry"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.spdy::HpackEntry"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %90, i64 7
  %127 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %92, i64 7
  %128 = bitcast %"class.spdy::HpackEntry"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.spdy::HpackEntry"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %90, i64 8
  %132 = ptrtoint %"class.spdy::HpackEntry"** %131 to i64
  %133 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %92, i64 8
  %134 = icmp eq %"class.spdy::HpackEntry"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.spdy::HpackEntry"** %61 to i64
  %137 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.spdy::HpackEntry"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.spdy::HpackEntry"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.spdy::HpackEntry"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.spdy::HpackEntry"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.spdy::HpackEntry"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #11
  %146 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.spdy::HpackEntry"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %148, i64 -1
  %150 = bitcast %"class.spdy::HpackEntry"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.spdy::HpackEntry"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %3, align 8
  %154 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %153, i64 -1
  store %"class.spdy::HpackEntry"** %154, %"class.spdy::HpackEntry"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN4spdy10HpackEntryERNS_9allocatorIS3_EEE10push_frontERKS3_(%"struct.std::__1::__split_buffer.123"*, %"class.spdy::HpackEntry"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.123", %"struct.std::__1::__split_buffer.123"* %0, i64 0, i32 1
  %4 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.123", %"struct.std::__1::__split_buffer.123"* %0, i64 0, i32 0
  %6 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %5, align 8
  %7 = icmp eq %"class.spdy::HpackEntry"** %4, %6
  %8 = ptrtoint %"class.spdy::HpackEntry"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.123", %"struct.std::__1::__split_buffer.123"* %0, i64 0, i32 2
  %11 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.123", %"struct.std::__1::__split_buffer.123"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %12, align 8
  %14 = icmp ult %"class.spdy::HpackEntry"** %11, %13
  %15 = bitcast %"class.spdy::HpackEntry"*** %12 to i64*
  %16 = ptrtoint %"class.spdy::HpackEntry"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.spdy::HpackEntry"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %11, i64 %22
  %24 = ptrtoint %"class.spdy::HpackEntry"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %23, i64 %29
  %31 = bitcast %"class.spdy::HpackEntry"** %30 to i8*
  %32 = bitcast %"class.spdy::HpackEntry"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #10
  %33 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.spdy::HpackEntry"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.spdy::HpackEntry"** [ %30, %27 ], [ %23, %17 ]
  store %"class.spdy::HpackEntry"** %36, %"class.spdy::HpackEntry"*** %3, align 8
  %37 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %35, i64 %22
  store %"class.spdy::HpackEntry"** %37, %"class.spdy::HpackEntry"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.123"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #11
  %51 = bitcast i8* %50 to %"class.spdy::HpackEntry"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %51, i64 %48
  %54 = ptrtoint %"class.spdy::HpackEntry"** %53 to i64
  %55 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %51, i64 %43
  %56 = ptrtoint %"class.spdy::HpackEntry"** %55 to i64
  %57 = ptrtoint %"class.spdy::HpackEntry"** %4 to i64
  %58 = ptrtoint %"class.spdy::HpackEntry"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.spdy::HpackEntry"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.spdy::HpackEntry"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.spdy::HpackEntry"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %70, i64 1
  %78 = ptrtoint %"class.spdy::HpackEntry"** %77 to i64
  %79 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !73

82:                                               ; preds = %69
  %83 = ptrtoint %"class.spdy::HpackEntry"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.spdy::HpackEntry"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.spdy::HpackEntry"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.spdy::HpackEntry"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.spdy::HpackEntry"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.spdy::HpackEntry"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %90, i64 1
  %97 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %92, i64 1
  %98 = bitcast %"class.spdy::HpackEntry"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.spdy::HpackEntry"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %90, i64 2
  %102 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %92, i64 2
  %103 = bitcast %"class.spdy::HpackEntry"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.spdy::HpackEntry"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %90, i64 3
  %107 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %92, i64 3
  %108 = bitcast %"class.spdy::HpackEntry"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.spdy::HpackEntry"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %90, i64 4
  %112 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %92, i64 4
  %113 = bitcast %"class.spdy::HpackEntry"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.spdy::HpackEntry"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %90, i64 5
  %117 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %92, i64 5
  %118 = bitcast %"class.spdy::HpackEntry"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.spdy::HpackEntry"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %90, i64 6
  %122 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %92, i64 6
  %123 = bitcast %"class.spdy::HpackEntry"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.spdy::HpackEntry"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %90, i64 7
  %127 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %92, i64 7
  %128 = bitcast %"class.spdy::HpackEntry"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.spdy::HpackEntry"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %90, i64 8
  %132 = ptrtoint %"class.spdy::HpackEntry"** %131 to i64
  %133 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %92, i64 8
  %134 = icmp eq %"class.spdy::HpackEntry"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.spdy::HpackEntry"** %61 to i64
  %137 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.spdy::HpackEntry"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.spdy::HpackEntry"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.spdy::HpackEntry"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.spdy::HpackEntry"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.spdy::HpackEntry"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #11
  %146 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.spdy::HpackEntry"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %148, i64 -1
  %150 = bitcast %"class.spdy::HpackEntry"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.spdy::HpackEntry"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"*** %3, align 8
  %154 = getelementptr inbounds %"class.spdy::HpackEntry"*, %"class.spdy::HpackEntry"** %153, i64 -1
  store %"class.spdy::HpackEntry"** %154, %"class.spdy::HpackEntry"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind
declare void @_ZN5http219HpackHuffmanDecoderD1Ev(%"class.http2::HpackHuffmanDecoder"*) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN4spdy16Http2HeaderBlock8iteratorD1Ev(%"class.spdy::Http2HeaderBlock::iterator"*) unnamed_addr #9

declare i8* @_ZN4absl16numbers_internal15FastIntToBufferEmPc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZN4absl16numbers_internal15FastIntToBufferEjPc(i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !8
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE7destroyEPNS_11__tree_nodeImPvEE(%"class.std::__1::__tree.57"*, %"class.std::__1::__tree_node.133"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.133"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.133"* %1 to %"class.std::__1::__tree_node.133"**
  %6 = load %"class.std::__1::__tree_node.133"*, %"class.std::__1::__tree_node.133"** %5, align 8
  tail call void @_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE7destroyEPNS_11__tree_nodeImPvEE(%"class.std::__1::__tree.57"* %0, %"class.std::__1::__tree_node.133"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.133"**
  %9 = load %"class.std::__1::__tree_node.133"*, %"class.std::__1::__tree_node.133"** %8, align 8
  tail call void @_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE7destroyEPNS_11__tree_nodeImPvEE(%"class.std::__1::__tree.57"* %0, %"class.std::__1::__tree_node.133"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node.133"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

declare void @_ZN4absl16strings_internal9CatPiecesESt16initializer_listINS_11string_viewEE(%"class.std::__1::basic_string"* sret, %"class.absl::string_view"*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE16__construct_nodeIJRKmEEENS_10unique_ptrINS_11__tree_nodeImPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE16__construct_nodeIJRKmEEENS_10unique_ptrINS_11__tree_nodeImPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE16__construct_nodeIJRKmEEENS_10unique_ptrINS_11__tree_nodeImPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE16__construct_nodeIJRKmEEENS_10unique_ptrINS_11__tree_nodeImPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_"}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE16__construct_nodeIJRKmEEENS_10unique_ptrINS_11__tree_nodeImPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE16__construct_nodeIJRKmEEENS_10unique_ptrINS_11__tree_nodeImPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_"}
!12 = !{!10, !13}
!13 = distinct !{!13, !14, !"_ZN4quic12QpackEncoder24EncodeIndexedHeaderFieldEbmPNSt3__18multisetImNS1_4lessImEENS1_9allocatorImEEEE: argument 0"}
!14 = distinct !{!14, !"_ZN4quic12QpackEncoder24EncodeIndexedHeaderFieldEbmPNSt3__18multisetImNS1_4lessImEENS1_9allocatorImEEEE"}
!15 = !{!13}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE16__construct_nodeIJRKmEEENS_10unique_ptrINS_11__tree_nodeImPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE16__construct_nodeIJRKmEEENS_10unique_ptrINS_11__tree_nodeImPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_"}
!19 = !{!17, !20}
!20 = distinct !{!20, !21, !"_ZN4quic12QpackEncoder24EncodeIndexedHeaderFieldEbmPNSt3__18multisetImNS1_4lessImEENS1_9allocatorImEEEE: argument 0"}
!21 = distinct !{!21, !"_ZN4quic12QpackEncoder24EncodeIndexedHeaderFieldEbmPNSt3__18multisetImNS1_4lessImEENS1_9allocatorImEEEE"}
!22 = !{!20}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE16__construct_nodeIJRKmEEENS_10unique_ptrINS_11__tree_nodeImPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_: argument 0"}
!25 = distinct !{!25, !"_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE16__construct_nodeIJRKmEEENS_10unique_ptrINS_11__tree_nodeImPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_"}
!26 = !{!24, !27}
!27 = distinct !{!27, !28, !"_ZN4quic12QpackEncoder24EncodeIndexedHeaderFieldEbmPNSt3__18multisetImNS1_4lessImEENS1_9allocatorImEEEE: argument 0"}
!28 = distinct !{!28, !"_ZN4quic12QpackEncoder24EncodeIndexedHeaderFieldEbmPNSt3__18multisetImNS1_4lessImEENS1_9allocatorImEEEE"}
!29 = !{!27}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE16__construct_nodeIJRKmEEENS_10unique_ptrINS_11__tree_nodeImPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_: argument 0"}
!32 = distinct !{!32, !"_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE16__construct_nodeIJRKmEEENS_10unique_ptrINS_11__tree_nodeImPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_"}
!33 = !{!31, !34}
!34 = distinct !{!34, !35, !"_ZN4quic12QpackEncoder41EncodeLiteralHeaderFieldWithNameReferenceEbmN4absl11string_viewEPNSt3__18multisetImNS3_4lessImEENS3_9allocatorImEEEE: argument 0"}
!35 = distinct !{!35, !"_ZN4quic12QpackEncoder41EncodeLiteralHeaderFieldWithNameReferenceEbmN4absl11string_viewEPNSt3__18multisetImNS3_4lessImEENS3_9allocatorImEEEE"}
!36 = !{!34}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE16__construct_nodeIJRKmEEENS_10unique_ptrINS_11__tree_nodeImPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_: argument 0"}
!39 = distinct !{!39, !"_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE16__construct_nodeIJRKmEEENS_10unique_ptrINS_11__tree_nodeImPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_"}
!40 = !{!38, !41}
!41 = distinct !{!41, !42, !"_ZN4quic12QpackEncoder24EncodeIndexedHeaderFieldEbmPNSt3__18multisetImNS1_4lessImEENS1_9allocatorImEEEE: argument 0"}
!42 = distinct !{!42, !"_ZN4quic12QpackEncoder24EncodeIndexedHeaderFieldEbmPNSt3__18multisetImNS1_4lessImEENS1_9allocatorImEEEE"}
!43 = !{!41}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE16__construct_nodeIJRKmEEENS_10unique_ptrINS_11__tree_nodeImPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_: argument 0"}
!46 = distinct !{!46, !"_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE16__construct_nodeIJRKmEEENS_10unique_ptrINS_11__tree_nodeImPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_"}
!47 = !{!45, !48}
!48 = distinct !{!48, !49, !"_ZN4quic12QpackEncoder41EncodeLiteralHeaderFieldWithNameReferenceEbmN4absl11string_viewEPNSt3__18multisetImNS3_4lessImEENS3_9allocatorImEEEE: argument 0"}
!49 = distinct !{!49, !"_ZN4quic12QpackEncoder41EncodeLiteralHeaderFieldWithNameReferenceEbmN4absl11string_viewEPNSt3__18multisetImNS3_4lessImEENS3_9allocatorImEEEE"}
!50 = !{!48}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE16__construct_nodeIJRKmEEENS_10unique_ptrINS_11__tree_nodeImPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_: argument 0"}
!53 = distinct !{!53, !"_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE16__construct_nodeIJRKmEEENS_10unique_ptrINS_11__tree_nodeImPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_"}
!54 = !{!52, !55}
!55 = distinct !{!55, !56, !"_ZN4quic12QpackEncoder24EncodeIndexedHeaderFieldEbmPNSt3__18multisetImNS1_4lessImEENS1_9allocatorImEEEE: argument 0"}
!56 = distinct !{!56, !"_ZN4quic12QpackEncoder24EncodeIndexedHeaderFieldEbmPNSt3__18multisetImNS1_4lessImEENS1_9allocatorImEEEE"}
!57 = !{!55}
!58 = !{!"branch_weights", i32 2000, i32 1}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN4absl6StrCatIJmEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_8AlphaNumESA_SA_SA_SA_DpRKT_: argument 0"}
!61 = distinct !{!61, !"_ZN4absl6StrCatIJmEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_8AlphaNumESA_SA_SA_SA_DpRKT_"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv: argument 0"}
!64 = distinct !{!64, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv: argument 0"}
!67 = distinct !{!67, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv"}
!68 = distinct !{!68, !69}
!69 = !{!"llvm.loop.unroll.disable"}
!70 = distinct !{!70, !69}
!71 = distinct !{!71, !69}
!72 = distinct !{!72, !69}
!73 = distinct !{!73, !69}
