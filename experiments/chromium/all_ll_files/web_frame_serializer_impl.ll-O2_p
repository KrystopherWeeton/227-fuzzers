; ModuleID = '../../third_party/blink/renderer/core/frame/web_frame_serializer_impl.cc'
source_filename = "../../third_party/blink/renderer/core/frame/web_frame_serializer_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr.24 }
%class.scoped_refptr.24 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::WebFrameSerializerImpl::SerializeDomParam" = type <{ %"class.blink::KURL"*, %"class.WTF::TextEncoding"*, %"class.blink::Document"*, i8, i8, i8, [5 x i8], %"class.blink::Element"*, i8, i8, [6 x i8] }>
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.25" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.2", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.4" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.8", %"class.blink::Member.10", %"class.blink::Member.2", %"class.blink::Member.12", %"class.blink::Member.12", %"class.blink::Member.43", %"class.blink::Member.45", %"class.blink::Member.47", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.52", %"class.blink::HeapVector.54" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::Document"* }
%"class.blink::Member.12" = type { %"class.blink::MemberBase.13" }
%"class.blink::MemberBase.13" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.18" }
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.22", i32, %"class.blink::HeapVector" }
%"class.blink::Member.22" = type { %"class.blink::MemberBase.23" }
%"class.blink::MemberBase.23" = type { %"class.blink::Element"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.39" }
%"class.WTF::Vector.39" = type { %"class.WTF::VectorBuffer.40" }
%"class.WTF::VectorBuffer.40" = type { %"class.WTF::VectorBufferBase.41" }
%"class.WTF::VectorBufferBase.41" = type { %"class.blink::Member.22"*, i32, i32 }
%"class.blink::Member.43" = type { %"class.blink::MemberBase.44" }
%"class.blink::MemberBase.44" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.45" = type { %"class.blink::MemberBase.46" }
%"class.blink::MemberBase.46" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.49" }
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::HeapHashMap.51"* }
%"class.blink::HeapHashMap.51" = type opaque
%"class.blink::Member.52" = type { %"class.blink::MemberBase.53" }
%"class.blink::MemberBase.53" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.54" = type { %"class.WTF::Vector.57" }
%"class.WTF::Vector.57" = type { %"class.WTF::VectorBuffer.58" }
%"class.WTF::VectorBuffer.58" = type { %"class.WTF::VectorBufferBase.59" }
%"class.WTF::VectorBufferBase.59" = type { %"class.blink::Member.60"*, i32, i32 }
%"class.blink::Member.60" = type { %"class.blink::MemberBase.61" }
%"class.blink::MemberBase.61" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.62", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.64, %"class.WTF::Vector.65", %"class.WTF::Vector.65", %"class.blink::Member", %"class.blink::Member.70", %"class.blink::HeapHashSet", %"class.blink::Member.10", %"class.WTF::HashSet.78", %"class.WTF::TextPosition", %"class.blink::Member.82", %"class.blink::HeapVector.84", %"class.blink::Member.91" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.62" = type { %"class.blink::MemberBase.63" }
%"class.blink::MemberBase.63" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.64 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.65" = type { %"class.WTF::VectorBuffer.66" }
%"class.WTF::VectorBuffer.66" = type { %"class.WTF::VectorBufferBase.67" }
%"class.WTF::VectorBufferBase.67" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.70" = type { %"class.blink::MemberBase.71" }
%"class.blink::MemberBase.71" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.72" }
%"class.blink::Member.72" = type { %"class.blink::MemberBase.73" }
%"class.blink::MemberBase.73" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.76" }
%"class.WTF::HashTable.76" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.3" }
%"class.WTF::HashSet.78" = type { %"class.WTF::HashTable.79" }
%"class.WTF::HashTable.79" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.82" = type { %"class.blink::MemberBase.83" }
%"class.blink::MemberBase.83" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.84" = type { %"class.WTF::Vector.87" }
%"class.WTF::Vector.87" = type { %"class.WTF::VectorBuffer.88" }
%"class.WTF::VectorBuffer.88" = type { %"class.WTF::VectorBufferBase.89" }
%"class.WTF::VectorBufferBase.89" = type { %"class.blink::Member.70"*, i32, i32 }
%"class.blink::Member.91" = type { %"class.blink::MemberBase.92" }
%"class.blink::MemberBase.92" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.29", %"class.blink::Member.31", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.29" = type { %"class.WTF::SingleThreadedBitField.30" }
%"class.WTF::SingleThreadedBitField.30" = type { i32 }
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.33 }
%class.scoped_refptr.33 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.34", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.34" = type { %"class.base::RefCounted.35" }
%"class.base::RefCounted.35" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.101", %"class.WTF::Vector.101", i8, i32, %"class.blink::Member.112", %"class.blink::Member.114", %"class.blink::Member.116", %"class.blink::Member.118", %"class.blink::Member.120", %"class.blink::Member.122", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.124", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.130", %"class.blink::Member.132", %"class.blink::Member.60", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.135", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.22", %"class.blink::Member.345", %"class.blink::Member.22", %"class.blink::Member.22", %"class.blink::Member.22", %"class.blink::UserActionElementSet", %"class.blink::Member.354", double, double, i64, i64, %"class.blink::HeapHashSet.356", %"class.blink::HeapHashSet.363", i16, i8, %"class.blink::Member.370", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::TextLinkColors", %"class.blink::Member.378", i8, [7 x i8], %"class.blink::HeapHashMap.380", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.22", %"class.WTF::Vector.387", %"class.blink::Member.392", %"class.blink::Member.394", i8, %"class.blink::Member.22", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.396", %"class.blink::HeapVector.398", %"class.std::__1::unique_ptr.406", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.412", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.425", %"class.WTF::Vector.427", i8, i8, %"class.std::__1::unique_ptr.432", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.438", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.446", i8, i32, %"class.blink::Member.448", %"class.blink::Member.450", %"class.blink::Member.452", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.454", %"class.WTF::HashMap.456", %"class.blink::Member.461", %"class.blink::Member.463", %"class.blink::Member.465", %"class.blink::Member.467", %"class.blink::Member.10", %"class.blink::Member.10", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.469", i8, i32, %"class.blink::Member.476", %"class.blink::Member.478", i32, %"class.blink::Member.480", %"class.blink::Member.482", %"class.blink::Member.484", %"class.std::__1::unique_ptr.486", i64, %"class.std::__1::unique_ptr.492", i32, i32, %"class.blink::Member.498", %"class.blink::Member.500", %"class.blink::Member.502", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.504", %"class.WTF::Vector.506", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.511", %"class.blink::Member.518", %"class.std::__1::unique_ptr.520", %"class.blink::Member.526", i8, i8, %"class.WTF::String", %"class.blink::Member.528", i8, [7 x i8], %"class.blink::HeapHashMap.530", %"class.blink::HeapObserverSet", %"class.blink::Member.544", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.546", i32, i8, i8, %"class.blink::WeakMember.548", %"class.blink::Member.549" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.94" }
%"class.blink::HeapHashMap.94" = type { %"class.WTF::HashMap.97" }
%"class.WTF::HashMap.97" = type { %"class.WTF::HashTable.98" }
%"class.WTF::HashTable.98" = type <{ %"struct.WTF::KeyValuePair.100"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.100" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.101" = type { %"class.WTF::VectorBuffer.102" }
%"class.WTF::VectorBuffer.102" = type { %"class.WTF::VectorBufferBase.103" }
%"class.WTF::VectorBufferBase.103" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.104 }
%class.scoped_refptr.104 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.105" }
%"struct.std::__1::atomic.105" = type { %"struct.std::__1::__atomic_base.106" }
%"struct.std::__1::__atomic_base.106" = type { %"struct.std::__1::__atomic_base.107" }
%"struct.std::__1::__atomic_base.107" = type { %"struct.std::__1::__cxx_atomic_impl.108" }
%"struct.std::__1::__cxx_atomic_impl.108" = type { %"struct.std::__1::__cxx_atomic_base_impl.109" }
%"struct.std::__1::__cxx_atomic_base_impl.109" = type { i32 }
%"class.blink::Member.112" = type { %"class.blink::MemberBase.113" }
%"class.blink::MemberBase.113" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.114" = type { %"class.blink::MemberBase.115" }
%"class.blink::MemberBase.115" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.567", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.643", i32, i8, [3 x i8], %"class.blink::HeapVector.645", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.653", %"class.blink::Member.655", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.664", %"class.blink::Member.792", %"class.blink::Member.794", i8, [7 x i8] }>
%"class.blink::Supplementable.567" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.568" }
%"class.blink::HeapHashMap.568" = type { %"class.WTF::HashMap.571" }
%"class.WTF::HashMap.571" = type { %"class.WTF::HashTable.572" }
%"class.WTF::HashTable.572" = type <{ %"struct.WTF::KeyValuePair.574"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.574" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.583" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.575" }
%"class.blink::HeapObserverSet.575" = type { i32, [4 x i8], %"class.blink::HeapHashSet.576" }
%"class.blink::HeapHashSet.576" = type { %"class.WTF::HashSet.579" }
%"class.WTF::HashSet.579" = type { %"class.WTF::HashTable.580" }
%"class.WTF::HashTable.580" = type <{ %"class.blink::WeakMember.582"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.582" = type opaque
%"class.blink::Supplementable.583" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.584" }
%"class.blink::HeapHashMap.584" = type { %"class.WTF::HashMap.587" }
%"class.WTF::HashMap.587" = type { %"class.WTF::HashTable.588" }
%"class.WTF::HashTable.588" = type <{ %"struct.WTF::KeyValuePair.590"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.590" = type { i8*, %"class.blink::Member.1777" }
%"class.blink::Member.1777" = type { %"class.blink::MemberBase.1778" }
%"class.blink::MemberBase.1778" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1779" }
%"class.blink::Member.1779" = type { %"class.blink::MemberBase.1780" }
%"class.blink::MemberBase.1780" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.591, %"class.std::__1::unique_ptr.595", %"class.std::__1::unique_ptr.595", %"class.std::__1::unique_ptr.625", %"class.std::__1::unique_ptr.625", %"class.blink::Member.114", i32, [4 x i8], %"class.WTF::HashSet.639", i32, i32 }
%class.scoped_refptr.591 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.592", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.594 }
%"class.WTF::RefCounted.592" = type { %"class.base::RefCounted.593" }
%"class.base::RefCounted.593" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.594 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.595" = type { %"class.std::__1::__compressed_pair.596" }
%"class.std::__1::__compressed_pair.596" = type { %"struct.std::__1::__compressed_pair_elem.597" }
%"struct.std::__1::__compressed_pair_elem.597" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.612", %"class.std::__1::map.621"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.598" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.599" }
%"struct.std::__1::__compressed_pair_elem.599" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.600 }
%union.anon.600 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.604", %"class.std::__1::__compressed_pair.609" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.605" }
%"struct.std::__1::__compressed_pair_elem.605" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { i64 }
%"class.std::__1::map.612" = type { %"class.std::__1::__tree.613" }
%"class.std::__1::__tree.613" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.614", %"class.std::__1::__compressed_pair.618" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.605" }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.std::__1::map.621" = type opaque
%"class.std::__1::unique_ptr.625" = type { %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array", %"class.base::flat_map" }
%"struct.std::__1::array" = type { [14 x %"class.blink::PolicyValue"] }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.628" }
%"class.std::__1::vector.628" = type { %"class.std::__1::__vector_base.629" }
%"class.std::__1::__vector_base.629" = type { %"struct.std::__1::pair.630"*, %"struct.std::__1::pair.630"*, %"class.std::__1::__compressed_pair.631" }
%"struct.std::__1::pair.630" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.632" }
%"struct.std::__1::__compressed_pair_elem.632" = type { %"struct.std::__1::pair.630"* }
%"class.WTF::HashSet.639" = type { %"class.WTF::HashTable.640" }
%"class.WTF::HashTable.640" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.643" = type { %"class.blink::MemberBase.644" }
%"class.blink::MemberBase.644" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.645" = type { %"class.WTF::Vector.648" }
%"class.WTF::Vector.648" = type { %"class.WTF::VectorBuffer.649" }
%"class.WTF::VectorBuffer.649" = type { %"class.WTF::VectorBufferBase.650" }
%"class.WTF::VectorBufferBase.650" = type { %"class.blink::Member.651"*, i32, i32 }
%"class.blink::Member.651" = type opaque
%"class.blink::Member.653" = type { %"class.blink::MemberBase.654" }
%"class.blink::MemberBase.654" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.655" = type { %"class.blink::MemberBase.656" }
%"class.blink::MemberBase.656" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.657", i32, i32 }
%"class.blink::HeapHashMap.657" = type { %"class.WTF::HashMap.660" }
%"class.WTF::HashMap.660" = type { %"class.WTF::HashTable.661" }
%"class.WTF::HashTable.661" = type <{ %"struct.WTF::KeyValuePair.663"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.663" = type opaque
%"class.std::__1::unique_ptr.664" = type { %"class.std::__1::__compressed_pair.665" }
%"class.std::__1::__compressed_pair.665" = type { %"struct.std::__1::__compressed_pair_elem.666" }
%"struct.std::__1::__compressed_pair_elem.666" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.667" }
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.670" }
%"class.WTF::Vector.670" = type { %"class.WTF::VectorBuffer.671" }
%"class.WTF::VectorBuffer.671" = type { %"class.WTF::VectorBufferBase.672" }
%"class.WTF::VectorBufferBase.672" = type { %"class.mojo::StructPtr.673"*, i32, i32 }
%"class.mojo::StructPtr.673" = type { %"class.std::__1::unique_ptr.674" }
%"class.std::__1::unique_ptr.674" = type { %"class.std::__1::__compressed_pair.675" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.677", %"class.WTF::HashMap.684", %"class.WTF::HashMap.689", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.694", i32, %"class.mojo::StructPtr.699", %"class.WTF::Vector.694" }
%"class.mojo::StructPtr.677" = type { %"class.std::__1::unique_ptr.678" }
%"class.std::__1::unique_ptr.678" = type { %"class.std::__1::__compressed_pair.679" }
%"class.std::__1::__compressed_pair.679" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"struct.std::__1::__compressed_pair_elem.680" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.684" = type { %"class.WTF::HashTable.685" }
%"class.WTF::HashTable.685" = type <{ %"struct.WTF::KeyValuePair.688"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.688" = type opaque
%"class.WTF::HashMap.689" = type { %"class.WTF::HashTable.690" }
%"class.WTF::HashTable.690" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.699" = type { %"class.std::__1::unique_ptr.700" }
%"class.std::__1::unique_ptr.700" = type { %"class.std::__1::__compressed_pair.701" }
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.702" }
%"struct.std::__1::__compressed_pair_elem.702" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.694", i8, i8, [6 x i8] }>
%"class.WTF::Vector.694" = type { %"class.WTF::VectorBuffer.695" }
%"class.WTF::VectorBuffer.695" = type { %"class.WTF::VectorBufferBase.696" }
%"class.WTF::VectorBufferBase.696" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.783" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.714", i32 }>
%"class.std::__1::unique_ptr.714" = type { %"class.std::__1::__compressed_pair.715" }
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.716" }
%"struct.std::__1::__compressed_pair_elem.716" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.717", %"class.absl::optional.718", %"class.absl::optional.723", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.736", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.758", %"class.std::__1::map.769", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.778", i8, %class.scoped_refptr.728, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.779" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.717" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.718" = type { %"class.absl::optional_internal::optional_data.719" }
%"class.absl::optional_internal::optional_data.719" = type { %"class.absl::optional_internal::optional_data_base.720" }
%"class.absl::optional_internal::optional_data_base.720" = type { %"class.absl::optional_internal::optional_data_dtor_base.721" }
%"class.absl::optional_internal::optional_data_dtor_base.721" = type { i8, %union.anon.722 }
%union.anon.722 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.723" = type { %"class.absl::optional_internal::optional_data.724" }
%"class.absl::optional_internal::optional_data.724" = type { %"class.absl::optional_internal::optional_data_base.725" }
%"class.absl::optional_internal::optional_data_base.725" = type { %"class.absl::optional_internal::optional_data_dtor_base.726" }
%"class.absl::optional_internal::optional_data_dtor_base.726" = type { i8, %union.anon.727 }
%union.anon.727 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.728, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.729" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.729" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.337 }
%class.scoped_refptr.337 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.338", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.338" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.339" }
%"struct.std::__1::atomic.339" = type { %"struct.std::__1::__atomic_base.340" }
%"struct.std::__1::__atomic_base.340" = type { %"struct.std::__1::__atomic_base.341" }
%"struct.std::__1::__atomic_base.341" = type { %"struct.std::__1::__cxx_atomic_impl.342" }
%"struct.std::__1::__cxx_atomic_impl.342" = type { %"struct.std::__1::__cxx_atomic_base_impl.343" }
%"struct.std::__1::__cxx_atomic_base_impl.343" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.734 }
%class.scoped_refptr.734 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.796", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.728, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.796" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.735 }
%class.scoped_refptr.735 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.739", %class.scoped_refptr.740 }
%"class.base::RepeatingCallback.739" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.740 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.741", [4 x i8] }>
%"class.base::RefCountedThreadSafe.741" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.745", %"class.std::__1::unique_ptr.751", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.757" }
%"class.std::__1::unique_ptr.745" = type { %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.751" = type { %"class.std::__1::__compressed_pair.752" }
%"class.std::__1::__compressed_pair.752" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"struct.std::__1::__compressed_pair_elem.753" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.757" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.758" = type { %"class.std::__1::__tree.759" }
%"class.std::__1::__tree.759" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.760", %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.605" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.std::__1::map.769" = type { %"class.std::__1::__tree.770" }
%"class.std::__1::__tree.770" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.771", %"class.std::__1::__compressed_pair.775" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.605" }
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.base::OnceCallback.778" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.728 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.336" }>
%"class.base::RefCountedThreadSafe.336" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.779" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.783" = type { %"class.std::__1::__compressed_pair.784" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.785" }
%"struct.std::__1::__compressed_pair_elem.785" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.792" = type { %"class.blink::MemberBase.793" }
%"class.blink::MemberBase.793" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.794" = type { %"class.blink::MemberBase.795" }
%"class.blink::MemberBase.795" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.116" = type { %"class.blink::MemberBase.117" }
%"class.blink::MemberBase.117" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.118" = type { %"class.blink::MemberBase.119" }
%"class.blink::MemberBase.119" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.120" = type { %"class.blink::MemberBase.121" }
%"class.blink::MemberBase.121" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.122" = type { %"class.blink::MemberBase.123" }
%"class.blink::MemberBase.123" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.130" = type { %"class.blink::MemberBase.131" }
%"class.blink::MemberBase.131" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type { %"class.blink::Node", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.132" = type { %"class.blink::MemberBase.133" }
%"class.blink::MemberBase.133" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.134 }
%class.scoped_refptr.134 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.135" = type { %"class.WTF::VectorBuffer.136" }
%"class.WTF::VectorBuffer.136" = type { %"class.WTF::VectorBufferBase.137" }
%"class.WTF::VectorBufferBase.137" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.138 }
%class.scoped_refptr.138 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.139", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.139" = type { %"class.base::RefCounted.140" }
%"class.base::RefCounted.140" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.143" }
%"class.blink::HeapHashMap.143" = type { %"class.WTF::HashMap.146" }
%"class.WTF::HashMap.146" = type { %"class.WTF::HashTable.147" }
%"class.WTF::HashTable.147" = type <{ %"struct.WTF::KeyValuePair.149"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.149" = type { %"class.blink::WeakMember.150", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.150" = type { %"class.blink::MemberBase.151" }
%"class.blink::MemberBase.151" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.152", i32, [4 x i8], %"class.std::__1::unique_ptr.288", %"class.std::__1::unique_ptr.288", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.298", %"class.std::__1::unique_ptr.304", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.322", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.329", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.238", %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.268", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.188" = type { %"struct.std::__1::__atomic_base.189" }
%"struct.std::__1::__atomic_base.189" = type { %"struct.std::__1::__atomic_base.190" }
%"struct.std::__1::__atomic_base.190" = type { %"struct.std::__1::__cxx_atomic_impl.191" }
%"struct.std::__1::__cxx_atomic_impl.191" = type { %"struct.std::__1::__cxx_atomic_base_impl.192" }
%"struct.std::__1::__cxx_atomic_base_impl.192" = type { i64 }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::Worklist.199"* }
%"class.blink::Worklist.199" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::Worklist.206"* }
%"class.blink::Worklist.206" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::Worklist.213"* }
%"class.blink::Worklist.213" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.blink::Worklist.220"* }
%"class.blink::Worklist.220" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::Worklist.227"* }
%"class.blink::Worklist.227" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::Worklist.234"* }
%"class.blink::Worklist.234" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::Worklist.241"* }
%"class.blink::Worklist.241" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.248", %"class.std::__1::__compressed_pair.255", %"class.std::__1::__compressed_pair.260", %"class.std::__1::__compressed_pair.262", [4 x i8] }>
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250", %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { float }
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.271", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.280" }
%"class.WTF::Vector.280" = type { %"class.WTF::VectorBuffer.281" }
%"class.WTF::VectorBuffer.281" = type { %"class.WTF::VectorBufferBase.282" }
%"class.WTF::VectorBufferBase.282" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.296" }
%"class.WTF::VectorBuffer.296" = type { %"class.WTF::VectorBufferBase.297" }
%"class.WTF::VectorBufferBase.297" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.310" }
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.199"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.206"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.213"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.220"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.227"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.562" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.328 }
%class.scoped_refptr.328 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.329" = type { %"struct.std::__1::__atomic_base.330" }
%"struct.std::__1::__atomic_base.330" = type { %"struct.std::__1::__cxx_atomic_impl.331" }
%"struct.std::__1::__cxx_atomic_impl.331" = type { %"struct.std::__1::__cxx_atomic_base_impl.332" }
%"struct.std::__1::__cxx_atomic_base_impl.332" = type { i8 }
%"class.blink::Member.345" = type { %"class.blink::MemberBase.346" }
%"class.blink::MemberBase.346" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.347" }
%"class.blink::HeapHashMap.347" = type { %"class.WTF::HashMap.350" }
%"class.WTF::HashMap.350" = type { %"class.WTF::HashTable.351" }
%"class.WTF::HashTable.351" = type <{ %"struct.WTF::KeyValuePair.353"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.353" = type opaque
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.356" = type { %"class.WTF::HashSet.359" }
%"class.WTF::HashSet.359" = type { %"class.WTF::HashTable.360" }
%"class.WTF::HashTable.360" = type <{ %"class.blink::WeakMember.362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.362" = type opaque
%"class.blink::HeapHashSet.363" = type { %"class.WTF::HashSet.366" }
%"class.WTF::HashSet.366" = type { %"class.WTF::HashTable.367" }
%"class.WTF::HashTable.367" = type <{ %"class.blink::WeakMember.369"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.369" = type opaque
%"class.blink::Member.370" = type { %"class.blink::MemberBase.371" }
%"class.blink::MemberBase.371" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.2", %"class.blink::HeapVector.54" }
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.380" = type { %"class.WTF::HashMap.383" }
%"class.WTF::HashMap.383" = type { %"class.WTF::HashTable.384" }
%"class.WTF::HashTable.384" = type <{ %"struct.WTF::KeyValuePair.386"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.386" = type opaque
%"class.WTF::Vector.387" = type { %"class.WTF::VectorBuffer.388" }
%"class.WTF::VectorBuffer.388" = type { %"class.WTF::VectorBufferBase.389" }
%"class.WTF::VectorBufferBase.389" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.392" = type { %"class.blink::MemberBase.393" }
%"class.blink::MemberBase.393" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.394" = type { %"class.blink::MemberBase.395" }
%"class.blink::MemberBase.395" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.396" = type { %"class.blink::MemberBase.397" }
%"class.blink::MemberBase.397" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.398" = type { %"class.WTF::Vector.401" }
%"class.WTF::Vector.401" = type { %"class.WTF::VectorBuffer.402" }
%"class.WTF::VectorBuffer.402" = type { %"class.WTF::VectorBufferBase.403" }
%"class.WTF::VectorBufferBase.403" = type { %"class.blink::Member.404"*, i32, i32 }
%"class.blink::Member.404" = type opaque
%"class.std::__1::unique_ptr.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.412" = type { %"class.WTF::HashSet.415" }
%"class.WTF::HashSet.415" = type { %"class.WTF::HashTable.416" }
%"class.WTF::HashTable.416" = type <{ %"class.blink::WeakMember.418"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.418" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.419", i32, [4 x i8] }>
%"class.WTF::Vector.419" = type { %"class.WTF::VectorBuffer.420" }
%"class.WTF::VectorBuffer.420" = type { %"class.WTF::VectorBufferBase.421" }
%"class.WTF::VectorBufferBase.421" = type { %"struct.std::__1::pair.422"*, i32, i32 }
%"struct.std::__1::pair.422" = type opaque
%"class.blink::Member.425" = type { %"class.blink::MemberBase.426" }
%"class.blink::MemberBase.426" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.427" = type { %"class.WTF::VectorBuffer.428" }
%"class.WTF::VectorBuffer.428" = type { %"class.WTF::VectorBufferBase.429" }
%"class.WTF::VectorBufferBase.429" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.438" = type { %"class.WTF::Vector.441" }
%"class.WTF::Vector.441" = type { %"class.WTF::VectorBuffer.442" }
%"class.WTF::VectorBuffer.442" = type { %"class.WTF::VectorBufferBase.443" }
%"class.WTF::VectorBufferBase.443" = type { %"class.blink::Member.444"*, i32, i32 }
%"class.blink::Member.444" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.10" }
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.448" = type { %"class.blink::MemberBase.449" }
%"class.blink::MemberBase.449" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.454" = type { %"class.blink::MemberBase.455" }
%"class.blink::MemberBase.455" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.456" = type { %"class.WTF::HashTable.457" }
%"class.WTF::HashTable.457" = type <{ %"struct.WTF::KeyValuePair.460"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.460" = type opaque
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.463" = type { %"class.blink::MemberBase.464" }
%"class.blink::MemberBase.464" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.344", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.335, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.335 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.344" = type { %"class.blink::MemberBase.11" }
%"class.blink::HeapHashSet.469" = type { %"class.WTF::HashSet.472" }
%"class.WTF::HashSet.472" = type { %"class.WTF::HashTable.473" }
%"class.WTF::HashTable.473" = type <{ %"class.blink::Member.475"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.475" = type opaque
%"class.blink::Member.476" = type { %"class.blink::MemberBase.477" }
%"class.blink::MemberBase.477" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.480" = type { %"class.blink::MemberBase.481" }
%"class.blink::MemberBase.481" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.486" = type { %"class.std::__1::__compressed_pair.487" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.488" }
%"struct.std::__1::__compressed_pair_elem.488" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.492" = type { %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.498" = type { %"class.blink::MemberBase.499" }
%"class.blink::MemberBase.499" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.500" = type { %"class.blink::MemberBase.501" }
%"class.blink::MemberBase.501" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.502" = type { %"class.blink::MemberBase.503" }
%"class.blink::MemberBase.503" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.504" = type { %"class.blink::MemberBase.505" }
%"class.blink::MemberBase.505" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.506" = type { %"class.WTF::VectorBuffer.507" }
%"class.WTF::VectorBuffer.507" = type { %"class.WTF::VectorBufferBase.508" }
%"class.WTF::VectorBufferBase.508" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.511" = type { %"class.WTF::HashMap.514" }
%"class.WTF::HashMap.514" = type { %"class.WTF::HashTable.515" }
%"class.WTF::HashTable.515" = type <{ %"struct.WTF::KeyValuePair.517"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.517" = type opaque
%"class.blink::Member.518" = type { %"class.blink::MemberBase.519" }
%"class.blink::MemberBase.519" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.520" = type { %"class.std::__1::__compressed_pair.521" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.522" }
%"struct.std::__1::__compressed_pair_elem.522" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.526" = type { %"class.blink::MemberBase.527" }
%"class.blink::MemberBase.527" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.528" = type { %"class.blink::MemberBase.529" }
%"class.blink::MemberBase.529" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.530" = type { %"class.WTF::HashMap.533" }
%"class.WTF::HashMap.533" = type { %"class.WTF::HashTable.534" }
%"class.WTF::HashTable.534" = type <{ %"struct.WTF::KeyValuePair.536"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.536" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.537" }
%"class.blink::HeapHashSet.537" = type { %"class.WTF::HashSet.540" }
%"class.WTF::HashSet.540" = type { %"class.WTF::HashTable.541" }
%"class.WTF::HashTable.541" = type <{ %"class.blink::WeakMember.543"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.543" = type opaque
%"class.blink::Member.544" = type { %"class.blink::MemberBase.545" }
%"class.blink::MemberBase.545" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.546" = type { %"class.blink::MemberBase.547" }
%"class.blink::MemberBase.547" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.10", %"class.blink::HeapHashSet.553", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.560", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.553" = type { %"class.WTF::HashSet.556" }
%"class.WTF::HashSet.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"class.blink::Member.559"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.559" = type opaque
%"class.blink::HeapTaskRunnerTimer.560" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.561", { i64, i64 } }
%"class.blink::WeakMember.561" = type { %"class.blink::MemberBase.547" }
%"class.blink::WeakMember.548" = type { %"class.blink::MemberBase" }
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::WebFrameSerializerImpl" = type { %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebFrameSerializerClient"*, %"class.blink::WebFrameSerializer::LinkRewritingDelegate"*, %"class.WTF::StringBuilder", i8, [7 x i8], %"class.blink::WebEntities", %"class.blink::WebEntities" }
%"class.blink::WebLocalFrameImpl" = type { %"class.blink::WebNavigationControl", %"class.blink::WebLocalFrameClient"*, %"class.blink::Member.799", %"class.blink::Member.801", %"class.blink::Member.803", %"class.blink::Member.805", %"class.blink::WebAutofillClient"*, %"class.blink::WebContentCaptureClient"*, %"class.blink::WebContentSettingsClient"*, %"class.blink::Member.807", %"class.base::WeakPtr", %"class.blink::Member.810", %"class.blink::InterfaceRegistry"*, %"class.blink::WebInputMethodControllerImpl", %"class.blink::WebTextCheckClient"*, %"class.blink::WebSpellCheckPanelHostClient"*, %"class.blink::SelfKeepAlive", i8, %"class.gfx::Rect", %"class.blink::WebHistoryItem" }
%"class.blink::WebNavigationControl" = type { %"class.blink::WebLocalFrame" }
%"class.blink::WebLocalFrame" = type { %"class.blink::WebFrame" }
%"class.blink::WebFrame" = type { i32 (...)**, i32, [4 x i8], %"class.blink::MultiToken" }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::WebLocalFrameClient" = type opaque
%"class.blink::Member.799" = type { %"class.blink::MemberBase.800" }
%"class.blink::MemberBase.800" = type { %"class.blink::LocalFrameClientImpl"* }
%"class.blink::LocalFrameClientImpl" = type opaque
%"class.blink::Member.801" = type { %"class.blink::MemberBase.802" }
%"class.blink::MemberBase.802" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1003", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1011", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1025", %"class.blink::FrameLoader", %"class.blink::Member.1046", %"class.blink::Member.22", %"class.blink::Member.1048", %"class.blink::Member.1050", %"class.blink::Member.1052", %"class.blink::Member.1054", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1056", %class.scoped_refptr.1058, %"class.blink::Member.1059", %"class.blink::Member.1061", %"class.blink::Member.1063", %"class.blink::Member.1065", %"class.blink::Member.1067", %"class.blink::Member.1069", %"class.blink::Member.1071", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1075", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1081", %"class.std::__1::unique_ptr.1082", %"class.absl::optional.991", i32, [4 x i8], %"class.std::__1::unique_ptr.1088", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1096", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1101", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1106", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1109", %"class.blink::Member.1111", %"class.blink::Member.1113", %"class.blink::Member.1115", %"class.mojo::StructPtr.1118", %"class.blink::Member.1127", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1129", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.836", %"class.blink::Member.838", %"class.blink::Member.840", i8, i32, i8, i32, %"class.blink::Member.972", %"class.blink::Member.863", %"class.blink::FrameLifecycle", %"class.blink::Member.834", %"class.blink::Member.834", %"class.blink::Member.834", %"class.blink::Member.834", %"class.blink::Member.834", %"class.blink::Member.834", %"class.blink::Member.801", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map.974", %"class.blink::Member.984", i8, %"class.base::UnguessableToken", %"class.absl::optional.986", %"class.absl::optional.991", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.834", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.836" = type { %"class.blink::MemberBase.837" }
%"class.blink::MemberBase.837" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.838" = type { %"class.blink::MemberBase.839" }
%"class.blink::MemberBase.839" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.840" = type { %"class.blink::MemberBase.841" }
%"class.blink::MemberBase.841" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.834", %"class.blink::Member.863", %"class.blink::Member.865", %"class.blink::Member.867", i8, %"class.WTF::Vector.869" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.856" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.844" }
%"class.blink::HeapVector.844" = type { %"class.WTF::Vector.847" }
%"class.WTF::Vector.847" = type { %"class.WTF::VectorBuffer.848" }
%"class.WTF::VectorBuffer.848" = type { %"class.WTF::VectorBufferBase.849", [32 x i8] }
%"class.WTF::VectorBufferBase.849" = type { %"struct.std::__1::pair.850"*, i32, i32 }
%"struct.std::__1::pair.850" = type { %"class.WTF::AtomicString", %"class.blink::Member.851" }
%"class.blink::Member.851" = type { %"class.blink::MemberBase.852" }
%"class.blink::MemberBase.852" = type { %"class.blink::HeapVector.853"* }
%"class.blink::HeapVector.853" = type opaque
%"class.std::__1::unique_ptr.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.858" }
%"struct.std::__1::__compressed_pair_elem.858" = type { %"class.WTF::Vector.859"* }
%"class.WTF::Vector.859" = type opaque
%"class.blink::Member.865" = type { %"class.blink::MemberBase.866" }
%"class.blink::MemberBase.866" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.867" = type { %"class.blink::MemberBase.868" }
%"class.blink::MemberBase.868" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.869" = type { %"class.WTF::VectorBuffer.870" }
%"class.WTF::VectorBuffer.870" = type { %"class.WTF::VectorBufferBase.871" }
%"class.WTF::VectorBufferBase.871" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.964" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.872, %"class.std::__1::unique_ptr.714", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.728, i32 }>
%class.scoped_refptr.872 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.728, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.930", %"class.absl::optional.935", %"class.absl::optional.889", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.955", i8, [7 x i8], %class.scoped_refptr.728, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.741" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.728, %"class.std::__1::unique_ptr.873", %"class.absl::optional.883", %"struct.std::__1::atomic.329", i8, i8, i8, i8, i32, i32, %"class.absl::optional.889", %"class.std::__1::unique_ptr.894", i8, i64, %class.scoped_refptr.927, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.928", %"class.base::WeakPtrFactory.929" }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.728, i8, %"class.mojo::ScopedHandleBase.876", %class.scoped_refptr.877, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.878", i8*, %"class.base::WeakPtrFactory.879" }
%"class.mojo::ScopedHandleBase.876" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.877 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.878" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.879" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.888", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.888" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.894" = type { %"class.std::__1::__compressed_pair.895" }
%"class.std::__1::__compressed_pair.895" = type { %"struct.std::__1::__compressed_pair_elem.896" }
%"struct.std::__1::__compressed_pair_elem.896" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.897", i8, i64, %class.scoped_refptr.898, %class.scoped_refptr.923 }
%"class.base::RepeatingCallback.897" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.898 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.899", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.901", %"class.std::__1::map.912", i8, [7 x i8] }>
%"class.base::RefCounted.899" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.900 }
%class.scoped_refptr.900 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.901" = type { %"class.std::__1::__tree.902" }
%"class.std::__1::__tree.902" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.903", %"class.std::__1::__compressed_pair.907" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.605" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.std::__1::map.912" = type { %"class.std::__1::__tree.913" }
%"class.std::__1::__tree.913" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.914", %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.914" = type { %"struct.std::__1::__compressed_pair_elem.605" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%class.scoped_refptr.923 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.927 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.928" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.809 }
%class.scoped_refptr.809 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.929" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.930" = type { %"class.absl::optional_internal::optional_data.931" }
%"class.absl::optional_internal::optional_data.931" = type { %"class.absl::optional_internal::optional_data_base.932" }
%"class.absl::optional_internal::optional_data_base.932" = type { %"class.absl::optional_internal::optional_data_dtor_base.933" }
%"class.absl::optional_internal::optional_data_dtor_base.933" = type { i8, %union.anon.934 }
%union.anon.934 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.935" = type { %"class.absl::optional_internal::optional_data.936" }
%"class.absl::optional_internal::optional_data.936" = type { %"class.absl::optional_internal::optional_data_base.937" }
%"class.absl::optional_internal::optional_data_base.937" = type { %"class.absl::optional_internal::optional_data_dtor_base.938" }
%"class.absl::optional_internal::optional_data_dtor_base.938" = type { i8, [7 x i8], %union.anon.939 }
%union.anon.939 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.889" = type { %"class.absl::optional_internal::optional_data.890" }
%"class.absl::optional_internal::optional_data.890" = type { %"class.absl::optional_internal::optional_data_base.891" }
%"class.absl::optional_internal::optional_data_base.891" = type { %"class.absl::optional_internal::optional_data_dtor_base.892" }
%"class.absl::optional_internal::optional_data_dtor_base.892" = type { i8, %union.anon.893 }
%union.anon.893 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.940 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.940 = type { %"class.std::__1::map.943" }
%"class.std::__1::map.943" = type { %"class.std::__1::__tree.944" }
%"class.std::__1::__tree.944" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.945", %"class.std::__1::__compressed_pair.949" }
%"class.std::__1::__compressed_pair.945" = type { %"struct.std::__1::__compressed_pair_elem.605" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.954"*, i64 }
%"class.std::__1::unique_ptr.954" = type opaque
%"class.std::__1::map.955" = type { %"class.std::__1::__tree.956" }
%"class.std::__1::__tree.956" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.957", %"class.std::__1::__compressed_pair.961" }
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.605" }
%"class.std::__1::__compressed_pair.961" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.964" = type { %"class.std::__1::__compressed_pair.965" }
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.966" }
%"struct.std::__1::__compressed_pair_elem.966" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.972" = type { %"class.blink::MemberBase.973" }
%"class.blink::MemberBase.973" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.863" = type { %"class.blink::MemberBase.864" }
%"class.blink::MemberBase.864" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.834" = type { %"class.blink::MemberBase.835" }
%"class.blink::MemberBase.835" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.834", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map.974" = type { %"class.base::internal::flat_tree.975" }
%"class.base::internal::flat_tree.975" = type { %"class.std::__1::vector.976" }
%"class.std::__1::vector.976" = type { %"class.std::__1::__vector_base.977" }
%"class.std::__1::__vector_base.977" = type { %"struct.std::__1::pair.978"*, %"struct.std::__1::pair.978"*, %"class.std::__1::__compressed_pair.979" }
%"struct.std::__1::pair.978" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.std::__1::__compressed_pair.979" = type { %"struct.std::__1::__compressed_pair_elem.980" }
%"struct.std::__1::__compressed_pair_elem.980" = type { %"struct.std::__1::pair.978"* }
%"class.blink::Member.984" = type { %"class.blink::MemberBase.985" }
%"class.blink::MemberBase.985" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.986" = type { %"class.absl::optional_internal::optional_data.987" }
%"class.absl::optional_internal::optional_data.987" = type { %"class.absl::optional_internal::optional_data_base.988" }
%"class.absl::optional_internal::optional_data_base.988" = type { %"class.absl::optional_internal::optional_data_dtor_base.989" }
%"class.absl::optional_internal::optional_data_dtor_base.989" = type { i8, %union.anon.990 }
%union.anon.990 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.996" }
%"class.blink::HeapHashSet.996" = type { %"class.WTF::HashSet.999" }
%"class.WTF::HashSet.999" = type { %"class.WTF::HashTable.1000" }
%"class.WTF::HashTable.1000" = type <{ %"class.blink::WeakMember.1002"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1002" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1003" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1004" }
%"class.blink::HeapHashMap.1004" = type { %"class.WTF::HashMap.1007" }
%"class.WTF::HashMap.1007" = type { %"class.WTF::HashTable.1008" }
%"class.WTF::HashTable.1008" = type <{ %"struct.WTF::KeyValuePair.1010"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1010" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1011" = type { %"class.std::__1::__compressed_pair.1012" }
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.1013" }
%"struct.std::__1::__compressed_pair_elem.1013" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1014", %"class.base::WeakPtrFactory.1019" }
%"class.WTF::HashMap.1014" = type { %"class.WTF::HashTable.1015" }
%"class.WTF::HashTable.1015" = type <{ %"struct.WTF::KeyValuePair.1018"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1018" = type opaque
%"class.base::WeakPtrFactory.1019" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1023" }
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1783" }
%"class.blink::WeakMember.1783" = type { %"class.blink::MemberBase.1784" }
%"class.blink::MemberBase.1784" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.1785", i64, %"class.std::__1::map.1786", i8*, i64, %"class.base::WeakPtrFactory.1795" }
%"class.base::RepeatingCallback.1785" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1786" = type { %"class.std::__1::__tree.1787" }
%"class.std::__1::__tree.1787" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1788", %"class.std::__1::__compressed_pair.1792" }
%"class.std::__1::__compressed_pair.1788" = type { %"struct.std::__1::__compressed_pair_elem.605" }
%"class.std::__1::__compressed_pair.1792" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.base::WeakPtrFactory.1795" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1025" = type { %"class.WTF::HashSet.1028" }
%"class.WTF::HashSet.1028" = type { %"class.WTF::HashTable.1029" }
%"class.WTF::HashTable.1029" = type <{ %"class.blink::WeakMember.1031"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1031" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.801", %"class.blink::Member.1032", %"class.blink::Member.1034", %"class.std::__1::unique_ptr.1036", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1042" }
%"class.blink::Member.1032" = type { %"class.blink::MemberBase.1033" }
%"class.blink::MemberBase.1033" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1034" = type { %"class.blink::MemberBase.1035" }
%"class.blink::MemberBase.1035" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.1408", %"class.blink::Member.1413", %"class.std::__1::unique_ptr.1415", %"class.std::__1::unique_ptr.664", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.1604, %"class.WTF::AtomicString", i32, %"class.absl::optional.1494", %class.scoped_refptr.594, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1460", i8, %"class.absl::optional.1466", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member.801", %"class.blink::Member.1605", %"class.blink::Member.118", %"class.blink::Member.1677", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote.1679", %class.scoped_refptr.591, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.1692", %"class.std::__1::unique_ptr.1471", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.1694", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.1699, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.1713, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.1714", %"class.blink::Member.1729", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.1742", %"class.WTF::Vector.694", i8, i8, i8, %"class.blink::WebVector.1593", %"class.blink::WebVector.1593", %"class.mojo::Remote.1747" }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.WTF::Vector.1408" = type { %"class.WTF::VectorBuffer.1409" }
%"class.WTF::VectorBuffer.1409" = type { %"class.WTF::VectorBufferBase.1410" }
%"class.WTF::VectorBufferBase.1410" = type { %"class.blink::KURL"*, i32, i32 }
%"class.blink::Member.1413" = type { %"class.blink::MemberBase.1414" }
%"class.blink::MemberBase.1414" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.std::__1::unique_ptr.1415" = type { %"class.std::__1::__compressed_pair.1416" }
%"class.std::__1::__compressed_pair.1416" = type { %"struct.std::__1::__compressed_pair_elem.1417" }
%"struct.std::__1::__compressed_pair_elem.1417" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.1460", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.1466", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.1471", %"class.base::UnguessableToken", %"class.blink::WebVector.1477", %"class.base::TickClock"*, %"class.blink::WebVector.1486", %"class.absl::optional.1494", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.1507", %"class.blink::WebVector.1499", i8, %"class.blink::WebVector.1526", i8, %"class.std::__1::unique_ptr.1534", %"class.blink::WebVector.1593", %"class.blink::WebVector.1593" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr.1418" }
%"class.blink::WebPrivatePtr.1418" = type { i8* }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector.1420" }
%"class.std::__1::vector.1420" = type { %"class.std::__1::__vector_base.1421" }
%"class.std::__1::__vector_base.1421" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.1455" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.1455" = type { %"struct.std::__1::__compressed_pair_elem.1456" }
%"struct.std::__1::__compressed_pair_elem.1456" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.1422", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.1422" = type { %"class.std::__1::__compressed_pair.1423" }
%"class.std::__1::__compressed_pair.1423" = type { %"struct.std::__1::__compressed_pair_elem.1424" }
%"struct.std::__1::__compressed_pair_elem.1424" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr.1419" }
%"class.blink::WebPrivatePtr.1419" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.1477" = type { %"class.std::__1::vector.1478" }
%"class.std::__1::vector.1478" = type { %"class.std::__1::__vector_base.1479" }
%"class.std::__1::__vector_base.1479" = type { %"class.std::__1::unique_ptr.1480"*, %"class.std::__1::unique_ptr.1480"*, %"class.std::__1::__compressed_pair.1481" }
%"class.std::__1::unique_ptr.1480" = type opaque
%"class.std::__1::__compressed_pair.1481" = type { %"struct.std::__1::__compressed_pair_elem.1482" }
%"struct.std::__1::__compressed_pair_elem.1482" = type { %"class.std::__1::unique_ptr.1480"* }
%"class.blink::WebVector.1486" = type { %"class.std::__1::vector.1487" }
%"class.std::__1::vector.1487" = type { %"class.std::__1::__vector_base.1488" }
%"class.std::__1::__vector_base.1488" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1489" }
%"class.std::__1::__compressed_pair.1489" = type { %"struct.std::__1::__compressed_pair_elem.1490" }
%"struct.std::__1::__compressed_pair_elem.1490" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"class.absl::optional.1507" = type { %"class.absl::optional_internal::optional_data.1508" }
%"class.absl::optional_internal::optional_data.1508" = type { %"class.absl::optional_internal::optional_data_base.1509" }
%"class.absl::optional_internal::optional_data_base.1509" = type { %"class.absl::optional_internal::optional_data_dtor_base.1510" }
%"class.absl::optional_internal::optional_data_dtor_base.1510" = type { i8, [7 x i8], %union.anon.1511 }
%union.anon.1511 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector.1499" = type { %"class.std::__1::vector.1500" }
%"class.std::__1::vector.1500" = type { %"class.std::__1::__vector_base.1501" }
%"class.std::__1::__vector_base.1501" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.1502" }
%"class.std::__1::__compressed_pair.1502" = type { %"struct.std::__1::__compressed_pair_elem.1503" }
%"struct.std::__1::__compressed_pair_elem.1503" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.1526" = type { %"class.std::__1::vector.1527" }
%"class.std::__1::vector.1527" = type { %"class.std::__1::__vector_base.1528" }
%"class.std::__1::__vector_base.1528" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1529" }
%"class.std::__1::__compressed_pair.1529" = type { %"struct.std::__1::__compressed_pair_elem.1530" }
%"struct.std::__1::__compressed_pair_elem.1530" = type { i32* }
%"class.std::__1::unique_ptr.1534" = type { %"class.std::__1::__compressed_pair.1535" }
%"class.std::__1::__compressed_pair.1535" = type { %"struct.std::__1::__compressed_pair_elem.1536" }
%"struct.std::__1::__compressed_pair_elem.1536" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.1537" }
%"class.blink::WebVector.1537" = type { %"class.std::__1::vector.1538" }
%"class.std::__1::vector.1538" = type { %"class.std::__1::__vector_base.1539" }
%"class.std::__1::__vector_base.1539" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.1585" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.1540", %"class.blink::WebVector.1548", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector.1499", i32, [4 x i8], %"class.absl::optional.1580", %"class.blink::WebVector.1499" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.1540" = type { %"class.std::__1::vector.1541" }
%"class.std::__1::vector.1541" = type { %"class.std::__1::__vector_base.1542" }
%"class.std::__1::__vector_base.1542" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.1543" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.1543" = type { %"struct.std::__1::__compressed_pair_elem.1544" }
%"struct.std::__1::__compressed_pair_elem.1544" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.1548" = type { %"class.std::__1::vector.1549" }
%"class.std::__1::vector.1549" = type { %"class.std::__1::__vector_base.1550" }
%"class.std::__1::__vector_base.1550" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.1575" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.1551", %"class.blink::WebVector.1499", %"class.blink::WebVector.1559", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.1551" = type { %"class.std::__1::vector.1552" }
%"class.std::__1::vector.1552" = type { %"class.std::__1::__vector_base.1553" }
%"class.std::__1::__vector_base.1553" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.1559" = type { %"class.std::__1::vector.1560" }
%"class.std::__1::vector.1560" = type { %"class.std::__1::__vector_base.1561" }
%"class.std::__1::__vector_base.1561" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.1570" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.1562" }
%"class.blink::WebVector.1562" = type { %"class.std::__1::vector.1563" }
%"class.std::__1::vector.1563" = type { %"class.std::__1::__vector_base.1564" }
%"class.std::__1::__vector_base.1564" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1565" }
%"class.std::__1::__compressed_pair.1565" = type { %"struct.std::__1::__compressed_pair_elem.1566" }
%"struct.std::__1::__compressed_pair_elem.1566" = type { i8* }
%"class.std::__1::__compressed_pair.1570" = type { %"struct.std::__1::__compressed_pair_elem.1571" }
%"struct.std::__1::__compressed_pair_elem.1571" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.1575" = type { %"struct.std::__1::__compressed_pair_elem.1576" }
%"struct.std::__1::__compressed_pair_elem.1576" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.1580" = type { %"class.absl::optional_internal::optional_data.1581" }
%"class.absl::optional_internal::optional_data.1581" = type { %"class.absl::optional_internal::optional_data_base.1582" }
%"class.absl::optional_internal::optional_data_base.1582" = type { %"class.absl::optional_internal::optional_data_dtor_base.1583" }
%"class.absl::optional_internal::optional_data_dtor_base.1583" = type { i8, [7 x i8], %union.anon.1584 }
%union.anon.1584 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector.1499", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%class.scoped_refptr.1604 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.absl::optional.1494" = type { %"class.absl::optional_internal::optional_data.1495" }
%"class.absl::optional_internal::optional_data.1495" = type { %"class.absl::optional_internal::optional_data_base.1496" }
%"class.absl::optional_internal::optional_data_base.1496" = type { %"class.absl::optional_internal::optional_data_dtor_base.1497" }
%"class.absl::optional_internal::optional_data_dtor_base.1497" = type { i8, %union.anon.1498 }
%union.anon.1498 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector.1499", %"class.blink::WebString", %"class.blink::WebVector.1499", %"class.blink::WebVector.1499" }
%"class.std::__1::unique_ptr.1460" = type { %"class.std::__1::__compressed_pair.1461" }
%"class.std::__1::__compressed_pair.1461" = type { %"struct.std::__1::__compressed_pair_elem.1462" }
%"struct.std::__1::__compressed_pair_elem.1462" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.1466" = type { %"class.absl::optional_internal::optional_data.1467" }
%"class.absl::optional_internal::optional_data.1467" = type { %"class.absl::optional_internal::optional_data_base.1468" }
%"class.absl::optional_internal::optional_data_base.1468" = type { %"class.absl::optional_internal::optional_data_dtor_base.1469" }
%"class.absl::optional_internal::optional_data_dtor_base.1469" = type { i8, %union.anon.1470 }
%union.anon.1470 = type { i32 }
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.1512", %"class.base::flat_map.974", i8, [7 x i8] }>
%"class.std::__1::vector.1512" = type { %"class.std::__1::__vector_base.1513" }
%"class.std::__1::__vector_base.1513" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.1521" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.1514", i8, i8, [6 x i8] }>
%"class.std::__1::vector.1514" = type { %"class.std::__1::__vector_base.1515" }
%"class.std::__1::__vector_base.1515" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.1516" }
%"class.std::__1::__compressed_pair.1516" = type { %"struct.std::__1::__compressed_pair_elem.1517" }
%"struct.std::__1::__compressed_pair_elem.1517" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.1521" = type { %"struct.std::__1::__compressed_pair_elem.1522" }
%"struct.std::__1::__compressed_pair_elem.1522" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.1605" = type { %"class.blink::MemberBase.1606" }
%"class.blink::MemberBase.1606" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.694", %"class.blink::Member.1609", %"class.absl::optional.1611", i64, i64, i32, %class.scoped_refptr.1616, %class.scoped_refptr.1604, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.1616 }
%"class.blink::Member.1609" = type { %"class.blink::MemberBase.1610" }
%"class.blink::MemberBase.1610" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.absl::optional.1611" = type { %"class.absl::optional_internal::optional_data.1612" }
%"class.absl::optional_internal::optional_data.1612" = type { %"class.absl::optional_internal::optional_data_base.1613" }
%"class.absl::optional_internal::optional_data_base.1613" = type { %"class.absl::optional_internal::optional_data_dtor_base.1614" }
%"class.absl::optional_internal::optional_data_dtor_base.1614" = type { i8, %union.anon.1615 }
%union.anon.1615 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"class.blink::FloatSize" = type { float, float }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.gfx::PointF" = type { float, float }
%class.scoped_refptr.1616 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.1618", i64, %"class.WTF::Vector.1621", %"class.WTF::Vector.1626", %"class.WTF::Vector.1632", %"class.WTF::Vector.1650", %class.scoped_refptr.591, %"class.WTF::HashMap.1656", %"class.WTF::Vector.1661", %"class.WTF::Vector.1621", %"class.WTF::Vector.1667", %"class.WTF::HashMap.1672", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1617" }
%"class.base::RefCountedThreadSafe.1617" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1618" = type { %"class.std::__1::__compressed_pair.1619" }
%"class.std::__1::__compressed_pair.1619" = type { %"struct.std::__1::__compressed_pair_elem.1566" }
%"class.WTF::Vector.1626" = type { %"class.WTF::VectorBuffer.1627" }
%"class.WTF::VectorBuffer.1627" = type { %"class.WTF::VectorBufferBase.1628", [8 x i8] }
%"class.WTF::VectorBufferBase.1628" = type { %class.scoped_refptr.1629*, i32, i32 }
%class.scoped_refptr.1629 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1632" = type { %"class.WTF::VectorBuffer.1633" }
%"class.WTF::VectorBuffer.1633" = type { %"class.WTF::VectorBufferBase.1634" }
%"class.WTF::VectorBufferBase.1634" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1636", %"class.std::__1::unique_ptr.1642" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1635 }
%class.scoped_refptr.1635 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1636" = type { %"class.std::__1::__compressed_pair.1637" }
%"class.std::__1::__compressed_pair.1637" = type { %"struct.std::__1::__compressed_pair_elem.1638" }
%"struct.std::__1::__compressed_pair_elem.1638" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1642" = type { %"class.std::__1::__compressed_pair.1643" }
%"class.std::__1::__compressed_pair.1643" = type { %"struct.std::__1::__compressed_pair_elem.1644" }
%"struct.std::__1::__compressed_pair_elem.1644" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1650" = type { %"class.WTF::VectorBuffer.1651" }
%"class.WTF::VectorBuffer.1651" = type { %"class.WTF::VectorBufferBase.1652" }
%"class.WTF::VectorBufferBase.1652" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1653", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1653" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1656" = type { %"class.WTF::HashTable.1657" }
%"class.WTF::HashTable.1657" = type <{ %"struct.WTF::KeyValuePair.1660"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1660" = type opaque
%"class.WTF::Vector.1661" = type { %"class.WTF::VectorBuffer.1662" }
%"class.WTF::VectorBuffer.1662" = type { %"class.WTF::VectorBufferBase.1663" }
%"class.WTF::VectorBufferBase.1663" = type { %"class.mojo::ScopedHandleBase.1664"*, i32, i32 }
%"class.mojo::ScopedHandleBase.1664" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.1621" = type { %"class.WTF::VectorBuffer.1622" }
%"class.WTF::VectorBuffer.1622" = type { %"class.WTF::VectorBufferBase.1623", [16 x i8] }
%"class.WTF::VectorBufferBase.1623" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1667" = type { %"class.WTF::VectorBuffer.1668" }
%"class.WTF::VectorBuffer.1668" = type { %"class.WTF::VectorBufferBase.1669" }
%"class.WTF::VectorBufferBase.1669" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.1672" = type { %"class.WTF::HashTable.1673" }
%"class.WTF::HashTable.1673" = type <{ %"struct.WTF::KeyValuePair.1676"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1676" = type { i8**, %"class.std::__1::unique_ptr.1771" }
%"class.std::__1::unique_ptr.1771" = type { %"class.std::__1::__compressed_pair.1772" }
%"class.std::__1::__compressed_pair.1772" = type { %"struct.std::__1::__compressed_pair_elem.1773" }
%"struct.std::__1::__compressed_pair_elem.1773" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::Member.1677" = type { %"class.blink::MemberBase.1678" }
%"class.blink::MemberBase.1678" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1431", %class.scoped_refptr.1445, %class.scoped_refptr.1446, %"struct.blink::CacheControlHeader", %"class.absl::optional.718", %"class.absl::optional.1377", %"class.absl::optional.1377", %"class.absl::optional.1377", i64, %"class.blink::KURL", %"class.WTF::Vector.1408", %"class.WTF::String", %"class.WTF::Vector.694", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.991", %"class.WTF::Vector.694", %"class.blink::KURL", %"class.absl::optional.1447" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.1425" }
%"class.WTF::HashMap.1425" = type { %"class.WTF::HashTable.1426" }
%"class.WTF::HashTable.1426" = type <{ %"struct.WTF::KeyValuePair.1429"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1429" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.1430", i8 }
%"struct.std::__1::array.1430" = type { [16 x i8] }
%"class.absl::optional.1431" = type { %"class.absl::optional_internal::optional_data.1432" }
%"class.absl::optional_internal::optional_data.1432" = type { %"class.absl::optional_internal::optional_data_base.1433" }
%"class.absl::optional_internal::optional_data_base.1433" = type { %"class.absl::optional_internal::optional_data_dtor_base.1434" }
%"class.absl::optional_internal::optional_data_dtor_base.1434" = type { i8, %union.anon.1435 }
%union.anon.1435 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.694", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1436", %"class.WTF::Vector.1440" }
%"class.WTF::Vector.1436" = type { %"class.WTF::VectorBuffer.1437" }
%"class.WTF::VectorBuffer.1437" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::Vector.1440" = type { %"class.WTF::VectorBuffer.1441" }
%"class.WTF::VectorBuffer.1441" = type { %"class.WTF::VectorBufferBase.1442" }
%"class.WTF::VectorBufferBase.1442" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1445 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1446 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.718", %"class.absl::optional.718" }
%"class.absl::optional.1377" = type { %"class.absl::optional_internal::optional_data.1378" }
%"class.absl::optional_internal::optional_data.1378" = type { %"class.absl::optional_internal::optional_data_base.1379" }
%"class.absl::optional_internal::optional_data_base.1379" = type { %"class.absl::optional_internal::optional_data_dtor_base.1380" }
%"class.absl::optional_internal::optional_data_dtor_base.1380" = type { i8, %union.anon.1381 }
%union.anon.1381 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1370" }
%"class.base::time_internal::TimeBase.1370" = type { i64 }
%"class.absl::optional.1447" = type { %"class.absl::optional_internal::optional_data.1448" }
%"class.absl::optional_internal::optional_data.1448" = type { %"class.absl::optional_internal::optional_data_base.1449" }
%"class.absl::optional_internal::optional_data_base.1449" = type { %"class.absl::optional_internal::optional_data_dtor_base.1450" }
%"class.absl::optional_internal::optional_data_dtor_base.1450" = type { i8, %union.anon.1451 }
%union.anon.1451 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.mojo::Remote.1679" = type { %"class.mojo::internal::InterfacePtrState.1680" }
%"class.mojo::internal::InterfacePtrState.1680" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1681" }
%"class.std::__1::unique_ptr.1681" = type { %"class.std::__1::__compressed_pair.1682" }
%"class.std::__1::__compressed_pair.1682" = type { %"struct.std::__1::__compressed_pair_elem.1683" }
%"struct.std::__1::__compressed_pair_elem.1683" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.718", %"class.absl::optional.718", %"class.absl::optional.718", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.1687", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.1034" }
%"class.WTF::Vector.1687" = type { %"class.WTF::VectorBuffer.1688" }
%"class.WTF::VectorBuffer.1688" = type { %"class.WTF::VectorBufferBase.1689" }
%"class.WTF::VectorBufferBase.1689" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.base::Clock" = type opaque
%"class.blink::Member.1692" = type { %"class.blink::MemberBase.1693" }
%"class.blink::MemberBase.1693" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.1471" = type { %"class.std::__1::__compressed_pair.1472" }
%"class.std::__1::__compressed_pair.1472" = type { %"struct.std::__1::__compressed_pair_elem.1473" }
%"struct.std::__1::__compressed_pair_elem.1473" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map.974", %"class.base::flat_map" }
%"class.WTF::Vector.1694" = type { %"class.WTF::VectorBuffer.1695" }
%"class.WTF::VectorBuffer.1695" = type { %"class.WTF::VectorBufferBase.1696" }
%"class.WTF::VectorBufferBase.1696" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%class.scoped_refptr.1699 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1700", i64, %"class.WTF::Vector.1702", %"class.WTF::Vector.1707" }
%"class.WTF::RefCounted.1700" = type { %"class.base::RefCounted.1701" }
%"class.base::RefCounted.1701" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1702" = type { %"class.WTF::VectorBuffer.1703" }
%"class.WTF::VectorBuffer.1703" = type { %"class.WTF::VectorBufferBase.1704" }
%"class.WTF::VectorBufferBase.1704" = type { i8*, i32, i32 }
%"class.WTF::Vector.1707" = type { %"class.WTF::VectorBuffer.1708" }
%"class.WTF::VectorBuffer.1708" = type { %"class.WTF::VectorBufferBase.1709" }
%"class.WTF::VectorBufferBase.1709" = type { %"class.std::__1::unique_ptr.1710"*, i32, i32 }
%"class.std::__1::unique_ptr.1710" = type opaque
%class.scoped_refptr.1713 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::Member.1714" = type { %"class.blink::MemberBase.1715" }
%"class.blink::MemberBase.1715" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap.1718", %"class.std::__1::unique_ptr.1723", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap.1718" = type { %"class.WTF::HashTable.1719" }
%"class.WTF::HashTable.1719" = type <{ %"struct.WTF::KeyValuePair.1722"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1722" = type { %"class.WTF::Vector.1843", %class.scoped_refptr.1847 }
%"class.WTF::Vector.1843" = type { %"class.WTF::VectorBuffer.1844" }
%"class.WTF::VectorBuffer.1844" = type { %"class.WTF::VectorBufferBase.819", [32 x i8] }
%"class.WTF::VectorBufferBase.819" = type { i8*, i32, i32 }
%class.scoped_refptr.1847 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.1848", %"class.WTF::Vector.1850", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.1848" = type { %"class.base::RefCounted.1849" }
%"class.base::RefCounted.1849" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1850" = type { %"class.WTF::VectorBuffer.1851" }
%"class.WTF::VectorBuffer.1851" = type { %"class.WTF::VectorBufferBase.819" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.1854", i64, %"class.absl::optional.1859" }
%"class.std::__1::unique_ptr.1854" = type { %"class.std::__1::__compressed_pair.1855" }
%"class.std::__1::__compressed_pair.1855" = type { %"struct.std::__1::__compressed_pair_elem.1566" }
%"class.absl::optional.1859" = type { %"class.absl::optional_internal::optional_data.1860" }
%"class.absl::optional_internal::optional_data.1860" = type { %"class.absl::optional_internal::optional_data_base.1861" }
%"class.absl::optional_internal::optional_data_base.1861" = type { %"class.absl::optional_internal::optional_data_dtor_base.1862" }
%"class.absl::optional_internal::optional_data_dtor_base.1862" = type { i8, %union.anon.1863 }
%union.anon.1863 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.1864", %"class.std::__1::unique_ptr.1865" }
%"class.mojo::ScopedHandleBase.1864" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.1865" = type { %"class.std::__1::__compressed_pair.1866" }
%"class.std::__1::__compressed_pair.1866" = type { %"struct.std::__1::__compressed_pair_elem.1867" }
%"struct.std::__1::__compressed_pair_elem.1867" = type { i8* }
%"class.std::__1::unique_ptr.1723" = type { %"class.std::__1::__compressed_pair.1724" }
%"class.std::__1::__compressed_pair.1724" = type { %"struct.std::__1::__compressed_pair_elem.1725" }
%"struct.std::__1::__compressed_pair_elem.1725" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.blink::Member.1729" = type { %"class.blink::MemberBase.1730" }
%"class.blink::MemberBase.1730" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type opaque
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet.1735" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.1731", %"class.std::__1::bitset.1731", %"class.std::__1::bitset.1733" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.1731" = type { %"class.std::__1::__bitset.1732" }
%"class.std::__1::__bitset.1732" = type { [11 x i64] }
%"class.std::__1::bitset.1733" = type { %"class.std::__1::__bitset.1734" }
%"class.std::__1::__bitset.1734" = type { [2 x i64] }
%"class.blink::HeapHashSet.1735" = type { %"class.WTF::HashSet.1738" }
%"class.WTF::HashSet.1738" = type { %"class.WTF::HashTable.1739" }
%"class.WTF::HashTable.1739" = type <{ %"class.blink::Member.1741"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1741" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.WTF::Vector.1742" = type { %"class.WTF::VectorBuffer.1743" }
%"class.WTF::VectorBuffer.1743" = type { %"class.WTF::VectorBufferBase.1744" }
%"class.WTF::VectorBufferBase.1744" = type { i32*, i32, i32 }
%"class.blink::WebVector.1593" = type { %"class.std::__1::vector.1594" }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.1596" }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.1747" = type { %"class.mojo::internal::InterfacePtrState.1748" }
%"class.mojo::internal::InterfacePtrState.1748" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1749" }
%"class.std::__1::unique_ptr.1749" = type { %"class.std::__1::__compressed_pair.1750" }
%"class.std::__1::__compressed_pair.1750" = type { %"struct.std::__1::__compressed_pair_elem.1751" }
%"struct.std::__1::__compressed_pair_elem.1751" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1036" = type { %"class.std::__1::__compressed_pair.1037" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.1038" }
%"struct.std::__1::__compressed_pair_elem.1038" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.WTF::HashSet.1042" = type { %"class.WTF::HashTable.1043" }
%"class.WTF::HashTable.1043" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1046" = type { %"class.blink::MemberBase.1047" }
%"class.blink::MemberBase.1047" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1136", %"class.blink::Member.801", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1141", i8, i32, %"class.blink::Color", %"class.absl::optional.1143", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1148", %"class.blink::Member.1150", %"class.blink::Member.1150", %"class.std::__1::unique_ptr.1153", i32, [4 x i8], %"class.WTF::HashSet.1156", %"class.blink::Member.1163", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1165", %"class.blink::HeapHashSet.1172", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1180", i8, %"class.blink::Member.1186", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1198", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1212", i8, %"class.std::__1::unique_ptr.1218", %"class.std::__1::unique_ptr.1335", %"class.WTF::Vector.1341", i32, %class.scoped_refptr.1346, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1347", %"class.blink::Member.1349", %"class.blink::Member.1351", %"class.blink::HeapHashSet.1353", %"class.blink::HeapHashSet.1360", %"class.std::__1::unique_ptr.1367", %"class.std::__1::unique_ptr.1374", %"class.WTF::Vector.101" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1136" = type { %"class.WTF::HashTable.1137" }
%"class.WTF::HashTable.1137" = type <{ %class.scoped_refptr.1140*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1140 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1141" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1142", { i64, i64 } }
%"class.blink::WeakMember.1142" = type { %"class.blink::MemberBase.1047" }
%"class.absl::optional.1143" = type { %"class.absl::optional_internal::optional_data.1144" }
%"class.absl::optional_internal::optional_data.1144" = type { %"class.absl::optional_internal::optional_data_base.1145" }
%"class.absl::optional_internal::optional_data_base.1145" = type { %"class.absl::optional_internal::optional_data_dtor_base.1146" }
%"class.absl::optional_internal::optional_data_dtor_base.1146" = type { i8, %union.anon.1147 }
%union.anon.1147 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1148" = type { %"class.blink::MemberBase.1149" }
%"class.blink::MemberBase.1149" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1150" = type { %"class.blink::MemberBase.1151" }
%"class.blink::MemberBase.1151" = type { %"class.blink::HeapHashSet.1152"* }
%"class.blink::HeapHashSet.1152" = type opaque
%"class.std::__1::unique_ptr.1153" = type { %"class.std::__1::__compressed_pair.1154" }
%"class.std::__1::__compressed_pair.1154" = type { %"struct.std::__1::__compressed_pair_elem.1155" }
%"struct.std::__1::__compressed_pair_elem.1155" = type { %"class.WTF::HashSet.1156"* }
%"class.WTF::HashSet.1156" = type { %"class.WTF::HashTable.1157" }
%"class.WTF::HashTable.1157" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1163" = type { %"class.blink::MemberBase.1164" }
%"class.blink::MemberBase.1164" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1165" = type { %"class.WTF::HashSet.1168" }
%"class.WTF::HashSet.1168" = type { %"class.WTF::HashTable.1169" }
%"class.WTF::HashTable.1169" = type <{ %"class.blink::Member.1171"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1171" = type opaque
%"class.blink::HeapHashSet.1172" = type { %"class.WTF::HashSet.1175" }
%"class.WTF::HashSet.1175" = type { %"class.WTF::HashTable.1176" }
%"class.WTF::HashTable.1176" = type <{ %"class.blink::Member.1178"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1178" = type { %"class.blink::MemberBase.1179" }
%"class.blink::MemberBase.1179" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1180" = type { %"class.std::__1::__compressed_pair.1181" }
%"class.std::__1::__compressed_pair.1181" = type { %"struct.std::__1::__compressed_pair_elem.1182" }
%"struct.std::__1::__compressed_pair_elem.1182" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1186" = type { %"class.blink::MemberBase.1187" }
%"class.blink::MemberBase.1187" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1190", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1190" = type { %"class.WTF::HashTable.1191" }
%"class.WTF::HashTable.1191" = type <{ %"struct.WTF::KeyValuePair.1193"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1193" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1194", i32, i32 }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1198" = type { %"class.WTF::LinkedHashSet.1201" }
%"class.WTF::LinkedHashSet.1201" = type { %"class.WTF::HashMap.1202", %"class.WTF::VectorBackedLinkedList.1206" }
%"class.WTF::HashMap.1202" = type { %"class.WTF::HashTable.1203" }
%"class.WTF::HashTable.1203" = type <{ %"struct.WTF::KeyValuePair.1205"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1205" = type opaque
%"class.WTF::VectorBackedLinkedList.1206" = type { %"class.WTF::Vector.1207", i32, i32 }
%"class.WTF::Vector.1207" = type { %"class.WTF::VectorBuffer.1208" }
%"class.WTF::VectorBuffer.1208" = type { %"class.WTF::VectorBufferBase.1209" }
%"class.WTF::VectorBufferBase.1209" = type { %"class.WTF::VectorBackedLinkedListNode.1210"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1210" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1212" = type { %"class.std::__1::__compressed_pair.1213" }
%"class.std::__1::__compressed_pair.1213" = type { %"struct.std::__1::__compressed_pair_elem.1214" }
%"struct.std::__1::__compressed_pair_elem.1214" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1218" = type { %"class.std::__1::__compressed_pair.1219" }
%"class.std::__1::__compressed_pair.1219" = type { %"struct.std::__1::__compressed_pair_elem.1220" }
%"struct.std::__1::__compressed_pair_elem.1220" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1221, %class.scoped_refptr.1221, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1312", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1317", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1221 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1222", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1229" }
%"class.WTF::RefCounted.1222" = type { %"class.base::RefCounted.1223" }
%"class.base::RefCounted.1223" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1224", i32, [4 x i8] }>
%"class.WTF::Vector.1224" = type { %"class.WTF::VectorBuffer.1225" }
%"class.WTF::VectorBuffer.1225" = type { %"class.WTF::VectorBufferBase.1226" }
%"class.WTF::VectorBufferBase.1226" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1229" = type { %"class.WTF::VectorBuffer.1230" }
%"class.WTF::VectorBuffer.1230" = type { %"class.WTF::VectorBufferBase.1231" }
%"class.WTF::VectorBufferBase.1231" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1235", %"class.std::__1::unique_ptr.1284", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1232, %class.scoped_refptr.1233, %class.scoped_refptr.1234 }
%class.scoped_refptr.1232 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1248", i8, i8, %class.scoped_refptr.1232, i32, i32 }
%"class.WTF::RefCounted.1248" = type { %"class.base::RefCounted.1249" }
%"class.base::RefCounted.1249" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1233 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1403" }
%"class.blink::PaintPropertyNode.1403" = type { %"class.WTF::RefCounted.1404", i8, i8, %class.scoped_refptr.1233, i32, i32 }
%"class.WTF::RefCounted.1404" = type { %"class.base::RefCounted.1405" }
%"class.base::RefCounted.1405" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1234 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1400" }
%"class.blink::PaintPropertyNode.1400" = type { %"class.WTF::RefCounted.1401", i8, i8, %class.scoped_refptr.1234, i32, i32 }
%"class.WTF::RefCounted.1401" = type { %"class.base::RefCounted.1402" }
%"class.base::RefCounted.1402" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1235" = type { %"class.std::__1::__compressed_pair.1236" }
%"class.std::__1::__compressed_pair.1236" = type { %"struct.std::__1::__compressed_pair_elem.1237" }
%"struct.std::__1::__compressed_pair_elem.1237" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1238", %"class.WTF::Vector.1243", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1238" = type { %"class.WTF::VectorBuffer.1239" }
%"class.WTF::VectorBuffer.1239" = type { %"class.WTF::VectorBufferBase.1240" }
%"class.WTF::VectorBufferBase.1240" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1243" = type { %"class.WTF::VectorBuffer.1244" }
%"class.WTF::VectorBuffer.1244" = type { %"class.WTF::VectorBufferBase.1245" }
%"class.WTF::VectorBufferBase.1245" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1263" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1256, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1257", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1250" }
%"class.std::__1::unique_ptr.1250" = type { %"class.std::__1::__compressed_pair.1251" }
%"class.std::__1::__compressed_pair.1251" = type { %"struct.std::__1::__compressed_pair_elem.1252" }
%"struct.std::__1::__compressed_pair_elem.1252" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1256 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1385", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1385" = type { %"class.WTF::RefCounted.1386", i8, i8, %class.scoped_refptr.1256, i32, i32 }
%"class.WTF::RefCounted.1386" = type { %"class.base::RefCounted.1387" }
%"class.base::RefCounted.1387" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1388" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1388" = type { %"class.absl::optional_internal::optional_data.1389" }
%"class.absl::optional_internal::optional_data.1389" = type { %"class.absl::optional_internal::optional_data_base.1390" }
%"class.absl::optional_internal::optional_data_base.1390" = type { %"class.absl::optional_internal::optional_data_dtor_base.1391" }
%"class.absl::optional_internal::optional_data_dtor_base.1391" = type { i8, %union.anon.1392 }
%union.anon.1392 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1393", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1393" = type { %"class.std::__1::__vector_base.1394" }
%"class.std::__1::__vector_base.1394" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1395" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1395" = type { %"struct.std::__1::__compressed_pair_elem.1396" }
%"struct.std::__1::__compressed_pair_elem.1396" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1257" = type { %"class.std::__1::__compressed_pair.1258" }
%"class.std::__1::__compressed_pair.1258" = type { %"struct.std::__1::__compressed_pair_elem.1259" }
%"struct.std::__1::__compressed_pair_elem.1259" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1263" = type { %"class.std::__1::__compressed_pair.1264" }
%"class.std::__1::__compressed_pair.1264" = type { %"struct.std::__1::__compressed_pair_elem.1265" }
%"struct.std::__1::__compressed_pair_elem.1265" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1266", %"class.std::__1::unique_ptr.1272", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1266" = type { %"class.std::__1::__compressed_pair.1267" }
%"class.std::__1::__compressed_pair.1267" = type { %"struct.std::__1::__compressed_pair_elem.1268" }
%"struct.std::__1::__compressed_pair_elem.1268" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1272" = type { %"class.std::__1::__compressed_pair.1273" }
%"class.std::__1::__compressed_pair.1273" = type { %"struct.std::__1::__compressed_pair_elem.1274" }
%"struct.std::__1::__compressed_pair_elem.1274" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1284" = type { %"class.std::__1::__compressed_pair.1285" }
%"class.std::__1::__compressed_pair.1285" = type { %"struct.std::__1::__compressed_pair_elem.1286" }
%"struct.std::__1::__compressed_pair_elem.1286" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1287", %"class.absl::optional.1287" }
%"class.absl::optional.1287" = type { %"class.absl::optional_internal::optional_data.1288" }
%"class.absl::optional_internal::optional_data.1288" = type { %"class.absl::optional_internal::optional_data_base.1289" }
%"class.absl::optional_internal::optional_data_base.1289" = type { %"class.absl::optional_internal::optional_data_dtor_base.1290" }
%"class.absl::optional_internal::optional_data_dtor_base.1290" = type { i8, [3 x i8], %union.anon.1291 }
%union.anon.1291 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1229"*, %"class.absl::optional.1297", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1297" = type { %"class.absl::optional_internal::optional_data.1298" }
%"class.absl::optional_internal::optional_data.1298" = type { %"class.absl::optional_internal::optional_data_base.1299" }
%"class.absl::optional_internal::optional_data_base.1299" = type { %"class.absl::optional_internal::optional_data_dtor_base.1300" }
%"class.absl::optional_internal::optional_data_dtor_base.1300" = type { i8, %union.anon.1301 }
%union.anon.1301 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1302", %"class.WTF::Vector.1307" }
%"class.WTF::Vector.1302" = type { %"class.WTF::VectorBuffer.1303" }
%"class.WTF::VectorBuffer.1303" = type { %"class.WTF::VectorBufferBase.1304", [128 x i8] }
%"class.WTF::VectorBufferBase.1304" = type { i32*, i32, i32 }
%"class.WTF::Vector.1307" = type { %"class.WTF::VectorBuffer.1308" }
%"class.WTF::VectorBuffer.1308" = type { %"class.WTF::VectorBufferBase.1309", [128 x i8] }
%"class.WTF::VectorBufferBase.1309" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1312" = type { %"class.WTF::VectorBuffer.1313" }
%"class.WTF::VectorBuffer.1313" = type { %"class.WTF::VectorBufferBase.1314" }
%"class.WTF::VectorBufferBase.1314" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1317" = type { %"class.WTF::HashTable.1318" }
%"class.WTF::HashTable.1318" = type <{ %"struct.WTF::KeyValuePair.1321"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1321" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1322", %"class.WTF::Vector.1327" }
%"class.WTF::HashMap.1322" = type { %"class.WTF::HashTable.1323" }
%"class.WTF::HashTable.1323" = type <{ %"struct.WTF::KeyValuePair.1326"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1326" = type opaque
%"class.WTF::Vector.1327" = type { %"class.WTF::VectorBuffer.1328" }
%"class.WTF::VectorBuffer.1328" = type { %"class.WTF::VectorBufferBase.1329" }
%"class.WTF::VectorBufferBase.1329" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1335" = type { %"class.std::__1::__compressed_pair.1336" }
%"class.std::__1::__compressed_pair.1336" = type { %"struct.std::__1::__compressed_pair_elem.1337" }
%"struct.std::__1::__compressed_pair_elem.1337" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1341" = type { %"class.WTF::VectorBuffer.1342" }
%"class.WTF::VectorBuffer.1342" = type { %"class.WTF::VectorBufferBase.1343" }
%"class.WTF::VectorBufferBase.1343" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1346 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1347" = type { %"class.blink::MemberBase.1348" }
%"class.blink::MemberBase.1348" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1349" = type { %"class.blink::MemberBase.1350" }
%"class.blink::MemberBase.1350" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1351" = type { %"class.blink::MemberBase.1352" }
%"class.blink::MemberBase.1352" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1353" = type { %"class.WTF::HashSet.1356" }
%"class.WTF::HashSet.1356" = type { %"class.WTF::HashTable.1357" }
%"class.WTF::HashTable.1357" = type <{ %"class.blink::WeakMember.1359"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1359" = type opaque
%"class.blink::HeapHashSet.1360" = type { %"class.WTF::HashSet.1363" }
%"class.WTF::HashSet.1363" = type { %"class.WTF::HashTable.1364" }
%"class.WTF::HashTable.1364" = type <{ %"class.blink::WeakMember.1366"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1366" = type opaque
%"class.std::__1::unique_ptr.1367" = type { %"class.std::__1::__compressed_pair.1368" }
%"class.std::__1::__compressed_pair.1368" = type { %"struct.std::__1::__compressed_pair_elem.1369" }
%"struct.std::__1::__compressed_pair_elem.1369" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1374" = type { %"class.std::__1::__compressed_pair.1375" }
%"class.std::__1::__compressed_pair.1375" = type { %"struct.std::__1::__compressed_pair_elem.1376" }
%"struct.std::__1::__compressed_pair_elem.1376" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1377", i32, i32, i32, i8, [3 x i8] }>
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1054" = type { %"class.blink::MemberBase.1055" }
%"class.blink::MemberBase.1055" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1056" = type { %"class.blink::MemberBase.1057" }
%"class.blink::MemberBase.1057" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.1058 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1059" = type { %"class.blink::MemberBase.1060" }
%"class.blink::MemberBase.1060" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1061" = type { %"class.blink::MemberBase.1062" }
%"class.blink::MemberBase.1062" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1063" = type { %"class.blink::MemberBase.1064" }
%"class.blink::MemberBase.1064" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1065" = type { %"class.blink::MemberBase.1066" }
%"class.blink::MemberBase.1066" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1067" = type { %"class.blink::MemberBase.1068" }
%"class.blink::MemberBase.1068" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1069" = type { %"class.blink::MemberBase.1070" }
%"class.blink::MemberBase.1070" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1071" = type { %"class.blink::MemberBase.1072" }
%"class.blink::MemberBase.1072" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1073" }
%"class.blink::Member.1073" = type { %"class.blink::MemberBase.1074" }
%"class.blink::MemberBase.1074" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.1798" }
%"class.mojo::Remote.1798" = type { %"class.mojo::internal::InterfacePtrState.1799" }
%"class.mojo::internal::InterfacePtrState.1799" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1800" }
%"class.std::__1::unique_ptr.1800" = type { %"class.std::__1::__compressed_pair.1801" }
%"class.std::__1::__compressed_pair.1801" = type { %"struct.std::__1::__compressed_pair_elem.1802" }
%"struct.std::__1::__compressed_pair_elem.1802" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1081" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1082" = type { %"class.std::__1::__compressed_pair.1083" }
%"class.std::__1::__compressed_pair.1083" = type { %"struct.std::__1::__compressed_pair_elem.1084" }
%"struct.std::__1::__compressed_pair_elem.1084" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.991" = type { %"class.absl::optional_internal::optional_data.992" }
%"class.absl::optional_internal::optional_data.992" = type { %"class.absl::optional_internal::optional_data_base.993" }
%"class.absl::optional_internal::optional_data_base.993" = type { %"class.absl::optional_internal::optional_data_dtor_base.994" }
%"class.absl::optional_internal::optional_data_dtor_base.994" = type { i8, %union.anon.995 }
%union.anon.995 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.1088" = type { %"class.std::__1::__compressed_pair.1089" }
%"class.std::__1::__compressed_pair.1089" = type { %"struct.std::__1::__compressed_pair_elem.1090" }
%"struct.std::__1::__compressed_pair_elem.1090" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1094" }
%"class.blink::Member.1094" = type { %"class.blink::MemberBase.1095" }
%"class.blink::MemberBase.1095" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1808" }
%"class.mojo::AssociatedRemote.1808" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1809" }
%"class.mojo::internal::AssociatedInterfacePtrState.1809" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1810" }
%"class.std::__1::unique_ptr.1810" = type { %"class.std::__1::__compressed_pair.1811" }
%"class.std::__1::__compressed_pair.1811" = type { %"struct.std::__1::__compressed_pair_elem.1812" }
%"struct.std::__1::__compressed_pair_elem.1812" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1096" = type { %"class.blink::Member.1097" }
%"class.blink::Member.1097" = type { %"class.blink::MemberBase.1098" }
%"class.blink::MemberBase.1098" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1818" }
%"class.mojo::AssociatedRemote.1818" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1819" }
%"class.mojo::internal::AssociatedInterfacePtrState.1819" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1820" }
%"class.std::__1::unique_ptr.1820" = type { %"class.std::__1::__compressed_pair.1821" }
%"class.std::__1::__compressed_pair.1821" = type { %"struct.std::__1::__compressed_pair_elem.1822" }
%"struct.std::__1::__compressed_pair_elem.1822" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1099" }
%"class.blink::Member.1099" = type { %"class.blink::MemberBase.1100" }
%"class.blink::MemberBase.1100" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.801", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1828" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.714" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1828" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1101" = type { %"class.blink::Member.1102" }
%"class.blink::Member.1102" = type { %"class.blink::MemberBase.1103" }
%"class.blink::MemberBase.1103" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1831", %"class.blink::Member.801", %"class.mojo::AssociatedReceiver.1832" }
%"class.blink::ThreadState::PrefinalizerRegistration.1831" = type { i8 }
%"class.mojo::AssociatedReceiver.1832" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1833" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1833" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1104" }
%"class.blink::Member.1104" = type { %"class.blink::MemberBase.1105" }
%"class.blink::MemberBase.1105" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1836", %"class.blink::Member.801", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1836" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.872, %"class.std::__1::unique_ptr.714", %"class.base::WeakPtrFactory.1837" }
%"class.base::WeakPtrFactory.1837" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1106" = type { %"class.blink::Member.1107" }
%"class.blink::Member.1107" = type { %"class.blink::MemberBase.1108" }
%"class.blink::MemberBase.1108" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1840", %"class.blink::Member.801", %"class.mojo::AssociatedReceiver.1841" }
%"class.blink::ThreadState::PrefinalizerRegistration.1840" = type { i8 }
%"class.mojo::AssociatedReceiver.1841" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1842" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1842" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1109" = type { %"class.blink::MemberBase.1110" }
%"class.blink::MemberBase.1110" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1113" = type { %"class.blink::MemberBase.1114" }
%"class.blink::MemberBase.1114" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1115" = type { %"class.blink::MemberBase.1116" }
%"class.blink::MemberBase.1116" = type { %"class.blink::HeapHashMap.1117"* }
%"class.blink::HeapHashMap.1117" = type opaque
%"class.mojo::StructPtr.1118" = type { %"class.std::__1::unique_ptr.1119" }
%"class.std::__1::unique_ptr.1119" = type { %"class.std::__1::__compressed_pair.1120" }
%"class.std::__1::__compressed_pair.1120" = type { %"struct.std::__1::__compressed_pair_elem.1121" }
%"struct.std::__1::__compressed_pair_elem.1121" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1122", %"class.mojo::InlinedStructPtr.1123" }
%"class.mojo::InlinedStructPtr.1122" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1123" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1127" = type { %"class.blink::MemberBase.1128" }
%"class.blink::MemberBase.1128" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.absl::optional.1129" = type { %"class.absl::optional_internal::optional_data.1130" }
%"class.absl::optional_internal::optional_data.1130" = type { %"class.absl::optional_internal::optional_data_base.1131" }
%"class.absl::optional_internal::optional_data_base.1131" = type { %"class.absl::optional_internal::optional_data_dtor_base.1132" }
%"class.absl::optional_internal::optional_data_dtor_base.1132" = type { i8, %union.anon.1133 }
%union.anon.1133 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::Member.803" = type { %"class.blink::MemberBase.804" }
%"class.blink::MemberBase.804" = type { %"class.blink::WebFrameWidgetImpl"* }
%"class.blink::WebFrameWidgetImpl" = type opaque
%"class.blink::Member.805" = type { %"class.blink::MemberBase.806" }
%"class.blink::MemberBase.806" = type { %"class.blink::WebDevToolsAgentImpl"* }
%"class.blink::WebDevToolsAgentImpl" = type opaque
%"class.blink::WebAutofillClient" = type opaque
%"class.blink::WebContentCaptureClient" = type opaque
%"class.blink::WebContentSettingsClient" = type opaque
%"class.blink::Member.807" = type { %"class.blink::MemberBase.808" }
%"class.blink::MemberBase.808" = type { %"class.blink::FindInPage"* }
%"class.blink::FindInPage" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::Member.810" = type { %"class.blink::MemberBase.811" }
%"class.blink::MemberBase.811" = type { %"class.blink::ChromePrintContext"* }
%"class.blink::ChromePrintContext" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::WebInputMethodControllerImpl" = type { %"class.blink::WebInputMethodController", %"class.blink::Member.812" }
%"class.blink::WebInputMethodController" = type { i32 (...)** }
%"class.blink::Member.812" = type { %"class.blink::MemberBase.813" }
%"class.blink::MemberBase.813" = type { %"class.blink::WebLocalFrameImpl"* }
%"class.blink::WebTextCheckClient" = type opaque
%"class.blink::WebSpellCheckPanelHostClient" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.814" }
%"class.blink::Persistent.814" = type { %"class.blink::PersistentBase.815" }
%"class.blink::PersistentBase.815" = type { %"class.blink::WebLocalFrameImpl"*, %"class.blink::PersistentNodePtr" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.816, i32, i8, i8, [2 x i8] }>
%union.anon.816 = type { %"class.WTF::Vector.817" }
%"class.WTF::Vector.817" = type { %"class.WTF::VectorBuffer.818" }
%"class.WTF::VectorBuffer.818" = type { %"class.WTF::VectorBufferBase.819", [16 x i8] }
%"class.blink::WebEntities" = type { %"class.WTF::HashMap.827" }
%"class.WTF::HashMap.827" = type { %"class.WTF::HashTable.828" }
%"class.WTF::HashTable.828" = type <{ %"struct.WTF::KeyValuePair.831"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.831" = type { i32, %"class.WTF::String" }
%"class.blink::WebFrameSerializerClient" = type { i32 (...)** }
%"class.blink::WebFrameSerializer::LinkRewritingDelegate" = type { i32 (...)** }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::HeapHashSet.1755" = type { %"class.WTF::HashSet.1758" }
%"class.WTF::HashSet.1758" = type { %"class.WTF::HashTable.1759" }
%"class.WTF::HashTable.1759" = type <{ %"class.blink::Member.1761"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1761" = type { %"class.blink::MemberBase.1873" }
%"class.blink::MemberBase.1873" = type { %"class.blink::ShadowRoot"* }
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.374", %"class.blink::Member.1874", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.1874" = type { %"class.blink::MemberBase.1875" }
%"class.blink::MemberBase.1875" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.blink::HTMLMetaElement" = type { %"class.blink::HTMLElement" }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.1876", i8* }
%"class.WTF::StringAppend.1876" = type { i8*, %"class.WTF::String" }
%"class.blink::WebVector.1762" = type { %"class.std::__1::vector.1763" }
%"class.std::__1::vector.1763" = type { %"class.std::__1::__vector_base.1764" }
%"class.std::__1::__vector_base.1764" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1765" }
%"class.std::__1::__compressed_pair.1765" = type { %"struct.std::__1::__compressed_pair_elem.1766" }
%"struct.std::__1::__compressed_pair_elem.1766" = type { i8* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.31", %"class.WTF::Vector.1884" }
%"class.WTF::Vector.1884" = type { %"class.WTF::VectorBuffer.1885" }
%"class.WTF::VectorBuffer.1885" = type { %"class.WTF::VectorBufferBase.1886", [64 x i8] }
%"class.WTF::VectorBufferBase.1886" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.WTF::Vector.822" = type { %"class.WTF::VectorBuffer.823" }
%"class.WTF::VectorBuffer.823" = type { %"class.WTF::VectorBufferBase.824", [16 x i8] }
%"class.WTF::VectorBufferBase.824" = type { i16*, i32, i32 }
%"class.WTF::StringTypeAdapter.1877" = type <{ i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::StringTypeAdapter.1878" = type { %"class.WTF::StringTypeAdapter.1879" }
%"class.WTF::StringTypeAdapter.1879" = type { %"class.WTF::StringView" }

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

@.str = private unnamed_addr constant [5 x i8] c"<!--\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"<?xml version=\22\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"\22 encoding=\22\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"\22 standalone=\22yes\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"\22?>\0A\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"-->\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"=\22\00", align 1
@_ZN5blink10html_names11kSrcdocAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.7 = private unnamed_addr constant [12 x i8] c"javascript:\00", align 1
@_ZN5blink10html_names8kSrcAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.8 = private unnamed_addr constant [3 x i8] c"</\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c" />\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"about:internet\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.11 = private unnamed_addr constant [16 x i8] c"<base href=\22.\22>\00", align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"<base href=\22.\22 target=\22\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"\22>\00", align 1
@.str.14 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.15 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.16 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@.str.17 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.18 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.20 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.21 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@_ZN5blink10html_names8kMetaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kHTMLTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kBaseTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kHeadTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kIFrameTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8

@_ZN5blink22WebFrameSerializerImpl17SerializeDomParamC1ERKNS_4KURLERKN3WTF12TextEncodingEPNS_8DocumentE = hidden unnamed_addr alias void (%"class.blink::WebFrameSerializerImpl::SerializeDomParam"*, %"class.blink::KURL"*, %"class.WTF::TextEncoding"*, %"class.blink::Document"*), void (%"class.blink::WebFrameSerializerImpl::SerializeDomParam"*, %"class.blink::KURL"*, %"class.WTF::TextEncoding"*, %"class.blink::Document"*)* @_ZN5blink22WebFrameSerializerImpl17SerializeDomParamC2ERKNS_4KURLERKN3WTF12TextEncodingEPNS_8DocumentE
@_ZN5blink22WebFrameSerializerImplC1EPNS_13WebLocalFrameEPNS_24WebFrameSerializerClientEPNS_18WebFrameSerializer21LinkRewritingDelegateEb = hidden unnamed_addr alias void (%"class.blink::WebFrameSerializerImpl"*, %"class.blink::WebLocalFrame"*, %"class.blink::WebFrameSerializerClient"*, %"class.blink::WebFrameSerializer::LinkRewritingDelegate"*, i1), void (%"class.blink::WebFrameSerializerImpl"*, %"class.blink::WebLocalFrame"*, %"class.blink::WebFrameSerializerClient"*, %"class.blink::WebFrameSerializer::LinkRewritingDelegate"*, i1)* @_ZN5blink22WebFrameSerializerImplC2EPNS_13WebLocalFrameEPNS_24WebFrameSerializerClientEPNS_18WebFrameSerializer21LinkRewritingDelegateEb

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink22WebFrameSerializerImpl17SerializeDomParamC2ERKNS_4KURLERKN3WTF12TextEncodingEPNS_8DocumentE(%"class.blink::WebFrameSerializerImpl::SerializeDomParam"* nocapture, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::TextEncoding"* dereferenceable(8), %"class.blink::Document"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %0, i64 0, i32 0
  store %"class.blink::KURL"* %1, %"class.blink::KURL"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %0, i64 0, i32 1
  store %"class.WTF::TextEncoding"* %2, %"class.WTF::TextEncoding"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %0, i64 0, i32 2
  store %"class.blink::Document"* %3, %"class.blink::Document"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %0, i64 0, i32 3
  %9 = icmp eq %"class.blink::Document"* %3, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %3, i64 0, i32 107
  %12 = load i8, i8* %11, align 8
  %13 = and i8 %12, 1
  br label %14

14:                                               ; preds = %4, %10
  %15 = phi i8 [ 0, %4 ], [ %13, %10 ]
  store i8 %15, i8* %8, align 8
  %16 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %0, i64 0, i32 4
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %0, i64 0, i32 5
  store i8 0, i8* %17, align 2
  %18 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %0, i64 0, i32 7
  store %"class.blink::Element"* null, %"class.blink::Element"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %0, i64 0, i32 8
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %0, i64 0, i32 9
  store i8 0, i8* %20, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink22WebFrameSerializerImpl31PreActionBeforeSerializeOpenTagEPKNS_7ElementEPNS0_17SerializeDomParamEPb(%"class.blink::WebFrameSerializerImpl"* nocapture readnone, %"class.blink::Element"*, %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* nocapture, i8* nocapture) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.WTF::StringBuilder", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.blink::HeapHashSet.1755", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.blink::WebString", align 8
  %10 = alloca %"class.blink::WebURL", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = alloca %"class.WTF::StringView", align 8
  %20 = alloca %"class.blink::HeapHashSet.1755", align 8
  %21 = bitcast %"class.WTF::StringBuilder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %21) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 48, i1 false)
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %22, align 8
  %23 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 1
  %24 = bitcast %union.anon.816* %23 to i8*
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 2
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 3
  store i8 1, i8* %26, align 4
  %27 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 4
  store i8 0, i8* %27, align 1
  store i8 0, i8* %3, align 1
  %28 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i64 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %143, label %31

31:                                               ; preds = %4
  %32 = icmp eq %"class.blink::Element"* %1, null
  br i1 %32, label %424, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 48
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %59

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %40 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMetaTagE, align 8
  %41 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %39, i64 1, i32 2
  %44 = bitcast %"class.blink::Member"* %43 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %45 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 3, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 3, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %47, %49
  br i1 %50, label %51, label %59

51:                                               ; preds = %38
  %52 = bitcast %"class.blink::Element"* %1 to %"class.blink::HTMLMetaElement"*
  %53 = tail call i8* @_ZNK5blink15HTMLMetaElement15ComputeEncodingEv(%"class.blink::HTMLMetaElement"* nonnull %52) #12
  %54 = icmp eq i8* %53, null
  br i1 %54, label %55, label %57

55:                                               ; preds = %51
  %56 = load i32, i32* %34, align 8
  br label %59

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i64 0, i32 7
  store %"class.blink::Element"* %1, %"class.blink::Element"** %58, align 8
  store i8 1, i8* %3, align 1
  br label %424

59:                                               ; preds = %55, %38, %33
  %60 = phi i32 [ %56, %55 ], [ %35, %38 ], [ %35, %33 ]
  %61 = and i32 %60, 48
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %424

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %65 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE, align 8
  %66 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %64, i64 1, i32 2
  %69 = bitcast %"class.blink::Member"* %68 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %70 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %70, i64 0, i32 3, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %67, i64 0, i32 3, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %72, %74
  br i1 %75, label %76, label %124

76:                                               ; preds = %63
  %77 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i64 0, i32 4
  %78 = load i8, i8* %77, align 1, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %116

80:                                               ; preds = %76
  store i8 1, i8* %77, align 1
  %81 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #12
  %82 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i64 0, i32 2
  %83 = load %"class.blink::Document"*, %"class.blink::Document"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %83, i64 0, i32 28, i32 0, i32 0
  %85 = load %"class.blink::DocumentType"*, %"class.blink::DocumentType"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::DocumentType", %"class.blink::DocumentType"* %85, i64 0, i32 0
  %87 = bitcast %"class.blink::HeapHashSet.1755"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 0, i64 20, i1 false) #12
  %88 = call %"class.WTF::StringImpl"* @_ZN5blink12CreateMarkupEPKNS_4NodeENS_12ChildrenOnlyENS_12AbsoluteURLsENS_18IncludeShadowRootsENS_11HeapHashSetINS_6MemberINS_10ShadowRootEEEN3WTF10MemberHashIS8_EENSA_10HashTraitsIS9_EEEE(%"class.blink::Node"* %86, i32 0, i32 0, i32 0, %"class.blink::HeapHashSet.1755"* nonnull %7) #12
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %90, label %95

90:                                               ; preds = %80
  %91 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %91, align 8
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %93 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %92, i64* %93, align 8
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 0, i32* %94, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  br label %115

95:                                               ; preds = %80
  %96 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %88, %"class.WTF::StringImpl"** %96, align 8
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 1
  %100 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %101 = bitcast i8** %100 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %99, %"class.WTF::StringImpl"** %101, align 8
  %102 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %98, i32* %102, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %95
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %95
  %112 = phi i32 [ %110, %109 ], [ %108, %95 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #12
  br label %115

115:                                              ; preds = %90, %111, %114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #12
  br label %116

116:                                              ; preds = %76, %115
  %117 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #12
  %118 = bitcast %"class.blink::WebString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #12
  %119 = bitcast %"class.blink::WebURL"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %119) #12
  %120 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i64 0, i32 0
  %121 = load %"class.blink::KURL"*, %"class.blink::KURL"** %120, align 8
  call void @_ZN5blink6WebURLC1ERKNS_4KURLE(%"class.blink::WebURL"* nonnull %10, %"class.blink::KURL"* dereferenceable(112) %121) #12
  call void @_ZN5blink18WebFrameSerializer31GenerateMarkOfTheWebDeclarationERKNS_6WebURLE(%"class.blink::WebString"* nonnull sret %9, %"class.blink::WebURL"* nonnull dereferenceable(96) %10) #12
  call void @_ZNK5blink9WebStringcvN3WTF10StringViewEEv(%"class.WTF::StringView"* nonnull sret %8, %"class.blink::WebString"* nonnull %9) #12
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %9) #12
  %122 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %10, i64 0, i32 1
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* %122) #12
  %123 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %10, i64 0, i32 0
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %123) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %119) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #12
  br label %424

124:                                              ; preds = %63
  %125 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBaseTagE, align 8
  %126 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %127 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %125, i64 0, i32 0, i32 0, i32 0
  %128 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %127, align 8
  %129 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %126, i64 1, i32 2
  %130 = bitcast %"class.blink::Member"* %129 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %131 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %131, i64 0, i32 3, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %128, i64 0, i32 3, i32 0, i32 0, i32 0
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %133, %135
  br i1 %136, label %137, label %424

137:                                              ; preds = %124
  %138 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %138) #12
  %139 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %140 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8** %141, align 8
  %142 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 4, i32* %142, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138) #12
  br label %424

143:                                              ; preds = %4
  %144 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i64 0, i32 8
  %145 = load i8, i8* %144, align 8, !range !2
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %147, label %384

147:                                              ; preds = %143
  store i8 1, i8* %144, align 8
  %148 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i64 0, i32 2
  %149 = load %"class.blink::Document"*, %"class.blink::Document"** %148, align 8
  %150 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %149, i64 0, i32 91, i32 0, i32 0
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %152, label %177, label %153

153:                                              ; preds = %147
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = and i32 %155, 2
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %170

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = zext i32 %160 to i33
  %162 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %161, i33 1) #12
  %163 = extractvalue { i33, i1 } %162, 1
  %164 = extractvalue { i33, i1 } %162, 0
  %165 = icmp slt i33 %164, 0
  %166 = or i1 %163, %165
  br i1 %166, label %167, label %168, !prof !3

167:                                              ; preds = %158
  tail call void @llvm.trap() #12
  unreachable

168:                                              ; preds = %158
  %169 = trunc i33 %164 to i32
  store i32 %169, i32* %159, align 4
  br label %170

170:                                              ; preds = %168, %153
  %171 = ptrtoint %"class.WTF::StringImpl"* %151 to i64
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 1
  %173 = load i32, i32* %172, align 4
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %227

175:                                              ; preds = %170
  %176 = load %"class.blink::Document"*, %"class.blink::Document"** %148, align 8
  br label %177

177:                                              ; preds = %175, %147
  %178 = phi %"class.blink::Document"* [ %176, %175 ], [ %149, %147 ]
  %179 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8Document12EncodingNameEv(%"class.blink::Document"* %178) #12
  %180 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %180, label %198, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %198

186:                                              ; preds = %181
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  %189 = zext i32 %188 to i33
  %190 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %189, i33 1) #12
  %191 = extractvalue { i33, i1 } %190, 1
  %192 = extractvalue { i33, i1 } %190, 0
  %193 = icmp slt i33 %192, 0
  %194 = or i1 %191, %193
  br i1 %194, label %195, label %196, !prof !3

195:                                              ; preds = %186
  tail call void @llvm.trap() #12
  unreachable

196:                                              ; preds = %186
  %197 = trunc i33 %192 to i32
  store i32 %197, i32* %187, align 4
  br label %198

198:                                              ; preds = %196, %181, %177
  %199 = ptrtoint %"class.WTF::StringImpl"* %179 to i64
  br i1 %152, label %213, label %200

200:                                              ; preds = %198
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 0
  %206 = load i32, i32* %205, align 4
  br i1 %204, label %207, label %209

207:                                              ; preds = %200
  %208 = add i32 %206, -1
  store i32 %208, i32* %205, align 4
  br label %209

209:                                              ; preds = %207, %200
  %210 = phi i32 [ %208, %207 ], [ %206, %200 ]
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %209
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %151) #12
  br label %213

213:                                              ; preds = %198, %209, %212
  br i1 %180, label %227, label %214

214:                                              ; preds = %213
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = and i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %220 = load i32, i32* %219, align 4
  br i1 %218, label %221, label %223

221:                                              ; preds = %214
  %222 = add i32 %220, -1
  store i32 %222, i32* %219, align 4
  br label %223

223:                                              ; preds = %221, %214
  %224 = phi i32 [ %222, %221 ], [ %220, %214 ]
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %223
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #12
  br label %227

227:                                              ; preds = %226, %223, %213, %170
  %228 = phi i64 [ %171, %170 ], [ %199, %213 ], [ %199, %223 ], [ %199, %226 ]
  %229 = inttoptr i64 %228 to %"class.WTF::StringImpl"*
  %230 = icmp eq i64 %228, 0
  br i1 %230, label %235, label %231

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 1
  %233 = load i32, i32* %232, align 4
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %278

235:                                              ; preds = %227, %231
  %236 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %236) #12
  %237 = tail call dereferenceable(8) %"class.WTF::TextEncoding"* @_ZN3WTF12UTF8EncodingEv() #12
  %238 = getelementptr inbounds %"class.WTF::TextEncoding", %"class.WTF::TextEncoding"* %237, i64 0, i32 0
  %239 = load i8*, i8** %238, align 8
  %240 = icmp eq i8* %239, null
  br i1 %240, label %243, label %241

241:                                              ; preds = %235
  %242 = tail call i64 @strlen(i8* nonnull %239) #13
  br label %243

243:                                              ; preds = %235, %241
  %244 = phi i64 [ %242, %241 ], [ 0, %235 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* %239, i64 %244) #12
  %245 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %246 = bitcast %"class.WTF::String"* %12 to i64*
  %247 = load i64, i64* %246, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %245, align 8
  br i1 %230, label %277, label %248

248:                                              ; preds = %243
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = load atomic i32, i32* %249 monotonic, align 4
  %251 = and i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 0
  %254 = load i32, i32* %253, align 4
  br i1 %252, label %255, label %257

255:                                              ; preds = %248
  %256 = add i32 %254, -1
  store i32 %256, i32* %253, align 4
  br label %257

257:                                              ; preds = %255, %248
  %258 = phi i32 [ %256, %255 ], [ %254, %248 ]
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %261

260:                                              ; preds = %257
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %229) #12
  br label %261

261:                                              ; preds = %257, %260
  %262 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %245, align 8
  %263 = icmp eq %"class.WTF::StringImpl"* %262, null
  br i1 %263, label %277, label %264

264:                                              ; preds = %261
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = load atomic i32, i32* %265 monotonic, align 4
  %267 = and i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 0
  %270 = load i32, i32* %269, align 4
  br i1 %268, label %271, label %273

271:                                              ; preds = %264
  %272 = add i32 %270, -1
  store i32 %272, i32* %269, align 4
  br label %273

273:                                              ; preds = %271, %264
  %274 = phi i32 [ %272, %271 ], [ %270, %264 ]
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %277

276:                                              ; preds = %273
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %262) #12
  br label %277

277:                                              ; preds = %243, %261, %273, %276
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %236) #12
  br label %278

278:                                              ; preds = %277, %231
  %279 = phi i64 [ %247, %277 ], [ %228, %231 ]
  %280 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %280) #12
  %281 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %282 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %281, i64* %282, align 8
  %283 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0), i8** %283, align 8
  %284 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 15, i32* %284, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %280) #12
  %285 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %285) #12
  %286 = load %"class.blink::Document"*, %"class.blink::Document"** %148, align 8
  %287 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %286, i64 0, i32 92, i32 0, i32 0
  %288 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %287, align 8
  %289 = icmp eq %"class.WTF::StringImpl"* %288, null
  br i1 %289, label %307, label %290

290:                                              ; preds = %278
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %288, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %292 = load atomic i32, i32* %291 monotonic, align 4
  %293 = and i32 %292, 2
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %312

295:                                              ; preds = %290
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %288, i64 0, i32 0
  %297 = load i32, i32* %296, align 4
  %298 = zext i32 %297 to i33
  %299 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %298, i33 1) #12
  %300 = extractvalue { i33, i1 } %299, 1
  %301 = extractvalue { i33, i1 } %299, 0
  %302 = icmp slt i33 %301, 0
  %303 = or i1 %300, %302
  br i1 %303, label %304, label %305, !prof !3

304:                                              ; preds = %295
  call void @llvm.trap() #12
  unreachable

305:                                              ; preds = %295
  %306 = trunc i33 %301 to i32
  store i32 %306, i32* %296, align 4
  br label %312

307:                                              ; preds = %278
  %308 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %308, align 8
  %309 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %310 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %309, i64* %310, align 8
  %311 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 0, i32* %311, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %14)
  br label %331

312:                                              ; preds = %290, %305
  %313 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %288, %"class.WTF::StringImpl"** %313, align 8
  %314 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %288, i64 0, i32 1
  %315 = load i32, i32* %314, align 4
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %288, i64 1
  %317 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %318 = bitcast i8** %317 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %316, %"class.WTF::StringImpl"** %318, align 8
  %319 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %315, i32* %319, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %14)
  %320 = load atomic i32, i32* %291 monotonic, align 4
  %321 = and i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %288, i64 0, i32 0
  %324 = load i32, i32* %323, align 4
  br i1 %322, label %325, label %327

325:                                              ; preds = %312
  %326 = add i32 %324, -1
  store i32 %326, i32* %323, align 4
  br label %327

327:                                              ; preds = %325, %312
  %328 = phi i32 [ %326, %325 ], [ %324, %312 ]
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %331

330:                                              ; preds = %327
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %288) #12
  br label %331

331:                                              ; preds = %307, %327, %330
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %285) #12
  %332 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %332) #12
  %333 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %334 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %333, i64* %334, align 8
  %335 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8** %335, align 8
  %336 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 12, i32* %336, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %15)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %332) #12
  %337 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %337) #12
  %338 = inttoptr i64 %279 to %"class.WTF::StringImpl"*
  %339 = icmp eq i64 %279, 0
  br i1 %339, label %340, label %344

340:                                              ; preds = %331
  %341 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* null, i8** %341, align 8
  %342 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %343 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %342, i64* %343, align 8
  br label %351

344:                                              ; preds = %331
  %345 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 0
  store %"class.WTF::StringImpl"* %338, %"class.WTF::StringImpl"** %345, align 8
  %346 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %338, i64 0, i32 1
  %347 = load i32, i32* %346, align 4
  %348 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %338, i64 1
  %349 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  %350 = bitcast i8** %349 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %348, %"class.WTF::StringImpl"** %350, align 8
  br label %351

351:                                              ; preds = %340, %344
  %352 = phi i32 [ %347, %344 ], [ 0, %340 ]
  %353 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 %352, i32* %353, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %16)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %337) #12
  %354 = load %"class.blink::Document"*, %"class.blink::Document"** %148, align 8
  %355 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %354, i64 0, i32 93
  %356 = load i8, i8* %355, align 8
  %357 = and i8 %356, 3
  %358 = icmp eq i8 %357, 1
  br i1 %358, label %359, label %365

359:                                              ; preds = %351
  %360 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %360) #12
  %361 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %362 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %361, i64* %362, align 8
  %363 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8** %363, align 8
  %364 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 17, i32* %364, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %17)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %360) #12
  br label %365

365:                                              ; preds = %359, %351
  %366 = bitcast %"class.WTF::StringView"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %366) #12
  %367 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %368 = bitcast %"class.WTF::StringView"* %18 to i64*
  store i64 %367, i64* %368, align 8
  %369 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8** %369, align 8
  %370 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 4, i32* %370, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %18)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %366) #12
  br i1 %339, label %384, label %371

371:                                              ; preds = %365
  %372 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %338, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %373 = load atomic i32, i32* %372 monotonic, align 4
  %374 = and i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %338, i64 0, i32 0
  %377 = load i32, i32* %376, align 4
  br i1 %375, label %378, label %380

378:                                              ; preds = %371
  %379 = add i32 %377, -1
  store i32 %379, i32* %376, align 4
  br label %380

380:                                              ; preds = %378, %371
  %381 = phi i32 [ %379, %378 ], [ %377, %371 ]
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %383, label %384

383:                                              ; preds = %380
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %338) #12
  br label %384

384:                                              ; preds = %383, %380, %365, %143
  %385 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i64 0, i32 4
  %386 = load i8, i8* %385, align 1, !range !2
  %387 = icmp eq i8 %386, 0
  br i1 %387, label %388, label %424

388:                                              ; preds = %384
  store i8 1, i8* %385, align 1
  %389 = bitcast %"class.WTF::StringView"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %389) #12
  %390 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i64 0, i32 2
  %391 = load %"class.blink::Document"*, %"class.blink::Document"** %390, align 8
  %392 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %391, i64 0, i32 28, i32 0, i32 0
  %393 = load %"class.blink::DocumentType"*, %"class.blink::DocumentType"** %392, align 8
  %394 = getelementptr inbounds %"class.blink::DocumentType", %"class.blink::DocumentType"* %393, i64 0, i32 0
  %395 = bitcast %"class.blink::HeapHashSet.1755"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %395, i8 0, i64 20, i1 false) #12
  %396 = call %"class.WTF::StringImpl"* @_ZN5blink12CreateMarkupEPKNS_4NodeENS_12ChildrenOnlyENS_12AbsoluteURLsENS_18IncludeShadowRootsENS_11HeapHashSetINS_6MemberINS_10ShadowRootEEEN3WTF10MemberHashIS8_EENSA_10HashTraitsIS9_EEEE(%"class.blink::Node"* %394, i32 0, i32 0, i32 0, %"class.blink::HeapHashSet.1755"* nonnull %20) #12
  %397 = icmp eq %"class.WTF::StringImpl"* %396, null
  br i1 %397, label %398, label %403

398:                                              ; preds = %388
  %399 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 1
  store i8* null, i8** %399, align 8
  %400 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %401 = bitcast %"class.WTF::StringView"* %19 to i64*
  store i64 %400, i64* %401, align 8
  %402 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 2
  store i32 0, i32* %402, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %19)
  br label %423

403:                                              ; preds = %388
  %404 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 0
  store %"class.WTF::StringImpl"* %396, %"class.WTF::StringImpl"** %404, align 8
  %405 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %396, i64 0, i32 1
  %406 = load i32, i32* %405, align 4
  %407 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %396, i64 1
  %408 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 1
  %409 = bitcast i8** %408 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %407, %"class.WTF::StringImpl"** %409, align 8
  %410 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 2
  store i32 %406, i32* %410, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %19)
  %411 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %396, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %412 = load atomic i32, i32* %411 monotonic, align 4
  %413 = and i32 %412, 2
  %414 = icmp eq i32 %413, 0
  %415 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %396, i64 0, i32 0
  %416 = load i32, i32* %415, align 4
  br i1 %414, label %417, label %419

417:                                              ; preds = %403
  %418 = add i32 %416, -1
  store i32 %418, i32* %415, align 4
  br label %419

419:                                              ; preds = %417, %403
  %420 = phi i32 [ %418, %417 ], [ %416, %403 ]
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %422, label %423

422:                                              ; preds = %419
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %396) #12
  br label %423

423:                                              ; preds = %398, %419, %422
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %389) #12
  br label %424

424:                                              ; preds = %59, %31, %57, %124, %137, %116, %384, %423
  %425 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %5) #12
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %5) #12
  %426 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %427 = icmp eq %"class.WTF::StringImpl"* %426, null
  br i1 %427, label %441, label %428

428:                                              ; preds = %424
  %429 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %426, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %430 = load atomic i32, i32* %429 monotonic, align 4
  %431 = and i32 %430, 2
  %432 = icmp eq i32 %431, 0
  %433 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %426, i64 0, i32 0
  %434 = load i32, i32* %433, align 4
  br i1 %432, label %435, label %437

435:                                              ; preds = %428
  %436 = add i32 %434, -1
  store i32 %436, i32* %433, align 4
  br label %437

437:                                              ; preds = %435, %428
  %438 = phi i32 [ %436, %435 ], [ %434, %428 ]
  %439 = icmp eq i32 %438, 0
  br i1 %439, label %440, label %441

440:                                              ; preds = %437
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %426) #12
  br label %441

441:                                              ; preds = %424, %437, %440
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %21) #12
  ret %"class.WTF::StringImpl"* %425
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i8* @_ZNK5blink15HTMLMetaElement15ComputeEncodingEv(%"class.blink::HTMLMetaElement"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #12
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #12
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #12
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #12
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #12
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink12CreateMarkupEPKNS_4NodeENS_12ChildrenOnlyENS_12AbsoluteURLsENS_18IncludeShadowRootsENS_11HeapHashSetINS_6MemberINS_10ShadowRootEEEN3WTF10MemberHashIS8_EENSA_10HashTraitsIS9_EEEE(%"class.blink::Node"*, i32, i32, i32, %"class.blink::HeapHashSet.1755"*) local_unnamed_addr #3

declare void @_ZN5blink18WebFrameSerializer31GenerateMarkOfTheWebDeclarationERKNS_6WebURLE(%"class.blink::WebString"* sret, %"class.blink::WebURL"* dereferenceable(96)) local_unnamed_addr #3

declare void @_ZN5blink6WebURLC1ERKNS_4KURLE(%"class.blink::WebURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #3

declare void @_ZNK5blink9WebStringcvN3WTF10StringViewEEv(%"class.WTF::StringView"* sret, %"class.blink::WebString"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZNK5blink8Document12EncodingNameEv(%"class.blink::Document"*) local_unnamed_addr #3

declare dereferenceable(8) %"class.WTF::TextEncoding"* @_ZN3WTF12UTF8EncodingEv() local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink22WebFrameSerializerImpl31PostActionAfterSerializeOpenTagEPKNS_7ElementEPNS0_17SerializeDomParamE(%"class.blink::WebFrameSerializerImpl"* nocapture readnone, %"class.blink::Element"* readonly, %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.WTF::StringBuilder", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.blink::WebString", align 8
  %7 = alloca %"class.blink::WebString", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = bitcast %"class.WTF::StringBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  %10 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %10, align 8
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 1
  %12 = bitcast %union.anon.816* %11 to i8*
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 2
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 3
  store i8 1, i8* %14, align 4
  %15 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 4
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i64 0, i32 9
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i64 0, i32 3
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %75, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i64 0, i32 5
  %22 = load i8, i8* %21, align 2, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %75

24:                                               ; preds = %20
  %25 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHeadTagE, align 8
  %26 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %27 = icmp eq %"class.blink::Element"* %1, null
  br i1 %27, label %75, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 48
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %75

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %25, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 1, i32 2
  %37 = bitcast %"class.blink::Member"* %36 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %40, %42
  br i1 %43, label %44, label %75

44:                                               ; preds = %33
  store i8 1, i8* %21, align 2
  %45 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #12
  %46 = bitcast %"class.blink::WebString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #12
  %47 = bitcast %"class.blink::WebString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  %48 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #12
  %49 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i64 0, i32 1
  %50 = load %"class.WTF::TextEncoding"*, %"class.WTF::TextEncoding"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::TextEncoding", %"class.WTF::TextEncoding"* %50, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %44
  %55 = tail call i64 @strlen(i8* nonnull %52) #13
  br label %56

56:                                               ; preds = %44, %54
  %57 = phi i64 [ %55, %54 ], [ 0, %44 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* %52, i64 %57) #12
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %7, %"class.WTF::String"* nonnull dereferenceable(8) %8) #12
  call void @_ZN5blink18WebFrameSerializer30GenerateMetaCharsetDeclarationERKNS_9WebStringE(%"class.blink::WebString"* nonnull sret %6, %"class.blink::WebString"* nonnull dereferenceable(8) %7) #12
  call void @_ZNK5blink9WebStringcvN3WTF10StringViewEEv(%"class.WTF::StringView"* nonnull sret %5, %"class.blink::WebString"* nonnull %6) #12
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %6) #12
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %7) #12
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #12
  br label %74

74:                                               ; preds = %56, %70, %73
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #12
  store i8 1, i8* %16, align 1
  br label %75

75:                                               ; preds = %33, %74, %20, %28, %24, %3
  %76 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %4) #12
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %4) #12
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #12
  br label %92

92:                                               ; preds = %75, %88, %91
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #12
  ret %"class.WTF::StringImpl"* %76
}

declare void @_ZN5blink18WebFrameSerializer30GenerateMetaCharsetDeclarationERKNS_9WebStringE(%"class.blink::WebString"* sret, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink22WebFrameSerializerImpl30PreActionBeforeSerializeEndTagEPKNS_7ElementEPNS0_17SerializeDomParamEPb(%"class.blink::WebFrameSerializerImpl"* nocapture readnone, %"class.blink::Element"* readnone, %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* nocapture readonly, i8* nocapture) local_unnamed_addr #0 align 2 {
  store i8 0, i8* %3, align 1
  %5 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i64 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i64 0, i32 7
  %10 = load %"class.blink::Element"*, %"class.blink::Element"** %9, align 8
  %11 = icmp eq %"class.blink::Element"* %10, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  store i8 1, i8* %3, align 1
  br label %13

13:                                               ; preds = %4, %12, %8
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink22WebFrameSerializerImpl30PostActionAfterSerializeEndTagEPKNS_7ElementEPNS0_17SerializeDomParamE(%"class.blink::WebFrameSerializerImpl"* nocapture readnone, %"class.blink::Element"* readonly, %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringAppend", align 8
  %6 = alloca %"class.WTF::StringBuilder", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = bitcast %"class.WTF::StringBuilder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  %10 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %10, align 8
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 1
  %12 = bitcast %union.anon.816* %11 to i8*
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 2
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 3
  store i8 1, i8* %14, align 4
  %15 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 4
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i64 0, i32 3
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %207, label %19

19:                                               ; preds = %3
  %20 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBaseTagE, align 8
  %21 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %22 = icmp eq %"class.blink::Element"* %1, null
  br i1 %22, label %207, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 48
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %207

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %20, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %21, i64 1, i32 2
  %32 = bitcast %"class.blink::Member"* %31 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %35, %37
  br i1 %38, label %39, label %207

39:                                               ; preds = %28
  %40 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #12
  %41 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %42 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i8** %43, align 8
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 3, i32* %44, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #12
  %45 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #12
  %46 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i64 0, i32 2
  %47 = load %"class.blink::Document"*, %"class.blink::Document"** %46, align 8
  %48 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48)
  %49 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %47, i64 0, i32 26, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %56, label %52

52:                                               ; preds = %39
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %52, %39
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0), i64 15) #12
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  br label %178

59:                                               ; preds = %52
  %60 = bitcast %"class.WTF::StringAppend"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #12
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %77

67:                                               ; preds = %59
  %68 = zext i32 %66 to i33
  %69 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %68, i33 1) #12
  %70 = extractvalue { i33, i1 } %69, 1
  %71 = extractvalue { i33, i1 } %69, 0
  %72 = icmp slt i33 %71, 0
  %73 = or i1 %70, %72
  br i1 %73, label %74, label %75, !prof !3

74:                                               ; preds = %67
  call void @llvm.trap() #12
  unreachable

75:                                               ; preds = %67
  %76 = trunc i33 %71 to i32
  store i32 %76, i32* %65, align 4
  br label %77

77:                                               ; preds = %75, %59
  %78 = phi i32 [ %76, %75 ], [ %66, %59 ]
  %79 = load atomic i32, i32* %61 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %92

82:                                               ; preds = %77
  %83 = zext i32 %78 to i33
  %84 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %83, i33 1) #12
  %85 = extractvalue { i33, i1 } %84, 1
  %86 = extractvalue { i33, i1 } %84, 0
  %87 = icmp slt i33 %86, 0
  %88 = or i1 %85, %87
  br i1 %88, label %89, label %90, !prof !3

89:                                               ; preds = %82
  call void @llvm.trap() #12
  unreachable

90:                                               ; preds = %82
  %91 = trunc i33 %86 to i32
  store i32 %91, i32* %65, align 4
  br label %92

92:                                               ; preds = %90, %77
  %93 = phi i32 [ %91, %90 ], [ %78, %77 ]
  %94 = load atomic i32, i32* %61 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %92
  %98 = add i32 %93, -1
  store i32 %98, i32* %65, align 4
  br label %99

99:                                               ; preds = %97, %92
  %100 = phi i32 [ %98, %97 ], [ %93, %92 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #12
  br label %103

103:                                              ; preds = %102, %99
  %104 = load atomic i32, i32* %61 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %118

107:                                              ; preds = %103
  %108 = load i32, i32* %65, align 4
  %109 = zext i32 %108 to i33
  %110 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %109, i33 1) #12
  %111 = extractvalue { i33, i1 } %110, 1
  %112 = extractvalue { i33, i1 } %110, 0
  %113 = icmp slt i33 %112, 0
  %114 = or i1 %111, %113
  br i1 %114, label %115, label %116, !prof !3

115:                                              ; preds = %107
  call void @llvm.trap() #12
  unreachable

116:                                              ; preds = %107
  %117 = trunc i33 %112 to i32
  store i32 %117, i32* %65, align 4
  br label %118

118:                                              ; preds = %116, %103
  %119 = bitcast %"class.WTF::StringAppend"* %5 to i64*
  store i64 ptrtoint ([24 x i8]* @.str.12 to i64), i64* %119, align 8
  %120 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %120, align 8
  %121 = load atomic i32, i32* %61 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %135

124:                                              ; preds = %118
  %125 = load i32, i32* %65, align 4
  %126 = zext i32 %125 to i33
  %127 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %126, i33 1) #12
  %128 = extractvalue { i33, i1 } %127, 1
  %129 = extractvalue { i33, i1 } %127, 0
  %130 = icmp slt i33 %129, 0
  %131 = or i1 %128, %130
  br i1 %131, label %132, label %133, !prof !3

132:                                              ; preds = %124
  call void @llvm.trap() #12
  unreachable

133:                                              ; preds = %124
  %134 = trunc i33 %129 to i32
  store i32 %134, i32* %65, align 4
  br label %135

135:                                              ; preds = %133, %118
  %136 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0), i8** %136, align 8
  %137 = load atomic i32, i32* %61 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = load i32, i32* %65, align 4
  br i1 %139, label %141, label %143

141:                                              ; preds = %135
  %142 = add i32 %140, -1
  store i32 %142, i32* %65, align 4
  br label %143

143:                                              ; preds = %141, %135
  %144 = phi i32 [ %142, %141 ], [ %140, %135 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #12
  br label %147

147:                                              ; preds = %146, %143
  %148 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %5) #12
  %149 = ptrtoint %"class.WTF::StringImpl"* %148 to i64
  %150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %151 = icmp eq %"class.WTF::StringImpl"* %150, null
  br i1 %151, label %165, label %152

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = and i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  br i1 %156, label %159, label %161

159:                                              ; preds = %152
  %160 = add i32 %158, -1
  store i32 %160, i32* %157, align 4
  br label %161

161:                                              ; preds = %159, %152
  %162 = phi i32 [ %160, %159 ], [ %158, %152 ]
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %161
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %150) #12
  br label %165

165:                                              ; preds = %164, %161, %147
  %166 = load atomic i32, i32* %61 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = load i32, i32* %65, align 4
  br i1 %168, label %170, label %172

170:                                              ; preds = %165
  %171 = add i32 %169, -1
  store i32 %171, i32* %65, align 4
  br label %172

172:                                              ; preds = %170, %165
  %173 = phi i32 [ %171, %170 ], [ %169, %165 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #12
  br label %176

176:                                              ; preds = %175, %172
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #12
  %177 = bitcast %"class.WTF::String"* %4 to i64*
  store i64 %149, i64* %177, align 8
  br label %178

178:                                              ; preds = %56, %176
  %179 = phi %"class.WTF::StringImpl"* [ %148, %176 ], [ %58, %56 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  %180 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %180, label %181, label %186

181:                                              ; preds = %178
  %182 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %182, align 8
  %183 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %184 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %183, i64* %184, align 8
  %185 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 0, i32* %185, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  br label %206

186:                                              ; preds = %178
  %187 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %179, %"class.WTF::StringImpl"** %187, align 8
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 1
  %189 = load i32, i32* %188, align 4
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 1
  %191 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %192 = bitcast i8** %191 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %190, %"class.WTF::StringImpl"** %192, align 8
  %193 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %189, i32* %193, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load atomic i32, i32* %194 monotonic, align 4
  %196 = and i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %199 = load i32, i32* %198, align 4
  br i1 %197, label %200, label %202

200:                                              ; preds = %186
  %201 = add i32 %199, -1
  store i32 %201, i32* %198, align 4
  br label %202

202:                                              ; preds = %200, %186
  %203 = phi i32 [ %201, %200 ], [ %199, %186 ]
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %202
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #12
  br label %206

206:                                              ; preds = %181, %202, %205
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #12
  br label %207

207:                                              ; preds = %28, %206, %23, %19, %3
  %208 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %6) #12
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %6) #12
  %209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %210 = icmp eq %"class.WTF::StringImpl"* %209, null
  br i1 %210, label %224, label %211

211:                                              ; preds = %207
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load atomic i32, i32* %212 monotonic, align 4
  %214 = and i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  br i1 %215, label %218, label %220

218:                                              ; preds = %211
  %219 = add i32 %217, -1
  store i32 %219, i32* %216, align 4
  br label %220

220:                                              ; preds = %218, %211
  %221 = phi i32 [ %219, %218 ], [ %217, %211 ]
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %220
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %209) #12
  br label %224

224:                                              ; preds = %207, %220, %223
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #12
  ret %"class.WTF::StringImpl"* %208
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22WebFrameSerializerImpl23SaveHTMLContentToBufferERKN3WTF6StringEPNS0_17SerializeDomParamE(%"class.blink::WebFrameSerializerImpl"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 3
  %6 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %11, align 8
  %12 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %13 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %12, i64* %13, align 8
  br label %21

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %15, align 8
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %20 = bitcast i8** %19 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %20, align 8
  br label %21

21:                                               ; preds = %10, %14
  %22 = phi i32 [ %17, %14 ], [ 0, %10 ]
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %22, i32* %23, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  call void @_ZN5blink22WebFrameSerializerImpl20EncodeAndFlushBufferENS_24WebFrameSerializerClient24FrameSerializationStatusEPNS0_17SerializeDomParamENS0_11FlushOptionE(%"class.blink::WebFrameSerializerImpl"* %0, i32 0, %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i32 1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22WebFrameSerializerImpl20EncodeAndFlushBufferENS_24WebFrameSerializerClient24FrameSerializationStatusEPNS0_17SerializeDomParamENS0_11FlushOptionE(%"class.blink::WebFrameSerializerImpl"*, i32, %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.blink::WebVector.1762", align 8
  %8 = icmp eq i32 %3, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 3, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = icmp ult i32 %11, 65537
  br i1 %12, label %82, label %13

13:                                               ; preds = %4, %9
  %14 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 3
  %17 = tail call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* %16) #12
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %15, align 8
  tail call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* %16) #12
  %18 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i64 0, i32 1
  %22 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  %23 = load %"class.WTF::TextEncoding"*, %"class.WTF::TextEncoding"** %21, align 8
  call void @_ZNK3WTF12TextEncoding6EncodeERKNS_6StringENS_19UnencodableHandlingE(%"class.std::__1::basic_string"* nonnull sret %6, %"class.WTF::TextEncoding"* %23, %"class.WTF::String"* nonnull dereferenceable(8) %5, i32 0) #12
  %24 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 1
  %25 = load %"class.blink::WebFrameSerializerClient"*, %"class.blink::WebFrameSerializerClient"** %24, align 8
  %26 = bitcast %"class.blink::WebVector.1762"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12
  %27 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = load i8*, i8** %19, align 8
  %32 = load i64, i64* %20, align 8
  %33 = zext i8 %29 to i64
  %34 = select i1 %30, i8* %31, i8* %18
  %35 = select i1 %30, i64 %32, i64 %33
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 24, i1 false) #12
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %49, label %37

37:                                               ; preds = %13
  %38 = icmp slt i64 %35, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %37
  %40 = bitcast %"class.blink::WebVector.1762"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %40) #14
  unreachable

41:                                               ; preds = %37
  %42 = call i8* @_Znwm(i64 %35) #15
  %43 = getelementptr inbounds %"class.blink::WebVector.1762", %"class.blink::WebVector.1762"* %7, i64 0, i32 0, i32 0, i32 1
  store i8* %42, i8** %43, align 8
  %44 = getelementptr inbounds %"class.blink::WebVector.1762", %"class.blink::WebVector.1762"* %7, i64 0, i32 0, i32 0, i32 0
  store i8* %42, i8** %44, align 8
  %45 = getelementptr inbounds i8, i8* %42, i64 %35
  %46 = getelementptr inbounds %"class.blink::WebVector.1762", %"class.blink::WebVector.1762"* %7, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i8* %45, i8** %46, align 8
  %47 = bitcast i8** %43 to i64*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %42, i8* align 1 %34, i64 %35, i1 false) #12
  %48 = ptrtoint i8* %45 to i64
  store i64 %48, i64* %47, align 8
  br label %49

49:                                               ; preds = %13, %41
  %50 = bitcast %"class.blink::WebFrameSerializerClient"* %25 to void (%"class.blink::WebFrameSerializerClient"*, %"class.blink::WebVector.1762"*, i32)***
  %51 = load void (%"class.blink::WebFrameSerializerClient"*, %"class.blink::WebVector.1762"*, i32)**, void (%"class.blink::WebFrameSerializerClient"*, %"class.blink::WebVector.1762"*, i32)*** %50, align 8
  %52 = load void (%"class.blink::WebFrameSerializerClient"*, %"class.blink::WebVector.1762"*, i32)*, void (%"class.blink::WebFrameSerializerClient"*, %"class.blink::WebVector.1762"*, i32)** %51, align 8
  call void %52(%"class.blink::WebFrameSerializerClient"* %25, %"class.blink::WebVector.1762"* nonnull dereferenceable(24) %7, i32 %1) #12
  %53 = getelementptr inbounds %"class.blink::WebVector.1762", %"class.blink::WebVector.1762"* %7, i64 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = icmp eq i8* %54, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = ptrtoint i8* %54 to i64
  %58 = getelementptr inbounds %"class.blink::WebVector.1762", %"class.blink::WebVector.1762"* %7, i64 0, i32 0, i32 0, i32 1
  %59 = bitcast i8** %58 to i64*
  store i64 %57, i64* %59, align 8
  call void @_ZdlPv(i8* nonnull %54) #15
  br label %60

60:                                               ; preds = %49, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  %61 = load i8, i8* %28, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %60
  %64 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %64) #15
  br label %65

65:                                               ; preds = %60, %63
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #12
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #12
  br label %81

81:                                               ; preds = %65, %77, %80
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  br label %82

82:                                               ; preds = %9, %81
  ret void
}

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #3

declare void @_ZNK3WTF12TextEncoding6EncodeERKNS_6StringENS_19UnencodableHandlingE(%"class.std::__1::basic_string"* sret, %"class.WTF::TextEncoding"*, %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22WebFrameSerializerImpl15AppendAttributeERN3WTF13StringBuilderEbRKNS1_6StringES6_(%"class.blink::WebFrameSerializerImpl"*, %"class.WTF::StringBuilder"* dereferenceable(48), i1 zeroext, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 32) #12
  %10 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %15, align 8
  %16 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %17 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %16, i64* %17, align 8
  br label %25

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %24 = bitcast i8** %23 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %24, align 8
  br label %25

25:                                               ; preds = %14, %18
  %26 = phi i32 [ %21, %18 ], [ 0, %14 ]
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %26, i32* %27, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #12
  %28 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #12
  %29 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %30 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8** %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 2, i32* %32, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #12
  br i1 %2, label %33, label %63

33:                                               ; preds = %25
  %34 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 6
  %36 = call %"class.WTF::StringImpl"* @_ZNK5blink11WebEntities23ConvertEntitiesInStringERKN3WTF6StringE(%"class.blink::WebEntities"* %35, %"class.WTF::String"* dereferenceable(8) %4) #12
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %38, label %43

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %39, align 8
  %40 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %41 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 0, i32* %42, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  br label %93

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %44, align 8
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 1
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %49 = bitcast i8** %48 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %49, align 8
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %46, i32* %50, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %43
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %43
  %60 = phi i32 [ %58, %57 ], [ %56, %43 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %93

62:                                               ; preds = %59
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #12
  br label %93

63:                                               ; preds = %25
  %64 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #12
  %65 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 7
  %66 = call %"class.WTF::StringImpl"* @_ZNK5blink11WebEntities23ConvertEntitiesInStringERKN3WTF6StringE(%"class.blink::WebEntities"* %65, %"class.WTF::String"* dereferenceable(8) %4) #12
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %73

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %69, align 8
  %70 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %71 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 0, i32* %72, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  br label %93

73:                                               ; preds = %63
  %74 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %74, align 8
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 1
  %78 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %79 = bitcast i8** %78 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %79, align 8
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %76, i32* %80, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %73
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %73
  %90 = phi i32 [ %88, %87 ], [ %86, %73 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #12
  br label %93

93:                                               ; preds = %92, %89, %68, %62, %59, %38
  %94 = phi i8* [ %34, %38 ], [ %34, %59 ], [ %34, %62 ], [ %64, %68 ], [ %64, %89 ], [ %64, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #12
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 34) #12
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink11WebEntities23ConvertEntitiesInStringERKN3WTF6StringE(%"class.blink::WebEntities"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22WebFrameSerializerImpl15OpenTagToStringEPNS_7ElementEPNS0_17SerializeDomParamE(%"class.blink::WebFrameSerializerImpl"*, %"class.blink::Element"*, %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.WTF::StringBuilder", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.blink::WebString", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.blink::KURL", align 8
  %14 = alloca %"class.blink::WebString", align 8
  %15 = alloca %"class.blink::WebURL", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.WTF::StringView", align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #12
  store i8 -86, i8* %5, align 1
  %20 = bitcast %"class.WTF::StringBuilder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %20) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 48, i1 false)
  %21 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 1
  %23 = bitcast %union.anon.816* %22 to i8*
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 2
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 3
  store i8 1, i8* %25, align 4
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 4
  store i8 0, i8* %26, align 1
  %27 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #12
  %28 = call %"class.WTF::StringImpl"* @_ZN5blink22WebFrameSerializerImpl31PreActionBeforeSerializeOpenTagEPKNS_7ElementEPNS0_17SerializeDomParamEPb(%"class.blink::WebFrameSerializerImpl"* undef, %"class.blink::Element"* %1, %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i8* nonnull %5)
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %30, label %35

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %31, align 8
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %33 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 0, i32* %34, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  br label %55

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %36, align 8
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 1
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %41 = bitcast i8** %40 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %38, i32* %42, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %35
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %35
  %52 = phi i32 [ %50, %49 ], [ %48, %35 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #12
  br label %55

55:                                               ; preds = %30, %51, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #12
  %56 = load i8, i8* %5, align 1, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %499

58:                                               ; preds = %55
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %6, i8 zeroext 60) #12
  %59 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #12
  %60 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #12
  %61 = bitcast %"class.blink::Element"* %1 to %"class.WTF::StringImpl"* (%"class.blink::Element"*)***
  %62 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)**, %"class.WTF::StringImpl"* (%"class.blink::Element"*)*** %61, align 8
  %63 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %62, i64 27
  %64 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %63, align 8
  %65 = call %"class.WTF::StringImpl"* %64(%"class.blink::Element"* %1) #12
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %65, %"class.WTF::StringImpl"** %66, align 8
  %67 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15DeprecatedLowerEv(%"class.WTF::String"* nonnull %9) #12
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %69, label %74

69:                                               ; preds = %58
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %70, align 8
  %71 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %72 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 0, i32* %73, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  br label %94

74:                                               ; preds = %58
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %75, align 8
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 1
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %80 = bitcast i8** %79 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %78, %"class.WTF::StringImpl"** %80, align 8
  %81 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %77, i32* %81, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %74
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %74
  %91 = phi i32 [ %89, %88 ], [ %87, %74 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #12
  br label %94

94:                                               ; preds = %69, %90, %93
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #12
  br label %110

110:                                              ; preds = %94, %106, %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #12
  %111 = icmp eq %"class.blink::Element"* %1, null
  br i1 %111, label %124, label %112

112:                                              ; preds = %110
  %113 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %114 = bitcast %"class.blink::Element"* %1 to i1 (%"class.blink::Node"*)***
  %115 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %114, align 8
  %116 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %115, i64 42
  %117 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %116, align 8
  %118 = call zeroext i1 %117(%"class.blink::Node"* %113) #12
  br i1 %118, label %119, label %124

119:                                              ; preds = %112
  %120 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %121 = bitcast %"class.blink::TraceWrapperV8Reference"* %120 to %"class.blink::Frame"**
  %122 = load %"class.blink::Frame"*, %"class.blink::Frame"** %121, align 8
  %123 = call %"class.blink::WebFrame"* @_ZN5blink8WebFrame13FromCoreFrameEPNS_5FrameE(%"class.blink::Frame"* %122) #12
  br label %124

124:                                              ; preds = %112, %110, %119
  %125 = phi %"class.blink::WebFrame"* [ %123, %119 ], [ null, %112 ], [ null, %110 ]
  %126 = bitcast %"class.blink::WebString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #12
  %127 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %127, align 8
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* nonnull %10) #12
  %128 = icmp eq %"class.blink::WebFrame"* %125, null
  br i1 %128, label %136, label %129

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 2
  %131 = load %"class.blink::WebFrameSerializer::LinkRewritingDelegate"*, %"class.blink::WebFrameSerializer::LinkRewritingDelegate"** %130, align 8
  %132 = bitcast %"class.blink::WebFrameSerializer::LinkRewritingDelegate"* %131 to i1 (%"class.blink::WebFrameSerializer::LinkRewritingDelegate"*, %"class.blink::WebFrame"*, %"class.blink::WebString"*)***
  %133 = load i1 (%"class.blink::WebFrameSerializer::LinkRewritingDelegate"*, %"class.blink::WebFrame"*, %"class.blink::WebString"*)**, i1 (%"class.blink::WebFrameSerializer::LinkRewritingDelegate"*, %"class.blink::WebFrame"*, %"class.blink::WebString"*)*** %132, align 8
  %134 = load i1 (%"class.blink::WebFrameSerializer::LinkRewritingDelegate"*, %"class.blink::WebFrame"*, %"class.blink::WebString"*)*, i1 (%"class.blink::WebFrameSerializer::LinkRewritingDelegate"*, %"class.blink::WebFrame"*, %"class.blink::WebString"*)** %133, align 8
  %135 = call zeroext i1 %134(%"class.blink::WebFrameSerializer::LinkRewritingDelegate"* %131, %"class.blink::WebFrame"* nonnull %125, %"class.blink::WebString"* nonnull %10) #12
  br label %136

136:                                              ; preds = %124, %129
  %137 = phi i1 [ false, %124 ], [ %135, %129 ]
  %138 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 3, i32 0, i32 0
  %139 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %138, align 8
  %140 = icmp eq %"class.blink::ElementData"* %139, null
  br i1 %140, label %193, label %141

141:                                              ; preds = %136
  call void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"* %1) #12
  %142 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %138, align 8
  %143 = icmp eq %"class.blink::ElementData"* %142, null
  br i1 %143, label %144, label %146

144:                                              ; preds = %141
  %145 = load i32, i32* null, align 536870912
  br label %158

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %142, i64 0, i32 0, i32 0, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = and i32 %148, 1
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %158, label %151

151:                                              ; preds = %146
  %152 = bitcast %"class.blink::ElementData"* %142 to %"class.blink::UniqueElementData"*
  %153 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %142, i64 1, i32 1
  %154 = bitcast %"class.blink::Member.31"* %153 to %"class.blink::Attribute"**
  %155 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %154, align 8
  %156 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %152, i64 0, i32 2, i32 0, i32 0, i32 2
  %157 = load i32, i32* %156, align 4
  br label %164

158:                                              ; preds = %146, %144
  %159 = phi i32 [ %145, %144 ], [ %148, %146 ]
  %160 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %142, i64 1
  %161 = bitcast %"class.blink::ElementData"* %160 to %"class.blink::Attribute"*
  %162 = lshr i32 %159, 1
  %163 = and i32 %162, 268435455
  br label %164

164:                                              ; preds = %151, %158
  %165 = phi i32 [ %163, %158 ], [ %157, %151 ]
  %166 = phi %"class.blink::Attribute"* [ %161, %158 ], [ %155, %151 ]
  %167 = zext i32 %165 to i64
  %168 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %166, i64 %167
  %169 = icmp eq i32 %165, 0
  br i1 %169, label %193, label %170

170:                                              ; preds = %164
  %171 = bitcast %"class.WTF::String"* %11 to i8*
  %172 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %173 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kSrcdocAttrE, align 8
  %174 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %173, i64 0, i32 0, i32 0
  %175 = bitcast %"class.blink::Element"* %1 to i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)***
  %176 = bitcast %"class.WTF::StringView"* %12 to i8*
  %177 = bitcast %"class.WTF::StringView"* %12 to i64*
  %178 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %179 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  %180 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %13, i64 0, i32 0
  %181 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i64 0, i32 2
  %182 = bitcast %"class.blink::WebString"* %14 to i8*
  %183 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %14, i64 0, i32 0, i32 0
  %184 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 2
  %185 = bitcast %"class.blink::WebURL"* %15 to i8*
  %186 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %15, i64 0, i32 1
  %187 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %15, i64 0, i32 0
  %188 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %13, i64 0, i32 4, i32 0, i32 0
  %189 = bitcast %"class.WTF::String"* %11 to i64*
  %190 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i64 0, i32 3
  %191 = bitcast %"class.WTF::String"* %16 to i8*
  %192 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  br label %200

193:                                              ; preds = %363, %136, %164
  %194 = phi i8 [ 0, %164 ], [ 0, %136 ], [ %347, %363 ]
  %195 = and i8 %194, 1
  %196 = icmp eq i8 %195, 0
  %197 = and i1 %137, %196
  %198 = xor i1 %197, true
  %199 = or i1 %111, %198
  br i1 %199, label %426, label %366

200:                                              ; preds = %170, %363
  %201 = phi %"class.blink::Attribute"* [ %166, %170 ], [ %364, %363 ]
  %202 = phi i8 [ 0, %170 ], [ %347, %363 ]
  %203 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %201, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %171) #12
  %204 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %201, i64 0, i32 1, i32 0, i32 0, i32 0
  %205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %204, align 8
  store %"class.WTF::StringImpl"* %205, %"class.WTF::StringImpl"** %172, align 8
  %206 = icmp eq %"class.WTF::StringImpl"* %205, null
  br i1 %206, label %224, label %207

207:                                              ; preds = %200
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load atomic i32, i32* %208 monotonic, align 4
  %210 = and i32 %209, 2
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %224

212:                                              ; preds = %207
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 0
  %214 = load i32, i32* %213, align 4
  %215 = zext i32 %214 to i33
  %216 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %215, i33 1) #12
  %217 = extractvalue { i33, i1 } %216, 1
  %218 = extractvalue { i33, i1 } %216, 0
  %219 = icmp slt i33 %218, 0
  %220 = or i1 %217, %219
  br i1 %220, label %221, label %222, !prof !3

221:                                              ; preds = %212
  call void @llvm.trap() #12
  unreachable

222:                                              ; preds = %212
  %223 = trunc i33 %218 to i32
  store i32 %223, i32* %213, align 4
  br label %224

224:                                              ; preds = %200, %207, %222
  br i1 %137, label %225, label %230

225:                                              ; preds = %224
  %226 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %201, i64 0, i32 0, i32 0, i32 0
  %227 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %226, align 8
  %228 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %174, align 8
  %229 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %227, %228
  br i1 %229, label %346, label %230

230:                                              ; preds = %225, %224
  %231 = load i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)**, i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)*** %175, align 8
  %232 = getelementptr inbounds i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)*, i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)** %231, i64 87
  %233 = load i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)*, i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)** %232, align 8
  %234 = call zeroext i1 %233(%"class.blink::Element"* %1, %"class.blink::QualifiedName"* dereferenceable(8) %203) #12
  br i1 %234, label %235, label %326

235:                                              ; preds = %230
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %176) #12
  %236 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %236, i64* %177, align 8
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0), i8** %178, align 8
  store i32 11, i32* %179, align 8
  %237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %172, align 8
  %238 = icmp eq %"class.WTF::StringImpl"* %237, null
  br i1 %238, label %241, label %239

239:                                              ; preds = %235
  %240 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %237, %"class.WTF::StringView"* nonnull dereferenceable(24) %12) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %176) #12
  br i1 %240, label %326, label %242

241:                                              ; preds = %235
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %176) #12
  br label %242

242:                                              ; preds = %241, %239
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %180) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %180, i8 -86, i64 112, i1 false)
  %243 = load %"class.blink::Document"*, %"class.blink::Document"** %181, align 8
  call void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* nonnull sret %13, %"class.blink::Document"* %243, %"class.WTF::String"* nonnull dereferenceable(8) %11) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %182) #12
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %183, align 8
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* nonnull %14) #12
  br i1 %137, label %244, label %262

244:                                              ; preds = %242
  %245 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* nonnull %10) #12
  %246 = ptrtoint %"class.WTF::StringImpl"* %245 to i64
  %247 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %172, align 8
  store i64 %246, i64* %189, align 8
  %248 = icmp eq %"class.WTF::StringImpl"* %247, null
  br i1 %248, label %324, label %249

249:                                              ; preds = %244
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = load atomic i32, i32* %250 monotonic, align 4
  %252 = and i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 0
  %255 = load i32, i32* %254, align 4
  br i1 %253, label %256, label %258

256:                                              ; preds = %249
  %257 = add i32 %255, -1
  store i32 %257, i32* %254, align 4
  br label %258

258:                                              ; preds = %256, %249
  %259 = phi i32 [ %257, %256 ], [ %255, %249 ]
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %324

261:                                              ; preds = %258
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %247) #12
  br label %324

262:                                              ; preds = %242
  %263 = load %"class.blink::WebFrameSerializer::LinkRewritingDelegate"*, %"class.blink::WebFrameSerializer::LinkRewritingDelegate"** %184, align 8
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %185) #12
  call void @_ZN5blink6WebURLC1ERKNS_4KURLE(%"class.blink::WebURL"* nonnull %15, %"class.blink::KURL"* nonnull dereferenceable(112) %13) #12
  %264 = bitcast %"class.blink::WebFrameSerializer::LinkRewritingDelegate"* %263 to i1 (%"class.blink::WebFrameSerializer::LinkRewritingDelegate"*, %"class.blink::WebURL"*, %"class.blink::WebString"*)***
  %265 = load i1 (%"class.blink::WebFrameSerializer::LinkRewritingDelegate"*, %"class.blink::WebURL"*, %"class.blink::WebString"*)**, i1 (%"class.blink::WebFrameSerializer::LinkRewritingDelegate"*, %"class.blink::WebURL"*, %"class.blink::WebString"*)*** %264, align 8
  %266 = getelementptr inbounds i1 (%"class.blink::WebFrameSerializer::LinkRewritingDelegate"*, %"class.blink::WebURL"*, %"class.blink::WebString"*)*, i1 (%"class.blink::WebFrameSerializer::LinkRewritingDelegate"*, %"class.blink::WebURL"*, %"class.blink::WebString"*)** %265, i64 1
  %267 = load i1 (%"class.blink::WebFrameSerializer::LinkRewritingDelegate"*, %"class.blink::WebURL"*, %"class.blink::WebString"*)*, i1 (%"class.blink::WebFrameSerializer::LinkRewritingDelegate"*, %"class.blink::WebURL"*, %"class.blink::WebString"*)** %266, align 8
  %268 = call zeroext i1 %267(%"class.blink::WebFrameSerializer::LinkRewritingDelegate"* %263, %"class.blink::WebURL"* nonnull dereferenceable(96) %15, %"class.blink::WebString"* nonnull %14) #12
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* %186) #12
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %187) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %185) #12
  br i1 %268, label %269, label %287

269:                                              ; preds = %262
  %270 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* nonnull %14) #12
  %271 = ptrtoint %"class.WTF::StringImpl"* %270 to i64
  %272 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %172, align 8
  store i64 %271, i64* %189, align 8
  %273 = icmp eq %"class.WTF::StringImpl"* %272, null
  br i1 %273, label %324, label %274

274:                                              ; preds = %269
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %272, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %276 = load atomic i32, i32* %275 monotonic, align 4
  %277 = and i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %272, i64 0, i32 0
  %280 = load i32, i32* %279, align 4
  br i1 %278, label %281, label %283

281:                                              ; preds = %274
  %282 = add i32 %280, -1
  store i32 %282, i32* %279, align 4
  br label %283

283:                                              ; preds = %281, %274
  %284 = phi i32 [ %282, %281 ], [ %280, %274 ]
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %286, label %324

286:                                              ; preds = %283
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %272) #12
  br label %324

287:                                              ; preds = %262
  %288 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %188, align 8
  %289 = icmp eq %"class.WTF::StringImpl"* %288, null
  br i1 %289, label %307, label %290

290:                                              ; preds = %287
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %288, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %292 = load atomic i32, i32* %291 monotonic, align 4
  %293 = and i32 %292, 2
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %307

295:                                              ; preds = %290
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %288, i64 0, i32 0
  %297 = load i32, i32* %296, align 4
  %298 = zext i32 %297 to i33
  %299 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %298, i33 1) #12
  %300 = extractvalue { i33, i1 } %299, 1
  %301 = extractvalue { i33, i1 } %299, 0
  %302 = icmp slt i33 %301, 0
  %303 = or i1 %300, %302
  br i1 %303, label %304, label %305, !prof !3

304:                                              ; preds = %295
  call void @llvm.trap() #12
  unreachable

305:                                              ; preds = %295
  %306 = trunc i33 %301 to i32
  store i32 %306, i32* %296, align 4
  br label %307

307:                                              ; preds = %305, %290, %287
  %308 = ptrtoint %"class.WTF::StringImpl"* %288 to i64
  %309 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %172, align 8
  store i64 %308, i64* %189, align 8
  %310 = icmp eq %"class.WTF::StringImpl"* %309, null
  br i1 %310, label %324, label %311

311:                                              ; preds = %307
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %313 = load atomic i32, i32* %312 monotonic, align 4
  %314 = and i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 0
  %317 = load i32, i32* %316, align 4
  br i1 %315, label %318, label %320

318:                                              ; preds = %311
  %319 = add i32 %317, -1
  store i32 %319, i32* %316, align 4
  br label %320

320:                                              ; preds = %318, %311
  %321 = phi i32 [ %319, %318 ], [ %317, %311 ]
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %324

323:                                              ; preds = %320
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %309) #12
  br label %324

324:                                              ; preds = %323, %320, %307, %269, %283, %286, %244, %258, %261
  %325 = phi i8 [ 1, %261 ], [ 1, %258 ], [ 1, %244 ], [ %202, %286 ], [ %202, %283 ], [ %202, %269 ], [ %202, %307 ], [ %202, %320 ], [ %202, %323 ]
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %182) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %180) #12
  br label %326

326:                                              ; preds = %239, %324, %230
  %327 = phi i8 [ %325, %324 ], [ %202, %230 ], [ %202, %239 ]
  %328 = load i8, i8* %190, align 8, !range !2
  %329 = icmp ne i8 %328, 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %191) #12
  %330 = call %"class.WTF::StringImpl"* @_ZNK5blink13QualifiedName8ToStringEv(%"class.blink::QualifiedName"* %203) #12
  store %"class.WTF::StringImpl"* %330, %"class.WTF::StringImpl"** %192, align 8
  call void @_ZN5blink22WebFrameSerializerImpl15AppendAttributeERN3WTF13StringBuilderEbRKNS1_6StringES6_(%"class.blink::WebFrameSerializerImpl"* %0, %"class.WTF::StringBuilder"* nonnull dereferenceable(48) %6, i1 zeroext %329, %"class.WTF::String"* nonnull dereferenceable(8) %16, %"class.WTF::String"* nonnull dereferenceable(8) %11)
  %331 = icmp eq %"class.WTF::StringImpl"* %330, null
  br i1 %331, label %345, label %332

332:                                              ; preds = %326
  %333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %330, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %334 = load atomic i32, i32* %333 monotonic, align 4
  %335 = and i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %330, i64 0, i32 0
  %338 = load i32, i32* %337, align 4
  br i1 %336, label %339, label %341

339:                                              ; preds = %332
  %340 = add i32 %338, -1
  store i32 %340, i32* %337, align 4
  br label %341

341:                                              ; preds = %339, %332
  %342 = phi i32 [ %340, %339 ], [ %338, %332 ]
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %344, label %345

344:                                              ; preds = %341
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %330) #12
  br label %345

345:                                              ; preds = %326, %341, %344
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %191) #12
  br label %346

346:                                              ; preds = %225, %345
  %347 = phi i8 [ %327, %345 ], [ %202, %225 ]
  %348 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %172, align 8
  %349 = icmp eq %"class.WTF::StringImpl"* %348, null
  br i1 %349, label %363, label %350

350:                                              ; preds = %346
  %351 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %352 = load atomic i32, i32* %351 monotonic, align 4
  %353 = and i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 0
  %356 = load i32, i32* %355, align 4
  br i1 %354, label %357, label %359

357:                                              ; preds = %350
  %358 = add i32 %356, -1
  store i32 %358, i32* %355, align 4
  br label %359

359:                                              ; preds = %357, %350
  %360 = phi i32 [ %358, %357 ], [ %356, %350 ]
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %363

362:                                              ; preds = %359
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %348) #12
  br label %363

363:                                              ; preds = %346, %359, %362
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %171) #12
  %364 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %201, i64 1
  %365 = icmp eq %"class.blink::Attribute"* %364, %168
  br i1 %365, label %193, label %200

366:                                              ; preds = %193
  %367 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %368 = load i32, i32* %367, align 8
  %369 = and i32 %368, 48
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %371, label %426

371:                                              ; preds = %366
  %372 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %373 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kIFrameTagE, align 8
  %374 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %373, i64 0, i32 0, i32 0, i32 0
  %375 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %374, align 8
  %376 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %372, i64 1, i32 2
  %377 = bitcast %"class.blink::Member"* %376 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %378 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %377, align 8
  %379 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %378, i64 0, i32 3, i32 0, i32 0, i32 0
  %380 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %379, align 8
  %381 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %375, i64 0, i32 3, i32 0, i32 0, i32 0
  %382 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %381, align 8
  %383 = icmp eq %"class.WTF::StringImpl"* %380, %382
  br i1 %383, label %384, label %426

384:                                              ; preds = %371
  %385 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i64 0, i32 3
  %386 = load i8, i8* %385, align 8, !range !2
  %387 = icmp ne i8 %386, 0
  %388 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %388) #12
  %389 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %390 = call %"class.WTF::StringImpl"* @_ZNK5blink13QualifiedName8ToStringEv(%"class.blink::QualifiedName"* %389) #12
  %391 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %390, %"class.WTF::StringImpl"** %391, align 8
  %392 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %392) #12
  %393 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* nonnull %10) #12
  %394 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %393, %"class.WTF::StringImpl"** %394, align 8
  call void @_ZN5blink22WebFrameSerializerImpl15AppendAttributeERN3WTF13StringBuilderEbRKNS1_6StringES6_(%"class.blink::WebFrameSerializerImpl"* %0, %"class.WTF::StringBuilder"* nonnull dereferenceable(48) %6, i1 zeroext %387, %"class.WTF::String"* nonnull dereferenceable(8) %17, %"class.WTF::String"* nonnull dereferenceable(8) %18)
  %395 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %394, align 8
  %396 = icmp eq %"class.WTF::StringImpl"* %395, null
  br i1 %396, label %410, label %397

397:                                              ; preds = %384
  %398 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %395, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %399 = load atomic i32, i32* %398 monotonic, align 4
  %400 = and i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %395, i64 0, i32 0
  %403 = load i32, i32* %402, align 4
  br i1 %401, label %404, label %406

404:                                              ; preds = %397
  %405 = add i32 %403, -1
  store i32 %405, i32* %402, align 4
  br label %406

406:                                              ; preds = %404, %397
  %407 = phi i32 [ %405, %404 ], [ %403, %397 ]
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %409, label %410

409:                                              ; preds = %406
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %395) #12
  br label %410

410:                                              ; preds = %384, %406, %409
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %392) #12
  %411 = icmp eq %"class.WTF::StringImpl"* %390, null
  br i1 %411, label %425, label %412

412:                                              ; preds = %410
  %413 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %390, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %414 = load atomic i32, i32* %413 monotonic, align 4
  %415 = and i32 %414, 2
  %416 = icmp eq i32 %415, 0
  %417 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %390, i64 0, i32 0
  %418 = load i32, i32* %417, align 4
  br i1 %416, label %419, label %421

419:                                              ; preds = %412
  %420 = add i32 %418, -1
  store i32 %420, i32* %417, align 4
  br label %421

421:                                              ; preds = %419, %412
  %422 = phi i32 [ %420, %419 ], [ %418, %412 ]
  %423 = icmp eq i32 %422, 0
  br i1 %423, label %424, label %425

424:                                              ; preds = %421
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %390) #12
  br label %425

425:                                              ; preds = %410, %421, %424
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %388) #12
  br label %426

426:                                              ; preds = %193, %366, %425, %371
  %427 = call %"class.WTF::StringImpl"* @_ZN5blink22WebFrameSerializerImpl31PostActionAfterSerializeOpenTagEPKNS_7ElementEPNS0_17SerializeDomParamE(%"class.blink::WebFrameSerializerImpl"* undef, %"class.blink::Element"* %1, %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2)
  %428 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %429 = load %"class.blink::Node"*, %"class.blink::Node"** %428, align 8
  %430 = icmp eq %"class.blink::Node"* %429, null
  br i1 %430, label %431, label %435

431:                                              ; preds = %426
  %432 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i64 0, i32 9
  %433 = load i8, i8* %432, align 1, !range !2
  %434 = icmp eq i8 %433, 0
  br i1 %434, label %436, label %435

435:                                              ; preds = %426, %431
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %6, i8 zeroext 62) #12
  br label %436

436:                                              ; preds = %431, %435
  %437 = bitcast %"class.WTF::StringView"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %437) #12
  %438 = icmp eq %"class.WTF::StringImpl"* %427, null
  br i1 %438, label %439, label %443

439:                                              ; preds = %436
  %440 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 1
  store i8* null, i8** %440, align 8
  %441 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %442 = bitcast %"class.WTF::StringView"* %19 to i64*
  store i64 %441, i64* %442, align 8
  br label %450

443:                                              ; preds = %436
  %444 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 0
  store %"class.WTF::StringImpl"* %427, %"class.WTF::StringImpl"** %444, align 8
  %445 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %427, i64 0, i32 1
  %446 = load i32, i32* %445, align 4
  %447 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %427, i64 1
  %448 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 1
  %449 = bitcast i8** %448 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %447, %"class.WTF::StringImpl"** %449, align 8
  br label %450

450:                                              ; preds = %439, %443
  %451 = phi i32 [ %446, %443 ], [ 0, %439 ]
  %452 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 2
  store i32 %451, i32* %452, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %19)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %437) #12
  %453 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %6) #12
  %454 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 3
  %455 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %455) #12
  %456 = icmp eq %"class.WTF::StringImpl"* %453, null
  br i1 %456, label %457, label %461

457:                                              ; preds = %450
  %458 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %458, align 8
  %459 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %460 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %459, i64* %460, align 8
  br label %468

461:                                              ; preds = %450
  %462 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %453, %"class.WTF::StringImpl"** %462, align 8
  %463 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %453, i64 0, i32 1
  %464 = load i32, i32* %463, align 4
  %465 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %453, i64 1
  %466 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %467 = bitcast i8** %466 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %465, %"class.WTF::StringImpl"** %467, align 8
  br label %468

468:                                              ; preds = %457, %461
  %469 = phi i32 [ %464, %461 ], [ 0, %457 ]
  %470 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %469, i32* %470, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %454, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %455) #12
  call void @_ZN5blink22WebFrameSerializerImpl20EncodeAndFlushBufferENS_24WebFrameSerializerClient24FrameSerializationStatusEPNS0_17SerializeDomParamENS0_11FlushOptionE(%"class.blink::WebFrameSerializerImpl"* %0, i32 0, %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i32 1) #12
  br i1 %456, label %484, label %471

471:                                              ; preds = %468
  %472 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %453, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %473 = load atomic i32, i32* %472 monotonic, align 4
  %474 = and i32 %473, 2
  %475 = icmp eq i32 %474, 0
  %476 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %453, i64 0, i32 0
  %477 = load i32, i32* %476, align 4
  br i1 %475, label %478, label %480

478:                                              ; preds = %471
  %479 = add i32 %477, -1
  store i32 %479, i32* %476, align 4
  br label %480

480:                                              ; preds = %478, %471
  %481 = phi i32 [ %479, %478 ], [ %477, %471 ]
  %482 = icmp eq i32 %481, 0
  br i1 %482, label %483, label %484

483:                                              ; preds = %480
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %453) #12
  br label %484

484:                                              ; preds = %468, %480, %483
  br i1 %438, label %498, label %485

485:                                              ; preds = %484
  %486 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %427, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %487 = load atomic i32, i32* %486 monotonic, align 4
  %488 = and i32 %487, 2
  %489 = icmp eq i32 %488, 0
  %490 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %427, i64 0, i32 0
  %491 = load i32, i32* %490, align 4
  br i1 %489, label %492, label %494

492:                                              ; preds = %485
  %493 = add i32 %491, -1
  store i32 %493, i32* %490, align 4
  br label %494

494:                                              ; preds = %492, %485
  %495 = phi i32 [ %493, %492 ], [ %491, %485 ]
  %496 = icmp eq i32 %495, 0
  br i1 %496, label %497, label %498

497:                                              ; preds = %494
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %427) #12
  br label %498

498:                                              ; preds = %484, %494, %497
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #12
  br label %499

499:                                              ; preds = %55, %498
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %6) #12
  %500 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %501 = icmp eq %"class.WTF::StringImpl"* %500, null
  br i1 %501, label %515, label %502

502:                                              ; preds = %499
  %503 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %500, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %504 = load atomic i32, i32* %503 monotonic, align 4
  %505 = and i32 %504, 2
  %506 = icmp eq i32 %505, 0
  %507 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %500, i64 0, i32 0
  %508 = load i32, i32* %507, align 4
  br i1 %506, label %509, label %511

509:                                              ; preds = %502
  %510 = add i32 %508, -1
  store i32 %510, i32* %507, align 4
  br label %511

511:                                              ; preds = %509, %502
  %512 = phi i32 [ %510, %509 ], [ %508, %502 ]
  %513 = icmp eq i32 %512, 0
  br i1 %513, label %514, label %515

514:                                              ; preds = %511
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %500) #12
  br label %515

515:                                              ; preds = %499, %511, %514
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #12
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15DeprecatedLowerEv(%"class.WTF::String"*) local_unnamed_addr #3

declare %"class.blink::WebFrame"* @_ZN5blink8WebFrame13FromCoreFrameEPNS_5FrameE(%"class.blink::Frame"*) local_unnamed_addr #3

declare void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"*) unnamed_addr #3

declare void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* sret, %"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZNK5blink13QualifiedName8ToStringEv(%"class.blink::QualifiedName"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22WebFrameSerializerImpl14EndTagToStringEPNS_7ElementEPNS0_17SerializeDomParamE(%"class.blink::WebFrameSerializerImpl"*, %"class.blink::Element"*, %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringBuilder", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = bitcast %"class.WTF::StringBuilder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %15) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 48, i1 false)
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 1
  %18 = bitcast %union.anon.816* %17 to i8*
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 2
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 3
  store i8 1, i8* %20, align 4
  %21 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 4
  store i8 0, i8* %21, align 1
  %22 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #12
  %23 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i64 0, i32 3
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i64 0, i32 7
  %28 = load %"class.blink::Element"*, %"class.blink::Element"** %27, align 8
  %29 = icmp eq %"class.blink::Element"* %28, %1
  %30 = zext i1 %29 to i8
  br label %31

31:                                               ; preds = %26, %3
  %32 = phi i8 [ 0, %3 ], [ %30, %26 ]
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %33, align 8
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %35 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 0, i32* %36, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #12
  %37 = icmp eq i8 %32, 0
  br i1 %37, label %38, label %242

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %40 = load %"class.blink::Node"*, %"class.blink::Node"** %39, align 8
  %41 = icmp eq %"class.blink::Node"* %40, null
  br i1 %41, label %42, label %46

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i64 0, i32 9
  %44 = load i8, i8* %43, align 1, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %104, label %46

46:                                               ; preds = %38, %42
  %47 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #12
  %48 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %49 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8** %50, align 8
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 2, i32* %51, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #12
  %52 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #12
  %53 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #12
  %54 = bitcast %"class.blink::Element"* %1 to %"class.WTF::StringImpl"* (%"class.blink::Element"*)***
  %55 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)**, %"class.WTF::StringImpl"* (%"class.blink::Element"*)*** %54, align 8
  %56 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %55, i64 27
  %57 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %56, align 8
  %58 = call %"class.WTF::StringImpl"* %57(%"class.blink::Element"* %1) #12
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %59, align 8
  %60 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15DeprecatedLowerEv(%"class.WTF::String"* nonnull %9) #12
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %67

62:                                               ; preds = %46
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %63, align 8
  %64 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %65 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 0, i32* %66, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  br label %87

67:                                               ; preds = %46
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %60, %"class.WTF::StringImpl"** %68, align 8
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 1
  %72 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %73 = bitcast i8** %72 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"** %73, align 8
  %74 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %70, i32* %74, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %67
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %67
  %84 = phi i32 [ %82, %81 ], [ %80, %67 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #12
  br label %87

87:                                               ; preds = %62, %83, %86
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #12
  br label %103

103:                                              ; preds = %87, %99, %102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #12
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %5, i8 zeroext 62) #12
  br label %181

104:                                              ; preds = %42
  %105 = load i8, i8* %23, align 8, !range !2
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %175, label %107

107:                                              ; preds = %104
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %5, i8 zeroext 62) #12
  %108 = icmp eq %"class.blink::Element"* %1, null
  br i1 %108, label %117, label %109

109:                                              ; preds = %107
  %110 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %111 = load i32, i32* %110, align 8
  %112 = and i32 %111, 48
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %109
  %115 = bitcast %"class.blink::Element"* %1 to %"class.blink::HTMLElement"*
  %116 = call zeroext i1 @_ZNK5blink11HTMLElement21ShouldSerializeEndTagEv(%"class.blink::HTMLElement"* nonnull %115) #12
  br i1 %116, label %117, label %181

117:                                              ; preds = %109, %107, %114
  %118 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #12
  %119 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %120 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8** %121, align 8
  %122 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 2, i32* %122, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #12
  %123 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %123) #12
  %124 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #12
  %125 = bitcast %"class.blink::Element"* %1 to %"class.WTF::StringImpl"* (%"class.blink::Element"*)***
  %126 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)**, %"class.WTF::StringImpl"* (%"class.blink::Element"*)*** %125, align 8
  %127 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %126, i64 27
  %128 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %127, align 8
  %129 = call %"class.WTF::StringImpl"* %128(%"class.blink::Element"* %1) #12
  %130 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %129, %"class.WTF::StringImpl"** %130, align 8
  %131 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15DeprecatedLowerEv(%"class.WTF::String"* nonnull %12) #12
  %132 = icmp eq %"class.WTF::StringImpl"* %131, null
  br i1 %132, label %133, label %138

133:                                              ; preds = %117
  %134 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* null, i8** %134, align 8
  %135 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %136 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 0, i32* %137, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  br label %158

138:                                              ; preds = %117
  %139 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %131, %"class.WTF::StringImpl"** %139, align 8
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 1
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 1
  %143 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %144 = bitcast i8** %143 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %142, %"class.WTF::StringImpl"** %144, align 8
  %145 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %141, i32* %145, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %138
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %138
  %155 = phi i32 [ %153, %152 ], [ %151, %138 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %131) #12
  br label %158

158:                                              ; preds = %133, %154, %157
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %160, label %174, label %161

161:                                              ; preds = %158
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  br i1 %165, label %168, label %170

168:                                              ; preds = %161
  %169 = add i32 %167, -1
  store i32 %169, i32* %166, align 4
  br label %170

170:                                              ; preds = %168, %161
  %171 = phi i32 [ %169, %168 ], [ %167, %161 ]
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %170
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %159) #12
  br label %174

174:                                              ; preds = %158, %170, %173
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #12
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %5, i8 zeroext 62) #12
  br label %181

175:                                              ; preds = %104
  %176 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %176) #12
  %177 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %178 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %177, i64* %178, align 8
  %179 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), i8** %179, align 8
  %180 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 3, i32* %180, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %176) #12
  br label %181

181:                                              ; preds = %114, %174, %175, %103
  %182 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %182) #12
  %183 = call %"class.WTF::StringImpl"* @_ZN5blink22WebFrameSerializerImpl30PostActionAfterSerializeEndTagEPKNS_7ElementEPNS0_17SerializeDomParamE(%"class.blink::WebFrameSerializerImpl"* undef, %"class.blink::Element"* %1, %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2)
  %184 = icmp eq %"class.WTF::StringImpl"* %183, null
  br i1 %184, label %185, label %190

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %186, align 8
  %187 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %188 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 0, i32* %189, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %14)
  br label %210

190:                                              ; preds = %181
  %191 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %183, %"class.WTF::StringImpl"** %191, align 8
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 1
  %193 = load i32, i32* %192, align 4
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 1
  %195 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %196 = bitcast i8** %195 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %194, %"class.WTF::StringImpl"** %196, align 8
  %197 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %193, i32* %197, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %14)
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = load atomic i32, i32* %198 monotonic, align 4
  %200 = and i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 0
  %203 = load i32, i32* %202, align 4
  br i1 %201, label %204, label %206

204:                                              ; preds = %190
  %205 = add i32 %203, -1
  store i32 %205, i32* %202, align 4
  br label %206

206:                                              ; preds = %204, %190
  %207 = phi i32 [ %205, %204 ], [ %203, %190 ]
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %210

209:                                              ; preds = %206
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %183) #12
  br label %210

210:                                              ; preds = %185, %206, %209
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %182) #12
  %211 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %5) #12
  %212 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 3
  %213 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %213) #12
  %214 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %214, label %215, label %219

215:                                              ; preds = %210
  %216 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %216, align 8
  %217 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %218 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %217, i64* %218, align 8
  br label %226

219:                                              ; preds = %210
  %220 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %211, %"class.WTF::StringImpl"** %220, align 8
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 1
  %222 = load i32, i32* %221, align 4
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 1
  %224 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %225 = bitcast i8** %224 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %223, %"class.WTF::StringImpl"** %225, align 8
  br label %226

226:                                              ; preds = %215, %219
  %227 = phi i32 [ %222, %219 ], [ 0, %215 ]
  %228 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %227, i32* %228, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %212, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %213) #12
  call void @_ZN5blink22WebFrameSerializerImpl20EncodeAndFlushBufferENS_24WebFrameSerializerClient24FrameSerializationStatusEPNS0_17SerializeDomParamENS0_11FlushOptionE(%"class.blink::WebFrameSerializerImpl"* %0, i32 0, %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i32 1) #12
  br i1 %214, label %242, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %229
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %235, %229 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %211) #12
  br label %242

242:                                              ; preds = %241, %238, %226, %31
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %5) #12
  %243 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %244 = icmp eq %"class.WTF::StringImpl"* %243, null
  br i1 %244, label %258, label %245

245:                                              ; preds = %242
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = load atomic i32, i32* %246 monotonic, align 4
  %248 = and i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 0
  %251 = load i32, i32* %250, align 4
  br i1 %249, label %252, label %254

252:                                              ; preds = %245
  %253 = add i32 %251, -1
  store i32 %253, i32* %250, align 4
  br label %254

254:                                              ; preds = %252, %245
  %255 = phi i32 [ %253, %252 ], [ %251, %245 ]
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %258

257:                                              ; preds = %254
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %243) #12
  br label %258

258:                                              ; preds = %242, %254, %257
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %15) #12
  ret void
}

declare zeroext i1 @_ZNK5blink11HTMLElement21ShouldSerializeEndTagEv(%"class.blink::HTMLElement"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22WebFrameSerializerImpl19BuildContentForNodeEPNS_4NodeEPNS0_17SerializeDomParamE(%"class.blink::WebFrameSerializerImpl"*, %"class.blink::Node"*, %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.blink::HeapHashSet.1755", align 8
  %7 = alloca %"class.blink::HeapHashSet.1755", align 8
  %8 = bitcast %"class.blink::Node"* %1 to i32 (%"class.blink::Node"*)***
  %9 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %9, i64 30
  %11 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %10, align 8
  %12 = tail call i32 %11(%"class.blink::Node"* %1) #12
  switch i32 %12, label %60 [
    i32 1, label %13
    i32 3, label %25
    i32 2, label %93
    i32 9, label %93
    i32 11, label %93
    i32 10, label %58
  ]

13:                                               ; preds = %3
  %14 = bitcast %"class.blink::Node"* %1 to %"class.blink::Element"*
  tail call void @_ZN5blink22WebFrameSerializerImpl15OpenTagToStringEPNS_7ElementEPNS0_17SerializeDomParamE(%"class.blink::WebFrameSerializerImpl"* %0, %"class.blink::Element"* %14, %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2)
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1
  %16 = bitcast %"class.blink::Node"* %15 to %"class.blink::Node"**
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  %18 = icmp eq %"class.blink::Node"* %17, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %20, %13
  tail call void @_ZN5blink22WebFrameSerializerImpl14EndTagToStringEPNS_7ElementEPNS0_17SerializeDomParamE(%"class.blink::WebFrameSerializerImpl"* %0, %"class.blink::Element"* %14, %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2)
  br label %93

20:                                               ; preds = %13, %20
  %21 = phi %"class.blink::Node"* [ %23, %20 ], [ %17, %13 ]
  tail call void @_ZN5blink22WebFrameSerializerImpl19BuildContentForNodeEPNS_4NodeEPNS0_17SerializeDomParamE(%"class.blink::WebFrameSerializerImpl"* %0, %"class.blink::Node"* nonnull %21, %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2)
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %21, i64 0, i32 5, i32 0, i32 0
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %22, align 8
  %24 = icmp eq %"class.blink::Node"* %23, null
  br i1 %24, label %19, label %20

25:                                               ; preds = %3
  %26 = bitcast %"class.blink::HeapHashSet.1755"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 20, i1 false) #12
  %27 = call %"class.WTF::StringImpl"* @_ZN5blink12CreateMarkupEPKNS_4NodeENS_12ChildrenOnlyENS_12AbsoluteURLsENS_18IncludeShadowRootsENS_11HeapHashSetINS_6MemberINS_10ShadowRootEEEN3WTF10MemberHashIS8_EENSA_10HashTraitsIS9_EEEE(%"class.blink::Node"* %1, i32 0, i32 0, i32 0, %"class.blink::HeapHashSet.1755"* nonnull %6) #12
  %28 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 3
  %29 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #12
  %30 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %30, label %31, label %35

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %32, align 8
  %33 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %34 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %33, i64* %34, align 8
  br label %42

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %36, align 8
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 1
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %41 = bitcast i8** %40 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %41, align 8
  br label %42

42:                                               ; preds = %31, %35
  %43 = phi i32 [ %38, %35 ], [ 0, %31 ]
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %43, i32* %44, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %28, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #12
  call void @_ZN5blink22WebFrameSerializerImpl20EncodeAndFlushBufferENS_24WebFrameSerializerClient24FrameSerializationStatusEPNS0_17SerializeDomParamENS0_11FlushOptionE(%"class.blink::WebFrameSerializerImpl"* %0, i32 0, %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i32 1) #12
  br i1 %30, label %93, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %93

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #12
  br label %93

58:                                               ; preds = %3
  %59 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i64 0, i32 4
  store i8 1, i8* %59, align 1
  br label %60

60:                                               ; preds = %3, %58
  %61 = bitcast %"class.blink::HeapHashSet.1755"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 0, i64 20, i1 false) #12
  %62 = call %"class.WTF::StringImpl"* @_ZN5blink12CreateMarkupEPKNS_4NodeENS_12ChildrenOnlyENS_12AbsoluteURLsENS_18IncludeShadowRootsENS_11HeapHashSetINS_6MemberINS_10ShadowRootEEEN3WTF10MemberHashIS8_EENSA_10HashTraitsIS9_EEEE(%"class.blink::Node"* %1, i32 0, i32 0, i32 0, %"class.blink::HeapHashSet.1755"* nonnull %7) #12
  %63 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 3
  %64 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #12
  %65 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %65, label %66, label %70

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %67, align 8
  %68 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %69 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %68, i64* %69, align 8
  br label %77

70:                                               ; preds = %60
  %71 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %71, align 8
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 1
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %76 = bitcast i8** %75 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %76, align 8
  br label %77

77:                                               ; preds = %66, %70
  %78 = phi i32 [ %73, %70 ], [ 0, %66 ]
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %78, i32* %79, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %63, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #12
  call void @_ZN5blink22WebFrameSerializerImpl20EncodeAndFlushBufferENS_24WebFrameSerializerClient24FrameSerializationStatusEPNS0_17SerializeDomParamENS0_11FlushOptionE(%"class.blink::WebFrameSerializerImpl"* %0, i32 0, %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %2, i32 1) #12
  br i1 %65, label %93, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #12
  br label %93

93:                                               ; preds = %92, %89, %77, %57, %54, %42, %3, %3, %3, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22WebFrameSerializerImplC2EPNS_13WebLocalFrameEPNS_24WebFrameSerializerClientEPNS_18WebFrameSerializer21LinkRewritingDelegateEb(%"class.blink::WebFrameSerializerImpl"*, %"class.blink::WebLocalFrame"*, %"class.blink::WebFrameSerializerClient"*, %"class.blink::WebFrameSerializer::LinkRewritingDelegate"*, i1 zeroext) unnamed_addr #1 align 2 {
  %6 = zext i1 %4 to i8
  %7 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 1
  store %"class.blink::WebFrameSerializerClient"* %2, %"class.blink::WebFrameSerializerClient"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 2
  store %"class.blink::WebFrameSerializer::LinkRewritingDelegate"* %3, %"class.blink::WebFrameSerializer::LinkRewritingDelegate"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 3, i32 1
  %11 = bitcast %union.anon.816* %10 to i8*
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 3, i32 2
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 3, i32 3
  store i8 1, i8* %13, align 4
  %14 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 3, i32 4
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 4
  store i8 %6, i8* %15, align 8
  %16 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 6
  tail call void @_ZN5blink11WebEntitiesC1Eb(%"class.blink::WebEntities"* %16, i1 zeroext false) #12
  %17 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 7
  tail call void @_ZN5blink11WebEntitiesC1Eb(%"class.blink::WebEntities"* %17, i1 zeroext true) #12
  %18 = bitcast %"class.blink::WebFrameSerializerImpl"* %0 to %"class.blink::WebLocalFrame"**
  store %"class.blink::WebLocalFrame"* %1, %"class.blink::WebLocalFrame"** %18, align 8
  ret void
}

declare void @_ZN5blink11WebEntitiesC1Eb(%"class.blink::WebEntities"*, i1 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink22WebFrameSerializerImpl9SerializeEv(%"class.blink::WebFrameSerializerImpl"*) local_unnamed_addr #1 align 2 {
  %2 = alloca i16, align 2
  %3 = alloca %"class.blink::KURL", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::WebFrameSerializerImpl::SerializeDomParam", align 8
  %6 = alloca %"class.blink::WebVector.1762", align 8
  %7 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 0
  %8 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::WebLocalFrameImpl", %"class.blink::WebLocalFrameImpl"* %8, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %9, align 8
  %11 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %10) #12
  %12 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 4
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %35, label %16

16:                                               ; preds = %1
  %17 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i64 14) #12
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #12
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #12
  br label %34

34:                                               ; preds = %16, %30, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %37

35:                                               ; preds = %1
  %36 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %11, i64 0, i32 19
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %3, %"class.blink::KURL"* dereferenceable(112) %36) #12
  br label %37

37:                                               ; preds = %35, %34
  %38 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %3) #12
  br i1 %38, label %39, label %105

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %11, i64 0, i32 95, i32 0
  %41 = getelementptr inbounds %"class.WTF::TextEncoding", %"class.WTF::TextEncoding"* %40, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  %45 = call dereferenceable(8) %"class.WTF::TextEncoding"* @_ZN3WTF12UTF8EncodingEv() #12
  br label %46

46:                                               ; preds = %39, %44
  %47 = phi %"class.WTF::TextEncoding"* [ %45, %44 ], [ %40, %39 ]
  %48 = call zeroext i1 @_ZNK3WTF12TextEncoding22IsNonByteBasedEncodingEv(%"class.WTF::TextEncoding"* %47) #12
  br i1 %48, label %49, label %80

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 3
  %51 = bitcast i16* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %51)
  store i16 -257, i16* %2, align 2
  %52 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 3, i32 3
  %53 = load i8, i8* %52, align 4, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %59

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 3, i32 4
  %57 = load i8, i8* %56, align 1, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %55, %49
  call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %50, i32 1) #12
  br label %60

60:                                               ; preds = %59, %55
  %61 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 3, i32 1
  %62 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %63, %65
  br i1 %66, label %74, label %67, !prof !3

67:                                               ; preds = %60
  %68 = bitcast %union.anon.816* %61 to i16**
  %69 = load i16*, i16** %68, align 8
  %70 = zext i32 %63 to i64
  %71 = getelementptr inbounds i16, i16* %69, i64 %70
  store i16 -257, i16* %71, align 2
  %72 = load i32, i32* %62, align 4
  %73 = add i32 %72, 1
  store i32 %73, i32* %62, align 4
  br label %76

74:                                               ; preds = %60
  %75 = bitcast %union.anon.816* %61 to %"class.WTF::Vector.822"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.822"* %75, i16* nonnull dereferenceable(2) %2) #12
  br label %76

76:                                               ; preds = %67, %74
  %77 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 3, i32 2
  %78 = load i32, i32* %77, align 8
  %79 = add i32 %78, 1
  store i32 %79, i32* %77, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %51)
  br label %80

80:                                               ; preds = %76, %46
  %81 = bitcast %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %81) #12
  %82 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %5, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 -86, i64 24, i1 false)
  %83 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %5, i64 0, i32 0
  store %"class.blink::KURL"* %3, %"class.blink::KURL"** %83, align 8
  %84 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %5, i64 0, i32 1
  store %"class.WTF::TextEncoding"* %47, %"class.WTF::TextEncoding"** %84, align 8
  %85 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %5, i64 0, i32 2
  store %"class.blink::Document"* %11, %"class.blink::Document"** %85, align 8
  %86 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %5, i64 0, i32 3
  %87 = icmp eq %"class.blink::Document"* %11, null
  br i1 %87, label %92, label %88

88:                                               ; preds = %80
  %89 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %11, i64 0, i32 107
  %90 = load i8, i8* %89, align 8
  %91 = and i8 %90, 1
  br label %92

92:                                               ; preds = %80, %88
  %93 = phi i8 [ 0, %80 ], [ %91, %88 ]
  store i8 %93, i8* %86, align 8
  %94 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %5, i64 0, i32 4
  store i8 0, i8* %94, align 1
  %95 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %5, i64 0, i32 5
  store i8 0, i8* %95, align 2
  %96 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %5, i64 0, i32 7
  store %"class.blink::Element"* null, %"class.blink::Element"** %96, align 8
  %97 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %5, i64 0, i32 8
  store i8 0, i8* %97, align 8
  %98 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl::SerializeDomParam", %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* %5, i64 0, i32 9
  store i8 0, i8* %98, align 1
  %99 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %11, i64 0, i32 47, i32 0, i32 0
  %100 = load %"class.blink::Element"*, %"class.blink::Element"** %99, align 8
  %101 = icmp eq %"class.blink::Element"* %100, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %92
  %103 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %100, i64 0, i32 0, i32 0
  call void @_ZN5blink22WebFrameSerializerImpl19BuildContentForNodeEPNS_4NodeEPNS0_17SerializeDomParamE(%"class.blink::WebFrameSerializerImpl"* %0, %"class.blink::Node"* %103, %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* nonnull %5)
  br label %104

104:                                              ; preds = %92, %102
  call void @_ZN5blink22WebFrameSerializerImpl20EncodeAndFlushBufferENS_24WebFrameSerializerClient24FrameSerializationStatusEPNS0_17SerializeDomParamENS0_11FlushOptionE(%"class.blink::WebFrameSerializerImpl"* %0, i32 1, %"class.blink::WebFrameSerializerImpl::SerializeDomParam"* nonnull %5, i32 0)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %81) #12
  br label %121

105:                                              ; preds = %37
  %106 = getelementptr inbounds %"class.blink::WebFrameSerializerImpl", %"class.blink::WebFrameSerializerImpl"* %0, i64 0, i32 1
  %107 = load %"class.blink::WebFrameSerializerClient"*, %"class.blink::WebFrameSerializerClient"** %106, align 8
  %108 = bitcast %"class.blink::WebVector.1762"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #12
  %109 = bitcast %"class.blink::WebFrameSerializerClient"* %107 to void (%"class.blink::WebFrameSerializerClient"*, %"class.blink::WebVector.1762"*, i32)***
  %110 = bitcast %"class.blink::WebVector.1762"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 0, i64 24, i1 false)
  %111 = load void (%"class.blink::WebFrameSerializerClient"*, %"class.blink::WebVector.1762"*, i32)**, void (%"class.blink::WebFrameSerializerClient"*, %"class.blink::WebVector.1762"*, i32)*** %109, align 8
  %112 = load void (%"class.blink::WebFrameSerializerClient"*, %"class.blink::WebVector.1762"*, i32)*, void (%"class.blink::WebFrameSerializerClient"*, %"class.blink::WebVector.1762"*, i32)** %111, align 8
  call void %112(%"class.blink::WebFrameSerializerClient"* %107, %"class.blink::WebVector.1762"* nonnull dereferenceable(24) %6, i32 1) #12
  %113 = getelementptr inbounds %"class.blink::WebVector.1762", %"class.blink::WebVector.1762"* %6, i64 0, i32 0, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  %115 = icmp eq i8* %114, null
  br i1 %115, label %120, label %116

116:                                              ; preds = %105
  %117 = ptrtoint i8* %114 to i64
  %118 = getelementptr inbounds %"class.blink::WebVector.1762", %"class.blink::WebVector.1762"* %6, i64 0, i32 0, i32 0, i32 1
  %119 = bitcast i8** %118 to i64*
  store i64 %117, i64* %119, align 8
  call void @_ZdlPv(i8* nonnull %114) #15
  br label %120

120:                                              ; preds = %105, %116
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #12
  br label %121

121:                                              ; preds = %120, %104
  %122 = phi i1 [ true, %104 ], [ false, %120 ]
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %12) #12
  ret i1 %122
}

declare %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"*) local_unnamed_addr #3

declare void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #3

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK3WTF12TextEncoding22IsNonByteBasedEncodingEv(%"class.WTF::TextEncoding"*) local_unnamed_addr #3

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #3

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"*) unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.1877", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.1877", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.1877"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #12
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1877"* nonnull %3, i8* %8) #12
  %9 = bitcast %"class.WTF::StringTypeAdapter.1877"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #12
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1877"* nonnull %2, i8* %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #12
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #12
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %34
  call void @llvm.trap() #12
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #12
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #12
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #12
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !3

77:                                               ; preds = %70
  call void @llvm.trap() #12
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #12
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #12
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1877", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.1877"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1877", %"class.WTF::StringTypeAdapter.1877"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.1877"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1877"* nonnull %4, i8* %14) #12
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1876"* %9) #12
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1876"* %9) #12
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0), i8* %25, i8* %26) #12
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.15, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.15, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1877", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1878", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1877", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.1877"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.1877"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1877"* nonnull %5, i8* %10) #12
  %11 = bitcast %"class.WTF::StringTypeAdapter.1877"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1877", %"class.WTF::StringTypeAdapter.1877"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #12
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1877"* nonnull %3, i8* %14) #12
  %15 = bitcast %"class.WTF::StringTypeAdapter.1878"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1878", %"class.WTF::StringTypeAdapter.1878"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1878", %"class.WTF::StringTypeAdapter.1878"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #12
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.1878"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1877"* nonnull %3, i8* %1) #12
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1878", %"class.WTF::StringTypeAdapter.1878"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1879"* nonnull %34, i8* %37) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1876"* %6) #12
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1877"* nonnull %5, i8* %40) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1877", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1878", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1877", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.1877"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.1877"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1877"* nonnull %5, i8* %10) #12
  %11 = bitcast %"class.WTF::StringTypeAdapter.1877"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1877", %"class.WTF::StringTypeAdapter.1877"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #12
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1877"* nonnull %3, i8* %14) #12
  %15 = bitcast %"class.WTF::StringTypeAdapter.1878"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1878", %"class.WTF::StringTypeAdapter.1878"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1878", %"class.WTF::StringTypeAdapter.1878"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #12
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.1878"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1877"* nonnull %3, i16* %1) #12
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1878", %"class.WTF::StringTypeAdapter.1878"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1879"* nonnull %34, i16* %37) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1876"* %6) #12
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1877"* nonnull %5, i16* %40) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1877"*, i8*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1876"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1877", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.1877"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1877", %"class.WTF::StringTypeAdapter.1877"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.1876", %"class.WTF::StringAppend.1876"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.1877"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1877"* nonnull %4, i8* %13) #12
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1876", %"class.WTF::StringAppend.1876"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0), i8* %30, i8* %31) #12
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.15, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0), i8* %45, i8* %46) #12
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.15, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #12
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  ret i32 %23
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1877"*, i8*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1879"*, i8*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1877"*, i16*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1879"*, i16*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #12
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !3

22:                                               ; preds = %15
  %23 = bitcast %union.anon.816* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon.816* %16 to %"class.WTF::Vector.822"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.822"* %30, i16* nonnull dereferenceable(2) %3) #12
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #12
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !3

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.817", %"class.WTF::Vector.817"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.817"* %41, i8* nonnull dereferenceable(1) %4) #12
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.817"*, i8* dereferenceable(1)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.817", %"class.WTF::Vector.817"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.817", %"class.WTF::Vector.817"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.817"* %0, i32 %5) #12
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.817"* %0, i32 %5) #12
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.817"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.817", %"class.WTF::Vector.817"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.17, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.817", %"class.WTF::Vector.817"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #12
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #12
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.817"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.817", %"class.WTF::Vector.817"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.817"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.817"* %0, i32 %27) #12
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.817"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.817", %"class.WTF::Vector.817"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.817", %"class.WTF::Vector.817"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.817"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.817", %"class.WTF::Vector.817"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.817", %"class.WTF::Vector.817"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.817", %"class.WTF::Vector.817"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.817"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.817", %"class.WTF::Vector.817"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #12
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.818"* %18, i8* nonnull %6) #12
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #12
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #12
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.817", %"class.WTF::Vector.817"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !4

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.817", %"class.WTF::Vector.817"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #12
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.817", %"class.WTF::Vector.817"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !4

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.817", %"class.WTF::Vector.817"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.818"* %46, i8* %42) #12
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.817"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.817", %"class.WTF::Vector.817"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.20, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.21, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #12
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.818"*, i8*) local_unnamed_addr #9 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #12
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

declare void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.822"*, i16* dereferenceable(2)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.822", %"class.WTF::Vector.822"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.822", %"class.WTF::Vector.822"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.822"* %0, i32 %5) #12
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.822"* %0, i32 %5) #12
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.822"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.822", %"class.WTF::Vector.822"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.17, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.822", %"class.WTF::Vector.822"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #12
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #12
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.822"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.822", %"class.WTF::Vector.822"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.822"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.822"* %0, i32 %27) #12
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.822"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.822", %"class.WTF::Vector.822"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.822", %"class.WTF::Vector.822"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.822"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.822", %"class.WTF::Vector.822"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.822", %"class.WTF::Vector.822"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.822", %"class.WTF::Vector.822"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.822"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.822", %"class.WTF::Vector.822"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #12
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.823"* %19, i16* nonnull %6) #12
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #12
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #12
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.822", %"class.WTF::Vector.822"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !4

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.822", %"class.WTF::Vector.822"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #12
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.822", %"class.WTF::Vector.822"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !4

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.822", %"class.WTF::Vector.822"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.823"* %53, i16* %48) #12
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.822"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.822", %"class.WTF::Vector.822"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.20, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.21, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.823"*, i16*) local_unnamed_addr #9 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
