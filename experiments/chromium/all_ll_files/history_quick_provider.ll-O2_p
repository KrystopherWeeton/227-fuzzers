; ModuleID = '../../components/omnibox/browser/history_quick_provider.cc'
source_filename = "../../components/omnibox/browser/history_quick_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%class.HistoryQuickProvider = type { %class.HistoryProvider, %class.AutocompleteInput, %class.InMemoryURLIndex* }
%class.HistoryProvider = type { %class.AutocompleteProvider, %class.AutocompleteProviderClient* }
%class.AutocompleteProvider = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i64, %"class.std::__1::vector", i8, i32 }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.AutocompleteMatch*, %struct.AutocompleteMatch*, %"class.std::__1::__compressed_pair" }
%struct.AutocompleteMatch = type { %class.AutocompleteProvider*, i32, i32, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %struct.SplitAutocompletion, i8, %class.GURL, %class.GURL, %"class.std::__1::basic_string.7", %class.GURL, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.388", %"class.std::__1::basic_string", %"class.std::__1::vector.388", %"class.std::__1::basic_string", %"class.std::__1::vector.388", %"class.absl::optional.395", i8, [7 x i8], %"class.absl::optional.400", i32, i32, i8, %"class.base::internal::flat_tree", %"class.std::__1::unique_ptr.424", %"class.std::__1::basic_string", i8, %class.scoped_refptr.429, i8, %"class.std::__1::unique_ptr.430", %"class.std::__1::unique_ptr.436", %"class.std::__1::map", %"class.std::__1::vector", %"class.std::__1::vector.443", %"class.std::__1::vector.465" }
%struct.SplitAutocompletion = type { %"class.std::__1::basic_string", %"class.std::__1::vector.381" }
%"class.std::__1::vector.381" = type { %"class.std::__1::__vector_base.382" }
%"class.std::__1::__vector_base.382" = type { %"class.gfx::Range"*, %"class.gfx::Range"*, %"class.std::__1::__compressed_pair.383" }
%"class.gfx::Range" = type { i32, i32 }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"class.gfx::Range"* }
%"class.std::__1::basic_string.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.10 }
%union.anon.10 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string.7", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %class.GURL* }
%"class.std::__1::vector.388" = type { %"class.std::__1::__vector_base.389" }
%"class.std::__1::__vector_base.389" = type { %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"*, %"class.std::__1::__compressed_pair.390" }
%"struct.AutocompleteMatch::ACMatchClassification" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"struct.AutocompleteMatch::ACMatchClassification"* }
%"class.absl::optional.395" = type { %"class.absl::optional_internal::optional_data.396" }
%"class.absl::optional_internal::optional_data.396" = type { %"class.absl::optional_internal::optional_data_base.397" }
%"class.absl::optional_internal::optional_data_base.397" = type { %"class.absl::optional_internal::optional_data_dtor_base.398" }
%"class.absl::optional_internal::optional_data_dtor_base.398" = type { i8, %union.anon.399 }
%union.anon.399 = type { i32 }
%"class.absl::optional.400" = type { %"class.absl::optional_internal::optional_data.401" }
%"class.absl::optional_internal::optional_data.401" = type { %"class.absl::optional_internal::optional_data_base.402" }
%"class.absl::optional_internal::optional_data_base.402" = type { %"class.absl::optional_internal::optional_data_dtor_base.403" }
%"class.absl::optional_internal::optional_data_dtor_base.403" = type { i8, [7 x i8], %union.anon.404 }
%union.anon.404 = type { %class.SuggestionAnswer }
%class.SuggestionAnswer = type <{ %class.GURL, %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine", i32, [4 x i8] }>
%"class.SuggestionAnswer::ImageLine" = type { %"class.std::__1::vector.405", i32, %"class.absl::optional.412", %"class.absl::optional.412", %class.GURL }
%"class.std::__1::vector.405" = type { %"class.std::__1::__vector_base.406" }
%"class.std::__1::__vector_base.406" = type { %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"*, %"class.std::__1::__compressed_pair.407" }
%"class.SuggestionAnswer::TextField" = type { %"class.std::__1::basic_string", i32, i8, i32, i32 }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.SuggestionAnswer::TextField"* }
%"class.absl::optional.412" = type { %"class.absl::optional_internal::optional_data.413" }
%"class.absl::optional_internal::optional_data.413" = type { %"class.absl::optional_internal::optional_data_base.414" }
%"class.absl::optional_internal::optional_data_base.414" = type { %"class.absl::optional_internal::optional_data_dtor_base.415" }
%"class.absl::optional_internal::optional_data_dtor_base.415" = type { i8, %union.anon.416 }
%union.anon.416 = type { %"class.SuggestionAnswer::TextField" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.417" }
%"class.std::__1::vector.417" = type { %"class.std::__1::__vector_base.418" }
%"class.std::__1::__vector_base.418" = type { i32*, i32*, %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { i32* }
%"class.std::__1::unique_ptr.424" = type { %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.AutocompleteMatch* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%class.scoped_refptr.429 = type { %class.OmniboxAction* }
%class.OmniboxAction = type opaque
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"struct.TemplateURLRef::SearchTermsArgs"* }
%"struct.TemplateURLRef::SearchTermsArgs" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, %"class.std::__1::basic_string.7", i32, i64, %"class.std::__1::basic_string.7", i32, %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", i8, %"class.std::__1::basic_string.7", %class.GURL, %"class.gfx::Size", i32, i8, %"struct.TemplateURLRef::SearchTermsArgs::ContextualSearchParams" }
%"class.gfx::Size" = type { i32, i32 }
%"struct.TemplateURLRef::SearchTermsArgs::ContextualSearchParams" = type { i32, i32, %"class.std::__1::basic_string.7", i64, i32, i8, %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7" }
%"class.std::__1::unique_ptr.436" = type { %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"struct.std::__1::pair.439"* }
%"struct.std::__1::pair.439" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.53", %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { i64 }
%"class.std::__1::vector.443" = type { %"class.std::__1::__vector_base.444" }
%"class.std::__1::__vector_base.444" = type { %"struct.query_tiles::Tile"*, %"struct.query_tiles::Tile"*, %"class.std::__1::__compressed_pair.460" }
%"struct.query_tiles::Tile" = type { %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::vector.445", %"class.std::__1::vector.452", %"class.std::__1::vector.269" }
%"class.std::__1::vector.445" = type { %"class.std::__1::__vector_base.446" }
%"class.std::__1::__vector_base.446" = type { %"struct.query_tiles::ImageMetadata"*, %"struct.query_tiles::ImageMetadata"*, %"class.std::__1::__compressed_pair.447" }
%"struct.query_tiles::ImageMetadata" = type { %class.GURL }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"struct.query_tiles::ImageMetadata"* }
%"class.std::__1::vector.452" = type { %"class.std::__1::__vector_base.453" }
%"class.std::__1::__vector_base.453" = type { %"class.std::__1::unique_ptr.454"*, %"class.std::__1::unique_ptr.454"*, %"class.std::__1::__compressed_pair.455" }
%"class.std::__1::unique_ptr.454" = type opaque
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.456" }
%"struct.std::__1::__compressed_pair_elem.456" = type { %"class.std::__1::unique_ptr.454"* }
%"class.std::__1::vector.269" = type { %"class.std::__1::__vector_base.270" }
%"class.std::__1::__vector_base.270" = type { %"class.std::__1::basic_string.7"*, %"class.std::__1::basic_string.7"*, %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.std::__1::basic_string.7"* }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.461" = type { %"struct.query_tiles::Tile"* }
%"class.std::__1::vector.465" = type { %"class.std::__1::__vector_base.466" }
%"class.std::__1::__vector_base.466" = type { %"struct.AutocompleteMatch::NavsuggestTile"*, %"struct.AutocompleteMatch::NavsuggestTile"*, %"class.std::__1::__compressed_pair.467" }
%"struct.AutocompleteMatch::NavsuggestTile" = type { %class.GURL, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"struct.AutocompleteMatch::NavsuggestTile"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%class.AutocompleteInput = type { %"class.std::__1::basic_string", i64, %class.GURL, %"class.std::__1::basic_string", i32, i32, %"struct.url::Parsed", %"class.std::__1::basic_string", %class.GURL, %"class.std::__1::basic_string.7", i8, i8, i8, i32, i8, i32, %"class.std::__1::vector.19", %"class.absl::optional", i8, i8, i32 }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::basic_string"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.26 }
%union.anon.26 = type { %"class.std::__1::basic_string.7" }
%class.InMemoryURLIndex = type <{ %class.KeyedService, %"class.history::HistoryServiceObserver", %"class.base::SupportsWeakPtr", %"class.base::trace_event::MemoryDumpProvider", %"class.bookmarks::BookmarkModel"*, %"class.history::HistoryService"*, %class.TemplateURLService*, %"class.base::FilePath", %"class.std::__1::set", %class.scoped_refptr.380, %"class.InMemoryURLIndex::RestoreCacheObserver"*, %"class.InMemoryURLIndex::SaveCacheObserver"*, %class.scoped_refptr.122, %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker", i8, i8, i8, i8, [4 x i8], %"class.base::ScopedObservation", %"class.base::ThreadChecker", [7 x i8] }>
%class.KeyedService = type { i32 (...)** }
%"class.history::HistoryServiceObserver" = type { i32 (...)** }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.27", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.27" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.28" }
%"struct.std::__1::atomic.28" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i8 }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.bookmarks::BookmarkModel" = type { %"class.bookmarks::BookmarkUndoProvider", %class.KeyedService, %"class.std::__1::unique_ptr.33", i8, %"class.std::__1::unique_ptr.39", %"class.bookmarks::BookmarkNode"*, %"class.bookmarks::BookmarkPermanentNode"*, %"class.bookmarks::BookmarkPermanentNode"*, %"class.bookmarks::BookmarkPermanentNode"*, i64, %"class.base::ObserverList", %"class.base::CancelableTaskTracker", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.94", %class.scoped_refptr.100, i32, %"class.std::__1::unique_ptr.101", %"class.std::__1::set", %"class.bookmarks::BookmarkUndoDelegate"*, %"class.std::__1::unique_ptr.114", %class.scoped_refptr.120, %"class.base::WeakPtrFactory.121" }
%"class.bookmarks::BookmarkUndoProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.bookmarks::BookmarkClient"* }
%"class.bookmarks::BookmarkClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.bookmarks::BookmarkNode"* }
%"class.bookmarks::BookmarkNode" = type <{ %"class.ui::TreeNode", %"class.bookmarks::TitledUrlNode", i64, %"class.base::GUID", %class.GURL, i32, [4 x i8], %"class.base::Time", %"class.base::Time", %"class.gfx::Image", %"class.std::__1::unique_ptr", i32, [4 x i8], i64, %"class.std::__1::unique_ptr.50", i8, [7 x i8] }>
%"class.ui::TreeNode" = type { %"class.ui::TreeModelNode", %"class.std::__1::basic_string", %"class.bookmarks::BookmarkNode"*, %"class.std::__1::vector.42" }
%"class.ui::TreeModelNode" = type { i32 (...)** }
%"class.std::__1::vector.42" = type { %"class.std::__1::__vector_base.43" }
%"class.std::__1::__vector_base.43" = type { %"class.std::__1::unique_ptr.39"*, %"class.std::__1::unique_ptr.39"*, %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.std::__1::unique_ptr.39"* }
%"class.bookmarks::TitledUrlNode" = type { i32 (...)** }
%"class.base::GUID" = type { %"class.std::__1::basic_string.7" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.gfx::Image" = type { %class.scoped_refptr.49 }
%class.scoped_refptr.49 = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.std::__1::map"* }
%"class.bookmarks::BookmarkPermanentNode" = type { %"class.bookmarks::BookmarkNode.base", i8, [6 x i8] }
%"class.bookmarks::BookmarkNode.base" = type <{ %"class.ui::TreeNode", %"class.bookmarks::TitledUrlNode", i64, %"class.base::GUID", %class.GURL, i32, [4 x i8], %"class.base::Time", %"class.base::Time", %"class.gfx::Image", %"class.std::__1::unique_ptr", i32, [4 x i8], i64, %"class.std::__1::unique_ptr.50", i8 }>
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.67", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.68" }
%"class.std::__1::__vector_base.68" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.69" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.bookmarks::BookmarkStorage"* }
%"class.bookmarks::BookmarkStorage" = type opaque
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.bookmarks::TitledUrlIndex"* }
%"class.bookmarks::TitledUrlIndex" = type opaque
%class.scoped_refptr.100 = type { %"class.bookmarks::UrlIndex"* }
%"class.bookmarks::UrlIndex" = type opaque
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.bookmarks::BookmarkExpandedStateTracker"* }
%"class.bookmarks::BookmarkExpandedStateTracker" = type opaque
%"class.bookmarks::BookmarkUndoDelegate" = type opaque
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.bookmarks::BookmarkUndoDelegate"* }
%class.scoped_refptr.120 = type { %"class.bookmarks::ModelLoader"* }
%"class.bookmarks::ModelLoader" = type opaque
%"class.base::WeakPtrFactory.121" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.history::HistoryService" = type { %class.KeyedService, %class.scoped_refptr.122, %class.scoped_refptr.124, %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.137", i8, [7 x i8], %"class.base::ObserverList.143", %"class.base::RepeatingCallbackList", %"class.std::__1::unique_ptr.154", %"class.base::OnceCallback", %"class.base::WeakPtrFactory.160" }
%class.scoped_refptr.124 = type { %"class.history::HistoryBackend"* }
%"class.history::HistoryBackend" = type opaque
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.history::InMemoryHistoryBackend"* }
%"class.history::InMemoryHistoryBackend" = type opaque
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.history::HistoryClient"* }
%"class.history::HistoryClient" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.history::VisitDelegate"* }
%"class.history::VisitDelegate" = type opaque
%"class.base::ObserverList.143" = type <{ %"class.std::__1::vector.67", %"class.base::LinkedList.144", i64, i32, [4 x i8] }>
%"class.base::LinkedList.144" = type { %"class.base::LinkNode.145" }
%"class.base::LinkNode.145" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::RepeatingCallbackList" = type { %"class.base::internal::CallbackListBase" }
%"class.base::internal::CallbackListBase" = type { %"class.std::__1::list", i8, %"class.base::RepeatingCallback", %"class.base::WeakPtrFactory.153" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.147" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.151 }
%class.scoped_refptr.151 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.152", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.152" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.153" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.history::DeleteDirectiveHandler"* }
%"class.history::DeleteDirectiveHandler" = type opaque
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.160" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.TemplateURLService = type { %class.WebDataServiceConsumer, %class.KeyedService, %"class.syncer::SyncableService", %class.PrefService*, %"class.std::__1::unique_ptr.212", %class.scoped_refptr.218, %"class.std::__1::unique_ptr.230", %"class.base::RepeatingCallback", %class.PrefChangeRegistrar, %"class.std::__1::multimap", %"class.std::__1::map.255", %"class.std::__1::vector.264", %"class.base::ObserverList.311", %"class.std::__1::unique_ptr.323", i8, i8, i8, i32, %"class.std::__1::vector.339", %class.TemplateURL*, %"class.std::__1::unique_ptr.266", i32, i64, %"class.std::__1::unique_ptr.346", i8, i8, i8, %"class.std::__1::unique_ptr.352", %"class.std::__1::unique_ptr.358", %"class.std::__1::set", i32, %"class.base::OnceCallbackList", %"class.base::OnceCallback", %class.DefaultSearchManager, i32, i8, %"class.std::__1::basic_string.7", %"class.base::TimeTicks" }
%class.WebDataServiceConsumer = type { i32 (...)** }
%"class.syncer::SyncableService" = type { i32 (...)**, %"class.base::SupportsWeakPtr.161" }
%"class.base::SupportsWeakPtr.161" = type { %"class.base::internal::WeakReferenceOwner" }
%class.PrefService = type { i32 (...)**, %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.168", %class.scoped_refptr.191, %"class.base::RepeatingCallback.192", %class.scoped_refptr.193, %"class.std::__1::unordered_map" }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %class.PrefNotifierImpl* }
%class.PrefNotifierImpl = type opaque
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %class.PrefValueStore* }
%class.PrefValueStore = type { i32 (...)**, [7 x %"class.PrefValueStore::PrefStoreKeeper"], %"class.base::RepeatingCallback.172", %class.PrefNotifier*, %"class.std::__1::map.173", i8, %"class.std::__1::unique_ptr.182" }
%"class.PrefValueStore::PrefStoreKeeper" = type <{ %"class.PrefStore::Observer", %class.PrefValueStore*, %class.scoped_refptr.171, i32, [4 x i8] }>
%"class.PrefStore::Observer" = type { i32 (...)** }
%class.scoped_refptr.171 = type { %class.PrefStore* }
%class.PrefStore = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::RepeatingCallback.172" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.PrefNotifier = type opaque
%"class.std::__1::map.173" = type { %"class.std::__1::__tree.174" }
%"class.std::__1::__tree.174" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.175", %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.PrefValueStore::Delegate"* }
%"class.PrefValueStore::Delegate" = type { i32 (...)** }
%class.scoped_refptr.191 = type { %class.PersistentPrefStore* }
%class.PersistentPrefStore = type { %class.WriteablePrefStore.base, [4 x i8] }
%class.WriteablePrefStore.base = type { %class.PrefStore.base }
%class.PrefStore.base = type <{ i32 (...)**, %"class.base::RefCounted" }>
%"class.base::RepeatingCallback.192" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.193 = type { %class.PrefRegistry* }
%class.PrefRegistry = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.194", %"class.std::__1::__compressed_pair.202", %"class.std::__1::__compressed_pair.207", %"class.std::__1::__compressed_pair.209", [4 x i8] }>
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196", %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { float }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %class.SearchTermsData* }
%class.SearchTermsData = type { i32 (...)** }
%class.scoped_refptr.218 = type { %class.KeywordWebDataService* }
%class.KeywordWebDataService = type { %class.WebDataServiceBase, i64, %"class.std::__1::vector.220", %"class.base::RetainingOneShotTimer" }
%class.WebDataServiceBase = type { i32 (...)**, %"class.base::RefCountedDeleteOnSequence", %class.scoped_refptr.219 }
%"class.base::RefCountedDeleteOnSequence" = type { %"class.base::subtle::RefCountedThreadSafeBase", %class.scoped_refptr.122 }
%class.scoped_refptr.219 = type { %class.WebDatabaseService* }
%class.WebDatabaseService = type opaque
%"class.std::__1::vector.220" = type { %"class.std::__1::__vector_base.221" }
%"class.std::__1::__vector_base.221" = type { %"struct.std::__1::pair.222"*, %"struct.std::__1::pair.222"*, %"class.std::__1::__compressed_pair.223" }
%"struct.std::__1::pair.222" = type opaque
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"struct.std::__1::pair.222"* }
%"class.base::RetainingOneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.122, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.229" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.229" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %class.TemplateURLServiceClient* }
%class.TemplateURLServiceClient = type opaque
%class.PrefChangeRegistrar = type { %class.PrefObserver, %"class.std::__1::map.236", %class.PrefService* }
%class.PrefObserver = type { i32 (...)** }
%"class.std::__1::map.236" = type { %"class.std::__1::__tree.237" }
%"class.std::__1::__tree.237" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.238", %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.245" }
%"class.std::__1::__tree.245" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::map.255" = type { %"class.std::__1::__tree.256" }
%"class.std::__1::__tree.256" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.257", %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::vector.264" = type { %"class.std::__1::__vector_base.265" }
%"class.std::__1::__vector_base.265" = type { %"class.std::__1::unique_ptr.266"*, %"class.std::__1::unique_ptr.266"*, %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.std::__1::unique_ptr.266"* }
%"class.base::ObserverList.311" = type <{ %"class.std::__1::vector.312", %"class.base::LinkedList.320", i64, i32, [4 x i8] }>
%"class.std::__1::vector.312" = type { %"class.std::__1::__vector_base.313" }
%"class.std::__1::__vector_base.313" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.315" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr.314" }
%"class.base::WeakPtr.314" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.87 }
%class.scoped_refptr.87 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.320" = type { %"class.base::LinkNode.321" }
%"class.base::LinkNode.321" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %class.SearchHostToURLsMap* }
%class.SearchHostToURLsMap = type <{ %"class.std::__1::map.326", %"class.std::__1::basic_string.7", i8, [7 x i8] }>
%"class.std::__1::map.326" = type { %"class.std::__1::__tree.327" }
%"class.std::__1::__tree.327" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.328", %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::vector.339" = type { %"class.std::__1::__vector_base.340" }
%"class.std::__1::__vector_base.340" = type { %"struct.TemplateURLService::URLVisitedDetails"*, %"struct.TemplateURLService::URLVisitedDetails"*, %"class.std::__1::__compressed_pair.341" }
%"struct.TemplateURLService::URLVisitedDetails" = type <{ %class.GURL, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"struct.TemplateURLService::URLVisitedDetails"* }
%class.TemplateURL = type { %struct.TemplateURLData, %"class.std::__1::vector.276", %class.TemplateURLRef, %class.TemplateURLRef, %class.TemplateURLRef, %class.TemplateURLRef, %"class.std::__1::unique_ptr.297", i32, i32 }
%struct.TemplateURLData = type { %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %class.GURL, %class.GURL, %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %class.GURL, %class.GURL, i8, %"class.std::__1::vector.269", i64, %"class.base::Time", %"class.base::Time", %"class.base::Time", i8, i8, i32, i32, %"class.std::__1::basic_string.7", %"class.std::__1::vector.269", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.7" }
%"class.std::__1::vector.276" = type { %"class.std::__1::__vector_base.277" }
%"class.std::__1::__vector_base.277" = type { %class.TemplateURLRef*, %class.TemplateURLRef*, %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %class.TemplateURLRef* }
%class.TemplateURLRef = type <{ %class.TemplateURL*, i32, [4 x i8], i64, i8, i8, [6 x i8], %"class.std::__1::basic_string.7", i8, [7 x i8], %"class.std::__1::vector.278", i8, [7 x i8], %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", i32, [4 x i8], %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::vector.285", i8, [7 x i8] }>
%"class.std::__1::vector.278" = type { %"class.std::__1::__vector_base.279" }
%"class.std::__1::__vector_base.279" = type { %"struct.TemplateURLRef::Replacement"*, %"struct.TemplateURLRef::Replacement"*, %"class.std::__1::__compressed_pair.280" }
%"struct.TemplateURLRef::Replacement" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"struct.TemplateURLRef::Replacement"* }
%"class.std::__1::vector.285" = type { %"class.std::__1::__vector_base.286" }
%"class.std::__1::__vector_base.286" = type { %"struct.TemplateURLRef::PostParam"*, %"struct.TemplateURLRef::PostParam"*, %"class.std::__1::__compressed_pair.287" }
%"struct.TemplateURLRef::PostParam" = type { %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"struct.TemplateURLRef::PostParam"* }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"struct.TemplateURL::AssociatedExtensionInfo"* }
%"struct.TemplateURL::AssociatedExtensionInfo" = type <{ %"class.std::__1::basic_string.7", %"class.base::Time", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %class.TemplateURL* }
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.base::Clock"* }
%"class.base::Clock" = type { i32 (...)** }
%"class.std::__1::unique_ptr.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"class.syncer::SyncChangeProcessor"* }
%"class.syncer::SyncChangeProcessor" = type opaque
%"class.std::__1::unique_ptr.358" = type { %"class.std::__1::__compressed_pair.359" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"class.syncer::SyncErrorFactory"* }
%"class.syncer::SyncErrorFactory" = type opaque
%"class.base::OnceCallbackList" = type { %"class.base::internal::CallbackListBase.364", %"class.std::__1::list.365" }
%"class.base::internal::CallbackListBase.364" = type { %"class.std::__1::list.365", i8, %"class.base::RepeatingCallback", %"class.base::WeakPtrFactory.372" }
%"class.base::WeakPtrFactory.372" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::list.365" = type { %"class.std::__1::__list_imp.366" }
%"class.std::__1::__list_imp.366" = type { %"struct.std::__1::__list_node_base.367", %"class.std::__1::__compressed_pair.368" }
%"struct.std::__1::__list_node_base.367" = type { %"struct.std::__1::__list_node_base.367"*, %"struct.std::__1::__list_node_base.367"* }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%class.DefaultSearchManager = type <{ %class.PrefService*, %"class.base::RepeatingCallback.373", %class.PrefChangeRegistrar, %"class.std::__1::unique_ptr.374", %"class.std::__1::unique_ptr.374", %"class.std::__1::unique_ptr.374", i8, [7 x i8] }>
%"class.base::RepeatingCallback.373" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %struct.TemplateURLData* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.228" }
%"class.base::time_internal::TimeBase.228" = type { i64 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string.7" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.107" }
%"class.std::__1::__tree.107" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%class.scoped_refptr.380 = type { %class.URLIndexPrivateData* }
%class.URLIndexPrivateData = type opaque
%"class.InMemoryURLIndex::RestoreCacheObserver" = type { i32 (...)** }
%"class.InMemoryURLIndex::SaveCacheObserver" = type { i32 (...)** }
%class.scoped_refptr.122 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.123" }>
%"class.base::RefCountedThreadSafe.123" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::CancelableTaskTracker" = type { %"class.base::small_map", i64, %"class.base::SequenceCheckerDoNothing", %"class.base::WeakPtr", %"class.base::WeakPtrFactory" }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.74 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.74 = type { [4 x %"struct.std::__1::pair"] }
%"struct.std::__1::pair" = type { i64, %class.scoped_refptr.75 }
%class.scoped_refptr.75 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::ScopedObservation" = type { %"class.history::HistoryServiceObserver"*, %"class.history::HistoryService"* }
%"class.base::ThreadChecker" = type { i8 }
%class.AutocompleteProviderClient = type { i32 (...)** }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.11 }
%struct.anon.11 = type { i8 }
%"class.std::__1::vector.472" = type { %"class.std::__1::__vector_base.473" }
%"class.std::__1::__vector_base.473" = type { %struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*, %"class.std::__1::__compressed_pair.481" }
%struct.ScoredHistoryMatch = type { %"struct.history::HistoryMatch.base", i32, %"class.std::__1::vector.474", %"class.std::__1::vector.474" }
%"struct.history::HistoryMatch.base" = type <{ %"class.history::URLRow", i64, i8, i8, i8 }>
%"class.history::URLRow" = type <{ i32 (...)**, i64, %class.GURL, %"class.std::__1::basic_string", i32, i32, %"class.base::Time", i8, [7 x i8] }>
%"class.std::__1::vector.474" = type { %"class.std::__1::__vector_base.475" }
%"class.std::__1::__vector_base.475" = type { %struct.TermMatch*, %struct.TermMatch*, %"class.std::__1::__compressed_pair.476" }
%struct.TermMatch = type { i32, i64, i64 }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %struct.TermMatch* }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %struct.ScoredHistoryMatch* }
%"class.history::URLDatabase" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::allocator.5" = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"struct.std::__1::pair.488" = type { i8, %"class.std::__1::basic_string" }
%class.AutocompleteSchemeClassifier = type opaque
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.489" = type opaque

$_ZN17AutocompleteInputaSERKS_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16vectorI17AutocompleteMatchNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_ = comdat any

@_ZN20HistoryQuickProvider9disabled_E = hidden local_unnamed_addr global i8 0, align 1
@_ZTV20HistoryQuickProvider = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.HistoryQuickProvider*, %class.AutocompleteInput*, i1)* @_ZN20HistoryQuickProvider5StartERK17AutocompleteInputb to i8*), i8* bitcast (void (%class.AutocompleteProvider*, i1, i1)* @_ZN20AutocompleteProvider4StopEbb to i8*), i8* bitcast (void (%class.HistoryProvider*, %struct.AutocompleteMatch*)* @_ZN15HistoryProvider11DeleteMatchERK17AutocompleteMatch to i8*), i8* bitcast (void (%class.AutocompleteProvider*, %"class.std::__1::vector.489"*)* @_ZNK20AutocompleteProvider15AddProviderInfoEPNSt3__16vectorIN7metrics30OmniboxEventProto_ProviderInfoENS0_9allocatorIS3_EEEE to i8*), i8* bitcast (void (%class.AutocompleteProvider*)* @_ZN20AutocompleteProvider12ResetSessionEv to i8*), i8* bitcast (i64 (%class.HistoryQuickProvider*)* @_ZNK20HistoryQuickProvider19EstimateMemoryUsageEv to i8*), i8* bitcast (void (%class.HistoryQuickProvider*)* @_ZN20HistoryQuickProviderD2Ev to i8*), i8* bitcast (void (%class.HistoryQuickProvider*)* @_ZN20HistoryQuickProviderD0Ev to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [28 x i8] c"HistoryQuickProvider::Start\00", align 1
@_ZN18HistoryURLProvider29kScoreForBestInlineableResultE = external local_unnamed_addr constant i32, align 4
@_ZN18HistoryURLProvider27kScoreForWhatYouTypedResultE = external local_unnamed_addr constant i32, align 4
@_ZN18HistoryURLProvider32kScoreForUnvisitedIntranetResultE = external local_unnamed_addr constant i32, align 4
@_ZN13url_formatter22kFormatUrlOmitDefaultsE = external local_unnamed_addr constant i32, align 4
@_ZN13url_formatter18kFormatUrlOmitHTTPE = external local_unnamed_addr constant i32, align 4
@.str.1 = private unnamed_addr constant [12 x i8] c"typed count\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"visit count\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"last visit\00", align 1

@_ZN20HistoryQuickProviderC1EP26AutocompleteProviderClient = hidden unnamed_addr alias void (%class.HistoryQuickProvider*, %class.AutocompleteProviderClient*), void (%class.HistoryQuickProvider*, %class.AutocompleteProviderClient*)* @_ZN20HistoryQuickProviderC2EP26AutocompleteProviderClient
@_ZN20HistoryQuickProviderD1Ev = hidden unnamed_addr alias void (%class.HistoryQuickProvider*), void (%class.HistoryQuickProvider*)* @_ZN20HistoryQuickProviderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20HistoryQuickProviderC2EP26AutocompleteProviderClient(%class.HistoryQuickProvider*, %class.AutocompleteProviderClient*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 0
  tail call void @_ZN15HistoryProviderC2EN20AutocompleteProvider4TypeEP26AutocompleteProviderClient(%class.HistoryProvider* %3, i32 4, %class.AutocompleteProviderClient* %1) #9
  %4 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV20HistoryQuickProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 1
  tail call void @_ZN17AutocompleteInputC1Ev(%class.AutocompleteInput* %5) #9
  %6 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 2
  %7 = bitcast %class.AutocompleteProviderClient* %1 to %class.InMemoryURLIndex* (%class.AutocompleteProviderClient*)***
  %8 = load %class.InMemoryURLIndex* (%class.AutocompleteProviderClient*)**, %class.InMemoryURLIndex* (%class.AutocompleteProviderClient*)*** %7, align 8
  %9 = getelementptr inbounds %class.InMemoryURLIndex* (%class.AutocompleteProviderClient*)*, %class.InMemoryURLIndex* (%class.AutocompleteProviderClient*)** %8, i64 12
  %10 = load %class.InMemoryURLIndex* (%class.AutocompleteProviderClient*)*, %class.InMemoryURLIndex* (%class.AutocompleteProviderClient*)** %9, align 8
  %11 = tail call %class.InMemoryURLIndex* %10(%class.AutocompleteProviderClient* %1) #9
  store %class.InMemoryURLIndex* %11, %class.InMemoryURLIndex** %6, align 8
  ret void
}

declare void @_ZN15HistoryProviderC2EN20AutocompleteProvider4TypeEP26AutocompleteProviderClient(%class.HistoryProvider*, i32, %class.AutocompleteProviderClient*) unnamed_addr #1

declare void @_ZN17AutocompleteInputC1Ev(%class.AutocompleteInput*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20HistoryQuickProvider5StartERK17AutocompleteInputb(%class.HistoryQuickProvider*, %class.AutocompleteInput* dereferenceable(512), i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 90, i32 0), align 16
  %6 = and i8 %5, 25
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %14, label %8, !prof !2

8:                                                ; preds = %3
  %9 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %10 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %12 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %12, i64* %11, align 8
  %13 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 90, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %9, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  br label %14

14:                                               ; preds = %3, %8
  %15 = phi i64 [ -6148914691236517206, %3 ], [ %13, %8 ]
  %16 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), %8 ]
  %17 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 90, i32 0), %8 ]
  %18 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %struct.AutocompleteMatch*, %struct.AutocompleteMatch** %18, align 8
  %20 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %21 = load %struct.AutocompleteMatch*, %struct.AutocompleteMatch** %20, align 8
  %22 = icmp eq %struct.AutocompleteMatch* %21, %19
  br i1 %22, label %27, label %23

23:                                               ; preds = %14, %23
  %24 = phi %struct.AutocompleteMatch* [ %25, %23 ], [ %21, %14 ]
  %25 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %24, i64 -1
  call void @_ZN17AutocompleteMatchD1Ev(%struct.AutocompleteMatch* %25) #9
  %26 = icmp eq %struct.AutocompleteMatch* %25, %19
  br i1 %26, label %27, label %23

27:                                               ; preds = %23, %14
  store %struct.AutocompleteMatch* %19, %struct.AutocompleteMatch** %20, align 8
  %28 = load i8, i8* @_ZN20HistoryQuickProvider9disabled_E, align 1, !range !3
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %45

30:                                               ; preds = %27
  %31 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 15
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %45

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 5
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %45, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 1
  %40 = call dereferenceable(512) %class.AutocompleteInput* @_ZN17AutocompleteInputaSERKS_(%class.AutocompleteInput* %39, %class.AutocompleteInput* dereferenceable(512) %1)
  %41 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 2
  %42 = load %class.InMemoryURLIndex*, %class.InMemoryURLIndex** %41, align 8
  %43 = icmp eq %class.InMemoryURLIndex* %42, null
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @_ZN20HistoryQuickProvider14DoAutocompleteEv(%class.HistoryQuickProvider* %0)
  br label %45

45:                                               ; preds = %44, %38, %34, %27, %30
  %46 = icmp eq i8* %17, null
  br i1 %46, label %51, label %47

47:                                               ; preds = %45
  %48 = load i8, i8* %17, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %51, label %50

50:                                               ; preds = %47
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %17, i8* %16, i64 %15) #9
  br label %51

51:                                               ; preds = %45, %47, %50
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(512) %class.AutocompleteInput* @_ZN17AutocompleteInputaSERKS_(%class.AutocompleteInput*, %class.AutocompleteInput* dereferenceable(512)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 0
  %5 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %3, %"class.std::__1::basic_string"* dereferenceable(24) %4)
  %6 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 1
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 2
  %10 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 2
  %11 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %9, %class.GURL* dereferenceable(120) %10) #9
  %12 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 3
  %13 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 3
  %14 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %12, %"class.std::__1::basic_string"* dereferenceable(24) %13)
  %15 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 4
  %16 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 4
  %17 = bitcast i32* %16 to i64*
  %18 = bitcast i32* %15 to i64*
  %19 = load i64, i64* %17, align 8
  store i64 %19, i64* %18, align 8
  %20 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 6
  %21 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 6
  %22 = tail call dereferenceable(80) %"struct.url::Parsed"* @_ZN3url6ParsedaSERKS0_(%"struct.url::Parsed"* %20, %"struct.url::Parsed"* dereferenceable(80) %21) #9
  %23 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 7
  %24 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 7
  %25 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %23, %"class.std::__1::basic_string"* dereferenceable(24) %24)
  %26 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 8
  %27 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 8
  %28 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %26, %class.GURL* dereferenceable(120) %27) #9
  %29 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 9
  %30 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 9
  %31 = icmp eq %class.AutocompleteInput* %0, %1
  br i1 %31, label %61, label %32

32:                                               ; preds = %2
  %33 = bitcast %"class.std::__1::basic_string.7"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = bitcast %"class.std::__1::basic_string.7"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %36, label %51, label %41

41:                                               ; preds = %32
  br i1 %40, label %45, label %42

42:                                               ; preds = %41
  %43 = bitcast %"class.std::__1::basic_string.7"* %29 to i8*
  %44 = bitcast %"class.std::__1::basic_string.7"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #9
  br label %64

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = tail call dereferenceable(24) %"class.std::__1::basic_string.7"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.7"* %29, i8* %47, i64 %49) #9
  br label %64

51:                                               ; preds = %32
  %52 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.std::__1::basic_string.7"* %30 to i8*
  %57 = zext i8 %39 to i64
  %58 = select i1 %40, i8* %53, i8* %56
  %59 = select i1 %40, i64 %55, i64 %57
  %60 = tail call dereferenceable(24) %"class.std::__1::basic_string.7"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.7"* %29, i8* %58, i64 %59) #9
  br label %64

61:                                               ; preds = %2
  %62 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 10
  %63 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 16, i1 false)
  br label %72

64:                                               ; preds = %42, %45, %51
  %65 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 10
  %66 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 16, i1 false)
  %67 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 16
  %68 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 16, i32 0, i32 0
  %69 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %68, align 8
  %70 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 16, i32 0, i32 1
  %71 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %70, align 8
  tail call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.19"* %67, %"class.std::__1::basic_string"* %69, %"class.std::__1::basic_string"* %71) #9
  br label %72

72:                                               ; preds = %61, %64
  %73 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 17
  %74 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  %75 = load i8, i8* %74, align 8, !range !3
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %127, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0
  %79 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8, i8* %79, align 8, !range !3
  %81 = icmp eq i8 %80, 0
  %82 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %81, label %113, label %83

83:                                               ; preds = %77
  br i1 %31, label %141, label %84

84:                                               ; preds = %83
  %85 = bitcast %"class.std::__1::basic_string.7"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  %89 = bitcast %"class.std::__1::basic_string.7"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %88, label %103, label %93

93:                                               ; preds = %84
  br i1 %92, label %97, label %94

94:                                               ; preds = %93
  %95 = bitcast %"class.std::__1::basic_string.7"* %82 to i8*
  %96 = bitcast %"class.std::__1::basic_string.7"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 24, i1 false) #9
  br label %141

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  %100 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %101 = load i64, i64* %100, align 8
  %102 = tail call dereferenceable(24) %"class.std::__1::basic_string.7"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.7"* %82, i8* %99, i64 %101) #9
  br label %141

103:                                              ; preds = %84
  %104 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  %106 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.std::__1::basic_string.7"* %78 to i8*
  %109 = zext i8 %91 to i64
  %110 = select i1 %92, i8* %105, i8* %108
  %111 = select i1 %92, i64 %107, i64 %109
  %112 = tail call dereferenceable(24) %"class.std::__1::basic_string.7"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.7"* %82, i8* %110, i64 %111) #9
  br label %141

113:                                              ; preds = %77
  %114 = bitcast %"class.std::__1::basic_string.7"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %114, i64 0, i32 1, i32 0
  %116 = load i8, i8* %115, align 1
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %121, label %118

118:                                              ; preds = %113
  %119 = bitcast %"class.std::__1::basic_string.7"* %82 to i8*
  %120 = bitcast %"class.std::__1::basic_string.7"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 24, i1 false) #9
  br label %126

121:                                              ; preds = %113
  %122 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8
  %124 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %125 = load i64, i64* %124, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.7"* %82, i8* %123, i64 %125) #9
  br label %126

126:                                              ; preds = %121, %118
  store i8 1, i8* %79, align 8
  br label %141

127:                                              ; preds = %72
  %128 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i8, i8* %128, align 8, !range !3
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %141, label %131

131:                                              ; preds = %127
  %132 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0
  %133 = bitcast %"class.std::__1::basic_string.7"* %132 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %133, i64 0, i32 1, i32 0
  %135 = load i8, i8* %134, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %140

137:                                              ; preds = %131
  %138 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %132, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load i8*, i8** %138, align 8
  tail call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %137, %131
  store i8 0, i8* %128, align 8
  br label %141

141:                                              ; preds = %126, %103, %97, %94, %83, %127, %140
  %142 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 18
  %143 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 18
  %144 = bitcast i8* %143 to i64*
  %145 = bitcast i8* %142 to i64*
  %146 = load i64, i64* %144, align 8
  store i64 %146, i64* %145, align 8
  ret %class.AutocompleteInput* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20HistoryQuickProvider14DoAutocompleteEv(%class.HistoryQuickProvider*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.472", align 8
  %3 = alloca %struct.AutocompleteMatch, align 8
  %4 = bitcast %"class.std::__1::vector.472"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.std::__1::vector.472", %"class.std::__1::vector.472"* %2, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector.472", %"class.std::__1::vector.472"* %2, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 2
  %8 = bitcast %"class.std::__1::vector.472"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  %9 = load %class.InMemoryURLIndex*, %class.InMemoryURLIndex** %7, align 8
  %10 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 1, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 0, i32 0, i32 2
  %14 = load i64, i64* %13, align 8
  call void @_ZN16InMemoryURLIndex20HistoryItemsForTermsERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmm(%"class.std::__1::vector.472"* nonnull sret %2, %class.InMemoryURLIndex* %9, %"class.std::__1::basic_string"* dereferenceable(24) %10, i64 %12, i64 %14) #9
  %15 = load %struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch** %5, align 8
  %16 = load %struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch** %6, align 8
  %17 = icmp eq %struct.ScoredHistoryMatch* %15, %16
  br i1 %17, label %50, label %18

18:                                               ; preds = %1
  %19 = call i32 @_ZN20HistoryQuickProvider17FindMaxMatchScoreERKNSt3__16vectorI18ScoredHistoryMatchNS0_9allocatorIS2_EEEE(%class.HistoryQuickProvider* %0, %"class.std::__1::vector.472"* nonnull dereferenceable(24) %2)
  %20 = load %struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch** %5, align 8
  %21 = load %struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch** %6, align 8
  %22 = icmp eq %struct.ScoredHistoryMatch* %20, %21
  br i1 %22, label %50, label %23

23:                                               ; preds = %18
  %24 = bitcast %struct.AutocompleteMatch* %3 to i8*
  %25 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %26 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %27 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 0, i32 0, i32 3
  %28 = bitcast %struct.AutocompleteMatch** %25 to i64*
  br label %29

29:                                               ; preds = %23, %43
  %30 = phi i32 [ %19, %23 ], [ %44, %43 ]
  %31 = phi %struct.ScoredHistoryMatch* [ %20, %23 ], [ %45, %43 ]
  %32 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %31, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp slt i32 %33, %30
  %35 = select i1 %34, i32 %33, i32 %30
  call void @llvm.lifetime.start.p0i8(i64 1600, i8* nonnull %24) #9
  call void @_ZN20HistoryQuickProvider19QuickMatchToACMatchERK18ScoredHistoryMatchi(%struct.AutocompleteMatch* nonnull sret %3, %class.HistoryQuickProvider* %0, %struct.ScoredHistoryMatch* dereferenceable(248) %31, i32 %35)
  %36 = load %struct.AutocompleteMatch*, %struct.AutocompleteMatch** %25, align 8
  %37 = load %struct.AutocompleteMatch*, %struct.AutocompleteMatch** %26, align 8
  %38 = icmp ult %struct.AutocompleteMatch* %36, %37
  br i1 %38, label %39, label %42

39:                                               ; preds = %29
  call void @_ZN17AutocompleteMatchC1EOS_(%struct.AutocompleteMatch* %36, %struct.AutocompleteMatch* nonnull dereferenceable(1600) %3) #9
  %40 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %36, i64 1
  %41 = ptrtoint %struct.AutocompleteMatch* %40 to i64
  store i64 %41, i64* %28, align 8
  br label %43

42:                                               ; preds = %29
  call void @_ZNSt3__16vectorI17AutocompleteMatchNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector"* %27, %struct.AutocompleteMatch* nonnull dereferenceable(1600) %3) #9
  br label %43

43:                                               ; preds = %39, %42
  call void @_ZN17AutocompleteMatchD1Ev(%struct.AutocompleteMatch* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 1600, i8* nonnull %24) #9
  %44 = add nsw i32 %35, -1
  %45 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %31, i64 1
  %46 = load %struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch** %6, align 8
  %47 = icmp eq %struct.ScoredHistoryMatch* %45, %46
  br i1 %47, label %48, label %29

48:                                               ; preds = %43
  %49 = load %struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch** %5, align 8
  br label %50

50:                                               ; preds = %18, %48, %1
  %51 = phi %struct.ScoredHistoryMatch* [ %15, %1 ], [ %45, %48 ], [ %20, %18 ]
  %52 = phi %struct.ScoredHistoryMatch* [ %15, %1 ], [ %49, %48 ], [ %20, %18 ]
  %53 = icmp eq %struct.ScoredHistoryMatch* %52, null
  br i1 %53, label %66, label %54

54:                                               ; preds = %50
  %55 = bitcast %struct.ScoredHistoryMatch* %52 to i8*
  %56 = icmp eq %struct.ScoredHistoryMatch* %51, %52
  br i1 %56, label %64, label %57

57:                                               ; preds = %54, %57
  %58 = phi %struct.ScoredHistoryMatch* [ %59, %57 ], [ %51, %54 ]
  %59 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %58, i64 -1
  call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* %59) #9
  %60 = icmp eq %struct.ScoredHistoryMatch* %59, %52
  br i1 %60, label %61, label %57

61:                                               ; preds = %57
  %62 = bitcast %"class.std::__1::vector.472"* %2 to i8**
  %63 = load i8*, i8** %62, align 8
  br label %64

64:                                               ; preds = %61, %54
  %65 = phi i8* [ %63, %61 ], [ %55, %54 ]
  store %struct.ScoredHistoryMatch* %52, %struct.ScoredHistoryMatch** %6, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %50, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK20HistoryQuickProvider19EstimateMemoryUsageEv(%class.HistoryQuickProvider*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 0, i32 0
  %3 = tail call i64 @_ZNK20AutocompleteProvider19EstimateMemoryUsageEv(%class.AutocompleteProvider* %2) #9
  %4 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 1
  %5 = tail call i64 @_ZNK17AutocompleteInput19EstimateMemoryUsageEv(%class.AutocompleteInput* %4) #9
  %6 = add i64 %5, %3
  ret i64 %6
}

declare i64 @_ZNK20AutocompleteProvider19EstimateMemoryUsageEv(%class.AutocompleteProvider*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20HistoryQuickProviderD2Ev(%class.HistoryQuickProvider*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV20HistoryQuickProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 1
  tail call void @_ZN17AutocompleteInputD1Ev(%class.AutocompleteInput* %3) #9
  %4 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 0
  tail call void @_ZN15HistoryProviderD2Ev(%class.HistoryProvider* %4) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN17AutocompleteInputD1Ev(%class.AutocompleteInput*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN15HistoryProviderD2Ev(%class.HistoryProvider*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20HistoryQuickProviderD0Ev(%class.HistoryQuickProvider*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV20HistoryQuickProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 1
  tail call void @_ZN17AutocompleteInputD1Ev(%class.AutocompleteInput* %3) #9
  %4 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 0
  tail call void @_ZN15HistoryProviderD2Ev(%class.HistoryProvider* %4) #9
  %5 = bitcast %class.HistoryQuickProvider* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN16InMemoryURLIndex20HistoryItemsForTermsERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmm(%"class.std::__1::vector.472"* sret, %class.InMemoryURLIndex*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN20HistoryQuickProvider17FindMaxMatchScoreERKNSt3__16vectorI18ScoredHistoryMatchNS0_9allocatorIS2_EEEE(%class.HistoryQuickProvider*, %"class.std::__1::vector.472"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.7", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 1
  %6 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 1, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 4
  br i1 %8, label %128, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 1, i32 6, i32 1, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %21

13:                                               ; preds = %9
  %14 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 1, i32 6, i32 2, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 1, i32 6, i32 5, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %128

21:                                               ; preds = %9, %13, %17
  %22 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 0, i32 1
  %23 = load %class.AutocompleteProviderClient*, %class.AutocompleteProviderClient** %22, align 8
  %24 = bitcast %class.AutocompleteProviderClient* %23 to %"class.history::HistoryService"* (%class.AutocompleteProviderClient*)***
  %25 = load %"class.history::HistoryService"* (%class.AutocompleteProviderClient*)**, %"class.history::HistoryService"* (%class.AutocompleteProviderClient*)*** %24, align 8
  %26 = getelementptr inbounds %"class.history::HistoryService"* (%class.AutocompleteProviderClient*)*, %"class.history::HistoryService"* (%class.AutocompleteProviderClient*)** %25, i64 7
  %27 = load %"class.history::HistoryService"* (%class.AutocompleteProviderClient*)*, %"class.history::HistoryService"* (%class.AutocompleteProviderClient*)** %26, align 8
  %28 = tail call %"class.history::HistoryService"* %27(%class.AutocompleteProviderClient* %23) #9
  %29 = icmp eq %"class.history::HistoryService"* %28, null
  br i1 %29, label %128, label %30

30:                                               ; preds = %21
  %31 = tail call %"class.history::URLDatabase"* @_ZN7history14HistoryService16InMemoryDatabaseEv(%"class.history::HistoryService"* nonnull %28) #9
  %32 = icmp eq %"class.history::URLDatabase"* %31, null
  br i1 %32, label %128, label %33

33:                                               ; preds = %30
  %34 = bitcast %"class.std::__1::basic_string.7"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #9
  %35 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %38 = bitcast %"class.std::__1::basic_string.7"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #9
  %39 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %5, i64 0, i32 0
  %40 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 1, i32 6, i32 3, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 1, i32 6, i32 3, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = sext i32 %44 to i64
  %46 = bitcast %class.AutocompleteInput* %5 to %"class.std::__1::allocator.5"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* dereferenceable(24) %39, i64 %42, i64 %45, %"class.std::__1::allocator.5"* dereferenceable(1) %46) #9
  %47 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %47, i64 0, i32 1, i32 1
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i16*, i16** %51, align 8
  %53 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  %54 = select i1 %50, i16* %52, i16* %53
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = zext i8 %49 to i64
  %58 = select i1 %50, i64 %56, i64 %57
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.7"* nonnull sret %3, i16* %54, i64 %58) #9
  %59 = load i8, i8* %48, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %33
  %62 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %63 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %63) #10
  br label %64

64:                                               ; preds = %33, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #9
  %65 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 1, i32 8
  %66 = call i64 @_ZN7history11URLDatabase12GetRowForURLERK4GURLPNS_6URLRowE(%"class.history::URLDatabase"* nonnull %31, %class.GURL* dereferenceable(120) %65, %"class.history::URLRow"* null) #9
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %64
  %69 = load i32, i32* @_ZN18HistoryURLProvider29kScoreForBestInlineableResultE, align 4
  br label %119

70:                                               ; preds = %64
  %71 = call zeroext i1 @_ZN7history11URLDatabase11IsTypedHostERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPS7_(%"class.history::URLDatabase"* nonnull %31, %"class.std::__1::basic_string.7"* nonnull dereferenceable(24) %3, %"class.std::__1::basic_string.7"* null) #9
  br i1 %71, label %72, label %119

72:                                               ; preds = %70
  %73 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 1, i32 6, i32 5, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = icmp sgt i32 %74, 0
  br i1 %75, label %76, label %96

76:                                               ; preds = %72
  %77 = icmp eq i32 %74, 1
  br i1 %77, label %78, label %119

78:                                               ; preds = %76
  %79 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 1, i32 6, i32 5, i32 0
  %80 = load i32, i32* %79, align 8
  %81 = sext i32 %80 to i64
  %82 = bitcast %class.AutocompleteInput* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %82, i64 0, i32 1, i32 1
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %78
  %87 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i16*, i16** %87, align 8
  br label %91

89:                                               ; preds = %78
  %90 = bitcast %class.AutocompleteInput* %5 to i16*
  br label %91

91:                                               ; preds = %86, %89
  %92 = phi i16* [ %88, %86 ], [ %90, %89 ]
  %93 = getelementptr inbounds i16, i16* %92, i64 %81
  %94 = load i16, i16* %93, align 2
  %95 = icmp eq i16 %94, 47
  br i1 %95, label %96, label %119

96:                                               ; preds = %91, %72
  %97 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 1, i32 6, i32 6, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = icmp sgt i32 %98, 0
  br i1 %99, label %119, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %0, i64 0, i32 1, i32 6, i32 7, i32 1
  %102 = load i32, i32* %101, align 4
  %103 = icmp sgt i32 %102, 0
  br i1 %103, label %119, label %104

104:                                              ; preds = %100
  %105 = bitcast %"class.std::__1::basic_string.7"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  %107 = load i8, i8* %106, align 1
  %108 = icmp slt i8 %107, 0
  %109 = load i8*, i8** %35, align 8
  %110 = select i1 %108, i8* %109, i8* %34
  %111 = load i64, i64* %36, align 8
  %112 = zext i8 %107 to i64
  %113 = select i1 %108, i64 %111, i64 %112
  %114 = call zeroext i1 @_ZN3net27registry_controlled_domains31HostHasRegistryControlledDomainEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_21UnknownRegistryFilterENS0_21PrivateRegistryFilterE(i8* %110, i64 %113, i32 0, i32 0) #9
  br i1 %114, label %115, label %117

115:                                              ; preds = %104
  %116 = load i32, i32* @_ZN18HistoryURLProvider27kScoreForWhatYouTypedResultE, align 4
  br label %119

117:                                              ; preds = %104
  %118 = load i32, i32* @_ZN18HistoryURLProvider32kScoreForUnvisitedIntranetResultE, align 4
  br label %119

119:                                              ; preds = %70, %76, %91, %96, %100, %117, %115, %68
  %120 = phi i1 [ true, %68 ], [ false, %96 ], [ false, %100 ], [ true, %115 ], [ true, %117 ], [ false, %91 ], [ false, %76 ], [ false, %70 ]
  %121 = phi i32 [ %69, %68 ], [ -1, %96 ], [ -1, %100 ], [ %116, %115 ], [ %118, %117 ], [ -1, %91 ], [ -1, %76 ], [ -1, %70 ]
  %122 = bitcast %"class.std::__1::basic_string.7"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  %124 = load i8, i8* %123, align 1
  %125 = icmp slt i8 %124, 0
  br i1 %125, label %126, label %133

126:                                              ; preds = %119
  %127 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %127) #10
  br label %133

128:                                              ; preds = %17, %21, %30, %2
  %129 = getelementptr inbounds %"class.std::__1::vector.472", %"class.std::__1::vector.472"* %1, i64 0, i32 0, i32 0
  %130 = load %struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch** %129, align 8
  %131 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %130, i64 0, i32 1
  %132 = load i32, i32* %131, align 4
  br label %142

133:                                              ; preds = %126, %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #9
  %134 = getelementptr inbounds %"class.std::__1::vector.472", %"class.std::__1::vector.472"* %1, i64 0, i32 0, i32 0
  %135 = load %struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch** %134, align 8
  %136 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %135, i64 0, i32 1
  %137 = load i32, i32* %136, align 4
  br i1 %120, label %138, label %142

138:                                              ; preds = %133
  %139 = add nsw i32 %121, -1
  %140 = icmp slt i32 %139, %137
  %141 = select i1 %140, i32 %139, i32 %137
  br label %142

142:                                              ; preds = %128, %138, %133
  %143 = phi i32 [ %141, %138 ], [ %137, %133 ], [ %132, %128 ]
  ret i32 %143
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20HistoryQuickProvider19QuickMatchToACMatchERK18ScoredHistoryMatchi(%struct.AutocompleteMatch* noalias sret, %class.HistoryQuickProvider*, %struct.ScoredHistoryMatch* dereferenceable(248), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = alloca %"struct.std::__1::pair.488", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::vector.474", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::vector.388", align 16
  %15 = alloca %"class.std::__1::vector.474", align 8
  %16 = alloca %"class.std::__1::vector.474", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.std::__1::vector.388", align 16
  %20 = alloca %"class.std::__1::vector.474", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.std::__1::basic_string.7", align 8
  %23 = alloca %"class.std::__1::basic_string.7", align 8
  %24 = alloca %"class.std::__1::basic_string.7", align 8
  %25 = bitcast %struct.AutocompleteMatch* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 -86, i64 1600, i1 false)
  %26 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %1, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %2, i64 0, i32 0, i32 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = icmp ne i32 %28, 0
  %30 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %2, i64 0, i32 2, i32 0, i32 0
  %31 = load %struct.TermMatch*, %struct.TermMatch** %30, align 8
  %32 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %2, i64 0, i32 2, i32 0, i32 1
  %33 = load %struct.TermMatch*, %struct.TermMatch** %32, align 8
  %34 = icmp eq %struct.TermMatch* %31, %33
  %35 = select i1 %34, i32 2, i32 1
  tail call void @_ZN17AutocompleteMatchC1EP20AutocompleteProvideribN21AutocompleteMatchType4TypeE(%struct.AutocompleteMatch* %0, %class.AutocompleteProvider* %26, i32 %3, i1 zeroext %29, i32 %35) #9
  %36 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %2, i64 0, i32 0, i32 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 2
  store i32 %37, i32* %38, align 4
  %39 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %2, i64 0, i32 0, i32 0, i32 2
  %40 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 11
  %41 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %40, %class.GURL* dereferenceable(120) %39) #9
  %42 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #9
  store i64 -6148914691236517206, i64* %5, align 8
  %43 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %1, i64 0, i32 1
  %44 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %43, i64 0, i32 0
  %45 = getelementptr inbounds %"struct.std::__1::pair.488", %"struct.std::__1::pair.488"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %45) #9
  call void @_ZN20AutocompleteProvider14FixupUserInputERK17AutocompleteInput(%"struct.std::__1::pair.488"* nonnull sret %6, %class.AutocompleteInput* dereferenceable(512) %43) #9
  %46 = getelementptr inbounds %"struct.std::__1::pair.488", %"struct.std::__1::pair.488"* %6, i64 0, i32 1
  %47 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #9
  %48 = call dereferenceable(24) %"class.std::__1::basic_string.7"* @_ZNK4GURL4specEv(%class.GURL* %39) #9
  %49 = bitcast %"class.std::__1::basic_string.7"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = bitcast %"class.std::__1::basic_string.7"* %48 to i8*
  %56 = select i1 %52, i8* %54, i8* %55
  %57 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = zext i8 %51 to i64
  %60 = select i1 %52, i64 %58, i64 %59
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %7, i8* %56, i64 %60) #9
  %61 = call i64 @_ZN9URLPrefix27GetInlineAutocompleteOffsetERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_bS8_(%"class.std::__1::basic_string"* dereferenceable(24) %44, %"class.std::__1::basic_string"* dereferenceable(24) %46, i1 zeroext false, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #9
  %62 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %62, i64 0, i32 1, i32 1
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %4
  %67 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  %68 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %68) #10
  br label %69

69:                                               ; preds = %4, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #9
  %70 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %70, i64 0, i32 1, i32 1
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %69
  %75 = bitcast %"class.std::__1::basic_string"* %46 to i8**
  %76 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %76) #10
  br label %77

77:                                               ; preds = %69, %74
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %45) #9
  store i64 %61, i64* %5, align 8
  %78 = load i32, i32* @_ZN13url_formatter22kFormatUrlOmitDefaultsE, align 4
  %79 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %2, i64 0, i32 0, i32 2
  %80 = load i8, i8* %79, align 8, !range !3
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %86, label %82

82:                                               ; preds = %77
  %83 = load i32, i32* @_ZN13url_formatter18kFormatUrlOmitHTTPE, align 4
  %84 = xor i32 %83, -1
  %85 = and i32 %78, %84
  br label %86

86:                                               ; preds = %77, %82
  %87 = phi i32 [ %85, %82 ], [ %78, %77 ]
  %88 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #9
  %89 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #9
  call void @_ZN13url_formatter9FormatUrlERK4GURLjjPN3url6ParsedEPmS6_(%"class.std::__1::basic_string"* nonnull sret %9, %class.GURL* dereferenceable(120) %39, i32 %87, i32 2, %"struct.url::Parsed"* null, i64* null, i64* nonnull %5) #9
  %90 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %1, i64 0, i32 0, i32 1
  %91 = load %class.AutocompleteProviderClient*, %class.AutocompleteProviderClient** %90, align 8
  %92 = bitcast %class.AutocompleteProviderClient* %91 to %class.AutocompleteSchemeClassifier* (%class.AutocompleteProviderClient*)***
  %93 = load %class.AutocompleteSchemeClassifier* (%class.AutocompleteProviderClient*)**, %class.AutocompleteSchemeClassifier* (%class.AutocompleteProviderClient*)*** %92, align 8
  %94 = getelementptr inbounds %class.AutocompleteSchemeClassifier* (%class.AutocompleteProviderClient*)*, %class.AutocompleteSchemeClassifier* (%class.AutocompleteProviderClient*)** %93, i64 5
  %95 = load %class.AutocompleteSchemeClassifier* (%class.AutocompleteProviderClient*)*, %class.AutocompleteSchemeClassifier* (%class.AutocompleteProviderClient*)** %94, align 8
  %96 = call %class.AutocompleteSchemeClassifier* %95(%class.AutocompleteProviderClient* %91) #9
  call void @_ZN17AutocompleteInput36FormattedStringWithEquivalentMeaningERK4GURLRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEERK28AutocompleteSchemeClassifierPm(%"class.std::__1::basic_string"* nonnull sret %8, %class.GURL* dereferenceable(120) %39, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, %class.AutocompleteSchemeClassifier* %96, i64* nonnull %5) #9
  %97 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 4
  %98 = bitcast %"class.std::__1::basic_string"* %97 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %98, i64 0, i32 1, i32 1
  %100 = load i8, i8* %99, align 1
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %102, label %105

102:                                              ; preds = %86
  %103 = bitcast %"class.std::__1::basic_string"* %97 to i8**
  %104 = load i8*, i8** %103, align 8
  call void @_ZdlPv(i8* %104) #10
  br label %105

105:                                              ; preds = %102, %86
  %106 = bitcast %"class.std::__1::basic_string"* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* nonnull align 8 %88, i64 24, i1 false) #9
  %107 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %107, i64 0, i32 1, i32 1
  store i8 0, i8* %108, align 1
  %109 = bitcast %"class.std::__1::basic_string"* %8 to i16*
  store i16 0, i16* %109, align 8
  %110 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %110, i64 0, i32 1, i32 1
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %105
  %115 = bitcast %"class.std::__1::basic_string"* %9 to i8**
  %116 = load i8*, i8** %115, align 8
  call void @_ZdlPv(i8* %116) #10
  br label %117

117:                                              ; preds = %105, %114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #9
  %118 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #9
  %119 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %1, i64 0, i32 1, i32 6, i32 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = icmp sgt i32 %120, 0
  %122 = load i8, i8* %79, align 8
  %123 = icmp ne i8 %122, 0
  %124 = or i1 %121, %123
  %125 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %2, i64 0, i32 0, i32 3
  %126 = load i8, i8* %125, align 1, !range !3
  %127 = icmp ne i8 %126, 0
  %128 = call i32 @_ZN17AutocompleteMatch14GetFormatTypesEbb(i1 zeroext %124, i1 zeroext %127) #9
  call void @_ZN13url_formatter9FormatUrlERK4GURLjjPN3url6ParsedEPmS6_(%"class.std::__1::basic_string"* nonnull sret %10, %class.GURL* dereferenceable(120) %39, i32 %128, i32 2, %"struct.url::Parsed"* null, i64* null, i64* null) #9
  %129 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 17
  %130 = bitcast %"class.std::__1::basic_string"* %129 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %130, i64 0, i32 1, i32 1
  %132 = load i8, i8* %131, align 1
  %133 = icmp slt i8 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %117
  %135 = bitcast %"class.std::__1::basic_string"* %129 to i8**
  %136 = load i8*, i8** %135, align 8
  call void @_ZdlPv(i8* %136) #10
  br label %137

137:                                              ; preds = %134, %117
  %138 = bitcast %"class.std::__1::basic_string"* %129 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* nonnull align 8 %118, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #9
  %139 = bitcast %"class.std::__1::vector.474"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %139) #9
  %140 = getelementptr inbounds %"class.std::__1::vector.474", %"class.std::__1::vector.474"* %11, i64 0, i32 0, i32 0
  %141 = getelementptr inbounds %"class.std::__1::vector.474", %"class.std::__1::vector.474"* %11, i64 0, i32 0, i32 1
  %142 = bitcast %class.AutocompleteInput* %43 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %143 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %142, i64 0, i32 1, i32 1
  %144 = bitcast %"class.std::__1::vector.474"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %144, i8 -86, i64 24, i1 false)
  %145 = load i8, i8* %143, align 1
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %150, label %147

147:                                              ; preds = %137
  %148 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %149 = bitcast %class.AutocompleteInput* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %148, i8* align 8 %149, i64 24, i1 false) #9
  br label %325

150:                                              ; preds = %137
  %151 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load i16*, i16** %151, align 8
  %153 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %154 = load i64, i64* %153, align 8
  %155 = icmp ult i64 %154, 11
  br i1 %155, label %156, label %161

156:                                              ; preds = %150
  %157 = bitcast %"class.std::__1::basic_string"* %12 to i16*
  %158 = trunc i64 %154 to i8
  %159 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %160 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %159, i64 0, i32 1, i32 1
  store i8 %158, i8* %160, align 1
  br label %178

161:                                              ; preds = %150
  %162 = icmp ugt i64 %154, 9223372036854775791
  br i1 %162, label %163, label %165

163:                                              ; preds = %161
  %164 = bitcast %"class.std::__1::basic_string"* %12 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %164) #11
  unreachable

165:                                              ; preds = %161
  %166 = add nuw nsw i64 %154, 8
  %167 = and i64 %166, -8
  %168 = icmp slt i64 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %165
  call void @abort() #11
  unreachable

170:                                              ; preds = %165
  %171 = shl i64 %167, 1
  %172 = call i8* @_Znwm(i64 %171) #10
  %173 = bitcast i8* %172 to i16*
  %174 = bitcast %"class.std::__1::basic_string"* %12 to i8**
  store i8* %172, i8** %174, align 8
  %175 = or i64 %167, -9223372036854775808
  %176 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %175, i64* %176, align 8
  %177 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %154, i64* %177, align 8
  br label %178

178:                                              ; preds = %170, %156
  %179 = phi i16* [ %157, %156 ], [ %173, %170 ]
  %180 = add nuw nsw i64 %154, 1
  %181 = add i64 %154, 1
  %182 = icmp ult i64 %181, 16
  br i1 %182, label %272, label %183

183:                                              ; preds = %178
  %184 = add i64 %154, 1
  %185 = getelementptr i16, i16* %179, i64 %184
  %186 = getelementptr i16, i16* %152, i64 %184
  %187 = icmp ult i16* %179, %186
  %188 = icmp ult i16* %152, %185
  %189 = and i1 %187, %188
  br i1 %189, label %272, label %190

190:                                              ; preds = %183
  %191 = and i64 %181, -16
  %192 = sub i64 %180, %191
  %193 = getelementptr i16, i16* %152, i64 %191
  %194 = getelementptr i16, i16* %179, i64 %191
  %195 = add i64 %191, -16
  %196 = lshr exact i64 %195, 4
  %197 = add nuw nsw i64 %196, 1
  %198 = and i64 %197, 3
  %199 = icmp ult i64 %195, 48
  br i1 %199, label %251, label %200

200:                                              ; preds = %190
  %201 = sub nsw i64 %197, %198
  br label %202

202:                                              ; preds = %202, %200
  %203 = phi i64 [ 0, %200 ], [ %248, %202 ]
  %204 = phi i64 [ %201, %200 ], [ %249, %202 ]
  %205 = getelementptr i16, i16* %152, i64 %203
  %206 = getelementptr i16, i16* %179, i64 %203
  %207 = bitcast i16* %205 to <8 x i16>*
  %208 = load <8 x i16>, <8 x i16>* %207, align 2, !alias.scope !4
  %209 = getelementptr i16, i16* %205, i64 8
  %210 = bitcast i16* %209 to <8 x i16>*
  %211 = load <8 x i16>, <8 x i16>* %210, align 2, !alias.scope !4
  %212 = bitcast i16* %206 to <8 x i16>*
  store <8 x i16> %208, <8 x i16>* %212, align 2, !alias.scope !7, !noalias !4
  %213 = getelementptr i16, i16* %206, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  store <8 x i16> %211, <8 x i16>* %214, align 2, !alias.scope !7, !noalias !4
  %215 = or i64 %203, 16
  %216 = getelementptr i16, i16* %152, i64 %215
  %217 = getelementptr i16, i16* %179, i64 %215
  %218 = bitcast i16* %216 to <8 x i16>*
  %219 = load <8 x i16>, <8 x i16>* %218, align 2, !alias.scope !4
  %220 = getelementptr i16, i16* %216, i64 8
  %221 = bitcast i16* %220 to <8 x i16>*
  %222 = load <8 x i16>, <8 x i16>* %221, align 2, !alias.scope !4
  %223 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %219, <8 x i16>* %223, align 2, !alias.scope !7, !noalias !4
  %224 = getelementptr i16, i16* %217, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  store <8 x i16> %222, <8 x i16>* %225, align 2, !alias.scope !7, !noalias !4
  %226 = or i64 %203, 32
  %227 = getelementptr i16, i16* %152, i64 %226
  %228 = getelementptr i16, i16* %179, i64 %226
  %229 = bitcast i16* %227 to <8 x i16>*
  %230 = load <8 x i16>, <8 x i16>* %229, align 2, !alias.scope !4
  %231 = getelementptr i16, i16* %227, i64 8
  %232 = bitcast i16* %231 to <8 x i16>*
  %233 = load <8 x i16>, <8 x i16>* %232, align 2, !alias.scope !4
  %234 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %230, <8 x i16>* %234, align 2, !alias.scope !7, !noalias !4
  %235 = getelementptr i16, i16* %228, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  store <8 x i16> %233, <8 x i16>* %236, align 2, !alias.scope !7, !noalias !4
  %237 = or i64 %203, 48
  %238 = getelementptr i16, i16* %152, i64 %237
  %239 = getelementptr i16, i16* %179, i64 %237
  %240 = bitcast i16* %238 to <8 x i16>*
  %241 = load <8 x i16>, <8 x i16>* %240, align 2, !alias.scope !4
  %242 = getelementptr i16, i16* %238, i64 8
  %243 = bitcast i16* %242 to <8 x i16>*
  %244 = load <8 x i16>, <8 x i16>* %243, align 2, !alias.scope !4
  %245 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %241, <8 x i16>* %245, align 2, !alias.scope !7, !noalias !4
  %246 = getelementptr i16, i16* %239, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %244, <8 x i16>* %247, align 2, !alias.scope !7, !noalias !4
  %248 = add i64 %203, 64
  %249 = add i64 %204, -4
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %251, label %202, !llvm.loop !9

251:                                              ; preds = %202, %190
  %252 = phi i64 [ 0, %190 ], [ %248, %202 ]
  %253 = icmp eq i64 %198, 0
  br i1 %253, label %270, label %254

254:                                              ; preds = %251, %254
  %255 = phi i64 [ %267, %254 ], [ %252, %251 ]
  %256 = phi i64 [ %268, %254 ], [ %198, %251 ]
  %257 = getelementptr i16, i16* %152, i64 %255
  %258 = getelementptr i16, i16* %179, i64 %255
  %259 = bitcast i16* %257 to <8 x i16>*
  %260 = load <8 x i16>, <8 x i16>* %259, align 2, !alias.scope !4
  %261 = getelementptr i16, i16* %257, i64 8
  %262 = bitcast i16* %261 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !4
  %264 = bitcast i16* %258 to <8 x i16>*
  store <8 x i16> %260, <8 x i16>* %264, align 2, !alias.scope !7, !noalias !4
  %265 = getelementptr i16, i16* %258, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %266, align 2, !alias.scope !7, !noalias !4
  %267 = add i64 %255, 16
  %268 = add i64 %256, -1
  %269 = icmp eq i64 %268, 0
  br i1 %269, label %270, label %254, !llvm.loop !11

270:                                              ; preds = %254, %251
  %271 = icmp eq i64 %181, %191
  br i1 %271, label %325, label %272

272:                                              ; preds = %270, %183, %178
  %273 = phi i64 [ %180, %183 ], [ %180, %178 ], [ %192, %270 ]
  %274 = phi i16* [ %152, %183 ], [ %152, %178 ], [ %193, %270 ]
  %275 = phi i16* [ %179, %183 ], [ %179, %178 ], [ %194, %270 ]
  %276 = add i64 %273, -1
  %277 = and i64 %273, 7
  %278 = icmp eq i64 %277, 0
  br i1 %278, label %290, label %279

279:                                              ; preds = %272, %279
  %280 = phi i64 [ %285, %279 ], [ %273, %272 ]
  %281 = phi i16* [ %287, %279 ], [ %274, %272 ]
  %282 = phi i16* [ %286, %279 ], [ %275, %272 ]
  %283 = phi i64 [ %288, %279 ], [ %277, %272 ]
  %284 = load i16, i16* %281, align 2
  store i16 %284, i16* %282, align 2
  %285 = add i64 %280, -1
  %286 = getelementptr inbounds i16, i16* %282, i64 1
  %287 = getelementptr inbounds i16, i16* %281, i64 1
  %288 = add i64 %283, -1
  %289 = icmp eq i64 %288, 0
  br i1 %289, label %290, label %279, !llvm.loop !13

290:                                              ; preds = %279, %272
  %291 = phi i64 [ %273, %272 ], [ %285, %279 ]
  %292 = phi i16* [ %274, %272 ], [ %287, %279 ]
  %293 = phi i16* [ %275, %272 ], [ %286, %279 ]
  %294 = icmp ult i64 %276, 7
  br i1 %294, label %325, label %295

295:                                              ; preds = %290, %295
  %296 = phi i64 [ %321, %295 ], [ %291, %290 ]
  %297 = phi i16* [ %323, %295 ], [ %292, %290 ]
  %298 = phi i16* [ %322, %295 ], [ %293, %290 ]
  %299 = load i16, i16* %297, align 2
  store i16 %299, i16* %298, align 2
  %300 = getelementptr inbounds i16, i16* %298, i64 1
  %301 = getelementptr inbounds i16, i16* %297, i64 1
  %302 = load i16, i16* %301, align 2
  store i16 %302, i16* %300, align 2
  %303 = getelementptr inbounds i16, i16* %298, i64 2
  %304 = getelementptr inbounds i16, i16* %297, i64 2
  %305 = load i16, i16* %304, align 2
  store i16 %305, i16* %303, align 2
  %306 = getelementptr inbounds i16, i16* %298, i64 3
  %307 = getelementptr inbounds i16, i16* %297, i64 3
  %308 = load i16, i16* %307, align 2
  store i16 %308, i16* %306, align 2
  %309 = getelementptr inbounds i16, i16* %298, i64 4
  %310 = getelementptr inbounds i16, i16* %297, i64 4
  %311 = load i16, i16* %310, align 2
  store i16 %311, i16* %309, align 2
  %312 = getelementptr inbounds i16, i16* %298, i64 5
  %313 = getelementptr inbounds i16, i16* %297, i64 5
  %314 = load i16, i16* %313, align 2
  store i16 %314, i16* %312, align 2
  %315 = getelementptr inbounds i16, i16* %298, i64 6
  %316 = getelementptr inbounds i16, i16* %297, i64 6
  %317 = load i16, i16* %316, align 2
  store i16 %317, i16* %315, align 2
  %318 = getelementptr inbounds i16, i16* %298, i64 7
  %319 = getelementptr inbounds i16, i16* %297, i64 7
  %320 = load i16, i16* %319, align 2
  store i16 %320, i16* %318, align 2
  %321 = add i64 %296, -8
  %322 = getelementptr inbounds i16, i16* %298, i64 8
  %323 = getelementptr inbounds i16, i16* %297, i64 8
  %324 = icmp eq i64 %321, 0
  br i1 %324, label %325, label %295, !llvm.loop !14

325:                                              ; preds = %290, %295, %270, %147
  %326 = load i8, i8* %131, align 1
  %327 = icmp slt i8 %326, 0
  br i1 %327, label %330, label %328

328:                                              ; preds = %325
  %329 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %329, i8* align 8 %138, i64 24, i1 false) #9
  br label %505

330:                                              ; preds = %325
  %331 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %129, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %332 = load i16*, i16** %331, align 8
  %333 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %334 = load i64, i64* %333, align 8
  %335 = icmp ult i64 %334, 11
  br i1 %335, label %336, label %341

336:                                              ; preds = %330
  %337 = bitcast %"class.std::__1::basic_string"* %13 to i16*
  %338 = trunc i64 %334 to i8
  %339 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %340 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %339, i64 0, i32 1, i32 1
  store i8 %338, i8* %340, align 1
  br label %358

341:                                              ; preds = %330
  %342 = icmp ugt i64 %334, 9223372036854775791
  br i1 %342, label %343, label %345

343:                                              ; preds = %341
  %344 = bitcast %"class.std::__1::basic_string"* %13 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %344) #11
  unreachable

345:                                              ; preds = %341
  %346 = add nuw nsw i64 %334, 8
  %347 = and i64 %346, -8
  %348 = icmp slt i64 %347, 0
  br i1 %348, label %349, label %350

349:                                              ; preds = %345
  call void @abort() #11
  unreachable

350:                                              ; preds = %345
  %351 = shl i64 %347, 1
  %352 = call i8* @_Znwm(i64 %351) #10
  %353 = bitcast i8* %352 to i16*
  %354 = bitcast %"class.std::__1::basic_string"* %13 to i8**
  store i8* %352, i8** %354, align 8
  %355 = or i64 %347, -9223372036854775808
  %356 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %355, i64* %356, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %334, i64* %357, align 8
  br label %358

358:                                              ; preds = %350, %336
  %359 = phi i16* [ %337, %336 ], [ %353, %350 ]
  %360 = add nuw nsw i64 %334, 1
  %361 = add i64 %334, 1
  %362 = icmp ult i64 %361, 16
  br i1 %362, label %452, label %363

363:                                              ; preds = %358
  %364 = add i64 %334, 1
  %365 = getelementptr i16, i16* %359, i64 %364
  %366 = getelementptr i16, i16* %332, i64 %364
  %367 = icmp ult i16* %359, %366
  %368 = icmp ult i16* %332, %365
  %369 = and i1 %367, %368
  br i1 %369, label %452, label %370

370:                                              ; preds = %363
  %371 = and i64 %361, -16
  %372 = sub i64 %360, %371
  %373 = getelementptr i16, i16* %332, i64 %371
  %374 = getelementptr i16, i16* %359, i64 %371
  %375 = add i64 %371, -16
  %376 = lshr exact i64 %375, 4
  %377 = add nuw nsw i64 %376, 1
  %378 = and i64 %377, 3
  %379 = icmp ult i64 %375, 48
  br i1 %379, label %431, label %380

380:                                              ; preds = %370
  %381 = sub nsw i64 %377, %378
  br label %382

382:                                              ; preds = %382, %380
  %383 = phi i64 [ 0, %380 ], [ %428, %382 ]
  %384 = phi i64 [ %381, %380 ], [ %429, %382 ]
  %385 = getelementptr i16, i16* %332, i64 %383
  %386 = getelementptr i16, i16* %359, i64 %383
  %387 = bitcast i16* %385 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !15
  %389 = getelementptr i16, i16* %385, i64 8
  %390 = bitcast i16* %389 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !15
  %392 = bitcast i16* %386 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %392, align 2, !alias.scope !18, !noalias !15
  %393 = getelementptr i16, i16* %386, i64 8
  %394 = bitcast i16* %393 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %394, align 2, !alias.scope !18, !noalias !15
  %395 = or i64 %383, 16
  %396 = getelementptr i16, i16* %332, i64 %395
  %397 = getelementptr i16, i16* %359, i64 %395
  %398 = bitcast i16* %396 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !15
  %400 = getelementptr i16, i16* %396, i64 8
  %401 = bitcast i16* %400 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !15
  %403 = bitcast i16* %397 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %403, align 2, !alias.scope !18, !noalias !15
  %404 = getelementptr i16, i16* %397, i64 8
  %405 = bitcast i16* %404 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %405, align 2, !alias.scope !18, !noalias !15
  %406 = or i64 %383, 32
  %407 = getelementptr i16, i16* %332, i64 %406
  %408 = getelementptr i16, i16* %359, i64 %406
  %409 = bitcast i16* %407 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !15
  %411 = getelementptr i16, i16* %407, i64 8
  %412 = bitcast i16* %411 to <8 x i16>*
  %413 = load <8 x i16>, <8 x i16>* %412, align 2, !alias.scope !15
  %414 = bitcast i16* %408 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %414, align 2, !alias.scope !18, !noalias !15
  %415 = getelementptr i16, i16* %408, i64 8
  %416 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %413, <8 x i16>* %416, align 2, !alias.scope !18, !noalias !15
  %417 = or i64 %383, 48
  %418 = getelementptr i16, i16* %332, i64 %417
  %419 = getelementptr i16, i16* %359, i64 %417
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !15
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !15
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !18, !noalias !15
  %426 = getelementptr i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !18, !noalias !15
  %428 = add i64 %383, 64
  %429 = add i64 %384, -4
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %382, !llvm.loop !20

431:                                              ; preds = %382, %370
  %432 = phi i64 [ 0, %370 ], [ %428, %382 ]
  %433 = icmp eq i64 %378, 0
  br i1 %433, label %450, label %434

434:                                              ; preds = %431, %434
  %435 = phi i64 [ %447, %434 ], [ %432, %431 ]
  %436 = phi i64 [ %448, %434 ], [ %378, %431 ]
  %437 = getelementptr i16, i16* %332, i64 %435
  %438 = getelementptr i16, i16* %359, i64 %435
  %439 = bitcast i16* %437 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !15
  %441 = getelementptr i16, i16* %437, i64 8
  %442 = bitcast i16* %441 to <8 x i16>*
  %443 = load <8 x i16>, <8 x i16>* %442, align 2, !alias.scope !15
  %444 = bitcast i16* %438 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %444, align 2, !alias.scope !18, !noalias !15
  %445 = getelementptr i16, i16* %438, i64 8
  %446 = bitcast i16* %445 to <8 x i16>*
  store <8 x i16> %443, <8 x i16>* %446, align 2, !alias.scope !18, !noalias !15
  %447 = add i64 %435, 16
  %448 = add i64 %436, -1
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %450, label %434, !llvm.loop !21

450:                                              ; preds = %434, %431
  %451 = icmp eq i64 %361, %371
  br i1 %451, label %505, label %452

452:                                              ; preds = %450, %363, %358
  %453 = phi i64 [ %360, %363 ], [ %360, %358 ], [ %372, %450 ]
  %454 = phi i16* [ %332, %363 ], [ %332, %358 ], [ %373, %450 ]
  %455 = phi i16* [ %359, %363 ], [ %359, %358 ], [ %374, %450 ]
  %456 = add i64 %453, -1
  %457 = and i64 %453, 7
  %458 = icmp eq i64 %457, 0
  br i1 %458, label %470, label %459

459:                                              ; preds = %452, %459
  %460 = phi i64 [ %465, %459 ], [ %453, %452 ]
  %461 = phi i16* [ %467, %459 ], [ %454, %452 ]
  %462 = phi i16* [ %466, %459 ], [ %455, %452 ]
  %463 = phi i64 [ %468, %459 ], [ %457, %452 ]
  %464 = load i16, i16* %461, align 2
  store i16 %464, i16* %462, align 2
  %465 = add i64 %460, -1
  %466 = getelementptr inbounds i16, i16* %462, i64 1
  %467 = getelementptr inbounds i16, i16* %461, i64 1
  %468 = add i64 %463, -1
  %469 = icmp eq i64 %468, 0
  br i1 %469, label %470, label %459, !llvm.loop !22

470:                                              ; preds = %459, %452
  %471 = phi i64 [ %453, %452 ], [ %465, %459 ]
  %472 = phi i16* [ %454, %452 ], [ %467, %459 ]
  %473 = phi i16* [ %455, %452 ], [ %466, %459 ]
  %474 = icmp ult i64 %456, 7
  br i1 %474, label %505, label %475

475:                                              ; preds = %470, %475
  %476 = phi i64 [ %501, %475 ], [ %471, %470 ]
  %477 = phi i16* [ %503, %475 ], [ %472, %470 ]
  %478 = phi i16* [ %502, %475 ], [ %473, %470 ]
  %479 = load i16, i16* %477, align 2
  store i16 %479, i16* %478, align 2
  %480 = getelementptr inbounds i16, i16* %478, i64 1
  %481 = getelementptr inbounds i16, i16* %477, i64 1
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %478, i64 2
  %484 = getelementptr inbounds i16, i16* %477, i64 2
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %478, i64 3
  %487 = getelementptr inbounds i16, i16* %477, i64 3
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %478, i64 4
  %490 = getelementptr inbounds i16, i16* %477, i64 4
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %478, i64 5
  %493 = getelementptr inbounds i16, i16* %477, i64 5
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %478, i64 6
  %496 = getelementptr inbounds i16, i16* %477, i64 6
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = getelementptr inbounds i16, i16* %478, i64 7
  %499 = getelementptr inbounds i16, i16* %477, i64 7
  %500 = load i16, i16* %499, align 2
  store i16 %500, i16* %498, align 2
  %501 = add i64 %476, -8
  %502 = getelementptr inbounds i16, i16* %478, i64 8
  %503 = getelementptr inbounds i16, i16* %477, i64 8
  %504 = icmp eq i64 %501, 0
  br i1 %504, label %505, label %475, !llvm.loop !23

505:                                              ; preds = %470, %475, %450, %328
  call void @_Z15FindTermMatchesNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES5_bb(%"class.std::__1::vector.474"* nonnull sret %11, %"class.std::__1::basic_string"* nonnull %12, %"class.std::__1::basic_string"* nonnull %13, i1 zeroext true, i1 zeroext false) #9
  %506 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %507 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %506, i64 0, i32 1, i32 1
  %508 = load i8, i8* %507, align 1
  %509 = icmp slt i8 %508, 0
  br i1 %509, label %510, label %513

510:                                              ; preds = %505
  %511 = bitcast %"class.std::__1::basic_string"* %13 to i8**
  %512 = load i8*, i8** %511, align 8
  call void @_ZdlPv(i8* %512) #10
  br label %513

513:                                              ; preds = %505, %510
  %514 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %515 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %514, i64 0, i32 1, i32 1
  %516 = load i8, i8* %515, align 1
  %517 = icmp slt i8 %516, 0
  br i1 %517, label %518, label %521

518:                                              ; preds = %513
  %519 = bitcast %"class.std::__1::basic_string"* %12 to i8**
  %520 = load i8*, i8** %519, align 8
  call void @_ZdlPv(i8* %520) #10
  br label %521

521:                                              ; preds = %513, %518
  %522 = bitcast %"class.std::__1::vector.388"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %522) #9
  %523 = bitcast %"class.std::__1::vector.474"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %523, i8 0, i64 24, i1 false) #9
  %524 = bitcast %struct.TermMatch** %141 to i64*
  %525 = load i64, i64* %524, align 8
  %526 = bitcast %"class.std::__1::vector.474"* %11 to i64*
  %527 = load i64, i64* %526, align 8
  %528 = sub i64 %525, %527
  %529 = sdiv exact i64 %528, 24
  %530 = icmp eq i64 %528, 0
  br i1 %530, label %553, label %531

531:                                              ; preds = %521
  %532 = icmp ugt i64 %529, 768614336404564650
  br i1 %532, label %533, label %535

533:                                              ; preds = %531
  %534 = bitcast %"class.std::__1::vector.474"* %15 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %534) #11
  unreachable

535:                                              ; preds = %531
  %536 = call i8* @_Znwm(i64 %528) #10
  %537 = bitcast i8* %536 to %struct.TermMatch*
  %538 = getelementptr inbounds %"class.std::__1::vector.474", %"class.std::__1::vector.474"* %15, i64 0, i32 0, i32 1
  %539 = bitcast %struct.TermMatch** %538 to i8**
  store i8* %536, i8** %539, align 8
  %540 = bitcast %"class.std::__1::vector.474"* %15 to i8**
  store i8* %536, i8** %540, align 8
  %541 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %537, i64 %529
  %542 = getelementptr inbounds %"class.std::__1::vector.474", %"class.std::__1::vector.474"* %15, i64 0, i32 0, i32 2, i32 0, i32 0
  store %struct.TermMatch* %541, %struct.TermMatch** %542, align 8
  %543 = bitcast %struct.TermMatch** %538 to i64*
  %544 = ptrtoint i8* %536 to i64
  %545 = icmp sgt i64 %528, 0
  br i1 %545, label %546, label %551

546:                                              ; preds = %535
  %547 = udiv exact i64 %528, 24
  %548 = inttoptr i64 %527 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %536, i8* align 8 %548, i64 %528, i1 false) #9
  %549 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %537, i64 %547
  %550 = ptrtoint %struct.TermMatch* %549 to i64
  br label %551

551:                                              ; preds = %546, %535
  %552 = phi i64 [ %550, %546 ], [ %544, %535 ]
  store i64 %552, i64* %543, align 8
  br label %553

553:                                              ; preds = %521, %551
  %554 = load i8, i8* %131, align 1
  %555 = icmp slt i8 %554, 0
  %556 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %557 = load i64, i64* %556, align 8
  %558 = zext i8 %554 to i64
  %559 = select i1 %555, i64 %557, i64 %558
  call void @_Z19ClassifyTermMatchesNSt3__16vectorI9TermMatchNS_9allocatorIS1_EEEEmii(%"class.std::__1::vector.388"* nonnull sret %14, %"class.std::__1::vector.474"* nonnull %15, i64 %559, i32 3, i32 1) #9
  %560 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 18
  %561 = getelementptr inbounds %"class.std::__1::vector.388", %"class.std::__1::vector.388"* %560, i64 0, i32 0, i32 0
  %562 = load %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"** %561, align 8
  %563 = icmp eq %"struct.AutocompleteMatch::ACMatchClassification"* %562, null
  br i1 %563, label %570, label %564

564:                                              ; preds = %553
  %565 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %562 to i64
  %566 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 18, i32 0, i32 1
  %567 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %566 to i64*
  store i64 %565, i64* %567, align 8
  %568 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"* %562 to i8*
  call void @_ZdlPv(i8* %568) #10
  %569 = bitcast %"class.std::__1::vector.388"* %560 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %569, i8 0, i64 24, i1 false) #9
  br label %570

570:                                              ; preds = %553, %564
  %571 = bitcast %"class.std::__1::vector.388"* %14 to <2 x i64>*
  %572 = load <2 x i64>, <2 x i64>* %571, align 16
  %573 = bitcast %"class.std::__1::vector.388"* %560 to <2 x i64>*
  store <2 x i64> %572, <2 x i64>* %573, align 8
  %574 = getelementptr inbounds %"class.std::__1::vector.388", %"class.std::__1::vector.388"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  %575 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %574 to i64*
  %576 = load i64, i64* %575, align 16
  %577 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 18, i32 0, i32 2, i32 0, i32 0
  %578 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %577 to i64*
  store i64 %576, i64* %578, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %522, i8 0, i64 24, i1 false) #9
  %579 = getelementptr inbounds %"class.std::__1::vector.474", %"class.std::__1::vector.474"* %15, i64 0, i32 0, i32 0
  %580 = load %struct.TermMatch*, %struct.TermMatch** %579, align 8
  %581 = icmp eq %struct.TermMatch* %580, null
  br i1 %581, label %587, label %582

582:                                              ; preds = %570
  %583 = bitcast %struct.TermMatch* %580 to i8*
  %584 = ptrtoint %struct.TermMatch* %580 to i64
  %585 = getelementptr inbounds %"class.std::__1::vector.474", %"class.std::__1::vector.474"* %15, i64 0, i32 0, i32 1
  %586 = bitcast %struct.TermMatch** %585 to i64*
  store i64 %584, i64* %586, align 8
  call void @_ZdlPv(i8* %583) #10
  br label %587

587:                                              ; preds = %570, %582
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %522) #9
  %588 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %2, i64 0, i32 0, i32 0, i32 3
  %589 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 19
  %590 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %589, %"class.std::__1::basic_string"* dereferenceable(24) %588)
  %591 = bitcast %"class.std::__1::vector.474"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %591) #9
  %592 = getelementptr inbounds %"class.std::__1::vector.474", %"class.std::__1::vector.474"* %16, i64 0, i32 0, i32 0
  %593 = getelementptr inbounds %"class.std::__1::vector.474", %"class.std::__1::vector.474"* %16, i64 0, i32 0, i32 1
  %594 = bitcast %"class.std::__1::vector.474"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %594, i8 -86, i64 24, i1 false)
  %595 = load i8, i8* %143, align 1
  %596 = icmp slt i8 %595, 0
  br i1 %596, label %600, label %597

597:                                              ; preds = %587
  %598 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %599 = bitcast %class.AutocompleteInput* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %598, i8* align 8 %599, i64 24, i1 false) #9
  br label %775

600:                                              ; preds = %587
  %601 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %602 = load i16*, i16** %601, align 8
  %603 = getelementptr inbounds %class.HistoryQuickProvider, %class.HistoryQuickProvider* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %604 = load i64, i64* %603, align 8
  %605 = icmp ult i64 %604, 11
  br i1 %605, label %606, label %611

606:                                              ; preds = %600
  %607 = bitcast %"class.std::__1::basic_string"* %17 to i16*
  %608 = trunc i64 %604 to i8
  %609 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %610 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %609, i64 0, i32 1, i32 1
  store i8 %608, i8* %610, align 1
  br label %628

611:                                              ; preds = %600
  %612 = icmp ugt i64 %604, 9223372036854775791
  br i1 %612, label %613, label %615

613:                                              ; preds = %611
  %614 = bitcast %"class.std::__1::basic_string"* %17 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %614) #11
  unreachable

615:                                              ; preds = %611
  %616 = add nuw nsw i64 %604, 8
  %617 = and i64 %616, -8
  %618 = icmp slt i64 %617, 0
  br i1 %618, label %619, label %620

619:                                              ; preds = %615
  call void @abort() #11
  unreachable

620:                                              ; preds = %615
  %621 = shl i64 %617, 1
  %622 = call i8* @_Znwm(i64 %621) #10
  %623 = bitcast i8* %622 to i16*
  %624 = bitcast %"class.std::__1::basic_string"* %17 to i8**
  store i8* %622, i8** %624, align 8
  %625 = or i64 %617, -9223372036854775808
  %626 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %625, i64* %626, align 8
  %627 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %604, i64* %627, align 8
  br label %628

628:                                              ; preds = %620, %606
  %629 = phi i16* [ %607, %606 ], [ %623, %620 ]
  %630 = add nuw nsw i64 %604, 1
  %631 = add i64 %604, 1
  %632 = icmp ult i64 %631, 16
  br i1 %632, label %722, label %633

633:                                              ; preds = %628
  %634 = add i64 %604, 1
  %635 = getelementptr i16, i16* %629, i64 %634
  %636 = getelementptr i16, i16* %602, i64 %634
  %637 = icmp ult i16* %629, %636
  %638 = icmp ult i16* %602, %635
  %639 = and i1 %637, %638
  br i1 %639, label %722, label %640

640:                                              ; preds = %633
  %641 = and i64 %631, -16
  %642 = sub i64 %630, %641
  %643 = getelementptr i16, i16* %602, i64 %641
  %644 = getelementptr i16, i16* %629, i64 %641
  %645 = add i64 %641, -16
  %646 = lshr exact i64 %645, 4
  %647 = add nuw nsw i64 %646, 1
  %648 = and i64 %647, 3
  %649 = icmp ult i64 %645, 48
  br i1 %649, label %701, label %650

650:                                              ; preds = %640
  %651 = sub nsw i64 %647, %648
  br label %652

652:                                              ; preds = %652, %650
  %653 = phi i64 [ 0, %650 ], [ %698, %652 ]
  %654 = phi i64 [ %651, %650 ], [ %699, %652 ]
  %655 = getelementptr i16, i16* %602, i64 %653
  %656 = getelementptr i16, i16* %629, i64 %653
  %657 = bitcast i16* %655 to <8 x i16>*
  %658 = load <8 x i16>, <8 x i16>* %657, align 2, !alias.scope !24
  %659 = getelementptr i16, i16* %655, i64 8
  %660 = bitcast i16* %659 to <8 x i16>*
  %661 = load <8 x i16>, <8 x i16>* %660, align 2, !alias.scope !24
  %662 = bitcast i16* %656 to <8 x i16>*
  store <8 x i16> %658, <8 x i16>* %662, align 2, !alias.scope !27, !noalias !24
  %663 = getelementptr i16, i16* %656, i64 8
  %664 = bitcast i16* %663 to <8 x i16>*
  store <8 x i16> %661, <8 x i16>* %664, align 2, !alias.scope !27, !noalias !24
  %665 = or i64 %653, 16
  %666 = getelementptr i16, i16* %602, i64 %665
  %667 = getelementptr i16, i16* %629, i64 %665
  %668 = bitcast i16* %666 to <8 x i16>*
  %669 = load <8 x i16>, <8 x i16>* %668, align 2, !alias.scope !24
  %670 = getelementptr i16, i16* %666, i64 8
  %671 = bitcast i16* %670 to <8 x i16>*
  %672 = load <8 x i16>, <8 x i16>* %671, align 2, !alias.scope !24
  %673 = bitcast i16* %667 to <8 x i16>*
  store <8 x i16> %669, <8 x i16>* %673, align 2, !alias.scope !27, !noalias !24
  %674 = getelementptr i16, i16* %667, i64 8
  %675 = bitcast i16* %674 to <8 x i16>*
  store <8 x i16> %672, <8 x i16>* %675, align 2, !alias.scope !27, !noalias !24
  %676 = or i64 %653, 32
  %677 = getelementptr i16, i16* %602, i64 %676
  %678 = getelementptr i16, i16* %629, i64 %676
  %679 = bitcast i16* %677 to <8 x i16>*
  %680 = load <8 x i16>, <8 x i16>* %679, align 2, !alias.scope !24
  %681 = getelementptr i16, i16* %677, i64 8
  %682 = bitcast i16* %681 to <8 x i16>*
  %683 = load <8 x i16>, <8 x i16>* %682, align 2, !alias.scope !24
  %684 = bitcast i16* %678 to <8 x i16>*
  store <8 x i16> %680, <8 x i16>* %684, align 2, !alias.scope !27, !noalias !24
  %685 = getelementptr i16, i16* %678, i64 8
  %686 = bitcast i16* %685 to <8 x i16>*
  store <8 x i16> %683, <8 x i16>* %686, align 2, !alias.scope !27, !noalias !24
  %687 = or i64 %653, 48
  %688 = getelementptr i16, i16* %602, i64 %687
  %689 = getelementptr i16, i16* %629, i64 %687
  %690 = bitcast i16* %688 to <8 x i16>*
  %691 = load <8 x i16>, <8 x i16>* %690, align 2, !alias.scope !24
  %692 = getelementptr i16, i16* %688, i64 8
  %693 = bitcast i16* %692 to <8 x i16>*
  %694 = load <8 x i16>, <8 x i16>* %693, align 2, !alias.scope !24
  %695 = bitcast i16* %689 to <8 x i16>*
  store <8 x i16> %691, <8 x i16>* %695, align 2, !alias.scope !27, !noalias !24
  %696 = getelementptr i16, i16* %689, i64 8
  %697 = bitcast i16* %696 to <8 x i16>*
  store <8 x i16> %694, <8 x i16>* %697, align 2, !alias.scope !27, !noalias !24
  %698 = add i64 %653, 64
  %699 = add i64 %654, -4
  %700 = icmp eq i64 %699, 0
  br i1 %700, label %701, label %652, !llvm.loop !29

701:                                              ; preds = %652, %640
  %702 = phi i64 [ 0, %640 ], [ %698, %652 ]
  %703 = icmp eq i64 %648, 0
  br i1 %703, label %720, label %704

704:                                              ; preds = %701, %704
  %705 = phi i64 [ %717, %704 ], [ %702, %701 ]
  %706 = phi i64 [ %718, %704 ], [ %648, %701 ]
  %707 = getelementptr i16, i16* %602, i64 %705
  %708 = getelementptr i16, i16* %629, i64 %705
  %709 = bitcast i16* %707 to <8 x i16>*
  %710 = load <8 x i16>, <8 x i16>* %709, align 2, !alias.scope !24
  %711 = getelementptr i16, i16* %707, i64 8
  %712 = bitcast i16* %711 to <8 x i16>*
  %713 = load <8 x i16>, <8 x i16>* %712, align 2, !alias.scope !24
  %714 = bitcast i16* %708 to <8 x i16>*
  store <8 x i16> %710, <8 x i16>* %714, align 2, !alias.scope !27, !noalias !24
  %715 = getelementptr i16, i16* %708, i64 8
  %716 = bitcast i16* %715 to <8 x i16>*
  store <8 x i16> %713, <8 x i16>* %716, align 2, !alias.scope !27, !noalias !24
  %717 = add i64 %705, 16
  %718 = add i64 %706, -1
  %719 = icmp eq i64 %718, 0
  br i1 %719, label %720, label %704, !llvm.loop !30

720:                                              ; preds = %704, %701
  %721 = icmp eq i64 %631, %641
  br i1 %721, label %775, label %722

722:                                              ; preds = %720, %633, %628
  %723 = phi i64 [ %630, %633 ], [ %630, %628 ], [ %642, %720 ]
  %724 = phi i16* [ %602, %633 ], [ %602, %628 ], [ %643, %720 ]
  %725 = phi i16* [ %629, %633 ], [ %629, %628 ], [ %644, %720 ]
  %726 = add i64 %723, -1
  %727 = and i64 %723, 7
  %728 = icmp eq i64 %727, 0
  br i1 %728, label %740, label %729

729:                                              ; preds = %722, %729
  %730 = phi i64 [ %735, %729 ], [ %723, %722 ]
  %731 = phi i16* [ %737, %729 ], [ %724, %722 ]
  %732 = phi i16* [ %736, %729 ], [ %725, %722 ]
  %733 = phi i64 [ %738, %729 ], [ %727, %722 ]
  %734 = load i16, i16* %731, align 2
  store i16 %734, i16* %732, align 2
  %735 = add i64 %730, -1
  %736 = getelementptr inbounds i16, i16* %732, i64 1
  %737 = getelementptr inbounds i16, i16* %731, i64 1
  %738 = add i64 %733, -1
  %739 = icmp eq i64 %738, 0
  br i1 %739, label %740, label %729, !llvm.loop !31

740:                                              ; preds = %729, %722
  %741 = phi i64 [ %723, %722 ], [ %735, %729 ]
  %742 = phi i16* [ %724, %722 ], [ %737, %729 ]
  %743 = phi i16* [ %725, %722 ], [ %736, %729 ]
  %744 = icmp ult i64 %726, 7
  br i1 %744, label %775, label %745

745:                                              ; preds = %740, %745
  %746 = phi i64 [ %771, %745 ], [ %741, %740 ]
  %747 = phi i16* [ %773, %745 ], [ %742, %740 ]
  %748 = phi i16* [ %772, %745 ], [ %743, %740 ]
  %749 = load i16, i16* %747, align 2
  store i16 %749, i16* %748, align 2
  %750 = getelementptr inbounds i16, i16* %748, i64 1
  %751 = getelementptr inbounds i16, i16* %747, i64 1
  %752 = load i16, i16* %751, align 2
  store i16 %752, i16* %750, align 2
  %753 = getelementptr inbounds i16, i16* %748, i64 2
  %754 = getelementptr inbounds i16, i16* %747, i64 2
  %755 = load i16, i16* %754, align 2
  store i16 %755, i16* %753, align 2
  %756 = getelementptr inbounds i16, i16* %748, i64 3
  %757 = getelementptr inbounds i16, i16* %747, i64 3
  %758 = load i16, i16* %757, align 2
  store i16 %758, i16* %756, align 2
  %759 = getelementptr inbounds i16, i16* %748, i64 4
  %760 = getelementptr inbounds i16, i16* %747, i64 4
  %761 = load i16, i16* %760, align 2
  store i16 %761, i16* %759, align 2
  %762 = getelementptr inbounds i16, i16* %748, i64 5
  %763 = getelementptr inbounds i16, i16* %747, i64 5
  %764 = load i16, i16* %763, align 2
  store i16 %764, i16* %762, align 2
  %765 = getelementptr inbounds i16, i16* %748, i64 6
  %766 = getelementptr inbounds i16, i16* %747, i64 6
  %767 = load i16, i16* %766, align 2
  store i16 %767, i16* %765, align 2
  %768 = getelementptr inbounds i16, i16* %748, i64 7
  %769 = getelementptr inbounds i16, i16* %747, i64 7
  %770 = load i16, i16* %769, align 2
  store i16 %770, i16* %768, align 2
  %771 = add i64 %746, -8
  %772 = getelementptr inbounds i16, i16* %748, i64 8
  %773 = getelementptr inbounds i16, i16* %747, i64 8
  %774 = icmp eq i64 %771, 0
  br i1 %774, label %775, label %745, !llvm.loop !32

775:                                              ; preds = %740, %745, %720, %597
  %776 = bitcast %"class.std::__1::basic_string"* %589 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %777 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %776, i64 0, i32 1, i32 1
  %778 = load i8, i8* %777, align 1
  %779 = icmp slt i8 %778, 0
  br i1 %779, label %783, label %780

780:                                              ; preds = %775
  %781 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %782 = bitcast %"class.std::__1::basic_string"* %589 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %781, i8* align 8 %782, i64 24, i1 false) #9
  br label %958

783:                                              ; preds = %775
  %784 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %589, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %785 = load i16*, i16** %784, align 8
  %786 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %787 = load i64, i64* %786, align 8
  %788 = icmp ult i64 %787, 11
  br i1 %788, label %789, label %794

789:                                              ; preds = %783
  %790 = bitcast %"class.std::__1::basic_string"* %18 to i16*
  %791 = trunc i64 %787 to i8
  %792 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %793 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %792, i64 0, i32 1, i32 1
  store i8 %791, i8* %793, align 1
  br label %811

794:                                              ; preds = %783
  %795 = icmp ugt i64 %787, 9223372036854775791
  br i1 %795, label %796, label %798

796:                                              ; preds = %794
  %797 = bitcast %"class.std::__1::basic_string"* %18 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %797) #11
  unreachable

798:                                              ; preds = %794
  %799 = add nuw nsw i64 %787, 8
  %800 = and i64 %799, -8
  %801 = icmp slt i64 %800, 0
  br i1 %801, label %802, label %803

802:                                              ; preds = %798
  call void @abort() #11
  unreachable

803:                                              ; preds = %798
  %804 = shl i64 %800, 1
  %805 = call i8* @_Znwm(i64 %804) #10
  %806 = bitcast i8* %805 to i16*
  %807 = bitcast %"class.std::__1::basic_string"* %18 to i8**
  store i8* %805, i8** %807, align 8
  %808 = or i64 %800, -9223372036854775808
  %809 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %808, i64* %809, align 8
  %810 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %787, i64* %810, align 8
  br label %811

811:                                              ; preds = %803, %789
  %812 = phi i16* [ %790, %789 ], [ %806, %803 ]
  %813 = add nuw nsw i64 %787, 1
  %814 = add i64 %787, 1
  %815 = icmp ult i64 %814, 16
  br i1 %815, label %905, label %816

816:                                              ; preds = %811
  %817 = add i64 %787, 1
  %818 = getelementptr i16, i16* %812, i64 %817
  %819 = getelementptr i16, i16* %785, i64 %817
  %820 = icmp ult i16* %812, %819
  %821 = icmp ult i16* %785, %818
  %822 = and i1 %820, %821
  br i1 %822, label %905, label %823

823:                                              ; preds = %816
  %824 = and i64 %814, -16
  %825 = sub i64 %813, %824
  %826 = getelementptr i16, i16* %785, i64 %824
  %827 = getelementptr i16, i16* %812, i64 %824
  %828 = add i64 %824, -16
  %829 = lshr exact i64 %828, 4
  %830 = add nuw nsw i64 %829, 1
  %831 = and i64 %830, 3
  %832 = icmp ult i64 %828, 48
  br i1 %832, label %884, label %833

833:                                              ; preds = %823
  %834 = sub nsw i64 %830, %831
  br label %835

835:                                              ; preds = %835, %833
  %836 = phi i64 [ 0, %833 ], [ %881, %835 ]
  %837 = phi i64 [ %834, %833 ], [ %882, %835 ]
  %838 = getelementptr i16, i16* %785, i64 %836
  %839 = getelementptr i16, i16* %812, i64 %836
  %840 = bitcast i16* %838 to <8 x i16>*
  %841 = load <8 x i16>, <8 x i16>* %840, align 2, !alias.scope !33
  %842 = getelementptr i16, i16* %838, i64 8
  %843 = bitcast i16* %842 to <8 x i16>*
  %844 = load <8 x i16>, <8 x i16>* %843, align 2, !alias.scope !33
  %845 = bitcast i16* %839 to <8 x i16>*
  store <8 x i16> %841, <8 x i16>* %845, align 2, !alias.scope !36, !noalias !33
  %846 = getelementptr i16, i16* %839, i64 8
  %847 = bitcast i16* %846 to <8 x i16>*
  store <8 x i16> %844, <8 x i16>* %847, align 2, !alias.scope !36, !noalias !33
  %848 = or i64 %836, 16
  %849 = getelementptr i16, i16* %785, i64 %848
  %850 = getelementptr i16, i16* %812, i64 %848
  %851 = bitcast i16* %849 to <8 x i16>*
  %852 = load <8 x i16>, <8 x i16>* %851, align 2, !alias.scope !33
  %853 = getelementptr i16, i16* %849, i64 8
  %854 = bitcast i16* %853 to <8 x i16>*
  %855 = load <8 x i16>, <8 x i16>* %854, align 2, !alias.scope !33
  %856 = bitcast i16* %850 to <8 x i16>*
  store <8 x i16> %852, <8 x i16>* %856, align 2, !alias.scope !36, !noalias !33
  %857 = getelementptr i16, i16* %850, i64 8
  %858 = bitcast i16* %857 to <8 x i16>*
  store <8 x i16> %855, <8 x i16>* %858, align 2, !alias.scope !36, !noalias !33
  %859 = or i64 %836, 32
  %860 = getelementptr i16, i16* %785, i64 %859
  %861 = getelementptr i16, i16* %812, i64 %859
  %862 = bitcast i16* %860 to <8 x i16>*
  %863 = load <8 x i16>, <8 x i16>* %862, align 2, !alias.scope !33
  %864 = getelementptr i16, i16* %860, i64 8
  %865 = bitcast i16* %864 to <8 x i16>*
  %866 = load <8 x i16>, <8 x i16>* %865, align 2, !alias.scope !33
  %867 = bitcast i16* %861 to <8 x i16>*
  store <8 x i16> %863, <8 x i16>* %867, align 2, !alias.scope !36, !noalias !33
  %868 = getelementptr i16, i16* %861, i64 8
  %869 = bitcast i16* %868 to <8 x i16>*
  store <8 x i16> %866, <8 x i16>* %869, align 2, !alias.scope !36, !noalias !33
  %870 = or i64 %836, 48
  %871 = getelementptr i16, i16* %785, i64 %870
  %872 = getelementptr i16, i16* %812, i64 %870
  %873 = bitcast i16* %871 to <8 x i16>*
  %874 = load <8 x i16>, <8 x i16>* %873, align 2, !alias.scope !33
  %875 = getelementptr i16, i16* %871, i64 8
  %876 = bitcast i16* %875 to <8 x i16>*
  %877 = load <8 x i16>, <8 x i16>* %876, align 2, !alias.scope !33
  %878 = bitcast i16* %872 to <8 x i16>*
  store <8 x i16> %874, <8 x i16>* %878, align 2, !alias.scope !36, !noalias !33
  %879 = getelementptr i16, i16* %872, i64 8
  %880 = bitcast i16* %879 to <8 x i16>*
  store <8 x i16> %877, <8 x i16>* %880, align 2, !alias.scope !36, !noalias !33
  %881 = add i64 %836, 64
  %882 = add i64 %837, -4
  %883 = icmp eq i64 %882, 0
  br i1 %883, label %884, label %835, !llvm.loop !38

884:                                              ; preds = %835, %823
  %885 = phi i64 [ 0, %823 ], [ %881, %835 ]
  %886 = icmp eq i64 %831, 0
  br i1 %886, label %903, label %887

887:                                              ; preds = %884, %887
  %888 = phi i64 [ %900, %887 ], [ %885, %884 ]
  %889 = phi i64 [ %901, %887 ], [ %831, %884 ]
  %890 = getelementptr i16, i16* %785, i64 %888
  %891 = getelementptr i16, i16* %812, i64 %888
  %892 = bitcast i16* %890 to <8 x i16>*
  %893 = load <8 x i16>, <8 x i16>* %892, align 2, !alias.scope !33
  %894 = getelementptr i16, i16* %890, i64 8
  %895 = bitcast i16* %894 to <8 x i16>*
  %896 = load <8 x i16>, <8 x i16>* %895, align 2, !alias.scope !33
  %897 = bitcast i16* %891 to <8 x i16>*
  store <8 x i16> %893, <8 x i16>* %897, align 2, !alias.scope !36, !noalias !33
  %898 = getelementptr i16, i16* %891, i64 8
  %899 = bitcast i16* %898 to <8 x i16>*
  store <8 x i16> %896, <8 x i16>* %899, align 2, !alias.scope !36, !noalias !33
  %900 = add i64 %888, 16
  %901 = add i64 %889, -1
  %902 = icmp eq i64 %901, 0
  br i1 %902, label %903, label %887, !llvm.loop !39

903:                                              ; preds = %887, %884
  %904 = icmp eq i64 %814, %824
  br i1 %904, label %958, label %905

905:                                              ; preds = %903, %816, %811
  %906 = phi i64 [ %813, %816 ], [ %813, %811 ], [ %825, %903 ]
  %907 = phi i16* [ %785, %816 ], [ %785, %811 ], [ %826, %903 ]
  %908 = phi i16* [ %812, %816 ], [ %812, %811 ], [ %827, %903 ]
  %909 = add i64 %906, -1
  %910 = and i64 %906, 7
  %911 = icmp eq i64 %910, 0
  br i1 %911, label %923, label %912

912:                                              ; preds = %905, %912
  %913 = phi i64 [ %918, %912 ], [ %906, %905 ]
  %914 = phi i16* [ %920, %912 ], [ %907, %905 ]
  %915 = phi i16* [ %919, %912 ], [ %908, %905 ]
  %916 = phi i64 [ %921, %912 ], [ %910, %905 ]
  %917 = load i16, i16* %914, align 2
  store i16 %917, i16* %915, align 2
  %918 = add i64 %913, -1
  %919 = getelementptr inbounds i16, i16* %915, i64 1
  %920 = getelementptr inbounds i16, i16* %914, i64 1
  %921 = add i64 %916, -1
  %922 = icmp eq i64 %921, 0
  br i1 %922, label %923, label %912, !llvm.loop !40

923:                                              ; preds = %912, %905
  %924 = phi i64 [ %906, %905 ], [ %918, %912 ]
  %925 = phi i16* [ %907, %905 ], [ %920, %912 ]
  %926 = phi i16* [ %908, %905 ], [ %919, %912 ]
  %927 = icmp ult i64 %909, 7
  br i1 %927, label %958, label %928

928:                                              ; preds = %923, %928
  %929 = phi i64 [ %954, %928 ], [ %924, %923 ]
  %930 = phi i16* [ %956, %928 ], [ %925, %923 ]
  %931 = phi i16* [ %955, %928 ], [ %926, %923 ]
  %932 = load i16, i16* %930, align 2
  store i16 %932, i16* %931, align 2
  %933 = getelementptr inbounds i16, i16* %931, i64 1
  %934 = getelementptr inbounds i16, i16* %930, i64 1
  %935 = load i16, i16* %934, align 2
  store i16 %935, i16* %933, align 2
  %936 = getelementptr inbounds i16, i16* %931, i64 2
  %937 = getelementptr inbounds i16, i16* %930, i64 2
  %938 = load i16, i16* %937, align 2
  store i16 %938, i16* %936, align 2
  %939 = getelementptr inbounds i16, i16* %931, i64 3
  %940 = getelementptr inbounds i16, i16* %930, i64 3
  %941 = load i16, i16* %940, align 2
  store i16 %941, i16* %939, align 2
  %942 = getelementptr inbounds i16, i16* %931, i64 4
  %943 = getelementptr inbounds i16, i16* %930, i64 4
  %944 = load i16, i16* %943, align 2
  store i16 %944, i16* %942, align 2
  %945 = getelementptr inbounds i16, i16* %931, i64 5
  %946 = getelementptr inbounds i16, i16* %930, i64 5
  %947 = load i16, i16* %946, align 2
  store i16 %947, i16* %945, align 2
  %948 = getelementptr inbounds i16, i16* %931, i64 6
  %949 = getelementptr inbounds i16, i16* %930, i64 6
  %950 = load i16, i16* %949, align 2
  store i16 %950, i16* %948, align 2
  %951 = getelementptr inbounds i16, i16* %931, i64 7
  %952 = getelementptr inbounds i16, i16* %930, i64 7
  %953 = load i16, i16* %952, align 2
  store i16 %953, i16* %951, align 2
  %954 = add i64 %929, -8
  %955 = getelementptr inbounds i16, i16* %931, i64 8
  %956 = getelementptr inbounds i16, i16* %930, i64 8
  %957 = icmp eq i64 %954, 0
  br i1 %957, label %958, label %928, !llvm.loop !41

958:                                              ; preds = %923, %928, %903, %780
  call void @_Z15FindTermMatchesNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES5_bb(%"class.std::__1::vector.474"* nonnull sret %16, %"class.std::__1::basic_string"* nonnull %17, %"class.std::__1::basic_string"* nonnull %18, i1 zeroext true, i1 zeroext false) #9
  %959 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %960 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %959, i64 0, i32 1, i32 1
  %961 = load i8, i8* %960, align 1
  %962 = icmp slt i8 %961, 0
  br i1 %962, label %963, label %966

963:                                              ; preds = %958
  %964 = bitcast %"class.std::__1::basic_string"* %18 to i8**
  %965 = load i8*, i8** %964, align 8
  call void @_ZdlPv(i8* %965) #10
  br label %966

966:                                              ; preds = %958, %963
  %967 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %968 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %967, i64 0, i32 1, i32 1
  %969 = load i8, i8* %968, align 1
  %970 = icmp slt i8 %969, 0
  br i1 %970, label %971, label %974

971:                                              ; preds = %966
  %972 = bitcast %"class.std::__1::basic_string"* %17 to i8**
  %973 = load i8*, i8** %972, align 8
  call void @_ZdlPv(i8* %973) #10
  br label %974

974:                                              ; preds = %966, %971
  %975 = bitcast %"class.std::__1::vector.388"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %975) #9
  %976 = bitcast %"class.std::__1::vector.474"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %976, i8 0, i64 24, i1 false) #9
  %977 = bitcast %struct.TermMatch** %593 to i64*
  %978 = load i64, i64* %977, align 8
  %979 = bitcast %"class.std::__1::vector.474"* %16 to i64*
  %980 = load i64, i64* %979, align 8
  %981 = sub i64 %978, %980
  %982 = sdiv exact i64 %981, 24
  %983 = icmp eq i64 %981, 0
  br i1 %983, label %1006, label %984

984:                                              ; preds = %974
  %985 = icmp ugt i64 %982, 768614336404564650
  br i1 %985, label %986, label %988

986:                                              ; preds = %984
  %987 = bitcast %"class.std::__1::vector.474"* %20 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %987) #11
  unreachable

988:                                              ; preds = %984
  %989 = call i8* @_Znwm(i64 %981) #10
  %990 = bitcast i8* %989 to %struct.TermMatch*
  %991 = getelementptr inbounds %"class.std::__1::vector.474", %"class.std::__1::vector.474"* %20, i64 0, i32 0, i32 1
  %992 = bitcast %struct.TermMatch** %991 to i8**
  store i8* %989, i8** %992, align 8
  %993 = bitcast %"class.std::__1::vector.474"* %20 to i8**
  store i8* %989, i8** %993, align 8
  %994 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %990, i64 %982
  %995 = getelementptr inbounds %"class.std::__1::vector.474", %"class.std::__1::vector.474"* %20, i64 0, i32 0, i32 2, i32 0, i32 0
  store %struct.TermMatch* %994, %struct.TermMatch** %995, align 8
  %996 = bitcast %struct.TermMatch** %991 to i64*
  %997 = ptrtoint i8* %989 to i64
  %998 = icmp sgt i64 %981, 0
  br i1 %998, label %999, label %1004

999:                                              ; preds = %988
  %1000 = udiv exact i64 %981, 24
  %1001 = inttoptr i64 %980 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %989, i8* align 8 %1001, i64 %981, i1 false) #9
  %1002 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %990, i64 %1000
  %1003 = ptrtoint %struct.TermMatch* %1002 to i64
  br label %1004

1004:                                             ; preds = %999, %988
  %1005 = phi i64 [ %1003, %999 ], [ %997, %988 ]
  store i64 %1005, i64* %996, align 8
  br label %1006

1006:                                             ; preds = %974, %1004
  %1007 = load i8, i8* %777, align 1
  %1008 = icmp slt i8 %1007, 0
  %1009 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1010 = load i64, i64* %1009, align 8
  %1011 = zext i8 %1007 to i64
  %1012 = select i1 %1008, i64 %1010, i64 %1011
  call void @_Z19ClassifyTermMatchesNSt3__16vectorI9TermMatchNS_9allocatorIS1_EEEEmii(%"class.std::__1::vector.388"* nonnull sret %19, %"class.std::__1::vector.474"* nonnull %20, i64 %1012, i32 2, i32 0) #9
  %1013 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 20
  %1014 = getelementptr inbounds %"class.std::__1::vector.388", %"class.std::__1::vector.388"* %1013, i64 0, i32 0, i32 0
  %1015 = load %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"** %1014, align 8
  %1016 = icmp eq %"struct.AutocompleteMatch::ACMatchClassification"* %1015, null
  br i1 %1016, label %1023, label %1017

1017:                                             ; preds = %1006
  %1018 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %1015 to i64
  %1019 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 20, i32 0, i32 1
  %1020 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %1019 to i64*
  store i64 %1018, i64* %1020, align 8
  %1021 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"* %1015 to i8*
  call void @_ZdlPv(i8* %1021) #10
  %1022 = bitcast %"class.std::__1::vector.388"* %1013 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1022, i8 0, i64 24, i1 false) #9
  br label %1023

1023:                                             ; preds = %1006, %1017
  %1024 = bitcast %"class.std::__1::vector.388"* %19 to <2 x i64>*
  %1025 = load <2 x i64>, <2 x i64>* %1024, align 16
  %1026 = bitcast %"class.std::__1::vector.388"* %1013 to <2 x i64>*
  store <2 x i64> %1025, <2 x i64>* %1026, align 8
  %1027 = getelementptr inbounds %"class.std::__1::vector.388", %"class.std::__1::vector.388"* %19, i64 0, i32 0, i32 2, i32 0, i32 0
  %1028 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %1027 to i64*
  %1029 = load i64, i64* %1028, align 16
  %1030 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 20, i32 0, i32 2, i32 0, i32 0
  %1031 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %1030 to i64*
  store i64 %1029, i64* %1031, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %975, i8 0, i64 24, i1 false) #9
  %1032 = getelementptr inbounds %"class.std::__1::vector.474", %"class.std::__1::vector.474"* %20, i64 0, i32 0, i32 0
  %1033 = load %struct.TermMatch*, %struct.TermMatch** %1032, align 8
  %1034 = icmp eq %struct.TermMatch* %1033, null
  br i1 %1034, label %1040, label %1035

1035:                                             ; preds = %1023
  %1036 = bitcast %struct.TermMatch* %1033 to i8*
  %1037 = ptrtoint %struct.TermMatch* %1033 to i64
  %1038 = getelementptr inbounds %"class.std::__1::vector.474", %"class.std::__1::vector.474"* %20, i64 0, i32 0, i32 1
  %1039 = bitcast %struct.TermMatch** %1038 to i64*
  store i64 %1037, i64* %1039, align 8
  call void @_ZdlPv(i8* %1036) #10
  br label %1040

1040:                                             ; preds = %1023, %1035
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %975) #9
  %1041 = call zeroext i1 @_ZN17AutocompleteMatch21TryRichAutocompletionERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_RK17AutocompleteInputb(%struct.AutocompleteMatch* %0, %"class.std::__1::basic_string"* dereferenceable(24) %129, %"class.std::__1::basic_string"* dereferenceable(24) %589, %class.AutocompleteInput* dereferenceable(512) %43, i1 zeroext false) #9
  %1042 = xor i1 %1041, true
  %1043 = load i64, i64* %5, align 8
  %1044 = icmp ne i64 %1043, -1
  %1045 = and i1 %1044, %1042
  br i1 %1045, label %1046, label %1059

1046:                                             ; preds = %1040
  %1047 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1047) #9
  %1048 = bitcast %"class.std::__1::basic_string"* %97 to %"class.std::__1::allocator.5"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %21, %"class.std::__1::basic_string"* dereferenceable(24) %97, i64 %1043, i64 -1, %"class.std::__1::allocator.5"* dereferenceable(1) %1048) #9
  %1049 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 6
  %1050 = bitcast %"class.std::__1::basic_string"* %1049 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1051 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1050, i64 0, i32 1, i32 1
  %1052 = load i8, i8* %1051, align 1
  %1053 = icmp slt i8 %1052, 0
  br i1 %1053, label %1054, label %1057

1054:                                             ; preds = %1046
  %1055 = bitcast %"class.std::__1::basic_string"* %1049 to i8**
  %1056 = load i8*, i8** %1055, align 8
  call void @_ZdlPv(i8* %1056) #10
  br label %1057

1057:                                             ; preds = %1054, %1046
  %1058 = bitcast %"class.std::__1::basic_string"* %1049 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1058, i8* nonnull align 8 %1047, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1047) #9
  call void @_ZN17AutocompleteMatch21SetAllowedToBeDefaultERK17AutocompleteInput(%struct.AutocompleteMatch* %0, %class.AutocompleteInput* dereferenceable(512) %43) #9
  br label %1059

1059:                                             ; preds = %1040, %1057
  %1060 = bitcast %"class.std::__1::basic_string.7"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1060) #9
  %1061 = bitcast %"class.std::__1::basic_string.7"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1062 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1061, i64 0, i32 1, i32 0
  store i8 11, i8* %1062, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1060, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i64 11, i1 false) #9
  %1063 = getelementptr inbounds i8, i8* %1060, i64 11
  store i8 0, i8* %1063, align 1
  %1064 = load i32, i32* %36, align 4
  call void @_ZN17AutocompleteMatch20RecordAdditionalInfoERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEi(%struct.AutocompleteMatch* %0, %"class.std::__1::basic_string.7"* nonnull dereferenceable(24) %22, i32 %1064) #9
  %1065 = load i8, i8* %1062, align 1
  %1066 = icmp slt i8 %1065, 0
  br i1 %1066, label %1067, label %1070

1067:                                             ; preds = %1059
  %1068 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1069 = load i8*, i8** %1068, align 8
  call void @_ZdlPv(i8* %1069) #10
  br label %1070

1070:                                             ; preds = %1059, %1067
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1060) #9
  %1071 = bitcast %"class.std::__1::basic_string.7"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1071) #9
  %1072 = bitcast %"class.std::__1::basic_string.7"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1073 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1072, i64 0, i32 1, i32 0
  store i8 11, i8* %1073, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1071, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i64 11, i1 false) #9
  %1074 = getelementptr inbounds i8, i8* %1071, i64 11
  store i8 0, i8* %1074, align 1
  %1075 = load i32, i32* %27, align 8
  call void @_ZN17AutocompleteMatch20RecordAdditionalInfoERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEi(%struct.AutocompleteMatch* %0, %"class.std::__1::basic_string.7"* nonnull dereferenceable(24) %23, i32 %1075) #9
  %1076 = load i8, i8* %1073, align 1
  %1077 = icmp slt i8 %1076, 0
  br i1 %1077, label %1078, label %1081

1078:                                             ; preds = %1070
  %1079 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1080 = load i8*, i8** %1079, align 8
  call void @_ZdlPv(i8* %1080) #10
  br label %1081

1081:                                             ; preds = %1070, %1078
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1071) #9
  %1082 = bitcast %"class.std::__1::basic_string.7"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1082) #9
  %1083 = bitcast %"class.std::__1::basic_string.7"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1084 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1083, i64 0, i32 1, i32 0
  store i8 10, i8* %1084, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1082, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i64 10, i1 false) #9
  %1085 = getelementptr inbounds i8, i8* %1082, i64 10
  store i8 0, i8* %1085, align 2
  %1086 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %2, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %1087 = load i64, i64* %1086, align 8
  call void @_ZN17AutocompleteMatch20RecordAdditionalInfoERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEN4base4TimeE(%struct.AutocompleteMatch* %0, %"class.std::__1::basic_string.7"* nonnull dereferenceable(24) %24, i64 %1087) #9
  %1088 = load i8, i8* %1084, align 1
  %1089 = icmp slt i8 %1088, 0
  br i1 %1089, label %1090, label %1093

1090:                                             ; preds = %1081
  %1091 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1092 = load i8*, i8** %1091, align 8
  call void @_ZdlPv(i8* %1092) #10
  br label %1093

1093:                                             ; preds = %1081, %1090
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1082) #9
  %1094 = load %struct.TermMatch*, %struct.TermMatch** %592, align 8
  %1095 = icmp eq %struct.TermMatch* %1094, null
  br i1 %1095, label %1099, label %1096

1096:                                             ; preds = %1093
  %1097 = ptrtoint %struct.TermMatch* %1094 to i64
  store i64 %1097, i64* %977, align 8
  %1098 = bitcast %struct.TermMatch* %1094 to i8*
  call void @_ZdlPv(i8* %1098) #10
  br label %1099

1099:                                             ; preds = %1093, %1096
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %591) #9
  %1100 = load %struct.TermMatch*, %struct.TermMatch** %140, align 8
  %1101 = icmp eq %struct.TermMatch* %1100, null
  br i1 %1101, label %1105, label %1102

1102:                                             ; preds = %1099
  %1103 = ptrtoint %struct.TermMatch* %1100 to i64
  store i64 %1103, i64* %524, align 8
  %1104 = bitcast %struct.TermMatch* %1100 to i8*
  call void @_ZdlPv(i8* %1104) #10
  br label %1105

1105:                                             ; preds = %1099, %1102
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %139) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN17AutocompleteMatchD1Ev(%struct.AutocompleteMatch*) unnamed_addr #4

declare %"class.history::URLDatabase"* @_ZN7history14HistoryService16InMemoryDatabaseEv(%"class.history::HistoryService"*) local_unnamed_addr #1

declare void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.7"* sret, i16*, i64) local_unnamed_addr #1

declare i64 @_ZN7history11URLDatabase12GetRowForURLERK4GURLPNS_6URLRowE(%"class.history::URLDatabase"*, %class.GURL* dereferenceable(120), %"class.history::URLRow"*) local_unnamed_addr #1

declare zeroext i1 @_ZN7history11URLDatabase11IsTypedHostERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPS7_(%"class.history::URLDatabase"*, %"class.std::__1::basic_string.7"* dereferenceable(24), %"class.std::__1::basic_string.7"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3net27registry_controlled_domains31HostHasRegistryControlledDomainEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_21UnknownRegistryFilterENS0_21PrivateRegistryFilterE(i8*, i64, i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN17AutocompleteMatchC1EP20AutocompleteProvideribN21AutocompleteMatchType4TypeE(%struct.AutocompleteMatch*, %class.AutocompleteProvider*, i32, i1 zeroext, i32) unnamed_addr #1

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare i64 @_ZN9URLPrefix27GetInlineAutocompleteOffsetERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_bS8_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN20AutocompleteProvider14FixupUserInputERK17AutocompleteInput(%"struct.std::__1::pair.488"* sret, %class.AutocompleteInput* dereferenceable(512)) local_unnamed_addr #1

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string.7"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #1

declare void @_ZN17AutocompleteInput36FormattedStringWithEquivalentMeaningERK4GURLRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEERK28AutocompleteSchemeClassifierPm(%"class.std::__1::basic_string"* sret, %class.GURL* dereferenceable(120), %"class.std::__1::basic_string"* dereferenceable(24), %class.AutocompleteSchemeClassifier*, i64*) local_unnamed_addr #1

declare void @_ZN13url_formatter9FormatUrlERK4GURLjjPN3url6ParsedEPmS6_(%"class.std::__1::basic_string"* sret, %class.GURL* dereferenceable(120), i32, i32, %"struct.url::Parsed"*, i64*, i64*) local_unnamed_addr #1

declare i32 @_ZN17AutocompleteMatch14GetFormatTypesEbb(i1 zeroext, i1 zeroext) local_unnamed_addr #1

declare void @_Z15FindTermMatchesNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES5_bb(%"class.std::__1::vector.474"* sret, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i1 zeroext, i1 zeroext) local_unnamed_addr #1

declare void @_Z19ClassifyTermMatchesNSt3__16vectorI9TermMatchNS_9allocatorIS1_EEEEmii(%"class.std::__1::vector.388"* sret, %"class.std::__1::vector.474"*, i64, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !42
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !42
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !45, !noalias !42
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !45, !noalias !42
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !42
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !42
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !45, !noalias !42
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !45, !noalias !42
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !42
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !42
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !45, !noalias !42
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !45, !noalias !42
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !42
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !42
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !45, !noalias !42
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !45, !noalias !42
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !47

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !42
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !42
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !45, !noalias !42
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !45, !noalias !42
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !48

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !49

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !50

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #11
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #11
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #10
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !51
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !51
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !54, !noalias !51
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !54, !noalias !51
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !51
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !51
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !54, !noalias !51
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !54, !noalias !51
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !51
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !51
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !54, !noalias !51
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !54, !noalias !51
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !51
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !51
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !54, !noalias !51
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !54, !noalias !51
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !56

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !51
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !51
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !54, !noalias !51
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !54, !noalias !51
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !57

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !58

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !59

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !60
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !60
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !63, !noalias !60
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !63, !noalias !60
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !60
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !60
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !63, !noalias !60
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !63, !noalias !60
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !60
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !60
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !63, !noalias !60
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !63, !noalias !60
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !60
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !60
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !63, !noalias !60
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !63, !noalias !60
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !65

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !60
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !60
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !63, !noalias !60
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !63, !noalias !60
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !66

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !67

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !68

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #9
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

declare zeroext i1 @_ZN17AutocompleteMatch21TryRichAutocompletionERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_RK17AutocompleteInputb(%struct.AutocompleteMatch*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %class.AutocompleteInput* dereferenceable(512), i1 zeroext) local_unnamed_addr #1

declare void @_ZN17AutocompleteMatch21SetAllowedToBeDefaultERK17AutocompleteInput(%struct.AutocompleteMatch*, %class.AutocompleteInput* dereferenceable(512)) local_unnamed_addr #1

declare void @_ZN17AutocompleteMatch20RecordAdditionalInfoERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEi(%struct.AutocompleteMatch*, %"class.std::__1::basic_string.7"* dereferenceable(24), i32) local_unnamed_addr #1

declare void @_ZN17AutocompleteMatch20RecordAdditionalInfoERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEN4base4TimeE(%struct.AutocompleteMatch*, %"class.std::__1::basic_string.7"* dereferenceable(24), i64) local_unnamed_addr #1

declare void @_ZN20AutocompleteProvider4StopEbb(%class.AutocompleteProvider*, i1 zeroext, i1 zeroext) unnamed_addr #1

declare void @_ZN15HistoryProvider11DeleteMatchERK17AutocompleteMatch(%class.HistoryProvider*, %struct.AutocompleteMatch* dereferenceable(1600)) unnamed_addr #1

declare void @_ZNK20AutocompleteProvider15AddProviderInfoEPNSt3__16vectorIN7metrics30OmniboxEventProto_ProviderInfoENS0_9allocatorIS3_EEEE(%class.AutocompleteProvider*, %"class.std::__1::vector.489"*) unnamed_addr #1

declare void @_ZN20AutocompleteProvider12ResetSessionEv(%class.AutocompleteProvider*) unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare dereferenceable(80) %"struct.url::Parsed"* @_ZN3url6ParsedaSERKS0_(%"struct.url::Parsed"*, %"struct.url::Parsed"* dereferenceable(80)) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string.7"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.7"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string.7"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.7"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.19"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %5 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.19"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.std::__1::basic_string"*
  br i1 %15, label %251, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %22
  %25 = select i1 %23, %"class.std::__1::basic_string"* %24, %"class.std::__1::basic_string"* %2
  %26 = icmp eq %"class.std::__1::basic_string"* %25, %1
  br i1 %26, label %34, label %27

27:                                               ; preds = %17, %27
  %28 = phi %"class.std::__1::basic_string"* [ %32, %27 ], [ %16, %17 ]
  %29 = phi %"class.std::__1::basic_string"* [ %31, %27 ], [ %1, %17 ]
  %30 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %28, %"class.std::__1::basic_string"* dereferenceable(24) %29) #9
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 1
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 1
  %33 = icmp eq %"class.std::__1::basic_string"* %31, %25
  br i1 %33, label %34, label %27

34:                                               ; preds = %27, %17
  %35 = phi %"class.std::__1::basic_string"* [ %16, %17 ], [ %32, %27 ]
  br i1 %23, label %36, label %235

36:                                               ; preds = %34
  %37 = load i64, i64* %19, align 8
  %38 = icmp eq %"class.std::__1::basic_string"* %25, %2
  br i1 %38, label %233, label %39

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to %"class.std::__1::basic_string"*
  br label %41

41:                                               ; preds = %227, %39
  %42 = phi %"class.std::__1::basic_string"* [ %229, %227 ], [ %40, %39 ]
  %43 = phi %"class.std::__1::basic_string"* [ %228, %227 ], [ %24, %39 ]
  %44 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %44, i64 0, i32 1, i32 1
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %41
  %49 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  %50 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false) #9
  br label %227

51:                                               ; preds = %41
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i16*, i16** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = icmp ult i64 %55, 11
  br i1 %56, label %57, label %62

57:                                               ; preds = %51
  %58 = bitcast %"class.std::__1::basic_string"* %42 to i16*
  %59 = trunc i64 %55 to i8
  %60 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %60, i64 0, i32 1, i32 1
  store i8 %59, i8* %61, align 1
  br label %79

62:                                               ; preds = %51
  %63 = icmp ugt i64 %55, 9223372036854775791
  br i1 %63, label %64, label %66

64:                                               ; preds = %62
  %65 = bitcast %"class.std::__1::basic_string"* %42 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %65) #11
  unreachable

66:                                               ; preds = %62
  %67 = add nuw nsw i64 %55, 8
  %68 = and i64 %67, -8
  %69 = icmp slt i64 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %66
  tail call void @abort() #11
  unreachable

71:                                               ; preds = %66
  %72 = shl i64 %68, 1
  %73 = tail call i8* @_Znwm(i64 %72) #10
  %74 = bitcast i8* %73 to i16*
  %75 = bitcast %"class.std::__1::basic_string"* %42 to i8**
  store i8* %73, i8** %75, align 8
  %76 = or i64 %68, -9223372036854775808
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %55, i64* %78, align 8
  br label %79

79:                                               ; preds = %71, %57
  %80 = phi i16* [ %58, %57 ], [ %74, %71 ]
  %81 = add nuw nsw i64 %55, 1
  %82 = add i64 %55, 1
  %83 = icmp ult i64 %82, 16
  br i1 %83, label %174, label %84

84:                                               ; preds = %79
  %85 = getelementptr i16, i16* %80, i64 1
  %86 = getelementptr i16, i16* %85, i64 %55
  %87 = getelementptr i16, i16* %53, i64 1
  %88 = getelementptr i16, i16* %87, i64 %55
  %89 = icmp ult i16* %80, %88
  %90 = icmp ult i16* %53, %86
  %91 = and i1 %89, %90
  br i1 %91, label %174, label %92

92:                                               ; preds = %84
  %93 = and i64 %82, -16
  %94 = sub i64 %81, %93
  %95 = getelementptr i16, i16* %53, i64 %93
  %96 = getelementptr i16, i16* %80, i64 %93
  %97 = add i64 %93, -16
  %98 = lshr exact i64 %97, 4
  %99 = add nuw nsw i64 %98, 1
  %100 = and i64 %99, 3
  %101 = icmp ult i64 %97, 48
  br i1 %101, label %153, label %102

102:                                              ; preds = %92
  %103 = sub nsw i64 %99, %100
  br label %104

104:                                              ; preds = %104, %102
  %105 = phi i64 [ 0, %102 ], [ %150, %104 ]
  %106 = phi i64 [ %103, %102 ], [ %151, %104 ]
  %107 = getelementptr i16, i16* %53, i64 %105
  %108 = getelementptr i16, i16* %80, i64 %105
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !69
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !69
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !72, !noalias !69
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !72, !noalias !69
  %117 = or i64 %105, 16
  %118 = getelementptr i16, i16* %53, i64 %117
  %119 = getelementptr i16, i16* %80, i64 %117
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !69
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !69
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !72, !noalias !69
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !72, !noalias !69
  %128 = or i64 %105, 32
  %129 = getelementptr i16, i16* %53, i64 %128
  %130 = getelementptr i16, i16* %80, i64 %128
  %131 = bitcast i16* %129 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !69
  %133 = getelementptr i16, i16* %129, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !69
  %136 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %136, align 2, !alias.scope !72, !noalias !69
  %137 = getelementptr i16, i16* %130, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %138, align 2, !alias.scope !72, !noalias !69
  %139 = or i64 %105, 48
  %140 = getelementptr i16, i16* %53, i64 %139
  %141 = getelementptr i16, i16* %80, i64 %139
  %142 = bitcast i16* %140 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !69
  %144 = getelementptr i16, i16* %140, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2, !alias.scope !69
  %147 = bitcast i16* %141 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %147, align 2, !alias.scope !72, !noalias !69
  %148 = getelementptr i16, i16* %141, i64 8
  %149 = bitcast i16* %148 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %149, align 2, !alias.scope !72, !noalias !69
  %150 = add i64 %105, 64
  %151 = add i64 %106, -4
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %104, !llvm.loop !74

153:                                              ; preds = %104, %92
  %154 = phi i64 [ 0, %92 ], [ %150, %104 ]
  %155 = icmp eq i64 %100, 0
  br i1 %155, label %172, label %156

156:                                              ; preds = %153, %156
  %157 = phi i64 [ %169, %156 ], [ %154, %153 ]
  %158 = phi i64 [ %170, %156 ], [ %100, %153 ]
  %159 = getelementptr i16, i16* %53, i64 %157
  %160 = getelementptr i16, i16* %80, i64 %157
  %161 = bitcast i16* %159 to <8 x i16>*
  %162 = load <8 x i16>, <8 x i16>* %161, align 2, !alias.scope !69
  %163 = getelementptr i16, i16* %159, i64 8
  %164 = bitcast i16* %163 to <8 x i16>*
  %165 = load <8 x i16>, <8 x i16>* %164, align 2, !alias.scope !69
  %166 = bitcast i16* %160 to <8 x i16>*
  store <8 x i16> %162, <8 x i16>* %166, align 2, !alias.scope !72, !noalias !69
  %167 = getelementptr i16, i16* %160, i64 8
  %168 = bitcast i16* %167 to <8 x i16>*
  store <8 x i16> %165, <8 x i16>* %168, align 2, !alias.scope !72, !noalias !69
  %169 = add i64 %157, 16
  %170 = add i64 %158, -1
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %156, !llvm.loop !75

172:                                              ; preds = %156, %153
  %173 = icmp eq i64 %82, %93
  br i1 %173, label %227, label %174

174:                                              ; preds = %172, %84, %79
  %175 = phi i64 [ %81, %84 ], [ %81, %79 ], [ %94, %172 ]
  %176 = phi i16* [ %53, %84 ], [ %53, %79 ], [ %95, %172 ]
  %177 = phi i16* [ %80, %84 ], [ %80, %79 ], [ %96, %172 ]
  %178 = add i64 %175, -1
  %179 = and i64 %175, 7
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %192, label %181

181:                                              ; preds = %174, %181
  %182 = phi i64 [ %187, %181 ], [ %175, %174 ]
  %183 = phi i16* [ %189, %181 ], [ %176, %174 ]
  %184 = phi i16* [ %188, %181 ], [ %177, %174 ]
  %185 = phi i64 [ %190, %181 ], [ %179, %174 ]
  %186 = load i16, i16* %183, align 2
  store i16 %186, i16* %184, align 2
  %187 = add i64 %182, -1
  %188 = getelementptr inbounds i16, i16* %184, i64 1
  %189 = getelementptr inbounds i16, i16* %183, i64 1
  %190 = add i64 %185, -1
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %181, !llvm.loop !76

192:                                              ; preds = %181, %174
  %193 = phi i64 [ %175, %174 ], [ %187, %181 ]
  %194 = phi i16* [ %176, %174 ], [ %189, %181 ]
  %195 = phi i16* [ %177, %174 ], [ %188, %181 ]
  %196 = icmp ult i64 %178, 7
  br i1 %196, label %227, label %197

197:                                              ; preds = %192, %197
  %198 = phi i64 [ %223, %197 ], [ %193, %192 ]
  %199 = phi i16* [ %225, %197 ], [ %194, %192 ]
  %200 = phi i16* [ %224, %197 ], [ %195, %192 ]
  %201 = load i16, i16* %199, align 2
  store i16 %201, i16* %200, align 2
  %202 = getelementptr inbounds i16, i16* %200, i64 1
  %203 = getelementptr inbounds i16, i16* %199, i64 1
  %204 = load i16, i16* %203, align 2
  store i16 %204, i16* %202, align 2
  %205 = getelementptr inbounds i16, i16* %200, i64 2
  %206 = getelementptr inbounds i16, i16* %199, i64 2
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 2
  %208 = getelementptr inbounds i16, i16* %200, i64 3
  %209 = getelementptr inbounds i16, i16* %199, i64 3
  %210 = load i16, i16* %209, align 2
  store i16 %210, i16* %208, align 2
  %211 = getelementptr inbounds i16, i16* %200, i64 4
  %212 = getelementptr inbounds i16, i16* %199, i64 4
  %213 = load i16, i16* %212, align 2
  store i16 %213, i16* %211, align 2
  %214 = getelementptr inbounds i16, i16* %200, i64 5
  %215 = getelementptr inbounds i16, i16* %199, i64 5
  %216 = load i16, i16* %215, align 2
  store i16 %216, i16* %214, align 2
  %217 = getelementptr inbounds i16, i16* %200, i64 6
  %218 = getelementptr inbounds i16, i16* %199, i64 6
  %219 = load i16, i16* %218, align 2
  store i16 %219, i16* %217, align 2
  %220 = getelementptr inbounds i16, i16* %200, i64 7
  %221 = getelementptr inbounds i16, i16* %199, i64 7
  %222 = load i16, i16* %221, align 2
  store i16 %222, i16* %220, align 2
  %223 = add i64 %198, -8
  %224 = getelementptr inbounds i16, i16* %200, i64 8
  %225 = getelementptr inbounds i16, i16* %199, i64 8
  %226 = icmp eq i64 %223, 0
  br i1 %226, label %227, label %197, !llvm.loop !77

227:                                              ; preds = %192, %197, %172, %48
  %228 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 1
  %229 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 1
  %230 = icmp eq %"class.std::__1::basic_string"* %228, %2
  br i1 %230, label %231, label %41

231:                                              ; preds = %227
  %232 = ptrtoint %"class.std::__1::basic_string"* %229 to i64
  br label %233

233:                                              ; preds = %36, %231
  %234 = phi i64 [ %37, %36 ], [ %232, %231 ]
  store i64 %234, i64* %19, align 8
  br label %494

235:                                              ; preds = %34
  %236 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %237 = icmp eq %"class.std::__1::basic_string"* %236, %35
  br i1 %237, label %250, label %238

238:                                              ; preds = %235, %248
  %239 = phi %"class.std::__1::basic_string"* [ %240, %248 ], [ %236, %235 ]
  %240 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %239, i64 -1
  %241 = bitcast %"class.std::__1::basic_string"* %240 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %242 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %241, i64 0, i32 1, i32 1
  %243 = load i8, i8* %242, align 1
  %244 = icmp slt i8 %243, 0
  br i1 %244, label %245, label %248

245:                                              ; preds = %238
  %246 = bitcast %"class.std::__1::basic_string"* %240 to i8**
  %247 = load i8*, i8** %246, align 8
  tail call void @_ZdlPv(i8* %247) #10
  br label %248

248:                                              ; preds = %245, %238
  %249 = icmp eq %"class.std::__1::basic_string"* %240, %35
  br i1 %249, label %250, label %238

250:                                              ; preds = %248, %235
  store %"class.std::__1::basic_string"* %35, %"class.std::__1::basic_string"** %18, align 8
  br label %494

251:                                              ; preds = %3
  %252 = icmp eq i64 %12, 0
  br i1 %252, label %276, label %253

253:                                              ; preds = %251
  %254 = inttoptr i64 %12 to i8*
  %255 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 1
  %256 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %255, align 8
  %257 = icmp eq %"class.std::__1::basic_string"* %256, %16
  br i1 %257, label %273, label %258

258:                                              ; preds = %253, %268
  %259 = phi %"class.std::__1::basic_string"* [ %260, %268 ], [ %256, %253 ]
  %260 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %259, i64 -1
  %261 = bitcast %"class.std::__1::basic_string"* %260 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %262 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %261, i64 0, i32 1, i32 1
  %263 = load i8, i8* %262, align 1
  %264 = icmp slt i8 %263, 0
  br i1 %264, label %265, label %268

265:                                              ; preds = %258
  %266 = bitcast %"class.std::__1::basic_string"* %260 to i8**
  %267 = load i8*, i8** %266, align 8
  tail call void @_ZdlPv(i8* %267) #10
  br label %268

268:                                              ; preds = %265, %258
  %269 = icmp eq %"class.std::__1::basic_string"* %260, %16
  br i1 %269, label %270, label %258

270:                                              ; preds = %268
  %271 = bitcast %"class.std::__1::vector.19"* %0 to i8**
  %272 = load i8*, i8** %271, align 8
  br label %273

273:                                              ; preds = %270, %253
  %274 = phi i8* [ %272, %270 ], [ %254, %253 ]
  store %"class.std::__1::basic_string"* %16, %"class.std::__1::basic_string"** %255, align 8
  tail call void @_ZdlPv(i8* %274) #10
  %275 = bitcast %"class.std::__1::vector.19"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %275, i8 0, i64 24, i1 false) #9
  br label %276

276:                                              ; preds = %251, %273
  %277 = phi i64 [ %10, %251 ], [ 0, %273 ]
  %278 = icmp ugt i64 %7, 768614336404564650
  br i1 %278, label %279, label %281

279:                                              ; preds = %276
  %280 = bitcast %"class.std::__1::vector.19"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %280) #11
  unreachable

281:                                              ; preds = %276
  %282 = sdiv exact i64 %277, 24
  %283 = icmp ult i64 %282, 384307168202282325
  br i1 %283, label %284, label %288

284:                                              ; preds = %281
  %285 = shl nsw i64 %282, 1
  %286 = icmp ult i64 %285, %7
  %287 = select i1 %286, i64 %7, i64 %285
  br label %288

288:                                              ; preds = %284, %281
  %289 = phi i64 [ %287, %284 ], [ 768614336404564650, %281 ]
  %290 = mul i64 %289, 24
  %291 = tail call i8* @_Znwm(i64 %290) #10
  %292 = bitcast i8* %291 to %"class.std::__1::basic_string"*
  %293 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 1
  %294 = bitcast %"class.std::__1::basic_string"** %293 to i8**
  store i8* %291, i8** %294, align 8
  %295 = bitcast %"class.std::__1::vector.19"* %0 to i8**
  store i8* %291, i8** %295, align 8
  %296 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %292, i64 %289
  store %"class.std::__1::basic_string"* %296, %"class.std::__1::basic_string"** %8, align 8
  %297 = bitcast %"class.std::__1::basic_string"** %293 to i64*
  %298 = ptrtoint i8* %291 to i64
  %299 = icmp eq %"class.std::__1::basic_string"* %1, %2
  br i1 %299, label %492, label %300

300:                                              ; preds = %288, %486
  %301 = phi %"class.std::__1::basic_string"* [ %488, %486 ], [ %292, %288 ]
  %302 = phi %"class.std::__1::basic_string"* [ %487, %486 ], [ %1, %288 ]
  %303 = bitcast %"class.std::__1::basic_string"* %302 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %304 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %303, i64 0, i32 1, i32 1
  %305 = load i8, i8* %304, align 1
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %310, label %307

307:                                              ; preds = %300
  %308 = bitcast %"class.std::__1::basic_string"* %301 to i8*
  %309 = bitcast %"class.std::__1::basic_string"* %302 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %308, i8* align 8 %309, i64 24, i1 false) #9
  br label %486

310:                                              ; preds = %300
  %311 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %302, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load i16*, i16** %311, align 8
  %313 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %302, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %314 = load i64, i64* %313, align 8
  %315 = icmp ult i64 %314, 11
  br i1 %315, label %316, label %321

316:                                              ; preds = %310
  %317 = bitcast %"class.std::__1::basic_string"* %301 to i16*
  %318 = trunc i64 %314 to i8
  %319 = bitcast %"class.std::__1::basic_string"* %301 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %320 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %319, i64 0, i32 1, i32 1
  store i8 %318, i8* %320, align 1
  br label %338

321:                                              ; preds = %310
  %322 = icmp ugt i64 %314, 9223372036854775791
  br i1 %322, label %323, label %325

323:                                              ; preds = %321
  %324 = bitcast %"class.std::__1::basic_string"* %301 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %324) #11
  unreachable

325:                                              ; preds = %321
  %326 = add nuw nsw i64 %314, 8
  %327 = and i64 %326, -8
  %328 = icmp slt i64 %327, 0
  br i1 %328, label %329, label %330

329:                                              ; preds = %325
  tail call void @abort() #11
  unreachable

330:                                              ; preds = %325
  %331 = shl i64 %327, 1
  %332 = tail call i8* @_Znwm(i64 %331) #10
  %333 = bitcast i8* %332 to i16*
  %334 = bitcast %"class.std::__1::basic_string"* %301 to i8**
  store i8* %332, i8** %334, align 8
  %335 = or i64 %327, -9223372036854775808
  %336 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %335, i64* %336, align 8
  %337 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %314, i64* %337, align 8
  br label %338

338:                                              ; preds = %330, %316
  %339 = phi i16* [ %317, %316 ], [ %333, %330 ]
  %340 = add nuw nsw i64 %314, 1
  %341 = add i64 %314, 1
  %342 = icmp ult i64 %341, 16
  br i1 %342, label %433, label %343

343:                                              ; preds = %338
  %344 = getelementptr i16, i16* %339, i64 1
  %345 = getelementptr i16, i16* %344, i64 %314
  %346 = getelementptr i16, i16* %312, i64 1
  %347 = getelementptr i16, i16* %346, i64 %314
  %348 = icmp ult i16* %339, %347
  %349 = icmp ult i16* %312, %345
  %350 = and i1 %348, %349
  br i1 %350, label %433, label %351

351:                                              ; preds = %343
  %352 = and i64 %341, -16
  %353 = sub i64 %340, %352
  %354 = getelementptr i16, i16* %312, i64 %352
  %355 = getelementptr i16, i16* %339, i64 %352
  %356 = add i64 %352, -16
  %357 = lshr exact i64 %356, 4
  %358 = add nuw nsw i64 %357, 1
  %359 = and i64 %358, 3
  %360 = icmp ult i64 %356, 48
  br i1 %360, label %412, label %361

361:                                              ; preds = %351
  %362 = sub nsw i64 %358, %359
  br label %363

363:                                              ; preds = %363, %361
  %364 = phi i64 [ 0, %361 ], [ %409, %363 ]
  %365 = phi i64 [ %362, %361 ], [ %410, %363 ]
  %366 = getelementptr i16, i16* %312, i64 %364
  %367 = getelementptr i16, i16* %339, i64 %364
  %368 = bitcast i16* %366 to <8 x i16>*
  %369 = load <8 x i16>, <8 x i16>* %368, align 2, !alias.scope !78
  %370 = getelementptr i16, i16* %366, i64 8
  %371 = bitcast i16* %370 to <8 x i16>*
  %372 = load <8 x i16>, <8 x i16>* %371, align 2, !alias.scope !78
  %373 = bitcast i16* %367 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %373, align 2, !alias.scope !81, !noalias !78
  %374 = getelementptr i16, i16* %367, i64 8
  %375 = bitcast i16* %374 to <8 x i16>*
  store <8 x i16> %372, <8 x i16>* %375, align 2, !alias.scope !81, !noalias !78
  %376 = or i64 %364, 16
  %377 = getelementptr i16, i16* %312, i64 %376
  %378 = getelementptr i16, i16* %339, i64 %376
  %379 = bitcast i16* %377 to <8 x i16>*
  %380 = load <8 x i16>, <8 x i16>* %379, align 2, !alias.scope !78
  %381 = getelementptr i16, i16* %377, i64 8
  %382 = bitcast i16* %381 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !78
  %384 = bitcast i16* %378 to <8 x i16>*
  store <8 x i16> %380, <8 x i16>* %384, align 2, !alias.scope !81, !noalias !78
  %385 = getelementptr i16, i16* %378, i64 8
  %386 = bitcast i16* %385 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %386, align 2, !alias.scope !81, !noalias !78
  %387 = or i64 %364, 32
  %388 = getelementptr i16, i16* %312, i64 %387
  %389 = getelementptr i16, i16* %339, i64 %387
  %390 = bitcast i16* %388 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !78
  %392 = getelementptr i16, i16* %388, i64 8
  %393 = bitcast i16* %392 to <8 x i16>*
  %394 = load <8 x i16>, <8 x i16>* %393, align 2, !alias.scope !78
  %395 = bitcast i16* %389 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %395, align 2, !alias.scope !81, !noalias !78
  %396 = getelementptr i16, i16* %389, i64 8
  %397 = bitcast i16* %396 to <8 x i16>*
  store <8 x i16> %394, <8 x i16>* %397, align 2, !alias.scope !81, !noalias !78
  %398 = or i64 %364, 48
  %399 = getelementptr i16, i16* %312, i64 %398
  %400 = getelementptr i16, i16* %339, i64 %398
  %401 = bitcast i16* %399 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !78
  %403 = getelementptr i16, i16* %399, i64 8
  %404 = bitcast i16* %403 to <8 x i16>*
  %405 = load <8 x i16>, <8 x i16>* %404, align 2, !alias.scope !78
  %406 = bitcast i16* %400 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %406, align 2, !alias.scope !81, !noalias !78
  %407 = getelementptr i16, i16* %400, i64 8
  %408 = bitcast i16* %407 to <8 x i16>*
  store <8 x i16> %405, <8 x i16>* %408, align 2, !alias.scope !81, !noalias !78
  %409 = add i64 %364, 64
  %410 = add i64 %365, -4
  %411 = icmp eq i64 %410, 0
  br i1 %411, label %412, label %363, !llvm.loop !83

412:                                              ; preds = %363, %351
  %413 = phi i64 [ 0, %351 ], [ %409, %363 ]
  %414 = icmp eq i64 %359, 0
  br i1 %414, label %431, label %415

415:                                              ; preds = %412, %415
  %416 = phi i64 [ %428, %415 ], [ %413, %412 ]
  %417 = phi i64 [ %429, %415 ], [ %359, %412 ]
  %418 = getelementptr i16, i16* %312, i64 %416
  %419 = getelementptr i16, i16* %339, i64 %416
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !78
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !78
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !81, !noalias !78
  %426 = getelementptr i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !81, !noalias !78
  %428 = add i64 %416, 16
  %429 = add i64 %417, -1
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %415, !llvm.loop !84

431:                                              ; preds = %415, %412
  %432 = icmp eq i64 %341, %352
  br i1 %432, label %486, label %433

433:                                              ; preds = %431, %343, %338
  %434 = phi i64 [ %340, %343 ], [ %340, %338 ], [ %353, %431 ]
  %435 = phi i16* [ %312, %343 ], [ %312, %338 ], [ %354, %431 ]
  %436 = phi i16* [ %339, %343 ], [ %339, %338 ], [ %355, %431 ]
  %437 = add i64 %434, -1
  %438 = and i64 %434, 7
  %439 = icmp eq i64 %438, 0
  br i1 %439, label %451, label %440

440:                                              ; preds = %433, %440
  %441 = phi i64 [ %446, %440 ], [ %434, %433 ]
  %442 = phi i16* [ %448, %440 ], [ %435, %433 ]
  %443 = phi i16* [ %447, %440 ], [ %436, %433 ]
  %444 = phi i64 [ %449, %440 ], [ %438, %433 ]
  %445 = load i16, i16* %442, align 2
  store i16 %445, i16* %443, align 2
  %446 = add i64 %441, -1
  %447 = getelementptr inbounds i16, i16* %443, i64 1
  %448 = getelementptr inbounds i16, i16* %442, i64 1
  %449 = add i64 %444, -1
  %450 = icmp eq i64 %449, 0
  br i1 %450, label %451, label %440, !llvm.loop !85

451:                                              ; preds = %440, %433
  %452 = phi i64 [ %434, %433 ], [ %446, %440 ]
  %453 = phi i16* [ %435, %433 ], [ %448, %440 ]
  %454 = phi i16* [ %436, %433 ], [ %447, %440 ]
  %455 = icmp ult i64 %437, 7
  br i1 %455, label %486, label %456

456:                                              ; preds = %451, %456
  %457 = phi i64 [ %482, %456 ], [ %452, %451 ]
  %458 = phi i16* [ %484, %456 ], [ %453, %451 ]
  %459 = phi i16* [ %483, %456 ], [ %454, %451 ]
  %460 = load i16, i16* %458, align 2
  store i16 %460, i16* %459, align 2
  %461 = getelementptr inbounds i16, i16* %459, i64 1
  %462 = getelementptr inbounds i16, i16* %458, i64 1
  %463 = load i16, i16* %462, align 2
  store i16 %463, i16* %461, align 2
  %464 = getelementptr inbounds i16, i16* %459, i64 2
  %465 = getelementptr inbounds i16, i16* %458, i64 2
  %466 = load i16, i16* %465, align 2
  store i16 %466, i16* %464, align 2
  %467 = getelementptr inbounds i16, i16* %459, i64 3
  %468 = getelementptr inbounds i16, i16* %458, i64 3
  %469 = load i16, i16* %468, align 2
  store i16 %469, i16* %467, align 2
  %470 = getelementptr inbounds i16, i16* %459, i64 4
  %471 = getelementptr inbounds i16, i16* %458, i64 4
  %472 = load i16, i16* %471, align 2
  store i16 %472, i16* %470, align 2
  %473 = getelementptr inbounds i16, i16* %459, i64 5
  %474 = getelementptr inbounds i16, i16* %458, i64 5
  %475 = load i16, i16* %474, align 2
  store i16 %475, i16* %473, align 2
  %476 = getelementptr inbounds i16, i16* %459, i64 6
  %477 = getelementptr inbounds i16, i16* %458, i64 6
  %478 = load i16, i16* %477, align 2
  store i16 %478, i16* %476, align 2
  %479 = getelementptr inbounds i16, i16* %459, i64 7
  %480 = getelementptr inbounds i16, i16* %458, i64 7
  %481 = load i16, i16* %480, align 2
  store i16 %481, i16* %479, align 2
  %482 = add i64 %457, -8
  %483 = getelementptr inbounds i16, i16* %459, i64 8
  %484 = getelementptr inbounds i16, i16* %458, i64 8
  %485 = icmp eq i64 %482, 0
  br i1 %485, label %486, label %456, !llvm.loop !86

486:                                              ; preds = %451, %456, %431, %307
  %487 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %302, i64 1
  %488 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %301, i64 1
  %489 = icmp eq %"class.std::__1::basic_string"* %487, %2
  br i1 %489, label %490, label %300

490:                                              ; preds = %486
  %491 = ptrtoint %"class.std::__1::basic_string"* %488 to i64
  br label %492

492:                                              ; preds = %288, %490
  %493 = phi i64 [ %298, %288 ], [ %491, %490 ]
  store i64 %493, i64* %297, align 8
  br label %494

494:                                              ; preds = %233, %250, %492
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.7"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #11
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #11
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #10
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !87
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !87
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !90, !noalias !87
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !90, !noalias !87
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !87
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !87
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !90, !noalias !87
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !90, !noalias !87
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !87
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !87
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !90, !noalias !87
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !90, !noalias !87
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !87
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !87
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !90, !noalias !87
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !90, !noalias !87
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !92

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !87
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !87
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !90, !noalias !87
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !90, !noalias !87
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !93

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !94

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !95

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !96

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !97

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !98

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !100
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !100
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !103, !noalias !100
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !103, !noalias !100
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !100
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !100
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !103, !noalias !100
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !103, !noalias !100
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !100
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !100
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !103, !noalias !100
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !103, !noalias !100
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !100
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !100
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !103, !noalias !100
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !103, !noalias !100
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !105

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !100
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !100
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !103, !noalias !100
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !103, !noalias !100
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !106

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !107

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !108

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #10
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

declare i64 @_ZNK17AutocompleteInput19EstimateMemoryUsageEv(%class.AutocompleteInput*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI17AutocompleteMatchNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector"*, %struct.AutocompleteMatch* dereferenceable(1600)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %struct.AutocompleteMatch** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 1600
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 11529215046068469
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %struct.AutocompleteMatch** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 1600
  %20 = icmp ult i64 %19, 5764607523034234
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 11529215046068469, %14 ]
  %28 = mul i64 %27, 1600
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %struct.AutocompleteMatch*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %struct.AutocompleteMatch* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %33, i64 %9
  %35 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %33, i64 %32
  %36 = ptrtoint %struct.AutocompleteMatch* %35 to i64
  tail call void @_ZN17AutocompleteMatchC1EOS_(%struct.AutocompleteMatch* %34, %struct.AutocompleteMatch* dereferenceable(1600) %1) #9
  %37 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %34, i64 1
  %38 = ptrtoint %struct.AutocompleteMatch* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %40 = load %struct.AutocompleteMatch*, %struct.AutocompleteMatch** %39, align 8
  %41 = load %struct.AutocompleteMatch*, %struct.AutocompleteMatch** %3, align 8
  %42 = icmp eq %struct.AutocompleteMatch* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %struct.AutocompleteMatch* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %struct.AutocompleteMatch* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %struct.AutocompleteMatch* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %46, i64 -1
  %49 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %47, i64 -1
  tail call void @_ZN17AutocompleteMatchC1EOS_(%struct.AutocompleteMatch* %48, %struct.AutocompleteMatch* dereferenceable(1600) %49) #9
  %50 = icmp eq %struct.AutocompleteMatch* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %struct.AutocompleteMatch*, %struct.AutocompleteMatch** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %struct.AutocompleteMatch* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %struct.AutocompleteMatch* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %struct.AutocompleteMatch* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %struct.AutocompleteMatch*
  %60 = icmp eq %struct.AutocompleteMatch* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %struct.AutocompleteMatch* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %62, i64 -1
  tail call void @_ZN17AutocompleteMatchD1Ev(%struct.AutocompleteMatch* %63) #9
  %64 = icmp eq %struct.AutocompleteMatch* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #10
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

; Function Attrs: nounwind
declare void @_ZN17AutocompleteMatchC1EOS_(%struct.AutocompleteMatch*, %struct.AutocompleteMatch* dereferenceable(1600)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator.5"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = icmp ult i64 %13, %2
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %16) #11
  unreachable

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %21 = select i1 %9, i16* %19, i16* %20
  %22 = getelementptr inbounds i16, i16* %21, i64 %2
  %23 = sub i64 %13, %2
  %24 = icmp ult i64 %23, %3
  %25 = select i1 %24, i64 %23, i64 %3
  %26 = icmp ugt i64 %25, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %17
  %28 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #11
  unreachable

29:                                               ; preds = %17
  %30 = icmp ult i64 %25, 11
  br i1 %30, label %44, label %31

31:                                               ; preds = %29
  %32 = add nuw nsw i64 %25, 8
  %33 = and i64 %32, -8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @abort() #11
  unreachable

36:                                               ; preds = %31
  %37 = shl i64 %33, 1
  %38 = tail call i8* @_Znwm(i64 %37) #10
  %39 = bitcast i8* %38 to i16*
  %40 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %38, i8** %40, align 8
  %41 = or i64 %33, -9223372036854775808
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %43, align 8
  br label %50

44:                                               ; preds = %29
  %45 = trunc i64 %25 to i8
  %46 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  store i8 %45, i8* %47, align 1
  %48 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %49 = icmp eq i64 %25, 0
  br i1 %49, label %195, label %50

50:                                               ; preds = %44, %36
  %51 = phi i16* [ %39, %36 ], [ %48, %44 ]
  %52 = icmp ult i64 %25, 16
  br i1 %52, label %142, label %53

53:                                               ; preds = %50
  %54 = getelementptr i16, i16* %51, i64 %25
  %55 = add i64 %25, %2
  %56 = getelementptr i16, i16* %21, i64 %55
  %57 = icmp ult i16* %51, %56
  %58 = icmp ult i16* %22, %54
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %53
  %61 = and i64 %25, -16
  %62 = sub i64 %25, %61
  %63 = getelementptr i16, i16* %22, i64 %61
  %64 = getelementptr i16, i16* %51, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %22, i64 %73
  %76 = getelementptr i16, i16* %51, i64 %73
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !109
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !109
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !112, !noalias !109
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !112, !noalias !109
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %22, i64 %85
  %87 = getelementptr i16, i16* %51, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !109
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !109
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !112, !noalias !109
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !112, !noalias !109
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %22, i64 %96
  %98 = getelementptr i16, i16* %51, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !109
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !109
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !112, !noalias !109
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !112, !noalias !109
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %22, i64 %107
  %109 = getelementptr i16, i16* %51, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !109
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !109
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !112, !noalias !109
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !112, !noalias !109
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !114

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %22, i64 %125
  %128 = getelementptr i16, i16* %51, i64 %125
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !109
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !109
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !112, !noalias !109
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !112, !noalias !109
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !115

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %25, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %53, %50
  %143 = phi i64 [ %25, %53 ], [ %25, %50 ], [ %62, %140 ]
  %144 = phi i16* [ %22, %53 ], [ %22, %50 ], [ %63, %140 ]
  %145 = phi i16* [ %51, %53 ], [ %51, %50 ], [ %64, %140 ]
  %146 = add i64 %143, -1
  %147 = and i64 %143, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i64 [ %155, %149 ], [ %143, %142 ]
  %151 = phi i16* [ %157, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %156, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %151, align 2
  store i16 %154, i16* %152, align 2
  %155 = add i64 %150, -1
  %156 = getelementptr inbounds i16, i16* %152, i64 1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !116

160:                                              ; preds = %149, %142
  %161 = phi i64 [ %143, %142 ], [ %155, %149 ]
  %162 = phi i16* [ %144, %142 ], [ %157, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %156, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i64 [ %191, %165 ], [ %161, %160 ]
  %167 = phi i16* [ %193, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %192, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %167, align 2
  store i16 %169, i16* %168, align 2
  %170 = getelementptr inbounds i16, i16* %168, i64 1
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %168, i64 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %168, i64 3
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %168, i64 4
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %168, i64 5
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %168, i64 6
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %168, i64 7
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %166, -8
  %192 = getelementptr inbounds i16, i16* %168, i64 8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !117

195:                                              ; preds = %160, %165, %140, %44
  %196 = phi i16* [ %48, %44 ], [ %51, %140 ], [ %51, %165 ], [ %51, %160 ]
  %197 = getelementptr inbounds i16, i16* %196, i64 %25
  store i16 0, i16* %197, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6}
!6 = distinct !{!6, !"LVerDomain"}
!7 = !{!8}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
!13 = distinct !{!13, !12}
!14 = distinct !{!14, !10}
!15 = !{!16}
!16 = distinct !{!16, !17}
!17 = distinct !{!17, !"LVerDomain"}
!18 = !{!19}
!19 = distinct !{!19, !17}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !12}
!22 = distinct !{!22, !12}
!23 = distinct !{!23, !10}
!24 = !{!25}
!25 = distinct !{!25, !26}
!26 = distinct !{!26, !"LVerDomain"}
!27 = !{!28}
!28 = distinct !{!28, !26}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !12}
!31 = distinct !{!31, !12}
!32 = distinct !{!32, !10}
!33 = !{!34}
!34 = distinct !{!34, !35}
!35 = distinct !{!35, !"LVerDomain"}
!36 = !{!37}
!37 = distinct !{!37, !35}
!38 = distinct !{!38, !10}
!39 = distinct !{!39, !12}
!40 = distinct !{!40, !12}
!41 = distinct !{!41, !10}
!42 = !{!43}
!43 = distinct !{!43, !44}
!44 = distinct !{!44, !"LVerDomain"}
!45 = !{!46}
!46 = distinct !{!46, !44}
!47 = distinct !{!47, !10}
!48 = distinct !{!48, !12}
!49 = distinct !{!49, !12}
!50 = distinct !{!50, !10}
!51 = !{!52}
!52 = distinct !{!52, !53}
!53 = distinct !{!53, !"LVerDomain"}
!54 = !{!55}
!55 = distinct !{!55, !53}
!56 = distinct !{!56, !10}
!57 = distinct !{!57, !12}
!58 = distinct !{!58, !12}
!59 = distinct !{!59, !10}
!60 = !{!61}
!61 = distinct !{!61, !62}
!62 = distinct !{!62, !"LVerDomain"}
!63 = !{!64}
!64 = distinct !{!64, !62}
!65 = distinct !{!65, !10}
!66 = distinct !{!66, !12}
!67 = distinct !{!67, !12}
!68 = distinct !{!68, !10}
!69 = !{!70}
!70 = distinct !{!70, !71}
!71 = distinct !{!71, !"LVerDomain"}
!72 = !{!73}
!73 = distinct !{!73, !71}
!74 = distinct !{!74, !10}
!75 = distinct !{!75, !12}
!76 = distinct !{!76, !12}
!77 = distinct !{!77, !10}
!78 = !{!79}
!79 = distinct !{!79, !80}
!80 = distinct !{!80, !"LVerDomain"}
!81 = !{!82}
!82 = distinct !{!82, !80}
!83 = distinct !{!83, !10}
!84 = distinct !{!84, !12}
!85 = distinct !{!85, !12}
!86 = distinct !{!86, !10}
!87 = !{!88}
!88 = distinct !{!88, !89}
!89 = distinct !{!89, !"LVerDomain"}
!90 = !{!91}
!91 = distinct !{!91, !89}
!92 = distinct !{!92, !10}
!93 = distinct !{!93, !12}
!94 = distinct !{!94, !12}
!95 = distinct !{!95, !10}
!96 = distinct !{!96, !10}
!97 = distinct !{!97, !12}
!98 = distinct !{!98, !99, !10}
!99 = !{!"llvm.loop.unroll.runtime.disable"}
!100 = !{!101}
!101 = distinct !{!101, !102}
!102 = distinct !{!102, !"LVerDomain"}
!103 = !{!104}
!104 = distinct !{!104, !102}
!105 = distinct !{!105, !10}
!106 = distinct !{!106, !12}
!107 = distinct !{!107, !12}
!108 = distinct !{!108, !10}
!109 = !{!110}
!110 = distinct !{!110, !111}
!111 = distinct !{!111, !"LVerDomain"}
!112 = !{!113}
!113 = distinct !{!113, !111}
!114 = distinct !{!114, !10}
!115 = distinct !{!115, !12}
!116 = distinct !{!116, !12}
!117 = distinct !{!117, !10}
