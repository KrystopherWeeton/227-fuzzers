; ModuleID = '../../cc/paint/paint_op_writer.cc'
source_filename = "../../cc/paint/paint_op_writer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.sk_sp.95 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.5, i32, i32 }
%class.sk_sp.5 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.6, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.6 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.7" }
%"struct.std::__1::atomic.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%union.anon.100 = type { i32 }
%class.sk_sp.73 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%struct.SkSize = type { float, float }
%class.sk_sp.13 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.101 }
%class.scoped_refptr.101 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.15 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.16 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp.12 = type { %class.SkImage* }
%class.scoped_refptr = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%union.anon.87 = type { i64 }
%union.anon.92 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.cc::PaintOpWriter" = type <{ i8*, i64, i64, %"struct.cc::PaintOp::SerializeOptions"*, i8, i8, [6 x i8] }>
%"struct.cc::PaintOp::SerializeOptions" = type <{ %"class.cc::ImageProvider"*, %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::ClientPaintCache"*, %class.SkStrikeServer*, %class.sk_sp.5, i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"class.cc::ImageProvider" = type { i32 (...)** }
%"class.cc::TransferCacheSerializeHelper" = type { i32 (...)**, %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { i64 }
%"class.cc::ClientPaintCache" = type { %"class.base::MRUCache", i64, i64, %"class.base::StackVector" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.23" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.27" }
%"class.std::__1::__tree.27" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source", %"class.base::StackAllocator", %"class.std::__1::vector" }
%"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source" = type { [8 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.38" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39", %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.base::StackAllocator" }
%class.SkStrikeServer = type { %"class.std::__1::unique_ptr.41" }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.SkStrikeServerImpl* }
%class.SkStrikeServerImpl = type opaque
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.SkSerialProcs = type { void (%class.sk_sp*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp*, %class.SkTypeface*, i8*)*, i8* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.1", [7 x i8] }>
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl.3" }
%"struct.std::__1::__cxx_atomic_impl.3" = type { %"struct.std::__1::__cxx_atomic_base_impl.4" }
%"struct.std::__1::__cxx_atomic_base_impl.4" = type { i8 }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.12, %class.sk_sp.13, %"class.gfx::Rect", i32, %class.sk_sp.15, %class.sk_sp.16, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.12, %class.scoped_refptr }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%class.SkPath = type <{ %class.sk_sp.45, i32, %"struct.std::__1::atomic.7", %"struct.std::__1::atomic.7", i8, i8 }>
%class.sk_sp.45 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.46, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.47, %class.SkTDArray.48, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.46 = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.47 = type { i8*, i32, i32 }
%class.SkTDArray.48 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.49 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.49 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.1", [3 x i8] }
%"class.cc::PaintFlags" = type <{ %class.sk_sp.50, %class.sk_sp.51, %class.sk_sp.72, %class.sk_sp.73, %class.sk_sp.74, %class.sk_sp.75, i32, float, float, i32, %union.anon.82, [4 x i8] }>
%class.sk_sp.50 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.51 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.13, i32, %"class.absl::optional.52", %"class.std::__1::vector.57", %"class.std::__1::vector.64", %class.sk_sp.71, %class.sk_sp.12, i32, [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.absl::optional.52" = type { %"class.absl::optional_internal::optional_data.53" }
%"class.absl::optional_internal::optional_data.53" = type { %"class.absl::optional_internal::optional_data_base.54" }
%"class.absl::optional_internal::optional_data_base.54" = type { %"class.absl::optional_internal::optional_data_dtor_base.55" }
%"class.absl::optional_internal::optional_data_dtor_base.55" = type { i8, %union.anon.56 }
%union.anon.56 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { i32*, i32*, %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { i32* }
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { float*, float*, %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { float* }
%class.sk_sp.71 = type { %class.SkPicture* }
%class.sk_sp.72 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.74 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.75 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.76, i32, %"class.absl::optional.77", i8, i32 }
%class.sk_sp.76 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.absl::optional.77" = type { %"class.absl::optional_internal::optional_data.78" }
%"class.absl::optional_internal::optional_data.78" = type { %"class.absl::optional_internal::optional_data_base.79" }
%"class.absl::optional_internal::optional_data_base.79" = type { %"class.absl::optional_internal::optional_data_dtor_base.80" }
%"class.absl::optional_internal::optional_data_dtor_base.80" = type { i8, %union.anon.81 }
%union.anon.81 = type { %struct.SkRect }
%union.anon.82 = type { i32 }
%class.SkM44 = type { [16 x float] }
%"class.cc::ColorFilterPaintFilter" = type { %"class.cc::PaintFilter", %class.sk_sp.73, %class.sk_sp.75 }
%"class.cc::BlurPaintFilter" = type { %"class.cc::PaintFilter", float, float, i32, %class.sk_sp.75 }
%"class.cc::DropShadowPaintFilter" = type { %"class.cc::PaintFilter", float, float, float, float, i32, i32, %class.sk_sp.75 }
%"class.cc::AlphaThresholdPaintFilter" = type { %"class.cc::PaintFilter", %class.SkRegion, float, float, %class.sk_sp.75 }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%"class.cc::ArithmeticPaintFilter" = type { %"class.cc::PaintFilter", float, float, float, float, i8, %class.sk_sp.75, %class.sk_sp.75 }
%"class.cc::MatrixConvolutionPaintFilter" = type { %"class.cc::PaintFilter", %struct.SkISize, %"class.base::StackVector.135", float, float, %struct.SkIPoint, i32, i8, %class.sk_sp.75 }
%"class.base::StackVector.135" = type { %"class.base::StackContainer.136" }
%"class.base::StackContainer.136" = type { %"struct.base::StackAllocator<float, 3>::Source", %"class.base::StackAllocator.137", %"class.std::__1::vector.138" }
%"struct.base::StackAllocator<float, 3>::Source" = type { [12 x i8], i8, [3 x i8] }
%"class.base::StackAllocator.137" = type { %"struct.base::StackAllocator<float, 3>::Source"* }
%"class.std::__1::vector.138" = type { %"class.std::__1::__vector_base.139" }
%"class.std::__1::__vector_base.139" = type { float*, float*, %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.base::StackAllocator.137" }
%struct.SkIPoint = type { i32, i32 }
%"class.cc::DisplacementMapEffectPaintFilter" = type { %"class.cc::PaintFilter", i32, i32, float, %class.sk_sp.75, %class.sk_sp.75 }
%"class.cc::ImagePaintFilter" = type <{ %"class.cc::PaintFilter", %"class.cc::PaintImage", %struct.SkRect, %struct.SkRect, i32, [4 x i8] }>
%"class.cc::RecordPaintFilter" = type <{ %"class.cc::PaintFilter", %class.sk_sp.13, %struct.SkRect, %"class.gfx::SizeF", i8, [7 x i8] }>
%"class.cc::MorphologyPaintFilter" = type { %"class.cc::PaintFilter", i32, float, float, %class.sk_sp.75 }
%"class.cc::OffsetPaintFilter" = type { %"class.cc::PaintFilter", float, float, %class.sk_sp.75 }
%"class.cc::TurbulencePaintFilter" = type <{ %"class.cc::PaintFilter", i32, float, float, i32, float, %struct.SkISize, [4 x i8] }>
%"class.cc::ShaderPaintFilter" = type <{ %"class.cc::PaintFilter", %class.sk_sp.51, i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.cc::MatrixPaintFilter" = type { %"class.cc::PaintFilter", %class.SkMatrix, i32, %class.sk_sp.75 }
%"class.cc::LightingDistantPaintFilter" = type { %"class.cc::PaintFilter", i32, %struct.SkPoint3, i32, float, float, float, %class.sk_sp.75 }
%struct.SkPoint3 = type { float, float, float }
%"class.cc::LightingPointPaintFilter" = type { %"class.cc::PaintFilter", i32, %struct.SkPoint3, i32, float, float, float, %class.sk_sp.75 }
%"class.cc::LightingSpotPaintFilter" = type { %"class.cc::PaintFilter", i32, %struct.SkPoint3, %struct.SkPoint3, float, float, i32, float, float, float, %class.sk_sp.75 }
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional.83", %"class.absl::optional.88", float, [4 x i8] }>
%"class.absl::optional.83" = type { %"class.absl::optional_internal::optional_data.84" }
%"class.absl::optional_internal::optional_data.84" = type { %"class.absl::optional_internal::optional_data_base.85" }
%"class.absl::optional_internal::optional_data_base.85" = type { %"class.absl::optional_internal::optional_data_dtor_base.86" }
%"class.absl::optional_internal::optional_data_dtor_base.86" = type { i8, %union.anon.87 }
%"class.absl::optional.88" = type { %"class.absl::optional_internal::optional_data.89" }
%"class.absl::optional_internal::optional_data.89" = type { %"class.absl::optional_internal::optional_data_base.90" }
%"class.absl::optional_internal::optional_data_base.90" = type { %"class.absl::optional_internal::optional_data_dtor_base.91" }
%"class.absl::optional_internal::optional_data_dtor_base.91" = type { i8, %union.anon.92 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkBitmap = type { %class.sk_sp.93, %class.SkPixmap, %class.sk_sp.94 }
%class.sk_sp.93 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.94 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.cc::ImageProvider::ScopedResult" = type { %"class.cc::DecodedDrawImage", %class.sk_sp.13, %"class.base::OnceCallback" }
%"class.cc::DecodedDrawImage" = type <{ %class.sk_sp.95, %"struct.gpu::Mailbox", %"class.absl::optional.96", %class.sk_sp.73, %struct.SkSize, %struct.SkSize, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.96" = type { %"class.absl::optional_internal::optional_data.97" }
%"class.absl::optional_internal::optional_data.97" = type { %"class.absl::optional_internal::optional_data_base.98" }
%"class.absl::optional_internal::optional_data_base.98" = type { %"class.absl::optional_internal::optional_data_dtor_base.99" }
%"class.absl::optional_internal::optional_data_dtor_base.99" = type { i8, %union.anon.100 }
%"class.cc::SkottieWrapper" = type <{ %"class.base::RefCountedThreadSafe.103", [4 x i8], %"class.base::Lock", %class.sk_sp.104, %"class.std::__1::vector.121", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.103" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%class.sk_sp.104 = type { %"class.skottie::Animation"* }
%"class.skottie::Animation" = type <{ %class.SkNVRefCnt.105, [4 x i8], %"class.std::__1::unique_ptr.106", %"class.std::__1::vector.112", %class.SkString, %struct.SkSize, double, double, double, double, i32, [4 x i8] }>
%class.SkNVRefCnt.105 = type { %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.sksg::Scene"* }
%"class.sksg::Scene" = type opaque
%"class.std::__1::vector.112" = type { %"class.std::__1::__vector_base.113" }
%"class.std::__1::__vector_base.113" = type { %class.sk_sp.114*, %class.sk_sp.114*, %"class.std::__1::__compressed_pair.115" }
%class.sk_sp.114 = type opaque
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %class.sk_sp.114* }
%class.SkString = type { %class.sk_sp.120 }
%class.sk_sp.120 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"class.std::__1::vector.121" = type { %"class.std::__1::__vector_base.122" }
%"class.std::__1::__vector_base.122" = type { i8*, i8*, %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { i8* }
%"class.cc::ClientSkottieTransferCacheEntry" = type { %"class.cc::TransferCacheEntryBase", %class.scoped_refptr.102 }
%"class.cc::TransferCacheEntryBase" = type { %"class.cc::ClientTransferCacheEntry" }
%"class.cc::ClientTransferCacheEntry" = type { i32 (...)** }
%class.scoped_refptr.102 = type { %"class.cc::SkottieWrapper"* }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%class.sk_sp.128 = type { %class.SkTextBlob* }
%class.SkTextBlob = type { %class.SkNVRefCnt.129, %struct.SkRect, i32, %"struct.std::__1::atomic.130" }
%class.SkNVRefCnt.129 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.130" = type { %"struct.std::__1::__atomic_base.131" }
%"struct.std::__1::__atomic_base.131" = type { %"struct.std::__1::__atomic_base.132" }
%"struct.std::__1::__atomic_base.132" = type { %"struct.std::__1::__cxx_atomic_impl.133" }
%"struct.std::__1::__cxx_atomic_impl.133" = type { %"struct.std::__1::__cxx_atomic_base_impl.134" }
%"struct.std::__1::__cxx_atomic_base_impl.134" = type { i32 }
%"class.cc::SimpleBufferSerializer" = type { %"class.cc::PaintOpBufferSerializer.base", i8*, i64, i64 }
%"class.cc::PaintOpBufferSerializer.base" = type <{ i32 (...)**, %"class.base::RepeatingCallback", %"struct.cc::PaintOp::SerializeOptions", i8 }>
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.cc::PaintOpBufferSerializer" = type <{ i32 (...)**, %"class.base::RepeatingCallback", %"struct.cc::PaintOp::SerializeOptions", i8, [7 x i8] }>
%"class.cc::MagnifierPaintFilter" = type { %"class.cc::PaintFilter", %struct.SkRect, float, %class.sk_sp.75 }
%"class.cc::ComposePaintFilter" = type { %"class.cc::PaintFilter", %class.sk_sp.75, %class.sk_sp.75 }
%"class.cc::XfermodePaintFilter" = type { %"class.cc::PaintFilter", i32, %class.sk_sp.75, %class.sk_sp.75 }
%class.sk_sp.152 = type { %"class.cc::RecordPaintFilter"* }
%"class.cc::MergePaintFilter" = type { %"class.cc::PaintFilter", %"class.base::StackVector.142" }
%"class.base::StackVector.142" = type { %"class.base::StackContainer.143" }
%"class.base::StackContainer.143" = type { %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source", %"class.base::StackAllocator.144", %"class.std::__1::vector.147" }
%"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source" = type { [16 x i8], i8, [7 x i8] }
%"class.base::StackAllocator.144" = type { %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"* }
%"class.std::__1::vector.147" = type { %"class.std::__1::__vector_base.148" }
%"class.std::__1::__vector_base.148" = type { %class.sk_sp.75*, %class.sk_sp.75*, %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150", %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %class.sk_sp.75* }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.base::StackAllocator.144" }
%"class.cc::TilePaintFilter" = type { %"class.cc::PaintFilter", %struct.SkRect, %struct.SkRect, %class.sk_sp.75 }

@__const._ZN2cc13PaintOpWriter5WriteERKNS_9DrawImageEP6SkSize.decoded_image = private unnamed_addr constant { <{ %class.sk_sp.95, %"struct.gpu::Mailbox", { { { { i8, [3 x i8], %union.anon.100 } } } }, %class.sk_sp.73, %struct.SkSize, %struct.SkSize, i32, i8, i8, [2 x i8] }>, %class.sk_sp.13, %"class.base::OnceCallback" } { <{ %class.sk_sp.95, %"struct.gpu::Mailbox", { { { { i8, [3 x i8], %union.anon.100 } } } }, %class.sk_sp.73, %struct.SkSize, %struct.SkSize, i32, i8, i8, [2 x i8] }> <{ %class.sk_sp.95 { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %"struct.gpu::Mailbox" { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, { { { { i8, [3 x i8], %union.anon.100 } } } } { { { { i8, [3 x i8], %union.anon.100 } } } { { { i8, [3 x i8], %union.anon.100 } } { { i8, [3 x i8], %union.anon.100 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.100 { i32 -1431655766 } } } } }, %class.sk_sp.73 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %struct.SkSize { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkSize { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, %class.sk_sp.13 { %"class.cc::PaintOpBuffer"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintOpBuffer"*) }, %"class.base::OnceCallback" { %"class.base::internal::CallbackBase" { %class.scoped_refptr.101 { %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*) } } } }, align 8
@.str = private unnamed_addr constant [16 x i8] c"written == size\00", align 1
@.str.1 = private unnamed_addr constant [34 x i8] c"../../cc/paint/paint_op_writer.cc\00", align 1
@__const._ZN2cc13PaintOpWriter5WriteERKNS_16ImagePaintFilterERK5SkM44.draw_image = private unnamed_addr constant <{ { %class.sk_sp.12, %class.sk_sp.13, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.15, %class.sk_sp.16, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.12, %class.scoped_refptr }, i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.87 } } } }, { { { { i8, [3 x i8], %union.anon.92 } } } }, float, [4 x i8] }> <{ { %class.sk_sp.12, %class.sk_sp.13, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.15, %class.sk_sp.16, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.12, %class.scoped_refptr } { %class.sk_sp.12 { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %class.sk_sp.13 { %"class.cc::PaintOpBuffer"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintOpBuffer"*) }, %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.15 { %"class.cc::PaintImageGenerator"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintImageGenerator"*) }, %class.sk_sp.16 { %"class.cc::TextureBacking"* inttoptr (i64 -6148914691236517206 to %"class.cc::TextureBacking"*) }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.12 { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %class.scoped_refptr { %"class.cc::PaintWorkletInput"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintWorkletInput"*) } }, i8 -86, [3 x i8] c"\AA\AA\AA", %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, i32 -1431655766, %struct.SkSize { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.87 } } } } { { { { i8, [7 x i8], %union.anon.87 } } } { { { i8, [7 x i8], %union.anon.87 } } { { i8, [7 x i8], %union.anon.87 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.87 { i64 -6148914691236517206 } } } } }, { { { { i8, [3 x i8], %union.anon.92 } } } } { { { { i8, [3 x i8], %union.anon.92 } } } { { { i8, [3 x i8], %union.anon.92 } } { { i8, [3 x i8], %union.anon.92 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.92 { %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] } } } } } }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@constinit = private unnamed_addr constant [16 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], align 4

@_ZN2cc13PaintOpWriterC1EPvmRKNS_7PaintOp16SerializeOptionsEb = hidden unnamed_addr alias void (%"class.cc::PaintOpWriter"*, i8*, i64, %"struct.cc::PaintOp::SerializeOptions"*, i1), void (%"class.cc::PaintOpWriter"*, i8*, i64, %"struct.cc::PaintOp::SerializeOptions"*, i1)* @_ZN2cc13PaintOpWriterC2EPvmRKNS_7PaintOp16SerializeOptionsEb
@_ZN2cc13PaintOpWriterD1Ev = hidden unnamed_addr alias void (%"class.cc::PaintOpWriter"*), void (%"class.cc::PaintOpWriter"*)* @_ZN2cc13PaintOpWriterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2cc13PaintOpWriter18GetFlattenableSizeEPK13SkFlattenable(%class.SkFlattenable*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp, align 8
  %3 = icmp eq %class.SkFlattenable* %0, null
  br i1 %3, label %19, label %4

4:                                                ; preds = %1
  %5 = bitcast %class.sk_sp* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %6, align 8
  call void @_ZNK13SkFlattenable9serializeEPK13SkSerialProcs(%class.sk_sp* nonnull sret %2, %class.SkFlattenable* nonnull %0, %struct.SkSerialProcs* null) #12
  %7 = load %class.SkData*, %class.SkData** %6, align 8
  %8 = getelementptr inbounds %class.SkData, %class.SkData* %7, i64 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, 16
  %11 = icmp eq %class.SkData* %7, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %class.SkData, %class.SkData* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 -1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %7) #12
  %17 = bitcast %class.SkData* %7 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %17) #12
  br label %18

18:                                               ; preds = %4, %12, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  br label %19

19:                                               ; preds = %1, %18
  %20 = phi i64 [ %10, %18 ], [ 16, %1 ]
  ret i64 %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNK13SkFlattenable9serializeEPK13SkSerialProcs(%class.sk_sp* sret, %class.SkFlattenable*, %struct.SkSerialProcs*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2cc13PaintOpWriter12GetImageSizeERKNS_10PaintImageE(%"class.cc::PaintImage"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %2 = alloca %struct.SkImageInfo, align 16
  %3 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 15, i32 0
  %4 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %3, align 8
  %5 = icmp eq %"class.cc::PaintWorkletInput"* %4, null
  br i1 %5, label %6, label %14

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 14, i32 0
  %8 = load %class.SkImage*, %class.SkImage** %7, align 8
  %9 = icmp eq %class.SkImage* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 5, i32 0
  %12 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %11, align 8
  %13 = icmp eq %"class.cc::TextureBacking"* %12, null
  br i1 %13, label %44, label %14

14:                                               ; preds = %10, %1, %6
  %15 = bitcast %struct.SkImageInfo* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 0, i32 0
  %17 = tail call i32 @_ZNK2cc10PaintImage5widthEv(%"class.cc::PaintImage"* %0) #12
  %18 = tail call i32 @_ZNK2cc10PaintImage6heightEv(%"class.cc::PaintImage"* %0) #12
  %19 = zext i32 %18 to i64
  %20 = shl nuw i64 %19, 32
  %21 = zext i32 %17 to i64
  %22 = or i64 %20, %21
  %23 = bitcast %struct.SkImageInfo* %2 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %23, align 16, !alias.scope !2
  %24 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 1
  %25 = bitcast %struct.SkISize* %24 to i64*
  store i64 %22, i64* %25, align 16, !alias.scope !2
  %26 = sext i32 %17 to i64
  %27 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0
  %28 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %27) #12
  %29 = sext i32 %28 to i64
  %30 = mul nsw i64 %29, %26
  %31 = icmp ult i64 %30, 2147483648
  %32 = select i1 %31, i64 %30, i64 0
  %33 = call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* nonnull %2, i64 %32) #12
  %34 = add i64 %33, 29
  %35 = load %class.SkColorSpace*, %class.SkColorSpace** %16, align 16
  %36 = icmp eq %class.SkColorSpace* %35, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %14
  %38 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = bitcast %class.SkColorSpace* %35 to i8*
  call void @_ZdlPv(i8* %42) #13
  br label %43

43:                                               ; preds = %14, %37, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  br label %44

44:                                               ; preds = %10, %43
  %45 = phi i64 [ %34, %43 ], [ 1, %10 ]
  ret i64 %45
}

declare i32 @_ZNK2cc10PaintImage5widthEv(%"class.cc::PaintImage"*) local_unnamed_addr #2

declare i32 @_ZNK2cc10PaintImage6heightEv(%"class.cc::PaintImage"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2cc13PaintOpWriter13GetRecordSizeEPKNS_13PaintOpBufferE(%"class.cc::PaintOpBuffer"* nocapture readnone) local_unnamed_addr #3 align 2 {
  ret i64 8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc13PaintOpWriterC2EPvmRKNS_7PaintOp16SerializeOptionsEb(%"class.cc::PaintOpWriter"* nocapture, i8*, i64, %"struct.cc::PaintOp::SerializeOptions"* dereferenceable(56), i1 zeroext) unnamed_addr #4 align 2 {
  %6 = zext i1 %4 to i8
  %7 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %8 = getelementptr inbounds i8, i8* %1, i64 4
  store i8* %8, i8** %7, align 8
  %9 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 1
  store i64 %2, i64* %9, align 8
  %10 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %11 = add i64 %2, -4
  store i64 %11, i64* %10, align 8
  %12 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 3
  store %"struct.cc::PaintOp::SerializeOptions"* %3, %"struct.cc::PaintOp::SerializeOptions"** %12, align 8
  %13 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  store i8 1, i8* %13, align 8
  %14 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 5
  store i8 %6, i8* %14, align 1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2cc13PaintOpWriterD2Ev(%"class.cc::PaintOpWriter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter16WriteFlattenableEPK13SkFlattenable(%"class.cc::PaintOpWriter"* nocapture, %class.SkFlattenable*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %class.SkFlattenable* %1, null
  %4 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %5 = bitcast %"class.cc::PaintOpWriter"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 7
  %8 = and i64 %7, -8
  %9 = sub i64 %8, %6
  %10 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %11, %9
  %13 = inttoptr i64 %6 to i8*
  %14 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  %15 = inttoptr i64 %6 to i64*
  br i1 %12, label %16, label %17

16:                                               ; preds = %2
  store i8 0, i8* %14, align 8
  br label %24

17:                                               ; preds = %2
  %18 = load i8, i8* %14, align 8, !range !5
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds i8, i8* %13, i64 %9
  store i8* %21, i8** %4, align 8
  %22 = sub i64 %11, %9
  store i64 %22, i64* %10, align 8
  %23 = bitcast i8* %21 to i64*
  br label %24

24:                                               ; preds = %20, %17, %16
  %25 = phi i8* [ %21, %20 ], [ %13, %17 ], [ %13, %16 ]
  %26 = phi i8 [ 1, %20 ], [ 0, %17 ], [ 0, %16 ]
  %27 = phi i64* [ %23, %20 ], [ %15, %17 ], [ %15, %16 ]
  %28 = phi i64 [ %22, %20 ], [ %11, %17 ], [ %11, %16 ]
  %29 = icmp ult i64 %28, 8
  br i1 %29, label %30, label %31

30:                                               ; preds = %24
  store i8 0, i8* %14, align 8
  br label %38

31:                                               ; preds = %24
  %32 = icmp eq i8 %26, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %31
  store i64 0, i64* %27, align 8
  %34 = load i8*, i8** %4, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 8
  store i8* %35, i8** %4, align 8
  %36 = load i64, i64* %10, align 8
  %37 = add i64 %36, -8
  store i64 %37, i64* %10, align 8
  br label %38

38:                                               ; preds = %30, %31, %33
  %39 = phi i64 [ %28, %30 ], [ %28, %31 ], [ %37, %33 ]
  %40 = phi i8* [ %25, %30 ], [ %25, %31 ], [ %35, %33 ]
  br i1 %3, label %54, label %41

41:                                               ; preds = %38
  %42 = load i8, i8* %14, align 8, !range !5
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %54, label %44

44:                                               ; preds = %41
  %45 = and i64 %39, -4
  %46 = tail call i64 @_ZNK13SkFlattenable9serializeEPvmPK13SkSerialProcs(%class.SkFlattenable* nonnull %1, i8* %40, i64 %45, %struct.SkSerialProcs* null) #12
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %44
  store i8 0, i8* %14, align 8
  br label %54

49:                                               ; preds = %44
  store i64 %46, i64* %27, align 8
  %50 = load i8*, i8** %4, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %46
  store i8* %51, i8** %4, align 8
  %52 = load i64, i64* %10, align 8
  %53 = sub i64 %52, %46
  store i64 %53, i64* %10, align 8
  br label %54

54:                                               ; preds = %41, %49, %48, %38
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64* @_ZN2cc13PaintOpWriter9WriteSizeEm(%"class.cc::PaintOpWriter"* nocapture, i64) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %4 = bitcast %"class.cc::PaintOpWriter"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 7
  %7 = and i64 %6, -8
  %8 = sub i64 %7, %5
  %9 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %10, %8
  %12 = inttoptr i64 %5 to i8*
  %13 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  %14 = inttoptr i64 %5 to i64*
  br i1 %11, label %15, label %16

15:                                               ; preds = %2
  store i8 0, i8* %13, align 8
  br label %23

16:                                               ; preds = %2
  %17 = load i8, i8* %13, align 8, !range !5
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %12, i64 %8
  store i8* %20, i8** %3, align 8
  %21 = sub i64 %10, %8
  store i64 %21, i64* %9, align 8
  %22 = bitcast i8* %20 to i64*
  br label %23

23:                                               ; preds = %15, %16, %19
  %24 = phi i8 [ 1, %19 ], [ 0, %16 ], [ 0, %15 ]
  %25 = phi i64* [ %22, %19 ], [ %14, %16 ], [ %14, %15 ]
  %26 = phi i64 [ %21, %19 ], [ %10, %16 ], [ %10, %15 ]
  %27 = icmp ult i64 %26, 8
  br i1 %27, label %28, label %29

28:                                               ; preds = %23
  store i8 0, i8* %13, align 8
  br label %36

29:                                               ; preds = %23
  %30 = icmp eq i8 %24, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %29
  store i64 %1, i64* %25, align 8
  %32 = load i8*, i8** %3, align 8
  %33 = getelementptr inbounds i8, i8* %32, i64 8
  store i8* %33, i8** %3, align 8
  %34 = load i64, i64* %9, align 8
  %35 = add i64 %34, -8
  store i64 %35, i64* %9, align 8
  br label %36

36:                                               ; preds = %28, %29, %31
  ret i64* %25
}

declare i64 @_ZNK13SkFlattenable9serializeEPvmPK13SkSerialProcs(%class.SkFlattenable*, i8*, i64, %struct.SkSerialProcs*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter11AlignMemoryEm(%"class.cc::PaintOpWriter"* nocapture, i64) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %4 = bitcast %"class.cc::PaintOpWriter"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %1, -1
  %7 = add i64 %6, %5
  %8 = sub i64 0, %1
  %9 = and i64 %7, %8
  %10 = sub i64 %9, %5
  %11 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %12, %10
  %14 = inttoptr i64 %5 to i8*
  %15 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %13, label %16, label %17

16:                                               ; preds = %2
  store i8 0, i8* %15, align 8
  br label %23

17:                                               ; preds = %2
  %18 = load i8, i8* %15, align 8, !range !5
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds i8, i8* %14, i64 %10
  store i8* %21, i8** %3, align 8
  %22 = sub i64 %12, %10
  store i64 %22, i64* %11, align 8
  br label %23

23:                                               ; preds = %16, %17, %20
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteEf(%"class.cc::PaintOpWriter"* nocapture, float) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 4
  %6 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %5, label %7, label %8

7:                                                ; preds = %2
  store i8 0, i8* %6, align 8
  br label %19

8:                                                ; preds = %2
  %9 = load i8, i8* %6, align 8, !range !5
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %19, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %13 = bitcast %"class.cc::PaintOpWriter"* %0 to float**
  %14 = load float*, float** %13, align 8
  store float %1, float* %14, align 4
  %15 = load i8*, i8** %12, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 4
  store i8* %16, i8** %12, align 8
  %17 = load i64, i64* %3, align 8
  %18 = add i64 %17, -4
  store i64 %18, i64* %3, align 8
  br label %19

19:                                               ; preds = %7, %8, %11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteEh(%"class.cc::PaintOpWriter"* nocapture, i8 zeroext) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 4
  %6 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %5, label %7, label %8

7:                                                ; preds = %2
  store i8 0, i8* %6, align 8
  br label %18

8:                                                ; preds = %2
  %9 = load i8, i8* %6, align 8, !range !5
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  store i8 %1, i8* %13, align 1
  %14 = load i8*, i8** %12, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 4
  store i8* %15, i8** %12, align 8
  %16 = load i64, i64* %3, align 8
  %17 = add i64 %16, -4
  store i64 %17, i64* %3, align 8
  br label %18

18:                                               ; preds = %7, %8, %11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteEj(%"class.cc::PaintOpWriter"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 4
  %6 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %5, label %7, label %8

7:                                                ; preds = %2
  store i8 0, i8* %6, align 8
  br label %19

8:                                                ; preds = %2
  %9 = load i8, i8* %6, align 8, !range !5
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %19, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %13 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %14 = load i32*, i32** %13, align 8
  store i32 %1, i32* %14, align 4
  %15 = load i8*, i8** %12, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 4
  store i8* %16, i8** %12, align 8
  %17 = load i64, i64* %3, align 8
  %18 = add i64 %17, -4
  store i64 %18, i64* %3, align 8
  br label %19

19:                                               ; preds = %7, %8, %11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteEm(%"class.cc::PaintOpWriter"* nocapture, i64) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 8
  %6 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %5, label %7, label %8

7:                                                ; preds = %2
  store i8 0, i8* %6, align 8
  br label %19

8:                                                ; preds = %2
  %9 = load i8, i8* %6, align 8, !range !5
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %19, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %13 = bitcast %"class.cc::PaintOpWriter"* %0 to i64**
  %14 = load i64*, i64** %13, align 8
  store i64 %1, i64* %14, align 8
  %15 = load i8*, i8** %12, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 8
  store i8* %16, i8** %12, align 8
  %17 = load i64, i64* %3, align 8
  %18 = add i64 %17, -8
  store i64 %18, i64* %3, align 8
  br label %19

19:                                               ; preds = %7, %8, %11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteEi(%"class.cc::PaintOpWriter"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 4
  %6 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %5, label %7, label %8

7:                                                ; preds = %2
  store i8 0, i8* %6, align 8
  br label %19

8:                                                ; preds = %2
  %9 = load i8, i8* %6, align 8, !range !5
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %19, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %13 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %14 = load i32*, i32** %13, align 8
  store i32 %1, i32* %14, align 4
  %15 = load i8*, i8** %12, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 4
  store i8* %16, i8** %12, align 8
  %17 = load i64, i64* %3, align 8
  %18 = add i64 %17, -4
  store i64 %18, i64* %3, align 8
  br label %19

19:                                               ; preds = %7, %8, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERK6SkRect(%"class.cc::PaintOpWriter"* nocapture, %struct.SkRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 16
  %6 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %5, label %7, label %8

7:                                                ; preds = %2
  store i8 0, i8* %6, align 8
  br label %19

8:                                                ; preds = %2
  %9 = load i8, i8* %6, align 8, !range !5
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %19, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %struct.SkRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 16, i1 false) #12
  %15 = load i8*, i8** %12, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 16
  store i8* %16, i8** %12, align 8
  %17 = load i64, i64* %3, align 8
  %18 = add i64 %17, -16
  store i64 %18, i64* %3, align 8
  br label %19

19:                                               ; preds = %7, %8, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERK7SkIRect(%"class.cc::PaintOpWriter"* nocapture, %struct.SkIRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 16
  %6 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %5, label %7, label %8

7:                                                ; preds = %2
  store i8 0, i8* %6, align 8
  br label %19

8:                                                ; preds = %2
  %9 = load i8, i8* %6, align 8, !range !5
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %19, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %struct.SkIRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 16, i1 false) #12
  %15 = load i8*, i8** %12, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 16
  store i8* %16, i8** %12, align 8
  %17 = load i64, i64* %3, align 8
  %18 = add i64 %17, -16
  store i64 %18, i64* %3, align 8
  br label %19

19:                                               ; preds = %7, %8, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERK7SkRRect(%"class.cc::PaintOpWriter"* nocapture, %class.SkRRect* nocapture readonly dereferenceable(52)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 52
  %6 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %5, label %7, label %8

7:                                                ; preds = %2
  store i8 0, i8* %6, align 8
  br label %19

8:                                                ; preds = %2
  %9 = load i8, i8* %6, align 8, !range !5
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %19, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %class.SkRRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 52, i1 false) #12
  %15 = load i8*, i8** %12, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 52
  store i8* %16, i8** %12, align 8
  %17 = load i64, i64* %3, align 8
  %18 = add i64 %17, -52
  store i64 %18, i64* %3, align 8
  br label %19

19:                                               ; preds = %7, %8, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERK6SkPath(%"class.cc::PaintOpWriter"*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = tail call i32 @_ZNK6SkPath15getGenerationIDEv(%class.SkPath* %1) #12
  %4 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 3
  %5 = load %"struct.cc::PaintOp::SerializeOptions"*, %"struct.cc::PaintOp::SerializeOptions"** %4, align 8
  %6 = getelementptr inbounds %"struct.cc::PaintOp::SerializeOptions", %"struct.cc::PaintOp::SerializeOptions"* %5, i64 0, i32 9
  %7 = load i8, i8* %6, align 8, !range !5
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %27

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %11, 4
  %13 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %12, label %14, label %15

14:                                               ; preds = %9
  store i8 0, i8* %13, align 8
  br label %27

15:                                               ; preds = %9
  %16 = load i8, i8* %13, align 8, !range !5
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %20 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %21 = load i32*, i32** %20, align 8
  store i32 %3, i32* %21, align 4
  %22 = load i8*, i8** %19, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 4
  store i8* %23, i8** %19, align 8
  %24 = load i64, i64* %10, align 8
  %25 = add i64 %24, -4
  store i64 %25, i64* %10, align 8
  %26 = load %"struct.cc::PaintOp::SerializeOptions"*, %"struct.cc::PaintOp::SerializeOptions"** %4, align 8
  br label %27

27:                                               ; preds = %18, %15, %14, %2
  %28 = phi %"struct.cc::PaintOp::SerializeOptions"* [ %26, %18 ], [ %5, %15 ], [ %5, %14 ], [ %5, %2 ]
  %29 = getelementptr inbounds %"struct.cc::PaintOp::SerializeOptions", %"struct.cc::PaintOp::SerializeOptions"* %28, i64 0, i32 2
  %30 = load %"class.cc::ClientPaintCache"*, %"class.cc::ClientPaintCache"** %29, align 8
  %31 = tail call zeroext i1 @_ZN2cc16ClientPaintCache3GetENS_18PaintCacheDataTypeEj(%"class.cc::ClientPaintCache"* %30, i32 1, i32 %3) #12
  br i1 %31, label %32, label %49

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %34 = load i64, i64* %33, align 8
  %35 = icmp ult i64 %34, 4
  %36 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %35, label %37, label %38

37:                                               ; preds = %32
  store i8 0, i8* %36, align 8
  br label %133

38:                                               ; preds = %32
  %39 = load i8, i8* %36, align 8, !range !5
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %133, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %43 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %44 = load i32*, i32** %43, align 8
  store i32 1, i32* %44, align 4
  %45 = load i8*, i8** %42, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 4
  store i8* %46, i8** %42, align 8
  %47 = load i64, i64* %33, align 8
  %48 = add i64 %47, -4
  store i64 %48, i64* %33, align 8
  br label %133

49:                                               ; preds = %27
  %50 = tail call i64 @_ZNK6SkPath13writeToMemoryEPv(%class.SkPath* %1, i8* null) #12
  %51 = icmp eq i64 %50, 0
  %52 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %53, 4
  %55 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %51, label %56, label %69

56:                                               ; preds = %49
  br i1 %54, label %57, label %58

57:                                               ; preds = %56
  store i8 0, i8* %55, align 8
  br label %133

58:                                               ; preds = %56
  %59 = load i8, i8* %55, align 8, !range !5
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %133, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %63 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %64 = load i32*, i32** %63, align 8
  store i32 0, i32* %64, align 4
  %65 = load i8*, i8** %62, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 4
  store i8* %66, i8** %62, align 8
  %67 = load i64, i64* %52, align 8
  %68 = add i64 %67, -4
  store i64 %68, i64* %52, align 8
  br label %133

69:                                               ; preds = %49
  br i1 %54, label %70, label %71

70:                                               ; preds = %69
  store i8 0, i8* %55, align 8
  br label %82

71:                                               ; preds = %69
  %72 = load i8, i8* %55, align 8, !range !5
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %82, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %76 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %77 = load i32*, i32** %76, align 8
  store i32 2, i32* %77, align 4
  %78 = load i8*, i8** %75, align 8
  %79 = getelementptr inbounds i8, i8* %78, i64 4
  store i8* %79, i8** %75, align 8
  %80 = load i64, i64* %52, align 8
  %81 = add i64 %80, -4
  store i64 %81, i64* %52, align 8
  br label %82

82:                                               ; preds = %70, %71, %74
  %83 = phi i64 [ %53, %70 ], [ %53, %71 ], [ %81, %74 ]
  %84 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %85 = bitcast %"class.cc::PaintOpWriter"* %0 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, 7
  %88 = and i64 %87, -8
  %89 = sub i64 %88, %86
  %90 = icmp ult i64 %83, %89
  %91 = inttoptr i64 %86 to i8*
  %92 = inttoptr i64 %86 to i64*
  br i1 %90, label %93, label %94

93:                                               ; preds = %82
  store i8 0, i8* %55, align 8
  br label %101

94:                                               ; preds = %82
  %95 = load i8, i8* %55, align 8, !range !5
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %101, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds i8, i8* %91, i64 %89
  store i8* %98, i8** %84, align 8
  %99 = sub i64 %83, %89
  store i64 %99, i64* %52, align 8
  %100 = bitcast i8* %98 to i64*
  br label %101

101:                                              ; preds = %97, %94, %93
  %102 = phi i8* [ %98, %97 ], [ %91, %94 ], [ %91, %93 ]
  %103 = phi i8 [ 1, %97 ], [ 0, %94 ], [ 0, %93 ]
  %104 = phi i64* [ %100, %97 ], [ %92, %94 ], [ %92, %93 ]
  %105 = phi i64 [ %99, %97 ], [ %83, %94 ], [ %83, %93 ]
  %106 = icmp ult i64 %105, 8
  br i1 %106, label %107, label %108

107:                                              ; preds = %101
  store i8 0, i8* %55, align 8
  br label %133

108:                                              ; preds = %101
  %109 = icmp eq i8 %103, 0
  br i1 %109, label %116, label %110

110:                                              ; preds = %108
  store i64 0, i64* %104, align 8
  %111 = load i8*, i8** %84, align 8
  %112 = getelementptr inbounds i8, i8* %111, i64 8
  store i8* %112, i8** %84, align 8
  %113 = load i64, i64* %52, align 8
  %114 = add i64 %113, -8
  store i64 %114, i64* %52, align 8
  %115 = load i8, i8* %55, align 8
  br label %116

116:                                              ; preds = %108, %110
  %117 = phi i8* [ %102, %108 ], [ %112, %110 ]
  %118 = phi i64 [ %105, %108 ], [ %114, %110 ]
  %119 = phi i8 [ %103, %108 ], [ %115, %110 ]
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %133, label %121

121:                                              ; preds = %116
  %122 = icmp ugt i64 %50, %118
  br i1 %122, label %123, label %124

123:                                              ; preds = %121
  store i8 0, i8* %55, align 8
  br label %133

124:                                              ; preds = %121
  %125 = tail call i64 @_ZNK6SkPath13writeToMemoryEPv(%class.SkPath* %1, i8* %117) #12
  %126 = load %"struct.cc::PaintOp::SerializeOptions"*, %"struct.cc::PaintOp::SerializeOptions"** %4, align 8
  %127 = getelementptr inbounds %"struct.cc::PaintOp::SerializeOptions", %"struct.cc::PaintOp::SerializeOptions"* %126, i64 0, i32 2
  %128 = load %"class.cc::ClientPaintCache"*, %"class.cc::ClientPaintCache"** %127, align 8
  tail call void @_ZN2cc16ClientPaintCache3PutENS_18PaintCacheDataTypeEjm(%"class.cc::ClientPaintCache"* %128, i32 1, i32 %3, i64 %125) #12
  store i64 %125, i64* %104, align 8
  %129 = load i8*, i8** %84, align 8
  %130 = getelementptr inbounds i8, i8* %129, i64 %125
  store i8* %130, i8** %84, align 8
  %131 = load i64, i64* %52, align 8
  %132 = sub i64 %131, %125
  store i64 %132, i64* %52, align 8
  br label %133

133:                                              ; preds = %107, %61, %58, %57, %41, %38, %37, %116, %124, %123
  ret void
}

declare i32 @_ZNK6SkPath15getGenerationIDEv(%class.SkPath*) local_unnamed_addr #2

declare zeroext i1 @_ZN2cc16ClientPaintCache3GetENS_18PaintCacheDataTypeEj(%"class.cc::ClientPaintCache"*, i32, i32) local_unnamed_addr #2

declare i64 @_ZNK6SkPath13writeToMemoryEPv(%class.SkPath*, i8*) local_unnamed_addr #2

declare void @_ZN2cc16ClientPaintCache3PutENS_18PaintCacheDataTypeEjm(%"class.cc::ClientPaintCache"*, i32, i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERKNS_10PaintFlagsERK5SkM44(%"class.cc::PaintOpWriter"*, %"class.cc::PaintFlags"* nocapture readonly dereferenceable(72), %class.SkM44* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %1, i64 0, i32 6
  %5 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, 4
  %8 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %7, label %9, label %10

9:                                                ; preds = %3
  store i8 0, i8* %8, align 8
  br label %23

10:                                               ; preds = %3
  %11 = load i8, i8* %8, align 8, !range !5
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %25, label %13

13:                                               ; preds = %10
  %14 = load i32, i32* %4, align 4
  %15 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %16 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %17 = load i32*, i32** %16, align 8
  store i32 %14, i32* %17, align 4
  %18 = load i8*, i8** %15, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 4
  store i8* %19, i8** %15, align 8
  %20 = load i64, i64* %5, align 8
  %21 = add i64 %20, -4
  store i64 %21, i64* %5, align 8
  %22 = icmp ult i64 %21, 4
  br i1 %22, label %23, label %25

23:                                               ; preds = %13, %9
  %24 = phi i64 [ %6, %9 ], [ %21, %13 ]
  store i8 0, i8* %8, align 8
  br label %41

25:                                               ; preds = %10, %13
  %26 = phi i64 [ %21, %13 ], [ %6, %10 ]
  %27 = load i8, i8* %8, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %43, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %1, i64 0, i32 7
  %31 = bitcast float* %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %34 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %35 = load i32*, i32** %34, align 8
  store i32 %32, i32* %35, align 4
  %36 = load i8*, i8** %33, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 4
  store i8* %37, i8** %33, align 8
  %38 = load i64, i64* %5, align 8
  %39 = add i64 %38, -4
  store i64 %39, i64* %5, align 8
  %40 = icmp ult i64 %39, 4
  br i1 %40, label %41, label %43

41:                                               ; preds = %29, %23
  %42 = phi i64 [ %24, %23 ], [ %39, %29 ]
  store i8 0, i8* %8, align 8
  br label %61

43:                                               ; preds = %25, %29
  %44 = phi i64 [ %39, %29 ], [ %26, %25 ]
  %45 = load i8, i8* %8, align 8, !range !5
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %77, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %1, i64 0, i32 8
  %49 = bitcast float* %48 to i32*
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %52 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %53 = load i32*, i32** %52, align 8
  store i32 %50, i32* %53, align 4
  %54 = load i8*, i8** %51, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 4
  store i8* %55, i8** %51, align 8
  %56 = load i64, i64* %5, align 8
  %57 = add i64 %56, -4
  store i64 %57, i64* %5, align 8
  %58 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %1, i64 0, i32 9
  %59 = load i32, i32* %58, align 4
  %60 = icmp ult i64 %57, 4
  br i1 %60, label %61, label %63

61:                                               ; preds = %47, %41
  %62 = phi i64 [ %42, %41 ], [ %57, %47 ]
  store i8 0, i8* %8, align 8
  br label %75

63:                                               ; preds = %47
  %64 = load i8, i8* %8, align 8
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %77, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %68 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %69 = load i32*, i32** %68, align 8
  store i32 %59, i32* %69, align 4
  %70 = load i8*, i8** %67, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 4
  store i8* %71, i8** %67, align 8
  %72 = load i64, i64* %5, align 8
  %73 = add i64 %72, -4
  store i64 %73, i64* %5, align 8
  %74 = icmp ult i64 %73, 4
  br i1 %74, label %75, label %77

75:                                               ; preds = %61, %66
  %76 = phi i64 [ %62, %61 ], [ %73, %66 ]
  store i8 0, i8* %8, align 8
  br label %91

77:                                               ; preds = %43, %63, %66
  %78 = phi i64 [ %73, %66 ], [ %57, %63 ], [ %44, %43 ]
  %79 = load i8, i8* %8, align 8, !range !5
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %91, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %1, i64 0, i32 10, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %85 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %86 = load i32*, i32** %85, align 8
  store i32 %83, i32* %86, align 4
  %87 = load i8*, i8** %84, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 4
  store i8* %88, i8** %84, align 8
  %89 = load i64, i64* %5, align 8
  %90 = add i64 %89, -4
  store i64 %90, i64* %5, align 8
  br label %91

91:                                               ; preds = %75, %77, %81
  %92 = phi i64 [ %76, %75 ], [ %78, %77 ], [ %90, %81 ]
  %93 = bitcast %"class.cc::PaintFlags"* %1 to %class.SkFlattenable**
  %94 = load %class.SkFlattenable*, %class.SkFlattenable** %93, align 8
  %95 = icmp eq %class.SkFlattenable* %94, null
  %96 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %97 = bitcast %"class.cc::PaintOpWriter"* %0 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 7
  %100 = and i64 %99, -8
  %101 = sub i64 %100, %98
  %102 = icmp ult i64 %92, %101
  %103 = inttoptr i64 %98 to i8*
  %104 = inttoptr i64 %98 to i64*
  br i1 %102, label %105, label %106

105:                                              ; preds = %91
  store i8 0, i8* %8, align 8
  br label %114

106:                                              ; preds = %91
  %107 = load i8, i8* %8, align 8, !range !5
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %114, label %109

109:                                              ; preds = %106
  %110 = getelementptr inbounds i8, i8* %103, i64 %101
  store i8* %110, i8** %96, align 8
  %111 = sub i64 %92, %101
  store i64 %111, i64* %5, align 8
  %112 = bitcast i8* %110 to i64*
  %113 = ptrtoint i8* %110 to i64
  br label %114

114:                                              ; preds = %109, %106, %105
  %115 = phi i64 [ %113, %109 ], [ %98, %106 ], [ %98, %105 ]
  %116 = phi i8* [ %110, %109 ], [ %103, %106 ], [ %103, %105 ]
  %117 = phi i8 [ 1, %109 ], [ 0, %106 ], [ 0, %105 ]
  %118 = phi i64* [ %112, %109 ], [ %104, %106 ], [ %104, %105 ]
  %119 = phi i64 [ %111, %109 ], [ %92, %106 ], [ %92, %105 ]
  %120 = icmp ult i64 %119, 8
  br i1 %120, label %121, label %122

121:                                              ; preds = %114
  store i8 0, i8* %8, align 8
  br label %130

122:                                              ; preds = %114
  %123 = icmp eq i8 %117, 0
  br i1 %123, label %130, label %124

124:                                              ; preds = %122
  store i64 0, i64* %118, align 8
  %125 = load i8*, i8** %96, align 8
  %126 = getelementptr inbounds i8, i8* %125, i64 8
  store i8* %126, i8** %96, align 8
  %127 = load i64, i64* %5, align 8
  %128 = add i64 %127, -8
  store i64 %128, i64* %5, align 8
  %129 = ptrtoint i8* %126 to i64
  br label %130

130:                                              ; preds = %124, %122, %121
  %131 = phi i64 [ %115, %121 ], [ %115, %122 ], [ %129, %124 ]
  %132 = phi i64 [ %119, %121 ], [ %119, %122 ], [ %128, %124 ]
  %133 = phi i8* [ %116, %121 ], [ %116, %122 ], [ %126, %124 ]
  br i1 %95, label %150, label %134

134:                                              ; preds = %130
  %135 = load i8, i8* %8, align 8, !range !5
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %150, label %137

137:                                              ; preds = %134
  %138 = and i64 %132, -4
  %139 = tail call i64 @_ZNK13SkFlattenable9serializeEPvmPK13SkSerialProcs(%class.SkFlattenable* nonnull %94, i8* %133, i64 %138, %struct.SkSerialProcs* null) #12
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %144

141:                                              ; preds = %137
  store i8 0, i8* %8, align 8
  %142 = load i64, i64* %97, align 8
  %143 = load i64, i64* %5, align 8
  br label %150

144:                                              ; preds = %137
  store i64 %139, i64* %118, align 8
  %145 = load i8*, i8** %96, align 8
  %146 = getelementptr inbounds i8, i8* %145, i64 %139
  store i8* %146, i8** %96, align 8
  %147 = load i64, i64* %5, align 8
  %148 = sub i64 %147, %139
  store i64 %148, i64* %5, align 8
  %149 = ptrtoint i8* %146 to i64
  br label %150

150:                                              ; preds = %130, %134, %141, %144
  %151 = phi i64 [ %131, %130 ], [ %131, %134 ], [ %142, %141 ], [ %149, %144 ]
  %152 = phi i64 [ %132, %130 ], [ %132, %134 ], [ %143, %141 ], [ %148, %144 ]
  %153 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %1, i64 0, i32 2, i32 0
  %154 = bitcast %class.SkMaskFilter** %153 to %class.SkFlattenable**
  %155 = load %class.SkFlattenable*, %class.SkFlattenable** %154, align 8
  %156 = icmp eq %class.SkFlattenable* %155, null
  %157 = add i64 %151, 7
  %158 = and i64 %157, -8
  %159 = sub i64 %158, %151
  %160 = icmp ult i64 %152, %159
  %161 = inttoptr i64 %151 to i8*
  %162 = inttoptr i64 %151 to i64*
  br i1 %160, label %163, label %164

163:                                              ; preds = %150
  store i8 0, i8* %8, align 8
  br label %172

164:                                              ; preds = %150
  %165 = load i8, i8* %8, align 8, !range !5
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %172, label %167

167:                                              ; preds = %164
  %168 = getelementptr inbounds i8, i8* %161, i64 %159
  store i8* %168, i8** %96, align 8
  %169 = sub i64 %152, %159
  store i64 %169, i64* %5, align 8
  %170 = bitcast i8* %168 to i64*
  %171 = ptrtoint i8* %168 to i64
  br label %172

172:                                              ; preds = %167, %164, %163
  %173 = phi i64 [ %171, %167 ], [ %151, %164 ], [ %151, %163 ]
  %174 = phi i8* [ %168, %167 ], [ %161, %164 ], [ %161, %163 ]
  %175 = phi i8 [ 1, %167 ], [ 0, %164 ], [ 0, %163 ]
  %176 = phi i64* [ %170, %167 ], [ %162, %164 ], [ %162, %163 ]
  %177 = phi i64 [ %169, %167 ], [ %152, %164 ], [ %152, %163 ]
  %178 = icmp ult i64 %177, 8
  br i1 %178, label %179, label %180

179:                                              ; preds = %172
  store i8 0, i8* %8, align 8
  br label %188

180:                                              ; preds = %172
  %181 = icmp eq i8 %175, 0
  br i1 %181, label %188, label %182

182:                                              ; preds = %180
  store i64 0, i64* %176, align 8
  %183 = load i8*, i8** %96, align 8
  %184 = getelementptr inbounds i8, i8* %183, i64 8
  store i8* %184, i8** %96, align 8
  %185 = load i64, i64* %5, align 8
  %186 = add i64 %185, -8
  store i64 %186, i64* %5, align 8
  %187 = ptrtoint i8* %184 to i64
  br label %188

188:                                              ; preds = %182, %180, %179
  %189 = phi i64 [ %173, %179 ], [ %173, %180 ], [ %187, %182 ]
  %190 = phi i64 [ %177, %179 ], [ %177, %180 ], [ %186, %182 ]
  %191 = phi i8* [ %174, %179 ], [ %174, %180 ], [ %184, %182 ]
  br i1 %156, label %208, label %192

192:                                              ; preds = %188
  %193 = load i8, i8* %8, align 8, !range !5
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %208, label %195

195:                                              ; preds = %192
  %196 = and i64 %190, -4
  %197 = tail call i64 @_ZNK13SkFlattenable9serializeEPvmPK13SkSerialProcs(%class.SkFlattenable* nonnull %155, i8* %191, i64 %196, %struct.SkSerialProcs* null) #12
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %199, label %202

199:                                              ; preds = %195
  store i8 0, i8* %8, align 8
  %200 = load i64, i64* %97, align 8
  %201 = load i64, i64* %5, align 8
  br label %208

202:                                              ; preds = %195
  store i64 %197, i64* %176, align 8
  %203 = load i8*, i8** %96, align 8
  %204 = getelementptr inbounds i8, i8* %203, i64 %197
  store i8* %204, i8** %96, align 8
  %205 = load i64, i64* %5, align 8
  %206 = sub i64 %205, %197
  store i64 %206, i64* %5, align 8
  %207 = ptrtoint i8* %204 to i64
  br label %208

208:                                              ; preds = %188, %192, %199, %202
  %209 = phi i64 [ %190, %188 ], [ %190, %192 ], [ %201, %199 ], [ %206, %202 ]
  %210 = phi i64 [ %189, %188 ], [ %189, %192 ], [ %200, %199 ], [ %207, %202 ]
  %211 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %1, i64 0, i32 3, i32 0
  %212 = bitcast %class.SkColorFilter** %211 to %class.SkFlattenable**
  %213 = load %class.SkFlattenable*, %class.SkFlattenable** %212, align 8
  %214 = icmp eq %class.SkFlattenable* %213, null
  %215 = add i64 %210, 7
  %216 = and i64 %215, -8
  %217 = sub i64 %216, %210
  %218 = icmp ult i64 %209, %217
  %219 = inttoptr i64 %210 to i8*
  %220 = inttoptr i64 %210 to i64*
  br i1 %218, label %221, label %222

221:                                              ; preds = %208
  store i8 0, i8* %8, align 8
  br label %229

222:                                              ; preds = %208
  %223 = load i8, i8* %8, align 8, !range !5
  %224 = icmp eq i8 %223, 0
  br i1 %224, label %229, label %225

225:                                              ; preds = %222
  %226 = getelementptr inbounds i8, i8* %219, i64 %217
  store i8* %226, i8** %96, align 8
  %227 = sub i64 %209, %217
  store i64 %227, i64* %5, align 8
  %228 = bitcast i8* %226 to i64*
  br label %229

229:                                              ; preds = %225, %222, %221
  %230 = phi i8* [ %226, %225 ], [ %219, %222 ], [ %219, %221 ]
  %231 = phi i8 [ 1, %225 ], [ 0, %222 ], [ 0, %221 ]
  %232 = phi i64* [ %228, %225 ], [ %220, %222 ], [ %220, %221 ]
  %233 = phi i64 [ %227, %225 ], [ %209, %222 ], [ %209, %221 ]
  %234 = icmp ult i64 %233, 8
  br i1 %234, label %235, label %236

235:                                              ; preds = %229
  store i8 0, i8* %8, align 8
  br label %243

236:                                              ; preds = %229
  %237 = icmp eq i8 %231, 0
  br i1 %237, label %243, label %238

238:                                              ; preds = %236
  store i64 0, i64* %232, align 8
  %239 = load i8*, i8** %96, align 8
  %240 = getelementptr inbounds i8, i8* %239, i64 8
  store i8* %240, i8** %96, align 8
  %241 = load i64, i64* %5, align 8
  %242 = add i64 %241, -8
  store i64 %242, i64* %5, align 8
  br label %243

243:                                              ; preds = %238, %236, %235
  %244 = phi i64 [ %233, %235 ], [ %233, %236 ], [ %242, %238 ]
  %245 = phi i8* [ %230, %235 ], [ %230, %236 ], [ %240, %238 ]
  br i1 %214, label %259, label %246

246:                                              ; preds = %243
  %247 = load i8, i8* %8, align 8, !range !5
  %248 = icmp eq i8 %247, 0
  br i1 %248, label %259, label %249

249:                                              ; preds = %246
  %250 = and i64 %244, -4
  %251 = tail call i64 @_ZNK13SkFlattenable9serializeEPvmPK13SkSerialProcs(%class.SkFlattenable* nonnull %213, i8* %245, i64 %250, %struct.SkSerialProcs* null) #12
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %253, label %254

253:                                              ; preds = %249
  store i8 0, i8* %8, align 8
  br label %259

254:                                              ; preds = %249
  store i64 %251, i64* %232, align 8
  %255 = load i8*, i8** %96, align 8
  %256 = getelementptr inbounds i8, i8* %255, i64 %251
  store i8* %256, i8** %96, align 8
  %257 = load i64, i64* %5, align 8
  %258 = sub i64 %257, %251
  store i64 %258, i64* %5, align 8
  br label %259

259:                                              ; preds = %243, %246, %253, %254
  %260 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 5
  %261 = load i8, i8* %260, align 1, !range !5
  %262 = icmp eq i8 %261, 0
  br i1 %262, label %293, label %263

263:                                              ; preds = %259
  %264 = load i64, i64* %97, align 8
  %265 = add i64 %264, 7
  %266 = and i64 %265, -8
  %267 = sub i64 %266, %264
  %268 = load i64, i64* %5, align 8
  %269 = icmp ult i64 %268, %267
  %270 = inttoptr i64 %264 to i8*
  %271 = inttoptr i64 %264 to i64*
  br i1 %269, label %272, label %273

272:                                              ; preds = %263
  store i8 0, i8* %8, align 8
  br label %280

273:                                              ; preds = %263
  %274 = load i8, i8* %8, align 8, !range !5
  %275 = icmp eq i8 %274, 0
  br i1 %275, label %280, label %276

276:                                              ; preds = %273
  %277 = getelementptr inbounds i8, i8* %270, i64 %267
  store i8* %277, i8** %96, align 8
  %278 = sub i64 %268, %267
  store i64 %278, i64* %5, align 8
  %279 = bitcast i8* %277 to i64*
  br label %280

280:                                              ; preds = %276, %273, %272
  %281 = phi i8 [ 1, %276 ], [ 0, %273 ], [ 0, %272 ]
  %282 = phi i64* [ %279, %276 ], [ %271, %273 ], [ %271, %272 ]
  %283 = phi i64 [ %278, %276 ], [ %268, %273 ], [ %268, %272 ]
  %284 = icmp ult i64 %283, 8
  br i1 %284, label %285, label %286

285:                                              ; preds = %280
  store i8 0, i8* %8, align 8
  br label %344

286:                                              ; preds = %280
  %287 = icmp eq i8 %281, 0
  br i1 %287, label %344, label %288

288:                                              ; preds = %286
  store i64 0, i64* %282, align 8
  %289 = load i8*, i8** %96, align 8
  %290 = getelementptr inbounds i8, i8* %289, i64 8
  store i8* %290, i8** %96, align 8
  %291 = load i64, i64* %5, align 8
  %292 = add i64 %291, -8
  store i64 %292, i64* %5, align 8
  br label %344

293:                                              ; preds = %259
  %294 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %1, i64 0, i32 4, i32 0
  %295 = bitcast %class.SkDrawLooper** %294 to %class.SkFlattenable**
  %296 = load %class.SkFlattenable*, %class.SkFlattenable** %295, align 8
  %297 = icmp eq %class.SkFlattenable* %296, null
  %298 = load i64, i64* %97, align 8
  %299 = add i64 %298, 7
  %300 = and i64 %299, -8
  %301 = sub i64 %300, %298
  %302 = load i64, i64* %5, align 8
  %303 = icmp ult i64 %302, %301
  %304 = inttoptr i64 %298 to i8*
  %305 = inttoptr i64 %298 to i64*
  br i1 %303, label %306, label %307

306:                                              ; preds = %293
  store i8 0, i8* %8, align 8
  br label %314

307:                                              ; preds = %293
  %308 = load i8, i8* %8, align 8, !range !5
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %314, label %310

310:                                              ; preds = %307
  %311 = getelementptr inbounds i8, i8* %304, i64 %301
  store i8* %311, i8** %96, align 8
  %312 = sub i64 %302, %301
  store i64 %312, i64* %5, align 8
  %313 = bitcast i8* %311 to i64*
  br label %314

314:                                              ; preds = %310, %307, %306
  %315 = phi i8* [ %311, %310 ], [ %304, %307 ], [ %304, %306 ]
  %316 = phi i8 [ 1, %310 ], [ 0, %307 ], [ 0, %306 ]
  %317 = phi i64* [ %313, %310 ], [ %305, %307 ], [ %305, %306 ]
  %318 = phi i64 [ %312, %310 ], [ %302, %307 ], [ %302, %306 ]
  %319 = icmp ult i64 %318, 8
  br i1 %319, label %320, label %321

320:                                              ; preds = %314
  store i8 0, i8* %8, align 8
  br label %328

321:                                              ; preds = %314
  %322 = icmp eq i8 %316, 0
  br i1 %322, label %328, label %323

323:                                              ; preds = %321
  store i64 0, i64* %317, align 8
  %324 = load i8*, i8** %96, align 8
  %325 = getelementptr inbounds i8, i8* %324, i64 8
  store i8* %325, i8** %96, align 8
  %326 = load i64, i64* %5, align 8
  %327 = add i64 %326, -8
  store i64 %327, i64* %5, align 8
  br label %328

328:                                              ; preds = %323, %321, %320
  %329 = phi i64 [ %318, %320 ], [ %318, %321 ], [ %327, %323 ]
  %330 = phi i8* [ %315, %320 ], [ %315, %321 ], [ %325, %323 ]
  br i1 %297, label %344, label %331

331:                                              ; preds = %328
  %332 = load i8, i8* %8, align 8, !range !5
  %333 = icmp eq i8 %332, 0
  br i1 %333, label %344, label %334

334:                                              ; preds = %331
  %335 = and i64 %329, -4
  %336 = tail call i64 @_ZNK13SkFlattenable9serializeEPvmPK13SkSerialProcs(%class.SkFlattenable* nonnull %296, i8* %330, i64 %335, %struct.SkSerialProcs* null) #12
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %338, label %339

338:                                              ; preds = %334
  store i8 0, i8* %8, align 8
  br label %344

339:                                              ; preds = %334
  store i64 %336, i64* %317, align 8
  %340 = load i8*, i8** %96, align 8
  %341 = getelementptr inbounds i8, i8* %340, i64 %336
  store i8* %341, i8** %96, align 8
  %342 = load i64, i64* %5, align 8
  %343 = sub i64 %342, %336
  store i64 %343, i64* %5, align 8
  br label %344

344:                                              ; preds = %339, %338, %331, %328, %288, %286, %285
  %345 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %1, i64 0, i32 5, i32 0
  %346 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %345, align 8
  tail call void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintFilter"* %346, %class.SkM44* dereferenceable(64) %2)
  %347 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %1, i64 0, i32 1, i32 0
  %348 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %347, align 8
  %349 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %1, i64 0, i32 10
  %350 = bitcast %union.anon.82* %349 to i16*
  %351 = load i16, i16* %350, align 8
  %352 = lshr i16 %351, 8
  %353 = and i16 %352, 3
  %354 = zext i16 %353 to i32
  tail call void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintShaderE15SkFilterQualityRK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintShader"* %348, i32 %354, %class.SkM44* dereferenceable(64) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintFilterERK5SkM44(%"class.cc::PaintOpWriter"*, %"class.cc::PaintFilter"*, %class.SkM44* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.cc::PaintFilter"* %1, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  %8 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %9 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %10 = bitcast %"class.cc::PaintOpWriter"* %0 to i64*
  br label %27

11:                                               ; preds = %145, %3
  %12 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %13, 4
  %15 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %14, label %16, label %17

16:                                               ; preds = %11
  store i8 0, i8* %15, align 8
  br label %313

17:                                               ; preds = %11
  %18 = load i8, i8* %15, align 8, !range !5
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %313, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  store i8 0, i8* %22, align 1
  %23 = load i8*, i8** %21, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 4
  store i8* %24, i8** %21, align 8
  %25 = load i64, i64* %12, align 8
  %26 = add i64 %25, -4
  store i64 %26, i64* %12, align 8
  br label %313

27:                                               ; preds = %5, %145
  %28 = phi %"class.cc::PaintFilter"* [ %1, %5 ], [ %147, %145 ]
  %29 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %28, i64 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = icmp ult i32 %30, 256
  br i1 %31, label %33, label %32, !prof !6

32:                                               ; preds = %27
  tail call void @llvm.trap() #12
  unreachable

33:                                               ; preds = %27
  %34 = trunc i32 %30 to i8
  %35 = load i64, i64* %6, align 8
  %36 = icmp ult i64 %35, 4
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  store i8 0, i8* %7, align 8
  br label %47

38:                                               ; preds = %33
  %39 = load i8, i8* %7, align 8, !range !5
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %38
  %42 = load i8*, i8** %8, align 8
  store i8 %34, i8* %42, align 1
  %43 = load i8*, i8** %8, align 8
  %44 = getelementptr inbounds i8, i8* %43, i64 4
  store i8* %44, i8** %8, align 8
  %45 = load i64, i64* %6, align 8
  %46 = add i64 %45, -4
  store i64 %46, i64* %6, align 8
  br label %47

47:                                               ; preds = %37, %38, %41
  %48 = phi i64 [ %35, %37 ], [ %35, %38 ], [ %46, %41 ]
  %49 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %28, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %50 = load i8, i8* %49, align 4, !range !5
  %51 = icmp eq i8 %50, 0
  %52 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %28, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %53 = select i1 %51, %struct.SkRect* null, %struct.SkRect* %52
  %54 = icmp ne %struct.SkRect* %53, null
  %55 = zext i1 %54 to i32
  %56 = icmp ult i64 %48, 4
  br i1 %56, label %57, label %58

57:                                               ; preds = %47
  store i8 0, i8* %7, align 8
  br label %67

58:                                               ; preds = %47
  %59 = load i8, i8* %7, align 8, !range !5
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %67, label %61

61:                                               ; preds = %58
  %62 = load i32*, i32** %9, align 8
  store i32 %55, i32* %62, align 4
  %63 = load i8*, i8** %8, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 4
  store i8* %64, i8** %8, align 8
  %65 = load i64, i64* %6, align 8
  %66 = add i64 %65, -4
  store i64 %66, i64* %6, align 8
  br label %67

67:                                               ; preds = %57, %58, %61
  %68 = phi i64 [ %48, %57 ], [ %48, %58 ], [ %66, %61 ]
  br i1 %54, label %69, label %82

69:                                               ; preds = %67
  %70 = icmp ult i64 %68, 16
  br i1 %70, label %71, label %72

71:                                               ; preds = %69
  store i8 0, i8* %7, align 8
  br label %313

72:                                               ; preds = %69
  %73 = load i8, i8* %7, align 8, !range !5
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %313, label %75

75:                                               ; preds = %72
  %76 = load i8*, i8** %8, align 8
  %77 = bitcast %struct.SkRect* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* nonnull align 4 %77, i64 16, i1 false) #12
  %78 = load i8*, i8** %8, align 8
  %79 = getelementptr inbounds i8, i8* %78, i64 16
  store i8* %79, i8** %8, align 8
  %80 = load i64, i64* %6, align 8
  %81 = add i64 %80, -16
  store i64 %81, i64* %6, align 8
  br label %82

82:                                               ; preds = %75, %67
  %83 = phi i64 [ %81, %75 ], [ %68, %67 ]
  %84 = load i8, i8* %7, align 8
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %313, label %86

86:                                               ; preds = %82
  %87 = load i64, i64* %10, align 8
  %88 = add i64 %87, 3
  %89 = and i64 %88, -4
  %90 = sub i64 %89, %87
  %91 = icmp ult i64 %83, %90
  %92 = inttoptr i64 %87 to i8*
  br i1 %91, label %93, label %95

93:                                               ; preds = %86
  %94 = inttoptr i64 %87 to i32*
  store i8 0, i8* %7, align 8
  br label %100

95:                                               ; preds = %86
  %96 = getelementptr inbounds i8, i8* %92, i64 %90
  store i8* %96, i8** %8, align 8
  %97 = sub i64 %83, %90
  store i64 %97, i64* %6, align 8
  %98 = bitcast i8* %96 to i32*
  %99 = ptrtoint i8* %96 to i64
  br label %100

100:                                              ; preds = %93, %95
  %101 = phi i32* [ %94, %93 ], [ %98, %95 ]
  %102 = phi i8* [ %92, %93 ], [ %96, %95 ]
  %103 = phi i64 [ %87, %93 ], [ %99, %95 ]
  %104 = phi i8 [ 0, %93 ], [ %84, %95 ]
  %105 = phi i64 [ %83, %93 ], [ %97, %95 ]
  %106 = load i32, i32* %29, align 8
  switch i32 %106, label %313 [
    i32 22, label %311
    i32 1, label %107
    i32 2, label %109
    i32 3, label %111
    i32 4, label %113
    i32 5, label %149
    i32 6, label %155
    i32 7, label %157
    i32 8, label %180
    i32 9, label %182
    i32 10, label %184
    i32 11, label %186
    i32 12, label %188
    i32 13, label %190
    i32 14, label %241
    i32 15, label %243
    i32 16, label %274
    i32 17, label %301
    i32 18, label %303
    i32 19, label %305
    i32 20, label %307
    i32 21, label %309
  ]

107:                                              ; preds = %100
  %108 = bitcast %"class.cc::PaintFilter"* %28 to %"class.cc::ColorFilterPaintFilter"*
  tail call void @_ZN2cc13PaintOpWriter5WriteERKNS_22ColorFilterPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::ColorFilterPaintFilter"* dereferenceable(72) %108, %class.SkM44* dereferenceable(64) %2)
  br label %313

109:                                              ; preds = %100
  %110 = bitcast %"class.cc::PaintFilter"* %28 to %"class.cc::BlurPaintFilter"*
  tail call void @_ZN2cc13PaintOpWriter5WriteERKNS_15BlurPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::BlurPaintFilter"* dereferenceable(80) %110, %class.SkM44* dereferenceable(64) %2)
  br label %313

111:                                              ; preds = %100
  %112 = bitcast %"class.cc::PaintFilter"* %28 to %"class.cc::DropShadowPaintFilter"*
  tail call void @_ZN2cc13PaintOpWriter5WriteERKNS_21DropShadowPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::DropShadowPaintFilter"* dereferenceable(88) %112, %class.SkM44* dereferenceable(64) %2)
  br label %313

113:                                              ; preds = %100
  %114 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %28, i64 1
  %115 = icmp ult i64 %105, 16
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  store i8 0, i8* %7, align 8
  br label %126

117:                                              ; preds = %113
  %118 = icmp eq i8 %104, 0
  br i1 %118, label %142, label %119

119:                                              ; preds = %117
  %120 = bitcast %"class.cc::PaintFilter"* %114 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %120, i64 16, i1 false) #12
  %121 = load i8*, i8** %8, align 8
  %122 = getelementptr inbounds i8, i8* %121, i64 16
  store i8* %122, i8** %8, align 8
  %123 = load i64, i64* %6, align 8
  %124 = add i64 %123, -16
  store i64 %124, i64* %6, align 8
  %125 = bitcast i8* %122 to i32*
  br label %126

126:                                              ; preds = %119, %116
  %127 = phi i32* [ %125, %119 ], [ %101, %116 ]
  %128 = phi i64 [ %124, %119 ], [ %105, %116 ]
  %129 = icmp ult i64 %128, 4
  br i1 %129, label %130, label %131

130:                                              ; preds = %126
  store i8 0, i8* %7, align 8
  br label %142

131:                                              ; preds = %126
  %132 = load i8, i8* %7, align 8, !range !5
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %142, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %28, i64 1, i32 1
  %136 = bitcast %class.sk_sp.76* %135 to i32*
  %137 = load i32, i32* %136, align 8
  store i32 %137, i32* %127, align 4
  %138 = load i8*, i8** %8, align 8
  %139 = getelementptr inbounds i8, i8* %138, i64 4
  store i8* %139, i8** %8, align 8
  %140 = load i64, i64* %6, align 8
  %141 = add i64 %140, -4
  store i64 %141, i64* %6, align 8
  br label %142

142:                                              ; preds = %117, %130, %131, %134
  %143 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %28, i64 1, i32 2
  %144 = bitcast i32* %143 to %"class.cc::PaintFilter"**
  br label %145

145:                                              ; preds = %142, %149, %174, %271, %298
  %146 = phi %"class.cc::PaintFilter"** [ %144, %142 ], [ %154, %149 ], [ %179, %174 ], [ %273, %271 ], [ %300, %298 ]
  %147 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %146, align 8
  %148 = icmp eq %"class.cc::PaintFilter"* %147, null
  br i1 %148, label %11, label %27

149:                                              ; preds = %100
  %150 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %28, i64 1
  %151 = bitcast %"class.cc::PaintFilter"* %150 to %"class.cc::PaintFilter"**
  %152 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %151, align 8
  tail call void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintFilter"* %152, %class.SkM44* dereferenceable(64) %2) #12
  %153 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %28, i64 1, i32 0, i32 0, i32 1
  %154 = bitcast %"struct.std::__1::atomic"* %153 to %"class.cc::PaintFilter"**
  br label %145

155:                                              ; preds = %100
  %156 = bitcast %"class.cc::PaintFilter"* %28 to %"class.cc::AlphaThresholdPaintFilter"*
  tail call void @_ZN2cc13PaintOpWriter5WriteERKNS_25AlphaThresholdPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::AlphaThresholdPaintFilter"* dereferenceable(96) %156, %class.SkM44* dereferenceable(64) %2)
  br label %313

157:                                              ; preds = %100
  %158 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %28, i64 1
  %159 = bitcast %"class.cc::PaintFilter"* %158 to i32*
  %160 = load i32, i32* %159, align 8
  %161 = icmp ult i32 %160, 256
  br i1 %161, label %163, label %162, !prof !6

162:                                              ; preds = %157
  tail call void @llvm.trap() #12
  unreachable

163:                                              ; preds = %157
  %164 = trunc i32 %160 to i8
  %165 = icmp ult i64 %105, 4
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  store i8 0, i8* %7, align 8
  br label %174

167:                                              ; preds = %163
  %168 = icmp eq i8 %104, 0
  br i1 %168, label %174, label %169

169:                                              ; preds = %167
  store i8 %164, i8* %102, align 1
  %170 = load i8*, i8** %8, align 8
  %171 = getelementptr inbounds i8, i8* %170, i64 4
  store i8* %171, i8** %8, align 8
  %172 = load i64, i64* %6, align 8
  %173 = add i64 %172, -4
  store i64 %173, i64* %6, align 8
  br label %174

174:                                              ; preds = %166, %167, %169
  %175 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %28, i64 1, i32 0, i32 0, i32 1
  %176 = bitcast %"struct.std::__1::atomic"* %175 to %"class.cc::PaintFilter"**
  %177 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %176, align 8
  tail call void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintFilter"* %177, %class.SkM44* dereferenceable(64) %2) #12
  %178 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %28, i64 1, i32 1
  %179 = bitcast %class.sk_sp.76* %178 to %"class.cc::PaintFilter"**
  br label %145

180:                                              ; preds = %100
  %181 = bitcast %"class.cc::PaintFilter"* %28 to %"class.cc::ArithmeticPaintFilter"*
  tail call void @_ZN2cc13PaintOpWriter5WriteERKNS_21ArithmeticPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::ArithmeticPaintFilter"* dereferenceable(96) %181, %class.SkM44* dereferenceable(64) %2)
  br label %313

182:                                              ; preds = %100
  %183 = bitcast %"class.cc::PaintFilter"* %28 to %"class.cc::MatrixConvolutionPaintFilter"*
  tail call void @_ZN2cc13PaintOpWriter5WriteERKNS_28MatrixConvolutionPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::MatrixConvolutionPaintFilter"* dereferenceable(152) %183, %class.SkM44* dereferenceable(64) %2)
  br label %313

184:                                              ; preds = %100
  %185 = bitcast %"class.cc::PaintFilter"* %28 to %"class.cc::DisplacementMapEffectPaintFilter"*
  tail call void @_ZN2cc13PaintOpWriter5WriteERKNS_32DisplacementMapEffectPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::DisplacementMapEffectPaintFilter"* dereferenceable(88) %185, %class.SkM44* dereferenceable(64) %2)
  br label %313

186:                                              ; preds = %100
  %187 = bitcast %"class.cc::PaintFilter"* %28 to %"class.cc::ImagePaintFilter"*
  tail call void @_ZN2cc13PaintOpWriter5WriteERKNS_16ImagePaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::ImagePaintFilter"* dereferenceable(200) %187, %class.SkM44* dereferenceable(64) undef)
  br label %313

188:                                              ; preds = %100
  %189 = bitcast %"class.cc::PaintFilter"* %28 to %"class.cc::RecordPaintFilter"*
  tail call void @_ZN2cc13PaintOpWriter5WriteERKNS_17RecordPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::RecordPaintFilter"* dereferenceable(96) %189, %class.SkM44* dereferenceable(64) %2)
  br label %313

190:                                              ; preds = %100
  %191 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %28, i64 1, i32 3, i32 0, i32 0, i32 0, i32 1
  %192 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %28, i64 1, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %193 = bitcast float* %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = bitcast %union.anon.81* %191 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = sub i64 %194, %196
  %198 = ashr exact i64 %197, 3
  %199 = add i64 %103, 7
  %200 = and i64 %199, -8
  %201 = sub i64 %200, %103
  %202 = icmp ult i64 %105, %201
  %203 = inttoptr i64 %103 to i8*
  %204 = inttoptr i64 %103 to i64*
  br i1 %202, label %205, label %206

205:                                              ; preds = %190
  store i8 0, i8* %7, align 8
  br label %212

206:                                              ; preds = %190
  %207 = icmp eq i8 %104, 0
  br i1 %207, label %212, label %208

208:                                              ; preds = %206
  %209 = getelementptr inbounds i8, i8* %203, i64 %201
  store i8* %209, i8** %8, align 8
  %210 = sub i64 %105, %201
  store i64 %210, i64* %6, align 8
  %211 = bitcast i8* %209 to i64*
  br label %212

212:                                              ; preds = %208, %206, %205
  %213 = phi i8 [ 1, %208 ], [ 0, %206 ], [ 0, %205 ]
  %214 = phi i64* [ %211, %208 ], [ %204, %206 ], [ %204, %205 ]
  %215 = phi i64 [ %210, %208 ], [ %105, %206 ], [ %105, %205 ]
  %216 = icmp ult i64 %215, 8
  br i1 %216, label %217, label %218

217:                                              ; preds = %212
  store i8 0, i8* %7, align 8
  br label %225

218:                                              ; preds = %212
  %219 = icmp eq i8 %213, 0
  br i1 %219, label %225, label %220

220:                                              ; preds = %218
  store i64 %198, i64* %214, align 8
  %221 = load i8*, i8** %8, align 8
  %222 = getelementptr inbounds i8, i8* %221, i64 8
  store i8* %222, i8** %8, align 8
  %223 = load i64, i64* %6, align 8
  %224 = add i64 %223, -8
  store i64 %224, i64* %6, align 8
  br label %225

225:                                              ; preds = %220, %218, %217
  %226 = load i64, i64* %193, align 8
  %227 = load i64, i64* %195, align 8
  %228 = icmp eq i64 %226, %227
  br i1 %228, label %313, label %229

229:                                              ; preds = %225, %229
  %230 = phi i64 [ %237, %229 ], [ %227, %225 ]
  %231 = phi i64 [ %235, %229 ], [ 0, %225 ]
  %232 = inttoptr i64 %230 to %class.sk_sp.75*
  %233 = getelementptr inbounds %class.sk_sp.75, %class.sk_sp.75* %232, i64 %231, i32 0
  %234 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %233, align 8
  tail call void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintFilter"* %234, %class.SkM44* dereferenceable(64) %2) #12
  %235 = add nuw i64 %231, 1
  %236 = load i64, i64* %193, align 8
  %237 = load i64, i64* %195, align 8
  %238 = sub i64 %236, %237
  %239 = ashr exact i64 %238, 3
  %240 = icmp ult i64 %235, %239
  br i1 %240, label %229, label %313

241:                                              ; preds = %100
  %242 = bitcast %"class.cc::PaintFilter"* %28 to %"class.cc::MorphologyPaintFilter"*
  tail call void @_ZN2cc13PaintOpWriter5WriteERKNS_21MorphologyPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::MorphologyPaintFilter"* dereferenceable(80) %242, %class.SkM44* dereferenceable(64) %2)
  br label %313

243:                                              ; preds = %100
  %244 = bitcast %"class.cc::PaintFilter"* %28 to %"class.cc::OffsetPaintFilter"*
  %245 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %28, i64 1
  %246 = bitcast %"class.cc::PaintFilter"* %245 to i32*
  %247 = load i32, i32* %246, align 8
  %248 = icmp ult i64 %105, 4
  br i1 %248, label %249, label %250

249:                                              ; preds = %243
  store i8 0, i8* %7, align 8
  br label %258

250:                                              ; preds = %243
  %251 = icmp eq i8 %104, 0
  br i1 %251, label %271, label %252

252:                                              ; preds = %250
  store i32 %247, i32* %101, align 4
  %253 = load i8*, i8** %8, align 8
  %254 = getelementptr inbounds i8, i8* %253, i64 4
  store i8* %254, i8** %8, align 8
  %255 = load i64, i64* %6, align 8
  %256 = add i64 %255, -4
  store i64 %256, i64* %6, align 8
  %257 = icmp ult i64 %256, 4
  br i1 %257, label %258, label %259

258:                                              ; preds = %249, %252
  store i8 0, i8* %7, align 8
  br label %271

259:                                              ; preds = %252
  %260 = load i8, i8* %7, align 8, !range !5
  %261 = icmp eq i8 %260, 0
  br i1 %261, label %271, label %262

262:                                              ; preds = %259
  %263 = bitcast i8* %254 to i32*
  %264 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %244, i64 0, i32 2
  %265 = bitcast float* %264 to i32*
  %266 = load i32, i32* %265, align 4
  store i32 %266, i32* %263, align 4
  %267 = load i8*, i8** %8, align 8
  %268 = getelementptr inbounds i8, i8* %267, i64 4
  store i8* %268, i8** %8, align 8
  %269 = load i64, i64* %6, align 8
  %270 = add i64 %269, -4
  store i64 %270, i64* %6, align 8
  br label %271

271:                                              ; preds = %250, %258, %259, %262
  %272 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %28, i64 1, i32 0, i32 0, i32 1
  %273 = bitcast %"struct.std::__1::atomic"* %272 to %"class.cc::PaintFilter"**
  br label %145

274:                                              ; preds = %100
  %275 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %28, i64 1
  %276 = icmp ult i64 %105, 16
  br i1 %276, label %277, label %278

277:                                              ; preds = %274
  store i8 0, i8* %7, align 8
  br label %288

278:                                              ; preds = %274
  %279 = icmp eq i8 %104, 0
  br i1 %279, label %298, label %280

280:                                              ; preds = %278
  %281 = bitcast %"class.cc::PaintFilter"* %275 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %281, i64 16, i1 false) #12
  %282 = load i8*, i8** %8, align 8
  %283 = getelementptr inbounds i8, i8* %282, i64 16
  store i8* %283, i8** %8, align 8
  %284 = load i64, i64* %6, align 8
  %285 = add i64 %284, -16
  store i64 %285, i64* %6, align 8
  %286 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %28, i64 1, i32 1
  %287 = icmp ult i64 %285, 16
  br i1 %287, label %288, label %289

288:                                              ; preds = %277, %280
  store i8 0, i8* %7, align 8
  br label %298

289:                                              ; preds = %280
  %290 = load i8, i8* %7, align 8
  %291 = icmp eq i8 %290, 0
  br i1 %291, label %298, label %292

292:                                              ; preds = %289
  %293 = bitcast %class.sk_sp.76* %286 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %283, i8* align 4 %293, i64 16, i1 false) #12
  %294 = load i8*, i8** %8, align 8
  %295 = getelementptr inbounds i8, i8* %294, i64 16
  store i8* %295, i8** %8, align 8
  %296 = load i64, i64* %6, align 8
  %297 = add i64 %296, -16
  store i64 %297, i64* %6, align 8
  br label %298

298:                                              ; preds = %278, %288, %289, %292
  %299 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %28, i64 1, i32 3, i32 0, i32 0, i32 0, i32 1
  %300 = bitcast %union.anon.81* %299 to %"class.cc::PaintFilter"**
  br label %145

301:                                              ; preds = %100
  %302 = bitcast %"class.cc::PaintFilter"* %28 to %"class.cc::TurbulencePaintFilter"*
  tail call void @_ZN2cc13PaintOpWriter5WriteERKNS_21TurbulencePaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::TurbulencePaintFilter"* dereferenceable(88) %302, %class.SkM44* dereferenceable(64) undef)
  br label %313

303:                                              ; preds = %100
  %304 = bitcast %"class.cc::PaintFilter"* %28 to %"class.cc::ShaderPaintFilter"*
  tail call void @_ZN2cc13PaintOpWriter5WriteERKNS_17ShaderPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::ShaderPaintFilter"* dereferenceable(80) %304, %class.SkM44* dereferenceable(64) %2)
  br label %313

305:                                              ; preds = %100
  %306 = bitcast %"class.cc::PaintFilter"* %28 to %"class.cc::MatrixPaintFilter"*
  tail call void @_ZN2cc13PaintOpWriter5WriteERKNS_17MatrixPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::MatrixPaintFilter"* dereferenceable(112) %306, %class.SkM44* dereferenceable(64) %2)
  br label %313

307:                                              ; preds = %100
  %308 = bitcast %"class.cc::PaintFilter"* %28 to %"class.cc::LightingDistantPaintFilter"*
  tail call void @_ZN2cc13PaintOpWriter5WriteERKNS_26LightingDistantPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::LightingDistantPaintFilter"* dereferenceable(96) %308, %class.SkM44* dereferenceable(64) %2)
  br label %313

309:                                              ; preds = %100
  %310 = bitcast %"class.cc::PaintFilter"* %28 to %"class.cc::LightingPointPaintFilter"*
  tail call void @_ZN2cc13PaintOpWriter5WriteERKNS_24LightingPointPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::LightingPointPaintFilter"* dereferenceable(96) %310, %class.SkM44* dereferenceable(64) %2)
  br label %313

311:                                              ; preds = %100
  %312 = bitcast %"class.cc::PaintFilter"* %28 to %"class.cc::LightingSpotPaintFilter"*
  tail call void @_ZN2cc13PaintOpWriter5WriteERKNS_23LightingSpotPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::LightingSpotPaintFilter"* dereferenceable(120) %312, %class.SkM44* dereferenceable(64) %2)
  br label %313

313:                                              ; preds = %72, %82, %100, %229, %225, %71, %20, %17, %16, %311, %309, %307, %305, %303, %301, %241, %188, %186, %184, %182, %180, %155, %111, %109, %107
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintShaderE15SkFilterQualityRK5SkM44(%"class.cc::PaintOpWriter"*, %"class.cc::PaintShader"*, i32, %class.SkM44* nocapture readonly dereferenceable(64)) local_unnamed_addr #6 align 2 {
  %5 = alloca %class.SkMatrix, align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.gfx::SizeF", align 4
  %8 = alloca i8, align 1
  %9 = alloca %"struct.gpu::Mailbox", align 1
  %10 = alloca %class.sk_sp.51, align 8
  %11 = alloca %"class.cc::DrawImage", align 8
  %12 = alloca %"class.cc::PaintImage", align 8
  %13 = alloca { i64, i64 }, align 8
  %14 = bitcast { i64, i64 }* %13 to %struct.SkIRect*
  %15 = alloca %class.SkM44, align 4
  %16 = alloca %"class.absl::optional.83", align 8
  %17 = alloca %"class.absl::optional.88", align 4
  %18 = alloca <2 x float>, align 8
  %19 = bitcast <2 x float>* %18 to %struct.SkSize*
  %20 = alloca { i64, i64 }, align 8
  %21 = bitcast { i64, i64 }* %20 to %"class.gfx::Rect"*
  %22 = alloca { <2 x float>, <2 x float> }, align 8
  %23 = bitcast { <2 x float>, <2 x float> }* %22 to %"class.gfx::RectF"*
  %24 = alloca { <2 x float>, <2 x float> }, align 8
  %25 = bitcast { <2 x float>, <2 x float> }* %24 to %struct.SkRect*
  %26 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #12
  store i32 -1, i32* %6, align 4
  %27 = bitcast %"class.gfx::SizeF"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %7, i64 0, i32 0
  %29 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %7, i64 0, i32 1
  store float 1.000000e+00, float* %28, align 4
  store float 1.000000e+00, float* %29, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #12
  store i8 0, i8* %8, align 1
  %30 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %9, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %30, i8 -86, i64 16, i1 false)
  call void @_ZN3gpu7MailboxC1Ev(%"struct.gpu::Mailbox"* nonnull %9) #12
  %31 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 5
  %32 = load i8, i8* %31, align 1, !range !5
  %33 = icmp eq i8 %32, 0
  %34 = icmp ne %"class.cc::PaintShader"* %1, null
  %35 = and i1 %34, %33
  br i1 %35, label %36, label %40

36:                                               ; preds = %4
  %37 = bitcast %class.sk_sp.51* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #12
  call void @_ZN2cc13PaintOpWriter26TransformShaderIfNecessaryEPKNS_11PaintShaderE15SkFilterQualityRK5SkM44PjPN3gfx5SizeFEPbPN3gpu7MailboxE(%class.sk_sp.51* nonnull sret %10, %"class.cc::PaintOpWriter"* %0, %"class.cc::PaintShader"* nonnull %1, i32 %2, %class.SkM44* dereferenceable(64) %3, i32* nonnull %6, %"class.gfx::SizeF"* nonnull %7, i8* nonnull %8, %"struct.gpu::Mailbox"* nonnull %9)
  %38 = getelementptr inbounds %class.sk_sp.51, %class.sk_sp.51* %10, i64 0, i32 0
  %39 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #12
  br label %40

40:                                               ; preds = %4, %36
  %41 = phi %"class.cc::PaintShader"* [ %39, %36 ], [ null, %4 ]
  %42 = phi %"class.cc::PaintShader"* [ %39, %36 ], [ %1, %4 ]
  %43 = icmp eq %"class.cc::PaintShader"* %42, null
  %44 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %45 = load i64, i64* %44, align 8
  %46 = icmp ult i64 %45, 4
  %47 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %43, label %48, label %60

48:                                               ; preds = %40
  br i1 %46, label %49, label %50

49:                                               ; preds = %48
  store i8 0, i8* %47, align 8
  br label %659

50:                                               ; preds = %48
  %51 = load i8, i8* %47, align 8, !range !5
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %659, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %55 = load i8*, i8** %54, align 8
  store i8 0, i8* %55, align 1
  %56 = load i8*, i8** %54, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 4
  store i8* %57, i8** %54, align 8
  %58 = load i64, i64* %44, align 8
  %59 = add i64 %58, -4
  store i64 %59, i64* %44, align 8
  br label %659

60:                                               ; preds = %40
  br i1 %46, label %61, label %62

61:                                               ; preds = %60
  store i8 0, i8* %47, align 8
  br label %74

62:                                               ; preds = %60
  %63 = load i8, i8* %47, align 8, !range !5
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %90, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %67 = load i8*, i8** %66, align 8
  store i8 1, i8* %67, align 1
  %68 = load i8*, i8** %66, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 4
  store i8* %69, i8** %66, align 8
  %70 = load i64, i64* %44, align 8
  %71 = add i64 %70, -4
  store i64 %71, i64* %44, align 8
  %72 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %42, i64 0, i32 1
  %73 = icmp ult i64 %71, 4
  br i1 %73, label %74, label %76

74:                                               ; preds = %65, %61
  %75 = phi i64 [ %45, %61 ], [ %71, %65 ]
  store i8 0, i8* %47, align 8
  br label %88

76:                                               ; preds = %65
  %77 = load i8, i8* %47, align 8
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %90, label %79

79:                                               ; preds = %76
  %80 = load i8, i8* %72, align 1
  %81 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %82 = load i8*, i8** %81, align 8
  store i8 %80, i8* %82, align 1
  %83 = load i8*, i8** %81, align 8
  %84 = getelementptr inbounds i8, i8* %83, i64 4
  store i8* %84, i8** %81, align 8
  %85 = load i64, i64* %44, align 8
  %86 = add i64 %85, -4
  store i64 %86, i64* %44, align 8
  %87 = icmp ult i64 %86, 4
  br i1 %87, label %88, label %90

88:                                               ; preds = %79, %74
  %89 = phi i64 [ %75, %74 ], [ %86, %79 ]
  store i8 0, i8* %47, align 8
  br label %106

90:                                               ; preds = %62, %76, %79
  %91 = phi i64 [ %86, %79 ], [ %71, %76 ], [ %45, %62 ]
  %92 = load i8, i8* %47, align 8, !range !5
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %124, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %42, i64 0, i32 3
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %98 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %99 = load i32*, i32** %98, align 8
  store i32 %96, i32* %99, align 4
  %100 = load i8*, i8** %97, align 8
  %101 = getelementptr inbounds i8, i8* %100, i64 4
  store i8* %101, i8** %97, align 8
  %102 = load i64, i64* %44, align 8
  %103 = add i64 %102, -4
  store i64 %103, i64* %44, align 8
  %104 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %42, i64 0, i32 4
  %105 = icmp ult i64 %103, 4
  br i1 %105, label %106, label %108

106:                                              ; preds = %94, %88
  %107 = phi i64 [ %89, %88 ], [ %103, %94 ]
  store i8 0, i8* %47, align 8
  br label %122

108:                                              ; preds = %94
  %109 = load i8, i8* %47, align 8
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %124, label %111

111:                                              ; preds = %108
  %112 = bitcast float* %104 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %115 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %116 = load i32*, i32** %115, align 8
  store i32 %113, i32* %116, align 4
  %117 = load i8*, i8** %114, align 8
  %118 = getelementptr inbounds i8, i8* %117, i64 4
  store i8* %118, i8** %114, align 8
  %119 = load i64, i64* %44, align 8
  %120 = add i64 %119, -4
  store i64 %120, i64* %44, align 8
  %121 = icmp ult i64 %120, 4
  br i1 %121, label %122, label %124

122:                                              ; preds = %106, %111
  %123 = phi i64 [ %107, %106 ], [ %120, %111 ]
  store i8 0, i8* %47, align 8
  br label %139

124:                                              ; preds = %90, %108, %111
  %125 = phi i64 [ %120, %111 ], [ %103, %108 ], [ %91, %90 ]
  %126 = load i8, i8* %47, align 8, !range !5
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %139, label %128

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %42, i64 0, i32 5
  %130 = bitcast float* %129 to i32*
  %131 = load i32, i32* %130, align 4
  %132 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %133 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %134 = load i32*, i32** %133, align 8
  store i32 %131, i32* %134, align 4
  %135 = load i8*, i8** %132, align 8
  %136 = getelementptr inbounds i8, i8* %135, i64 4
  store i8* %136, i8** %132, align 8
  %137 = load i64, i64* %44, align 8
  %138 = add i64 %137, -4
  store i64 %138, i64* %44, align 8
  br label %139

139:                                              ; preds = %122, %124, %128
  %140 = phi i64 [ %123, %122 ], [ %125, %124 ], [ %138, %128 ]
  %141 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %42, i64 0, i32 6
  %142 = load i32, i32* %141, align 4
  %143 = icmp ult i32 %142, 256
  br i1 %143, label %145, label %144, !prof !6

144:                                              ; preds = %139
  call void @llvm.trap() #12
  unreachable

145:                                              ; preds = %139
  %146 = trunc i32 %142 to i8
  %147 = icmp ult i64 %140, 4
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  store i8 0, i8* %47, align 8
  br label %159

149:                                              ; preds = %145
  %150 = load i8, i8* %47, align 8, !range !5
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %159, label %152

152:                                              ; preds = %149
  %153 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %154 = load i8*, i8** %153, align 8
  store i8 %146, i8* %154, align 1
  %155 = load i8*, i8** %153, align 8
  %156 = getelementptr inbounds i8, i8* %155, i64 4
  store i8* %156, i8** %153, align 8
  %157 = load i64, i64* %44, align 8
  %158 = add i64 %157, -4
  store i64 %158, i64* %44, align 8
  br label %159

159:                                              ; preds = %148, %149, %152
  %160 = phi i64 [ %140, %148 ], [ %140, %149 ], [ %158, %152 ]
  %161 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %42, i64 0, i32 7
  %162 = load i32, i32* %161, align 8
  %163 = icmp ult i32 %162, 256
  br i1 %163, label %165, label %164, !prof !6

164:                                              ; preds = %159
  call void @llvm.trap() #12
  unreachable

165:                                              ; preds = %159
  %166 = trunc i32 %162 to i8
  %167 = icmp ult i64 %160, 4
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  store i8 0, i8* %47, align 8
  br label %182

169:                                              ; preds = %165
  %170 = load i8, i8* %47, align 8, !range !5
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %196, label %172

172:                                              ; preds = %169
  %173 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %174 = load i8*, i8** %173, align 8
  store i8 %166, i8* %174, align 1
  %175 = load i8*, i8** %173, align 8
  %176 = getelementptr inbounds i8, i8* %175, i64 4
  store i8* %176, i8** %173, align 8
  %177 = load i64, i64* %44, align 8
  %178 = add i64 %177, -4
  store i64 %178, i64* %44, align 8
  %179 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %42, i64 0, i32 8
  %180 = icmp ult i64 %178, 4
  %181 = bitcast i8* %176 to i32*
  br i1 %180, label %182, label %184

182:                                              ; preds = %172, %168
  %183 = phi i64 [ %160, %168 ], [ %178, %172 ]
  store i8 0, i8* %47, align 8
  br label %194

184:                                              ; preds = %172
  %185 = load i8, i8* %47, align 8
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %196, label %187

187:                                              ; preds = %184
  %188 = load i32, i32* %179, align 4
  store i32 %188, i32* %181, align 4
  %189 = load i8*, i8** %173, align 8
  %190 = getelementptr inbounds i8, i8* %189, i64 4
  store i8* %190, i8** %173, align 8
  %191 = load i64, i64* %44, align 8
  %192 = add i64 %191, -4
  store i64 %192, i64* %44, align 8
  %193 = icmp ult i64 %192, 4
  br i1 %193, label %194, label %196

194:                                              ; preds = %182, %187
  %195 = phi i64 [ %183, %182 ], [ %192, %187 ]
  store i8 0, i8* %47, align 8
  br label %209

196:                                              ; preds = %184, %169, %187
  %197 = phi i64 [ %192, %187 ], [ %178, %184 ], [ %160, %169 ]
  %198 = load i8, i8* %47, align 8, !range !5
  %199 = icmp eq i8 %198, 0
  br i1 %199, label %209, label %200

200:                                              ; preds = %196
  %201 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %42, i64 0, i32 9
  %202 = load i8, i8* %201, align 1
  %203 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %204 = load i8*, i8** %203, align 8
  store i8 %202, i8* %204, align 1
  %205 = load i8*, i8** %203, align 8
  %206 = getelementptr inbounds i8, i8* %205, i64 4
  store i8* %206, i8** %203, align 8
  %207 = load i64, i64* %44, align 8
  %208 = add i64 %207, -4
  store i64 %208, i64* %44, align 8
  br label %209

209:                                              ; preds = %194, %196, %200
  %210 = phi i64 [ %195, %194 ], [ %197, %196 ], [ %208, %200 ]
  %211 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %42, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %212 = load i8, i8* %211, align 4, !range !5
  %213 = icmp eq i8 %212, 0
  %214 = icmp ult i64 %210, 4
  br i1 %213, label %263, label %215

215:                                              ; preds = %209
  br i1 %214, label %216, label %217

216:                                              ; preds = %215
  store i8 0, i8* %47, align 8
  br label %227

217:                                              ; preds = %215
  %218 = load i8, i8* %47, align 8, !range !5
  %219 = icmp eq i8 %218, 0
  br i1 %219, label %227, label %220

220:                                              ; preds = %217
  %221 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %222 = load i8*, i8** %221, align 8
  store i8 1, i8* %222, align 1
  %223 = load i8*, i8** %221, align 8
  %224 = getelementptr inbounds i8, i8* %223, i64 4
  store i8* %224, i8** %221, align 8
  %225 = load i64, i64* %44, align 8
  %226 = add i64 %225, -4
  store i64 %226, i64* %44, align 8
  br label %227

227:                                              ; preds = %216, %217, %220
  %228 = load i8, i8* %211, align 4, !range !5
  %229 = icmp eq i8 %228, 0
  br i1 %229, label %230, label %231, !prof !7

230:                                              ; preds = %227
  call void @llvm.trap() #12
  unreachable

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %42, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  %233 = bitcast %class.SkMatrix* %232 to i8*
  %234 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %234)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %234, i8* align 4 %233, i64 40, i1 false)
  %235 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %236 = load i32, i32* %235, align 4
  %237 = trunc i32 %236 to i8
  %238 = icmp slt i8 %237, 0
  br i1 %238, label %239, label %242

239:                                              ; preds = %231
  %240 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %5) #12
  %241 = zext i8 %240 to i32
  store i32 %241, i32* %235, align 4
  br label %242

242:                                              ; preds = %239, %231
  %243 = phi i32 [ %241, %239 ], [ %236, %231 ]
  %244 = and i32 %243, 15
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %247, label %246

246:                                              ; preds = %242
  store i32 128, i32* %235, align 4
  br label %247

247:                                              ; preds = %246, %242
  %248 = load i64, i64* %44, align 8
  %249 = icmp ult i64 %248, 40
  br i1 %249, label %250, label %251

250:                                              ; preds = %247
  store i8 0, i8* %47, align 8
  br label %261

251:                                              ; preds = %247
  %252 = load i8, i8* %47, align 8, !range !5
  %253 = icmp eq i8 %252, 0
  br i1 %253, label %261, label %254

254:                                              ; preds = %251
  %255 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %256 = load i8*, i8** %255, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %256, i8* nonnull align 8 %234, i64 40, i1 false) #12
  %257 = load i8*, i8** %255, align 8
  %258 = getelementptr inbounds i8, i8* %257, i64 40
  store i8* %258, i8** %255, align 8
  %259 = load i64, i64* %44, align 8
  %260 = add i64 %259, -40
  store i64 %260, i64* %44, align 8
  br label %261

261:                                              ; preds = %250, %251, %254
  %262 = phi i64 [ %248, %250 ], [ %248, %251 ], [ %260, %254 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %234)
  br label %275

263:                                              ; preds = %209
  br i1 %214, label %264, label %265

264:                                              ; preds = %263
  store i8 0, i8* %47, align 8
  br label %279

265:                                              ; preds = %263
  %266 = load i8, i8* %47, align 8, !range !5
  %267 = icmp eq i8 %266, 0
  br i1 %267, label %275, label %268

268:                                              ; preds = %265
  %269 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %270 = load i8*, i8** %269, align 8
  store i8 0, i8* %270, align 1
  %271 = load i8*, i8** %269, align 8
  %272 = getelementptr inbounds i8, i8* %271, i64 4
  store i8* %272, i8** %269, align 8
  %273 = load i64, i64* %44, align 8
  %274 = add i64 %273, -4
  store i64 %274, i64* %44, align 8
  br label %275

275:                                              ; preds = %268, %265, %261
  %276 = phi i64 [ %274, %268 ], [ %210, %265 ], [ %262, %261 ]
  %277 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %42, i64 0, i32 12
  %278 = icmp ult i64 %276, 8
  br i1 %278, label %279, label %282

279:                                              ; preds = %275, %264
  %280 = phi i64 [ %210, %264 ], [ %276, %275 ]
  store i8 0, i8* %47, align 8
  %281 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %42, i64 0, i32 13
  br label %299

282:                                              ; preds = %275
  %283 = load i8, i8* %47, align 8, !range !5
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %295, label %285

285:                                              ; preds = %282
  %286 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %287 = bitcast %"class.cc::PaintOpWriter"* %0 to i64**
  %288 = load i64*, i64** %287, align 8
  %289 = bitcast %struct.SkPoint* %277 to i64*
  %290 = load i64, i64* %289, align 4
  store i64 %290, i64* %288, align 4
  %291 = load i8*, i8** %286, align 8
  %292 = getelementptr inbounds i8, i8* %291, i64 8
  store i8* %292, i8** %286, align 8
  %293 = load i64, i64* %44, align 8
  %294 = add i64 %293, -8
  store i64 %294, i64* %44, align 8
  br label %295

295:                                              ; preds = %282, %285
  %296 = phi i64 [ %294, %285 ], [ %276, %282 ]
  %297 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %42, i64 0, i32 13
  %298 = icmp ult i64 %296, 16
  br i1 %298, label %299, label %302

299:                                              ; preds = %279, %295
  %300 = phi %struct.SkRect* [ %281, %279 ], [ %297, %295 ]
  %301 = phi i64 [ %280, %279 ], [ %296, %295 ]
  store i8 0, i8* %47, align 8
  br label %313

302:                                              ; preds = %295
  %303 = load i8, i8* %47, align 8, !range !5
  %304 = icmp eq i8 %303, 0
  br i1 %304, label %335, label %305

305:                                              ; preds = %302
  %306 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %307 = load i8*, i8** %306, align 8
  %308 = bitcast %struct.SkRect* %297 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %307, i8* align 4 %308, i64 16, i1 false) #12
  %309 = load i8*, i8** %306, align 8
  %310 = getelementptr inbounds i8, i8* %309, i64 16
  store i8* %310, i8** %306, align 8
  %311 = load i64, i64* %44, align 8
  %312 = add i64 %311, -16
  store i64 %312, i64* %44, align 8
  br label %313

313:                                              ; preds = %299, %305
  %314 = phi %struct.SkRect* [ %297, %305 ], [ %300, %299 ]
  %315 = phi i64 [ %312, %305 ], [ %301, %299 ]
  %316 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %42, i64 0, i32 14
  %317 = icmp ult i64 %315, 8
  br i1 %317, label %318, label %319

318:                                              ; preds = %313
  store i8 0, i8* %47, align 8
  br label %333

319:                                              ; preds = %313
  %320 = load i8, i8* %47, align 8
  %321 = icmp eq i8 %320, 0
  br i1 %321, label %335, label %322

322:                                              ; preds = %319
  %323 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %324 = bitcast %"class.cc::PaintOpWriter"* %0 to i64**
  %325 = load i64*, i64** %324, align 8
  %326 = bitcast %struct.SkPoint* %316 to i64*
  %327 = load i64, i64* %326, align 4
  store i64 %327, i64* %325, align 4
  %328 = load i8*, i8** %323, align 8
  %329 = getelementptr inbounds i8, i8* %328, i64 8
  store i8* %329, i8** %323, align 8
  %330 = load i64, i64* %44, align 8
  %331 = add i64 %330, -8
  store i64 %331, i64* %44, align 8
  %332 = icmp ult i64 %331, 8
  br i1 %332, label %333, label %335

333:                                              ; preds = %318, %322
  %334 = phi i64 [ %315, %318 ], [ %331, %322 ]
  store i8 0, i8* %47, align 8
  br label %350

335:                                              ; preds = %302, %319, %322
  %336 = phi %struct.SkRect* [ %314, %322 ], [ %314, %319 ], [ %297, %302 ]
  %337 = load i8, i8* %47, align 8, !range !5
  %338 = icmp eq i8 %337, 0
  br i1 %338, label %371, label %339

339:                                              ; preds = %335
  %340 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %42, i64 0, i32 15
  %341 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %342 = bitcast %"class.cc::PaintOpWriter"* %0 to i64**
  %343 = load i64*, i64** %342, align 8
  %344 = bitcast %struct.SkPoint* %340 to i64*
  %345 = load i64, i64* %344, align 4
  store i64 %345, i64* %343, align 4
  %346 = load i8*, i8** %341, align 8
  %347 = getelementptr inbounds i8, i8* %346, i64 8
  store i8* %347, i8** %341, align 8
  %348 = load i64, i64* %44, align 8
  %349 = add i64 %348, -8
  store i64 %349, i64* %44, align 8
  br label %350

350:                                              ; preds = %333, %339
  %351 = phi %struct.SkRect* [ %336, %339 ], [ %314, %333 ]
  %352 = phi i64 [ %349, %339 ], [ %334, %333 ]
  %353 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %42, i64 0, i32 16
  %354 = icmp ult i64 %352, 4
  br i1 %354, label %355, label %356

355:                                              ; preds = %350
  store i8 0, i8* %47, align 8
  br label %370

356:                                              ; preds = %350
  %357 = load i8, i8* %47, align 8
  %358 = icmp eq i8 %357, 0
  br i1 %358, label %371, label %359

359:                                              ; preds = %356
  %360 = bitcast float* %353 to i32*
  %361 = load i32, i32* %360, align 4
  %362 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %363 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %364 = load i32*, i32** %363, align 8
  store i32 %361, i32* %364, align 4
  %365 = load i8*, i8** %362, align 8
  %366 = getelementptr inbounds i8, i8* %365, i64 4
  store i8* %366, i8** %362, align 8
  %367 = load i64, i64* %44, align 8
  %368 = add i64 %367, -4
  store i64 %368, i64* %44, align 8
  %369 = icmp ult i64 %368, 4
  br i1 %369, label %370, label %371

370:                                              ; preds = %355, %359
  store i8 0, i8* %47, align 8
  br label %386

371:                                              ; preds = %335, %356, %359
  %372 = phi %struct.SkRect* [ %351, %359 ], [ %351, %356 ], [ %336, %335 ]
  %373 = load i8, i8* %47, align 8, !range !5
  %374 = icmp eq i8 %373, 0
  br i1 %374, label %386, label %375

375:                                              ; preds = %371
  %376 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %42, i64 0, i32 17
  %377 = bitcast float* %376 to i32*
  %378 = load i32, i32* %377, align 4
  %379 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %380 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %381 = load i32*, i32** %380, align 8
  store i32 %378, i32* %381, align 4
  %382 = load i8*, i8** %379, align 8
  %383 = getelementptr inbounds i8, i8* %382, i64 4
  store i8* %383, i8** %379, align 8
  %384 = load i64, i64* %44, align 8
  %385 = add i64 %384, -4
  store i64 %385, i64* %44, align 8
  br label %386

386:                                              ; preds = %370, %371, %375
  %387 = phi %struct.SkRect* [ %351, %370 ], [ %372, %371 ], [ %372, %375 ]
  %388 = load i8, i8* %31, align 1, !range !5
  %389 = icmp eq i8 %388, 0
  br i1 %389, label %421, label %390

390:                                              ; preds = %386
  %391 = bitcast %"class.cc::DrawImage"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %391) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %391, i8* align 8 bitcast (<{ { %class.sk_sp.12, %class.sk_sp.13, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.15, %class.sk_sp.16, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.12, %class.scoped_refptr }, i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.87 } } } }, { { { { i8, [3 x i8], %union.anon.92 } } } }, float, [4 x i8] }>* @__const._ZN2cc13PaintOpWriter5WriteERKNS_16ImagePaintFilterERK5SkM44.draw_image to i8*), i64 240, i1 false)
  %392 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %42, i64 0, i32 18
  call void @_ZN2cc10PaintImageC1ERKS0_(%"class.cc::PaintImage"* nonnull %12, %"class.cc::PaintImage"* dereferenceable(104) %392) #12
  %393 = bitcast { i64, i64 }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %393) #12
  %394 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %42, i64 0, i32 18, i32 15, i32 0
  %395 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %394, align 8
  %396 = icmp eq %"class.cc::PaintWorkletInput"* %395, null
  br i1 %396, label %397, label %405

397:                                              ; preds = %390
  %398 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %42, i64 0, i32 18, i32 14, i32 0
  %399 = load %class.SkImage*, %class.SkImage** %398, align 8
  %400 = icmp eq %class.SkImage* %399, null
  br i1 %400, label %401, label %405

401:                                              ; preds = %397
  %402 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %42, i64 0, i32 18, i32 5, i32 0
  %403 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %402, align 8
  %404 = icmp eq %"class.cc::TextureBacking"* %403, null
  br i1 %404, label %412, label %405

405:                                              ; preds = %401, %397, %390
  %406 = call i32 @_ZNK2cc10PaintImage5widthEv(%"class.cc::PaintImage"* %392) #12
  %407 = call i32 @_ZNK2cc10PaintImage6heightEv(%"class.cc::PaintImage"* %392) #12
  %408 = zext i32 %407 to i64
  %409 = shl nuw i64 %408, 32
  %410 = zext i32 %406 to i64
  %411 = or i64 %409, %410
  br label %412

412:                                              ; preds = %401, %405
  %413 = phi i64 [ %411, %405 ], [ 0, %401 ]
  %414 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 0
  store i64 0, i64* %414, align 8
  %415 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 1
  store i64 %413, i64* %415, align 8
  %416 = bitcast %class.SkM44* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %416) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %416, i8* align 4 bitcast ([16 x float]* @constinit to i8*), i64 64, i1 false) #12
  %417 = getelementptr inbounds %"class.absl::optional.83", %"class.absl::optional.83"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %417, align 8
  %418 = getelementptr inbounds %"class.absl::optional.88", %"class.absl::optional.88"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %418) #12
  store i8 0, i8* %418, align 4
  %419 = getelementptr inbounds %"class.absl::optional.88", %"class.absl::optional.88"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 4 %419, i8 0, i64 68, i1 false) #12
  call void @_ZN2cc9DrawImageC1ENS_10PaintImageEbRK7SkIRect15SkFilterQualityRK5SkM44N4absl8optionalImEERKNSA_IN3gfx10ColorSpaceEEEf(%"class.cc::DrawImage"* nonnull %11, %"class.cc::PaintImage"* nonnull %12, i1 zeroext false, %struct.SkIRect* nonnull dereferenceable(16) %14, i32 %2, %class.SkM44* nonnull dereferenceable(64) %15, %"class.absl::optional.83"* nonnull byval(%"class.absl::optional.83") align 8 %16, %"class.absl::optional.88"* nonnull dereferenceable(72) %17, float 1.000000e+02) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %418) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %416) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %393) #12
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %12) #12
  %420 = bitcast <2 x float>* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %420) #12
  store <2 x float> <float 1.000000e+00, float 1.000000e+00>, <2 x float>* %18, align 8
  call void @_ZN2cc13PaintOpWriter5WriteERKNS_9DrawImageEP6SkSize(%"class.cc::PaintOpWriter"* %0, %"class.cc::DrawImage"* nonnull dereferenceable(240) %11, %struct.SkSize* nonnull %19)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %420) #12
  call void @_ZN2cc9DrawImageD1Ev(%"class.cc::DrawImage"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %391) #12
  br label %455

421:                                              ; preds = %386
  %422 = call zeroext i1 @_ZNK3gpu7Mailbox6IsZeroEv(%"struct.gpu::Mailbox"* nonnull %9) #12
  br i1 %422, label %451, label %423

423:                                              ; preds = %421
  %424 = load i64, i64* %44, align 8
  %425 = icmp ult i64 %424, 4
  br i1 %425, label %426, label %427

426:                                              ; preds = %423
  store i8 0, i8* %47, align 8
  br label %440

427:                                              ; preds = %423
  %428 = load i8, i8* %47, align 8, !range !5
  %429 = icmp eq i8 %428, 0
  br i1 %429, label %437, label %430

430:                                              ; preds = %427
  %431 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %432 = load i8*, i8** %431, align 8
  store i8 3, i8* %432, align 1
  %433 = load i8*, i8** %431, align 8
  %434 = getelementptr inbounds i8, i8* %433, i64 4
  store i8* %434, i8** %431, align 8
  %435 = load i64, i64* %44, align 8
  %436 = add i64 %435, -4
  store i64 %436, i64* %44, align 8
  br label %437

437:                                              ; preds = %430, %427
  %438 = phi i64 [ %436, %430 ], [ %424, %427 ]
  %439 = icmp ult i64 %438, 16
  br i1 %439, label %440, label %441

440:                                              ; preds = %437, %426
  store i8 0, i8* %47, align 8
  br label %455

441:                                              ; preds = %437
  %442 = load i8, i8* %47, align 8
  %443 = icmp eq i8 %442, 0
  br i1 %443, label %455, label %444

444:                                              ; preds = %441
  %445 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %446 = load i8*, i8** %445, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %446, i8* nonnull align 1 %30, i64 16, i1 false) #12
  %447 = load i8*, i8** %445, align 8
  %448 = getelementptr inbounds i8, i8* %447, i64 16
  store i8* %448, i8** %445, align 8
  %449 = load i64, i64* %44, align 8
  %450 = add i64 %449, -16
  store i64 %450, i64* %44, align 8
  br label %457

451:                                              ; preds = %421
  %452 = load i32, i32* %6, align 4
  %453 = load i8, i8* %8, align 1, !range !5
  %454 = icmp ne i8 %453, 0
  call void @_ZN2cc13PaintOpWriter10WriteImageEjb(%"class.cc::PaintOpWriter"* %0, i32 %452, i1 zeroext %454)
  br label %455

455:                                              ; preds = %412, %451, %440, %441
  %456 = load i64, i64* %44, align 8
  br label %457

457:                                              ; preds = %455, %444
  %458 = phi i64 [ %456, %455 ], [ %450, %444 ]
  %459 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %42, i64 0, i32 19, i32 0
  %460 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %459, align 8
  %461 = icmp eq %"class.cc::PaintOpBuffer"* %460, null
  %462 = icmp ult i64 %458, 4
  br i1 %461, label %523, label %463

463:                                              ; preds = %457
  br i1 %462, label %464, label %465

464:                                              ; preds = %463
  store i8 0, i8* %47, align 8
  br label %475

465:                                              ; preds = %463
  %466 = load i8, i8* %47, align 8, !range !5
  %467 = icmp eq i8 %466, 0
  br i1 %467, label %475, label %468

468:                                              ; preds = %465
  %469 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %470 = load i8*, i8** %469, align 8
  store i8 1, i8* %470, align 1
  %471 = load i8*, i8** %469, align 8
  %472 = getelementptr inbounds i8, i8* %471, i64 4
  store i8* %472, i8** %469, align 8
  %473 = load i64, i64* %44, align 8
  %474 = add i64 %473, -4
  store i64 %474, i64* %44, align 8
  br label %475

475:                                              ; preds = %464, %465, %468
  %476 = phi i64 [ %458, %464 ], [ %458, %465 ], [ %474, %468 ]
  %477 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 3
  %478 = load %"struct.cc::PaintOp::SerializeOptions"*, %"struct.cc::PaintOp::SerializeOptions"** %477, align 8
  %479 = getelementptr inbounds %"struct.cc::PaintOp::SerializeOptions", %"struct.cc::PaintOp::SerializeOptions"* %478, i64 0, i32 9
  %480 = load i8, i8* %479, align 8, !range !5
  %481 = icmp eq i8 %480, 0
  br i1 %481, label %482, label %498

482:                                              ; preds = %475
  %483 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %42, i64 0, i32 20
  %484 = load i32, i32* %483, align 8
  %485 = icmp ult i64 %476, 4
  br i1 %485, label %486, label %487

486:                                              ; preds = %482
  store i8 0, i8* %47, align 8
  br label %498

487:                                              ; preds = %482
  %488 = load i8, i8* %47, align 8, !range !5
  %489 = icmp eq i8 %488, 0
  br i1 %489, label %498, label %490

490:                                              ; preds = %487
  %491 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %492 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %493 = load i32*, i32** %492, align 8
  store i32 %484, i32* %493, align 4
  %494 = load i8*, i8** %491, align 8
  %495 = getelementptr inbounds i8, i8* %494, i64 4
  store i8* %495, i8** %491, align 8
  %496 = load i64, i64* %44, align 8
  %497 = add i64 %496, -4
  store i64 %497, i64* %44, align 8
  br label %498

498:                                              ; preds = %490, %487, %486, %475
  %499 = bitcast { i64, i64 }* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %499) #12
  %500 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i64 0, i32 1
  %501 = bitcast { <2 x float>, <2 x float> }* %22 to i8*
  %502 = bitcast { i64, i64 }* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %502, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %501) #12
  %503 = bitcast { <2 x float>, <2 x float> }* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %503) #12
  %504 = bitcast %struct.SkRect* %387 to i64*
  %505 = load i64, i64* %504, align 8
  %506 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %42, i64 0, i32 13, i32 2
  %507 = bitcast float* %506 to i64*
  %508 = load i64, i64* %507, align 8
  %509 = bitcast { <2 x float>, <2 x float> }* %24 to i64*
  store i64 %505, i64* %509, align 8
  %510 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %24, i64 0, i32 1
  %511 = bitcast <2 x float>* %510 to i64*
  store i64 %508, i64* %511, align 8
  %512 = call { <2 x float>, <2 x float> } @_ZN3gfx13SkRectToRectFERK6SkRect(%struct.SkRect* nonnull dereferenceable(16) %25) #12
  %513 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %22, i64 0, i32 0
  %514 = extractvalue { <2 x float>, <2 x float> } %512, 0
  store <2 x float> %514, <2 x float>* %513, align 8
  %515 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %22, i64 0, i32 1
  %516 = extractvalue { <2 x float>, <2 x float> } %512, 1
  store <2 x float> %516, <2 x float>* %515, align 8
  %517 = call { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %23) #12
  %518 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i64 0, i32 0
  %519 = extractvalue { i64, i64 } %517, 0
  store i64 %519, i64* %518, align 8
  %520 = extractvalue { i64, i64 } %517, 1
  store i64 %520, i64* %500, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %503) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %501) #12
  %521 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %459, align 8
  call void @_ZN2cc13PaintOpWriter5WriteEPKNS_13PaintOpBufferERKN3gfx4RectERKNS4_5SizeFE(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintOpBuffer"* %521, %"class.gfx::Rect"* nonnull dereferenceable(16) %21, %"class.gfx::SizeF"* nonnull dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %499) #12
  %522 = load i64, i64* %44, align 8
  br label %535

523:                                              ; preds = %457
  br i1 %462, label %524, label %525

524:                                              ; preds = %523
  store i8 0, i8* %47, align 8
  br label %535

525:                                              ; preds = %523
  %526 = load i8, i8* %47, align 8, !range !5
  %527 = icmp eq i8 %526, 0
  br i1 %527, label %535, label %528

528:                                              ; preds = %525
  %529 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %530 = load i8*, i8** %529, align 8
  store i8 0, i8* %530, align 1
  %531 = load i8*, i8** %529, align 8
  %532 = getelementptr inbounds i8, i8* %531, i64 4
  store i8* %532, i8** %529, align 8
  %533 = load i64, i64* %44, align 8
  %534 = add i64 %533, -4
  store i64 %534, i64* %44, align 8
  br label %535

535:                                              ; preds = %528, %525, %524, %498
  %536 = phi i64 [ %534, %528 ], [ %458, %525 ], [ %458, %524 ], [ %522, %498 ]
  %537 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %42, i64 0, i32 22
  %538 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %42, i64 0, i32 22, i32 0, i32 1
  %539 = bitcast i32** %538 to i64*
  %540 = load i64, i64* %539, align 8
  %541 = bitcast %"class.std::__1::vector.57"* %537 to i64*
  %542 = load i64, i64* %541, align 8
  %543 = sub i64 %540, %542
  %544 = ashr exact i64 %543, 2
  %545 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %546 = bitcast %"class.cc::PaintOpWriter"* %0 to i64*
  %547 = load i64, i64* %546, align 8
  %548 = add i64 %547, 7
  %549 = and i64 %548, -8
  %550 = sub i64 %549, %547
  %551 = icmp ult i64 %536, %550
  %552 = inttoptr i64 %547 to i8*
  %553 = inttoptr i64 %547 to i64*
  br i1 %551, label %554, label %555

554:                                              ; preds = %535
  store i8 0, i8* %47, align 8
  br label %563

555:                                              ; preds = %535
  %556 = load i8, i8* %47, align 8, !range !5
  %557 = icmp eq i8 %556, 0
  br i1 %557, label %563, label %558

558:                                              ; preds = %555
  %559 = getelementptr inbounds i8, i8* %552, i64 %550
  store i8* %559, i8** %545, align 8
  %560 = sub i64 %536, %550
  store i64 %560, i64* %44, align 8
  %561 = bitcast i8* %559 to i64*
  %562 = ptrtoint i8* %559 to i64
  br label %563

563:                                              ; preds = %558, %555, %554
  %564 = phi i8* [ %559, %558 ], [ %552, %555 ], [ %552, %554 ]
  %565 = phi i64 [ %562, %558 ], [ %547, %555 ], [ %547, %554 ]
  %566 = phi i8 [ 1, %558 ], [ 0, %555 ], [ 0, %554 ]
  %567 = phi i64* [ %561, %558 ], [ %553, %555 ], [ %553, %554 ]
  %568 = phi i64 [ %560, %558 ], [ %536, %555 ], [ %536, %554 ]
  %569 = icmp ult i64 %568, 8
  br i1 %569, label %570, label %571

570:                                              ; preds = %563
  store i8 0, i8* %47, align 8
  br label %579

571:                                              ; preds = %563
  %572 = icmp eq i8 %566, 0
  br i1 %572, label %579, label %573

573:                                              ; preds = %571
  store i64 %544, i64* %567, align 8
  %574 = load i8*, i8** %545, align 8
  %575 = getelementptr inbounds i8, i8* %574, i64 8
  store i8* %575, i8** %545, align 8
  %576 = load i64, i64* %44, align 8
  %577 = add i64 %576, -8
  store i64 %577, i64* %44, align 8
  %578 = ptrtoint i8* %575 to i64
  br label %579

579:                                              ; preds = %570, %571, %573
  %580 = phi i8* [ %564, %570 ], [ %564, %571 ], [ %575, %573 ]
  %581 = phi i64 [ %565, %570 ], [ %565, %571 ], [ %578, %573 ]
  %582 = phi i64 [ %568, %570 ], [ %568, %571 ], [ %577, %573 ]
  %583 = load i64, i64* %539, align 8
  %584 = load i64, i64* %541, align 8
  %585 = sub i64 %583, %584
  %586 = inttoptr i64 %584 to i8*
  %587 = icmp ult i64 %582, %585
  br i1 %587, label %588, label %589

588:                                              ; preds = %579
  store i8 0, i8* %47, align 8
  br label %600

589:                                              ; preds = %579
  %590 = load i8, i8* %47, align 8, !range !5
  %591 = icmp eq i8 %590, 0
  %592 = icmp eq i64 %585, 0
  %593 = or i1 %592, %591
  br i1 %593, label %600, label %594

594:                                              ; preds = %589
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %580, i8* align 1 %586, i64 %585, i1 false) #12
  %595 = load i8*, i8** %545, align 8
  %596 = getelementptr inbounds i8, i8* %595, i64 %585
  store i8* %596, i8** %545, align 8
  %597 = load i64, i64* %44, align 8
  %598 = sub i64 %597, %585
  store i64 %598, i64* %44, align 8
  %599 = ptrtoint i8* %596 to i64
  br label %600

600:                                              ; preds = %588, %589, %594
  %601 = phi i8* [ %580, %588 ], [ %580, %589 ], [ %596, %594 ]
  %602 = phi i64 [ %582, %588 ], [ %582, %589 ], [ %598, %594 ]
  %603 = phi i64 [ %581, %588 ], [ %581, %589 ], [ %599, %594 ]
  %604 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %42, i64 0, i32 23
  %605 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %42, i64 0, i32 23, i32 0, i32 1
  %606 = bitcast float** %605 to i64*
  %607 = load i64, i64* %606, align 8
  %608 = bitcast %"class.std::__1::vector.64"* %604 to i64*
  %609 = load i64, i64* %608, align 8
  %610 = sub i64 %607, %609
  %611 = ashr exact i64 %610, 2
  %612 = add i64 %603, 7
  %613 = and i64 %612, -8
  %614 = sub i64 %613, %603
  %615 = icmp ult i64 %602, %614
  %616 = inttoptr i64 %603 to i8*
  %617 = inttoptr i64 %603 to i64*
  br i1 %615, label %618, label %619

618:                                              ; preds = %600
  store i8 0, i8* %47, align 8
  br label %626

619:                                              ; preds = %600
  %620 = load i8, i8* %47, align 8, !range !5
  %621 = icmp eq i8 %620, 0
  br i1 %621, label %626, label %622

622:                                              ; preds = %619
  %623 = getelementptr inbounds i8, i8* %616, i64 %614
  store i8* %623, i8** %545, align 8
  %624 = sub i64 %602, %614
  store i64 %624, i64* %44, align 8
  %625 = bitcast i8* %623 to i64*
  br label %626

626:                                              ; preds = %622, %619, %618
  %627 = phi i8* [ %623, %622 ], [ %601, %619 ], [ %601, %618 ]
  %628 = phi i8 [ 1, %622 ], [ 0, %619 ], [ 0, %618 ]
  %629 = phi i64* [ %625, %622 ], [ %617, %619 ], [ %617, %618 ]
  %630 = phi i64 [ %624, %622 ], [ %602, %619 ], [ %602, %618 ]
  %631 = icmp ult i64 %630, 8
  br i1 %631, label %632, label %633

632:                                              ; preds = %626
  store i8 0, i8* %47, align 8
  br label %640

633:                                              ; preds = %626
  %634 = icmp eq i8 %628, 0
  br i1 %634, label %640, label %635

635:                                              ; preds = %633
  store i64 %611, i64* %629, align 8
  %636 = load i8*, i8** %545, align 8
  %637 = getelementptr inbounds i8, i8* %636, i64 8
  store i8* %637, i8** %545, align 8
  %638 = load i64, i64* %44, align 8
  %639 = add i64 %638, -8
  store i64 %639, i64* %44, align 8
  br label %640

640:                                              ; preds = %632, %633, %635
  %641 = phi i8* [ %627, %632 ], [ %627, %633 ], [ %637, %635 ]
  %642 = phi i64 [ %630, %632 ], [ %630, %633 ], [ %639, %635 ]
  %643 = load i64, i64* %606, align 8
  %644 = load i64, i64* %608, align 8
  %645 = sub i64 %643, %644
  %646 = inttoptr i64 %644 to i8*
  %647 = icmp ult i64 %642, %645
  br i1 %647, label %648, label %649

648:                                              ; preds = %640
  store i8 0, i8* %47, align 8
  br label %659

649:                                              ; preds = %640
  %650 = load i8, i8* %47, align 8, !range !5
  %651 = icmp eq i8 %650, 0
  %652 = icmp eq i64 %645, 0
  %653 = or i1 %652, %651
  br i1 %653, label %659, label %654

654:                                              ; preds = %649
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %641, i8* align 1 %646, i64 %645, i1 false) #12
  %655 = load i8*, i8** %545, align 8
  %656 = getelementptr inbounds i8, i8* %655, i64 %645
  store i8* %656, i8** %545, align 8
  %657 = load i64, i64* %44, align 8
  %658 = sub i64 %657, %645
  store i64 %658, i64* %44, align 8
  br label %659

659:                                              ; preds = %654, %649, %648, %53, %50, %49
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #12
  %660 = icmp eq %"class.cc::PaintShader"* %41, null
  br i1 %660, label %671, label %661

661:                                              ; preds = %659
  %662 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %41, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %663 = atomicrmw add i32* %662, i32 -1 acq_rel
  %664 = icmp eq i32 %663, 1
  br i1 %664, label %665, label %671

665:                                              ; preds = %661
  %666 = bitcast %"class.cc::PaintShader"* %41 to %class.SkRefCntBase*
  %667 = bitcast %"class.cc::PaintShader"* %41 to void (%class.SkRefCntBase*)***
  %668 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %667, align 8
  %669 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %668, i64 2
  %670 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %669, align 8
  call void %670(%class.SkRefCntBase* nonnull %666) #12
  br label %671

671:                                              ; preds = %659, %661, %665
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERKNS_9DrawImageEP6SkSize(%"class.cc::PaintOpWriter"*, %"class.cc::DrawImage"* dereferenceable(240), %struct.SkSize* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkBitmap, align 8
  %5 = alloca %class.sk_sp.12, align 8
  %6 = alloca %"class.cc::ImageProvider::ScopedResult", align 8
  %7 = getelementptr inbounds %"class.cc::DrawImage", %"class.cc::DrawImage"* %1, i64 0, i32 0
  %8 = getelementptr inbounds %"class.cc::DrawImage", %"class.cc::DrawImage"* %1, i64 0, i32 0, i32 15, i32 0
  %9 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %8, align 8
  %10 = icmp eq %"class.cc::PaintWorkletInput"* %9, null
  br i1 %10, label %11, label %35

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.cc::DrawImage", %"class.cc::DrawImage"* %1, i64 0, i32 0, i32 14, i32 0
  %13 = load %class.SkImage*, %class.SkImage** %12, align 8
  %14 = icmp eq %class.SkImage* %13, null
  br i1 %14, label %15, label %35

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.cc::DrawImage", %"class.cc::DrawImage"* %1, i64 0, i32 0, i32 5, i32 0
  %17 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %16, align 8
  %18 = icmp eq %"class.cc::TextureBacking"* %17, null
  br i1 %18, label %19, label %35

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = icmp ult i64 %21, 4
  %23 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %22, label %24, label %25

24:                                               ; preds = %19
  store i8 0, i8* %23, align 8
  br label %253

25:                                               ; preds = %19
  %26 = load i8, i8* %23, align 8, !range !5
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %253, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %30 = load i8*, i8** %29, align 8
  store i8 0, i8* %30, align 1
  %31 = load i8*, i8** %29, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 4
  store i8* %32, i8** %29, align 8
  %33 = load i64, i64* %20, align 8
  %34 = add i64 %33, -4
  store i64 %34, i64* %20, align 8
  br label %253

35:                                               ; preds = %15, %3, %11
  %36 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 5
  %37 = load i8, i8* %36, align 1, !range !5
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %193, label %39

39:                                               ; preds = %35
  %40 = bitcast %class.SkBitmap* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %40) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %4) #12
  %41 = bitcast %class.sk_sp.12* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #12
  call void @_ZNK2cc10PaintImage12GetSwSkImageEv(%class.sk_sp.12* nonnull sret %5, %"class.cc::PaintImage"* %7) #12
  %42 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %5, i64 0, i32 0
  %43 = load %class.SkImage*, %class.SkImage** %42, align 8
  %44 = call zeroext i1 @_ZNK7SkImage14asLegacyBitmapEP8SkBitmapNS_16LegacyBitmapModeE(%class.SkImage* %43, %class.SkBitmap* nonnull %4, i32 0) #12
  %45 = load %class.SkImage*, %class.SkImage** %42, align 8
  %46 = icmp eq %class.SkImage* %45, null
  br i1 %46, label %57, label %47

47:                                               ; preds = %39
  %48 = getelementptr inbounds %class.SkImage, %class.SkImage* %45, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i32* %48, i32 -1 acq_rel
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %51, label %57

51:                                               ; preds = %47
  %52 = bitcast %class.SkImage* %45 to %class.SkRefCntBase*
  %53 = bitcast %class.SkImage* %45 to void (%class.SkRefCntBase*)***
  %54 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %53, align 8
  %55 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, i64 2
  %56 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, align 8
  call void %56(%class.SkRefCntBase* nonnull %52) #12
  br label %57

57:                                               ; preds = %39, %47, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #12
  %58 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %59 = load i64, i64* %58, align 8
  %60 = icmp ult i64 %59, 4
  %61 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %44, label %74, label %62

62:                                               ; preds = %57
  br i1 %60, label %63, label %64

63:                                               ; preds = %62
  store i8 0, i8* %61, align 8
  br label %192

64:                                               ; preds = %62
  %65 = load i8, i8* %61, align 8, !range !5
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %192, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %69 = load i8*, i8** %68, align 8
  store i8 0, i8* %69, align 1
  %70 = load i8*, i8** %68, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 4
  store i8* %71, i8** %68, align 8
  %72 = load i64, i64* %58, align 8
  %73 = add i64 %72, -4
  store i64 %73, i64* %58, align 8
  br label %192

74:                                               ; preds = %57
  br i1 %60, label %75, label %76

75:                                               ; preds = %74
  store i8 0, i8* %61, align 8
  br label %86

76:                                               ; preds = %74
  %77 = load i8, i8* %61, align 8, !range !5
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %86, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %81 = load i8*, i8** %80, align 8
  store i8 1, i8* %81, align 1
  %82 = load i8*, i8** %80, align 8
  %83 = getelementptr inbounds i8, i8* %82, i64 4
  store i8* %83, i8** %80, align 8
  %84 = load i64, i64* %58, align 8
  %85 = add i64 %84, -4
  store i64 %85, i64* %58, align 8
  br label %86

86:                                               ; preds = %75, %76, %79
  %87 = phi i64 [ %59, %75 ], [ %59, %76 ], [ %85, %79 ]
  %88 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %4, i64 0, i32 1, i32 2, i32 0, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = icmp ult i32 %89, 256
  br i1 %90, label %92, label %91, !prof !6

91:                                               ; preds = %86
  call void @llvm.trap() #12
  unreachable

92:                                               ; preds = %86
  %93 = trunc i32 %89 to i8
  %94 = icmp ult i64 %87, 4
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  store i8 0, i8* %61, align 8
  br label %110

96:                                               ; preds = %92
  %97 = load i8, i8* %61, align 8, !range !5
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %101 = load i8*, i8** %100, align 8
  store i8 %93, i8* %101, align 1
  %102 = load i8*, i8** %100, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 4
  store i8* %103, i8** %100, align 8
  %104 = load i64, i64* %58, align 8
  %105 = add i64 %104, -4
  store i64 %105, i64* %58, align 8
  %106 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %4, i64 0, i32 1, i32 2, i32 1, i32 0
  %107 = load i32, i32* %106, align 8
  %108 = icmp ult i64 %105, 4
  %109 = bitcast i8* %103 to i32*
  br i1 %108, label %110, label %111

110:                                              ; preds = %99, %95
  store i8 0, i8* %61, align 8
  br label %125

111:                                              ; preds = %99
  %112 = load i8, i8* %61, align 8
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %96, %111
  %115 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %4, i64 0, i32 1, i32 2, i32 1, i32 1
  %116 = load i32, i32* %115, align 4
  br label %126

117:                                              ; preds = %111
  store i32 %107, i32* %109, align 4
  %118 = load i8*, i8** %100, align 8
  %119 = getelementptr inbounds i8, i8* %118, i64 4
  store i8* %119, i8** %100, align 8
  %120 = load i64, i64* %58, align 8
  %121 = add i64 %120, -4
  store i64 %121, i64* %58, align 8
  %122 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %4, i64 0, i32 1, i32 2, i32 1, i32 1
  %123 = load i32, i32* %122, align 4
  %124 = icmp ult i64 %121, 4
  br i1 %124, label %125, label %126

125:                                              ; preds = %110, %117
  store i8 0, i8* %61, align 8
  br label %138

126:                                              ; preds = %114, %117
  %127 = phi i32 [ %116, %114 ], [ %123, %117 ]
  %128 = load i8, i8* %61, align 8, !range !5
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %138, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %132 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %133 = load i32*, i32** %132, align 8
  store i32 %127, i32* %133, align 4
  %134 = load i8*, i8** %131, align 8
  %135 = getelementptr inbounds i8, i8* %134, i64 4
  store i8* %135, i8** %131, align 8
  %136 = load i64, i64* %58, align 8
  %137 = add i64 %136, -4
  store i64 %137, i64* %58, align 8
  br label %138

138:                                              ; preds = %125, %126, %130
  %139 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %4, i64 0, i32 1, i32 2
  %140 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %4, i64 0, i32 1, i32 1
  %141 = load i64, i64* %140, align 8
  %142 = call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* %139, i64 %141) #12
  %143 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %144 = bitcast %"class.cc::PaintOpWriter"* %0 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = add i64 %145, 7
  %147 = and i64 %146, -8
  %148 = sub i64 %147, %145
  %149 = load i64, i64* %58, align 8
  %150 = icmp ult i64 %149, %148
  %151 = inttoptr i64 %145 to i8*
  %152 = inttoptr i64 %145 to i64*
  br i1 %150, label %153, label %154

153:                                              ; preds = %138
  store i8 0, i8* %61, align 8
  br label %161

154:                                              ; preds = %138
  %155 = load i8, i8* %61, align 8, !range !5
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %161, label %157

157:                                              ; preds = %154
  %158 = getelementptr inbounds i8, i8* %151, i64 %148
  store i8* %158, i8** %143, align 8
  %159 = sub i64 %149, %148
  store i64 %159, i64* %58, align 8
  %160 = bitcast i8* %158 to i64*
  br label %161

161:                                              ; preds = %157, %154, %153
  %162 = phi i8* [ %158, %157 ], [ %151, %154 ], [ %151, %153 ]
  %163 = phi i8 [ 1, %157 ], [ 0, %154 ], [ 0, %153 ]
  %164 = phi i64* [ %160, %157 ], [ %152, %154 ], [ %152, %153 ]
  %165 = phi i64 [ %159, %157 ], [ %149, %154 ], [ %149, %153 ]
  %166 = icmp ult i64 %165, 8
  br i1 %166, label %167, label %168

167:                                              ; preds = %161
  store i8 0, i8* %61, align 8
  br label %175

168:                                              ; preds = %161
  %169 = icmp eq i8 %163, 0
  br i1 %169, label %175, label %170

170:                                              ; preds = %168
  store i64 %142, i64* %164, align 8
  %171 = load i8*, i8** %143, align 8
  %172 = getelementptr inbounds i8, i8* %171, i64 8
  store i8* %172, i8** %143, align 8
  %173 = load i64, i64* %58, align 8
  %174 = add i64 %173, -8
  store i64 %174, i64* %58, align 8
  br label %175

175:                                              ; preds = %167, %168, %170
  %176 = phi i8* [ %162, %167 ], [ %162, %168 ], [ %172, %170 ]
  %177 = phi i64 [ %165, %167 ], [ %165, %168 ], [ %174, %170 ]
  %178 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %4, i64 0, i32 1, i32 0
  %179 = load i8*, i8** %178, align 8
  %180 = icmp ult i64 %177, %142
  br i1 %180, label %181, label %182

181:                                              ; preds = %175
  store i8 0, i8* %61, align 8
  br label %192

182:                                              ; preds = %175
  %183 = load i8, i8* %61, align 8, !range !5
  %184 = icmp eq i8 %183, 0
  %185 = icmp eq i64 %142, 0
  %186 = or i1 %185, %184
  br i1 %186, label %192, label %187

187:                                              ; preds = %182
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %176, i8* align 1 %179, i64 %142, i1 false) #12
  %188 = load i8*, i8** %143, align 8
  %189 = getelementptr inbounds i8, i8* %188, i64 %142
  store i8* %189, i8** %143, align 8
  %190 = load i64, i64* %58, align 8
  %191 = sub i64 %190, %142
  store i64 %191, i64* %58, align 8
  br label %192

192:                                              ; preds = %187, %182, %181, %67, %64, %63
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %40) #12
  br label %253

193:                                              ; preds = %35
  %194 = bitcast %"class.cc::ImageProvider::ScopedResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %194) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %194, i8* align 8 bitcast ({ <{ %class.sk_sp.95, %"struct.gpu::Mailbox", { { { { i8, [3 x i8], %union.anon.100 } } } }, %class.sk_sp.73, %struct.SkSize, %struct.SkSize, i32, i8, i8, [2 x i8] }>, %class.sk_sp.13, %"class.base::OnceCallback" }* @__const._ZN2cc13PaintOpWriter5WriteERKNS_9DrawImageEP6SkSize.decoded_image to i8*), i64 80, i1 false)
  %195 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 3
  %196 = load %"struct.cc::PaintOp::SerializeOptions"*, %"struct.cc::PaintOp::SerializeOptions"** %195, align 8
  %197 = getelementptr inbounds %"struct.cc::PaintOp::SerializeOptions", %"struct.cc::PaintOp::SerializeOptions"* %196, i64 0, i32 0
  %198 = load %"class.cc::ImageProvider"*, %"class.cc::ImageProvider"** %197, align 8
  %199 = bitcast %"class.cc::ImageProvider"* %198 to void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)***
  %200 = load void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)**, void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)*** %199, align 8
  %201 = getelementptr inbounds void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)*, void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)** %200, i64 2
  %202 = load void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)*, void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)** %201, align 8
  call void %202(%"class.cc::ImageProvider::ScopedResult"* nonnull sret %6, %"class.cc::ImageProvider"* %198, %"class.cc::DrawImage"* dereferenceable(240) %1) #12
  %203 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %6, i64 0, i32 0, i32 5
  %204 = bitcast %struct.SkSize* %203 to i64*
  %205 = bitcast %struct.SkSize* %2 to i64*
  %206 = load i64, i64* %204, align 8
  store i64 %206, i64* %205, align 4
  %207 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %6, i64 0, i32 0, i32 1
  %208 = call zeroext i1 @_ZNK3gpu7Mailbox6IsZeroEv(%"struct.gpu::Mailbox"* %207) #12
  br i1 %208, label %240, label %209

209:                                              ; preds = %193
  %210 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %211 = load i64, i64* %210, align 8
  %212 = icmp ult i64 %211, 4
  %213 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %212, label %214, label %215

214:                                              ; preds = %209
  store i8 0, i8* %213, align 8
  br label %228

215:                                              ; preds = %209
  %216 = load i8, i8* %213, align 8, !range !5
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %225, label %218

218:                                              ; preds = %215
  %219 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %220 = load i8*, i8** %219, align 8
  store i8 3, i8* %220, align 1
  %221 = load i8*, i8** %219, align 8
  %222 = getelementptr inbounds i8, i8* %221, i64 4
  store i8* %222, i8** %219, align 8
  %223 = load i64, i64* %210, align 8
  %224 = add i64 %223, -4
  store i64 %224, i64* %210, align 8
  br label %225

225:                                              ; preds = %218, %215
  %226 = phi i64 [ %224, %218 ], [ %211, %215 ]
  %227 = icmp ult i64 %226, 16
  br i1 %227, label %228, label %229

228:                                              ; preds = %225, %214
  store i8 0, i8* %213, align 8
  br label %252

229:                                              ; preds = %225
  %230 = load i8, i8* %213, align 8
  %231 = icmp eq i8 %230, 0
  br i1 %231, label %252, label %232

232:                                              ; preds = %229
  %233 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %234 = load i8*, i8** %233, align 8
  %235 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %207, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %234, i8* align 8 %235, i64 16, i1 false) #12
  %236 = load i8*, i8** %233, align 8
  %237 = getelementptr inbounds i8, i8* %236, i64 16
  store i8* %237, i8** %233, align 8
  %238 = load i64, i64* %210, align 8
  %239 = add i64 %238, -16
  store i64 %239, i64* %210, align 8
  br label %252

240:                                              ; preds = %193
  %241 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %6, i64 0, i32 0, i32 2
  %242 = bitcast %"class.absl::optional.96"* %241 to i32*
  %243 = load i32, i32* %242, align 8
  %244 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %6, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %245 = load i32, i32* %244, align 4
  %246 = trunc i32 %243 to i8
  %247 = icmp eq i8 %246, 0
  %248 = select i1 %247, i32 -1, i32 %245
  %249 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %6, i64 0, i32 0, i32 7
  %250 = load i8, i8* %249, align 4, !range !5
  %251 = icmp ne i8 %250, 0
  call void @_ZN2cc13PaintOpWriter10WriteImageEjb(%"class.cc::PaintOpWriter"* %0, i32 %248, i1 zeroext %251) #12
  br label %252

252:                                              ; preds = %228, %229, %232, %240
  call void @_ZN2cc13ImageProvider12ScopedResultD1Ev(%"class.cc::ImageProvider::ScopedResult"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %194) #12
  br label %253

253:                                              ; preds = %28, %25, %24, %252, %192
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

declare void @_ZNK2cc10PaintImage12GetSwSkImageEv(%class.sk_sp.12* sret, %"class.cc::PaintImage"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK7SkImage14asLegacyBitmapEP8SkBitmapNS_16LegacyBitmapModeE(%class.SkImage*, %class.SkBitmap*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter9WriteDataEmPKv(%"class.cc::PaintOpWriter"* nocapture, i64, i8* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %5, %1
  %7 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %6, label %8, label %9

8:                                                ; preds = %3
  store i8 0, i8* %7, align 8
  br label %21

9:                                                ; preds = %3
  %10 = load i8, i8* %7, align 8, !range !5
  %11 = icmp eq i8 %10, 0
  %12 = icmp eq i64 %1, 0
  %13 = or i1 %12, %11
  br i1 %13, label %21, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %2, i64 %1, i1 false)
  %17 = load i8*, i8** %15, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 %1
  store i8* %18, i8** %15, align 8
  %19 = load i64, i64* %4, align 8
  %20 = sub i64 %19, %1
  store i64 %20, i64* %4, align 8
  br label %21

21:                                               ; preds = %8, %9, %14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter10WriteImageERKNS_16DecodedDrawImageE(%"class.cc::PaintOpWriter"* nocapture, %"class.cc::DecodedDrawImage"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %1, i64 0, i32 1
  %4 = tail call zeroext i1 @_ZNK3gpu7Mailbox6IsZeroEv(%"struct.gpu::Mailbox"* %3) #12
  br i1 %4, label %36, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, 4
  %9 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %8, label %10, label %11

10:                                               ; preds = %5
  store i8 0, i8* %9, align 8
  br label %24

11:                                               ; preds = %5
  %12 = load i8, i8* %9, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  store i8 3, i8* %16, align 1
  %17 = load i8*, i8** %15, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 4
  store i8* %18, i8** %15, align 8
  %19 = load i64, i64* %6, align 8
  %20 = add i64 %19, -4
  store i64 %20, i64* %6, align 8
  br label %21

21:                                               ; preds = %14, %11
  %22 = phi i64 [ %20, %14 ], [ %7, %11 ]
  %23 = icmp ult i64 %22, 16
  br i1 %23, label %24, label %25

24:                                               ; preds = %21, %10
  store i8 0, i8* %9, align 8
  br label %48

25:                                               ; preds = %21
  %26 = load i8, i8* %9, align 8
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %48, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %3, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %31, i64 16, i1 false) #12
  %32 = load i8*, i8** %29, align 8
  %33 = getelementptr inbounds i8, i8* %32, i64 16
  store i8* %33, i8** %29, align 8
  %34 = load i64, i64* %6, align 8
  %35 = add i64 %34, -16
  store i64 %35, i64* %6, align 8
  br label %48

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %1, i64 0, i32 2
  %38 = bitcast %"class.absl::optional.96"* %37 to i32*
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = trunc i32 %39 to i8
  %43 = icmp eq i8 %42, 0
  %44 = select i1 %43, i32 -1, i32 %41
  %45 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %1, i64 0, i32 7
  %46 = load i8, i8* %45, align 4, !range !5
  %47 = icmp ne i8 %46, 0
  tail call void @_ZN2cc13PaintOpWriter10WriteImageEjb(%"class.cc::PaintOpWriter"* %0, i32 %44, i1 zeroext %47)
  br label %48

48:                                               ; preds = %28, %25, %24, %36
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2cc13ImageProvider12ScopedResultD1Ev(%"class.cc::ImageProvider::ScopedResult"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteE13scoped_refptrINS_14SkottieWrapperEE(%"class.cc::PaintOpWriter"* nocapture, %"class.cc::SkottieWrapper"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.cc::ClientSkottieTransferCacheEntry", align 8
  %4 = getelementptr inbounds %"class.cc::SkottieWrapper", %"class.cc::SkottieWrapper"* %1, i64 0, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, 4
  %9 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %8, label %10, label %11

10:                                               ; preds = %2
  store i8 0, i8* %9, align 8
  br label %22

11:                                               ; preds = %2
  %12 = load i8, i8* %9, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %22, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %16 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %17 = load i32*, i32** %16, align 8
  store i32 %5, i32* %17, align 4
  %18 = load i8*, i8** %15, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 4
  store i8* %19, i8** %15, align 8
  %20 = load i64, i64* %6, align 8
  %21 = add i64 %20, -4
  store i64 %21, i64* %6, align 8
  br label %22

22:                                               ; preds = %10, %11, %14
  %23 = phi i64 [ %7, %10 ], [ %7, %11 ], [ %21, %14 ]
  %24 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %25 = bitcast %"class.cc::PaintOpWriter"* %0 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, 7
  %28 = and i64 %27, -8
  %29 = sub i64 %28, %26
  %30 = icmp ult i64 %23, %29
  %31 = inttoptr i64 %26 to i8*
  %32 = inttoptr i64 %26 to i64*
  br i1 %30, label %33, label %34

33:                                               ; preds = %22
  store i8 0, i8* %9, align 8
  br label %41

34:                                               ; preds = %22
  %35 = load i8, i8* %9, align 8, !range !5
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds i8, i8* %31, i64 %29
  store i8* %38, i8** %24, align 8
  %39 = sub i64 %23, %29
  store i64 %39, i64* %6, align 8
  %40 = bitcast i8* %38 to i64*
  br label %41

41:                                               ; preds = %37, %34, %33
  %42 = phi i8 [ 1, %37 ], [ 0, %34 ], [ 0, %33 ]
  %43 = phi i64* [ %40, %37 ], [ %32, %34 ], [ %32, %33 ]
  %44 = phi i64 [ %39, %37 ], [ %23, %34 ], [ %23, %33 ]
  %45 = icmp ult i64 %44, 8
  br i1 %45, label %46, label %47

46:                                               ; preds = %41
  store i8 0, i8* %9, align 8
  br label %87

47:                                               ; preds = %41
  %48 = icmp eq i8 %42, 0
  br i1 %48, label %55, label %49

49:                                               ; preds = %47
  store i64 0, i64* %43, align 8
  %50 = load i8*, i8** %24, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 8
  store i8* %51, i8** %24, align 8
  %52 = load i64, i64* %6, align 8
  %53 = add i64 %52, -8
  store i64 %53, i64* %6, align 8
  %54 = load i8, i8* %9, align 8
  br label %55

55:                                               ; preds = %47, %49
  %56 = phi i8 [ %42, %47 ], [ %54, %49 ]
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %87, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 3
  %60 = load %"struct.cc::PaintOp::SerializeOptions"*, %"struct.cc::PaintOp::SerializeOptions"** %59, align 8
  %61 = getelementptr inbounds %"struct.cc::PaintOp::SerializeOptions", %"struct.cc::PaintOp::SerializeOptions"* %60, i64 0, i32 1
  %62 = load %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::TransferCacheSerializeHelper"** %61, align 8
  %63 = tail call zeroext i1 @_ZN2cc28TransferCacheSerializeHelper9LockEntryENS_22TransferCacheEntryTypeEj(%"class.cc::TransferCacheSerializeHelper"* %62, i32 3, i32 %5) #12
  br i1 %63, label %81, label %64

64:                                               ; preds = %58
  %65 = load %"struct.cc::PaintOp::SerializeOptions"*, %"struct.cc::PaintOp::SerializeOptions"** %59, align 8
  %66 = getelementptr inbounds %"struct.cc::PaintOp::SerializeOptions", %"struct.cc::PaintOp::SerializeOptions"* %65, i64 0, i32 1
  %67 = load %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::TransferCacheSerializeHelper"** %66, align 8
  %68 = bitcast %"class.cc::ClientSkottieTransferCacheEntry"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #12
  %69 = icmp eq %"class.cc::SkottieWrapper"* %1, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.cc::SkottieWrapper", %"class.cc::SkottieWrapper"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw add i32* %71, i32 1 monotonic
  br label %73

73:                                               ; preds = %64, %70
  call void @_ZN2cc31ClientSkottieTransferCacheEntryC1E13scoped_refptrINS_14SkottieWrapperEE(%"class.cc::ClientSkottieTransferCacheEntry"* nonnull %3, %"class.cc::SkottieWrapper"* %1) #12
  %74 = getelementptr inbounds %"class.cc::ClientSkottieTransferCacheEntry", %"class.cc::ClientSkottieTransferCacheEntry"* %3, i64 0, i32 0, i32 0
  %75 = load i8*, i8** %24, align 8
  %76 = call i32 @_ZN2cc28TransferCacheSerializeHelper11CreateEntryERKNS_24ClientTransferCacheEntryEPc(%"class.cc::TransferCacheSerializeHelper"* %67, %"class.cc::ClientTransferCacheEntry"* nonnull dereferenceable(8) %74, i8* %75) #12
  %77 = zext i32 %76 to i64
  call void @_ZN2cc31ClientSkottieTransferCacheEntryD1Ev(%"class.cc::ClientSkottieTransferCacheEntry"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #12
  %78 = load %"struct.cc::PaintOp::SerializeOptions"*, %"struct.cc::PaintOp::SerializeOptions"** %59, align 8
  %79 = getelementptr inbounds %"struct.cc::PaintOp::SerializeOptions", %"struct.cc::PaintOp::SerializeOptions"* %78, i64 0, i32 1
  %80 = load %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::TransferCacheSerializeHelper"** %79, align 8
  call void @_ZN2cc28TransferCacheSerializeHelper12AssertLockedENS_22TransferCacheEntryTypeEj(%"class.cc::TransferCacheSerializeHelper"* %80, i32 3, i32 %5) #12
  br label %81

81:                                               ; preds = %73, %58
  %82 = phi i64 [ 0, %58 ], [ %77, %73 ]
  store i64 %82, i64* %43, align 8
  %83 = load i8*, i8** %24, align 8
  %84 = getelementptr inbounds i8, i8* %83, i64 %82
  store i8* %84, i8** %24, align 8
  %85 = load i64, i64* %6, align 8
  %86 = sub i64 %85, %82
  store i64 %86, i64* %6, align 8
  br label %87

87:                                               ; preds = %46, %55, %81
  %88 = icmp eq %"class.cc::SkottieWrapper"* %1, null
  br i1 %88, label %95, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.cc::SkottieWrapper", %"class.cc::SkottieWrapper"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw sub i32* %90, i32 1 acq_rel
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  call void @_ZN2cc14SkottieWrapperD1Ev(%"class.cc::SkottieWrapper"* nonnull %1) #12
  %94 = bitcast %"class.cc::SkottieWrapper"* %1 to i8*
  call void @_ZdlPv(i8* %94) #13
  br label %95

95:                                               ; preds = %87, %89, %93
  ret void
}

declare zeroext i1 @_ZN2cc28TransferCacheSerializeHelper9LockEntryENS_22TransferCacheEntryTypeEj(%"class.cc::TransferCacheSerializeHelper"*, i32, i32) local_unnamed_addr #2

declare i32 @_ZN2cc28TransferCacheSerializeHelper11CreateEntryERKNS_24ClientTransferCacheEntryEPc(%"class.cc::TransferCacheSerializeHelper"*, %"class.cc::ClientTransferCacheEntry"* dereferenceable(8), i8*) local_unnamed_addr #2

declare void @_ZN2cc31ClientSkottieTransferCacheEntryC1E13scoped_refptrINS_14SkottieWrapperEE(%"class.cc::ClientSkottieTransferCacheEntry"*, %"class.cc::SkottieWrapper"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc31ClientSkottieTransferCacheEntryD1Ev(%"class.cc::ClientSkottieTransferCacheEntry"*) unnamed_addr #7

declare void @_ZN2cc28TransferCacheSerializeHelper12AssertLockedENS_22TransferCacheEntryTypeEj(%"class.cc::TransferCacheSerializeHelper"*, i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK3gpu7Mailbox6IsZeroEv(%"struct.gpu::Mailbox"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter10WriteImageERKN3gpu7MailboxE(%"class.cc::PaintOpWriter"* nocapture, %"struct.gpu::Mailbox"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 4
  %6 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %5, label %7, label %8

7:                                                ; preds = %2
  store i8 0, i8* %6, align 8
  br label %21

8:                                                ; preds = %2
  %9 = load i8, i8* %6, align 8, !range !5
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  store i8 3, i8* %13, align 1
  %14 = load i8*, i8** %12, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 4
  store i8* %15, i8** %12, align 8
  %16 = load i64, i64* %3, align 8
  %17 = add i64 %16, -4
  store i64 %17, i64* %3, align 8
  br label %18

18:                                               ; preds = %8, %11
  %19 = phi i64 [ %17, %11 ], [ %4, %8 ]
  %20 = icmp ult i64 %19, 16
  br i1 %20, label %21, label %22

21:                                               ; preds = %18, %7
  store i8 0, i8* %6, align 8
  br label %33

22:                                               ; preds = %18
  %23 = load i8, i8* %6, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %33, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %1, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %28, i64 16, i1 false)
  %29 = load i8*, i8** %26, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 16
  store i8* %30, i8** %26, align 8
  %31 = load i64, i64* %3, align 8
  %32 = add i64 %31, -16
  store i64 %32, i64* %3, align 8
  br label %33

33:                                               ; preds = %21, %22, %25
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter10WriteImageEjb(%"class.cc::PaintOpWriter"* nocapture, i32, i1 zeroext) local_unnamed_addr #5 align 2 {
  %4 = icmp eq i32 %1, -1
  %5 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, 4
  %8 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %4, label %9, label %21

9:                                                ; preds = %3
  br i1 %7, label %10, label %11

10:                                               ; preds = %9
  store i8 0, i8* %8, align 8
  br label %59

11:                                               ; preds = %9
  %12 = load i8, i8* %8, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %59, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  store i8 0, i8* %16, align 1
  %17 = load i8*, i8** %15, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 4
  store i8* %18, i8** %15, align 8
  %19 = load i64, i64* %5, align 8
  %20 = add i64 %19, -4
  store i64 %20, i64* %5, align 8
  br label %59

21:                                               ; preds = %3
  br i1 %7, label %22, label %23

22:                                               ; preds = %21
  store i8 0, i8* %8, align 8
  br label %34

23:                                               ; preds = %21
  %24 = load i8, i8* %8, align 8, !range !5
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %48, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  store i8 2, i8* %28, align 1
  %29 = load i8*, i8** %27, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 4
  store i8* %30, i8** %27, align 8
  %31 = load i64, i64* %5, align 8
  %32 = add i64 %31, -4
  store i64 %32, i64* %5, align 8
  %33 = icmp ult i64 %32, 4
  br i1 %33, label %34, label %35

34:                                               ; preds = %26, %22
  store i8 0, i8* %8, align 8
  br label %47

35:                                               ; preds = %26
  %36 = load i8, i8* %8, align 8
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %48, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %40 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %41 = load i32*, i32** %40, align 8
  store i32 %1, i32* %41, align 4
  %42 = load i8*, i8** %39, align 8
  %43 = getelementptr inbounds i8, i8* %42, i64 4
  store i8* %43, i8** %39, align 8
  %44 = load i64, i64* %5, align 8
  %45 = add i64 %44, -4
  store i64 %45, i64* %5, align 8
  %46 = icmp ult i64 %45, 4
  br i1 %46, label %47, label %48

47:                                               ; preds = %34, %38
  store i8 0, i8* %8, align 8
  br label %59

48:                                               ; preds = %23, %35, %38
  %49 = load i8, i8* %8, align 8, !range !5
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %48
  %52 = zext i1 %2 to i8
  %53 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %54 = load i8*, i8** %53, align 8
  store i8 %52, i8* %54, align 1
  %55 = load i8*, i8** %53, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 4
  store i8* %56, i8** %53, align 8
  %57 = load i64, i64* %5, align 8
  %58 = add i64 %57, -4
  store i64 %58, i64* %5, align 8
  br label %59

59:                                               ; preds = %51, %48, %47, %14, %11, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERK5sk_spI6SkDataE(%"class.cc::PaintOpWriter"* nocapture, %class.sk_sp* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %4 = load %class.SkData*, %class.SkData** %3, align 8
  %5 = icmp eq %class.SkData* %4, null
  br i1 %5, label %65, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkData, %class.SkData* %4, i64 0, i32 4
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %65, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %12 = bitcast %"class.cc::PaintOpWriter"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, 7
  %15 = and i64 %14, -8
  %16 = sub i64 %15, %13
  %17 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, %16
  %20 = inttoptr i64 %13 to i8*
  %21 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  %22 = inttoptr i64 %13 to i64*
  br i1 %19, label %23, label %24

23:                                               ; preds = %10
  store i8 0, i8* %21, align 8
  br label %31

24:                                               ; preds = %10
  %25 = load i8, i8* %21, align 8, !range !5
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds i8, i8* %20, i64 %16
  store i8* %28, i8** %11, align 8
  %29 = sub i64 %18, %16
  store i64 %29, i64* %17, align 8
  %30 = bitcast i8* %28 to i64*
  br label %31

31:                                               ; preds = %27, %24, %23
  %32 = phi i8* [ %28, %27 ], [ %20, %24 ], [ %20, %23 ]
  %33 = phi i8 [ 1, %27 ], [ 0, %24 ], [ 0, %23 ]
  %34 = phi i64* [ %30, %27 ], [ %22, %24 ], [ %22, %23 ]
  %35 = phi i64 [ %29, %27 ], [ %18, %24 ], [ %18, %23 ]
  %36 = icmp ult i64 %35, 8
  br i1 %36, label %37, label %38

37:                                               ; preds = %31
  store i8 0, i8* %21, align 8
  br label %45

38:                                               ; preds = %31
  %39 = icmp eq i8 %33, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %38
  store i64 %8, i64* %34, align 8
  %41 = load i8*, i8** %11, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 8
  store i8* %42, i8** %11, align 8
  %43 = load i64, i64* %17, align 8
  %44 = add i64 %43, -8
  store i64 %44, i64* %17, align 8
  br label %45

45:                                               ; preds = %37, %38, %40
  %46 = phi i8* [ %32, %37 ], [ %32, %38 ], [ %42, %40 ]
  %47 = phi i64 [ %35, %37 ], [ %35, %38 ], [ %44, %40 ]
  %48 = load %class.SkData*, %class.SkData** %3, align 8
  %49 = getelementptr inbounds %class.SkData, %class.SkData* %48, i64 0, i32 4
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %class.SkData, %class.SkData* %48, i64 0, i32 3
  %52 = load i8*, i8** %51, align 8
  %53 = icmp ult i64 %47, %50
  br i1 %53, label %54, label %55

54:                                               ; preds = %45
  store i8 0, i8* %21, align 8
  br label %117

55:                                               ; preds = %45
  %56 = load i8, i8* %21, align 8, !range !5
  %57 = icmp eq i8 %56, 0
  %58 = icmp eq i64 %50, 0
  %59 = or i1 %58, %57
  br i1 %59, label %117, label %60

60:                                               ; preds = %55
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %46, i8* align 1 %52, i64 %50, i1 false) #12
  %61 = load i8*, i8** %11, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %50
  store i8* %62, i8** %11, align 8
  %63 = load i64, i64* %17, align 8
  %64 = sub i64 %63, %50
  store i64 %64, i64* %17, align 8
  br label %117

65:                                               ; preds = %6, %2
  %66 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %67 = bitcast %"class.cc::PaintOpWriter"* %0 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 7
  %70 = and i64 %69, -8
  %71 = sub i64 %70, %68
  %72 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %73 = load i64, i64* %72, align 8
  %74 = icmp ult i64 %73, %71
  %75 = inttoptr i64 %68 to i8*
  %76 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  %77 = inttoptr i64 %68 to i64*
  br i1 %74, label %78, label %79

78:                                               ; preds = %65
  store i8 0, i8* %76, align 8
  br label %86

79:                                               ; preds = %65
  %80 = load i8, i8* %76, align 8, !range !5
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %86, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %75, i64 %71
  store i8* %83, i8** %66, align 8
  %84 = sub i64 %73, %71
  store i64 %84, i64* %72, align 8
  %85 = bitcast i8* %83 to i64*
  br label %86

86:                                               ; preds = %82, %79, %78
  %87 = phi i8* [ %83, %82 ], [ %75, %79 ], [ %75, %78 ]
  %88 = phi i8 [ 1, %82 ], [ 0, %79 ], [ 0, %78 ]
  %89 = phi i64* [ %85, %82 ], [ %77, %79 ], [ %77, %78 ]
  %90 = phi i64 [ %84, %82 ], [ %73, %79 ], [ %73, %78 ]
  %91 = icmp ult i64 %90, 8
  br i1 %91, label %92, label %93

92:                                               ; preds = %86
  store i8 0, i8* %76, align 8
  br label %100

93:                                               ; preds = %86
  %94 = icmp eq i8 %88, 0
  br i1 %94, label %105, label %95

95:                                               ; preds = %93
  store i64 0, i64* %89, align 8
  %96 = load i8*, i8** %66, align 8
  %97 = getelementptr inbounds i8, i8* %96, i64 8
  store i8* %97, i8** %66, align 8
  %98 = load i64, i64* %72, align 8
  %99 = add i64 %98, -8
  store i64 %99, i64* %72, align 8
  br label %100

100:                                              ; preds = %92, %95
  %101 = phi i8* [ %97, %95 ], [ %87, %92 ]
  %102 = phi i64 [ %99, %95 ], [ %90, %92 ]
  %103 = icmp ult i64 %102, 4
  br i1 %103, label %104, label %105

104:                                              ; preds = %100
  store i8 0, i8* %76, align 8
  br label %117

105:                                              ; preds = %93, %100
  %106 = phi i8* [ %101, %100 ], [ %87, %93 ]
  %107 = load i8, i8* %76, align 8, !range !5
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %117, label %109

109:                                              ; preds = %105
  %110 = load %class.SkData*, %class.SkData** %3, align 8
  %111 = icmp ne %class.SkData* %110, null
  %112 = zext i1 %111 to i8
  store i8 %112, i8* %106, align 1
  %113 = load i8*, i8** %66, align 8
  %114 = getelementptr inbounds i8, i8* %113, i64 4
  store i8* %114, i8** %66, align 8
  %115 = load i64, i64* %72, align 8
  %116 = add i64 %115, -4
  store i64 %116, i64* %72, align 8
  br label %117

117:                                              ; preds = %109, %105, %104, %60, %55, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERK17SkSamplingOptions(%"class.cc::PaintOpWriter"* nocapture, %struct.SkSamplingOptions* nocapture readonly dereferenceable(20)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %1, i64 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !5
  %5 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, 4
  %8 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %7, label %9, label %10

9:                                                ; preds = %2
  store i8 0, i8* %8, align 8
  br label %20

10:                                               ; preds = %2
  %11 = load i8, i8* %8, align 8, !range !5
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  store i8 %4, i8* %15, align 1
  %16 = load i8*, i8** %14, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 4
  store i8* %17, i8** %14, align 8
  %18 = load i64, i64* %5, align 8
  %19 = add i64 %18, -4
  store i64 %19, i64* %5, align 8
  br label %20

20:                                               ; preds = %9, %10, %13
  %21 = phi i64 [ %6, %9 ], [ %6, %10 ], [ %19, %13 ]
  %22 = load i8, i8* %3, align 4, !range !5
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %55, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %1, i64 0, i32 1, i32 0
  %26 = bitcast float* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = icmp ult i64 %21, 4
  br i1 %28, label %29, label %30

29:                                               ; preds = %24
  store i8 0, i8* %8, align 8
  br label %46

30:                                               ; preds = %24
  %31 = load i8, i8* %8, align 8, !range !5
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %94, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %35 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %36 = load i32*, i32** %35, align 8
  store i32 %27, i32* %36, align 4
  %37 = load i8*, i8** %34, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 4
  store i8* %38, i8** %34, align 8
  %39 = load i64, i64* %5, align 8
  %40 = add i64 %39, -4
  store i64 %40, i64* %5, align 8
  %41 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %1, i64 0, i32 1, i32 1
  %42 = bitcast float* %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = icmp ult i64 %40, 4
  %45 = bitcast i8* %38 to i32*
  br i1 %44, label %46, label %47

46:                                               ; preds = %29, %33
  store i8 0, i8* %8, align 8
  br label %94

47:                                               ; preds = %33
  %48 = load i8, i8* %8, align 8
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %94, label %50

50:                                               ; preds = %47
  store i32 %43, i32* %45, align 4
  %51 = load i8*, i8** %34, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 4
  store i8* %52, i8** %34, align 8
  %53 = load i64, i64* %5, align 8
  %54 = add i64 %53, -4
  store i64 %54, i64* %5, align 8
  br label %94

55:                                               ; preds = %20
  %56 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %1, i64 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp ult i32 %57, 256
  br i1 %58, label %60, label %59, !prof !6

59:                                               ; preds = %55
  tail call void @llvm.trap() #12
  unreachable

60:                                               ; preds = %55
  %61 = trunc i32 %57 to i8
  %62 = icmp ult i64 %21, 4
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  store i8 0, i8* %8, align 8
  br label %74

64:                                               ; preds = %60
  %65 = load i8, i8* %8, align 8, !range !5
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %74, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %69 = load i8*, i8** %68, align 8
  store i8 %61, i8* %69, align 1
  %70 = load i8*, i8** %68, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 4
  store i8* %71, i8** %68, align 8
  %72 = load i64, i64* %5, align 8
  %73 = add i64 %72, -4
  store i64 %73, i64* %5, align 8
  br label %74

74:                                               ; preds = %63, %64, %67
  %75 = phi i64 [ %21, %63 ], [ %21, %64 ], [ %73, %67 ]
  %76 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %1, i64 0, i32 3
  %77 = load i32, i32* %76, align 4
  %78 = icmp ult i32 %77, 256
  br i1 %78, label %80, label %79, !prof !6

79:                                               ; preds = %74
  tail call void @llvm.trap() #12
  unreachable

80:                                               ; preds = %74
  %81 = trunc i32 %77 to i8
  %82 = icmp ult i64 %75, 4
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  store i8 0, i8* %8, align 8
  br label %94

84:                                               ; preds = %80
  %85 = load i8, i8* %8, align 8, !range !5
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %94, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %89 = load i8*, i8** %88, align 8
  store i8 %81, i8* %89, align 1
  %90 = load i8*, i8** %88, align 8
  %91 = getelementptr inbounds i8, i8* %90, i64 4
  store i8* %91, i8** %88, align 8
  %92 = load i64, i64* %5, align 8
  %93 = add i64 %92, -4
  store i64 %93, i64* %5, align 8
  br label %94

94:                                               ; preds = %30, %87, %84, %83, %50, %47, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteEPK12SkColorSpace(%"class.cc::PaintOpWriter"* nocapture, %class.SkColorSpace*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = icmp eq %class.SkColorSpace* %1, null
  br i1 %6, label %7, label %41

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %9 = bitcast %"class.cc::PaintOpWriter"* %0 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 7
  %12 = and i64 %11, -8
  %13 = sub i64 %12, %10
  %14 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, %13
  %17 = inttoptr i64 %10 to i8*
  %18 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  %19 = inttoptr i64 %10 to i64*
  br i1 %16, label %20, label %21

20:                                               ; preds = %7
  store i8 0, i8* %18, align 8
  br label %28

21:                                               ; preds = %7
  %22 = load i8, i8* %18, align 8, !range !5
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %17, i64 %13
  store i8* %25, i8** %8, align 8
  %26 = sub i64 %15, %13
  store i64 %26, i64* %14, align 8
  %27 = bitcast i8* %25 to i64*
  br label %28

28:                                               ; preds = %24, %21, %20
  %29 = phi i8 [ 1, %24 ], [ 0, %21 ], [ 0, %20 ]
  %30 = phi i64* [ %27, %24 ], [ %19, %21 ], [ %19, %20 ]
  %31 = phi i64 [ %26, %24 ], [ %15, %21 ], [ %15, %20 ]
  %32 = icmp ult i64 %31, 8
  br i1 %32, label %33, label %34

33:                                               ; preds = %28
  store i8 0, i8* %18, align 8
  br label %106

34:                                               ; preds = %28
  %35 = icmp eq i8 %29, 0
  br i1 %35, label %106, label %36

36:                                               ; preds = %34
  store i64 0, i64* %30, align 8
  %37 = load i8*, i8** %8, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 8
  store i8* %38, i8** %8, align 8
  %39 = load i64, i64* %14, align 8
  %40 = add i64 %39, -8
  store i64 %40, i64* %14, align 8
  br label %106

41:                                               ; preds = %2
  %42 = tail call i64 @_ZNK12SkColorSpace13writeToMemoryEPv(%class.SkColorSpace* nonnull %1, i8* null) #12
  %43 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %44 = bitcast %"class.cc::PaintOpWriter"* %0 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 7
  %47 = and i64 %46, -8
  %48 = sub i64 %47, %45
  %49 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %48
  %52 = inttoptr i64 %45 to i8*
  %53 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  %54 = inttoptr i64 %45 to i64*
  br i1 %51, label %55, label %56

55:                                               ; preds = %41
  store i8 0, i8* %53, align 8
  br label %63

56:                                               ; preds = %41
  %57 = load i8, i8* %53, align 8, !range !5
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds i8, i8* %52, i64 %48
  store i8* %60, i8** %43, align 8
  %61 = sub i64 %50, %48
  store i64 %61, i64* %49, align 8
  %62 = bitcast i8* %60 to i64*
  br label %63

63:                                               ; preds = %59, %56, %55
  %64 = phi i8* [ %60, %59 ], [ %52, %56 ], [ %52, %55 ]
  %65 = phi i8 [ 1, %59 ], [ 0, %56 ], [ 0, %55 ]
  %66 = phi i64* [ %62, %59 ], [ %54, %56 ], [ %54, %55 ]
  %67 = phi i64 [ %61, %59 ], [ %50, %56 ], [ %50, %55 ]
  %68 = icmp ult i64 %67, 8
  br i1 %68, label %69, label %70

69:                                               ; preds = %63
  store i8 0, i8* %53, align 8
  br label %77

70:                                               ; preds = %63
  %71 = icmp eq i8 %65, 0
  br i1 %71, label %77, label %72

72:                                               ; preds = %70
  store i64 %42, i64* %66, align 8
  %73 = load i8*, i8** %43, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 8
  store i8* %74, i8** %43, align 8
  %75 = load i64, i64* %49, align 8
  %76 = add i64 %75, -8
  store i64 %76, i64* %49, align 8
  br label %77

77:                                               ; preds = %69, %70, %72
  %78 = phi i8* [ %64, %69 ], [ %64, %70 ], [ %74, %72 ]
  %79 = phi i64 [ %67, %69 ], [ %67, %70 ], [ %76, %72 ]
  %80 = icmp ult i64 %79, %42
  br i1 %80, label %81, label %82

81:                                               ; preds = %77
  store i8 0, i8* %53, align 8
  br label %106

82:                                               ; preds = %77
  %83 = load i8, i8* %53, align 8
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %106, label %85

85:                                               ; preds = %82
  %86 = tail call i64 @_ZNK12SkColorSpace13writeToMemoryEPv(%class.SkColorSpace* nonnull %1, i8* %78) #12
  %87 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #12
  %88 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %88, align 8
  %89 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89)
  %90 = icmp eq i64 %86, %42
  br i1 %90, label %91, label %92

91:                                               ; preds = %85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89)
  store i8* null, i8** %88, align 8
  br label %101

92:                                               ; preds = %85
  %93 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %86) #12
  %94 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %42) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* %93, i8* %94) #12
  %95 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %96 = load i8*, i8** %95, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89)
  store i8* %96, i8** %88, align 8
  %97 = icmp eq i8* %96, null
  br i1 %97, label %101, label %98

98:                                               ; preds = %92
  %99 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0), i32 380, %"class.logging::CheckOpResult"* nonnull %4) #12
  %100 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #12
  br label %101

101:                                              ; preds = %91, %92, %98
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #12
  %102 = load i8*, i8** %43, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %86
  store i8* %103, i8** %43, align 8
  %104 = load i64, i64* %49, align 8
  %105 = sub i64 %104, %86
  store i64 %105, i64* %49, align 8
  br label %106

106:                                              ; preds = %81, %36, %34, %33, %101, %82
  ret void
}

declare i64 @_ZNK12SkColorSpace13writeToMemoryEPv(%class.SkColorSpace*, i8*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERK5sk_spI10SkTextBlobE(%"class.cc::PaintOpWriter"* nocapture, %class.sk_sp.128* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkSerialProcs, align 8
  %4 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  %5 = load i8, i8* %4, align 8, !range !5
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %109, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %9 = bitcast %"class.cc::PaintOpWriter"* %0 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 3
  %12 = and i64 %11, -4
  %13 = sub i64 %12, %10
  %14 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, %13
  br i1 %16, label %17, label %19

17:                                               ; preds = %7
  %18 = inttoptr i64 %10 to i32*
  store i8 0, i8* %4, align 8
  br label %25

19:                                               ; preds = %7
  %20 = inttoptr i64 %10 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 %13
  store i8* %21, i8** %8, align 8
  %22 = sub i64 %15, %13
  store i64 %22, i64* %14, align 8
  %23 = bitcast i8* %21 to i32*
  %24 = ptrtoint i8* %21 to i64
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i64 [ %10, %17 ], [ %24, %19 ]
  %27 = phi i32* [ %18, %17 ], [ %23, %19 ]
  %28 = phi i8 [ 0, %17 ], [ 1, %19 ]
  %29 = phi i64 [ %15, %17 ], [ %22, %19 ]
  %30 = getelementptr inbounds %class.sk_sp.128, %class.sk_sp.128* %1, i64 0, i32 0
  %31 = load %class.SkTextBlob*, %class.SkTextBlob** %30, align 8
  %32 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %31, i64 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp ult i64 %29, 4
  br i1 %34, label %35, label %36

35:                                               ; preds = %25
  store i8 0, i8* %4, align 8
  br label %44

36:                                               ; preds = %25
  %37 = icmp eq i8 %28, 0
  br i1 %37, label %44, label %38

38:                                               ; preds = %36
  store i32 %33, i32* %27, align 4
  %39 = load i8*, i8** %8, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 4
  store i8* %40, i8** %8, align 8
  %41 = load i64, i64* %14, align 8
  %42 = add i64 %41, -4
  store i64 %42, i64* %14, align 8
  %43 = ptrtoint i8* %40 to i64
  br label %44

44:                                               ; preds = %35, %36, %38
  %45 = phi i64 [ %29, %35 ], [ %29, %36 ], [ %42, %38 ]
  %46 = phi i64 [ %26, %35 ], [ %26, %36 ], [ %43, %38 ]
  %47 = add i64 %46, 7
  %48 = and i64 %47, -8
  %49 = sub i64 %48, %46
  %50 = icmp ult i64 %45, %49
  %51 = inttoptr i64 %46 to i8*
  %52 = inttoptr i64 %46 to i64*
  br i1 %50, label %53, label %54

53:                                               ; preds = %44
  store i8 0, i8* %4, align 8
  br label %61

54:                                               ; preds = %44
  %55 = load i8, i8* %4, align 8, !range !5
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds i8, i8* %51, i64 %49
  store i8* %58, i8** %8, align 8
  %59 = sub i64 %45, %49
  store i64 %59, i64* %14, align 8
  %60 = bitcast i8* %58 to i64*
  br label %61

61:                                               ; preds = %57, %54, %53
  %62 = phi i8 [ 1, %57 ], [ 0, %54 ], [ 0, %53 ]
  %63 = phi i64* [ %60, %57 ], [ %52, %54 ], [ %52, %53 ]
  %64 = phi i64 [ %59, %57 ], [ %45, %54 ], [ %45, %53 ]
  %65 = icmp ult i64 %64, 8
  br i1 %65, label %66, label %67

66:                                               ; preds = %61
  store i8 0, i8* %4, align 8
  br label %109

67:                                               ; preds = %61
  %68 = icmp eq i8 %62, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %67
  store i64 0, i64* %63, align 8
  %70 = load i8*, i8** %8, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 8
  store i8* %71, i8** %8, align 8
  %72 = load i64, i64* %14, align 8
  %73 = add i64 %72, -8
  store i64 %73, i64* %14, align 8
  %74 = load i8, i8* %4, align 8
  br label %75

75:                                               ; preds = %67, %69
  %76 = phi i8 [ %62, %67 ], [ %74, %69 ]
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %109, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 3
  %80 = load %"struct.cc::PaintOp::SerializeOptions"*, %"struct.cc::PaintOp::SerializeOptions"** %79, align 8
  %81 = getelementptr inbounds %"struct.cc::PaintOp::SerializeOptions", %"struct.cc::PaintOp::SerializeOptions"* %80, i64 0, i32 2
  %82 = load %"class.cc::ClientPaintCache"*, %"class.cc::ClientPaintCache"** %81, align 8
  %83 = tail call zeroext i1 @_ZN2cc16ClientPaintCache3GetENS_18PaintCacheDataTypeEj(%"class.cc::ClientPaintCache"* %82, i32 0, i32 %33) #12
  br i1 %83, label %109, label %84

84:                                               ; preds = %78
  %85 = bitcast %struct.SkSerialProcs* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %85) #12
  %86 = getelementptr inbounds %struct.SkSerialProcs, %struct.SkSerialProcs* %3, i64 0, i32 4
  %87 = getelementptr inbounds %struct.SkSerialProcs, %struct.SkSerialProcs* %3, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 0, i64 48, i1 false) #12
  store void (%class.sk_sp*, %class.SkTypeface*, i8*)* @"_ZZN2cc13PaintOpWriter5WriteERK5sk_spI10SkTextBlobEEN3$_08__invokeEP10SkTypefacePv", void (%class.sk_sp*, %class.SkTypeface*, i8*)** %86, align 8
  %88 = load %"struct.cc::PaintOp::SerializeOptions"*, %"struct.cc::PaintOp::SerializeOptions"** %79, align 8
  %89 = getelementptr inbounds %"struct.cc::PaintOp::SerializeOptions", %"struct.cc::PaintOp::SerializeOptions"* %88, i64 0, i32 3
  %90 = bitcast %class.SkStrikeServer** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast i8** %87 to i64*
  store i64 %91, i64* %92, align 8
  %93 = load %class.SkTextBlob*, %class.SkTextBlob** %30, align 8
  %94 = load i8*, i8** %8, align 8
  %95 = load i64, i64* %14, align 8
  %96 = and i64 %95, -4
  %97 = call i64 @_ZNK10SkTextBlob9serializeERK13SkSerialProcsPvm(%class.SkTextBlob* %93, %struct.SkSerialProcs* nonnull dereferenceable(48) %3, i8* %94, i64 %96) #12
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %84
  store i8 0, i8* %4, align 8
  br label %108

100:                                              ; preds = %84
  %101 = load %"struct.cc::PaintOp::SerializeOptions"*, %"struct.cc::PaintOp::SerializeOptions"** %79, align 8
  %102 = getelementptr inbounds %"struct.cc::PaintOp::SerializeOptions", %"struct.cc::PaintOp::SerializeOptions"* %101, i64 0, i32 2
  %103 = load %"class.cc::ClientPaintCache"*, %"class.cc::ClientPaintCache"** %102, align 8
  call void @_ZN2cc16ClientPaintCache3PutENS_18PaintCacheDataTypeEjm(%"class.cc::ClientPaintCache"* %103, i32 0, i32 %33, i64 %97) #12
  store i64 %97, i64* %63, align 8
  %104 = load i8*, i8** %8, align 8
  %105 = getelementptr inbounds i8, i8* %104, i64 %97
  store i8* %105, i8** %8, align 8
  %106 = load i64, i64* %14, align 8
  %107 = sub i64 %106, %97
  store i64 %107, i64* %14, align 8
  br label %108

108:                                              ; preds = %100, %99
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %85) #12
  br label %109

109:                                              ; preds = %66, %108, %75, %78, %2
  ret void
}

declare i64 @_ZNK10SkTextBlob9serializeERK13SkSerialProcsPvm(%class.SkTextBlob*, %struct.SkSerialProcs* dereferenceable(48), i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter26TransformShaderIfNecessaryEPKNS_11PaintShaderE15SkFilterQualityRK5SkM44PjPN3gfx5SizeFEPbPN3gpu7MailboxE(%class.sk_sp.51* noalias sret, %"class.cc::PaintOpWriter"* nocapture readonly, %"class.cc::PaintShader"*, i32, %class.SkM44* nocapture readonly dereferenceable(64), i32*, %"class.gfx::SizeF"*, i8*, %"struct.gpu::Mailbox"*) local_unnamed_addr #0 align 2 {
  %10 = alloca i32, align 4
  %11 = alloca %class.SkMatrix, align 4
  %12 = alloca %class.sk_sp.51, align 8
  store i32 %3, i32* %10, align 4
  %13 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %2, i64 0, i32 1
  %14 = load i8, i8* %13, align 4
  %15 = bitcast %class.SkMatrix* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #12
  %16 = bitcast %class.SkM44* %4 to i32*
  %17 = load i32, i32* %16, align 4, !noalias !8
  %18 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 4
  %19 = bitcast float* %18 to i32*
  %20 = load i32, i32* %19, align 4, !noalias !8
  %21 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 12
  %22 = bitcast float* %21 to i32*
  %23 = load i32, i32* %22, align 4, !noalias !8
  %24 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 1
  %25 = bitcast float* %24 to i32*
  %26 = load i32, i32* %25, align 4, !noalias !8
  %27 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 5
  %28 = bitcast float* %27 to i32*
  %29 = load i32, i32* %28, align 4, !noalias !8
  %30 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 13
  %31 = bitcast float* %30 to i32*
  %32 = load i32, i32* %31, align 4, !noalias !8
  %33 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 3
  %34 = bitcast float* %33 to i32*
  %35 = load i32, i32* %34, align 4, !noalias !8
  %36 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 7
  %37 = bitcast float* %36 to i32*
  %38 = load i32, i32* %37, align 4, !noalias !8
  %39 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 15
  %40 = bitcast float* %39 to i32*
  %41 = load i32, i32* %40, align 4, !noalias !8
  %42 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 1
  %43 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 1
  %44 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 2
  %45 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 3
  %46 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 4
  %47 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 5
  %48 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 6
  %49 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 7
  %50 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 8
  %51 = bitcast %class.SkMatrix* %11 to i32*
  store i32 %17, i32* %51, align 4, !alias.scope !11
  %52 = bitcast float* %43 to i32*
  store i32 %20, i32* %52, align 4, !alias.scope !11
  %53 = bitcast float* %44 to i32*
  store i32 %23, i32* %53, align 4, !alias.scope !11
  %54 = bitcast float* %45 to i32*
  store i32 %26, i32* %54, align 4, !alias.scope !11
  %55 = bitcast float* %46 to i32*
  store i32 %29, i32* %55, align 4, !alias.scope !11
  %56 = bitcast float* %47 to i32*
  store i32 %32, i32* %56, align 4, !alias.scope !11
  %57 = bitcast float* %48 to i32*
  store i32 %35, i32* %57, align 4, !alias.scope !11
  %58 = bitcast float* %49 to i32*
  store i32 %38, i32* %58, align 4, !alias.scope !11
  %59 = bitcast float* %50 to i32*
  store i32 %41, i32* %59, align 4, !alias.scope !11
  store i32 128, i32* %42, align 4, !alias.scope !11
  switch i8 %14, label %102 [
    i8 6, label %60
    i8 7, label %97
  ]

60:                                               ; preds = %9
  %61 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %2, i64 0, i32 18, i32 15, i32 0
  %62 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %61, align 8
  %63 = icmp eq %"class.cc::PaintWorkletInput"* %62, null
  br i1 %63, label %64, label %69

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %1, i64 0, i32 3
  %66 = load %"struct.cc::PaintOp::SerializeOptions"*, %"struct.cc::PaintOp::SerializeOptions"** %65, align 8
  %67 = getelementptr inbounds %"struct.cc::PaintOp::SerializeOptions", %"struct.cc::PaintOp::SerializeOptions"* %66, i64 0, i32 0
  %68 = load %"class.cc::ImageProvider"*, %"class.cc::ImageProvider"** %67, align 8
  call void @_ZNK2cc11PaintShader18CreateDecodedImageERK8SkMatrix15SkFilterQualityPNS_13ImageProviderEPjPS4_PbPN3gpu7MailboxE(%class.sk_sp.51* sret %0, %"class.cc::PaintShader"* %2, %class.SkMatrix* nonnull dereferenceable(40) %11, i32 %3, %"class.cc::ImageProvider"* %68, i32* %5, i32* nonnull %10, i8* %7, %"struct.gpu::Mailbox"* %8) #12
  br label %109

69:                                               ; preds = %60
  %70 = bitcast %class.sk_sp.51* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #12
  %71 = getelementptr inbounds %class.sk_sp.51, %class.sk_sp.51* %12, i64 0, i32 0
  store %"class.cc::PaintShader"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintShader"*), %"class.cc::PaintShader"** %71, align 8
  %72 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %1, i64 0, i32 3
  %73 = load %"struct.cc::PaintOp::SerializeOptions"*, %"struct.cc::PaintOp::SerializeOptions"** %72, align 8
  %74 = getelementptr inbounds %"struct.cc::PaintOp::SerializeOptions", %"struct.cc::PaintOp::SerializeOptions"* %73, i64 0, i32 0
  %75 = load %"class.cc::ImageProvider"*, %"class.cc::ImageProvider"** %74, align 8
  call void @_ZNK2cc11PaintShader24CreatePaintWorkletRecordEPNS_13ImageProviderE(%class.sk_sp.51* nonnull sret %12, %"class.cc::PaintShader"* %2, %"class.cc::ImageProvider"* %75) #12
  %76 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %71, align 8
  %77 = icmp eq %"class.cc::PaintShader"* %76, null
  br i1 %77, label %78, label %80

78:                                               ; preds = %69
  %79 = getelementptr inbounds %class.sk_sp.51, %class.sk_sp.51* %0, i64 0, i32 0
  store %"class.cc::PaintShader"* null, %"class.cc::PaintShader"** %79, align 8
  br label %96

80:                                               ; preds = %69
  %81 = load %"struct.cc::PaintOp::SerializeOptions"*, %"struct.cc::PaintOp::SerializeOptions"** %72, align 8
  %82 = getelementptr inbounds %"struct.cc::PaintOp::SerializeOptions", %"struct.cc::PaintOp::SerializeOptions"* %81, i64 0, i32 8
  %83 = load i32, i32* %82, align 4
  call void @_ZNK2cc11PaintShader23CreateScaledPaintRecordERK8SkMatrixiPN3gfx5SizeFE(%class.sk_sp.51* sret %0, %"class.cc::PaintShader"* nonnull %76, %class.SkMatrix* nonnull dereferenceable(40) %11, i32 %83, %"class.gfx::SizeF"* %6) #12
  %84 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %71, align 8
  %85 = icmp eq %"class.cc::PaintShader"* %84, null
  br i1 %85, label %96, label %86

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %84, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw add i32* %87, i32 -1 acq_rel
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %90, label %96

90:                                               ; preds = %86
  %91 = bitcast %"class.cc::PaintShader"* %84 to %class.SkRefCntBase*
  %92 = bitcast %"class.cc::PaintShader"* %84 to void (%class.SkRefCntBase*)***
  %93 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %92, align 8
  %94 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %93, i64 2
  %95 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %94, align 8
  call void %95(%class.SkRefCntBase* nonnull %91) #12
  br label %96

96:                                               ; preds = %78, %80, %86, %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #12
  br label %109

97:                                               ; preds = %9
  %98 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %1, i64 0, i32 3
  %99 = load %"struct.cc::PaintOp::SerializeOptions"*, %"struct.cc::PaintOp::SerializeOptions"** %98, align 8
  %100 = getelementptr inbounds %"struct.cc::PaintOp::SerializeOptions", %"struct.cc::PaintOp::SerializeOptions"* %99, i64 0, i32 8
  %101 = load i32, i32* %100, align 4
  call void @_ZNK2cc11PaintShader23CreateScaledPaintRecordERK8SkMatrixiPN3gfx5SizeFE(%class.sk_sp.51* sret %0, %"class.cc::PaintShader"* %2, %class.SkMatrix* nonnull dereferenceable(40) %11, i32 %101, %"class.gfx::SizeF"* %6) #12
  br label %109

102:                                              ; preds = %9
  %103 = icmp eq %"class.cc::PaintShader"* %2, null
  br i1 %103, label %107, label %104

104:                                              ; preds = %102
  %105 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = atomicrmw add i32* %105, i32 1 monotonic, !noalias !14
  br label %107

107:                                              ; preds = %102, %104
  %108 = getelementptr inbounds %class.sk_sp.51, %class.sk_sp.51* %0, i64 0, i32 0
  store %"class.cc::PaintShader"* %2, %"class.cc::PaintShader"** %108, align 8, !alias.scope !14
  br label %109

109:                                              ; preds = %107, %97, %96, %64
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #12
  ret void
}

declare void @_ZNK2cc11PaintShader18CreateDecodedImageERK8SkMatrix15SkFilterQualityPNS_13ImageProviderEPjPS4_PbPN3gpu7MailboxE(%class.sk_sp.51* sret, %"class.cc::PaintShader"*, %class.SkMatrix* dereferenceable(40), i32, %"class.cc::ImageProvider"*, i32*, i32*, i8*, %"struct.gpu::Mailbox"*) local_unnamed_addr #2

declare void @_ZNK2cc11PaintShader24CreatePaintWorkletRecordEPNS_13ImageProviderE(%class.sk_sp.51* sret, %"class.cc::PaintShader"*, %"class.cc::ImageProvider"*) local_unnamed_addr #2

declare void @_ZNK2cc11PaintShader23CreateScaledPaintRecordERK8SkMatrixiPN3gfx5SizeFE(%class.sk_sp.51* sret, %"class.cc::PaintShader"*, %class.SkMatrix* dereferenceable(40), i32, %"class.gfx::SizeF"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteE8SkMatrix(%"class.cc::PaintOpWriter"* nocapture, %class.SkMatrix* byval(%class.SkMatrix) align 8) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = trunc i32 %4 to i8
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %1) #12
  %9 = zext i8 %8 to i32
  store i32 %9, i32* %3, align 4
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi i32 [ %9, %7 ], [ %4, %2 ]
  %12 = and i32 %11, 15
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  store i32 128, i32* %3, align 4
  br label %15

15:                                               ; preds = %14, %10
  %16 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, 40
  %19 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %18, label %20, label %21

20:                                               ; preds = %15
  store i8 0, i8* %19, align 8
  br label %32

21:                                               ; preds = %15
  %22 = load i8, i8* %19, align 8, !range !5
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %32, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = bitcast %class.SkMatrix* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* nonnull align 8 %27, i64 40, i1 false) #12
  %28 = load i8*, i8** %25, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 40
  store i8* %29, i8** %25, align 8
  %30 = load i64, i64* %16, align 8
  %31 = add i64 %30, -40
  store i64 %31, i64* %16, align 8
  br label %32

32:                                               ; preds = %20, %21, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERK5SkM44(%"class.cc::PaintOpWriter"* nocapture, %class.SkM44* nocapture readonly dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 64
  %6 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %5, label %7, label %8

7:                                                ; preds = %2
  store i8 0, i8* %6, align 8
  br label %19

8:                                                ; preds = %2
  %9 = load i8, i8* %6, align 8, !range !5
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %19, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %class.SkM44* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 64, i1 false) #12
  %15 = load i8*, i8** %12, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 64
  store i8* %16, i8** %12, align 8
  %17 = load i64, i64* %3, align 8
  %18 = add i64 %17, -64
  store i64 %18, i64* %3, align 8
  br label %19

19:                                               ; preds = %7, %8, %11
  ret void
}

declare void @_ZN3gpu7MailboxC1Ev(%"struct.gpu::Mailbox"*) unnamed_addr #2

declare void @_ZN2cc10PaintImageC1ERKS0_(%"class.cc::PaintImage"*, %"class.cc::PaintImage"* dereferenceable(104)) unnamed_addr #2

declare void @_ZN2cc9DrawImageC1ENS_10PaintImageEbRK7SkIRect15SkFilterQualityRK5SkM44N4absl8optionalImEERKNSA_IN3gfx10ColorSpaceEEEf(%"class.cc::DrawImage"*, %"class.cc::PaintImage"*, i1 zeroext, %struct.SkIRect* dereferenceable(16), i32, %class.SkM44* dereferenceable(64), %"class.absl::optional.83"* byval(%"class.absl::optional.83") align 8, %"class.absl::optional.88"* dereferenceable(72), float) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN2cc9DrawImageD1Ev(%"class.cc::DrawImage"*) unnamed_addr #7

declare { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZN3gfx13SkRectToRectFERK6SkRect(%struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteEPKNS_13PaintOpBufferERKN3gfx4RectERKNS4_5SizeFE(%"class.cc::PaintOpWriter"* nocapture, %"class.cc::PaintOpBuffer"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::SizeF"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.cc::PaintOp::SerializeOptions", align 8
  %6 = alloca %"class.cc::SimpleBufferSerializer", align 8
  %7 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %8 = bitcast %"class.cc::PaintOpWriter"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, 7
  %11 = and i64 %10, -8
  %12 = sub i64 %11, %9
  %13 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = inttoptr i64 %9 to i8*
  %17 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %15, label %18, label %19

18:                                               ; preds = %4
  store i8 0, i8* %17, align 8
  br label %26

19:                                               ; preds = %4
  %20 = load i8, i8* %17, align 8, !range !5
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds i8, i8* %16, i64 %12
  store i8* %23, i8** %7, align 8
  %24 = sub i64 %14, %12
  store i64 %24, i64* %13, align 8
  %25 = ptrtoint i8* %23 to i64
  br label %26

26:                                               ; preds = %18, %19, %22
  %27 = phi i64 [ %25, %22 ], [ %9, %19 ], [ %9, %18 ]
  %28 = phi i8 [ 1, %22 ], [ 0, %19 ], [ 0, %18 ]
  %29 = phi i64 [ %24, %22 ], [ %14, %19 ], [ %14, %18 ]
  %30 = icmp ult i64 %29, 8
  br i1 %30, label %31, label %32

31:                                               ; preds = %26
  store i8 0, i8* %17, align 8
  br label %80

32:                                               ; preds = %26
  %33 = icmp eq i8 %28, 0
  br i1 %33, label %80, label %34

34:                                               ; preds = %32
  %35 = add i64 %27, 7
  %36 = and i64 %35, -8
  %37 = sub i64 %36, %27
  %38 = icmp ult i64 %29, %37
  br i1 %38, label %39, label %40

39:                                               ; preds = %34
  store i8 0, i8* %17, align 8
  br label %80

40:                                               ; preds = %34
  %41 = inttoptr i64 %27 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 %37
  store i8* %42, i8** %7, align 8
  %43 = sub i64 %29, %37
  store i64 %43, i64* %13, align 8
  %44 = bitcast i8* %42 to i64*
  %45 = icmp ult i64 %43, 8
  br i1 %45, label %46, label %47

46:                                               ; preds = %40
  store i8 0, i8* %17, align 8
  br label %80

47:                                               ; preds = %40
  store i64 0, i64* %44, align 8
  %48 = load i8*, i8** %7, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 8
  store i8* %49, i8** %7, align 8
  %50 = load i64, i64* %13, align 8
  %51 = add i64 %50, -8
  store i64 %51, i64* %13, align 8
  %52 = load i8, i8* %17, align 8
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %80, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 5
  %56 = load i8, i8* %55, align 1, !range !5
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %80

58:                                               ; preds = %54
  %59 = bitcast %"struct.cc::PaintOp::SerializeOptions"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %59) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 56, i1 false)
  %60 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 3
  %61 = load %"struct.cc::PaintOp::SerializeOptions"*, %"struct.cc::PaintOp::SerializeOptions"** %60, align 8
  call void @_ZN2cc7PaintOp16SerializeOptionsC1ERKS1_(%"struct.cc::PaintOp::SerializeOptions"* nonnull %5, %"struct.cc::PaintOp::SerializeOptions"* dereferenceable(56) %61) #12
  %62 = getelementptr inbounds %"struct.cc::PaintOp::SerializeOptions", %"struct.cc::PaintOp::SerializeOptions"* %5, i64 0, i32 5
  store i8 0, i8* %62, align 8
  %63 = bitcast %"class.cc::SimpleBufferSerializer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %63) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 -86, i64 104, i1 false)
  %64 = load i8*, i8** %7, align 8
  %65 = load i64, i64* %13, align 8
  call void @_ZN2cc22SimpleBufferSerializerC1EPvmRKNS_7PaintOp16SerializeOptionsE(%"class.cc::SimpleBufferSerializer"* nonnull %6, i8* %64, i64 %65, %"struct.cc::PaintOp::SerializeOptions"* nonnull dereferenceable(56) %5) #12
  %66 = bitcast %"class.cc::SimpleBufferSerializer"* %6 to %"class.cc::PaintOpBufferSerializer"*
  call void @_ZN2cc23PaintOpBufferSerializer9SerializeEPKNS_13PaintOpBufferERKN3gfx4RectERKNS4_5SizeFE(%"class.cc::PaintOpBufferSerializer"* nonnull %66, %"class.cc::PaintOpBuffer"* %1, %"class.gfx::Rect"* dereferenceable(16) %2, %"class.gfx::SizeF"* dereferenceable(8) %3) #12
  %67 = getelementptr inbounds %"class.cc::SimpleBufferSerializer", %"class.cc::SimpleBufferSerializer"* %6, i64 0, i32 0, i32 3
  %68 = load i8, i8* %67, align 8, !range !5
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %58
  store i8 0, i8* %17, align 8
  br label %79

71:                                               ; preds = %58
  %72 = getelementptr inbounds %"class.cc::SimpleBufferSerializer", %"class.cc::SimpleBufferSerializer"* %6, i64 0, i32 3
  %73 = load i64, i64* %72, align 8
  store i64 %73, i64* %44, align 8
  %74 = load i64, i64* %72, align 8
  %75 = load i8*, i8** %7, align 8
  %76 = getelementptr inbounds i8, i8* %75, i64 %74
  store i8* %76, i8** %7, align 8
  %77 = load i64, i64* %13, align 8
  %78 = sub i64 %77, %74
  store i64 %78, i64* %13, align 8
  br label %79

79:                                               ; preds = %71, %70
  call void @_ZN2cc22SimpleBufferSerializerD1Ev(%"class.cc::SimpleBufferSerializer"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %63) #12
  call void @_ZN2cc7PaintOp16SerializeOptionsD1Ev(%"struct.cc::PaintOp::SerializeOptions"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %59) #12
  br label %80

80:                                               ; preds = %46, %39, %31, %79, %47, %54, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteE15SkYUVColorSpace(%"class.cc::PaintOpWriter"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 4
  %6 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %5, label %7, label %8

7:                                                ; preds = %2
  store i8 0, i8* %6, align 8
  br label %19

8:                                                ; preds = %2
  %9 = load i8, i8* %6, align 8, !range !5
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %19, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %13 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %14 = load i32*, i32** %13, align 8
  store i32 %1, i32* %14, align 4
  %15 = load i8*, i8** %12, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 4
  store i8* %16, i8** %12, align 8
  %17 = load i64, i64* %3, align 8
  %18 = add i64 %17, -4
  store i64 %18, i64* %3, align 8
  br label %19

19:                                               ; preds = %7, %8, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteEN10SkYUVAInfo11PlaneConfigE(%"class.cc::PaintOpWriter"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 4
  %6 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %5, label %7, label %8

7:                                                ; preds = %2
  store i8 0, i8* %6, align 8
  br label %19

8:                                                ; preds = %2
  %9 = load i8, i8* %6, align 8, !range !5
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %19, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %13 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %14 = load i32*, i32** %13, align 8
  store i32 %1, i32* %14, align 4
  %15 = load i8*, i8** %12, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 4
  store i8* %16, i8** %12, align 8
  %17 = load i64, i64* %3, align 8
  %18 = add i64 %17, -4
  store i64 %18, i64* %3, align 8
  br label %19

19:                                               ; preds = %7, %8, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteEN10SkYUVAInfo11SubsamplingE(%"class.cc::PaintOpWriter"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 4
  %6 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %5, label %7, label %8

7:                                                ; preds = %2
  store i8 0, i8* %6, align 8
  br label %19

8:                                                ; preds = %2
  %9 = load i8, i8* %6, align 8, !range !5
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %19, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %13 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %14 = load i32*, i32** %13, align 8
  store i32 %1, i32* %14, align 4
  %15 = load i8*, i8** %12, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 4
  store i8* %16, i8** %12, align 8
  %17 = load i64, i64* %3, align 8
  %18 = add i64 %17, -4
  store i64 %18, i64* %3, align 8
  br label %19

19:                                               ; preds = %7, %8, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERKNS_22ColorFilterPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"*, %"class.cc::ColorFilterPaintFilter"* nocapture readonly dereferenceable(72), %class.SkM44* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %1, i64 0, i32 1, i32 0
  %5 = bitcast %class.SkColorFilter** %4 to %class.SkFlattenable**
  %6 = load %class.SkFlattenable*, %class.SkFlattenable** %5, align 8
  %7 = icmp eq %class.SkFlattenable* %6, null
  %8 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %9 = bitcast %"class.cc::PaintOpWriter"* %0 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 7
  %12 = and i64 %11, -8
  %13 = sub i64 %12, %10
  %14 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, %13
  %17 = inttoptr i64 %10 to i8*
  %18 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  %19 = inttoptr i64 %10 to i64*
  br i1 %16, label %20, label %21

20:                                               ; preds = %3
  store i8 0, i8* %18, align 8
  br label %28

21:                                               ; preds = %3
  %22 = load i8, i8* %18, align 8, !range !5
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %17, i64 %13
  store i8* %25, i8** %8, align 8
  %26 = sub i64 %15, %13
  store i64 %26, i64* %14, align 8
  %27 = bitcast i8* %25 to i64*
  br label %28

28:                                               ; preds = %24, %21, %20
  %29 = phi i8* [ %25, %24 ], [ %17, %21 ], [ %17, %20 ]
  %30 = phi i8 [ 1, %24 ], [ 0, %21 ], [ 0, %20 ]
  %31 = phi i64* [ %27, %24 ], [ %19, %21 ], [ %19, %20 ]
  %32 = phi i64 [ %26, %24 ], [ %15, %21 ], [ %15, %20 ]
  %33 = icmp ult i64 %32, 8
  br i1 %33, label %34, label %35

34:                                               ; preds = %28
  store i8 0, i8* %18, align 8
  br label %42

35:                                               ; preds = %28
  %36 = icmp eq i8 %30, 0
  br i1 %36, label %42, label %37

37:                                               ; preds = %35
  store i64 0, i64* %31, align 8
  %38 = load i8*, i8** %8, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 8
  store i8* %39, i8** %8, align 8
  %40 = load i64, i64* %14, align 8
  %41 = add i64 %40, -8
  store i64 %41, i64* %14, align 8
  br label %42

42:                                               ; preds = %37, %35, %34
  %43 = phi i64 [ %32, %34 ], [ %32, %35 ], [ %41, %37 ]
  %44 = phi i8* [ %29, %34 ], [ %29, %35 ], [ %39, %37 ]
  br i1 %7, label %58, label %45

45:                                               ; preds = %42
  %46 = load i8, i8* %18, align 8, !range !5
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %58, label %48

48:                                               ; preds = %45
  %49 = and i64 %43, -4
  %50 = tail call i64 @_ZNK13SkFlattenable9serializeEPvmPK13SkSerialProcs(%class.SkFlattenable* nonnull %6, i8* %44, i64 %49, %struct.SkSerialProcs* null) #12
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %48
  store i8 0, i8* %18, align 8
  br label %58

53:                                               ; preds = %48
  store i64 %50, i64* %31, align 8
  %54 = load i8*, i8** %8, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %50
  store i8* %55, i8** %8, align 8
  %56 = load i64, i64* %14, align 8
  %57 = sub i64 %56, %50
  store i64 %57, i64* %14, align 8
  br label %58

58:                                               ; preds = %42, %45, %52, %53
  %59 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %1, i64 0, i32 2, i32 0
  %60 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %59, align 8
  tail call void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintFilter"* %60, %class.SkM44* dereferenceable(64) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERKNS_15BlurPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"*, %"class.cc::BlurPaintFilter"* nocapture readonly dereferenceable(80), %class.SkM44* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %1, i64 0, i32 1
  %5 = bitcast float* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, 4
  %10 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %9, label %11, label %12

11:                                               ; preds = %3
  store i8 0, i8* %10, align 8
  br label %24

12:                                               ; preds = %3
  %13 = load i8, i8* %10, align 8, !range !5
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %26, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %17 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %18 = load i32*, i32** %17, align 8
  store i32 %6, i32* %18, align 4
  %19 = load i8*, i8** %16, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 4
  store i8* %20, i8** %16, align 8
  %21 = load i64, i64* %7, align 8
  %22 = add i64 %21, -4
  store i64 %22, i64* %7, align 8
  %23 = icmp ult i64 %22, 4
  br i1 %23, label %24, label %26

24:                                               ; preds = %11, %15
  %25 = phi i64 [ %8, %11 ], [ %22, %15 ]
  store i8 0, i8* %10, align 8
  br label %41

26:                                               ; preds = %12, %15
  %27 = phi i64 [ %22, %15 ], [ %8, %12 ]
  %28 = load i8, i8* %10, align 8, !range !5
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %41, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %1, i64 0, i32 2
  %32 = bitcast float* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %35 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %36 = load i32*, i32** %35, align 8
  store i32 %33, i32* %36, align 4
  %37 = load i8*, i8** %34, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 4
  store i8* %38, i8** %34, align 8
  %39 = load i64, i64* %7, align 8
  %40 = add i64 %39, -4
  store i64 %40, i64* %7, align 8
  br label %41

41:                                               ; preds = %24, %26, %30
  %42 = phi i64 [ %25, %24 ], [ %27, %26 ], [ %40, %30 ]
  %43 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %1, i64 0, i32 3
  %44 = load i32, i32* %43, align 8
  %45 = icmp ult i32 %44, 256
  br i1 %45, label %47, label %46, !prof !6

46:                                               ; preds = %41
  tail call void @llvm.trap() #12
  unreachable

47:                                               ; preds = %41
  %48 = trunc i32 %44 to i8
  %49 = icmp ult i64 %42, 4
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  store i8 0, i8* %10, align 8
  br label %61

51:                                               ; preds = %47
  %52 = load i8, i8* %10, align 8, !range !5
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %61, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %56 = load i8*, i8** %55, align 8
  store i8 %48, i8* %56, align 1
  %57 = load i8*, i8** %55, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 4
  store i8* %58, i8** %55, align 8
  %59 = load i64, i64* %7, align 8
  %60 = add i64 %59, -4
  store i64 %60, i64* %7, align 8
  br label %61

61:                                               ; preds = %50, %51, %54
  %62 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %1, i64 0, i32 4, i32 0
  %63 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %62, align 8
  tail call void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintFilter"* %63, %class.SkM44* dereferenceable(64) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERKNS_21DropShadowPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"*, %"class.cc::DropShadowPaintFilter"* nocapture readonly dereferenceable(88), %class.SkM44* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %1, i64 0, i32 1
  %5 = bitcast float* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, 4
  %10 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %9, label %11, label %12

11:                                               ; preds = %3
  store i8 0, i8* %10, align 8
  br label %24

12:                                               ; preds = %3
  %13 = load i8, i8* %10, align 8, !range !5
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %26, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %17 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %18 = load i32*, i32** %17, align 8
  store i32 %6, i32* %18, align 4
  %19 = load i8*, i8** %16, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 4
  store i8* %20, i8** %16, align 8
  %21 = load i64, i64* %7, align 8
  %22 = add i64 %21, -4
  store i64 %22, i64* %7, align 8
  %23 = icmp ult i64 %22, 4
  br i1 %23, label %24, label %26

24:                                               ; preds = %15, %11
  %25 = phi i64 [ %8, %11 ], [ %22, %15 ]
  store i8 0, i8* %10, align 8
  br label %42

26:                                               ; preds = %12, %15
  %27 = phi i64 [ %22, %15 ], [ %8, %12 ]
  %28 = load i8, i8* %10, align 8, !range !5
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %44, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %1, i64 0, i32 2
  %32 = bitcast float* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %35 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %36 = load i32*, i32** %35, align 8
  store i32 %33, i32* %36, align 4
  %37 = load i8*, i8** %34, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 4
  store i8* %38, i8** %34, align 8
  %39 = load i64, i64* %7, align 8
  %40 = add i64 %39, -4
  store i64 %40, i64* %7, align 8
  %41 = icmp ult i64 %40, 4
  br i1 %41, label %42, label %44

42:                                               ; preds = %30, %24
  %43 = phi i64 [ %25, %24 ], [ %40, %30 ]
  store i8 0, i8* %10, align 8
  br label %60

44:                                               ; preds = %26, %30
  %45 = phi i64 [ %40, %30 ], [ %27, %26 ]
  %46 = load i8, i8* %10, align 8, !range !5
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %62, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %1, i64 0, i32 3
  %50 = bitcast float* %49 to i32*
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %53 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %54 = load i32*, i32** %53, align 8
  store i32 %51, i32* %54, align 4
  %55 = load i8*, i8** %52, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 4
  store i8* %56, i8** %52, align 8
  %57 = load i64, i64* %7, align 8
  %58 = add i64 %57, -4
  store i64 %58, i64* %7, align 8
  %59 = icmp ult i64 %58, 4
  br i1 %59, label %60, label %62

60:                                               ; preds = %48, %42
  %61 = phi i64 [ %43, %42 ], [ %58, %48 ]
  store i8 0, i8* %10, align 8
  br label %80

62:                                               ; preds = %44, %48
  %63 = phi i64 [ %58, %48 ], [ %45, %44 ]
  %64 = load i8, i8* %10, align 8, !range !5
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %93, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %1, i64 0, i32 4
  %68 = bitcast float* %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %71 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %72 = load i32*, i32** %71, align 8
  store i32 %69, i32* %72, align 4
  %73 = load i8*, i8** %70, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 4
  store i8* %74, i8** %70, align 8
  %75 = load i64, i64* %7, align 8
  %76 = add i64 %75, -4
  store i64 %76, i64* %7, align 8
  %77 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %1, i64 0, i32 5
  %78 = load i32, i32* %77, align 8
  %79 = icmp ult i64 %76, 4
  br i1 %79, label %80, label %82

80:                                               ; preds = %60, %66
  %81 = phi i64 [ %61, %60 ], [ %76, %66 ]
  store i8 0, i8* %10, align 8
  br label %93

82:                                               ; preds = %66
  %83 = load i8, i8* %10, align 8
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %93, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %87 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %88 = load i32*, i32** %87, align 8
  store i32 %78, i32* %88, align 4
  %89 = load i8*, i8** %86, align 8
  %90 = getelementptr inbounds i8, i8* %89, i64 4
  store i8* %90, i8** %86, align 8
  %91 = load i64, i64* %7, align 8
  %92 = add i64 %91, -4
  store i64 %92, i64* %7, align 8
  br label %93

93:                                               ; preds = %62, %80, %82, %85
  %94 = phi i64 [ %81, %80 ], [ %76, %82 ], [ %92, %85 ], [ %63, %62 ]
  %95 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %1, i64 0, i32 6
  %96 = load i32, i32* %95, align 4
  %97 = icmp ult i32 %96, 256
  br i1 %97, label %99, label %98, !prof !6

98:                                               ; preds = %93
  tail call void @llvm.trap() #12
  unreachable

99:                                               ; preds = %93
  %100 = trunc i32 %96 to i8
  %101 = icmp ult i64 %94, 4
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  store i8 0, i8* %10, align 8
  br label %113

103:                                              ; preds = %99
  %104 = load i8, i8* %10, align 8, !range !5
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %113, label %106

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %108 = load i8*, i8** %107, align 8
  store i8 %100, i8* %108, align 1
  %109 = load i8*, i8** %107, align 8
  %110 = getelementptr inbounds i8, i8* %109, i64 4
  store i8* %110, i8** %107, align 8
  %111 = load i64, i64* %7, align 8
  %112 = add i64 %111, -4
  store i64 %112, i64* %7, align 8
  br label %113

113:                                              ; preds = %102, %103, %106
  %114 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %1, i64 0, i32 7, i32 0
  %115 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %114, align 8
  tail call void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintFilter"* %115, %class.SkM44* dereferenceable(64) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERKNS_20MagnifierPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"*, %"class.cc::MagnifierPaintFilter"* nocapture readonly dereferenceable(88), %class.SkM44* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %1, i64 0, i32 1
  %5 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, 16
  %8 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %7, label %9, label %10

9:                                                ; preds = %3
  store i8 0, i8* %8, align 8
  br label %21

10:                                               ; preds = %3
  %11 = load i8, i8* %8, align 8, !range !5
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %25, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = bitcast %struct.SkRect* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %16, i64 16, i1 false) #12
  %17 = load i8*, i8** %14, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 16
  store i8* %18, i8** %14, align 8
  %19 = load i64, i64* %5, align 8
  %20 = add i64 %19, -16
  store i64 %20, i64* %5, align 8
  br label %21

21:                                               ; preds = %9, %13
  %22 = phi i64 [ %6, %9 ], [ %20, %13 ]
  %23 = icmp ult i64 %22, 4
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  store i8 0, i8* %8, align 8
  br label %39

25:                                               ; preds = %10, %21
  %26 = load i8, i8* %8, align 8, !range !5
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %39, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %1, i64 0, i32 2
  %30 = bitcast float* %29 to i32*
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %33 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %34 = load i32*, i32** %33, align 8
  store i32 %31, i32* %34, align 4
  %35 = load i8*, i8** %32, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 4
  store i8* %36, i8** %32, align 8
  %37 = load i64, i64* %5, align 8
  %38 = add i64 %37, -4
  store i64 %38, i64* %5, align 8
  br label %39

39:                                               ; preds = %24, %25, %28
  %40 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %1, i64 0, i32 3, i32 0
  %41 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %40, align 8
  tail call void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintFilter"* %41, %class.SkM44* dereferenceable(64) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERKNS_18ComposePaintFilterERK5SkM44(%"class.cc::PaintOpWriter"*, %"class.cc::ComposePaintFilter"* nocapture readonly dereferenceable(72), %class.SkM44* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::ComposePaintFilter", %"class.cc::ComposePaintFilter"* %1, i64 0, i32 1, i32 0
  %5 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %4, align 8
  tail call void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintFilter"* %5, %class.SkM44* dereferenceable(64) %2)
  %6 = getelementptr inbounds %"class.cc::ComposePaintFilter", %"class.cc::ComposePaintFilter"* %1, i64 0, i32 2, i32 0
  %7 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %6, align 8
  tail call void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintFilter"* %7, %class.SkM44* dereferenceable(64) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERKNS_25AlphaThresholdPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"*, %"class.cc::AlphaThresholdPaintFilter"* dereferenceable(96), %class.SkM44* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %1, i64 0, i32 1
  tail call void @_ZN2cc13PaintOpWriter5WriteERK8SkRegion(%"class.cc::PaintOpWriter"* %0, %class.SkRegion* dereferenceable(24) %4)
  %5 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %1, i64 0, i32 2
  %6 = bitcast float* %5 to i32*
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %9, 4
  %11 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %10, label %12, label %13

12:                                               ; preds = %3
  store i8 0, i8* %11, align 8
  br label %25

13:                                               ; preds = %3
  %14 = load i8, i8* %11, align 8, !range !5
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %26, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %18 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %19 = load i32*, i32** %18, align 8
  store i32 %7, i32* %19, align 4
  %20 = load i8*, i8** %17, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 4
  store i8* %21, i8** %17, align 8
  %22 = load i64, i64* %8, align 8
  %23 = add i64 %22, -4
  store i64 %23, i64* %8, align 8
  %24 = icmp ult i64 %23, 4
  br i1 %24, label %25, label %26

25:                                               ; preds = %12, %16
  store i8 0, i8* %11, align 8
  br label %40

26:                                               ; preds = %13, %16
  %27 = load i8, i8* %11, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %40, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %1, i64 0, i32 3
  %31 = bitcast float* %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %34 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %35 = load i32*, i32** %34, align 8
  store i32 %32, i32* %35, align 4
  %36 = load i8*, i8** %33, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 4
  store i8* %37, i8** %33, align 8
  %38 = load i64, i64* %8, align 8
  %39 = add i64 %38, -4
  store i64 %39, i64* %8, align 8
  br label %40

40:                                               ; preds = %25, %26, %29
  %41 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %1, i64 0, i32 4, i32 0
  %42 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %41, align 8
  tail call void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintFilter"* %42, %class.SkM44* dereferenceable(64) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERKNS_19XfermodePaintFilterERK5SkM44(%"class.cc::PaintOpWriter"*, %"class.cc::XfermodePaintFilter"* nocapture readonly dereferenceable(80), %class.SkM44* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, 256
  br i1 %6, label %8, label %7, !prof !6

7:                                                ; preds = %3
  tail call void @llvm.trap() #12
  unreachable

8:                                                ; preds = %3
  %9 = trunc i32 %5 to i8
  %10 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %11, 4
  %13 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %12, label %14, label %15

14:                                               ; preds = %8
  store i8 0, i8* %13, align 8
  br label %25

15:                                               ; preds = %8
  %16 = load i8, i8* %13, align 8, !range !5
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  store i8 %9, i8* %20, align 1
  %21 = load i8*, i8** %19, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 4
  store i8* %22, i8** %19, align 8
  %23 = load i64, i64* %10, align 8
  %24 = add i64 %23, -4
  store i64 %24, i64* %10, align 8
  br label %25

25:                                               ; preds = %14, %15, %18
  %26 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %1, i64 0, i32 2, i32 0
  %27 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %26, align 8
  tail call void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintFilter"* %27, %class.SkM44* dereferenceable(64) %2)
  %28 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %1, i64 0, i32 3, i32 0
  %29 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %28, align 8
  tail call void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintFilter"* %29, %class.SkM44* dereferenceable(64) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERKNS_21ArithmeticPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"*, %"class.cc::ArithmeticPaintFilter"* nocapture readonly dereferenceable(96), %class.SkM44* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %1, i64 0, i32 1
  %5 = bitcast float* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, 4
  %10 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %9, label %11, label %12

11:                                               ; preds = %3
  store i8 0, i8* %10, align 8
  br label %24

12:                                               ; preds = %3
  %13 = load i8, i8* %10, align 8, !range !5
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %25, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %17 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %18 = load i32*, i32** %17, align 8
  store i32 %6, i32* %18, align 4
  %19 = load i8*, i8** %16, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 4
  store i8* %20, i8** %16, align 8
  %21 = load i64, i64* %7, align 8
  %22 = add i64 %21, -4
  store i64 %22, i64* %7, align 8
  %23 = icmp ult i64 %22, 4
  br i1 %23, label %24, label %25

24:                                               ; preds = %15, %11
  store i8 0, i8* %10, align 8
  br label %40

25:                                               ; preds = %12, %15
  %26 = load i8, i8* %10, align 8, !range !5
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %41, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %1, i64 0, i32 2
  %30 = bitcast float* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %33 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %34 = load i32*, i32** %33, align 8
  store i32 %31, i32* %34, align 4
  %35 = load i8*, i8** %32, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 4
  store i8* %36, i8** %32, align 8
  %37 = load i64, i64* %7, align 8
  %38 = add i64 %37, -4
  store i64 %38, i64* %7, align 8
  %39 = icmp ult i64 %38, 4
  br i1 %39, label %40, label %41

40:                                               ; preds = %28, %24
  store i8 0, i8* %10, align 8
  br label %56

41:                                               ; preds = %25, %28
  %42 = load i8, i8* %10, align 8, !range !5
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %57, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %1, i64 0, i32 3
  %46 = bitcast float* %45 to i32*
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %49 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %50 = load i32*, i32** %49, align 8
  store i32 %47, i32* %50, align 4
  %51 = load i8*, i8** %48, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 4
  store i8* %52, i8** %48, align 8
  %53 = load i64, i64* %7, align 8
  %54 = add i64 %53, -4
  store i64 %54, i64* %7, align 8
  %55 = icmp ult i64 %54, 4
  br i1 %55, label %56, label %57

56:                                               ; preds = %44, %40
  store i8 0, i8* %10, align 8
  br label %74

57:                                               ; preds = %41, %44
  %58 = load i8, i8* %10, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %85, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %1, i64 0, i32 4
  %62 = bitcast float* %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %65 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %66 = load i32*, i32** %65, align 8
  store i32 %63, i32* %66, align 4
  %67 = load i8*, i8** %64, align 8
  %68 = getelementptr inbounds i8, i8* %67, i64 4
  store i8* %68, i8** %64, align 8
  %69 = load i64, i64* %7, align 8
  %70 = add i64 %69, -4
  store i64 %70, i64* %7, align 8
  %71 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %1, i64 0, i32 5
  %72 = load i8, i8* %71, align 8, !range !5
  %73 = icmp ult i64 %70, 4
  br i1 %73, label %74, label %75

74:                                               ; preds = %56, %60
  store i8 0, i8* %10, align 8
  br label %85

75:                                               ; preds = %60
  %76 = load i8, i8* %10, align 8
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %85, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %80 = load i8*, i8** %79, align 8
  store i8 %72, i8* %80, align 1
  %81 = load i8*, i8** %79, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 4
  store i8* %82, i8** %79, align 8
  %83 = load i64, i64* %7, align 8
  %84 = add i64 %83, -4
  store i64 %84, i64* %7, align 8
  br label %85

85:                                               ; preds = %57, %74, %75, %78
  %86 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %1, i64 0, i32 6, i32 0
  %87 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %86, align 8
  tail call void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintFilter"* %87, %class.SkM44* dereferenceable(64) %2)
  %88 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %1, i64 0, i32 7, i32 0
  %89 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %88, align 8
  tail call void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintFilter"* %89, %class.SkM44* dereferenceable(64) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERKNS_28MatrixConvolutionPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"*, %"class.cc::MatrixConvolutionPaintFilter"* nocapture readonly dereferenceable(152), %class.SkM44* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %1, i64 0, i32 1
  %5 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, 8
  %8 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %7, label %9, label %10

9:                                                ; preds = %3
  store i8 0, i8* %8, align 8
  br label %23

10:                                               ; preds = %3
  %11 = load i8, i8* %8, align 8, !range !5
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %15 = bitcast %"class.cc::PaintOpWriter"* %0 to i64**
  %16 = load i64*, i64** %15, align 8
  %17 = bitcast %struct.SkISize* %4 to i64*
  %18 = load i64, i64* %17, align 4
  store i64 %18, i64* %16, align 4
  %19 = load i8*, i8** %14, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 8
  store i8* %20, i8** %14, align 8
  %21 = load i64, i64* %5, align 8
  %22 = add i64 %21, -8
  store i64 %22, i64* %5, align 8
  br label %23

23:                                               ; preds = %9, %10, %13
  %24 = phi i64 [ %6, %9 ], [ %6, %10 ], [ %22, %13 ]
  %25 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %1, i64 0, i32 1, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  %31 = mul nsw i64 %30, %27
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %23
  %34 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %35 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %36 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  br label %128

37:                                               ; preds = %146, %23
  %38 = phi i64 [ %24, %23 ], [ %147, %146 ]
  %39 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %1, i64 0, i32 3
  %40 = bitcast float* %39 to i32*
  %41 = load i32, i32* %40, align 8
  %42 = icmp ult i64 %38, 4
  br i1 %42, label %43, label %44

43:                                               ; preds = %37
  store i8 0, i8* %8, align 8
  br label %56

44:                                               ; preds = %37
  %45 = load i8, i8* %8, align 8, !range !5
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %72, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %49 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %50 = load i32*, i32** %49, align 8
  store i32 %41, i32* %50, align 4
  %51 = load i8*, i8** %48, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 4
  store i8* %52, i8** %48, align 8
  %53 = load i64, i64* %5, align 8
  %54 = add i64 %53, -4
  store i64 %54, i64* %5, align 8
  %55 = icmp ult i64 %54, 4
  br i1 %55, label %56, label %58

56:                                               ; preds = %47, %43
  %57 = phi i64 [ %38, %43 ], [ %54, %47 ]
  store i8 0, i8* %8, align 8
  br label %78

58:                                               ; preds = %47
  %59 = load i8, i8* %8, align 8, !range !5
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %72, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %1, i64 0, i32 4
  %63 = bitcast float* %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %66 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %67 = load i32*, i32** %66, align 8
  store i32 %64, i32* %67, align 4
  %68 = load i8*, i8** %65, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 4
  store i8* %69, i8** %65, align 8
  %70 = load i64, i64* %5, align 8
  %71 = add i64 %70, -4
  store i64 %71, i64* %5, align 8
  br label %72

72:                                               ; preds = %44, %58, %61
  %73 = phi i64 [ %71, %61 ], [ %54, %58 ], [ %38, %44 ]
  %74 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %1, i64 0, i32 5
  %75 = bitcast %struct.SkIPoint* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = icmp ult i64 %73, 8
  br i1 %77, label %78, label %80

78:                                               ; preds = %56, %72
  %79 = phi i64 [ %57, %56 ], [ %73, %72 ]
  store i8 0, i8* %8, align 8
  br label %91

80:                                               ; preds = %72
  %81 = load i8, i8* %8, align 8, !range !5
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %91, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %85 = bitcast %"class.cc::PaintOpWriter"* %0 to i64**
  %86 = load i64*, i64** %85, align 8
  store i64 %76, i64* %86, align 4
  %87 = load i8*, i8** %84, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 8
  store i8* %88, i8** %84, align 8
  %89 = load i64, i64* %5, align 8
  %90 = add i64 %89, -8
  store i64 %90, i64* %5, align 8
  br label %91

91:                                               ; preds = %78, %80, %83
  %92 = phi i64 [ %79, %78 ], [ %73, %80 ], [ %90, %83 ]
  %93 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %1, i64 0, i32 6
  %94 = load i32, i32* %93, align 8
  %95 = icmp ult i32 %94, 256
  br i1 %95, label %97, label %96, !prof !6

96:                                               ; preds = %91
  tail call void @llvm.trap() #12
  unreachable

97:                                               ; preds = %91
  %98 = trunc i32 %94 to i8
  %99 = icmp ult i64 %92, 4
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  store i8 0, i8* %8, align 8
  br label %112

101:                                              ; preds = %97
  %102 = load i8, i8* %8, align 8, !range !5
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %125, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %106 = load i8*, i8** %105, align 8
  store i8 %98, i8* %106, align 1
  %107 = load i8*, i8** %105, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 4
  store i8* %108, i8** %105, align 8
  %109 = load i64, i64* %5, align 8
  %110 = add i64 %109, -4
  store i64 %110, i64* %5, align 8
  %111 = icmp ult i64 %110, 4
  br i1 %111, label %112, label %113

112:                                              ; preds = %100, %104
  store i8 0, i8* %8, align 8
  br label %125

113:                                              ; preds = %104
  %114 = load i8, i8* %8, align 8, !range !5
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %125, label %116

116:                                              ; preds = %113
  %117 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %1, i64 0, i32 7
  %118 = load i8, i8* %117, align 4, !range !5
  %119 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %120 = load i8*, i8** %119, align 8
  store i8 %118, i8* %120, align 1
  %121 = load i8*, i8** %119, align 8
  %122 = getelementptr inbounds i8, i8* %121, i64 4
  store i8* %122, i8** %119, align 8
  %123 = load i64, i64* %5, align 8
  %124 = add i64 %123, -4
  store i64 %124, i64* %5, align 8
  br label %125

125:                                              ; preds = %101, %112, %113, %116
  %126 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %1, i64 0, i32 8, i32 0
  %127 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %126, align 8
  tail call void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintFilter"* %127, %class.SkM44* dereferenceable(64) %2)
  ret void

128:                                              ; preds = %146, %33
  %129 = phi i64 [ %24, %33 ], [ %147, %146 ]
  %130 = phi i64 [ 0, %33 ], [ %148, %146 ]
  %131 = load float*, float** %34, align 8
  %132 = getelementptr inbounds float, float* %131, i64 %130
  %133 = bitcast float* %132 to i32*
  %134 = load i32, i32* %133, align 4
  %135 = icmp ult i64 %129, 4
  br i1 %135, label %136, label %137

136:                                              ; preds = %128
  store i8 0, i8* %8, align 8
  br label %146

137:                                              ; preds = %128
  %138 = load i8, i8* %8, align 8, !range !5
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %146, label %140

140:                                              ; preds = %137
  %141 = load i32*, i32** %36, align 8
  store i32 %134, i32* %141, align 4
  %142 = load i8*, i8** %35, align 8
  %143 = getelementptr inbounds i8, i8* %142, i64 4
  store i8* %143, i8** %35, align 8
  %144 = load i64, i64* %5, align 8
  %145 = add i64 %144, -4
  store i64 %145, i64* %5, align 8
  br label %146

146:                                              ; preds = %136, %137, %140
  %147 = phi i64 [ %129, %136 ], [ %129, %137 ], [ %145, %140 ]
  %148 = add nuw i64 %130, 1
  %149 = icmp eq i64 %148, %31
  br i1 %149, label %37, label %128
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERKNS_32DisplacementMapEffectPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"*, %"class.cc::DisplacementMapEffectPaintFilter"* nocapture readonly dereferenceable(88), %class.SkM44* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, 256
  br i1 %6, label %8, label %7, !prof !6

7:                                                ; preds = %3
  tail call void @llvm.trap() #12
  unreachable

8:                                                ; preds = %3
  %9 = trunc i32 %5 to i8
  %10 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %11, 4
  %13 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %12, label %14, label %15

14:                                               ; preds = %8
  store i8 0, i8* %13, align 8
  br label %25

15:                                               ; preds = %8
  %16 = load i8, i8* %13, align 8, !range !5
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  store i8 %9, i8* %20, align 1
  %21 = load i8*, i8** %19, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 4
  store i8* %22, i8** %19, align 8
  %23 = load i64, i64* %10, align 8
  %24 = add i64 %23, -4
  store i64 %24, i64* %10, align 8
  br label %25

25:                                               ; preds = %14, %15, %18
  %26 = phi i64 [ %11, %14 ], [ %11, %15 ], [ %24, %18 ]
  %27 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %1, i64 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp ult i32 %28, 256
  br i1 %29, label %31, label %30, !prof !6

30:                                               ; preds = %25
  tail call void @llvm.trap() #12
  unreachable

31:                                               ; preds = %25
  %32 = trunc i32 %28 to i8
  %33 = icmp ult i64 %26, 4
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  store i8 0, i8* %13, align 8
  br label %46

35:                                               ; preds = %31
  %36 = load i8, i8* %13, align 8, !range !5
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %61, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %40 = load i8*, i8** %39, align 8
  store i8 %32, i8* %40, align 1
  %41 = load i8*, i8** %39, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 4
  store i8* %42, i8** %39, align 8
  %43 = load i64, i64* %10, align 8
  %44 = add i64 %43, -4
  store i64 %44, i64* %10, align 8
  %45 = icmp ult i64 %44, 4
  br i1 %45, label %46, label %47

46:                                               ; preds = %34, %38
  store i8 0, i8* %13, align 8
  br label %61

47:                                               ; preds = %38
  %48 = load i8, i8* %13, align 8, !range !5
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %61, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %1, i64 0, i32 3
  %52 = bitcast float* %51 to i32*
  %53 = load i32, i32* %52, align 8
  %54 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %55 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %56 = load i32*, i32** %55, align 8
  store i32 %53, i32* %56, align 4
  %57 = load i8*, i8** %54, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 4
  store i8* %58, i8** %54, align 8
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, -4
  store i64 %60, i64* %10, align 8
  br label %61

61:                                               ; preds = %35, %46, %47, %50
  %62 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %1, i64 0, i32 4, i32 0
  %63 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %62, align 8
  tail call void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintFilter"* %63, %class.SkM44* dereferenceable(64) %2)
  %64 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %1, i64 0, i32 5, i32 0
  %65 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %64, align 8
  tail call void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintFilter"* %65, %class.SkM44* dereferenceable(64) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERKNS_16ImagePaintFilterERK5SkM44(%"class.cc::PaintOpWriter"*, %"class.cc::ImagePaintFilter"* dereferenceable(200), %class.SkM44* nocapture readnone dereferenceable(64)) local_unnamed_addr #6 align 2 {
  %4 = alloca %"class.cc::DrawImage", align 8
  %5 = alloca %"class.cc::PaintImage", align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %struct.SkIRect*
  %8 = alloca %class.SkM44, align 4
  %9 = alloca %"class.absl::optional.83", align 8
  %10 = alloca %"class.absl::optional.88", align 4
  %11 = alloca <2 x float>, align 8
  %12 = bitcast <2 x float>* %11 to %struct.SkSize*
  %13 = bitcast %"class.cc::DrawImage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %13) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 bitcast (<{ { %class.sk_sp.12, %class.sk_sp.13, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.15, %class.sk_sp.16, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.12, %class.scoped_refptr }, i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.87 } } } }, { { { { i8, [3 x i8], %union.anon.92 } } } }, float, [4 x i8] }>* @__const._ZN2cc13PaintOpWriter5WriteERKNS_16ImagePaintFilterERK5SkM44.draw_image to i8*), i64 240, i1 false)
  %14 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %1, i64 0, i32 1
  call void @_ZN2cc10PaintImageC1ERKS0_(%"class.cc::PaintImage"* nonnull %5, %"class.cc::PaintImage"* dereferenceable(104) %14) #12
  %15 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #12
  %16 = call i32 @_ZNK2cc10PaintImage5widthEv(%"class.cc::PaintImage"* %14) #12
  %17 = call i32 @_ZNK2cc10PaintImage6heightEv(%"class.cc::PaintImage"* %14) #12
  %18 = zext i32 %17 to i64
  %19 = shl nuw i64 %18, 32
  %20 = zext i32 %16 to i64
  %21 = or i64 %19, %20
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %21, i64* %23, align 8
  %24 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %1, i64 0, i32 4
  %25 = load i32, i32* %24, align 8
  %26 = bitcast %class.SkM44* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %26, i8* align 4 bitcast ([16 x float]* @constinit to i8*), i64 64, i1 false) #12
  %27 = getelementptr inbounds %"class.absl::optional.83", %"class.absl::optional.83"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %27, align 8
  %28 = getelementptr inbounds %"class.absl::optional.88", %"class.absl::optional.88"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %28) #12
  store i8 0, i8* %28, align 4
  %29 = getelementptr inbounds %"class.absl::optional.88", %"class.absl::optional.88"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 4 %29, i8 0, i64 68, i1 false) #12
  call void @_ZN2cc9DrawImageC1ENS_10PaintImageEbRK7SkIRect15SkFilterQualityRK5SkM44N4absl8optionalImEERKNSA_IN3gfx10ColorSpaceEEEf(%"class.cc::DrawImage"* nonnull %4, %"class.cc::PaintImage"* nonnull %5, i1 zeroext false, %struct.SkIRect* nonnull dereferenceable(16) %7, i32 %25, %class.SkM44* nonnull dereferenceable(64) %8, %"class.absl::optional.83"* nonnull byval(%"class.absl::optional.83") align 8 %9, %"class.absl::optional.88"* nonnull dereferenceable(72) %10, float 1.000000e+02) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %28) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #12
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %5) #12
  %30 = bitcast <2 x float>* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #12
  store <2 x float> <float 1.000000e+00, float 1.000000e+00>, <2 x float>* %11, align 8
  call void @_ZN2cc13PaintOpWriter5WriteERKNS_9DrawImageEP6SkSize(%"class.cc::PaintOpWriter"* %0, %"class.cc::DrawImage"* nonnull dereferenceable(240) %4, %struct.SkSize* nonnull %12)
  %31 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %1, i64 0, i32 2
  %32 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, 16
  %35 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %34, label %36, label %37

36:                                               ; preds = %3
  store i8 0, i8* %35, align 8
  br label %50

37:                                               ; preds = %3
  %38 = load i8, i8* %35, align 8, !range !5
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %63, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = bitcast %struct.SkRect* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %42, i8* align 4 %43, i64 16, i1 false) #12
  %44 = load i8*, i8** %41, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 16
  store i8* %45, i8** %41, align 8
  %46 = load i64, i64* %32, align 8
  %47 = add i64 %46, -16
  store i64 %47, i64* %32, align 8
  %48 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %1, i64 0, i32 3
  %49 = icmp ult i64 %47, 16
  br i1 %49, label %50, label %52

50:                                               ; preds = %36, %40
  %51 = phi i64 [ %33, %36 ], [ %47, %40 ]
  store i8 0, i8* %35, align 8
  br label %63

52:                                               ; preds = %40
  %53 = load i8, i8* %35, align 8
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %63, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %struct.SkRect* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %57, i8* align 4 %58, i64 16, i1 false) #12
  %59 = load i8*, i8** %56, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 16
  store i8* %60, i8** %56, align 8
  %61 = load i64, i64* %32, align 8
  %62 = add i64 %61, -16
  store i64 %62, i64* %32, align 8
  br label %63

63:                                               ; preds = %37, %50, %52, %55
  %64 = phi i64 [ %51, %50 ], [ %47, %52 ], [ %62, %55 ], [ %33, %37 ]
  %65 = load i32, i32* %24, align 8
  %66 = icmp ult i32 %65, 256
  br i1 %66, label %68, label %67, !prof !6

67:                                               ; preds = %63
  call void @llvm.trap() #12
  unreachable

68:                                               ; preds = %63
  %69 = trunc i32 %65 to i8
  %70 = icmp ult i64 %64, 4
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  store i8 0, i8* %35, align 8
  br label %82

72:                                               ; preds = %68
  %73 = load i8, i8* %35, align 8, !range !5
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %82, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %77 = load i8*, i8** %76, align 8
  store i8 %69, i8* %77, align 1
  %78 = load i8*, i8** %76, align 8
  %79 = getelementptr inbounds i8, i8* %78, i64 4
  store i8* %79, i8** %76, align 8
  %80 = load i64, i64* %32, align 8
  %81 = add i64 %80, -4
  store i64 %81, i64* %32, align 8
  br label %82

82:                                               ; preds = %71, %72, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #12
  call void @_ZN2cc9DrawImageD1Ev(%"class.cc::DrawImage"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %13) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERKNS_17RecordPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* nocapture, %"class.cc::RecordPaintFilter"* dereferenceable(96), %class.SkM44* nocapture readonly dereferenceable(64)) local_unnamed_addr #6 align 2 {
  %4 = alloca %class.sk_sp.152, align 8
  %5 = alloca %class.SkMatrix, align 4
  %6 = alloca %"class.gfx::Rect", align 4
  %7 = alloca <2 x float>, align 8
  %8 = bitcast <2 x float>* %7 to %"class.gfx::SizeF"*
  %9 = bitcast %class.sk_sp.152* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %class.sk_sp.152, %class.sk_sp.152* %4, i64 0, i32 0
  store %"class.cc::RecordPaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::RecordPaintFilter"*), %"class.cc::RecordPaintFilter"** %10, align 8
  %11 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #12
  %12 = bitcast %class.SkM44* %2 to i32*
  %13 = load i32, i32* %12, align 4, !noalias !17
  %14 = getelementptr inbounds %class.SkM44, %class.SkM44* %2, i64 0, i32 0, i64 4
  %15 = bitcast float* %14 to i32*
  %16 = load i32, i32* %15, align 4, !noalias !17
  %17 = getelementptr inbounds %class.SkM44, %class.SkM44* %2, i64 0, i32 0, i64 12
  %18 = bitcast float* %17 to i32*
  %19 = load i32, i32* %18, align 4, !noalias !17
  %20 = getelementptr inbounds %class.SkM44, %class.SkM44* %2, i64 0, i32 0, i64 1
  %21 = bitcast float* %20 to i32*
  %22 = load i32, i32* %21, align 4, !noalias !17
  %23 = getelementptr inbounds %class.SkM44, %class.SkM44* %2, i64 0, i32 0, i64 5
  %24 = bitcast float* %23 to i32*
  %25 = load i32, i32* %24, align 4, !noalias !17
  %26 = getelementptr inbounds %class.SkM44, %class.SkM44* %2, i64 0, i32 0, i64 13
  %27 = bitcast float* %26 to i32*
  %28 = load i32, i32* %27, align 4, !noalias !17
  %29 = getelementptr inbounds %class.SkM44, %class.SkM44* %2, i64 0, i32 0, i64 3
  %30 = bitcast float* %29 to i32*
  %31 = load i32, i32* %30, align 4, !noalias !17
  %32 = getelementptr inbounds %class.SkM44, %class.SkM44* %2, i64 0, i32 0, i64 7
  %33 = bitcast float* %32 to i32*
  %34 = load i32, i32* %33, align 4, !noalias !17
  %35 = getelementptr inbounds %class.SkM44, %class.SkM44* %2, i64 0, i32 0, i64 15
  %36 = bitcast float* %35 to i32*
  %37 = load i32, i32* %36, align 4, !noalias !17
  %38 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %39 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 1
  %40 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 2
  %41 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 3
  %42 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 4
  %43 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 5
  %44 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 6
  %45 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 7
  %46 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 8
  %47 = bitcast %class.SkMatrix* %5 to i32*
  store i32 %13, i32* %47, align 4, !alias.scope !20
  %48 = bitcast float* %39 to i32*
  store i32 %16, i32* %48, align 4, !alias.scope !20
  %49 = bitcast float* %40 to i32*
  store i32 %19, i32* %49, align 4, !alias.scope !20
  %50 = bitcast float* %41 to i32*
  store i32 %22, i32* %50, align 4, !alias.scope !20
  %51 = bitcast float* %42 to i32*
  store i32 %25, i32* %51, align 4, !alias.scope !20
  %52 = bitcast float* %43 to i32*
  store i32 %28, i32* %52, align 4, !alias.scope !20
  %53 = bitcast float* %44 to i32*
  store i32 %31, i32* %53, align 4, !alias.scope !20
  %54 = bitcast float* %45 to i32*
  store i32 %34, i32* %54, align 4, !alias.scope !20
  %55 = bitcast float* %46 to i32*
  store i32 %37, i32* %55, align 4, !alias.scope !20
  store i32 128, i32* %38, align 4, !alias.scope !20
  %56 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 3
  %57 = load %"struct.cc::PaintOp::SerializeOptions"*, %"struct.cc::PaintOp::SerializeOptions"** %56, align 8
  %58 = getelementptr inbounds %"struct.cc::PaintOp::SerializeOptions", %"struct.cc::PaintOp::SerializeOptions"* %57, i64 0, i32 8
  %59 = load i32, i32* %58, align 4
  call void @_ZNK2cc17RecordPaintFilter23CreateScaledPaintRecordERK8SkMatrixi(%class.sk_sp.152* nonnull sret %4, %"class.cc::RecordPaintFilter"* %1, %class.SkMatrix* nonnull dereferenceable(40) %5, i32 %59) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #12
  %60 = load %"class.cc::RecordPaintFilter"*, %"class.cc::RecordPaintFilter"** %10, align 8
  %61 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %60, i64 0, i32 2
  %62 = bitcast %struct.SkRect* %61 to <2 x i64>*
  %63 = load <2 x i64>, <2 x i64>* %62, align 8
  %64 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %65 = load i64, i64* %64, align 8
  %66 = icmp ult i64 %65, 16
  %67 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %66, label %68, label %69

68:                                               ; preds = %3
  store i8 0, i8* %67, align 8
  br label %81

69:                                               ; preds = %3
  %70 = load i8, i8* %67, align 8, !range !5
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %86, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %74 = bitcast %"class.cc::PaintOpWriter"* %0 to <2 x i64>**
  %75 = load <2 x i64>*, <2 x i64>** %74, align 8
  store <2 x i64> %63, <2 x i64>* %75, align 4
  %76 = load i8*, i8** %73, align 8
  %77 = getelementptr inbounds i8, i8* %76, i64 16
  store i8* %77, i8** %73, align 8
  %78 = load i64, i64* %64, align 8
  %79 = add i64 %78, -16
  store i64 %79, i64* %64, align 8
  %80 = load %"class.cc::RecordPaintFilter"*, %"class.cc::RecordPaintFilter"** %10, align 8
  br label %81

81:                                               ; preds = %68, %72
  %82 = phi %"class.cc::RecordPaintFilter"* [ %60, %68 ], [ %80, %72 ]
  %83 = phi i64 [ %65, %68 ], [ %79, %72 ]
  %84 = icmp ult i64 %83, 8
  br i1 %84, label %85, label %86

85:                                               ; preds = %81
  store i8 0, i8* %67, align 8
  br label %102

86:                                               ; preds = %69, %81
  %87 = phi %"class.cc::RecordPaintFilter"* [ %82, %81 ], [ %60, %69 ]
  %88 = load i8, i8* %67, align 8, !range !5
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %120, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %87, i64 0, i32 3
  %92 = bitcast %"class.gfx::SizeF"* %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %95 = bitcast %"class.cc::PaintOpWriter"* %0 to i64**
  %96 = load i64*, i64** %95, align 8
  store i64 %93, i64* %96, align 4
  %97 = load i8*, i8** %94, align 8
  %98 = getelementptr inbounds i8, i8* %97, i64 8
  store i8* %98, i8** %94, align 8
  %99 = load i64, i64* %64, align 8
  %100 = add i64 %99, -8
  store i64 %100, i64* %64, align 8
  %101 = load %"class.cc::RecordPaintFilter"*, %"class.cc::RecordPaintFilter"** %10, align 8
  br label %102

102:                                              ; preds = %85, %90
  %103 = phi %"class.cc::RecordPaintFilter"* [ %101, %90 ], [ %82, %85 ]
  %104 = phi i64 [ %100, %90 ], [ %83, %85 ]
  %105 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %103, i64 0, i32 4
  %106 = load i8, i8* %105, align 8
  %107 = icmp ult i64 %104, 4
  br i1 %107, label %108, label %109

108:                                              ; preds = %102
  store i8 0, i8* %67, align 8
  br label %120

109:                                              ; preds = %102
  %110 = load i8, i8* %67, align 8
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %120, label %112

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %114 = load i8*, i8** %113, align 8
  store i8 %106, i8* %114, align 1
  %115 = load i8*, i8** %113, align 8
  %116 = getelementptr inbounds i8, i8* %115, i64 4
  store i8* %116, i8** %113, align 8
  %117 = load i64, i64* %64, align 8
  %118 = add i64 %117, -4
  store i64 %118, i64* %64, align 8
  %119 = load %"class.cc::RecordPaintFilter"*, %"class.cc::RecordPaintFilter"** %10, align 8
  br label %120

120:                                              ; preds = %86, %108, %109, %112
  %121 = phi %"class.cc::RecordPaintFilter"* [ %103, %108 ], [ %103, %109 ], [ %119, %112 ], [ %87, %86 ]
  %122 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %121, i64 0, i32 1, i32 0
  %123 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %122, align 8
  %124 = bitcast %"class.gfx::Rect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %124) #12
  %125 = bitcast <2 x float>* %7 to i8*
  %126 = bitcast %"class.gfx::Rect"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %126, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #12
  %127 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %121, i64 0, i32 3
  %128 = bitcast %"class.gfx::SizeF"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast <2 x float>* %7 to i64*
  store i64 %129, i64* %130, align 8
  call void @_ZN2cc13PaintOpWriter5WriteEPKNS_13PaintOpBufferERKN3gfx4RectERKNS4_5SizeFE(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintOpBuffer"* %123, %"class.gfx::Rect"* nonnull dereferenceable(16) %6, %"class.gfx::SizeF"* nonnull dereferenceable(8) %8)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %124) #12
  %131 = load %"class.cc::RecordPaintFilter"*, %"class.cc::RecordPaintFilter"** %10, align 8
  %132 = icmp eq %"class.cc::RecordPaintFilter"* %131, null
  br i1 %132, label %143, label %133

133:                                              ; preds = %120
  %134 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %131, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = atomicrmw add i32* %134, i32 -1 acq_rel
  %136 = icmp eq i32 %135, 1
  br i1 %136, label %137, label %143

137:                                              ; preds = %133
  %138 = bitcast %"class.cc::RecordPaintFilter"* %131 to %class.SkRefCntBase*
  %139 = bitcast %"class.cc::RecordPaintFilter"* %131 to void (%class.SkRefCntBase*)***
  %140 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %139, align 8
  %141 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %140, i64 2
  %142 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %141, align 8
  call void %142(%class.SkRefCntBase* nonnull %138) #12
  br label %143

143:                                              ; preds = %120, %133, %137
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERKNS_16MergePaintFilterERK5SkM44(%"class.cc::PaintOpWriter"*, %"class.cc::MergePaintFilter"* nocapture readonly dereferenceable(120), %class.SkM44* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %1, i64 0, i32 1, i32 0, i32 2
  %5 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 1
  %6 = bitcast %class.sk_sp.75** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.147"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 3
  %12 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %13 = bitcast %"class.cc::PaintOpWriter"* %0 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 7
  %16 = and i64 %15, -8
  %17 = sub i64 %16, %14
  %18 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = icmp ult i64 %19, %17
  %21 = inttoptr i64 %14 to i8*
  %22 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  %23 = inttoptr i64 %14 to i64*
  br i1 %20, label %24, label %25

24:                                               ; preds = %3
  store i8 0, i8* %22, align 8
  br label %32

25:                                               ; preds = %3
  %26 = load i8, i8* %22, align 8, !range !5
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds i8, i8* %21, i64 %17
  store i8* %29, i8** %12, align 8
  %30 = sub i64 %19, %17
  store i64 %30, i64* %18, align 8
  %31 = bitcast i8* %29 to i64*
  br label %32

32:                                               ; preds = %28, %25, %24
  %33 = phi i8 [ 1, %28 ], [ 0, %25 ], [ 0, %24 ]
  %34 = phi i64* [ %31, %28 ], [ %23, %25 ], [ %23, %24 ]
  %35 = phi i64 [ %30, %28 ], [ %19, %25 ], [ %19, %24 ]
  %36 = icmp ult i64 %35, 8
  br i1 %36, label %37, label %38

37:                                               ; preds = %32
  store i8 0, i8* %22, align 8
  br label %45

38:                                               ; preds = %32
  %39 = icmp eq i8 %33, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %38
  store i64 %11, i64* %34, align 8
  %41 = load i8*, i8** %12, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 8
  store i8* %42, i8** %12, align 8
  %43 = load i64, i64* %18, align 8
  %44 = add i64 %43, -8
  store i64 %44, i64* %18, align 8
  br label %45

45:                                               ; preds = %37, %38, %40
  %46 = load i64, i64* %6, align 8
  %47 = load i64, i64* %8, align 8
  %48 = icmp eq i64 %46, %47
  br i1 %48, label %49, label %50

49:                                               ; preds = %50, %45
  ret void

50:                                               ; preds = %45, %50
  %51 = phi i64 [ %58, %50 ], [ %47, %45 ]
  %52 = phi i64 [ %56, %50 ], [ 0, %45 ]
  %53 = inttoptr i64 %51 to %class.sk_sp.75*
  %54 = getelementptr inbounds %class.sk_sp.75, %class.sk_sp.75* %53, i64 %52, i32 0
  %55 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %54, align 8
  tail call void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintFilter"* %55, %class.SkM44* dereferenceable(64) %2)
  %56 = add nuw i64 %52, 1
  %57 = load i64, i64* %6, align 8
  %58 = load i64, i64* %8, align 8
  %59 = sub i64 %57, %58
  %60 = ashr exact i64 %59, 3
  %61 = icmp ult i64 %56, %60
  br i1 %61, label %50, label %49
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERKNS_21MorphologyPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"*, %"class.cc::MorphologyPaintFilter"* nocapture readonly dereferenceable(80), %class.SkM44* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, 256
  br i1 %6, label %8, label %7, !prof !6

7:                                                ; preds = %3
  tail call void @llvm.trap() #12
  unreachable

8:                                                ; preds = %3
  %9 = trunc i32 %5 to i8
  %10 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %11, 4
  %13 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %12, label %14, label %15

14:                                               ; preds = %8
  store i8 0, i8* %13, align 8
  br label %26

15:                                               ; preds = %8
  %16 = load i8, i8* %13, align 8, !range !5
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  store i8 %9, i8* %20, align 1
  %21 = load i8*, i8** %19, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 4
  store i8* %22, i8** %19, align 8
  %23 = load i64, i64* %10, align 8
  %24 = add i64 %23, -4
  store i64 %24, i64* %10, align 8
  %25 = icmp ult i64 %24, 4
  br i1 %25, label %26, label %27

26:                                               ; preds = %18, %14
  store i8 0, i8* %13, align 8
  br label %42

27:                                               ; preds = %15, %18
  %28 = load i8, i8* %13, align 8, !range !5
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %43, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %1, i64 0, i32 2
  %32 = bitcast float* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %35 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %36 = load i32*, i32** %35, align 8
  store i32 %33, i32* %36, align 4
  %37 = load i8*, i8** %34, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 4
  store i8* %38, i8** %34, align 8
  %39 = load i64, i64* %10, align 8
  %40 = add i64 %39, -4
  store i64 %40, i64* %10, align 8
  %41 = icmp ult i64 %40, 4
  br i1 %41, label %42, label %43

42:                                               ; preds = %26, %30
  store i8 0, i8* %13, align 8
  br label %57

43:                                               ; preds = %27, %30
  %44 = load i8, i8* %13, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %57, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %1, i64 0, i32 3
  %48 = bitcast float* %47 to i32*
  %49 = load i32, i32* %48, align 8
  %50 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %51 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %52 = load i32*, i32** %51, align 8
  store i32 %49, i32* %52, align 4
  %53 = load i8*, i8** %50, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 4
  store i8* %54, i8** %50, align 8
  %55 = load i64, i64* %10, align 8
  %56 = add i64 %55, -4
  store i64 %56, i64* %10, align 8
  br label %57

57:                                               ; preds = %42, %43, %46
  %58 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %1, i64 0, i32 4, i32 0
  %59 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %58, align 8
  tail call void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintFilter"* %59, %class.SkM44* dereferenceable(64) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERKNS_17OffsetPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"*, %"class.cc::OffsetPaintFilter"* nocapture readonly dereferenceable(72), %class.SkM44* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %1, i64 0, i32 1
  %5 = bitcast float* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, 4
  %10 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %9, label %11, label %12

11:                                               ; preds = %3
  store i8 0, i8* %10, align 8
  br label %24

12:                                               ; preds = %3
  %13 = load i8, i8* %10, align 8, !range !5
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %25, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %17 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %18 = load i32*, i32** %17, align 8
  store i32 %6, i32* %18, align 4
  %19 = load i8*, i8** %16, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 4
  store i8* %20, i8** %16, align 8
  %21 = load i64, i64* %7, align 8
  %22 = add i64 %21, -4
  store i64 %22, i64* %7, align 8
  %23 = icmp ult i64 %22, 4
  br i1 %23, label %24, label %25

24:                                               ; preds = %11, %15
  store i8 0, i8* %10, align 8
  br label %39

25:                                               ; preds = %12, %15
  %26 = load i8, i8* %10, align 8, !range !5
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %39, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %1, i64 0, i32 2
  %30 = bitcast float* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %33 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %34 = load i32*, i32** %33, align 8
  store i32 %31, i32* %34, align 4
  %35 = load i8*, i8** %32, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 4
  store i8* %36, i8** %32, align 8
  %37 = load i64, i64* %7, align 8
  %38 = add i64 %37, -4
  store i64 %38, i64* %7, align 8
  br label %39

39:                                               ; preds = %24, %25, %28
  %40 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %1, i64 0, i32 3, i32 0
  %41 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %40, align 8
  tail call void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintFilter"* %41, %class.SkM44* dereferenceable(64) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERKNS_15TilePaintFilterERK5SkM44(%"class.cc::PaintOpWriter"*, %"class.cc::TilePaintFilter"* nocapture readonly dereferenceable(96), %class.SkM44* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %1, i64 0, i32 1
  %5 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, 16
  %8 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %7, label %9, label %10

9:                                                ; preds = %3
  store i8 0, i8* %8, align 8
  br label %23

10:                                               ; preds = %3
  %11 = load i8, i8* %8, align 8, !range !5
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %35, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = bitcast %struct.SkRect* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %16, i64 16, i1 false) #12
  %17 = load i8*, i8** %14, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 16
  store i8* %18, i8** %14, align 8
  %19 = load i64, i64* %5, align 8
  %20 = add i64 %19, -16
  store i64 %20, i64* %5, align 8
  %21 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %1, i64 0, i32 2
  %22 = icmp ult i64 %20, 16
  br i1 %22, label %23, label %24

23:                                               ; preds = %9, %13
  store i8 0, i8* %8, align 8
  br label %35

24:                                               ; preds = %13
  %25 = load i8, i8* %8, align 8
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = bitcast %struct.SkRect* %21 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %30, i64 16, i1 false) #12
  %31 = load i8*, i8** %28, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 16
  store i8* %32, i8** %28, align 8
  %33 = load i64, i64* %5, align 8
  %34 = add i64 %33, -16
  store i64 %34, i64* %5, align 8
  br label %35

35:                                               ; preds = %10, %23, %24, %27
  %36 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %1, i64 0, i32 3, i32 0
  %37 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %36, align 8
  tail call void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintFilter"* %37, %class.SkM44* dereferenceable(64) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERKNS_21TurbulencePaintFilterERK5SkM44(%"class.cc::PaintOpWriter"*, %"class.cc::TurbulencePaintFilter"* nocapture readonly dereferenceable(88), %class.SkM44* nocapture readnone dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, 256
  br i1 %6, label %8, label %7, !prof !6

7:                                                ; preds = %3
  tail call void @llvm.trap() #12
  unreachable

8:                                                ; preds = %3
  %9 = trunc i32 %5 to i8
  %10 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %11, 4
  %13 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %12, label %14, label %15

14:                                               ; preds = %8
  store i8 0, i8* %13, align 8
  br label %26

15:                                               ; preds = %8
  %16 = load i8, i8* %13, align 8, !range !5
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  store i8 %9, i8* %20, align 1
  %21 = load i8*, i8** %19, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 4
  store i8* %22, i8** %19, align 8
  %23 = load i64, i64* %10, align 8
  %24 = add i64 %23, -4
  store i64 %24, i64* %10, align 8
  %25 = icmp ult i64 %24, 4
  br i1 %25, label %26, label %27

26:                                               ; preds = %18, %14
  store i8 0, i8* %13, align 8
  br label %43

27:                                               ; preds = %15, %18
  %28 = phi i64 [ %24, %18 ], [ %11, %15 ]
  %29 = load i8, i8* %13, align 8, !range !5
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %44, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %1, i64 0, i32 2
  %33 = bitcast float* %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %36 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %37 = load i32*, i32** %36, align 8
  store i32 %34, i32* %37, align 4
  %38 = load i8*, i8** %35, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 4
  store i8* %39, i8** %35, align 8
  %40 = load i64, i64* %10, align 8
  %41 = add i64 %40, -4
  store i64 %41, i64* %10, align 8
  %42 = icmp ult i64 %41, 4
  br i1 %42, label %43, label %44

43:                                               ; preds = %31, %26
  store i8 0, i8* %13, align 8
  br label %62

44:                                               ; preds = %27, %31
  %45 = phi i64 [ %41, %31 ], [ %28, %27 ]
  %46 = load i8, i8* %13, align 8, !range !5
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %76, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %1, i64 0, i32 3
  %50 = bitcast float* %49 to i32*
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %53 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %54 = load i32*, i32** %53, align 8
  store i32 %51, i32* %54, align 4
  %55 = load i8*, i8** %52, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 4
  store i8* %56, i8** %52, align 8
  %57 = load i64, i64* %10, align 8
  %58 = add i64 %57, -4
  store i64 %58, i64* %10, align 8
  %59 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %1, i64 0, i32 4
  %60 = load i32, i32* %59, align 4
  %61 = icmp ult i64 %58, 4
  br i1 %61, label %62, label %63

62:                                               ; preds = %48, %43
  store i8 0, i8* %13, align 8
  br label %75

63:                                               ; preds = %48
  %64 = load i8, i8* %13, align 8
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %76, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %68 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %69 = load i32*, i32** %68, align 8
  store i32 %60, i32* %69, align 4
  %70 = load i8*, i8** %67, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 4
  store i8* %71, i8** %67, align 8
  %72 = load i64, i64* %10, align 8
  %73 = add i64 %72, -4
  store i64 %73, i64* %10, align 8
  %74 = icmp ult i64 %73, 4
  br i1 %74, label %75, label %76

75:                                               ; preds = %66, %62
  store i8 0, i8* %13, align 8
  br label %97

76:                                               ; preds = %44, %63, %66
  %77 = phi i64 [ %73, %66 ], [ %58, %63 ], [ %45, %44 ]
  %78 = load i8, i8* %13, align 8, !range !5
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %91, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %1, i64 0, i32 5
  %82 = bitcast float* %81 to i32*
  %83 = load i32, i32* %82, align 8
  %84 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %85 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %86 = load i32*, i32** %85, align 8
  store i32 %83, i32* %86, align 4
  %87 = load i8*, i8** %84, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 4
  store i8* %88, i8** %84, align 8
  %89 = load i64, i64* %10, align 8
  %90 = add i64 %89, -4
  store i64 %90, i64* %10, align 8
  br label %91

91:                                               ; preds = %76, %80
  %92 = phi i64 [ %90, %80 ], [ %77, %76 ]
  %93 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %1, i64 0, i32 6
  %94 = bitcast %struct.SkISize* %93 to i64*
  %95 = load i64, i64* %94, align 4
  %96 = icmp ult i64 %92, 8
  br i1 %96, label %97, label %98

97:                                               ; preds = %75, %91
  store i8 0, i8* %13, align 8
  br label %109

98:                                               ; preds = %91
  %99 = load i8, i8* %13, align 8, !range !5
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %109, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %103 = bitcast %"class.cc::PaintOpWriter"* %0 to i64**
  %104 = load i64*, i64** %103, align 8
  store i64 %95, i64* %104, align 4
  %105 = load i8*, i8** %102, align 8
  %106 = getelementptr inbounds i8, i8* %105, i64 8
  store i8* %106, i8** %102, align 8
  %107 = load i64, i64* %10, align 8
  %108 = add i64 %107, -8
  store i64 %108, i64* %10, align 8
  br label %109

109:                                              ; preds = %97, %98, %101
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERKNS_17ShaderPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"*, %"class.cc::ShaderPaintFilter"* nocapture readonly dereferenceable(80), %class.SkM44* nocapture readonly dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %1, i64 0, i32 1, i32 0
  %5 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %4, align 8
  %6 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %1, i64 0, i32 4
  %7 = load i32, i32* %6, align 4
  tail call void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintShaderE15SkFilterQualityRK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintShader"* %5, i32 %7, %class.SkM44* dereferenceable(64) %2)
  %8 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %1, i64 0, i32 2
  %9 = load i8, i8* %8, align 8
  %10 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %11, 4
  %13 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %12, label %14, label %15

14:                                               ; preds = %3
  store i8 0, i8* %13, align 8
  br label %25

15:                                               ; preds = %3
  %16 = load i8, i8* %13, align 8, !range !5
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  store i8 %9, i8* %20, align 1
  %21 = load i8*, i8** %19, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 4
  store i8* %22, i8** %19, align 8
  %23 = load i64, i64* %10, align 8
  %24 = add i64 %23, -4
  store i64 %24, i64* %10, align 8
  br label %25

25:                                               ; preds = %14, %15, %18
  %26 = phi i64 [ %11, %14 ], [ %11, %15 ], [ %24, %18 ]
  %27 = load i32, i32* %6, align 4
  %28 = icmp ult i32 %27, 256
  br i1 %28, label %30, label %29, !prof !6

29:                                               ; preds = %25
  tail call void @llvm.trap() #12
  unreachable

30:                                               ; preds = %25
  %31 = trunc i32 %27 to i8
  %32 = icmp ult i64 %26, 4
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  store i8 0, i8* %13, align 8
  br label %45

34:                                               ; preds = %30
  %35 = load i8, i8* %13, align 8, !range !5
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %58, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %39 = load i8*, i8** %38, align 8
  store i8 %31, i8* %39, align 1
  %40 = load i8*, i8** %38, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 4
  store i8* %41, i8** %38, align 8
  %42 = load i64, i64* %10, align 8
  %43 = add i64 %42, -4
  store i64 %43, i64* %10, align 8
  %44 = icmp ult i64 %43, 4
  br i1 %44, label %45, label %46

45:                                               ; preds = %33, %37
  store i8 0, i8* %13, align 8
  br label %58

46:                                               ; preds = %37
  %47 = load i8, i8* %13, align 8, !range !5
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %58, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %1, i64 0, i32 5
  %51 = load i8, i8* %50, align 8, !range !5
  %52 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %53 = load i8*, i8** %52, align 8
  store i8 %51, i8* %53, align 1
  %54 = load i8*, i8** %52, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 4
  store i8* %55, i8** %52, align 8
  %56 = load i64, i64* %10, align 8
  %57 = add i64 %56, -4
  store i64 %57, i64* %10, align 8
  br label %58

58:                                               ; preds = %34, %45, %46, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERKNS_17MatrixPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"*, %"class.cc::MatrixPaintFilter"* nocapture readonly dereferenceable(112), %class.SkM44* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkMatrix, align 8
  %5 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %1, i64 0, i32 1
  %6 = bitcast %class.SkMatrix* %5 to i8*
  %7 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 4 %6, i64 40, i1 false)
  %8 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = trunc i32 %9 to i8
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %3
  %13 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %4) #12
  %14 = zext i8 %13 to i32
  store i32 %14, i32* %8, align 4
  br label %15

15:                                               ; preds = %12, %3
  %16 = phi i32 [ %14, %12 ], [ %9, %3 ]
  %17 = and i32 %16, 15
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %15
  store i32 128, i32* %8, align 4
  br label %20

20:                                               ; preds = %19, %15
  %21 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 40
  %24 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %23, label %25, label %26

25:                                               ; preds = %20
  store i8 0, i8* %24, align 8
  br label %36

26:                                               ; preds = %20
  %27 = load i8, i8* %24, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %36, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* nonnull align 8 %7, i64 40, i1 false) #12
  %32 = load i8*, i8** %30, align 8
  %33 = getelementptr inbounds i8, i8* %32, i64 40
  store i8* %33, i8** %30, align 8
  %34 = load i64, i64* %21, align 8
  %35 = add i64 %34, -40
  store i64 %35, i64* %21, align 8
  br label %36

36:                                               ; preds = %25, %26, %29
  %37 = phi i64 [ %22, %25 ], [ %22, %26 ], [ %35, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7)
  %38 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %1, i64 0, i32 2
  %39 = load i32, i32* %38, align 8
  %40 = icmp ult i32 %39, 256
  br i1 %40, label %42, label %41, !prof !6

41:                                               ; preds = %36
  call void @llvm.trap() #12
  unreachable

42:                                               ; preds = %36
  %43 = trunc i32 %39 to i8
  %44 = icmp ult i64 %37, 4
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  store i8 0, i8* %24, align 8
  br label %56

46:                                               ; preds = %42
  %47 = load i8, i8* %24, align 8, !range !5
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %56, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %51 = load i8*, i8** %50, align 8
  store i8 %43, i8* %51, align 1
  %52 = load i8*, i8** %50, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 4
  store i8* %53, i8** %50, align 8
  %54 = load i64, i64* %21, align 8
  %55 = add i64 %54, -4
  store i64 %55, i64* %21, align 8
  br label %56

56:                                               ; preds = %45, %46, %49
  %57 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %1, i64 0, i32 3, i32 0
  %58 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %57, align 8
  call void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintFilter"* %58, %class.SkM44* dereferenceable(64) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERKNS_26LightingDistantPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"*, %"class.cc::LightingDistantPaintFilter"* nocapture readonly dereferenceable(96), %class.SkM44* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, 256
  br i1 %6, label %8, label %7, !prof !6

7:                                                ; preds = %3
  tail call void @llvm.trap() #12
  unreachable

8:                                                ; preds = %3
  %9 = trunc i32 %5 to i8
  %10 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %11, 4
  %13 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %12, label %14, label %15

14:                                               ; preds = %8
  store i8 0, i8* %13, align 8
  br label %29

15:                                               ; preds = %8
  %16 = load i8, i8* %13, align 8, !range !5
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  store i8 %9, i8* %20, align 1
  %21 = load i8*, i8** %19, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 4
  store i8* %22, i8** %19, align 8
  %23 = load i64, i64* %10, align 8
  %24 = add i64 %23, -4
  store i64 %24, i64* %10, align 8
  br label %25

25:                                               ; preds = %15, %18
  %26 = phi i64 [ %24, %18 ], [ %11, %15 ]
  %27 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %1, i64 0, i32 2
  %28 = icmp ult i64 %26, 12
  br i1 %28, label %29, label %31

29:                                               ; preds = %14, %25
  %30 = phi i64 [ %11, %14 ], [ %26, %25 ]
  store i8 0, i8* %13, align 8
  br label %42

31:                                               ; preds = %25
  %32 = load i8, i8* %13, align 8, !range !5
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %61, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = bitcast %struct.SkPoint3* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 12, i1 false) #12
  %38 = load i8*, i8** %35, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 12
  store i8* %39, i8** %35, align 8
  %40 = load i64, i64* %10, align 8
  %41 = add i64 %40, -12
  store i64 %41, i64* %10, align 8
  br label %42

42:                                               ; preds = %29, %34
  %43 = phi i64 [ %41, %34 ], [ %30, %29 ]
  %44 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %1, i64 0, i32 3
  %45 = load i32, i32* %44, align 8
  %46 = icmp ult i64 %43, 4
  br i1 %46, label %47, label %48

47:                                               ; preds = %42
  store i8 0, i8* %13, align 8
  br label %60

48:                                               ; preds = %42
  %49 = load i8, i8* %13, align 8
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %61, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %53 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %54 = load i32*, i32** %53, align 8
  store i32 %45, i32* %54, align 4
  %55 = load i8*, i8** %52, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 4
  store i8* %56, i8** %52, align 8
  %57 = load i64, i64* %10, align 8
  %58 = add i64 %57, -4
  store i64 %58, i64* %10, align 8
  %59 = icmp ult i64 %58, 4
  br i1 %59, label %60, label %61

60:                                               ; preds = %51, %47
  store i8 0, i8* %13, align 8
  br label %76

61:                                               ; preds = %31, %48, %51
  %62 = load i8, i8* %13, align 8, !range !5
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %77, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %1, i64 0, i32 4
  %66 = bitcast float* %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %69 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %70 = load i32*, i32** %69, align 8
  store i32 %67, i32* %70, align 4
  %71 = load i8*, i8** %68, align 8
  %72 = getelementptr inbounds i8, i8* %71, i64 4
  store i8* %72, i8** %68, align 8
  %73 = load i64, i64* %10, align 8
  %74 = add i64 %73, -4
  store i64 %74, i64* %10, align 8
  %75 = icmp ult i64 %74, 4
  br i1 %75, label %76, label %77

76:                                               ; preds = %64, %60
  store i8 0, i8* %13, align 8
  br label %92

77:                                               ; preds = %61, %64
  %78 = load i8, i8* %13, align 8, !range !5
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %93, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %1, i64 0, i32 5
  %82 = bitcast float* %81 to i32*
  %83 = load i32, i32* %82, align 8
  %84 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %85 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %86 = load i32*, i32** %85, align 8
  store i32 %83, i32* %86, align 4
  %87 = load i8*, i8** %84, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 4
  store i8* %88, i8** %84, align 8
  %89 = load i64, i64* %10, align 8
  %90 = add i64 %89, -4
  store i64 %90, i64* %10, align 8
  %91 = icmp ult i64 %90, 4
  br i1 %91, label %92, label %93

92:                                               ; preds = %76, %80
  store i8 0, i8* %13, align 8
  br label %107

93:                                               ; preds = %77, %80
  %94 = load i8, i8* %13, align 8, !range !5
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %107, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %1, i64 0, i32 6
  %98 = bitcast float* %97 to i32*
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %101 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %102 = load i32*, i32** %101, align 8
  store i32 %99, i32* %102, align 4
  %103 = load i8*, i8** %100, align 8
  %104 = getelementptr inbounds i8, i8* %103, i64 4
  store i8* %104, i8** %100, align 8
  %105 = load i64, i64* %10, align 8
  %106 = add i64 %105, -4
  store i64 %106, i64* %10, align 8
  br label %107

107:                                              ; preds = %92, %93, %96
  %108 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %1, i64 0, i32 7, i32 0
  %109 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %108, align 8
  tail call void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintFilter"* %109, %class.SkM44* dereferenceable(64) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERKNS_24LightingPointPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"*, %"class.cc::LightingPointPaintFilter"* nocapture readonly dereferenceable(96), %class.SkM44* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, 256
  br i1 %6, label %8, label %7, !prof !6

7:                                                ; preds = %3
  tail call void @llvm.trap() #12
  unreachable

8:                                                ; preds = %3
  %9 = trunc i32 %5 to i8
  %10 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %11, 4
  %13 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %12, label %14, label %15

14:                                               ; preds = %8
  store i8 0, i8* %13, align 8
  br label %29

15:                                               ; preds = %8
  %16 = load i8, i8* %13, align 8, !range !5
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  store i8 %9, i8* %20, align 1
  %21 = load i8*, i8** %19, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 4
  store i8* %22, i8** %19, align 8
  %23 = load i64, i64* %10, align 8
  %24 = add i64 %23, -4
  store i64 %24, i64* %10, align 8
  br label %25

25:                                               ; preds = %15, %18
  %26 = phi i64 [ %24, %18 ], [ %11, %15 ]
  %27 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %1, i64 0, i32 2
  %28 = icmp ult i64 %26, 12
  br i1 %28, label %29, label %31

29:                                               ; preds = %14, %25
  %30 = phi i64 [ %11, %14 ], [ %26, %25 ]
  store i8 0, i8* %13, align 8
  br label %42

31:                                               ; preds = %25
  %32 = load i8, i8* %13, align 8, !range !5
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %61, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = bitcast %struct.SkPoint3* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 12, i1 false) #12
  %38 = load i8*, i8** %35, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 12
  store i8* %39, i8** %35, align 8
  %40 = load i64, i64* %10, align 8
  %41 = add i64 %40, -12
  store i64 %41, i64* %10, align 8
  br label %42

42:                                               ; preds = %29, %34
  %43 = phi i64 [ %41, %34 ], [ %30, %29 ]
  %44 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %1, i64 0, i32 3
  %45 = load i32, i32* %44, align 8
  %46 = icmp ult i64 %43, 4
  br i1 %46, label %47, label %48

47:                                               ; preds = %42
  store i8 0, i8* %13, align 8
  br label %60

48:                                               ; preds = %42
  %49 = load i8, i8* %13, align 8
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %61, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %53 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %54 = load i32*, i32** %53, align 8
  store i32 %45, i32* %54, align 4
  %55 = load i8*, i8** %52, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 4
  store i8* %56, i8** %52, align 8
  %57 = load i64, i64* %10, align 8
  %58 = add i64 %57, -4
  store i64 %58, i64* %10, align 8
  %59 = icmp ult i64 %58, 4
  br i1 %59, label %60, label %61

60:                                               ; preds = %51, %47
  store i8 0, i8* %13, align 8
  br label %76

61:                                               ; preds = %31, %48, %51
  %62 = load i8, i8* %13, align 8, !range !5
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %77, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %1, i64 0, i32 4
  %66 = bitcast float* %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %69 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %70 = load i32*, i32** %69, align 8
  store i32 %67, i32* %70, align 4
  %71 = load i8*, i8** %68, align 8
  %72 = getelementptr inbounds i8, i8* %71, i64 4
  store i8* %72, i8** %68, align 8
  %73 = load i64, i64* %10, align 8
  %74 = add i64 %73, -4
  store i64 %74, i64* %10, align 8
  %75 = icmp ult i64 %74, 4
  br i1 %75, label %76, label %77

76:                                               ; preds = %64, %60
  store i8 0, i8* %13, align 8
  br label %92

77:                                               ; preds = %61, %64
  %78 = load i8, i8* %13, align 8, !range !5
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %93, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %1, i64 0, i32 5
  %82 = bitcast float* %81 to i32*
  %83 = load i32, i32* %82, align 8
  %84 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %85 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %86 = load i32*, i32** %85, align 8
  store i32 %83, i32* %86, align 4
  %87 = load i8*, i8** %84, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 4
  store i8* %88, i8** %84, align 8
  %89 = load i64, i64* %10, align 8
  %90 = add i64 %89, -4
  store i64 %90, i64* %10, align 8
  %91 = icmp ult i64 %90, 4
  br i1 %91, label %92, label %93

92:                                               ; preds = %76, %80
  store i8 0, i8* %13, align 8
  br label %107

93:                                               ; preds = %77, %80
  %94 = load i8, i8* %13, align 8, !range !5
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %107, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %1, i64 0, i32 6
  %98 = bitcast float* %97 to i32*
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %101 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %102 = load i32*, i32** %101, align 8
  store i32 %99, i32* %102, align 4
  %103 = load i8*, i8** %100, align 8
  %104 = getelementptr inbounds i8, i8* %103, i64 4
  store i8* %104, i8** %100, align 8
  %105 = load i64, i64* %10, align 8
  %106 = add i64 %105, -4
  store i64 %106, i64* %10, align 8
  br label %107

107:                                              ; preds = %92, %93, %96
  %108 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %1, i64 0, i32 7, i32 0
  %109 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %108, align 8
  tail call void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintFilter"* %109, %class.SkM44* dereferenceable(64) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERKNS_23LightingSpotPaintFilterERK5SkM44(%"class.cc::PaintOpWriter"*, %"class.cc::LightingSpotPaintFilter"* nocapture readonly dereferenceable(120), %class.SkM44* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, 256
  br i1 %6, label %8, label %7, !prof !6

7:                                                ; preds = %3
  tail call void @llvm.trap() #12
  unreachable

8:                                                ; preds = %3
  %9 = trunc i32 %5 to i8
  %10 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %11, 4
  %13 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  br i1 %12, label %14, label %15

14:                                               ; preds = %8
  store i8 0, i8* %13, align 8
  br label %29

15:                                               ; preds = %8
  %16 = load i8, i8* %13, align 8, !range !5
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  store i8 %9, i8* %20, align 1
  %21 = load i8*, i8** %19, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 4
  store i8* %22, i8** %19, align 8
  %23 = load i64, i64* %10, align 8
  %24 = add i64 %23, -4
  store i64 %24, i64* %10, align 8
  br label %25

25:                                               ; preds = %15, %18
  %26 = phi i64 [ %24, %18 ], [ %11, %15 ]
  %27 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 2
  %28 = icmp ult i64 %26, 12
  br i1 %28, label %29, label %31

29:                                               ; preds = %25, %14
  %30 = phi i64 [ %11, %14 ], [ %26, %25 ]
  store i8 0, i8* %13, align 8
  br label %44

31:                                               ; preds = %25
  %32 = load i8, i8* %13, align 8, !range !5
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %61, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = bitcast %struct.SkPoint3* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 12, i1 false) #12
  %38 = load i8*, i8** %35, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 12
  store i8* %39, i8** %35, align 8
  %40 = load i64, i64* %10, align 8
  %41 = add i64 %40, -12
  store i64 %41, i64* %10, align 8
  %42 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 3
  %43 = icmp ult i64 %41, 12
  br i1 %43, label %44, label %46

44:                                               ; preds = %29, %34
  %45 = phi i64 [ %30, %29 ], [ %41, %34 ]
  store i8 0, i8* %13, align 8
  br label %57

46:                                               ; preds = %34
  %47 = load i8, i8* %13, align 8
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %61, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = bitcast %struct.SkPoint3* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %51, i8* align 4 %52, i64 12, i1 false) #12
  %53 = load i8*, i8** %50, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 12
  store i8* %54, i8** %50, align 8
  %55 = load i64, i64* %10, align 8
  %56 = add i64 %55, -12
  store i64 %56, i64* %10, align 8
  br label %57

57:                                               ; preds = %44, %49
  %58 = phi i64 [ %56, %49 ], [ %45, %44 ]
  %59 = icmp ult i64 %58, 4
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  store i8 0, i8* %13, align 8
  br label %76

61:                                               ; preds = %31, %46, %57
  %62 = load i8, i8* %13, align 8, !range !5
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %77, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 4
  %66 = bitcast float* %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %69 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %70 = load i32*, i32** %69, align 8
  store i32 %67, i32* %70, align 4
  %71 = load i8*, i8** %68, align 8
  %72 = getelementptr inbounds i8, i8* %71, i64 4
  store i8* %72, i8** %68, align 8
  %73 = load i64, i64* %10, align 8
  %74 = add i64 %73, -4
  store i64 %74, i64* %10, align 8
  %75 = icmp ult i64 %74, 4
  br i1 %75, label %76, label %77

76:                                               ; preds = %64, %60
  store i8 0, i8* %13, align 8
  br label %94

77:                                               ; preds = %61, %64
  %78 = load i8, i8* %13, align 8, !range !5
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %108, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 5
  %82 = bitcast float* %81 to i32*
  %83 = load i32, i32* %82, align 8
  %84 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %85 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %86 = load i32*, i32** %85, align 8
  store i32 %83, i32* %86, align 4
  %87 = load i8*, i8** %84, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 4
  store i8* %88, i8** %84, align 8
  %89 = load i64, i64* %10, align 8
  %90 = add i64 %89, -4
  store i64 %90, i64* %10, align 8
  %91 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 6
  %92 = load i32, i32* %91, align 4
  %93 = icmp ult i64 %90, 4
  br i1 %93, label %94, label %95

94:                                               ; preds = %80, %76
  store i8 0, i8* %13, align 8
  br label %107

95:                                               ; preds = %80
  %96 = load i8, i8* %13, align 8
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %108, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %100 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %101 = load i32*, i32** %100, align 8
  store i32 %92, i32* %101, align 4
  %102 = load i8*, i8** %99, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 4
  store i8* %103, i8** %99, align 8
  %104 = load i64, i64* %10, align 8
  %105 = add i64 %104, -4
  store i64 %105, i64* %10, align 8
  %106 = icmp ult i64 %105, 4
  br i1 %106, label %107, label %108

107:                                              ; preds = %98, %94
  store i8 0, i8* %13, align 8
  br label %123

108:                                              ; preds = %77, %95, %98
  %109 = load i8, i8* %13, align 8, !range !5
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %124, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 7
  %113 = bitcast float* %112 to i32*
  %114 = load i32, i32* %113, align 8
  %115 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %116 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %117 = load i32*, i32** %116, align 8
  store i32 %114, i32* %117, align 4
  %118 = load i8*, i8** %115, align 8
  %119 = getelementptr inbounds i8, i8* %118, i64 4
  store i8* %119, i8** %115, align 8
  %120 = load i64, i64* %10, align 8
  %121 = add i64 %120, -4
  store i64 %121, i64* %10, align 8
  %122 = icmp ult i64 %121, 4
  br i1 %122, label %123, label %124

123:                                              ; preds = %111, %107
  store i8 0, i8* %13, align 8
  br label %139

124:                                              ; preds = %108, %111
  %125 = load i8, i8* %13, align 8, !range !5
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %140, label %127

127:                                              ; preds = %124
  %128 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 8
  %129 = bitcast float* %128 to i32*
  %130 = load i32, i32* %129, align 4
  %131 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %132 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %133 = load i32*, i32** %132, align 8
  store i32 %130, i32* %133, align 4
  %134 = load i8*, i8** %131, align 8
  %135 = getelementptr inbounds i8, i8* %134, i64 4
  store i8* %135, i8** %131, align 8
  %136 = load i64, i64* %10, align 8
  %137 = add i64 %136, -4
  store i64 %137, i64* %10, align 8
  %138 = icmp ult i64 %137, 4
  br i1 %138, label %139, label %140

139:                                              ; preds = %123, %127
  store i8 0, i8* %13, align 8
  br label %154

140:                                              ; preds = %124, %127
  %141 = load i8, i8* %13, align 8, !range !5
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %140
  %144 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 9
  %145 = bitcast float* %144 to i32*
  %146 = load i32, i32* %145, align 8
  %147 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %148 = bitcast %"class.cc::PaintOpWriter"* %0 to i32**
  %149 = load i32*, i32** %148, align 8
  store i32 %146, i32* %149, align 4
  %150 = load i8*, i8** %147, align 8
  %151 = getelementptr inbounds i8, i8* %150, i64 4
  store i8* %151, i8** %147, align 8
  %152 = load i64, i64* %10, align 8
  %153 = add i64 %152, -4
  store i64 %153, i64* %10, align 8
  br label %154

154:                                              ; preds = %139, %140, %143
  %155 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 10, i32 0
  %156 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %155, align 8
  tail call void @_ZN2cc13PaintOpWriter5WriteEPKNS_11PaintFilterERK5SkM44(%"class.cc::PaintOpWriter"* %0, %"class.cc::PaintFilter"* %156, %class.SkM44* dereferenceable(64) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PaintOpWriter5WriteERK8SkRegion(%"class.cc::PaintOpWriter"* nocapture, %class.SkRegion* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = tail call i64 @_ZNK8SkRegion13writeToMemoryEPv(%class.SkRegion* %1, i8* null) #12
  %4 = tail call i8* @_Znam(i64 %3) #13
  %5 = tail call i64 @_ZNK8SkRegion13writeToMemoryEPv(%class.SkRegion* %1, i8* nonnull %4) #12
  %6 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 0
  %7 = bitcast %"class.cc::PaintOpWriter"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 7
  %10 = and i64 %9, -8
  %11 = sub i64 %10, %8
  %12 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %13, %11
  %15 = inttoptr i64 %8 to i8*
  %16 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %0, i64 0, i32 4
  %17 = inttoptr i64 %8 to i64*
  br i1 %14, label %18, label %19

18:                                               ; preds = %2
  store i8 0, i8* %16, align 8
  br label %26

19:                                               ; preds = %2
  %20 = load i8, i8* %16, align 8, !range !5
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds i8, i8* %15, i64 %11
  store i8* %23, i8** %6, align 8
  %24 = sub i64 %13, %11
  store i64 %24, i64* %12, align 8
  %25 = bitcast i8* %23 to i64*
  br label %26

26:                                               ; preds = %22, %19, %18
  %27 = phi i8* [ %23, %22 ], [ %15, %19 ], [ %15, %18 ]
  %28 = phi i8 [ 1, %22 ], [ 0, %19 ], [ 0, %18 ]
  %29 = phi i64* [ %25, %22 ], [ %17, %19 ], [ %17, %18 ]
  %30 = phi i64 [ %24, %22 ], [ %13, %19 ], [ %13, %18 ]
  %31 = icmp ult i64 %30, 8
  br i1 %31, label %32, label %33

32:                                               ; preds = %26
  store i8 0, i8* %16, align 8
  br label %40

33:                                               ; preds = %26
  %34 = icmp eq i8 %28, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %33
  store i64 %5, i64* %29, align 8
  %36 = load i8*, i8** %6, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 8
  store i8* %37, i8** %6, align 8
  %38 = load i64, i64* %12, align 8
  %39 = add i64 %38, -8
  store i64 %39, i64* %12, align 8
  br label %40

40:                                               ; preds = %32, %33, %35
  %41 = phi i8* [ %27, %32 ], [ %27, %33 ], [ %37, %35 ]
  %42 = phi i64 [ %30, %32 ], [ %30, %33 ], [ %39, %35 ]
  %43 = icmp ult i64 %42, %5
  br i1 %43, label %44, label %45

44:                                               ; preds = %40
  store i8 0, i8* %16, align 8
  br label %55

45:                                               ; preds = %40
  %46 = load i8, i8* %16, align 8, !range !5
  %47 = icmp eq i8 %46, 0
  %48 = icmp eq i64 %5, 0
  %49 = or i1 %48, %47
  br i1 %49, label %55, label %50

50:                                               ; preds = %45
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %41, i8* nonnull align 1 %4, i64 %5, i1 false) #12
  %51 = load i8*, i8** %6, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %5
  store i8* %52, i8** %6, align 8
  %53 = load i64, i64* %12, align 8
  %54 = sub i64 %53, %5
  store i64 %54, i64* %12, align 8
  br label %55

55:                                               ; preds = %44, %45, %50
  tail call void @_ZdaPv(i8* nonnull %4) #13
  ret void
}

declare void @_ZNK2cc17RecordPaintFilter23CreateScaledPaintRecordERK8SkMatrixi(%class.sk_sp.152* sret, %"class.cc::RecordPaintFilter"*, %class.SkMatrix* dereferenceable(40), i32) local_unnamed_addr #2

declare void @_ZN2cc7PaintOp16SerializeOptionsC1ERKS1_(%"struct.cc::PaintOp::SerializeOptions"*, %"struct.cc::PaintOp::SerializeOptions"* dereferenceable(56)) unnamed_addr #2

declare void @_ZN2cc22SimpleBufferSerializerC1EPvmRKNS_7PaintOp16SerializeOptionsE(%"class.cc::SimpleBufferSerializer"*, i8*, i64, %"struct.cc::PaintOp::SerializeOptions"* dereferenceable(56)) unnamed_addr #2

declare void @_ZN2cc23PaintOpBufferSerializer9SerializeEPKNS_13PaintOpBufferERKN3gfx4RectERKNS4_5SizeFE(%"class.cc::PaintOpBufferSerializer"*, %"class.cc::PaintOpBuffer"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::SizeF"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc22SimpleBufferSerializerD1Ev(%"class.cc::SimpleBufferSerializer"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN2cc7PaintOp16SerializeOptionsD1Ev(%"struct.cc::PaintOp::SerializeOptions"*) unnamed_addr #7

declare i64 @_ZNK8SkRegion13writeToMemoryEPv(%class.SkRegion*, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #8

declare i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo*, i64) local_unnamed_addr #2

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @"_ZZN2cc13PaintOpWriter5WriteERK5sk_spI10SkTextBlobEEN3$_08__invokeEP10SkTypefacePv"(%class.sk_sp* noalias sret, %class.SkTypeface*, i8*) #10 align 2 {
  %4 = bitcast i8* %2 to %class.SkStrikeServer*
  tail call void @_ZN14SkStrikeServer17serializeTypefaceEP10SkTypeface(%class.sk_sp* sret %0, %class.SkStrikeServer* %4, %class.SkTypeface* %1) #12
  ret void
}

declare void @_ZN14SkStrikeServer17serializeTypefaceEP10SkTypeface(%class.sk_sp* sret, %class.SkStrikeServer*, %class.SkTypeface*) local_unnamed_addr #2

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN2cc14SkottieWrapperD1Ev(%"class.cc::SkottieWrapper"*) unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!4 = distinct !{!4, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!5 = !{i8 0, i8 2}
!6 = !{!"branch_weights", i32 2000, i32 1}
!7 = !{!"branch_weights", i32 1, i32 2000}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK5SkM445asM33Ev: argument 0"}
!10 = distinct !{!10, !"_ZNK5SkM445asM33Ev"}
!11 = !{!12, !9}
!12 = distinct !{!12, !13, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!13 = distinct !{!13, !"_ZN8SkMatrix7MakeAllEfffffffff"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_Z9sk_ref_spIN2cc11PaintShaderEE5sk_spIT_EPKS3_: argument 0"}
!16 = distinct !{!16, !"_Z9sk_ref_spIN2cc11PaintShaderEE5sk_spIT_EPKS3_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK5SkM445asM33Ev: argument 0"}
!19 = distinct !{!19, !"_ZNK5SkM445asM33Ev"}
!20 = !{!21, !18}
!21 = distinct !{!21, !22, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!22 = distinct !{!22, !"_ZN8SkMatrix7MakeAllEfffffffff"}
