; ModuleID = '../../components/viz/common/skia_helper.cc'
source_filename = "../../components/viz/common/skia_helper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%struct.SkRect = type { float, float, float, float }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type opaque
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.8" }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%class.sk_sp.26 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.27, i32, i32 }
%class.sk_sp.27 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.28" }
%"struct.std::__1::atomic.28" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::Vector2dF" = type { float, float }
%class.sk_sp.33 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%struct.SkIPoint = type { i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.cc::ScopedSubnormalFloatDisabler" = type { i32 }
%class.SkMatrix = type { [9 x float], i32 }
%class.GrBackendTexture = type { i8, i32, i32, i8, i32, %union.anon, %class.sk_sp.35 }
%union.anon = type { %class.GrGLBackendTextureInfo, [120 x i8] }
%class.GrGLBackendTextureInfo = type { %struct.GrGLTextureInfo, %class.GrGLTextureParameters* }
%struct.GrGLTextureInfo = type { i32, i32, i32 }
%class.GrGLTextureParameters = type { %class.SkNVRefCnt.34, %"struct.GrGLTextureParameters::SamplerOverriddenState", %"struct.GrGLTextureParameters::NonsamplerState", i64 }
%class.SkNVRefCnt.34 = type { %"struct.std::__1::atomic" }
%"struct.GrGLTextureParameters::SamplerOverriddenState" = type <{ i32, i32, i32, i32, float, float, i8, [3 x i8] }>
%"struct.GrGLTextureParameters::NonsamplerState" = type <{ i32, i32, i8, [3 x i8] }>
%class.sk_sp.35 = type { %class.GrBackendSurfaceMutableStateImpl* }
%class.GrBackendSurfaceMutableStateImpl = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%class.sk_sp.36 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkColorMatrix = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [20 x float] }
%"struct.SkImageFilters::CropRect" = type { %struct.SkRect }

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [48 x i8] c"ApplyImageFilter wrap background texture failed\00", align 1
@.str.1 = private unnamed_addr constant [43 x i8] c"../../components/viz/common/skia_helper.cc\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"image->isTextureBacked()\00", align 1
@_ZZN3viz10SkiaHelper23MakeOverdrawColorFilterEvE6colors = internal constant [6 x i32] [i32 0, i32 0, i32 788529407, i32 788594432, i32 1073676288, i32 2147418112], align 16
@_ZN4skifL11kNoCropRectE = internal unnamed_addr constant %struct.SkRect { float 0xFFF0000000000000, float 0xFFF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000 }, align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz10SkiaHelper16ApplyImageFilterEP18GrRecordingContext5sk_spI7SkImageERKN3gfx5RectFES9_RKNS6_9Vector2dFES3_I13SkImageFilterEP8SkIPointP7SkIRectRKNS6_6PointFEb(%class.sk_sp.26* noalias nocapture sret, %class.GrRecordingContext*, %class.sk_sp.26* nocapture readonly, %"class.gfx::RectF"* nocapture readonly dereferenceable(16), %"class.gfx::RectF"* dereferenceable(16), %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8), %class.sk_sp.33* nocapture, %struct.SkIPoint*, %struct.SkIRect*, %"class.gfx::PointF"* nocapture readonly dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %12 = alloca %"class.base::TimeTicks", align 8
  %13 = alloca %"class.cc::ScopedSubnormalFloatDisabler", align 4
  %14 = alloca %class.SkMatrix, align 16
  %15 = alloca { i64, i64 }, align 8
  %16 = bitcast { i64, i64 }* %15 to %struct.SkIRect*
  %17 = alloca %class.sk_sp.33, align 8
  %18 = alloca { i64, i64 }, align 8
  %19 = bitcast { i64, i64 }* %18 to %struct.SkIRect*
  %20 = alloca %class.sk_sp.26, align 8
  %21 = alloca %class.GrBackendTexture, align 8
  %22 = alloca %"class.logging::CheckError", align 8
  %23 = getelementptr inbounds %class.sk_sp.33, %class.sk_sp.33* %6, i64 0, i32 0
  %24 = load %class.SkImageFilter*, %class.SkImageFilter** %23, align 8
  %25 = icmp eq %class.SkImageFilter* %24, null
  br i1 %25, label %26, label %28

26:                                               ; preds = %11
  %27 = getelementptr inbounds %class.sk_sp.26, %class.sk_sp.26* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %27, align 8
  br label %223

28:                                               ; preds = %11
  %29 = getelementptr inbounds %class.sk_sp.26, %class.sk_sp.26* %2, i64 0, i32 0
  %30 = load %class.SkImage*, %class.SkImage** %29, align 8
  %31 = icmp eq %class.SkImage* %30, null
  br i1 %31, label %32, label %44

32:                                               ; preds = %28
  %33 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %34 = and i8 %33, 25
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %42, label %36, !prof !2

36:                                               ; preds = %32
  %37 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #5
  %38 = bitcast %"class.base::TimeTicks"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #5
  %39 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %12, i64 0, i32 0, i32 0
  %40 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #5
  store i64 %40, i64* %39, align 8
  %41 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %37, %"class.base::TimeTicks"* nonnull dereferenceable(8) %12, %"class.base::trace_event::TraceArguments"* null, i32 8) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #5
  br label %42

42:                                               ; preds = %32, %36
  %43 = getelementptr inbounds %class.sk_sp.26, %class.sk_sp.26* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %43, align 8
  br label %223

44:                                               ; preds = %28
  %45 = bitcast %"class.cc::ScopedSubnormalFloatDisabler"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #5
  %46 = getelementptr inbounds %"class.cc::ScopedSubnormalFloatDisabler", %"class.cc::ScopedSubnormalFloatDisabler"* %13, i64 0, i32 0
  store i32 -1431655766, i32* %46, align 4
  call void @_ZN2cc28ScopedSubnormalFloatDisablerC1Ev(%"class.cc::ScopedSubnormalFloatDisabler"* nonnull %13) #5
  %47 = bitcast %class.SkMatrix* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %47) #5
  %48 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %14, i64 0, i32 1
  %49 = bitcast %class.SkMatrix* %14 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %49, align 16
  %50 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %14, i64 0, i32 0, i64 4
  %51 = bitcast float* %50 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %51, align 16
  %52 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %14, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %52, align 16
  store i32 16, i32* %48, align 4
  %53 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %9, i64 0, i32 0
  %54 = load float, float* %53, align 4
  %55 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %9, i64 0, i32 1
  %56 = load float, float* %55, align 4
  %57 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %14, float %54, float %56) #5
  %58 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %5, i64 0, i32 0
  %59 = load float, float* %58, align 4
  %60 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %5, i64 0, i32 1
  %61 = load float, float* %60, align 4
  %62 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9postScaleEff(%class.SkMatrix* nonnull %14, float %59, float %61) #5
  %63 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %3, i64 0, i32 0, i32 0
  %64 = load float, float* %63, align 4
  %65 = fsub float -0.000000e+00, %64
  %66 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %3, i64 0, i32 0, i32 1
  %67 = load float, float* %66, align 4
  %68 = fsub float -0.000000e+00, %67
  %69 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %14, float %65, float %68) #5
  %70 = bitcast { i64, i64 }* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #5
  %71 = bitcast { i64, i64 }* %15 to i32*
  %72 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %16, i64 0, i32 1
  %73 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 1
  %74 = bitcast i64* %73 to i32*
  %75 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %16, i64 0, i32 3
  %76 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16) %4) #5
  %77 = extractvalue { <2 x float>, <2 x float> } %76, 0
  %78 = extractvalue { <2 x float>, <2 x float> } %76, 1
  %79 = extractelement <2 x float> %77, i32 0
  %80 = call float @llvm.floor.f32(float %79) #5
  %81 = fcmp olt float %80, 0x41DFFFFFE0000000
  %82 = select i1 %81, float %80, float 0x41DFFFFFE0000000
  %83 = fcmp ogt float %82, 0xC1DFFFFFE0000000
  %84 = select i1 %83, float %82, float 0xC1DFFFFFE0000000
  %85 = fptosi float %84 to i32
  %86 = extractelement <2 x float> %77, i32 1
  %87 = call float @llvm.floor.f32(float %86) #5
  %88 = fcmp olt float %87, 0x41DFFFFFE0000000
  %89 = select i1 %88, float %87, float 0x41DFFFFFE0000000
  %90 = fcmp ogt float %89, 0xC1DFFFFFE0000000
  %91 = select i1 %90, float %89, float 0xC1DFFFFFE0000000
  %92 = fptosi float %91 to i32
  %93 = extractelement <2 x float> %78, i32 0
  %94 = call float @llvm.ceil.f32(float %93) #5
  %95 = fcmp olt float %94, 0x41DFFFFFE0000000
  %96 = select i1 %95, float %94, float 0x41DFFFFFE0000000
  %97 = fcmp ogt float %96, 0xC1DFFFFFE0000000
  %98 = select i1 %97, float %96, float 0xC1DFFFFFE0000000
  %99 = fptosi float %98 to i32
  %100 = extractelement <2 x float> %78, i32 1
  %101 = call float @llvm.ceil.f32(float %100) #5
  %102 = fcmp olt float %101, 0x41DFFFFFE0000000
  %103 = select i1 %102, float %101, float 0x41DFFFFFE0000000
  %104 = fcmp ogt float %103, 0xC1DFFFFFE0000000
  %105 = select i1 %104, float %103, float 0xC1DFFFFFE0000000
  %106 = fptosi float %105 to i32
  %107 = load float, float* %63, align 4
  %108 = fsub float -0.000000e+00, %107
  %109 = fptosi float %108 to i32
  %110 = load float, float* %66, align 4
  %111 = fsub float -0.000000e+00, %110
  %112 = fptosi float %111 to i32
  %113 = sext i32 %85 to i64
  %114 = sext i32 %109 to i64
  %115 = add nsw i64 %113, %114
  %116 = icmp slt i64 %115, 2147483647
  %117 = select i1 %116, i64 %115, i64 2147483647
  %118 = icmp sgt i64 %117, -2147483647
  %119 = select i1 %118, i64 %117, i64 -2147483647
  %120 = trunc i64 %119 to i32
  store i32 %120, i32* %71, align 8
  %121 = sext i32 %92 to i64
  %122 = sext i32 %112 to i64
  %123 = add nsw i64 %121, %122
  %124 = icmp slt i64 %123, 2147483647
  %125 = select i1 %124, i64 %123, i64 2147483647
  %126 = icmp sgt i64 %125, -2147483647
  %127 = select i1 %126, i64 %125, i64 -2147483647
  %128 = trunc i64 %127 to i32
  store i32 %128, i32* %72, align 4
  %129 = sext i32 %99 to i64
  %130 = add nsw i64 %129, %114
  %131 = icmp slt i64 %130, 2147483647
  %132 = select i1 %131, i64 %130, i64 2147483647
  %133 = icmp sgt i64 %132, -2147483647
  %134 = select i1 %133, i64 %132, i64 -2147483647
  %135 = trunc i64 %134 to i32
  store i32 %135, i32* %74, align 8
  %136 = sext i32 %106 to i64
  %137 = add nsw i64 %136, %122
  %138 = icmp slt i64 %137, 2147483647
  %139 = select i1 %138, i64 %137, i64 2147483647
  %140 = icmp sgt i64 %139, -2147483647
  %141 = select i1 %140, i64 %139, i64 -2147483647
  %142 = trunc i64 %141 to i32
  store i32 %142, i32* %75, align 4
  %143 = bitcast %class.sk_sp.33* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143) #5
  %144 = load %class.SkImageFilter*, %class.SkImageFilter** %23, align 8
  call void @_ZNK13SkImageFilter19makeWithLocalMatrixERK8SkMatrix(%class.sk_sp.33* nonnull sret %17, %class.SkImageFilter* %144, %class.SkMatrix* nonnull dereferenceable(40) %14) #5
  %145 = getelementptr inbounds %class.sk_sp.33, %class.sk_sp.33* %17, i64 0, i32 0
  %146 = bitcast %class.sk_sp.33* %17 to i64*
  %147 = load i64, i64* %146, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %145, align 8
  %148 = load %class.SkImageFilter*, %class.SkImageFilter** %23, align 8
  %149 = bitcast %class.sk_sp.33* %6 to i64*
  store i64 %147, i64* %149, align 8
  %150 = icmp eq %class.SkImageFilter* %148, null
  br i1 %150, label %174, label %151

151:                                              ; preds = %44
  %152 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %148, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = atomicrmw add i32* %152, i32 -1 acq_rel
  %154 = icmp eq i32 %153, 1
  br i1 %154, label %155, label %161

155:                                              ; preds = %151
  %156 = bitcast %class.SkImageFilter* %148 to %class.SkRefCntBase*
  %157 = bitcast %class.SkImageFilter* %148 to void (%class.SkRefCntBase*)***
  %158 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %157, align 8
  %159 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %158, i64 2
  %160 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %159, align 8
  call void %160(%class.SkRefCntBase* nonnull %156) #5
  br label %161

161:                                              ; preds = %151, %155
  %162 = load %class.SkImageFilter*, %class.SkImageFilter** %145, align 8
  %163 = icmp eq %class.SkImageFilter* %162, null
  br i1 %163, label %174, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %162, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = atomicrmw add i32* %165, i32 -1 acq_rel
  %167 = icmp eq i32 %166, 1
  br i1 %167, label %168, label %174

168:                                              ; preds = %164
  %169 = bitcast %class.SkImageFilter* %162 to %class.SkRefCntBase*
  %170 = bitcast %class.SkImageFilter* %162 to void (%class.SkRefCntBase*)***
  %171 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %170, align 8
  %172 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %171, i64 2
  %173 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %172, align 8
  call void %173(%class.SkRefCntBase* nonnull %169) #5
  br label %174

174:                                              ; preds = %44, %161, %164, %168
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143) #5
  %175 = bitcast { i64, i64 }* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %175) #5
  %176 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i64 0, i32 1
  %177 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %3, i64 0, i32 1, i32 0
  %178 = load float, float* %177, align 4
  %179 = fptosi float %178 to i32
  %180 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %3, i64 0, i32 1, i32 1
  %181 = load float, float* %180, align 4
  %182 = fptosi float %181 to i32
  %183 = zext i32 %182 to i64
  %184 = shl nuw i64 %183, 32
  %185 = zext i32 %179 to i64
  %186 = or i64 %184, %185
  %187 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i64 0, i32 0
  store i64 0, i64* %187, align 8
  store i64 %186, i64* %176, align 8
  %188 = bitcast %class.sk_sp.26* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %188) #5
  %189 = getelementptr inbounds %class.sk_sp.26, %class.sk_sp.26* %20, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %189, align 8
  %190 = load %class.SkImage*, %class.SkImage** %29, align 8
  %191 = load %class.SkImageFilter*, %class.SkImageFilter** %23, align 8
  call void @_ZNK7SkImage14makeWithFilterEP18GrRecordingContextPK13SkImageFilterRK7SkIRectS7_PS5_P8SkIPoint(%class.sk_sp.26* nonnull sret %20, %class.SkImage* %190, %class.GrRecordingContext* %1, %class.SkImageFilter* %191, %struct.SkIRect* nonnull dereferenceable(16) %19, %struct.SkIRect* nonnull dereferenceable(16) %16, %struct.SkIRect* %8, %struct.SkIPoint* %7) #5
  %192 = load %class.SkImage*, %class.SkImage** %189, align 8
  %193 = icmp eq %class.SkImage* %192, null
  br i1 %193, label %194, label %196

194:                                              ; preds = %174
  %195 = getelementptr inbounds %class.sk_sp.26, %class.sk_sp.26* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %195, align 8
  br label %222

196:                                              ; preds = %174
  %197 = call zeroext i1 @_ZNK7SkImage15isTextureBackedEv(%class.SkImage* nonnull %192) #5
  %198 = load %class.SkImage*, %class.SkImage** %189, align 8
  br i1 %197, label %199, label %209

199:                                              ; preds = %196
  call void @_ZNK7SkImage17getBackendTextureEbP15GrSurfaceOrigin(%class.GrBackendTexture* nonnull sret %21, %class.SkImage* %198, i1 zeroext %10, i32* null) #5
  call void @_ZN16GrBackendTextureD1Ev(%class.GrBackendTexture* nonnull %21) #5
  %200 = load %class.SkImage*, %class.SkImage** %189, align 8
  %201 = call zeroext i1 @_ZNK7SkImage15isTextureBackedEv(%class.SkImage* %200) #5
  br i1 %201, label %205, label %202

202:                                              ; preds = %199
  %203 = bitcast %"class.logging::CheckError"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %203) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %22, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1, i64 0, i64 0), i32 58, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0)) #5
  %204 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %22) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %22) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %203) #5
  br label %205

205:                                              ; preds = %202, %199
  %206 = bitcast %class.sk_sp.26* %20 to i64*
  %207 = load i64, i64* %206, align 8
  store %class.SkImage* null, %class.SkImage** %189, align 8
  %208 = bitcast %class.sk_sp.26* %0 to i64*
  store i64 %207, i64* %208, align 8
  br label %222

209:                                              ; preds = %196
  %210 = getelementptr inbounds %class.sk_sp.26, %class.sk_sp.26* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %210, align 8
  %211 = icmp eq %class.SkImage* %198, null
  br i1 %211, label %222, label %212

212:                                              ; preds = %209
  %213 = getelementptr inbounds %class.SkImage, %class.SkImage* %198, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = atomicrmw add i32* %213, i32 -1 acq_rel
  %215 = icmp eq i32 %214, 1
  br i1 %215, label %216, label %222

216:                                              ; preds = %212
  %217 = bitcast %class.SkImage* %198 to %class.SkRefCntBase*
  %218 = bitcast %class.SkImage* %198 to void (%class.SkRefCntBase*)***
  %219 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %218, align 8
  %220 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %219, i64 2
  %221 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %220, align 8
  call void %221(%class.SkRefCntBase* nonnull %217) #5
  br label %222

222:                                              ; preds = %194, %205, %209, %212, %216
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %188) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %175) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %47) #5
  call void @_ZN2cc28ScopedSubnormalFloatDisablerD1Ev(%"class.cc::ScopedSubnormalFloatDisabler"* nonnull %13) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #5
  br label %223

223:                                              ; preds = %222, %42, %26
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2cc28ScopedSubnormalFloatDisablerC1Ev(%"class.cc::ScopedSubnormalFloatDisabler"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9postScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNK13SkImageFilter19makeWithLocalMatrixERK8SkMatrix(%class.sk_sp.33* sret, %class.SkImageFilter*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZNK7SkImage14makeWithFilterEP18GrRecordingContextPK13SkImageFilterRK7SkIRectS7_PS5_P8SkIPoint(%class.sk_sp.26* sret, %class.SkImage*, %class.GrRecordingContext*, %class.SkImageFilter*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16), %struct.SkIRect*, %struct.SkIPoint*) local_unnamed_addr #2

declare zeroext i1 @_ZNK7SkImage15isTextureBackedEv(%class.SkImage*) local_unnamed_addr #2

declare void @_ZNK7SkImage17getBackendTextureEbP15GrSurfaceOrigin(%class.GrBackendTexture* sret, %class.SkImage*, i1 zeroext, i32*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN16GrBackendTextureD1Ev(%class.GrBackendTexture*) unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2cc28ScopedSubnormalFloatDisablerD1Ev(%"class.cc::ScopedSubnormalFloatDisabler"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz10SkiaHelper23MakeOverdrawColorFilterEv(%class.sk_sp.36* noalias sret) local_unnamed_addr #0 align 2 {
  tail call void @_ZN21SkOverdrawColorFilter16MakeWithSkColorsEPKj(%class.sk_sp.36* sret %0, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @_ZZN3viz10SkiaHelper23MakeOverdrawColorFilterEvE6colors, i64 0, i64 0)) #5
  ret void
}

declare void @_ZN21SkOverdrawColorFilter16MakeWithSkColorsEPKj(%class.sk_sp.36* sret, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz10SkiaHelper18BuildOpacityFilterEf(%class.sk_sp.33* noalias sret, float) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkColorMatrix, align 4
  %4 = alloca %class.sk_sp.36, align 8
  %5 = alloca %class.sk_sp.33, align 8
  %6 = alloca %"struct.SkImageFilters::CropRect", align 4
  %7 = bitcast %class.SkColorMatrix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7) #5
  %8 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %3, i64 0, i32 0, i32 0, i64 0
  store float 1.000000e+00, float* %8, align 4
  %9 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %3, i64 0, i32 0, i32 0, i64 1
  %10 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %3, i64 0, i32 0, i32 0, i64 6
  %11 = bitcast float* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 20, i1 false) #5
  store float 1.000000e+00, float* %10, align 4
  %12 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %3, i64 0, i32 0, i32 0, i64 7
  %13 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %3, i64 0, i32 0, i32 0, i64 12
  %14 = bitcast float* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 20, i1 false) #5
  store float 1.000000e+00, float* %13, align 4
  %15 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %3, i64 0, i32 0, i32 0, i64 13
  %16 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %3, i64 0, i32 0, i32 0, i64 18
  %17 = bitcast float* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 20, i1 false) #5
  store float 1.000000e+00, float* %16, align 4
  %18 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %3, i64 0, i32 0, i32 0, i64 19
  store float 0.000000e+00, float* %18, align 4
  call void @_ZN13SkColorMatrix8setScaleEffff(%class.SkColorMatrix* nonnull %3, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float %1) #5
  call void @_ZN14SkColorFilters6MatrixERK13SkColorMatrix(%class.sk_sp.36* nonnull sret %4, %class.SkColorMatrix* nonnull dereferenceable(80) %3) #5
  %19 = getelementptr inbounds %class.sk_sp.33, %class.sk_sp.33* %5, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %19, align 8
  %20 = bitcast %"struct.SkImageFilters::CropRect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %20, i8* align 4 bitcast (%struct.SkRect* @_ZN4skifL11kNoCropRectE to i8*), i64 16, i1 false) #5
  call void @_ZN14SkImageFilters11ColorFilterE5sk_spI13SkColorFilterES0_I13SkImageFilterERKNS_8CropRectE(%class.sk_sp.33* sret %0, %class.sk_sp.36* nonnull %4, %class.sk_sp.33* nonnull %5, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %6) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #5
  %21 = load %class.SkImageFilter*, %class.SkImageFilter** %19, align 8
  %22 = icmp eq %class.SkImageFilter* %21, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %2
  %24 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %21, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = bitcast %class.SkImageFilter* %21 to %class.SkRefCntBase*
  %29 = bitcast %class.SkImageFilter* %21 to void (%class.SkRefCntBase*)***
  %30 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %30, i64 2
  %32 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, align 8
  call void %32(%class.SkRefCntBase* nonnull %28) #5
  br label %33

33:                                               ; preds = %2, %23, %27
  %34 = getelementptr inbounds %class.sk_sp.36, %class.sk_sp.36* %4, i64 0, i32 0
  %35 = load %class.SkColorFilter*, %class.SkColorFilter** %34, align 8
  %36 = icmp eq %class.SkColorFilter* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %35, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %47

41:                                               ; preds = %37
  %42 = bitcast %class.SkColorFilter* %35 to %class.SkRefCntBase*
  %43 = bitcast %class.SkColorFilter* %35 to void (%class.SkRefCntBase*)***
  %44 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %43, align 8
  %45 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %44, i64 2
  %46 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, align 8
  call void %46(%class.SkRefCntBase* nonnull %42) #5
  br label %47

47:                                               ; preds = %33, %37, %41
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7) #5
  ret void
}

declare void @_ZN13SkColorMatrix8setScaleEffff(%class.SkColorMatrix*, float, float, float, float) local_unnamed_addr #2

declare void @_ZN14SkImageFilters11ColorFilterE5sk_spI13SkColorFilterES0_I13SkImageFilterERKNS_8CropRectE(%class.sk_sp.33* sret, %class.sk_sp.36*, %class.sk_sp.33*, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN14SkColorFilters6MatrixERK13SkColorMatrix(%class.sk_sp.36* sret, %class.SkColorMatrix* dereferenceable(80)) local_unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #4

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
