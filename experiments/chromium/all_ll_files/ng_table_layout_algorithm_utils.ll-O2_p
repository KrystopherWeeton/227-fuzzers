; ModuleID = '../../third_party/blink/renderer/core/layout/ng/table/ng_table_layout_algorithm_utils.cc'
source_filename = "../../third_party/blink/renderer/core/layout/ng/table/ng_table_layout_algorithm_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::LayoutUnit" = type { i32 }
%union.anon.40 = type { float }
%"class.base::RefCountedData.1873" = type { %"class.base::RefCountedThreadSafe.1874", %"class.WTF::Vector.1875" }
%"class.base::RefCountedThreadSafe.1874" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"class.WTF::Vector.1875" = type { %"class.WTF::VectorBuffer.1876" }
%"class.WTF::VectorBuffer.1876" = type { %"class.WTF::VectorBufferBase.1877" }
%"class.WTF::VectorBufferBase.1877" = type { %"struct.blink::NGTableTypes::Column"*, i32, i32 }
%"struct.blink::NGTableTypes::Column" = type { %"class.absl::optional.1636", %"class.absl::optional.1636", %"class.absl::optional", %"class.blink::LayoutUnit", i8, i8, i8, i8 }
%"class.absl::optional.1636" = type { %"class.absl::optional_internal::optional_data.1637" }
%"class.absl::optional_internal::optional_data.1637" = type { %"class.absl::optional_internal::optional_data_base.1638" }
%"class.absl::optional_internal::optional_data_base.1638" = type { %"class.absl::optional_internal::optional_data_dtor_base.1639" }
%"class.absl::optional_internal::optional_data_dtor_base.1639" = type { i8, %union.anon.1640 }
%union.anon.1640 = type { %"class.blink::LayoutUnit" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%"struct.std::nothrow_t" = type { i8 }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.1634, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1634 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.1635 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1635 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.1669 }
%class.scoped_refptr.1669 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.1670", [4 x i8], %"class.std::__1::unique_ptr.1672", i64, %"class.WTF::Vector.1676", %"class.WTF::Vector.1681", %"class.WTF::Vector.1687", %"class.WTF::Vector.1705", %class.scoped_refptr.1546, %"class.WTF::HashMap.1711", %"class.WTF::Vector.1716", %"class.WTF::Vector.1676", %"class.WTF::Vector.1721", %"class.WTF::HashMap.1726", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1670" = type { %"class.base::RefCountedThreadSafe.1671" }
%"class.base::RefCountedThreadSafe.1671" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1672" = type { %"class.std::__1::__compressed_pair.1673" }
%"class.std::__1::__compressed_pair.1673" = type { %"struct.std::__1::__compressed_pair_elem.1674" }
%"struct.std::__1::__compressed_pair_elem.1674" = type { i8* }
%"class.WTF::Vector.1681" = type { %"class.WTF::VectorBuffer.1682" }
%"class.WTF::VectorBuffer.1682" = type { %"class.WTF::VectorBufferBase.1683", [8 x i8] }
%"class.WTF::VectorBufferBase.1683" = type { %class.scoped_refptr.1684*, i32, i32 }
%class.scoped_refptr.1684 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1687" = type { %"class.WTF::VectorBuffer.1688" }
%"class.WTF::VectorBuffer.1688" = type { %"class.WTF::VectorBufferBase.1689" }
%"class.WTF::VectorBufferBase.1689" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1691", %"class.std::__1::unique_ptr.1697" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1690 }
%class.scoped_refptr.1690 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1691" = type { %"class.std::__1::__compressed_pair.1692" }
%"class.std::__1::__compressed_pair.1692" = type { %"struct.std::__1::__compressed_pair_elem.1693" }
%"struct.std::__1::__compressed_pair_elem.1693" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1697" = type { %"class.std::__1::__compressed_pair.1698" }
%"class.std::__1::__compressed_pair.1698" = type { %"struct.std::__1::__compressed_pair_elem.1699" }
%"struct.std::__1::__compressed_pair_elem.1699" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1705" = type { %"class.WTF::VectorBuffer.1706" }
%"class.WTF::VectorBuffer.1706" = type { %"class.WTF::VectorBufferBase.1707" }
%"class.WTF::VectorBufferBase.1707" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1708", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1708" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1623", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1625", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1630 }
%"class.WTF::RefCounted.1623" = type { %"class.base::RefCounted.1624" }
%"class.base::RefCounted.1624" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.absl::optional.1625" = type { %"class.absl::optional_internal::optional_data.1626" }
%"class.absl::optional_internal::optional_data.1626" = type { %"class.absl::optional_internal::optional_data_base.1627" }
%"class.absl::optional_internal::optional_data_base.1627" = type { %"class.absl::optional_internal::optional_data_dtor_base.1628" }
%"class.absl::optional_internal::optional_data_dtor_base.1628" = type { i8, %union.anon.1629 }
%union.anon.1629 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1630 = type { %"class.blink::SecurityOrigin"* }
%"class.WTF::HashMap.1711" = type { %"class.WTF::HashTable.1712" }
%"class.WTF::HashTable.1712" = type <{ %"struct.WTF::KeyValuePair.1715"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1715" = type opaque
%"class.WTF::Vector.1716" = type { %"class.WTF::VectorBuffer.1717" }
%"class.WTF::VectorBuffer.1717" = type { %"class.WTF::VectorBufferBase.1718" }
%"class.WTF::VectorBufferBase.1718" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.1676" = type { %"class.WTF::VectorBuffer.1677" }
%"class.WTF::VectorBuffer.1677" = type { %"class.WTF::VectorBufferBase.1678", [16 x i8] }
%"class.WTF::VectorBufferBase.1678" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1721" = type { %"class.WTF::VectorBuffer.1722" }
%"class.WTF::VectorBuffer.1722" = type { %"class.WTF::VectorBufferBase.1723" }
%"class.WTF::VectorBufferBase.1723" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.1726" = type { %"class.WTF::HashTable.1727" }
%"class.WTF::HashTable.1727" = type <{ %"struct.WTF::KeyValuePair.1730"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1730" = type { i8**, %"class.std::__1::unique_ptr.2000" }
%"class.std::__1::unique_ptr.2000" = type { %"class.std::__1::__compressed_pair.2001" }
%"class.std::__1::__compressed_pair.2001" = type { %"struct.std::__1::__compressed_pair_elem.2002" }
%"struct.std::__1::__compressed_pair_elem.2002" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.1731" }
%"class.std::__1::unique_ptr.1731" = type { %"class.std::__1::__compressed_pair.1732" }
%"class.std::__1::__compressed_pair.1732" = type { %"struct.std::__1::__compressed_pair_elem.1733" }
%"struct.std::__1::__compressed_pair_elem.1733" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.1734, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.1751" }
%class.scoped_refptr.1734 = type { %"class.base::RefCountedData.1735"* }
%"class.base::RefCountedData.1735" = type { %"class.base::RefCountedThreadSafe.1736", %"class.WTF::Vector.1737" }
%"class.base::RefCountedThreadSafe.1736" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1737" = type { %"class.WTF::VectorBuffer.1738" }
%"class.WTF::VectorBuffer.1738" = type { %"class.WTF::VectorBufferBase.1739" }
%"class.WTF::VectorBufferBase.1739" = type { %class.scoped_refptr.1740*, i32, i32 }
%class.scoped_refptr.1740 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.1741", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.1743" }
%"class.WTF::RefCounted.1741" = type { %"class.base::RefCounted.1742" }
%"class.base::RefCounted.1742" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.1743" = type { %"class.std::__1::__compressed_pair.1744" }
%"class.std::__1::__compressed_pair.1744" = type { %"struct.std::__1::__compressed_pair_elem.1745" }
%"struct.std::__1::__compressed_pair_elem.1745" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1751" = type { %"class.std::__1::__compressed_pair.1752" }
%"class.std::__1::__compressed_pair.1752" = type { %"struct.std::__1::__compressed_pair_elem.1753" }
%"struct.std::__1::__compressed_pair_elem.1753" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.1754", %"class.WTF::Vector.1767", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1754" = type { %"class.WTF::VectorBuffer.1755" }
%"class.WTF::VectorBuffer.1755" = type { %"class.WTF::VectorBufferBase.1756", [320 x i8] }
%"class.WTF::VectorBufferBase.1756" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.1757", %"class.WTF::Vector.1757", %class.scoped_refptr.1762, i8, [7 x i8] }>
%"class.WTF::Vector.1757" = type { %"class.WTF::VectorBuffer.1758" }
%"class.WTF::VectorBuffer.1758" = type { %"class.WTF::VectorBufferBase.1759", [8 x i8] }
%"class.WTF::VectorBufferBase.1759" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1762 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.1763", %"class.WTF::Vector.1737", %"class.WTF::Vector.1737" }
%"class.WTF::RefCounted.1763" = type { %"class.base::RefCounted.1764" }
%"class.base::RefCounted.1764" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1767" = type { %"class.WTF::VectorBuffer.1768" }
%"class.WTF::VectorBuffer.1768" = type { %"class.WTF::VectorBufferBase.1769", [288 x i8] }
%"class.WTF::VectorBufferBase.1769" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.1757", %"class.WTF::Vector.1757" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.1770 }
%class.scoped_refptr.1770 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1631, %"class.WTF::Vector.1798", %"class.std::__1::unique_ptr.1803", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1824, %"class.blink::Persistent.1825" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1974 }
%class.scoped_refptr.1974 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1975", %"class.WTF::Vector.630", %"class.WTF::Vector.1977", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1975" = type { %"class.base::RefCounted.1976" }
%"class.base::RefCounted.1976" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1977" = type { %"class.WTF::VectorBuffer.1978" }
%"class.WTF::VectorBuffer.1978" = type { %"class.WTF::VectorBufferBase.1979" }
%"class.WTF::VectorBufferBase.1979" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1980 }
%union.anon.1980 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.1965" }
%"class.blink::Member.1965" = type { %"class.blink::MemberBase.1966" }
%"class.blink::MemberBase.1966" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1967" }
%"class.blink::Member.1967" = type { %"class.blink::MemberBase.1968" }
%"class.blink::MemberBase.1968" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1988 }
%class.scoped_refptr.1988 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.1998" }
%"class.blink::Member.1998" = type { %"class.blink::MemberBase.1999" }
%"class.blink::MemberBase.1999" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1994" }
%"class.blink::MemberBase.1994" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1995" }
%"class.blink::MemberBase.1995" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1996" }
%"class.blink::MemberBase.1996" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.1997" }
%"class.blink::MemberBase.1997" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.1989", %"class.WTF::Vector.1989" }
%"class.WTF::Vector.1989" = type { %"class.WTF::VectorBuffer.1990" }
%"class.WTF::VectorBuffer.1990" = type { %"class.WTF::VectorBufferBase.1991" }
%"class.WTF::VectorBufferBase.1991" = type { %class.scoped_refptr.1988*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.1969" }
%"class.WTF::Vector.1969" = type { %"class.WTF::VectorBuffer.1970" }
%"class.WTF::VectorBuffer.1970" = type { %"class.WTF::VectorBufferBase.1971" }
%"class.WTF::VectorBufferBase.1971" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1641", %"class.absl::optional.1641", %"class.absl::optional.1641" }
%"class.absl::optional.1641" = type { %"class.absl::optional_internal::optional_data.1642" }
%"class.absl::optional_internal::optional_data.1642" = type { %"class.absl::optional_internal::optional_data_base.1643" }
%"class.absl::optional_internal::optional_data_base.1643" = type { %"class.absl::optional_internal::optional_data_dtor_base.1644" }
%"class.absl::optional_internal::optional_data_dtor_base.1644" = type { i8, %union.anon.1645 }
%union.anon.1645 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.1984" }
%"class.WTF::VectorBuffer.1984" = type { %"class.WTF::VectorBufferBase.1985", [32 x i8] }
%"class.WTF::VectorBufferBase.1985" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1631 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.1632", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.1779, %union.anon.1797, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.1632" = type { %"class.base::RefCounted.1633" }
%"class.base::RefCounted.1633" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1779 = type { %"class.blink::NGPhysicalFragment"* }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.1780", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.1782, %"class.std::__1::unique_ptr.1785" }
%"class.WTF::RefCounted.1780" = type { %"class.base::RefCounted.1781" }
%"class.base::RefCounted.1781" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1782 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.1783", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.1783" = type { %"class.base::RefCounted.1784" }
%"class.base::RefCounted.1784" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1785" = type { %"class.std::__1::__compressed_pair.1786" }
%"class.std::__1::__compressed_pair.1786" = type { %"struct.std::__1::__compressed_pair_elem.1787" }
%"struct.std::__1::__compressed_pair_elem.1787" = type { %"class.WTF::Vector.1788"* }
%"class.WTF::Vector.1788" = type { %"class.WTF::VectorBuffer.1789" }
%"class.WTF::VectorBuffer.1789" = type { %"class.WTF::VectorBufferBase.1790" }
%"class.WTF::VectorBufferBase.1790" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.1791 }
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%union.anon.1791 = type { %"class.blink::LineBoxList" }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%union.anon.1797 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.1636", %class.scoped_refptr.1841, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.1842, %"class.blink::NGExclusionSpace", %class.scoped_refptr.1669, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.1843", %"class.absl::optional.1859" }
%class.scoped_refptr.1841 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.1864", [4 x i8], %union.anon.1866, %class.scoped_refptr.1841, i32, [4 x i8] }>
%"class.WTF::RefCounted.1864" = type { %"class.base::RefCounted.1865" }
%"class.base::RefCounted.1865" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.1866 = type { %"class.blink::LayoutBox"* }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%union.anon.1842 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1843" = type { %"class.std::__1::__compressed_pair.1844" }
%"class.std::__1::__compressed_pair.1844" = type { %"struct.std::__1::__compressed_pair_elem.1845" }
%"struct.std::__1::__compressed_pair_elem.1845" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.1846", %"class.WTF::Vector.1851", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1846" = type { %"class.WTF::VectorBuffer.1847" }
%"class.WTF::VectorBuffer.1847" = type { %"class.WTF::VectorBufferBase.1848" }
%"class.WTF::VectorBufferBase.1848" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1851" = type { %"class.WTF::VectorBuffer.1852" }
%"class.WTF::VectorBuffer.1852" = type { %"class.WTF::VectorBufferBase.1853" }
%"class.WTF::VectorBufferBase.1853" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.1859" = type { %"class.absl::optional_internal::optional_data.1860" }
%"class.absl::optional_internal::optional_data.1860" = type { %"class.absl::optional_internal::optional_data_base.1861" }
%"class.absl::optional_internal::optional_data_base.1861" = type { %"class.absl::optional_internal::optional_data_dtor_base.1862" }
%"class.absl::optional_internal::optional_data_dtor_base.1862" = type { i8, %union.anon.1863 }
%union.anon.1863 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.WTF::Vector.1798" = type { %"class.WTF::VectorBuffer.1799" }
%"class.WTF::VectorBuffer.1799" = type { %"class.WTF::VectorBufferBase.1800", [8 x i8] }
%"class.WTF::VectorBufferBase.1800" = type { %class.scoped_refptr.1631*, i32, i32 }
%"class.std::__1::unique_ptr.1803" = type { %"class.std::__1::__compressed_pair.1804" }
%"class.std::__1::__compressed_pair.1804" = type { %"struct.std::__1::__compressed_pair_elem.1805" }
%"struct.std::__1::__compressed_pair_elem.1805" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1806", %"class.absl::optional.1811", %"class.absl::optional.1816" }
%"class.absl::optional.1806" = type { %"class.absl::optional_internal::optional_data.1807" }
%"class.absl::optional_internal::optional_data.1807" = type { %"class.absl::optional_internal::optional_data_base.1808" }
%"class.absl::optional_internal::optional_data_base.1808" = type { %"class.absl::optional_internal::optional_data_dtor_base.1809" }
%"class.absl::optional_internal::optional_data_dtor_base.1809" = type { i8, %union.anon.1810 }
%union.anon.1810 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1811" = type { %"class.absl::optional_internal::optional_data.1812" }
%"class.absl::optional_internal::optional_data.1812" = type { %"class.absl::optional_internal::optional_data_base.1813" }
%"class.absl::optional_internal::optional_data_base.1813" = type { %"class.absl::optional_internal::optional_data_dtor_base.1814" }
%"class.absl::optional_internal::optional_data_dtor_base.1814" = type { i8, [3 x i8], %union.anon.1815 }
%union.anon.1815 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1816" = type { %"class.absl::optional_internal::optional_data.1817" }
%"class.absl::optional_internal::optional_data.1817" = type { %"class.absl::optional_internal::optional_data_base.1818" }
%"class.absl::optional_internal::optional_data_base.1818" = type { %"class.absl::optional_internal::optional_data_dtor_base.1819" }
%"class.absl::optional_internal::optional_data_dtor_base.1819" = type { i8, %union.anon.1820 }
%union.anon.1820 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1824 = type { %"class.blink::InlineBox"* }
%"class.blink::Persistent.1825" = type { %"class.blink::PersistentBase.1826" }
%"class.blink::PersistentBase.1826" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1829", %"struct.blink::PhysicalRect", %"class.blink::Member.1839" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1829" = type { %"class.std::__1::__compressed_pair.1830" }
%"class.std::__1::__compressed_pair.1830" = type { %"struct.std::__1::__compressed_pair_elem.1831" }
%"struct.std::__1::__compressed_pair_elem.1831" = type { %"class.WTF::HashSet.1832"* }
%"class.WTF::HashSet.1832" = type { %"class.WTF::HashTable.1833" }
%"class.WTF::HashTable.1833" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1839" = type { %"class.blink::MemberBase.1840" }
%"class.blink::MemberBase.1840" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::NGConstraintSpaceBuilder" = type { %"class.blink::NGConstraintSpace", %"class.blink::LayoutUnit", i8, i8, i8, i8 }
%"class.blink::NGLayoutInputNode" = type <{ %"class.blink::LayoutBox"*, i8, [7 x i8] }>
%"class.WTF::Vector.1867" = type { %"class.WTF::VectorBuffer.1868" }
%"class.WTF::VectorBuffer.1868" = type { %"class.WTF::VectorBufferBase.1869" }
%"class.WTF::VectorBufferBase.1869" = type { %"class.blink::NGBlockNode"*, i32, i32 }
%"class.blink::(anonymous namespace)::ColumnConstraintsBuilder" = type { %"class.base::RefCountedData.1873"*, i8, %"class.absl::optional.1880" }
%"class.absl::optional.1880" = type { %"class.absl::optional_internal::optional_data.1881" }
%"class.absl::optional_internal::optional_data.1881" = type { %"class.absl::optional_internal::optional_data_base.1882" }
%"class.absl::optional_internal::optional_data_base.1882" = type { %"class.absl::optional_internal::optional_data_dtor_base.1883" }
%"class.absl::optional_internal::optional_data_dtor_base.1883" = type { i8, %union.anon.1884 }
%union.anon.1884 = type { %"struct.blink::NGTableTypes::Column" }
%class.anon.2073 = type { i32*, i32*, %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"** }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::LayoutNGTableColumn" = type { %"class.blink::LayoutBox", i32, %"class.blink::LayoutObjectChildList" }
%"struct.blink::NGTableGroupedChildren" = type { %"class.WTF::Vector.1867", %"class.WTF::Vector.1867", %"class.blink::NGBlockNode", %"class.WTF::Vector.1867", %"class.blink::NGBlockNode" }
%"class.blink::NGTableBorders" = type <{ %"class.WTF::RefCounted.1885", [4 x i8], %"class.WTF::Vector.1887", %"class.WTF::Vector.1892", i32, %"class.absl::optional.1897", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1885" = type { %"class.base::RefCounted.1886" }
%"class.base::RefCounted.1886" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1887" = type { %"class.WTF::VectorBuffer.1888" }
%"class.WTF::VectorBuffer.1888" = type { %"class.WTF::VectorBufferBase.1889" }
%"class.WTF::VectorBufferBase.1889" = type { %"struct.blink::NGTableBorders::Edge"*, i32, i32 }
%"struct.blink::NGTableBorders::Edge" = type { %class.scoped_refptr, i32, i32 }
%"class.WTF::Vector.1892" = type { %"class.WTF::VectorBuffer.1893" }
%"class.WTF::VectorBuffer.1893" = type { %"class.WTF::VectorBufferBase.1894" }
%"class.WTF::VectorBufferBase.1894" = type { %"struct.blink::NGTableBorders::Section"*, i32, i32 }
%"struct.blink::NGTableBorders::Section" = type { i32, i32 }
%"class.absl::optional.1897" = type { %"class.absl::optional_internal::optional_data.1898" }
%"class.absl::optional_internal::optional_data.1898" = type { %"class.absl::optional_internal::optional_data_base.1899" }
%"class.absl::optional_internal::optional_data_base.1899" = type { %"class.absl::optional_internal::optional_data_dtor_base.1900" }
%"class.absl::optional_internal::optional_data_dtor_base.1900" = type { i8, %union.anon.1901 }
%union.anon.1901 = type { %"struct.blink::NGBoxStrut" }
%class.anon.2027 = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NGColspanCellTabulator" = type { i32, %"class.WTF::Vector.1942" }
%"class.WTF::Vector.1942" = type { %"class.WTF::VectorBuffer.1943" }
%"class.WTF::VectorBuffer.1943" = type { %"class.WTF::VectorBufferBase.1944" }
%"class.WTF::VectorBufferBase.1944" = type { %"struct.blink::NGColspanCellTabulator::Cell"*, i32, i32 }
%"struct.blink::NGColspanCellTabulator::Cell" = type { i32, i32, i32 }
%"struct.blink::NGTableTypes::CellInlineConstraint" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.absl::optional", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1902" = type { %"class.WTF::VectorBuffer.1903" }
%"class.WTF::VectorBuffer.1903" = type { %"class.WTF::VectorBufferBase.1904" }
%"class.WTF::VectorBufferBase.1904" = type { %"class.absl::optional.1905"*, i32, i32 }
%"class.absl::optional.1905" = type { %"class.absl::optional_internal::optional_data.1906" }
%"class.absl::optional_internal::optional_data.1906" = type { %"class.absl::optional_internal::optional_data_base.1907" }
%"class.absl::optional_internal::optional_data_base.1907" = type { %"class.absl::optional_internal::optional_data_dtor_base.1908" }
%"class.absl::optional_internal::optional_data_dtor_base.1908" = type { i8, [3 x i8], %union.anon.1909 }
%union.anon.1909 = type { %"struct.blink::NGTableTypes::CellInlineConstraint" }
%"class.WTF::Vector.1912" = type { %"class.WTF::VectorBuffer.1913" }
%"class.WTF::VectorBuffer.1913" = type { %"class.WTF::VectorBufferBase.1914" }
%"class.WTF::VectorBufferBase.1914" = type { %"struct.blink::NGTableTypes::ColspanCell"*, i32, i32 }
%"struct.blink::NGTableTypes::ColspanCell" = type { %"struct.blink::NGTableTypes::CellInlineConstraint", i32, i32 }
%"class.blink::NGTableGroupedChildrenIterator" = type <{ %"struct.blink::NGTableGroupedChildren"*, %"class.blink::NGBlockNode"*, i32, [4 x i8] }>
%"class.WTF::Vector.1917" = type { %"class.WTF::VectorBuffer.1918" }
%"class.WTF::VectorBuffer.1918" = type { %"class.WTF::VectorBufferBase.1919" }
%"class.WTF::VectorBufferBase.1919" = type { %"struct.blink::NGTableTypes::ColumnLocation"*, i32, i32 }
%"struct.blink::NGTableTypes::ColumnLocation" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1922" = type { %"class.WTF::VectorBuffer.1923" }
%"class.WTF::VectorBuffer.1923" = type { %"class.WTF::VectorBufferBase.1924" }
%"class.WTF::VectorBufferBase.1924" = type { %"struct.blink::NGTableTypes::Section"*, i32, i32 }
%"struct.blink::NGTableTypes::Section" = type <{ i32, i32, %"class.blink::LayoutUnit", %"class.absl::optional", i8, i8, i8, i8 }>
%"class.WTF::Vector.1927" = type { %"class.WTF::VectorBuffer.1928" }
%"class.WTF::VectorBuffer.1928" = type { %"class.WTF::VectorBufferBase.1929" }
%"class.WTF::VectorBufferBase.1929" = type { %"struct.blink::NGTableTypes::Row"*, i32, i32 }
%"struct.blink::NGTableTypes::Row" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.absl::optional", i32, i32, i8, i8, i8, i8 }
%"class.WTF::Vector.1932" = type { %"class.WTF::VectorBuffer.1933" }
%"class.WTF::VectorBuffer.1933" = type { %"class.WTF::VectorBufferBase.1934" }
%"class.WTF::VectorBufferBase.1934" = type { %"struct.blink::NGTableTypes::CellBlockConstraint"*, i32, i32 }
%"struct.blink::NGTableTypes::CellBlockConstraint" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBoxStrut", i32, i32, i32, i32, i8, [3 x i8] }>
%"class.blink::NGRowBaselineTabulator" = type <{ %"class.absl::optional.1636", %"class.absl::optional.1636", i8, [3 x i8], %"class.absl::optional.1636", i8, [3 x i8] }>
%"class.blink::NGBoxFragment" = type { %"class.blink::NGFragment.base", [6 x i8] }
%"class.blink::NGFragment.base" = type <{ %"class.blink::NGPhysicalFragment"*, %"class.blink::WritingDirectionMode" }>
%"class.blink::WritingDirectionMode" = type { i8, i8 }
%"struct.blink::NGTableTypes::RowspanCell" = type { %"struct.blink::NGTableTypes::CellBlockConstraint", i32, i32 }
%"struct.std::__1::__less.2116" = type { i8 }
%"class.WTF::Vector.1937" = type { %"class.WTF::VectorBuffer.1938" }
%"class.WTF::VectorBuffer.1938" = type { %"class.WTF::VectorBufferBase.1939" }
%"class.WTF::VectorBufferBase.1939" = type { %"struct.blink::NGTableTypes::RowspanCell"*, i32, i32 }
%"class.blink::NGPhysicalBoxFragment" = type { %"class.blink::NGPhysicalFragment", i24, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGInkOverflow", [0 x %"struct.blink::NGLink"] }
%"class.blink::NGInkOverflow" = type { %union.anon.2042 }
%union.anon.2042 = type { %"struct.blink::NGSingleInkOverflow"* }
%"struct.blink::NGSingleInkOverflow" = type { %"struct.blink::PhysicalRect" }
%"struct.blink::NGLink" = type { %"class.blink::NGPhysicalFragment"*, %"struct.blink::PhysicalOffset" }
%"class.blink::NGBlockBreakToken" = type opaque
%"struct.std::__1::default_delete.1774" = type { i8 }
%"class.blink::NGTableConstraintSpaceData" = type <{ %"class.WTF::RefCounted.1647", [4 x i8], %"class.WTF::Vector.1649", %"class.WTF::Vector.1654", %"class.WTF::Vector.1659", %"class.WTF::Vector.1664", %"class.blink::LayoutUnit", %"class.blink::WritingDirectionMode", [2 x i8], %"struct.blink::LogicalSize", i8, i8, i8, [5 x i8] }>
%"class.WTF::RefCounted.1647" = type { %"class.base::RefCounted.1648" }
%"class.base::RefCounted.1648" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1649" = type { %"class.WTF::VectorBuffer.1650" }
%"class.WTF::VectorBuffer.1650" = type { %"class.WTF::VectorBufferBase.1651" }
%"class.WTF::VectorBufferBase.1651" = type { %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::ColumnLocation" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1654" = type { %"class.WTF::VectorBuffer.1655" }
%"class.WTF::VectorBuffer.1655" = type { %"class.WTF::VectorBufferBase.1656" }
%"class.WTF::VectorBufferBase.1656" = type { %"struct.blink::NGTableConstraintSpaceData::Section"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Section" = type { i32, i32 }
%"class.WTF::Vector.1659" = type { %"class.WTF::VectorBuffer.1660" }
%"class.WTF::VectorBuffer.1660" = type { %"class.WTF::VectorBufferBase.1661" }
%"class.WTF::VectorBufferBase.1661" = type { %"struct.blink::NGTableConstraintSpaceData::Row"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Row" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.1664" = type { %"class.WTF::VectorBuffer.1665" }
%"class.WTF::VectorBuffer.1665" = type { %"class.WTF::VectorBufferBase.1666" }
%"class.WTF::VectorBufferBase.1666" = type { %"struct.blink::NGTableConstraintSpaceData::Cell"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Cell" = type <{ %"struct.blink::NGBoxStrut", %"class.blink::LayoutUnit", i32, i8, [3 x i8] }>
%"class.blink::DisplayLockContext" = type <{ %"class.blink::LocalFrameView::LifecycleNotificationObserver", %"class.blink::WeakMember.2078", %"class.blink::WeakMember.966", i32, [4 x i8], %"class.blink::HeapHashSet.1251", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i8, i8, i8, i8, i8, i8, [6 x i8], i8, i32, i8, i8, [2 x i8], %"class.absl::optional.2079", [4 x i8] }>
%"class.blink::LocalFrameView::LifecycleNotificationObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WeakMember.2078" = type { %"class.blink::MemberBase.344" }
%"class.absl::optional.2079" = type { %"class.absl::optional_internal::optional_data.2080" }
%"class.absl::optional_internal::optional_data.2080" = type { %"class.absl::optional_internal::optional_data_base.2081" }
%"class.absl::optional_internal::optional_data_base.2081" = type { %"class.absl::optional_internal::optional_data_dtor_base.2082" }
%"class.absl::optional_internal::optional_data_dtor_base.2082" = type { i8, %union.anon.2083 }
%union.anon.2083 = type { %"class.blink::FloatSize" }

$_ZN3WTF6VectorIN5blink22NGColspanCellTabulator4CellELj0ENS_18PartitionAllocatorEE7EraseAtEj = comdat any

$_ZNK5blink13NGBoxFragment7PaddingEv = comdat any

$_ZN5blink17NGConstraintSpaceD2Ev = comdat any

$_ZN5blink17NGConstraintSpace8RareDataD2Ev = comdat any

$_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_ = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN5blink17NGShapeExclusionsD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4absl8optionalIN5blink12NGTableTypes20CellInlineConstraintEEEEEmm = comdat any

$_ZN3WTF6VectorIN4absl8optionalIN5blink12NGTableTypes20CellInlineConstraintEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGTableTypes11ColspanCellEEEmm = comdat any

$_ZN3WTF6VectorIN5blink12NGTableTypes6ColumnELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGTableTypes6ColumnEEEmm = comdat any

$_ZNK3WTF6VectorIN4absl8optionalIN5blink12NGTableTypes20CellInlineConstraintEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink12NGTableTypes14ColumnLocationELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink12NGTableTypes19CellBlockConstraintELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGTableTypes19CellBlockConstraintEEEmm = comdat any

$_ZN3WTF6VectorIN5blink12NGTableTypes11RowspanCellELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGTableTypes11RowspanCellEEEmm = comdat any

$_ZN3WTF6VectorIN5blink12NGTableTypes6ColumnELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink12LayoutObject16ClearNeedsLayoutEv = comdat any

$_ZN3WTF6VectorIN5blink12NGTableTypes3RowELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGTableTypes3RowEEEmm = comdat any

$_ZNSt3__113__stable_sortIRNS_6__lessIN5blink12NGTableTypes11RowspanCellES4_EEPS4_EEvT0_S8_T_NS_15iterator_traitsIS8_E15difference_typeEPNSB_10value_typeEl = comdat any

$_ZNSt3__118__stable_sort_moveIRNS_6__lessIN5blink12NGTableTypes11RowspanCellES4_EEPS4_EEvT0_S8_T_NS_15iterator_traitsIS8_E15difference_typeEPNSB_10value_typeE = comdat any

$_ZNSt3__115__inplace_mergeIRNS_6__lessIN5blink12NGTableTypes11RowspanCellES4_EEPS4_EEvT0_S8_S8_T_NS_15iterator_traitsIS8_E15difference_typeESC_PNSB_10value_typeEl = comdat any

$_ZNSt3__121__insertion_sort_moveIRNS_6__lessIN5blink12NGTableTypes11RowspanCellES4_EEPS4_EEvT0_S8_PNS_15iterator_traitsIS8_E10value_typeET_ = comdat any

$_ZNSt3__124__buffered_inplace_mergeIRNS_6__lessIN5blink12NGTableTypes11RowspanCellES4_EEPS4_EEvT0_S8_S8_T_NS_15iterator_traitsIS8_E15difference_typeESC_PNSB_10value_typeE = comdat any

$_ZN3WTF6VectorIN5blink12NGTableTypes7SectionELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGTableTypes7SectionEEEmm = comdat any

$_ZN3WTF6VectorIN5blink22NGColspanCellTabulator4CellELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22NGColspanCellTabulator4CellEEEmm = comdat any

@__const._ZN5blink21NGTableAlgorithmUtils34ComputeSectionMinimumRowBlockSizesERKNS_11NGBlockNodeENS_10LayoutUnitEbRKN3WTF6VectorINS_12NGTableTypes14ColumnLocationELj0ENS5_18PartitionAllocatorEEERKNS_14NGTableBordersES4_jbPNS6_INS7_7SectionELj0ES9_EEPNS6_INS7_3RowELj0ES9_EEPNS6_INS7_19CellBlockConstraintELj0ES9_EE.row_constraint = private unnamed_addr constant { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", { { { { i8, [3 x i8], %union.anon.40 } } } }, i32, i32, i8, i8, i8, i8 } { %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 }, { { { { i8, [3 x i8], %union.anon.40 } } } } { { { { i8, [3 x i8], %union.anon.40 } } } { { { i8, [3 x i8], %union.anon.40 } } { { i8, [3 x i8], %union.anon.40 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.40 { float 0xFFFFFFFFE0000000 } } } } }, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, i8 -86, i8 -86 }, align 4
@__const._ZN5blink12_GLOBAL__N_131ComputeColumnElementConstraintsERKN3WTF6VectorINS_11NGBlockNodeELj0ENS1_18PartitionAllocatorEEEbPN4base14RefCountedDataINS2_INS_12NGTableTypes6ColumnELj0ES4_EEEE.constraints_builder = private unnamed_addr constant { %"class.base::RefCountedData.1873"*, i8, [3 x i8], { { { { i8, [3 x i8], { { { { { { i8, [3 x i8], %union.anon.1640 } } } }, { { { { i8, [3 x i8], %union.anon.1640 } } } }, { { { { i8, [3 x i8], %union.anon.40 } } } }, %"class.blink::LayoutUnit", i8, i8, i8, i8 } } } } } } } { %"class.base::RefCountedData.1873"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData.1873"*), i8 -86, [3 x i8] c"\AA\AA\AA", { { { { i8, [3 x i8], { { { { { { i8, [3 x i8], %union.anon.1640 } } } }, { { { { i8, [3 x i8], %union.anon.1640 } } } }, { { { { i8, [3 x i8], %union.anon.40 } } } }, %"class.blink::LayoutUnit", i8, i8, i8, i8 } } } } } } { { { { i8, [3 x i8], { { { { { { i8, [3 x i8], %union.anon.1640 } } } }, { { { { i8, [3 x i8], %union.anon.1640 } } } }, { { { { i8, [3 x i8], %union.anon.40 } } } }, %"class.blink::LayoutUnit", i8, i8, i8, i8 } } } } } { { { i8, [3 x i8], { { { { { { i8, [3 x i8], %union.anon.1640 } } } }, { { { { i8, [3 x i8], %union.anon.1640 } } } }, { { { { i8, [3 x i8], %union.anon.40 } } } }, %"class.blink::LayoutUnit", i8, i8, i8, i8 } } } } { { i8, [3 x i8], { { { { { { i8, [3 x i8], %union.anon.1640 } } } }, { { { { i8, [3 x i8], %union.anon.1640 } } } }, { { { { i8, [3 x i8], %union.anon.40 } } } }, %"class.blink::LayoutUnit", i8, i8, i8, i8 } } } { i8 -86, [3 x i8] c"\AA\AA\AA", { { { { { { i8, [3 x i8], %union.anon.1640 } } } }, { { { { i8, [3 x i8], %union.anon.1640 } } } }, { { { { i8, [3 x i8], %union.anon.40 } } } }, %"class.blink::LayoutUnit", i8, i8, i8, i8 } } { { { { { { i8, [3 x i8], %union.anon.1640 } } } }, { { { { i8, [3 x i8], %union.anon.1640 } } } }, { { { { i8, [3 x i8], %union.anon.40 } } } }, %"class.blink::LayoutUnit", i8, i8, i8, i8 } { { { { { i8, [3 x i8], %union.anon.1640 } } } } { { { { i8, [3 x i8], %union.anon.1640 } } } { { { i8, [3 x i8], %union.anon.1640 } } { { i8, [3 x i8], %union.anon.1640 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.1640 { %"class.blink::LayoutUnit" { i32 -1431655766 } } } } } }, { { { { i8, [3 x i8], %union.anon.1640 } } } } { { { { i8, [3 x i8], %union.anon.1640 } } } { { { i8, [3 x i8], %union.anon.1640 } } { { i8, [3 x i8], %union.anon.1640 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.1640 { %"class.blink::LayoutUnit" { i32 -1431655766 } } } } } }, { { { { i8, [3 x i8], %union.anon.40 } } } } { { { { i8, [3 x i8], %union.anon.40 } } } { { { i8, [3 x i8], %union.anon.40 } } { { i8, [3 x i8], %union.anon.40 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.40 { float 0xFFFFFFFFE0000000 } } } } }, %"class.blink::LayoutUnit" { i32 -1431655766 }, i8 -86, i8 -86, i8 -86, i8 -86 } } } } } } }, align 8
@__const._ZN5blink12_GLOBAL__N_131ComputeSectionInlineConstraintsERKNS_11NGBlockNodeEbbNS_11WritingModeERKNS_14NGTableBordersEjPjPN3WTF6VectorIN4absl8optionalINS_12NGTableTypes20CellInlineConstraintEEELj0ENS9_18PartitionAllocatorEEEPNSA_INSD_11ColspanCellELj0ESG_EE.cell_constraint = private unnamed_addr constant <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", { { { { i8, [3 x i8], %union.anon.40 } } } }, %"class.blink::LayoutUnit", i8, [3 x i8] }> <{ %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 }, { { { { i8, [3 x i8], %union.anon.40 } } } } { { { { i8, [3 x i8], %union.anon.40 } } } { { { i8, [3 x i8], %union.anon.40 } } { { i8, [3 x i8], %union.anon.40 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.40 { float 0xFFFFFFFFE0000000 } } } } }, %"class.blink::LayoutUnit" { i32 -1431655766 }, i8 -86, [3 x i8] c"\AA\AA\AA" }>, align 4
@.str = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4absl8optionalIN5blink12NGTableTypes20CellInlineConstraintEEEEEPKcv = private unnamed_addr constant [105 x i8] c"const char *WTF::GetStringWithTypeName() [T = absl::optional<blink::NGTableTypes::CellInlineConstraint>]\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12NGTableTypes11ColspanCellEEEPKcv = private unnamed_addr constant [80 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NGTableTypes::ColspanCell]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12NGTableTypes6ColumnEEEPKcv = private unnamed_addr constant [75 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NGTableTypes::Column]\00", align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@__const._ZNSt3__112__rotate_gcdIPN5blink12NGTableTypes11ColspanCellEEET_S5_S5_S5_.__t = private unnamed_addr constant { <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", { { { { i8, [3 x i8], %union.anon.40 } } } }, %"class.blink::LayoutUnit", i8, [3 x i8] }>, i32, i32 } { <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", { { { { i8, [3 x i8], %union.anon.40 } } } }, %"class.blink::LayoutUnit", i8, [3 x i8] }> <{ %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 }, { { { { i8, [3 x i8], %union.anon.40 } } } } { { { { i8, [3 x i8], %union.anon.40 } } } { { { i8, [3 x i8], %union.anon.40 } } { { i8, [3 x i8], %union.anon.40 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.40 { float 0xFFFFFFFFE0000000 } } } } }, %"class.blink::LayoutUnit" { i32 -1431655766 }, i8 -86, [3 x i8] c"\AA\AA\AA" }>, i32 -1431655766, i32 -1431655766 }, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12NGTableTypes19CellBlockConstraintEEEPKcv = private unnamed_addr constant [88 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NGTableTypes::CellBlockConstraint]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12NGTableTypes11RowspanCellEEEPKcv = private unnamed_addr constant [80 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NGTableTypes::RowspanCell]\00", align 1
@__const._ZN5blink12_GLOBAL__N_124ColumnConstraintsBuilder8VisitColERKNS_17NGLayoutInputNodeEjj.col_constraint = private unnamed_addr constant { { { { { i8, [3 x i8], %union.anon.1640 } } } }, { { { { i8, [3 x i8], %union.anon.1640 } } } }, { { { { i8, [3 x i8], %union.anon.40 } } } }, %"class.blink::LayoutUnit", i8, i8, i8, i8 } { { { { { i8, [3 x i8], %union.anon.1640 } } } } { { { { i8, [3 x i8], %union.anon.1640 } } } { { { i8, [3 x i8], %union.anon.1640 } } { { i8, [3 x i8], %union.anon.1640 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.1640 { %"class.blink::LayoutUnit" { i32 -1431655766 } } } } } }, { { { { i8, [3 x i8], %union.anon.1640 } } } } { { { { i8, [3 x i8], %union.anon.1640 } } } { { { i8, [3 x i8], %union.anon.1640 } } { { i8, [3 x i8], %union.anon.1640 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.1640 { %"class.blink::LayoutUnit" { i32 -1431655766 } } } } } }, { { { { i8, [3 x i8], %union.anon.40 } } } } { { { { i8, [3 x i8], %union.anon.40 } } } { { { i8, [3 x i8], %union.anon.40 } } { { i8, [3 x i8], %union.anon.40 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.40 { float 0xFFFFFFFFE0000000 } } } } }, %"class.blink::LayoutUnit" { i32 -1431655766 }, i8 -86, i8 -86, i8 -86, i8 -86 }, align 4
@_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E = external local_unnamed_addr global i8, align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12NGTableTypes3RowEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NGTableTypes::Row]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12NGTableTypes7SectionEEEPKcv = private unnamed_addr constant [76 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NGTableTypes::Section]\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22NGColspanCellTabulator4CellEEEPKcv = private unnamed_addr constant [83 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NGColspanCellTabulator::Cell]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21NGTableAlgorithmUtils30CreateTableCellConstraintSpaceENS_20WritingDirectionModeENS_11NGBlockNodeERKNS_10NGBoxStrutENS_11LogicalSizeENS_10LayoutUnitEN4absl8optionalIS7_EEjbbbbNS_11NGCacheSlotE(%"class.blink::NGConstraintSpace"* noalias nocapture sret, i16, %"class.blink::LayoutBox"*, i64, %"struct.blink::NGBoxStrut"* nocapture readonly dereferenceable(16), i64, i32, i64, i32, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %15 = alloca { %"class.blink::LayoutBox"*, i64 }, align 8
  %16 = alloca %"class.blink::NGConstraintSpaceBuilder", align 8
  %17 = trunc i16 %1 to i8
  %18 = getelementptr inbounds { %"class.blink::LayoutBox"*, i64 }, { %"class.blink::LayoutBox"*, i64 }* %15, i64 0, i32 0
  store %"class.blink::LayoutBox"* %2, %"class.blink::LayoutBox"** %18, align 8
  %19 = getelementptr inbounds { %"class.blink::LayoutBox"*, i64 }, { %"class.blink::LayoutBox"*, i64 }* %15, i64 0, i32 1
  store i64 %3, i64* %19, align 8
  %20 = trunc i64 %7 to i8
  %21 = lshr i64 %7, 32
  %22 = trunc i64 %21 to i32
  %23 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0, i32 5, i32 0
  %24 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %23, align 8
  %25 = bitcast %"class.blink::NGConstraintSpaceBuilder"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %25) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 32, i1 false)
  %26 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %24, i64 0, i32 0, i32 9
  %27 = bitcast [20 x i8]* %26 to i160*
  %28 = load i160, i160* %27, align 8
  %29 = lshr i160 %28, 102
  %30 = trunc i160 %29 to i16
  %31 = and i16 %30, 3
  %32 = lshr i160 %28, 108
  %33 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 -64, i32* %33, align 8
  %34 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %16, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 -64, i32* %34, align 4
  %35 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %16, i64 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %16, i64 0, i32 0, i32 3, i32 0
  %37 = shl nuw nsw i16 %31, 4
  %38 = trunc i160 %32 to i16
  %39 = and i16 %38, 128
  %40 = or i16 %37, %39
  %41 = bitcast %union.anon.1634* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #16
  %42 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %16, i64 0, i32 1, i32 0
  store i32 -64, i32* %42, align 8
  %43 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %16, i64 0, i32 2
  %44 = icmp ne i8 %17, 0
  %45 = icmp eq i16 %31, 0
  %46 = xor i1 %44, %45
  %47 = zext i1 %46 to i8
  store i8 %47, i8* %43, align 4
  %48 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %16, i64 0, i32 3
  store i8 1, i8* %48, align 1
  %49 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %16, i64 0, i32 4
  store i8 0, i8* %49, align 2
  %50 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %16, i64 0, i32 5
  store i8 1, i8* %50, align 1
  %51 = select i1 %46, i32 1024, i32 3072
  %52 = or i16 %40, 256
  %53 = zext i16 %52 to i32
  %54 = or i32 %51, %53
  store i32 %54, i32* %36, align 8
  %55 = and i160 %28, 15211807202738752817960438464512
  %56 = icmp eq i160 %55, 0
  %57 = xor i1 %44, %56
  br i1 %57, label %66, label %58

58:                                               ; preds = %14
  %59 = bitcast { %"class.blink::LayoutBox"*, i64 }* %15 to %"class.blink::NGLayoutInputNode"*
  %60 = call i64 @_ZNK5blink17NGLayoutInputNode26InitialContainingBlockSizeEv(%"class.blink::NGLayoutInputNode"* nonnull %59) #16
  %61 = lshr i64 %60, 32
  %62 = icmp eq i8 %17, 0
  %63 = select i1 %62, i64 %61, i64 %60
  %64 = trunc i64 %63 to i32
  store i32 %64, i32* %42, align 8
  %65 = load i8, i8* %43, align 4, !range !2
  br label %66

66:                                               ; preds = %58, %14
  %67 = phi i32 [ %64, %58 ], [ -64, %14 ]
  %68 = phi i8 [ %65, %58 ], [ %47, %14 ]
  %69 = bitcast %"class.blink::NGConstraintSpaceBuilder"* %16 to i64*
  store i64 %5, i64* %69, align 8
  %70 = icmp eq i8 %68, 1
  %71 = lshr i64 %5, 32
  %72 = trunc i64 %71 to i32
  br i1 %70, label %80, label %73, !prof !3

73:                                               ; preds = %66
  %74 = trunc i64 %5 to i32
  store i32 %72, i32* %33, align 8
  store i32 %74, i32* %34, align 4
  %75 = load i8, i8* %50, align 1, !range !2
  %76 = icmp ne i8 %75, 0
  %77 = icmp eq i32 %72, -64
  %78 = and i1 %77, %76
  br i1 %78, label %79, label %80

79:                                               ; preds = %73
  store i32 %67, i32* %33, align 8
  br label %80

80:                                               ; preds = %79, %73, %66
  %81 = phi i32 [ 2097152, %66 ], [ 4194304, %73 ], [ 4194304, %79 ]
  %82 = phi i1 [ false, %66 ], [ true, %73 ], [ true, %79 ]
  %83 = load i32, i32* %36, align 8
  %84 = or i32 %83, %81
  store i32 %84, i32* %36, align 8
  %85 = and i64 %5, -4294967296
  %86 = icmp eq i64 %85, -274877906944
  br i1 %86, label %100, label %87

87:                                               ; preds = %80
  br i1 %82, label %90, label %88, !prof !4

88:                                               ; preds = %87
  %89 = or i32 %84, 4194304
  store i32 %89, i32* %36, align 8
  br label %94

90:                                               ; preds = %87
  %91 = or i32 %84, 2097152
  store i32 %91, i32* %36, align 8
  %92 = load i8, i8* %49, align 2, !range !2
  %93 = icmp eq i8 %92, 1
  br i1 %93, label %100, label %94, !prof !4

94:                                               ; preds = %88, %90
  %95 = phi i32 [ %91, %90 ], [ %89, %88 ]
  %96 = zext i1 %9 to i32
  %97 = shl nuw nsw i32 %96, 23
  %98 = and i32 %95, -8388609
  %99 = or i32 %98, %97
  store i32 %99, i32* %36, align 8
  br label %100

100:                                              ; preds = %80, %94, %90
  %101 = zext i32 %6 to i64
  %102 = or i64 %101, -274877906944
  call void @_ZN5blink24NGConstraintSpaceBuilder27SetPercentageResolutionSizeENS_11LogicalSizeE(%"class.blink::NGConstraintSpaceBuilder"* nonnull %16, i64 %102) #16
  %103 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %4, i64 0, i32 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %118

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %4, i64 0, i32 1, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %118

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %4, i64 0, i32 2, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %118

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %4, i64 0, i32 3, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %161, label %118

118:                                              ; preds = %114, %110, %106, %100
  %119 = load i32, i32* %36, align 8
  %120 = and i32 %119, 1
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %125, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %16, i64 0, i32 0, i32 1, i32 0
  %124 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %123, align 8
  br label %141

125:                                              ; preds = %118
  %126 = call noalias i8* @malloc(i64 88) #16
  %127 = bitcast %union.anon.1634* %35 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = getelementptr inbounds i8, i8* %126, i64 16
  %130 = bitcast i8* %129 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 4 %126, i8 0, i64 16, i1 false) #16
  store i64 %128, i64* %130, align 8
  %131 = getelementptr inbounds i8, i8* %126, i64 24
  %132 = bitcast i8* %131 to i32*
  store i32 -64, i32* %132, align 4
  %133 = getelementptr inbounds i8, i8* %126, i64 28
  %134 = bitcast i8* %133 to i32*
  store i32 0, i32* %134, align 4
  %135 = getelementptr inbounds i8, i8* %126, i64 32
  %136 = bitcast i8* %135 to i16*
  store i16 0, i16* %136, align 8
  %137 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %16, i64 0, i32 0, i32 1, i32 0
  %138 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %137 to i8**
  store i8* %126, i8** %138, align 8
  %139 = or i32 %119, 1
  store i32 %139, i32* %36, align 8
  %140 = bitcast i8* %126 to %"struct.blink::NGConstraintSpace::RareData"*
  br label %141

141:                                              ; preds = %125, %122
  %142 = phi %"struct.blink::NGConstraintSpace::RareData"* [ %124, %122 ], [ %140, %125 ]
  %143 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %142, i64 0, i32 6
  %144 = load i16, i16* %143, align 8
  %145 = and i16 %144, 7
  %146 = icmp eq i16 %145, 2
  br i1 %146, label %157, label %147

147:                                              ; preds = %141
  %148 = and i16 %144, -8
  %149 = or i16 %148, 2
  store i16 %149, i16* %143, align 8
  %150 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %142, i64 0, i32 7
  %151 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %142, i64 0, i32 7, i32 1, i64 16
  %152 = bitcast i8* %151 to i32*
  %153 = bitcast %union.anon.1635* %150 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %153, i8 0, i64 40, i1 false) #16
  store i32 -1, i32* %152, align 4
  %154 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %142, i64 0, i32 7, i32 1, i64 20
  store i8 0, i8* %154, align 4
  %155 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %142, i64 0, i32 7, i32 1, i64 28
  store i8 0, i8* %155, align 4
  %156 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %142, i64 0, i32 7, i32 1, i64 29
  store i8 0, i8* %156, align 1
  br label %157

157:                                              ; preds = %141, %147
  %158 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %142, i64 0, i32 7
  %159 = bitcast %union.anon.1635* %158 to i8*
  %160 = bitcast %"struct.blink::NGBoxStrut"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %159, i8* align 4 %160, i64 16, i1 false) #16
  br label %161

161:                                              ; preds = %114, %157
  %162 = load i8, i8* %43, align 4, !range !2
  %163 = icmp eq i8 %162, 0
  %164 = icmp eq i8 %20, 0
  %165 = or i1 %164, %163
  %166 = load i32, i32* %36, align 8
  br i1 %165, label %216, label %167

167:                                              ; preds = %161
  %168 = and i32 %166, 1
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %173, label %170

170:                                              ; preds = %167
  %171 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %16, i64 0, i32 0, i32 1, i32 0
  %172 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %171, align 8
  br label %189

173:                                              ; preds = %167
  %174 = call noalias i8* @malloc(i64 88) #16
  %175 = bitcast %union.anon.1634* %35 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = getelementptr inbounds i8, i8* %174, i64 16
  %178 = bitcast i8* %177 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 4 %174, i8 0, i64 16, i1 false) #16
  store i64 %176, i64* %178, align 8
  %179 = getelementptr inbounds i8, i8* %174, i64 24
  %180 = bitcast i8* %179 to i32*
  store i32 -64, i32* %180, align 4
  %181 = getelementptr inbounds i8, i8* %174, i64 28
  %182 = bitcast i8* %181 to i32*
  store i32 0, i32* %182, align 4
  %183 = getelementptr inbounds i8, i8* %174, i64 32
  %184 = bitcast i8* %183 to i16*
  store i16 0, i16* %184, align 8
  %185 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %16, i64 0, i32 0, i32 1, i32 0
  %186 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %185 to i8**
  store i8* %174, i8** %186, align 8
  %187 = or i32 %166, 1
  store i32 %187, i32* %36, align 8
  %188 = bitcast i8* %174 to %"struct.blink::NGConstraintSpace::RareData"*
  br label %189

189:                                              ; preds = %173, %170
  %190 = phi i32 [ %166, %170 ], [ %187, %173 ]
  %191 = phi %"struct.blink::NGConstraintSpace::RareData"* [ %172, %170 ], [ %188, %173 ]
  %192 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %191, i64 0, i32 6
  %193 = load i16, i16* %192, align 8
  %194 = and i16 %193, 7
  %195 = icmp eq i16 %194, 2
  br i1 %195, label %208, label %196

196:                                              ; preds = %189
  %197 = and i16 %193, -8
  %198 = or i16 %197, 2
  store i16 %198, i16* %192, align 8
  %199 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %191, i64 0, i32 7
  %200 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %191, i64 0, i32 7, i32 1, i64 16
  %201 = bitcast i8* %200 to i32*
  %202 = bitcast %union.anon.1635* %199 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %202, i8 0, i64 40, i1 false) #16
  store i32 -1, i32* %201, align 4
  %203 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %191, i64 0, i32 7, i32 1, i64 20
  store i8 0, i8* %203, align 4
  %204 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %191, i64 0, i32 7, i32 1, i64 28
  store i8 0, i8* %204, align 4
  %205 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %191, i64 0, i32 7, i32 1, i64 29
  store i8 0, i8* %205, align 1
  %206 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %191, i64 0, i32 7, i32 1, i64 24
  %207 = bitcast i8* %206 to i32*
  store i32 %22, i32* %207, align 4
  br label %214

208:                                              ; preds = %189
  %209 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %191, i64 0, i32 7, i32 1, i64 20
  %210 = load i8, i8* %209, align 4, !range !2
  %211 = icmp eq i8 %210, 0
  %212 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %191, i64 0, i32 7, i32 1, i64 24
  %213 = bitcast i8* %212 to i32*
  store i32 %22, i32* %213, align 4
  br i1 %211, label %214, label %216

214:                                              ; preds = %208, %196
  %215 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %191, i64 0, i32 7, i32 1, i64 20
  store i8 1, i8* %215, align 4
  br label %216

216:                                              ; preds = %161, %208, %214
  %217 = phi i32 [ %190, %208 ], [ %190, %214 ], [ %166, %161 ]
  %218 = and i32 %217, 1
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %224, label %220

220:                                              ; preds = %216
  %221 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %16, i64 0, i32 0, i32 1, i32 0
  %222 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %221, align 8
  %223 = ptrtoint %"struct.blink::NGConstraintSpace::RareData"* %222 to i64
  br label %241

224:                                              ; preds = %216
  %225 = call noalias i8* @malloc(i64 88) #16
  %226 = bitcast %union.anon.1634* %35 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = getelementptr inbounds i8, i8* %225, i64 16
  %229 = bitcast i8* %228 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 4 %225, i8 0, i64 16, i1 false) #16
  store i64 %227, i64* %229, align 8
  %230 = getelementptr inbounds i8, i8* %225, i64 24
  %231 = bitcast i8* %230 to i32*
  store i32 -64, i32* %231, align 4
  %232 = getelementptr inbounds i8, i8* %225, i64 28
  %233 = bitcast i8* %232 to i32*
  store i32 0, i32* %233, align 4
  %234 = getelementptr inbounds i8, i8* %225, i64 32
  %235 = bitcast i8* %234 to i16*
  store i16 0, i16* %235, align 8
  %236 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %16, i64 0, i32 0, i32 1, i32 0
  %237 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %236 to i8**
  store i8* %225, i8** %237, align 8
  %238 = or i32 %217, 1
  store i32 %238, i32* %36, align 8
  %239 = bitcast i8* %225 to %"struct.blink::NGConstraintSpace::RareData"*
  %240 = ptrtoint i8* %225 to i64
  br label %241

241:                                              ; preds = %224, %220
  %242 = phi i64 [ %223, %220 ], [ %240, %224 ]
  %243 = phi %"struct.blink::NGConstraintSpace::RareData"* [ %222, %220 ], [ %239, %224 ]
  %244 = phi i32 [ %217, %220 ], [ %238, %224 ]
  %245 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %243, i64 0, i32 6
  %246 = load i16, i16* %245, align 8
  %247 = and i16 %246, 7
  %248 = icmp eq i16 %247, 2
  br i1 %248, label %259, label %249

249:                                              ; preds = %241
  %250 = and i16 %246, -8
  %251 = or i16 %250, 2
  store i16 %251, i16* %245, align 8
  %252 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %243, i64 0, i32 7
  %253 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %243, i64 0, i32 7, i32 1, i64 16
  %254 = bitcast i8* %253 to i32*
  %255 = bitcast %union.anon.1635* %252 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %255, i8 0, i64 40, i1 false) #16
  store i32 -1, i32* %254, align 4
  %256 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %243, i64 0, i32 7, i32 1, i64 20
  store i8 0, i8* %256, align 4
  %257 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %243, i64 0, i32 7, i32 1, i64 28
  store i8 0, i8* %257, align 4
  %258 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %243, i64 0, i32 7, i32 1, i64 29
  store i8 0, i8* %258, align 1
  br label %259

259:                                              ; preds = %241, %249
  %260 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %243, i64 0, i32 7, i32 1, i64 16
  %261 = bitcast i8* %260 to i32*
  store i32 %8, i32* %261, align 4
  br i1 %10, label %276, label %262

262:                                              ; preds = %259
  %263 = load i160, i160* %27, align 8
  %264 = and i160 %263, 15211807202738752817960438464512
  %265 = icmp eq i160 %264, 0
  %266 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %24, i64 0, i32 0, i32 5, i32 0, i32 0
  %267 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %266, align 8
  %268 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %267, i64 0, i32 3
  %269 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %267, i64 0, i32 8
  %270 = select i1 %265, %"class.blink::Length"* %268, %"class.blink::Length"* %269
  %271 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %270, i64 0, i32 2
  %272 = load i8, i8* %271, align 1
  %273 = icmp eq i8 %272, 0
  br i1 %273, label %274, label %276

274:                                              ; preds = %262
  %275 = icmp eq %"struct.blink::NGConstraintSpace::RareData"* %243, null
  br i1 %275, label %303, label %276

276:                                              ; preds = %262, %259, %274
  %277 = phi i16 [ 0, %274 ], [ 32, %262 ], [ 32, %259 ]
  %278 = and i32 %244, 1
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %280, label %295

280:                                              ; preds = %276
  %281 = call noalias i8* @malloc(i64 88) #16
  %282 = getelementptr inbounds i8, i8* %281, i64 16
  %283 = bitcast i8* %282 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 4 %281, i8 0, i64 16, i1 false) #16
  store i64 %242, i64* %283, align 8
  %284 = getelementptr inbounds i8, i8* %281, i64 24
  %285 = bitcast i8* %284 to i32*
  store i32 -64, i32* %285, align 4
  %286 = getelementptr inbounds i8, i8* %281, i64 28
  %287 = bitcast i8* %286 to i32*
  store i32 0, i32* %287, align 4
  %288 = getelementptr inbounds i8, i8* %281, i64 32
  %289 = bitcast i8* %288 to i16*
  store i16 0, i16* %289, align 8
  %290 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %16, i64 0, i32 0, i32 1, i32 0
  %291 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %290 to i8**
  store i8* %281, i8** %291, align 8
  %292 = or i32 %244, 1
  store i32 %292, i32* %36, align 8
  %293 = bitcast i8* %281 to %"struct.blink::NGConstraintSpace::RareData"*
  %294 = ptrtoint i8* %281 to i64
  br label %295

295:                                              ; preds = %276, %280
  %296 = phi i64 [ %294, %280 ], [ %242, %276 ]
  %297 = phi %"struct.blink::NGConstraintSpace::RareData"* [ %293, %280 ], [ %243, %276 ]
  %298 = phi i32 [ %292, %280 ], [ %244, %276 ]
  %299 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %297, i64 0, i32 6
  %300 = load i16, i16* %299, align 8
  %301 = and i16 %300, -33
  %302 = or i16 %301, %277
  store i16 %302, i16* %299, align 8
  br label %303

303:                                              ; preds = %274, %295
  %304 = phi i64 [ %242, %274 ], [ %296, %295 ]
  %305 = phi %"struct.blink::NGConstraintSpace::RareData"* [ %243, %274 ], [ %297, %295 ]
  %306 = phi i32 [ %244, %274 ], [ %298, %295 ]
  br i1 %11, label %307, label %345

307:                                              ; preds = %303
  %308 = and i32 %306, 1
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %310, label %325

310:                                              ; preds = %307
  %311 = call noalias i8* @malloc(i64 88) #16
  %312 = getelementptr inbounds i8, i8* %311, i64 16
  %313 = bitcast i8* %312 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 4 %311, i8 0, i64 16, i1 false) #16
  store i64 %304, i64* %313, align 8
  %314 = getelementptr inbounds i8, i8* %311, i64 24
  %315 = bitcast i8* %314 to i32*
  store i32 -64, i32* %315, align 4
  %316 = getelementptr inbounds i8, i8* %311, i64 28
  %317 = bitcast i8* %316 to i32*
  store i32 0, i32* %317, align 4
  %318 = getelementptr inbounds i8, i8* %311, i64 32
  %319 = bitcast i8* %318 to i16*
  store i16 0, i16* %319, align 8
  %320 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %16, i64 0, i32 0, i32 1, i32 0
  %321 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %320 to i8**
  store i8* %311, i8** %321, align 8
  %322 = or i32 %306, 1
  store i32 %322, i32* %36, align 8
  %323 = bitcast i8* %311 to %"struct.blink::NGConstraintSpace::RareData"*
  %324 = ptrtoint i8* %311 to i64
  br label %325

325:                                              ; preds = %307, %310
  %326 = phi i64 [ %324, %310 ], [ %304, %307 ]
  %327 = phi %"struct.blink::NGConstraintSpace::RareData"* [ %323, %310 ], [ %305, %307 ]
  %328 = phi i32 [ %322, %310 ], [ %306, %307 ]
  %329 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %327, i64 0, i32 6
  %330 = load i16, i16* %329, align 8
  %331 = and i16 %330, 7
  %332 = icmp eq i16 %331, 2
  br i1 %332, label %343, label %333

333:                                              ; preds = %325
  %334 = and i16 %330, -8
  %335 = or i16 %334, 2
  store i16 %335, i16* %329, align 8
  %336 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %327, i64 0, i32 7
  %337 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %327, i64 0, i32 7, i32 1, i64 16
  %338 = bitcast i8* %337 to i32*
  %339 = bitcast %union.anon.1635* %336 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %339, i8 0, i64 40, i1 false) #16
  store i32 -1, i32* %338, align 4
  %340 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %327, i64 0, i32 7, i32 1, i64 20
  store i8 0, i8* %340, align 4
  %341 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %327, i64 0, i32 7, i32 1, i64 28
  store i8 0, i8* %341, align 4
  %342 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %327, i64 0, i32 7, i32 1, i64 29
  store i8 0, i8* %342, align 1
  br label %343

343:                                              ; preds = %333, %325
  %344 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %327, i64 0, i32 7, i32 1, i64 28
  store i8 1, i8* %344, align 4
  br label %345

345:                                              ; preds = %303, %343
  %346 = phi i64 [ %304, %303 ], [ %326, %343 ]
  %347 = phi %"struct.blink::NGConstraintSpace::RareData"* [ %305, %303 ], [ %327, %343 ]
  %348 = phi i32 [ %306, %303 ], [ %328, %343 ]
  br i1 %12, label %349, label %387

349:                                              ; preds = %345
  %350 = and i32 %348, 1
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %352, label %367

352:                                              ; preds = %349
  %353 = call noalias i8* @malloc(i64 88) #16
  %354 = getelementptr inbounds i8, i8* %353, i64 16
  %355 = bitcast i8* %354 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 4 %353, i8 0, i64 16, i1 false) #16
  store i64 %346, i64* %355, align 8
  %356 = getelementptr inbounds i8, i8* %353, i64 24
  %357 = bitcast i8* %356 to i32*
  store i32 -64, i32* %357, align 4
  %358 = getelementptr inbounds i8, i8* %353, i64 28
  %359 = bitcast i8* %358 to i32*
  store i32 0, i32* %359, align 4
  %360 = getelementptr inbounds i8, i8* %353, i64 32
  %361 = bitcast i8* %360 to i16*
  store i16 0, i16* %361, align 8
  %362 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %16, i64 0, i32 0, i32 1, i32 0
  %363 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %362 to i8**
  store i8* %353, i8** %363, align 8
  %364 = or i32 %348, 1
  store i32 %364, i32* %36, align 8
  %365 = bitcast i8* %353 to %"struct.blink::NGConstraintSpace::RareData"*
  %366 = ptrtoint i8* %353 to i64
  br label %367

367:                                              ; preds = %349, %352
  %368 = phi i64 [ %366, %352 ], [ %346, %349 ]
  %369 = phi %"struct.blink::NGConstraintSpace::RareData"* [ %365, %352 ], [ %347, %349 ]
  %370 = phi i32 [ %364, %352 ], [ %348, %349 ]
  %371 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %369, i64 0, i32 6
  %372 = load i16, i16* %371, align 8
  %373 = and i16 %372, 7
  %374 = icmp eq i16 %373, 2
  br i1 %374, label %385, label %375

375:                                              ; preds = %367
  %376 = and i16 %372, -8
  %377 = or i16 %376, 2
  store i16 %377, i16* %371, align 8
  %378 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %369, i64 0, i32 7
  %379 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %369, i64 0, i32 7, i32 1, i64 16
  %380 = bitcast i8* %379 to i32*
  %381 = bitcast %union.anon.1635* %378 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %381, i8 0, i64 40, i1 false) #16
  store i32 -1, i32* %380, align 4
  %382 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %369, i64 0, i32 7, i32 1, i64 20
  store i8 0, i8* %382, align 4
  %383 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %369, i64 0, i32 7, i32 1, i64 28
  store i8 0, i8* %383, align 4
  %384 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %369, i64 0, i32 7, i32 1, i64 29
  store i8 0, i8* %384, align 1
  br label %385

385:                                              ; preds = %375, %367
  %386 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %369, i64 0, i32 7, i32 1, i64 29
  store i8 1, i8* %386, align 1
  br label %391

387:                                              ; preds = %345
  %388 = load i160, i160* %27, align 8
  %389 = and i160 %388, 83076749736557242056487941267521536
  %390 = icmp eq i160 %389, 0
  br i1 %390, label %396, label %391

391:                                              ; preds = %385, %387
  %392 = phi i64 [ %368, %385 ], [ %346, %387 ]
  %393 = phi %"struct.blink::NGConstraintSpace::RareData"* [ %369, %385 ], [ %347, %387 ]
  %394 = phi i32 [ %370, %385 ], [ %348, %387 ]
  %395 = icmp eq %"struct.blink::NGConstraintSpace::RareData"* %393, null
  br i1 %395, label %426, label %396

396:                                              ; preds = %391, %387
  %397 = phi i64 [ %392, %391 ], [ %346, %387 ]
  %398 = phi %"struct.blink::NGConstraintSpace::RareData"* [ %393, %391 ], [ %347, %387 ]
  %399 = phi i32 [ %394, %391 ], [ %348, %387 ]
  %400 = phi i16 [ 0, %391 ], [ 64, %387 ]
  %401 = and i32 %399, 1
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %403, label %418

403:                                              ; preds = %396
  %404 = call noalias i8* @malloc(i64 88) #16
  %405 = getelementptr inbounds i8, i8* %404, i64 16
  %406 = bitcast i8* %405 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 4 %404, i8 0, i64 16, i1 false) #16
  store i64 %397, i64* %406, align 8
  %407 = getelementptr inbounds i8, i8* %404, i64 24
  %408 = bitcast i8* %407 to i32*
  store i32 -64, i32* %408, align 4
  %409 = getelementptr inbounds i8, i8* %404, i64 28
  %410 = bitcast i8* %409 to i32*
  store i32 0, i32* %410, align 4
  %411 = getelementptr inbounds i8, i8* %404, i64 32
  %412 = bitcast i8* %411 to i16*
  store i16 0, i16* %412, align 8
  %413 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %16, i64 0, i32 0, i32 1, i32 0
  %414 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %413 to i8**
  store i8* %404, i8** %414, align 8
  %415 = or i32 %399, 1
  store i32 %415, i32* %36, align 8
  %416 = bitcast i8* %404 to %"struct.blink::NGConstraintSpace::RareData"*
  %417 = ptrtoint i8* %404 to i64
  br label %418

418:                                              ; preds = %396, %403
  %419 = phi i64 [ %417, %403 ], [ %397, %396 ]
  %420 = phi i32 [ %415, %403 ], [ %399, %396 ]
  %421 = phi %"struct.blink::NGConstraintSpace::RareData"* [ %416, %403 ], [ %398, %396 ]
  %422 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %421, i64 0, i32 6
  %423 = load i16, i16* %422, align 8
  %424 = and i16 %423, -65
  %425 = or i16 %424, %400
  store i16 %425, i16* %422, align 8
  br label %426

426:                                              ; preds = %391, %418
  %427 = phi i64 [ %392, %391 ], [ %419, %418 ]
  %428 = phi i32 [ %394, %391 ], [ %420, %418 ]
  %429 = shl i32 %13, 16
  %430 = and i32 %429, 65536
  %431 = and i32 %428, -65537
  %432 = or i32 %431, %430
  store i32 %432, i32* %36, align 8
  %433 = bitcast %"class.blink::NGConstraintSpace"* %0 to i64*
  %434 = load i64, i64* %69, align 8, !noalias !5
  store i64 %434, i64* %433, align 8, !alias.scope !5
  %435 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 2
  %436 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %16, i64 0, i32 0, i32 2
  %437 = getelementptr inbounds %"class.blink::NGExclusionSpace", %"class.blink::NGExclusionSpace"* %436, i64 0, i32 0, i32 0, i32 0, i32 0
  %438 = bitcast %"class.blink::NGExclusionSpace"* %436 to i64*
  %439 = load i64, i64* %438, align 8, !noalias !5
  store %"class.blink::NGExclusionSpaceInternal"* null, %"class.blink::NGExclusionSpaceInternal"** %437, align 8, !noalias !5
  %440 = bitcast %"class.blink::NGExclusionSpace"* %435 to i64*
  store i64 %439, i64* %440, align 8, !alias.scope !5
  %441 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  store i32 %432, i32* %441, align 8, !alias.scope !5
  %442 = and i32 %428, 1
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %448, label %444

444:                                              ; preds = %426
  %445 = getelementptr inbounds %union.anon.1634, %union.anon.1634* %35, i64 0, i32 0
  %446 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1
  %447 = bitcast %union.anon.1634* %446 to i64*
  store i64 %427, i64* %447, align 8, !alias.scope !5
  store %"struct.blink::NGConstraintSpace::RareData"* null, %"struct.blink::NGConstraintSpace::RareData"** %445, align 8, !noalias !5
  br label %451

448:                                              ; preds = %426
  %449 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1
  %450 = bitcast %union.anon.1634* %449 to i64*
  store i64 %427, i64* %450, align 8, !alias.scope !5
  br label %451

451:                                              ; preds = %444, %448
  %452 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %16, i64 0, i32 0
  call void @_ZN5blink17NGConstraintSpaceD2Ev(%"class.blink::NGConstraintSpace"* nonnull %452) #16
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %25) #16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i64 @_ZNK5blink17NGLayoutInputNode26InitialContainingBlockSizeEv(%"class.blink::NGLayoutInputNode"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink24NGConstraintSpaceBuilder27SetPercentageResolutionSizeENS_11LogicalSizeE(%"class.blink::NGConstraintSpaceBuilder"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink21NGTableAlgorithmUtils37ComputeMaximumNonMergeableColumnCountERKN3WTF6VectorINS_11NGBlockNodeELj0ENS1_18PartitionAllocatorEEEb(%"class.WTF::Vector.1867"* nocapture readonly dereferenceable(16), i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder", align 8
  %4 = tail call i8* @_Znwm(i64 24) #17
  %5 = bitcast i8* %4 to i32*
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #16
  %7 = atomicrmw add i32* %5, i32 1 monotonic
  %8 = bitcast %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast ({ %"class.base::RefCountedData.1873"*, i8, [3 x i8], { { { { i8, [3 x i8], { { { { { { i8, [3 x i8], %union.anon.1640 } } } }, { { { { i8, [3 x i8], %union.anon.1640 } } } }, { { { { i8, [3 x i8], %union.anon.40 } } } }, %"class.blink::LayoutUnit", i8, i8, i8, i8 } } } } } } }* @__const._ZN5blink12_GLOBAL__N_131ComputeColumnElementConstraintsERKN3WTF6VectorINS_11NGBlockNodeELj0ENS1_18PartitionAllocatorEEEbPN4base14RefCountedDataINS2_INS_12NGTableTypes6ColumnELj0ES4_EEEE.constraints_builder to i8*), i64 16, i1 false)
  %9 = zext i1 %1 to i8
  %10 = bitcast %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"* %3 to i8**
  store i8* %4, i8** %10, align 8
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder", %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"* %3, i64 0, i32 1
  store i8 %9, i8* %11, align 8
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder", %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %12, align 4
  %13 = getelementptr inbounds %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder", %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 32, i1 false) #16
  call fastcc void @_ZN5blink24VisitLayoutNGTableColumnINS_12_GLOBAL__N_124ColumnConstraintsBuilderEEEvRKN3WTF6VectorINS_11NGBlockNodeELj0ENS3_18PartitionAllocatorEEEjPT_(%"class.WTF::Vector.1867"* dereferenceable(16) %0, %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"* nonnull %3)
  %14 = bitcast i8* %6 to %"class.WTF::Vector.1875"*
  %15 = getelementptr inbounds i8, i8* %4, i64 20
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %34, label %19

19:                                               ; preds = %2, %23
  %20 = phi i32 [ %21, %23 ], [ %17, %2 ]
  %21 = add i32 %20, -1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = call dereferenceable(32) %"struct.blink::NGTableTypes::Column"* @_ZN3WTF6VectorIN5blink12NGTableTypes6ColumnELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1875"* %14, i32 %21) #16
  %25 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %24, i64 0, i32 7
  %26 = load i8, i8* %25, align 1, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %33, label %19

28:                                               ; preds = %19
  %29 = call dereferenceable(32) %"struct.blink::NGTableTypes::Column"* @_ZN3WTF6VectorIN5blink12NGTableTypes6ColumnELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1875"* %14, i32 0) #16
  %30 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %29, i64 0, i32 7
  %31 = load i8, i8* %30, align 1, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %23, %28
  br label %34

34:                                               ; preds = %2, %28, %33
  %35 = phi i32 [ 0, %2 ], [ %20, %33 ], [ 0, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #16
  %36 = atomicrmw sub i32* %5, i32 1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %49

38:                                               ; preds = %34
  %39 = bitcast i8* %6 to %"struct.blink::NGTableTypes::Column"**
  %40 = load %"struct.blink::NGTableTypes::Column"*, %"struct.blink::NGTableTypes::Column"** %39, align 8
  %41 = icmp eq %"struct.blink::NGTableTypes::Column"* %40, null
  br i1 %41, label %48, label %42, !prof !3

42:                                               ; preds = %38
  %43 = load i32, i32* %16, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %46, label %45, !prof !4

45:                                               ; preds = %42
  store i32 0, i32* %16, align 4
  br label %46

46:                                               ; preds = %45, %42
  %47 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %47) #16
  br label %48

48:                                               ; preds = %46, %38
  call void @_ZdlPv(i8* nonnull %4) #17
  br label %49

49:                                               ; preds = %34, %48
  ret i32 %35
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink24VisitLayoutNGTableColumnINS_12_GLOBAL__N_124ColumnConstraintsBuilderEEEvRKN3WTF6VectorINS_11NGBlockNodeELj0ENS3_18PartitionAllocatorEEEjPT_(%"class.WTF::Vector.1867"* nocapture readonly dereferenceable(16), %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"*) unnamed_addr #0 {
  %3 = alloca %"struct.blink::NGTableTypes::Column", align 4
  %4 = alloca i32, align 4
  %5 = alloca %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %class.anon.2073, align 8
  %8 = alloca %"class.blink::NGBlockNode", align 8
  store i32 -1, i32* %4, align 4
  store %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"* %1, %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"** %5, align 8
  %9 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #16
  store i32 0, i32* %6, align 4
  %10 = bitcast %class.anon.2073* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #16
  %11 = getelementptr inbounds %class.anon.2073, %class.anon.2073* %7, i64 0, i32 0
  %12 = getelementptr inbounds %class.anon.2073, %class.anon.2073* %7, i64 0, i32 1
  %13 = getelementptr inbounds %class.anon.2073, %class.anon.2073* %7, i64 0, i32 2
  store i32* %4, i32** %11, align 8
  store i32* %6, i32** %12, align 8
  store %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"** %5, %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"*** %13, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.1867", %"class.WTF::Vector.1867"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::NGBlockNode"*, %"class.blink::NGBlockNode"** %14, align 8
  %16 = getelementptr inbounds %"class.WTF::Vector.1867", %"class.WTF::Vector.1867"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %15, i64 %18
  %20 = icmp eq i32 %17, 0
  br i1 %20, label %129, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.blink::NGBlockNode"* %8 to i8*
  %24 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %8, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %8, i64 0, i32 0, i32 1
  %26 = bitcast i8* %25 to i64*
  %27 = bitcast %"class.blink::NGBlockNode"* %8 to i8*
  br label %28

28:                                               ; preds = %21, %125
  %29 = phi %"class.blink::NGBlockNode"* [ %15, %21 ], [ %123, %125 ]
  %30 = bitcast %"class.blink::NGBlockNode"* %29 to %"class.blink::NGLayoutInputNode"*
  %31 = bitcast %"class.blink::NGBlockNode"* %29 to %"class.blink::LayoutObject"**
  %32 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %32, i64 0, i32 5, i32 0
  %34 = bitcast %"class.blink::ComputedStyle"** %33 to %"class.blink::ComputedStyleBase"**
  %35 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %35, i64 0, i32 9
  %37 = bitcast [20 x i8]* %36 to i160*
  %38 = load i160, i160* %37, align 8
  %39 = and i160 %38, 133143986176
  %40 = icmp eq i160 %39, 47244640256
  br i1 %40, label %41, label %43

41:                                               ; preds = %28
  %42 = call fastcc i32 @_ZZN5blink24VisitLayoutNGTableColumnINS_12_GLOBAL__N_124ColumnConstraintsBuilderEEEvRKN3WTF6VectorINS_11NGBlockNodeELj0ENS3_18PartitionAllocatorEEEjPT_ENKUlRKS5_E_clESD_(%class.anon.2073* nonnull %7, %"class.blink::NGBlockNode"* dereferenceable(16) %29)
  br label %122

43:                                               ; preds = %28
  %44 = bitcast %"class.blink::ComputedStyleBase"* %35 to %"class.blink::ComputedStyle"*
  %45 = load %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"*, %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"** %5, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #16
  %46 = getelementptr inbounds %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder", %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"* %45, i64 0, i32 1
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp ne i8 %47, 0
  call void @_ZN5blink12NGTableTypes12CreateColumnERKNS_13ComputedStyleEN4absl8optionalINS_10LayoutUnitEEEb(%"struct.blink::NGTableTypes::Column"* nonnull sret %3, %"class.blink::ComputedStyle"* dereferenceable(104) %44, i64 0, i1 zeroext %48) #16
  %49 = getelementptr inbounds %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder", %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %50 = load i8, i8* %49, align 4, !range !2
  %51 = icmp eq i8 %50, 0
  %52 = getelementptr inbounds %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder", %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* nonnull align 4 %22, i64 32, i1 false) #16
  br i1 %51, label %53, label %54

53:                                               ; preds = %43
  store i8 1, i8* %49, align 4
  br label %54

54:                                               ; preds = %43, %53
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false)
  %55 = call { %"class.blink::LayoutBox"*, i64 } @_ZNK5blink11NGBlockNode10FirstChildEv(%"class.blink::NGBlockNode"* %29) #16
  %56 = extractvalue { %"class.blink::LayoutBox"*, i64 } %55, 0
  %57 = extractvalue { %"class.blink::LayoutBox"*, i64 } %55, 1
  store %"class.blink::LayoutBox"* %56, %"class.blink::LayoutBox"** %24, align 8
  store i64 %57, i64* %26, align 8
  %58 = icmp ne %"class.blink::LayoutBox"* %56, null
  br i1 %58, label %59, label %72

59:                                               ; preds = %54, %66
  %60 = phi i32 [ %62, %66 ], [ 0, %54 ]
  %61 = call fastcc i32 @_ZZN5blink24VisitLayoutNGTableColumnINS_12_GLOBAL__N_124ColumnConstraintsBuilderEEEvRKN3WTF6VectorINS_11NGBlockNodeELj0ENS3_18PartitionAllocatorEEEjPT_ENKUlRKS5_E_clESD_(%class.anon.2073* nonnull %7, %"class.blink::NGBlockNode"* nonnull dereferenceable(16) %8)
  %62 = add i32 %61, %60
  %63 = load i32, i32* %6, align 4
  %64 = load i32, i32* %4, align 4
  %65 = icmp ult i32 %63, %64
  br i1 %65, label %66, label %80

66:                                               ; preds = %59
  %67 = call { %"class.blink::LayoutBox"*, i64 } @_ZNK5blink11NGBlockNode11NextSiblingEv(%"class.blink::NGBlockNode"* nonnull %8) #16
  %68 = extractvalue { %"class.blink::LayoutBox"*, i64 } %67, 0
  %69 = extractvalue { %"class.blink::LayoutBox"*, i64 } %67, 1
  store %"class.blink::LayoutBox"* %68, %"class.blink::LayoutBox"** %24, align 8
  %70 = trunc i64 %69 to i8
  store i8 %70, i8* %25, align 8
  %71 = icmp eq %"class.blink::LayoutBox"* %68, null
  br i1 %71, label %80, label %59

72:                                               ; preds = %54
  %73 = call i32 @_ZNK5blink17NGLayoutInputNode15TableColumnSpanEv(%"class.blink::NGLayoutInputNode"* %30) #16
  %74 = load i32, i32* %4, align 4
  %75 = load i32, i32* %6, align 4
  %76 = sub i32 %74, %75
  %77 = icmp ult i32 %76, %73
  %78 = select i1 %77, i32 %76, i32 %73
  %79 = add i32 %78, %75
  store i32 %79, i32* %6, align 4
  br label %80

80:                                               ; preds = %59, %66, %72
  %81 = phi i32 [ %78, %72 ], [ %62, %66 ], [ %62, %59 ]
  %82 = load %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"*, %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"** %5, align 8
  %83 = xor i1 %58, true
  %84 = icmp ne i32 %81, 0
  %85 = and i1 %84, %83
  br i1 %85, label %86, label %115

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder", %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"* %82, i64 0, i32 0
  %88 = getelementptr inbounds %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder", %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder", %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %90 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %91

91:                                               ; preds = %112, %86
  %92 = phi i32 [ 0, %86 ], [ %113, %112 ]
  %93 = load %"class.base::RefCountedData.1873"*, %"class.base::RefCountedData.1873"** %87, align 8
  %94 = getelementptr inbounds %"class.base::RefCountedData.1873", %"class.base::RefCountedData.1873"* %93, i64 0, i32 1
  %95 = load i8, i8* %88, align 4, !range !2
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %97, label %98, !prof !4

97:                                               ; preds = %91
  call void @llvm.trap() #16
  unreachable

98:                                               ; preds = %91
  %99 = getelementptr inbounds %"class.base::RefCountedData.1873", %"class.base::RefCountedData.1873"* %93, i64 0, i32 1, i32 0, i32 0, i32 2
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.base::RefCountedData.1873", %"class.base::RefCountedData.1873"* %93, i64 0, i32 1, i32 0, i32 0, i32 1
  %102 = load i32, i32* %101, align 8
  %103 = icmp eq i32 %100, %102
  br i1 %103, label %111, label %104, !prof !4

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"class.WTF::Vector.1875", %"class.WTF::Vector.1875"* %94, i64 0, i32 0, i32 0, i32 0
  %106 = load %"struct.blink::NGTableTypes::Column"*, %"struct.blink::NGTableTypes::Column"** %105, align 8
  %107 = zext i32 %100 to i64
  %108 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %106, i64 %107, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %90, i64 32, i1 false) #16
  %109 = load i32, i32* %99, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %99, align 4
  br label %112

111:                                              ; preds = %98
  call void @_ZN3WTF6VectorIN5blink12NGTableTypes6ColumnELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.1875"* %94, %"struct.blink::NGTableTypes::Column"* dereferenceable(32) %89) #16
  br label %112

112:                                              ; preds = %111, %104
  %113 = add nuw i32 %92, 1
  %114 = icmp eq i32 %113, %81
  br i1 %114, label %115, label %91

115:                                              ; preds = %112, %80
  %116 = getelementptr inbounds %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder", %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %116, align 4
  %117 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %29, i64 0, i32 0, i32 0
  %118 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %118, i64 0, i32 0, i32 0
  call void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"* %119) #16
  %120 = bitcast %"class.blink::NGBlockNode"* %29 to %"class.blink::LayoutNGTableColumn"**
  %121 = load %"class.blink::LayoutNGTableColumn"*, %"class.blink::LayoutNGTableColumn"** %120, align 8
  call void @_ZNK5blink19LayoutNGTableColumn27ClearNeedsLayoutForChildrenEv(%"class.blink::LayoutNGTableColumn"* %121) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #16
  br label %122

122:                                              ; preds = %41, %115
  %123 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %29, i64 1
  %124 = icmp eq %"class.blink::NGBlockNode"* %123, %19
  br i1 %124, label %129, label %125

125:                                              ; preds = %122
  %126 = load i32, i32* %6, align 4
  %127 = load i32, i32* %4, align 4
  %128 = icmp ult i32 %126, %127
  br i1 %128, label %28, label %129

129:                                              ; preds = %122, %125, %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::RefCountedData.1873"* @_ZN5blink21NGTableAlgorithmUtils24ComputeColumnConstraintsERKNS_11NGBlockNodeERKNS_22NGTableGroupedChildrenERKNS_14NGTableBordersERKNS_10NGBoxStrutE(%"class.blink::NGBlockNode"* nocapture readonly dereferenceable(16), %"struct.blink::NGTableGroupedChildren"* dereferenceable(80), %"class.blink::NGTableBorders"* dereferenceable(80), %"struct.blink::NGBoxStrut"* nocapture readnone dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.anon.2027, align 1
  %6 = alloca %"struct.blink::NGTableTypes::Column", align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder", align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckOpResult", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = alloca %"class.blink::NGColspanCellTabulator", align 8
  %14 = alloca %"class.blink::NGBlockNode", align 8
  %15 = alloca %"class.blink::NGBlockNode", align 8
  %16 = alloca { i64, i64 }, align 8
  %17 = alloca { i64, i64 }, align 8
  %18 = alloca %"struct.blink::NGTableTypes::CellInlineConstraint", align 4
  %19 = alloca %"class.WTF::Vector.1902", align 8
  %20 = alloca %"class.WTF::Vector.1912", align 8
  %21 = alloca %"class.blink::NGTableGroupedChildrenIterator", align 8
  %22 = alloca %"class.blink::NGTableGroupedChildrenIterator", align 8
  %23 = alloca { %"class.blink::LayoutBox"*, i64 }, align 8
  %24 = bitcast { %"class.blink::LayoutBox"*, i64 }* %23 to %"class.blink::NGBlockNode"*
  %25 = bitcast %"class.blink::NGBlockNode"* %0 to %"class.blink::LayoutObject"**
  %26 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %26, i64 0, i32 5, i32 0
  %28 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %28, i64 0, i32 0, i32 9
  %30 = bitcast [20 x i8]* %29 to i160*
  %31 = load i160, i160* %30, align 8
  %32 = and i160 %31, 45671926166590716193865151022383844364247891968
  %33 = icmp eq i160 %32, 0
  br i1 %33, label %50, label %34

34:                                               ; preds = %4
  %35 = and i160 %31, 15211807202738752817960438464512
  %36 = icmp eq i160 %35, 0
  %37 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %28, i64 0, i32 0, i32 5, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %38, i64 0, i32 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %38, i64 0, i32 3
  %41 = select i1 %36, %"class.blink::Length"* %39, %"class.blink::Length"* %40
  %42 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %41, i64 0, i32 2
  %43 = load i8, i8* %42, align 1
  %44 = add i8 %43, -1
  %45 = icmp ult i8 %44, 8
  br i1 %45, label %46, label %50

46:                                               ; preds = %34
  %47 = lshr i8 -57, %44
  %48 = and i8 %47, 1
  %49 = icmp ne i8 %48, 0
  br label %50

50:                                               ; preds = %34, %46, %4
  %51 = phi i1 [ false, %4 ], [ %49, %46 ], [ false, %34 ]
  %52 = lshr i160 %31, 102
  %53 = trunc i160 %52 to i8
  %54 = and i8 %53, 3
  %55 = and i160 %31, 81129638414606681695789005144064
  %56 = icmp eq i160 %55, 0
  br i1 %56, label %64, label %57

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %59, i64 0, i32 6
  %61 = load i16, i16* %60, align 4
  %62 = sext i16 %61 to i32
  %63 = shl nsw i32 %62, 6
  br label %64

64:                                               ; preds = %50, %57
  %65 = phi i32 [ %63, %57 ], [ 0, %50 ]
  %66 = bitcast %"class.WTF::Vector.1902"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #16
  %67 = getelementptr inbounds %"class.WTF::Vector.1902", %"class.WTF::Vector.1902"* %19, i64 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.WTF::Vector.1902", %"class.WTF::Vector.1902"* %19, i64 0, i32 0, i32 0, i32 1
  %69 = getelementptr inbounds %"class.WTF::Vector.1902", %"class.WTF::Vector.1902"* %19, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 16, i1 false) #16
  %70 = bitcast %"class.WTF::Vector.1912"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #16
  %71 = getelementptr inbounds %"class.WTF::Vector.1912", %"class.WTF::Vector.1912"* %20, i64 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.WTF::Vector.1912", %"class.WTF::Vector.1912"* %20, i64 0, i32 0, i32 0, i32 1
  %73 = getelementptr inbounds %"class.WTF::Vector.1912", %"class.WTF::Vector.1912"* %20, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 0, i64 16, i1 false) #16
  %74 = tail call i8* @_Znwm(i64 24) #17
  %75 = bitcast i8* %74 to %"class.base::RefCountedData.1873"*
  %76 = bitcast i8* %74 to i32*
  store i32 0, i32* %76, align 4
  %77 = getelementptr inbounds i8, i8* %74, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 16, i1 false) #16
  %78 = atomicrmw add i32* %76, i32 1 monotonic
  %79 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %1, i64 0, i32 1
  %80 = bitcast %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %80) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %80, i8* align 8 bitcast ({ %"class.base::RefCountedData.1873"*, i8, [3 x i8], { { { { i8, [3 x i8], { { { { { { i8, [3 x i8], %union.anon.1640 } } } }, { { { { i8, [3 x i8], %union.anon.1640 } } } }, { { { { i8, [3 x i8], %union.anon.40 } } } }, %"class.blink::LayoutUnit", i8, i8, i8, i8 } } } } } } }* @__const._ZN5blink12_GLOBAL__N_131ComputeColumnElementConstraintsERKN3WTF6VectorINS_11NGBlockNodeELj0ENS1_18PartitionAllocatorEEEbPN4base14RefCountedDataINS2_INS_12NGTableTypes6ColumnELj0ES4_EEEE.constraints_builder to i8*), i64 16, i1 false) #16
  %81 = zext i1 %51 to i8
  %82 = bitcast %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"* %9 to i8**
  store i8* %74, i8** %82, align 8
  %83 = getelementptr inbounds %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder", %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"* %9, i64 0, i32 1
  store i8 %81, i8* %83, align 8
  %84 = getelementptr inbounds %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder", %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %84, align 4
  %85 = getelementptr inbounds %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder", %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 4 %85, i8 0, i64 32, i1 false) #16
  call fastcc void @_ZN5blink24VisitLayoutNGTableColumnINS_12_GLOBAL__N_124ColumnConstraintsBuilderEEEvRKN3WTF6VectorINS_11NGBlockNodeELj0ENS3_18PartitionAllocatorEEEjPT_(%"class.WTF::Vector.1867"* dereferenceable(16) %79, %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %80) #16
  %86 = bitcast %"class.blink::NGTableGroupedChildrenIterator"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #16
  %87 = bitcast %"class.blink::NGTableGroupedChildrenIterator"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink22NGTableGroupedChildren5beginEv(%"class.blink::NGTableGroupedChildrenIterator"* nonnull sret %21, %"struct.blink::NGTableGroupedChildren"* %1) #16
  %88 = bitcast %"class.blink::NGTableGroupedChildrenIterator"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #16
  %89 = bitcast %"class.blink::NGTableGroupedChildrenIterator"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink22NGTableGroupedChildren3endEv(%"class.blink::NGTableGroupedChildrenIterator"* nonnull sret %22, %"struct.blink::NGTableGroupedChildren"* %1) #16
  %90 = call zeroext i1 @_ZNK5blink30NGTableGroupedChildrenIteratorneERKS0_(%"class.blink::NGTableGroupedChildrenIterator"* nonnull %21, %"class.blink::NGTableGroupedChildrenIterator"* nonnull dereferenceable(24) %22) #16
  br i1 %90, label %91, label %132

91:                                               ; preds = %64
  %92 = bitcast { %"class.blink::LayoutBox"*, i64 }* %23 to i8*
  %93 = getelementptr inbounds { %"class.blink::LayoutBox"*, i64 }, { %"class.blink::LayoutBox"*, i64 }* %23, i64 0, i32 0
  %94 = getelementptr inbounds { %"class.blink::LayoutBox"*, i64 }, { %"class.blink::LayoutBox"*, i64 }* %23, i64 0, i32 1
  %95 = bitcast { %"class.blink::LayoutBox"*, i64 }* %23 to %"class.blink::NGLayoutInputNode"*
  %96 = bitcast { i64, i64 }* %16 to %"struct.blink::NGBoxStrut"*
  %97 = bitcast { i64, i64 }* %17 to %"struct.blink::NGBoxStrut"*
  %98 = bitcast { %"class.blink::LayoutBox"*, i64 }* %23 to %"class.blink::LayoutObject"**
  %99 = bitcast %"class.blink::NGColspanCellTabulator"* %13 to i8*
  %100 = bitcast %"class.blink::NGColspanCellTabulator"* %13 to i64*
  %101 = getelementptr inbounds %"class.blink::NGColspanCellTabulator", %"class.blink::NGColspanCellTabulator"* %13, i64 0, i32 0
  %102 = getelementptr inbounds %"class.blink::NGColspanCellTabulator", %"class.blink::NGColspanCellTabulator"* %13, i64 0, i32 1
  %103 = bitcast %"class.WTF::Vector.1942"* %102 to i8*
  %104 = bitcast %"class.blink::NGBlockNode"* %14 to i8*
  %105 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %14, i64 0, i32 0, i32 0
  %106 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %14, i64 0, i32 0, i32 1
  %107 = bitcast i8* %106 to i64*
  %108 = bitcast %"class.blink::NGBlockNode"* %15 to i8*
  %109 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %15, i64 0, i32 0, i32 0
  %110 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %15, i64 0, i32 0, i32 1
  %111 = bitcast i8* %110 to i64*
  %112 = bitcast %"class.blink::NGBlockNode"* %15 to %"class.blink::NGLayoutInputNode"*
  %113 = getelementptr inbounds %"class.blink::NGColspanCellTabulator", %"class.blink::NGColspanCellTabulator"* %13, i64 0, i32 1, i32 0, i32 0, i32 0
  %114 = getelementptr inbounds %"class.blink::NGColspanCellTabulator", %"class.blink::NGColspanCellTabulator"* %13, i64 0, i32 1, i32 0, i32 0, i32 2
  %115 = bitcast %"class.WTF::Vector.1902"* %19 to i64*
  %116 = bitcast { i64, i64 }* %16 to i8*
  %117 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i64 0, i32 1
  %118 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i64 0, i32 0
  %119 = bitcast { i64, i64 }* %17 to i8*
  %120 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i64 0, i32 1
  %121 = bitcast %"class.blink::NGBlockNode"* %15 to %"class.blink::LayoutObject"**
  %122 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i64 0, i32 0
  %123 = bitcast %"struct.blink::NGTableTypes::CellInlineConstraint"* %18 to i8*
  %124 = bitcast %"class.WTF::Vector.1912"* %20 to i8**
  %125 = bitcast %"class.WTF::Vector.1912"* %20 to i64*
  %126 = bitcast %"class.logging::CheckOpResult"* %11 to i8*
  %127 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %11, i64 0, i32 0
  %128 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  %129 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  %130 = bitcast %"class.logging::CheckError"* %12 to i8*
  %131 = getelementptr inbounds %"class.WTF::Vector.1942", %"class.WTF::Vector.1942"* %102, i64 0, i32 0, i32 0, i32 0
  br label %427

132:                                              ; preds = %705, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #16
  %133 = bitcast i8* %77 to %"class.WTF::Vector.1875"*
  %134 = getelementptr inbounds i8, i8* %74, i64 20
  %135 = bitcast i8* %134 to i32*
  %136 = load i32, i32* %135, align 4
  %137 = load i32, i32* %69, align 4
  %138 = icmp ugt i32 %137, %136
  br i1 %138, label %139, label %172

139:                                              ; preds = %132
  %140 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %140) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %140, i8* align 4 getelementptr inbounds ({ { { { { i8, [3 x i8], %union.anon.1640 } } } }, { { { { i8, [3 x i8], %union.anon.1640 } } } }, { { { { i8, [3 x i8], %union.anon.40 } } } }, %"class.blink::LayoutUnit", i8, i8, i8, i8 }, { { { { { i8, [3 x i8], %union.anon.1640 } } } }, { { { { i8, [3 x i8], %union.anon.1640 } } } }, { { { { i8, [3 x i8], %union.anon.40 } } } }, %"class.blink::LayoutUnit", i8, i8, i8, i8 }* @__const._ZN5blink12_GLOBAL__N_124ColumnConstraintsBuilder8VisitColERKNS_17NGLayoutInputNodeEjj.col_constraint, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 24, i1 false) #16
  store i8 0, i8* %140, align 4
  %141 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %141, align 4
  %142 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %142, align 4
  %143 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %6, i64 0, i32 3, i32 0
  %144 = bitcast i32* %143 to i64*
  store i64 0, i64* %144, align 4
  %145 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %6, i64 0, i32 6
  store i8 %81, i8* %145, align 2
  %146 = xor i1 %51, true
  %147 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %6, i64 0, i32 7
  %148 = zext i1 %146 to i8
  store i8 %148, i8* %147, align 1
  %149 = sub i32 %137, %136
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %155, label %151

151:                                              ; preds = %139
  %152 = getelementptr inbounds i8, i8* %74, i64 16
  %153 = bitcast i8* %152 to i32*
  %154 = bitcast i8* %77 to %"struct.blink::NGTableTypes::Column"**
  br label %156

155:                                              ; preds = %167, %139
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %140) #16
  br label %245

156:                                              ; preds = %170, %151
  %157 = phi i32 [ %136, %151 ], [ %171, %170 ]
  %158 = phi i32 [ 0, %151 ], [ %168, %170 ]
  %159 = load i32, i32* %153, align 8
  %160 = icmp eq i32 %157, %159
  br i1 %160, label %166, label %161, !prof !4

161:                                              ; preds = %156
  %162 = load %"struct.blink::NGTableTypes::Column"*, %"struct.blink::NGTableTypes::Column"** %154, align 8
  %163 = zext i32 %157 to i64
  %164 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %162, i64 %163, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %164, i8* nonnull align 4 %140, i64 32, i1 false) #16
  %165 = add i32 %157, 1
  store i32 %165, i32* %135, align 4
  br label %167

166:                                              ; preds = %156
  call void @_ZN3WTF6VectorIN5blink12NGTableTypes6ColumnELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.1875"* %133, %"struct.blink::NGTableTypes::Column"* nonnull dereferenceable(32) %6) #16
  br label %167

167:                                              ; preds = %166, %161
  %168 = add nuw i32 %158, 1
  %169 = icmp eq i32 %168, %149
  br i1 %169, label %155, label %170

170:                                              ; preds = %167
  %171 = load i32, i32* %135, align 4
  br label %156

172:                                              ; preds = %132
  %173 = icmp ult i32 %137, %136
  br i1 %173, label %174, label %245

174:                                              ; preds = %172, %181
  %175 = phi i32 [ %176, %181 ], [ %136, %172 ]
  %176 = add i32 %175, -1
  %177 = call dereferenceable(32) %"struct.blink::NGTableTypes::Column"* @_ZN3WTF6VectorIN5blink12NGTableTypes6ColumnELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1875"* %133, i32 %176) #16
  %178 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %177, i64 0, i32 7
  %179 = load i8, i8* %178, align 1, !range !2
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %184, label %181

181:                                              ; preds = %174
  %182 = load i32, i32* %69, align 4
  %183 = icmp ugt i32 %176, %182
  br i1 %183, label %174, label %184

184:                                              ; preds = %181, %174
  %185 = phi i32 [ %175, %174 ], [ %176, %181 ]
  %186 = load i32, i32* %135, align 4
  %187 = icmp ult i32 %186, %185
  br i1 %187, label %188, label %244

188:                                              ; preds = %184
  %189 = getelementptr inbounds i8, i8* %74, i64 16
  %190 = bitcast i8* %189 to i32*
  %191 = load i32, i32* %190, align 8
  %192 = icmp ult i32 %191, %185
  br i1 %192, label %193, label %232

193:                                              ; preds = %188
  %194 = lshr i32 %191, 2
  %195 = add nuw i32 %191, 1
  %196 = add i32 %195, %194
  %197 = icmp ugt i32 %196, 4
  %198 = select i1 %197, i32 %196, i32 4
  %199 = icmp ugt i32 %198, %185
  %200 = select i1 %199, i32 %198, i32 %185
  %201 = icmp ult i32 %191, %200
  br i1 %201, label %202, label %232, !prof !3

202:                                              ; preds = %193
  %203 = bitcast i8* %77 to %"struct.blink::NGTableTypes::Column"**
  %204 = load %"struct.blink::NGTableTypes::Column"*, %"struct.blink::NGTableTypes::Column"** %203, align 8
  %205 = icmp eq %"struct.blink::NGTableTypes::Column"* %204, null
  %206 = zext i32 %200 to i64
  %207 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGTableTypes6ColumnEEEmm(i64 %206) #16
  %208 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %207, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12NGTableTypes6ColumnEEEPKcv, i64 0, i64 0)) #16
  br i1 %205, label %209, label %214

209:                                              ; preds = %202
  %210 = ptrtoint i8* %208 to i64
  %211 = bitcast i8* %77 to i64*
  store atomic i64 %210, i64* %211 monotonic, align 8
  %212 = lshr i64 %207, 5
  %213 = trunc i64 %212 to i32
  store i32 %213, i32* %190, align 8
  br label %232

214:                                              ; preds = %202
  %215 = lshr i64 %207, 5
  %216 = ptrtoint i8* %208 to i64
  %217 = load %"struct.blink::NGTableTypes::Column"*, %"struct.blink::NGTableTypes::Column"** %203, align 8
  %218 = icmp ne i8* %208, null
  %219 = icmp ne %"struct.blink::NGTableTypes::Column"* %217, null
  %220 = and i1 %218, %219
  br i1 %220, label %221, label %227, !prof !3

221:                                              ; preds = %214
  %222 = load i32, i32* %135, align 4
  %223 = zext i32 %222 to i64
  %224 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %217, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = shl nuw nsw i64 %223, 5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %208, i8* align 4 %224, i64 %225, i1 false) #16
  %226 = load %"struct.blink::NGTableTypes::Column"*, %"struct.blink::NGTableTypes::Column"** %203, align 8
  br label %227

227:                                              ; preds = %221, %214
  %228 = phi %"struct.blink::NGTableTypes::Column"* [ %217, %214 ], [ %226, %221 ]
  %229 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %228, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %229) #16
  %230 = bitcast i8* %77 to i64*
  store atomic i64 %216, i64* %230 monotonic, align 8
  %231 = trunc i64 %215 to i32
  store i32 %231, i32* %190, align 8
  br label %232

232:                                              ; preds = %227, %209, %193, %188
  %233 = bitcast i8* %77 to %"struct.blink::NGTableTypes::Column"**
  %234 = load %"struct.blink::NGTableTypes::Column"*, %"struct.blink::NGTableTypes::Column"** %233, align 8
  %235 = load i32, i32* %135, align 4
  %236 = zext i32 %235 to i64
  %237 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %234, i64 %236
  %238 = zext i32 %185 to i64
  %239 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %234, i64 %238
  %240 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %237, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = ptrtoint %"struct.blink::NGTableTypes::Column"* %239 to i64
  %242 = ptrtoint %"struct.blink::NGTableTypes::Column"* %237 to i64
  %243 = sub i64 %241, %242
  call void @llvm.memset.p0i8.i64(i8* align 4 %240, i8 0, i64 %243, i1 false) #16
  br label %244

244:                                              ; preds = %232, %184
  store i32 %185, i32* %135, align 4
  br label %245

245:                                              ; preds = %244, %172, %155
  %246 = load %"struct.blink::NGTableTypes::ColspanCell"*, %"struct.blink::NGTableTypes::ColspanCell"** %71, align 8
  %247 = load i32, i32* %73, align 4
  %248 = zext i32 %247 to i64
  %249 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %246, i64 %248
  %250 = icmp eq i32 %247, 0
  br i1 %250, label %251, label %254

251:                                              ; preds = %294, %245
  %252 = load i32, i32* %69, align 4
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %297, label %328

254:                                              ; preds = %245, %294
  %255 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %295, %294 ], [ %246, %245 ]
  %256 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %255, i64 0, i32 1
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %255, i64 0, i32 2
  %259 = load i32, i32* %258, align 4
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %294, label %261

261:                                              ; preds = %254
  %262 = load i32, i32* %135, align 4
  %263 = sub i32 %262, %257
  %264 = icmp ult i32 %263, %259
  %265 = select i1 %264, i32 %263, i32 %259
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %294, label %267

267:                                              ; preds = %261
  %268 = call dereferenceable(32) %"struct.blink::NGTableTypes::Column"* @_ZN3WTF6VectorIN5blink12NGTableTypes6ColumnELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1875"* %133, i32 %257) #16
  %269 = zext i32 %265 to i64
  %270 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %268, i64 %269
  br label %271

271:                                              ; preds = %284, %267
  %272 = phi %"struct.blink::NGTableTypes::Column"* [ %286, %284 ], [ %268, %267 ]
  %273 = phi %"struct.blink::NGTableTypes::Column"* [ %285, %284 ], [ null, %267 ]
  %274 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %272, i64 0, i32 5
  %275 = load i8, i8* %274, align 1, !range !2
  %276 = icmp eq i8 %275, 0
  br i1 %276, label %277, label %284

277:                                              ; preds = %271
  %278 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %272, i64 0, i32 7
  %279 = load i8, i8* %278, align 1, !range !2
  %280 = icmp eq i8 %279, 0
  br i1 %280, label %294, label %281

281:                                              ; preds = %277
  %282 = icmp eq %"struct.blink::NGTableTypes::Column"* %273, null
  %283 = select i1 %282, %"struct.blink::NGTableTypes::Column"* %272, %"struct.blink::NGTableTypes::Column"* %273
  br label %284

284:                                              ; preds = %281, %271
  %285 = phi %"struct.blink::NGTableTypes::Column"* [ %273, %271 ], [ %283, %281 ]
  %286 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %272, i64 1
  %287 = icmp eq %"struct.blink::NGTableTypes::Column"* %286, %270
  br i1 %287, label %288, label %271

288:                                              ; preds = %284
  %289 = icmp eq %"struct.blink::NGTableTypes::Column"* %285, null
  br i1 %289, label %292, label %290

290:                                              ; preds = %288
  %291 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %285, i64 0, i32 7
  store i8 0, i8* %291, align 1
  br label %294

292:                                              ; preds = %288
  %293 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %268, i64 0, i32 7
  store i8 0, i8* %293, align 1
  br label %294

294:                                              ; preds = %277, %292, %290, %261, %254
  %295 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %255, i64 1
  %296 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %295, %249
  br i1 %296, label %251, label %254

297:                                              ; preds = %328, %251
  %298 = load %"struct.blink::NGTableTypes::ColspanCell"*, %"struct.blink::NGTableTypes::ColspanCell"** %71, align 8
  %299 = load i32, i32* %73, align 4
  %300 = zext i32 %299 to i64
  %301 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %298, i64 %300
  %302 = getelementptr inbounds %class.anon.2027, %class.anon.2027* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %302) #16
  %303 = icmp ugt i32 %299, 128
  br i1 %303, label %304, label %312

304:                                              ; preds = %297, %309
  %305 = phi i64 [ %310, %309 ], [ %300, %297 ]
  %306 = shl i64 %305, 5
  %307 = call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %306, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #16
  %308 = icmp eq i8* %307, null
  br i1 %308, label %309, label %313

309:                                              ; preds = %304
  %310 = lshr i64 %305, 1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %304

312:                                              ; preds = %309, %297
  call fastcc void @"_ZNSt3__113__stable_sortIRZN5blink12_GLOBAL__N_139ApplyCellConstraintsToColumnConstraintsERKN3WTF6VectorIN4absl8optionalINS1_12NGTableTypes20CellInlineConstraintEEELj0ENS3_18PartitionAllocatorEEENS1_10LayoutUnitEbPNS4_INS7_11ColspanCellELj0ESA_EEPN4base14RefCountedDataINS4_INS7_6ColumnELj0ESA_EEEEE3$_1PSF_EEvT0_SR_T_NS_15iterator_traitsISR_E15difference_typeEPNSU_10value_typeEl"(%"struct.blink::NGTableTypes::ColspanCell"* %298, %"struct.blink::NGTableTypes::ColspanCell"* %301, %class.anon.2027* nonnull dereferenceable(1) %5, i64 %300, %"struct.blink::NGTableTypes::ColspanCell"* null, i64 0) #16
  br label %315

313:                                              ; preds = %304
  %314 = bitcast i8* %307 to %"struct.blink::NGTableTypes::ColspanCell"*
  call fastcc void @"_ZNSt3__113__stable_sortIRZN5blink12_GLOBAL__N_139ApplyCellConstraintsToColumnConstraintsERKN3WTF6VectorIN4absl8optionalINS1_12NGTableTypes20CellInlineConstraintEEELj0ENS3_18PartitionAllocatorEEENS1_10LayoutUnitEbPNS4_INS7_11ColspanCellELj0ESA_EEPN4base14RefCountedDataINS4_INS7_6ColumnELj0ESA_EEEEE3$_1PSF_EEvT0_SR_T_NS_15iterator_traitsISR_E15difference_typeEPNSU_10value_typeEl"(%"struct.blink::NGTableTypes::ColspanCell"* %298, %"struct.blink::NGTableTypes::ColspanCell"* %301, %class.anon.2027* nonnull dereferenceable(1) %5, i64 %300, %"struct.blink::NGTableTypes::ColspanCell"* nonnull %314, i64 %305) #16
  call void @_ZdlPv(i8* nonnull %307) #17
  br label %315

315:                                              ; preds = %313, %312
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %302) #16
  call void @_ZN5blink23NGTableAlgorithmHelpers31DistributeColspanCellsToColumnsERKN3WTF6VectorINS_12NGTableTypes11ColspanCellELj0ENS1_18PartitionAllocatorEEENS_10LayoutUnitEbPN4base14RefCountedDataINS2_INS3_6ColumnELj0ES5_EEEE(%"class.WTF::Vector.1912"* nonnull dereferenceable(16) %20, i32 %65, i1 zeroext %51, %"class.base::RefCountedData.1873"* nonnull %75) #16
  %316 = bitcast i8* %77 to %"struct.blink::NGTableTypes::Column"**
  %317 = load %"struct.blink::NGTableTypes::Column"*, %"struct.blink::NGTableTypes::Column"** %316, align 8
  %318 = load i32, i32* %135, align 4
  %319 = zext i32 %318 to i64
  %320 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %317, i64 %319
  %321 = icmp eq i32 %318, 0
  br i1 %321, label %408, label %322

322:                                              ; preds = %315
  %323 = xor i1 %51, true
  %324 = bitcast i32* %7 to i8*
  %325 = bitcast i32* %7 to %"class.blink::LayoutUnit"*
  %326 = bitcast i32* %8 to i8*
  %327 = bitcast i32* %8 to %"class.blink::LayoutUnit"*
  br label %338

328:                                              ; preds = %251, %328
  %329 = phi i32 [ %332, %328 ], [ 0, %251 ]
  %330 = call dereferenceable(32) %"struct.blink::NGTableTypes::Column"* @_ZN3WTF6VectorIN5blink12NGTableTypes6ColumnELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1875"* %133, i32 %329) #16
  %331 = call dereferenceable(28) %"class.absl::optional.1905"* @_ZNK3WTF6VectorIN4absl8optionalIN5blink12NGTableTypes20CellInlineConstraintEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1902"* nonnull %19, i32 %329) #16
  call void @_ZN5blink12NGTableTypes6Column9EncompassERKN4absl8optionalINS0_20CellInlineConstraintEEE(%"struct.blink::NGTableTypes::Column"* %330, %"class.absl::optional.1905"* dereferenceable(28) %331) #16
  %332 = add nuw i32 %329, 1
  %333 = load i32, i32* %69, align 4
  %334 = icmp ult i32 %332, %333
  br i1 %334, label %328, label %297

335:                                              ; preds = %380
  %336 = fcmp ogt float %360, 1.000000e+02
  %337 = and i1 %51, %336
  br i1 %337, label %383, label %408

338:                                              ; preds = %322, %380
  %339 = phi %"struct.blink::NGTableTypes::Column"* [ %381, %380 ], [ %317, %322 ]
  %340 = phi float [ %360, %380 ], [ 0.000000e+00, %322 ]
  %341 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %339, i64 0, i32 2
  %342 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %341, i64 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i8, i8* %342, align 4, !range !2
  %344 = icmp eq i8 %343, 0
  br i1 %344, label %359, label %345

345:                                              ; preds = %338
  %346 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %339, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %347 = load float, float* %346, align 4
  %348 = fadd float %340, %347
  %349 = fcmp ogt float %348, 1.000000e+02
  %350 = and i1 %349, %323
  br i1 %350, label %351, label %359

351:                                              ; preds = %345
  %352 = fsub float 1.000000e+02, %340
  %353 = bitcast float %352 to i32
  %354 = bitcast %"class.absl::optional"* %341 to i64*
  %355 = zext i32 %353 to i64
  %356 = shl nuw i64 %355, 32
  %357 = or i64 %356, 1
  store i64 %357, i64* %354, align 4
  %358 = fadd float %340, %352
  br label %359

359:                                              ; preds = %345, %351, %338
  %360 = phi float [ %340, %338 ], [ %358, %351 ], [ %348, %345 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %324)
  store i32 0, i32* %7, align 4
  %361 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %339, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %362 = load i8, i8* %361, align 4, !range !2
  %363 = icmp eq i8 %362, 0
  %364 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %339, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %365 = select i1 %363, %"class.blink::LayoutUnit"* %325, %"class.blink::LayoutUnit"* %364
  %366 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %365, i64 0, i32 0
  %367 = load i32, i32* %366, align 4
  %368 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %339, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %367, i32* %368, align 4
  br i1 %363, label %369, label %370

369:                                              ; preds = %359
  store i8 1, i8* %361, align 4
  br label %370

370:                                              ; preds = %369, %359
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %324)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %326)
  store i32 0, i32* %8, align 4
  %371 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %339, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %372 = load i8, i8* %371, align 4, !range !2
  %373 = icmp eq i8 %372, 0
  %374 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %339, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %375 = select i1 %373, %"class.blink::LayoutUnit"* %327, %"class.blink::LayoutUnit"* %374
  %376 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %375, i64 0, i32 0
  %377 = load i32, i32* %376, align 4
  %378 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %339, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %377, i32* %378, align 4
  br i1 %373, label %379, label %380

379:                                              ; preds = %370
  store i8 1, i8* %371, align 4
  br label %380

380:                                              ; preds = %379, %370
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %326)
  %381 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %339, i64 1
  %382 = icmp eq %"struct.blink::NGTableTypes::Column"* %381, %320
  br i1 %382, label %335, label %338

383:                                              ; preds = %335
  %384 = load %"struct.blink::NGTableTypes::Column"*, %"struct.blink::NGTableTypes::Column"** %316, align 8
  %385 = load i32, i32* %135, align 4
  %386 = zext i32 %385 to i64
  %387 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %384, i64 %386
  %388 = icmp eq i32 %385, 0
  br i1 %388, label %408, label %389

389:                                              ; preds = %383, %405
  %390 = phi %"struct.blink::NGTableTypes::Column"* [ %406, %405 ], [ %384, %383 ]
  %391 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %390, i64 0, i32 2
  %392 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %391, i64 0, i32 0, i32 0, i32 0, i32 0
  %393 = load i8, i8* %392, align 4, !range !2
  %394 = icmp eq i8 %393, 0
  br i1 %394, label %405, label %395

395:                                              ; preds = %389
  %396 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %390, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %397 = load float, float* %396, align 4
  %398 = fmul float %397, 1.000000e+02
  %399 = fdiv float %398, %360
  %400 = bitcast float %399 to i32
  %401 = bitcast %"class.absl::optional"* %391 to i64*
  %402 = zext i32 %400 to i64
  %403 = shl nuw i64 %402, 32
  %404 = or i64 %403, 1
  store i64 %404, i64* %401, align 4
  br label %405

405:                                              ; preds = %395, %389
  %406 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %390, i64 1
  %407 = icmp eq %"struct.blink::NGTableTypes::Column"* %406, %387
  br i1 %407, label %408, label %389

408:                                              ; preds = %405, %315, %335, %383
  %409 = load %"struct.blink::NGTableTypes::ColspanCell"*, %"struct.blink::NGTableTypes::ColspanCell"** %71, align 8
  %410 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %409, null
  %411 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %409 to i8*
  br i1 %410, label %417, label %412, !prof !3

412:                                              ; preds = %408
  %413 = load i32, i32* %73, align 4
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %416, label %415, !prof !4

415:                                              ; preds = %412
  store i32 0, i32* %73, align 4
  br label %416

416:                                              ; preds = %415, %412
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %411) #16
  store %"struct.blink::NGTableTypes::ColspanCell"* null, %"struct.blink::NGTableTypes::ColspanCell"** %71, align 8
  br label %417

417:                                              ; preds = %408, %416
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #16
  %418 = load %"class.absl::optional.1905"*, %"class.absl::optional.1905"** %67, align 8
  %419 = icmp eq %"class.absl::optional.1905"* %418, null
  br i1 %419, label %426, label %420, !prof !3

420:                                              ; preds = %417
  %421 = load i32, i32* %69, align 4
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %424, label %423, !prof !4

423:                                              ; preds = %420
  store i32 0, i32* %69, align 4
  br label %424

424:                                              ; preds = %423, %420
  %425 = getelementptr inbounds %"class.absl::optional.1905", %"class.absl::optional.1905"* %418, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %425) #16
  store %"class.absl::optional.1905"* null, %"class.absl::optional.1905"** %67, align 8
  br label %426

426:                                              ; preds = %417, %424
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #16
  ret %"class.base::RefCountedData.1873"* %75

427:                                              ; preds = %91, %705
  %428 = phi i32 [ 0, %91 ], [ %708, %705 ]
  %429 = phi i8 [ 1, %91 ], [ %707, %705 ]
  %430 = phi i32 [ 0, %91 ], [ %706, %705 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #16
  %431 = call { %"class.blink::LayoutBox"*, i64 } @_ZNK5blink30NGTableGroupedChildrenIteratordeEv(%"class.blink::NGTableGroupedChildrenIterator"* nonnull %21) #16
  %432 = extractvalue { %"class.blink::LayoutBox"*, i64 } %431, 0
  store %"class.blink::LayoutBox"* %432, %"class.blink::LayoutBox"** %93, align 8
  %433 = extractvalue { %"class.blink::LayoutBox"*, i64 } %431, 1
  store i64 %433, i64* %94, align 8
  %434 = call zeroext i1 @_ZNK5blink17NGLayoutInputNode19IsEmptyTableSectionEv(%"class.blink::NGLayoutInputNode"* nonnull %95) #16
  br i1 %434, label %705, label %435

435:                                              ; preds = %427
  %436 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %98, align 8
  %437 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %436, i64 0, i32 5, i32 0
  %438 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %437, align 8
  %439 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %438, i64 0, i32 0, i32 9
  %440 = bitcast [20 x i8]* %439 to i160*
  %441 = load i160, i160* %440, align 8
  %442 = lshr i160 %441, 102
  %443 = trunc i160 %442 to i16
  %444 = and i16 %443, 3
  %445 = lshr i160 %441, 107
  %446 = trunc i160 %445 to i16
  %447 = and i16 %446, 256
  %448 = or i16 %447, %444
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #16
  store i64 -6148914694099828736, i64* %100, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 16, i1 false) #16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #16
  %449 = call { %"class.blink::LayoutBox"*, i64 } @_ZNK5blink11NGBlockNode10FirstChildEv(%"class.blink::NGBlockNode"* nonnull %24) #16
  %450 = extractvalue { %"class.blink::LayoutBox"*, i64 } %449, 0
  %451 = extractvalue { %"class.blink::LayoutBox"*, i64 } %449, 1
  store %"class.blink::LayoutBox"* %450, %"class.blink::LayoutBox"** %105, align 8
  store i64 %451, i64* %107, align 8
  %452 = icmp eq %"class.blink::LayoutBox"* %450, null
  br i1 %452, label %453, label %454

453:                                              ; preds = %435
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #16
  br label %703

454:                                              ; preds = %435
  %455 = and i8 %429, 1
  %456 = icmp eq i8 %455, 0
  br label %466

457:                                              ; preds = %528
  %458 = load %"struct.blink::NGColspanCellTabulator::Cell"*, %"struct.blink::NGColspanCellTabulator::Cell"** %113, align 8
  %459 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %458 to i8*
  %460 = icmp eq %"struct.blink::NGColspanCellTabulator::Cell"* %458, null
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #16
  br i1 %460, label %703, label %461, !prof !3

461:                                              ; preds = %457
  %462 = load i32, i32* %114, align 4
  %463 = icmp eq i32 %462, 0
  br i1 %463, label %465, label %464, !prof !4

464:                                              ; preds = %461
  store i32 0, i32* %114, align 4
  br label %465

465:                                              ; preds = %464, %461
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %459) #16
  store %"struct.blink::NGColspanCellTabulator::Cell"* null, %"struct.blink::NGColspanCellTabulator::Cell"** %113, align 8
  br label %703

466:                                              ; preds = %528, %454
  %467 = phi i32 [ %430, %454 ], [ %477, %528 ]
  %468 = phi i1 [ false, %454 ], [ true, %528 ]
  store i32 0, i32* %101, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %108) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 16, i1 false) #16
  %469 = call { %"class.blink::LayoutBox"*, i64 } @_ZNK5blink11NGBlockNode10FirstChildEv(%"class.blink::NGBlockNode"* nonnull %14) #16
  %470 = extractvalue { %"class.blink::LayoutBox"*, i64 } %469, 0
  %471 = extractvalue { %"class.blink::LayoutBox"*, i64 } %469, 1
  store %"class.blink::LayoutBox"* %470, %"class.blink::LayoutBox"** %109, align 8
  store i64 %471, i64* %111, align 8
  %472 = icmp eq %"class.blink::LayoutBox"* %470, null
  br i1 %472, label %476, label %473

473:                                              ; preds = %466
  %474 = or i1 %456, %468
  %475 = and i1 %51, %474
  br label %537

476:                                              ; preds = %697, %466
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %108) #16
  %477 = add i32 %467, 1
  %478 = load i32, i32* %114, align 4
  %479 = icmp eq i32 %478, 0
  br i1 %479, label %528, label %482

480:                                              ; preds = %524
  %481 = zext i32 %525 to i64
  br label %528

482:                                              ; preds = %476, %524
  %483 = phi i32 [ %526, %524 ], [ 0, %476 ]
  %484 = call dereferenceable(12) %"struct.blink::NGColspanCellTabulator::Cell"* @_ZN3WTF6VectorIN5blink22NGColspanCellTabulator4CellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1942"* %102, i32 %483) #16
  %485 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %484, i64 0, i32 2
  %486 = load i32, i32* %485, align 4
  %487 = add i32 %486, -1
  store i32 %487, i32* %485, align 4
  %488 = call dereferenceable(12) %"struct.blink::NGColspanCellTabulator::Cell"* @_ZN3WTF6VectorIN5blink22NGColspanCellTabulator4CellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1942"* %102, i32 %483) #16
  %489 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %488, i64 0, i32 2
  %490 = load i32, i32* %489, align 4
  %491 = icmp eq i32 %490, 0
  br i1 %491, label %492, label %521

492:                                              ; preds = %482
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #16
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %127, align 8
  %493 = load i32, i32* %114, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #16
  %494 = icmp ugt i32 %493, %483
  br i1 %494, label %495, label %496

495:                                              ; preds = %492
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #16
  store i8* null, i8** %127, align 8
  br label %503

496:                                              ; preds = %492
  %497 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %483) #16
  %498 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %493) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %10, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %497, i8* %498) #16
  %499 = load i8*, i8** %129, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #16
  store i8* %499, i8** %127, align 8
  %500 = icmp eq i8* %499, null
  br i1 %500, label %503, label %501

501:                                              ; preds = %496
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %11) #16
  %502 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #16
  br label %503

503:                                              ; preds = %501, %496, %495
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #16
  %504 = load %"struct.blink::NGColspanCellTabulator::Cell"*, %"struct.blink::NGColspanCellTabulator::Cell"** %131, align 8
  %505 = zext i32 %483 to i64
  %506 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %504, i64 %505
  %507 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %506, i64 1
  %508 = icmp eq %"struct.blink::NGColspanCellTabulator::Cell"* %506, null
  br i1 %508, label %518, label %509, !prof !4

509:                                              ; preds = %503
  %510 = load i32, i32* %114, align 4
  %511 = zext i32 %510 to i64
  %512 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %504, i64 %511
  %513 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %506 to i8*
  %514 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %507 to i8*
  %515 = ptrtoint %"struct.blink::NGColspanCellTabulator::Cell"* %512 to i64
  %516 = ptrtoint %"struct.blink::NGColspanCellTabulator::Cell"* %507 to i64
  %517 = sub i64 %515, %516
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %513, i8* nonnull align 4 %514, i64 %517, i1 false) #16
  br label %518

518:                                              ; preds = %509, %503
  %519 = load i32, i32* %114, align 4
  %520 = add i32 %519, -1
  store i32 %520, i32* %114, align 4
  br label %524

521:                                              ; preds = %482
  %522 = add nuw i32 %483, 1
  %523 = load i32, i32* %114, align 4
  br label %524

524:                                              ; preds = %521, %518
  %525 = phi i32 [ %520, %518 ], [ %523, %521 ]
  %526 = phi i32 [ %483, %518 ], [ %522, %521 ]
  %527 = icmp ult i32 %526, %525
  br i1 %527, label %482, label %480

528:                                              ; preds = %480, %476
  %529 = phi i64 [ 0, %476 ], [ %481, %480 ]
  %530 = load %"struct.blink::NGColspanCellTabulator::Cell"*, %"struct.blink::NGColspanCellTabulator::Cell"** %131, align 8
  %531 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %530, i64 %529
  call fastcc void @"_ZNSt3__16__sortIRZN5blink22NGColspanCellTabulator6EndRowEvE3$_0PNS2_4CellEEEvT0_S7_T_"(%"struct.blink::NGColspanCellTabulator::Cell"* %530, %"struct.blink::NGColspanCellTabulator::Cell"* %531) #16
  %532 = call { %"class.blink::LayoutBox"*, i64 } @_ZNK5blink11NGBlockNode11NextSiblingEv(%"class.blink::NGBlockNode"* nonnull %14) #16
  %533 = extractvalue { %"class.blink::LayoutBox"*, i64 } %532, 0
  %534 = extractvalue { %"class.blink::LayoutBox"*, i64 } %532, 1
  store %"class.blink::LayoutBox"* %533, %"class.blink::LayoutBox"** %105, align 8
  %535 = trunc i64 %534 to i8
  store i8 %535, i8* %106, align 8
  %536 = icmp eq %"class.blink::LayoutBox"* %533, null
  br i1 %536, label %457, label %466

537:                                              ; preds = %697, %473
  %538 = load %"struct.blink::NGColspanCellTabulator::Cell"*, %"struct.blink::NGColspanCellTabulator::Cell"** %113, align 8
  %539 = load i32, i32* %114, align 4
  %540 = zext i32 %539 to i64
  %541 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %538, i64 %540
  %542 = icmp eq i32 %539, 0
  br i1 %542, label %561, label %543

543:                                              ; preds = %537
  %544 = load i32, i32* %101, align 8
  br label %545

545:                                              ; preds = %557, %543
  %546 = phi i32 [ %544, %543 ], [ %558, %557 ]
  %547 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %538, %543 ], [ %559, %557 ]
  %548 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %547, i64 0, i32 0
  %549 = load i32, i32* %548, align 4
  %550 = icmp ugt i32 %549, %546
  br i1 %550, label %557, label %551

551:                                              ; preds = %545
  %552 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %547, i64 0, i32 1
  %553 = load i32, i32* %552, align 4
  %554 = add i32 %553, %549
  %555 = icmp ugt i32 %554, %546
  br i1 %555, label %556, label %557

556:                                              ; preds = %551
  store i32 %554, i32* %101, align 8
  br label %557

557:                                              ; preds = %556, %551, %545
  %558 = phi i32 [ %546, %545 ], [ %554, %556 ], [ %546, %551 ]
  %559 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %547, i64 1
  %560 = icmp eq %"struct.blink::NGColspanCellTabulator::Cell"* %559, %541
  br i1 %560, label %561, label %545

561:                                              ; preds = %557, %537
  %562 = call i32 @_ZNK5blink17NGLayoutInputNode16TableCellColspanEv(%"class.blink::NGLayoutInputNode"* nonnull %112) #16
  %563 = load i32, i32* %101, align 8
  %564 = select i1 %51, i32 %562, i32 1
  %565 = add i32 %564, %563
  %566 = load i32, i32* %69, align 4
  %567 = icmp ult i32 %565, %566
  br i1 %567, label %623, label %568

568:                                              ; preds = %561
  %569 = load i32, i32* %68, align 8
  %570 = icmp ult i32 %569, %565
  br i1 %570, label %571, label %607

571:                                              ; preds = %568
  %572 = lshr i32 %569, 2
  %573 = add nuw i32 %569, 1
  %574 = add i32 %573, %572
  %575 = icmp ugt i32 %574, 4
  %576 = select i1 %575, i32 %574, i32 4
  %577 = icmp ugt i32 %576, %565
  %578 = select i1 %577, i32 %576, i32 %565
  %579 = icmp ult i32 %569, %578
  br i1 %579, label %580, label %607, !prof !3

580:                                              ; preds = %571
  %581 = load %"class.absl::optional.1905"*, %"class.absl::optional.1905"** %67, align 8
  %582 = icmp eq %"class.absl::optional.1905"* %581, null
  %583 = zext i32 %578 to i64
  %584 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4absl8optionalIN5blink12NGTableTypes20CellInlineConstraintEEEEEmm(i64 %583) #16
  %585 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %584, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4absl8optionalIN5blink12NGTableTypes20CellInlineConstraintEEEEEPKcv, i64 0, i64 0)) #16
  br i1 %582, label %586, label %590

586:                                              ; preds = %580
  %587 = ptrtoint i8* %585 to i64
  store atomic i64 %587, i64* %115 monotonic, align 8
  %588 = udiv i64 %584, 28
  %589 = trunc i64 %588 to i32
  store i32 %589, i32* %68, align 8
  br label %607

590:                                              ; preds = %580
  %591 = udiv i64 %584, 28
  %592 = ptrtoint i8* %585 to i64
  %593 = load %"class.absl::optional.1905"*, %"class.absl::optional.1905"** %67, align 8
  %594 = icmp ne i8* %585, null
  %595 = icmp ne %"class.absl::optional.1905"* %593, null
  %596 = and i1 %594, %595
  br i1 %596, label %597, label %603, !prof !3

597:                                              ; preds = %590
  %598 = load i32, i32* %69, align 4
  %599 = zext i32 %598 to i64
  %600 = getelementptr inbounds %"class.absl::optional.1905", %"class.absl::optional.1905"* %593, i64 0, i32 0, i32 0, i32 0, i32 0
  %601 = mul nuw nsw i64 %599, 28
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %585, i8* align 4 %600, i64 %601, i1 false) #16
  %602 = load %"class.absl::optional.1905"*, %"class.absl::optional.1905"** %67, align 8
  br label %603

603:                                              ; preds = %597, %590
  %604 = phi %"class.absl::optional.1905"* [ %593, %590 ], [ %602, %597 ]
  %605 = getelementptr inbounds %"class.absl::optional.1905", %"class.absl::optional.1905"* %604, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %605) #16
  store atomic i64 %592, i64* %115 monotonic, align 8
  %606 = trunc i64 %591 to i32
  store i32 %606, i32* %68, align 8
  br label %607

607:                                              ; preds = %603, %586, %571, %568
  %608 = load %"class.absl::optional.1905"*, %"class.absl::optional.1905"** %67, align 8
  %609 = load i32, i32* %69, align 4
  %610 = zext i32 %565 to i64
  %611 = getelementptr inbounds %"class.absl::optional.1905", %"class.absl::optional.1905"* %608, i64 %610
  %612 = icmp eq i32 %609, %565
  br i1 %612, label %622, label %613

613:                                              ; preds = %607
  %614 = zext i32 %609 to i64
  %615 = getelementptr inbounds %"class.absl::optional.1905", %"class.absl::optional.1905"* %608, i64 %614
  br label %616

616:                                              ; preds = %616, %613
  %617 = phi %"class.absl::optional.1905"* [ %620, %616 ], [ %615, %613 ]
  %618 = getelementptr inbounds %"class.absl::optional.1905", %"class.absl::optional.1905"* %617, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %618, align 4
  %619 = getelementptr inbounds i8, i8* %618, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %619, i8 0, i64 24, i1 false) #16
  %620 = getelementptr inbounds %"class.absl::optional.1905", %"class.absl::optional.1905"* %617, i64 1
  %621 = icmp eq %"class.absl::optional.1905"* %620, %611
  br i1 %621, label %622, label %616

622:                                              ; preds = %616, %607
  store i32 %565, i32* %69, align 4
  br label %623

623:                                              ; preds = %622, %561
  br i1 %475, label %697, label %624

624:                                              ; preds = %623
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %116, i8 -86, i64 16, i1 false) #16
  %625 = load i32, i32* %101, align 8
  %626 = call { i64, i64 } @_ZNK5blink14NGTableBorders10CellBorderERKNS_11NGBlockNodeEjjjNS_20WritingDirectionModeE(%"class.blink::NGTableBorders"* %2, %"class.blink::NGBlockNode"* nonnull dereferenceable(16) %15, i32 %467, i32 %625, i32 %428, i16 %448) #16
  %627 = extractvalue { i64, i64 } %626, 0
  store i64 %627, i64* %118, align 8
  %628 = extractvalue { i64, i64 } %626, 1
  store i64 %628, i64* %117, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %119) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 -86, i64 16, i1 false) #16
  %629 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %121, align 8
  %630 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %629, i64 0, i32 5, i32 0
  %631 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %630, align 8
  %632 = call { i64, i64 } @_ZNK5blink14NGTableBorders21CellPaddingForMeasureERKNS_13ComputedStyleENS_20WritingDirectionModeE(%"class.blink::NGTableBorders"* %2, %"class.blink::ComputedStyle"* dereferenceable(104) %631, i16 %448) #16
  %633 = extractvalue { i64, i64 } %632, 0
  store i64 %633, i64* %122, align 8
  %634 = extractvalue { i64, i64 } %632, 1
  store i64 %634, i64* %120, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %123) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %123, i8* align 4 bitcast (<{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", { { { { i8, [3 x i8], %union.anon.40 } } } }, %"class.blink::LayoutUnit", i8, [3 x i8] }>* @__const._ZN5blink12_GLOBAL__N_131ComputeSectionInlineConstraintsERKNS_11NGBlockNodeEbbNS_11WritingModeERKNS_14NGTableBordersEjPjPN3WTF6VectorIN4absl8optionalINS_12NGTableTypes20CellInlineConstraintEEELj0ENS9_18PartitionAllocatorEEEPNSA_INSD_11ColspanCellELj0ESG_EE.cell_constraint to i8*), i64 24, i1 false) #16
  call void @_ZN5blink12NGTableTypes26CreateCellInlineConstraintERKNS_11NGBlockNodeENS_11WritingModeEbRKNS_10NGBoxStrutES7_(%"struct.blink::NGTableTypes::CellInlineConstraint"* nonnull sret %18, %"class.blink::NGBlockNode"* nonnull dereferenceable(16) %15, i8 zeroext %54, i1 zeroext %51, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %96, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %97) #16
  %635 = icmp eq i32 %562, 1
  %636 = load i32, i32* %101, align 8
  br i1 %635, label %637, label %647

637:                                              ; preds = %624
  %638 = call dereferenceable(28) %"class.absl::optional.1905"* @_ZN3WTF6VectorIN4absl8optionalIN5blink12NGTableTypes20CellInlineConstraintEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1902"* nonnull %19, i32 %636) #16
  %639 = getelementptr inbounds %"class.absl::optional.1905", %"class.absl::optional.1905"* %638, i64 0, i32 0, i32 0, i32 0, i32 0
  %640 = load i8, i8* %639, align 4, !range !2
  %641 = icmp eq i8 %640, 0
  br i1 %641, label %644, label %642

642:                                              ; preds = %637
  %643 = getelementptr inbounds %"class.absl::optional.1905", %"class.absl::optional.1905"* %638, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN5blink12NGTableTypes20CellInlineConstraint9EncompassERKS1_(%"struct.blink::NGTableTypes::CellInlineConstraint"* %643, %"struct.blink::NGTableTypes::CellInlineConstraint"* nonnull dereferenceable(24) %18) #16
  br label %696

644:                                              ; preds = %637
  %645 = getelementptr inbounds %"class.absl::optional.1905", %"class.absl::optional.1905"* %638, i64 0, i32 0, i32 0, i32 0, i32 2
  %646 = bitcast %union.anon.1909* %645 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %646, i8* nonnull align 4 %123, i64 24, i1 false) #16
  store i8 1, i8* %639, align 4
  br label %696

647:                                              ; preds = %624
  %648 = load i32, i32* %73, align 4
  %649 = load i32, i32* %72, align 8
  %650 = icmp eq i32 %648, %649
  br i1 %650, label %651, label %686, !prof !4

651:                                              ; preds = %647
  %652 = add i32 %648, 1
  %653 = lshr i32 %648, 2
  %654 = add i32 %652, %653
  %655 = icmp ugt i32 %654, 4
  %656 = select i1 %655, i32 %654, i32 4
  %657 = icmp ugt i32 %656, %652
  %658 = select i1 %657, i32 %656, i32 %652
  %659 = icmp ult i32 %648, %658
  br i1 %659, label %660, label %686, !prof !3

660:                                              ; preds = %651
  %661 = load %"struct.blink::NGTableTypes::ColspanCell"*, %"struct.blink::NGTableTypes::ColspanCell"** %71, align 8
  %662 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %661, null
  %663 = zext i32 %658 to i64
  %664 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGTableTypes11ColspanCellEEEmm(i64 %663) #16
  %665 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %664, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12NGTableTypes11ColspanCellEEEPKcv, i64 0, i64 0)) #16
  br i1 %662, label %666, label %670

666:                                              ; preds = %660
  %667 = ptrtoint i8* %665 to i64
  store atomic i64 %667, i64* %125 monotonic, align 8
  %668 = lshr i64 %664, 5
  %669 = trunc i64 %668 to i32
  store i32 %669, i32* %72, align 8
  br label %686

670:                                              ; preds = %660
  %671 = lshr i64 %664, 5
  %672 = ptrtoint i8* %665 to i64
  %673 = load %"struct.blink::NGTableTypes::ColspanCell"*, %"struct.blink::NGTableTypes::ColspanCell"** %71, align 8
  %674 = icmp ne i8* %665, null
  %675 = icmp ne %"struct.blink::NGTableTypes::ColspanCell"* %673, null
  %676 = and i1 %674, %675
  %677 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %673 to i8*
  br i1 %676, label %678, label %683, !prof !3

678:                                              ; preds = %670
  %679 = load i32, i32* %73, align 4
  %680 = zext i32 %679 to i64
  %681 = shl nuw nsw i64 %680, 5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %665, i8* nonnull align 4 %677, i64 %681, i1 false) #16
  %682 = load i8*, i8** %124, align 8
  br label %683

683:                                              ; preds = %678, %670
  %684 = phi i8* [ %682, %678 ], [ %677, %670 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %684) #16
  store atomic i64 %672, i64* %125 monotonic, align 8
  %685 = trunc i64 %671 to i32
  store i32 %685, i32* %72, align 8
  br label %686

686:                                              ; preds = %683, %666, %651, %647
  %687 = load %"struct.blink::NGTableTypes::ColspanCell"*, %"struct.blink::NGTableTypes::ColspanCell"** %71, align 8
  %688 = load i32, i32* %73, align 4
  %689 = zext i32 %688 to i64
  %690 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %687, i64 %689
  %691 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %690 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %691, i8* nonnull align 4 %123, i64 24, i1 false) #16
  %692 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %687, i64 %689, i32 1
  store i32 %636, i32* %692, align 4
  %693 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %687, i64 %689, i32 2
  store i32 %562, i32* %693, align 4
  %694 = load i32, i32* %73, align 4
  %695 = add i32 %694, 1
  store i32 %695, i32* %73, align 4
  br label %696

696:                                              ; preds = %686, %644, %642
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %119) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #16
  br label %697

697:                                              ; preds = %696, %623
  call void @_ZN5blink22NGColspanCellTabulator11ProcessCellERKNS_11NGBlockNodeE(%"class.blink::NGColspanCellTabulator"* nonnull %13, %"class.blink::NGBlockNode"* nonnull dereferenceable(16) %15) #16
  %698 = call { %"class.blink::LayoutBox"*, i64 } @_ZNK5blink11NGBlockNode11NextSiblingEv(%"class.blink::NGBlockNode"* nonnull %15) #16
  %699 = extractvalue { %"class.blink::LayoutBox"*, i64 } %698, 0
  %700 = extractvalue { %"class.blink::LayoutBox"*, i64 } %698, 1
  store %"class.blink::LayoutBox"* %699, %"class.blink::LayoutBox"** %109, align 8
  %701 = trunc i64 %700 to i8
  store i8 %701, i8* %110, align 8
  %702 = icmp eq %"class.blink::LayoutBox"* %699, null
  br i1 %702, label %476, label %537

703:                                              ; preds = %453, %457, %465
  %704 = phi i32 [ %430, %453 ], [ %477, %457 ], [ %477, %465 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #16
  br label %705

705:                                              ; preds = %703, %427
  %706 = phi i32 [ %430, %427 ], [ %704, %703 ]
  %707 = phi i8 [ %429, %427 ], [ 0, %703 ]
  %708 = add i32 %428, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #16
  %709 = call dereferenceable(24) %"class.blink::NGTableGroupedChildrenIterator"* @_ZN5blink30NGTableGroupedChildrenIteratorppEv(%"class.blink::NGTableGroupedChildrenIterator"* nonnull %21) #16
  %710 = call zeroext i1 @_ZNK5blink30NGTableGroupedChildrenIteratorneERKS0_(%"class.blink::NGTableGroupedChildrenIterator"* nonnull %21, %"class.blink::NGTableGroupedChildrenIterator"* nonnull dereferenceable(24) %22) #16
  br i1 %710, label %427, label %132
}

declare void @_ZNK5blink22NGTableGroupedChildren5beginEv(%"class.blink::NGTableGroupedChildrenIterator"* sret, %"struct.blink::NGTableGroupedChildren"*) local_unnamed_addr #2

declare void @_ZNK5blink22NGTableGroupedChildren3endEv(%"class.blink::NGTableGroupedChildrenIterator"* sret, %"struct.blink::NGTableGroupedChildren"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink30NGTableGroupedChildrenIteratorneERKS0_(%"class.blink::NGTableGroupedChildrenIterator"*, %"class.blink::NGTableGroupedChildrenIterator"* dereferenceable(24)) local_unnamed_addr #2

declare { %"class.blink::LayoutBox"*, i64 } @_ZNK5blink30NGTableGroupedChildrenIteratordeEv(%"class.blink::NGTableGroupedChildrenIterator"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17NGLayoutInputNode19IsEmptyTableSectionEv(%"class.blink::NGLayoutInputNode"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::NGTableGroupedChildrenIterator"* @_ZN5blink30NGTableGroupedChildrenIteratorppEv(%"class.blink::NGTableGroupedChildrenIterator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21NGTableAlgorithmUtils34ComputeSectionMinimumRowBlockSizesERKNS_11NGBlockNodeENS_10LayoutUnitEbRKN3WTF6VectorINS_12NGTableTypes14ColumnLocationELj0ENS5_18PartitionAllocatorEEERKNS_14NGTableBordersES4_jbPNS6_INS7_7SectionELj0ES9_EEPNS6_INS7_3RowELj0ES9_EEPNS6_INS7_19CellBlockConstraintELj0ES9_EE(%"class.blink::NGBlockNode"* dereferenceable(16), i32, i1 zeroext, %"class.WTF::Vector.1917"* dereferenceable(16), %"class.blink::NGTableBorders"* dereferenceable(80), i32, i32, i1 zeroext, %"class.WTF::Vector.1922"*, %"class.WTF::Vector.1927"*, %"class.WTF::Vector.1932"*) local_unnamed_addr #0 align 2 {
  %12 = alloca %"class.blink::NGRowBaselineTabulator", align 4
  %13 = alloca %"class.blink::NGBlockNode", align 8
  %14 = alloca { i64, i64 }, align 8
  %15 = alloca %"class.blink::NGConstraintSpace", align 8
  %16 = alloca %"class.blink::NGBoxFragment", align 8
  %17 = alloca %"struct.blink::NGTableTypes::CellBlockConstraint", align 4
  %18 = alloca %"struct.blink::NGTableTypes::RowspanCell", align 4
  %19 = alloca float, align 4
  %20 = alloca %"struct.std::__1::__less.2116", align 1
  %21 = alloca %"class.logging::CheckOpResult", align 8
  %22 = alloca %"class.logging::CheckOpResult", align 8
  %23 = alloca %"class.logging::CheckError", align 8
  %24 = alloca %"class.WTF::Vector.1937", align 8
  %25 = alloca %"class.blink::NGColspanCellTabulator", align 8
  %26 = alloca %"class.blink::NGBlockNode", align 8
  %27 = alloca %"struct.blink::NGTableTypes::Row", align 4
  %28 = alloca float, align 4
  %29 = alloca %"struct.blink::NGTableTypes::Section", align 4
  %30 = getelementptr inbounds %"class.WTF::Vector.1927", %"class.WTF::Vector.1927"* %9, i64 0, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = bitcast %"class.WTF::Vector.1937"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #16
  %33 = getelementptr inbounds %"class.WTF::Vector.1937", %"class.WTF::Vector.1937"* %24, i64 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.WTF::Vector.1937", %"class.WTF::Vector.1937"* %24, i64 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.WTF::Vector.1937", %"class.WTF::Vector.1937"* %24, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 16, i1 false) #16
  %36 = bitcast %"class.blink::NGColspanCellTabulator"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #16
  %37 = bitcast %"class.blink::NGColspanCellTabulator"* %25 to i64*
  store i64 -6148914691236517206, i64* %37, align 8
  %38 = getelementptr inbounds %"class.blink::NGColspanCellTabulator", %"class.blink::NGColspanCellTabulator"* %25, i64 0, i32 0
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"class.blink::NGColspanCellTabulator", %"class.blink::NGColspanCellTabulator"* %25, i64 0, i32 1
  %40 = bitcast %"class.WTF::Vector.1942"* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #16
  %41 = bitcast %"class.blink::NGBlockNode"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #16
  %42 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %26, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %26, i64 0, i32 0, i32 1
  %44 = tail call { %"class.blink::LayoutBox"*, i64 } @_ZNK5blink11NGBlockNode10FirstChildEv(%"class.blink::NGBlockNode"* %0) #16
  %45 = extractvalue { %"class.blink::LayoutBox"*, i64 } %44, 0
  %46 = extractvalue { %"class.blink::LayoutBox"*, i64 } %44, 1
  store %"class.blink::LayoutBox"* %45, %"class.blink::LayoutBox"** %42, align 8
  %47 = bitcast i8* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = icmp eq %"class.blink::LayoutBox"* %45, null
  br i1 %48, label %112, label %49

49:                                               ; preds = %11
  %50 = bitcast %"struct.blink::NGTableTypes::Row"* %27 to i8*
  %51 = bitcast %"class.blink::NGBlockNode"* %0 to %"class.blink::LayoutObject"**
  %52 = bitcast { i64, i64 }* %14 to %"struct.blink::NGBoxStrut"*
  %53 = bitcast %"class.blink::NGBlockNode"* %26 to %"class.blink::LayoutObject"**
  %54 = getelementptr inbounds %"class.blink::NGTableBorders", %"class.blink::NGTableBorders"* %4, i64 0, i32 9
  %55 = getelementptr inbounds %"class.WTF::Vector.1932", %"class.WTF::Vector.1932"* %10, i64 0, i32 0, i32 0, i32 2
  %56 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %12, i64 0, i32 2
  %59 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %12, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %12, i64 0, i32 5
  %61 = bitcast %"class.blink::NGBlockNode"* %13 to i8*
  %62 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %13, i64 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %13, i64 0, i32 0, i32 1
  %64 = bitcast i8* %63 to i64*
  %65 = bitcast %"class.blink::NGBlockNode"* %13 to %"class.blink::NGLayoutInputNode"*
  %66 = getelementptr inbounds %"class.blink::NGColspanCellTabulator", %"class.blink::NGColspanCellTabulator"* %25, i64 0, i32 1, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.blink::NGColspanCellTabulator", %"class.blink::NGColspanCellTabulator"* %25, i64 0, i32 1, i32 0, i32 0, i32 2
  %68 = bitcast %"class.blink::NGBlockNode"* %13 to %"class.blink::LayoutObject"**
  %69 = bitcast { i64, i64 }* %14 to i8*
  %70 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 1
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 0
  %72 = bitcast %"class.blink::NGConstraintSpace"* %15 to i8*
  %73 = getelementptr inbounds %"class.WTF::Vector.1917", %"class.WTF::Vector.1917"* %3, i64 0, i32 0, i32 0, i32 2
  %74 = bitcast %"class.blink::NGBoxFragment"* %16 to i8*
  %75 = getelementptr inbounds %"class.blink::NGBoxFragment", %"class.blink::NGBoxFragment"* %16, i64 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.blink::NGBoxFragment", %"class.blink::NGBoxFragment"* %16, i64 0, i32 0, i32 1, i32 0
  %77 = getelementptr inbounds %"class.blink::NGBoxFragment", %"class.blink::NGBoxFragment"* %16, i64 0, i32 0, i32 1
  %78 = bitcast %"class.blink::WritingDirectionMode"* %77 to i16*
  %79 = bitcast %"struct.blink::NGTableTypes::CellBlockConstraint"* %17 to i8*
  %80 = bitcast %"class.blink::NGBoxFragment"* %16 to %"class.blink::NGPhysicalBoxFragment"**
  %81 = getelementptr inbounds %"class.WTF::Vector.1932", %"class.WTF::Vector.1932"* %10, i64 0, i32 0, i32 0, i32 1
  %82 = getelementptr inbounds %"class.WTF::Vector.1932", %"class.WTF::Vector.1932"* %10, i64 0, i32 0, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.blink::NGTableTypes::CellBlockConstraint", %"struct.blink::NGTableTypes::CellBlockConstraint"* %17, i64 0, i32 7
  %84 = getelementptr inbounds %"struct.blink::NGTableTypes::CellBlockConstraint", %"struct.blink::NGTableTypes::CellBlockConstraint"* %17, i64 0, i32 0, i32 0
  %85 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %18 to i8*
  %86 = bitcast float* %19 to i8*
  %87 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %88 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %89 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %12, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.blink::NGTableTypes::Row", %"struct.blink::NGTableTypes::Row"* %27, i64 0, i32 0, i32 0
  %91 = getelementptr inbounds %"struct.blink::NGTableTypes::Row", %"struct.blink::NGTableTypes::Row"* %27, i64 0, i32 1, i32 0
  %92 = getelementptr inbounds %"struct.blink::NGTableTypes::Row", %"struct.blink::NGTableTypes::Row"* %27, i64 0, i32 2
  %93 = bitcast %"class.absl::optional"* %92 to i32*
  %94 = getelementptr inbounds %"struct.blink::NGTableTypes::Row", %"struct.blink::NGTableTypes::Row"* %27, i64 0, i32 3
  %95 = getelementptr inbounds %"struct.blink::NGTableTypes::Row", %"struct.blink::NGTableTypes::Row"* %27, i64 0, i32 4
  %96 = getelementptr inbounds %"struct.blink::NGTableTypes::Row", %"struct.blink::NGTableTypes::Row"* %27, i64 0, i32 5
  %97 = getelementptr inbounds %"struct.blink::NGTableTypes::Row", %"struct.blink::NGTableTypes::Row"* %27, i64 0, i32 6
  %98 = getelementptr inbounds %"struct.blink::NGTableTypes::Row", %"struct.blink::NGTableTypes::Row"* %27, i64 0, i32 7
  %99 = getelementptr inbounds %"struct.blink::NGTableTypes::Row", %"struct.blink::NGTableTypes::Row"* %27, i64 0, i32 8
  %100 = bitcast float* %28 to i8*
  %101 = getelementptr inbounds %"struct.blink::NGTableTypes::Row", %"struct.blink::NGTableTypes::Row"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %102 = bitcast %"class.absl::optional"* %92 to i64*
  %103 = getelementptr inbounds %"class.WTF::Vector.1927", %"class.WTF::Vector.1927"* %9, i64 0, i32 0, i32 0, i32 1
  %104 = getelementptr inbounds %"class.WTF::Vector.1927", %"class.WTF::Vector.1927"* %9, i64 0, i32 0, i32 0, i32 0
  %105 = bitcast %"class.logging::CheckOpResult"* %22 to i8*
  %106 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %22, i64 0, i32 0
  %107 = bitcast %"class.logging::CheckOpResult"* %21 to i8*
  %108 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %21, i64 0, i32 0
  %109 = bitcast %"class.logging::CheckError"* %23 to i8*
  %110 = getelementptr inbounds %"class.WTF::Vector.1942", %"class.WTF::Vector.1942"* %39, i64 0, i32 0, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.blink::NGTableTypes::Row", %"struct.blink::NGTableTypes::Row"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %167

112:                                              ; preds = %799, %11
  %113 = phi i32 [ 0, %11 ], [ %748, %799 ]
  %114 = phi i32 [ %31, %11 ], [ %172, %799 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #16
  %115 = icmp eq i32 %114, %31
  %116 = xor i32 %31, -1
  %117 = add i32 %114, %116
  %118 = select i1 %115, i32 0, i32 %117
  %119 = icmp ugt i32 %118, 33554430
  %120 = shl i32 %118, 6
  %121 = select i1 %119, i32 2147483647, i32 %120
  %122 = sext i32 %5 to i64
  %123 = sext i32 %121 to i64
  %124 = mul nsw i64 %123, %122
  %125 = sdiv i64 %124, 64
  %126 = ashr i64 %125, 32
  %127 = trunc i64 %126 to i32
  %128 = trunc i64 %125 to i32
  %129 = ashr i32 %128, 31
  %130 = icmp eq i32 %129, %127
  br i1 %130, label %135, label %131

131:                                              ; preds = %112
  %132 = xor i32 %121, %5
  %133 = lshr i32 %132, 31
  %134 = add nuw i32 %133, 2147483647
  br label %135

135:                                              ; preds = %112, %131
  %136 = phi i32 [ %128, %112 ], [ %134, %131 ]
  %137 = icmp slt i32 %136, 0
  %138 = select i1 %137, i32 -2147483648, i32 2147483647
  %139 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %113, i32 %136) #16
  %140 = extractvalue { i32, i1 } %139, 1
  %141 = extractvalue { i32, i1 } %139, 0
  %142 = select i1 %140, i32 %138, i32 %141, !prof !4
  %143 = load %"struct.blink::NGTableTypes::RowspanCell"*, %"struct.blink::NGTableTypes::RowspanCell"** %33, align 8
  %144 = load i32, i32* %35, align 4
  %145 = zext i32 %144 to i64
  %146 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %143, i64 %145
  %147 = getelementptr inbounds %"struct.std::__1::__less.2116", %"struct.std::__1::__less.2116"* %20, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %147) #16
  %148 = mul nuw nsw i64 %145, 52
  %149 = icmp ugt i64 %148, 6656
  br i1 %149, label %150, label %158

150:                                              ; preds = %135, %155
  %151 = phi i64 [ %156, %155 ], [ %145, %135 ]
  %152 = mul i64 %151, 52
  %153 = call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %152, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #16
  %154 = icmp eq i8* %153, null
  br i1 %154, label %155, label %159

155:                                              ; preds = %150
  %156 = lshr i64 %151, 1
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %150

158:                                              ; preds = %155, %135
  call void @_ZNSt3__113__stable_sortIRNS_6__lessIN5blink12NGTableTypes11RowspanCellES4_EEPS4_EEvT0_S8_T_NS_15iterator_traitsIS8_E15difference_typeEPNSB_10value_typeEl(%"struct.blink::NGTableTypes::RowspanCell"* %143, %"struct.blink::NGTableTypes::RowspanCell"* %146, %"struct.std::__1::__less.2116"* nonnull dereferenceable(1) %20, i64 %145, %"struct.blink::NGTableTypes::RowspanCell"* null, i64 0) #16
  br label %161

159:                                              ; preds = %150
  %160 = bitcast i8* %153 to %"struct.blink::NGTableTypes::RowspanCell"*
  call void @_ZNSt3__113__stable_sortIRNS_6__lessIN5blink12NGTableTypes11RowspanCellES4_EEPS4_EEvT0_S8_T_NS_15iterator_traitsIS8_E15difference_typeEPNSB_10value_typeEl(%"struct.blink::NGTableTypes::RowspanCell"* %143, %"struct.blink::NGTableTypes::RowspanCell"* %146, %"struct.std::__1::__less.2116"* nonnull dereferenceable(1) %20, i64 %145, %"struct.blink::NGTableTypes::RowspanCell"* nonnull %160, i64 %151) #16
  call void @_ZdlPv(i8* nonnull %153) #17
  br label %161

161:                                              ; preds = %158, %159
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %147) #16
  %162 = load %"struct.blink::NGTableTypes::RowspanCell"*, %"struct.blink::NGTableTypes::RowspanCell"** %33, align 8
  %163 = load i32, i32* %35, align 4
  %164 = zext i32 %163 to i64
  %165 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %162, i64 %164
  %166 = icmp eq i32 %163, 0
  br i1 %166, label %808, label %827

167:                                              ; preds = %49, %799
  %168 = phi %"class.blink::LayoutBox"* [ %45, %49 ], [ %804, %799 ]
  %169 = phi i32 [ %31, %49 ], [ %172, %799 ]
  %170 = phi float [ 0.000000e+00, %49 ], [ %728, %799 ]
  %171 = phi i32 [ 0, %49 ], [ %748, %799 ]
  store i32 0, i32* %38, align 8
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %50) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %50, i8* align 4 bitcast ({ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", { { { { i8, [3 x i8], %union.anon.40 } } } }, i32, i32, i8, i8, i8, i8 }* @__const._ZN5blink21NGTableAlgorithmUtils34ComputeSectionMinimumRowBlockSizesERKNS_11NGBlockNodeENS_10LayoutUnitEbRKN3WTF6VectorINS_12NGTableTypes14ColumnLocationELj0ENS5_18PartitionAllocatorEEERKNS_14NGTableBordersES4_jbPNS6_INS7_7SectionELj0ES9_EEPNS6_INS7_3RowELj0ES9_EEPNS6_INS7_19CellBlockConstraintELj0ES9_EE.row_constraint to i8*), i64 28, i1 false)
  %172 = add i32 %169, 1
  %173 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %51, align 8
  %174 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %173, i64 0, i32 5, i32 0
  %175 = bitcast %"class.blink::ComputedStyle"** %174 to %"class.blink::ComputedStyleBase"**
  %176 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %175, align 8
  %177 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %176, i64 0, i32 9
  %178 = bitcast [20 x i8]* %177 to i160*
  %179 = load i160, i160* %178, align 8
  %180 = and i160 %179, 3802951800684688204490109616128
  %181 = icmp eq i160 %180, 2535301200456458802993406410752
  %182 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %168, i64 0, i32 0, i32 0, i32 5, i32 0
  %183 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %182, align 8, !noalias !8
  %184 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %183, i64 0, i32 0, i32 9
  %185 = bitcast [20 x i8]* %184 to i160*
  %186 = load i160, i160* %185, align 8, !noalias !8
  %187 = lshr i160 %186, 102
  %188 = trunc i160 %187 to i16
  %189 = and i16 %188, 3
  %190 = load i8, i8* %54, align 4, !range !2, !noalias !8
  %191 = icmp ne i8 %190, 0
  %192 = load i32, i32* %55, align 4, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %56) #16, !noalias !8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %56, i8 -86, i64 32, i1 false) #16, !noalias !8
  store i8 0, i8* %56, align 4, !noalias !8
  store i8 0, i8* %57, align 4, !noalias !8
  store i8 0, i8* %58, align 4, !noalias !8
  store i8 0, i8* %59, align 4, !noalias !8
  store i8 0, i8* %60, align 4, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #16, !noalias !8
  %193 = call { %"class.blink::LayoutBox"*, i64 } @_ZNK5blink11NGBlockNode10FirstChildEv(%"class.blink::NGBlockNode"* nonnull %26) #16, !noalias !8
  %194 = extractvalue { %"class.blink::LayoutBox"*, i64 } %193, 0
  %195 = extractvalue { %"class.blink::LayoutBox"*, i64 } %193, 1
  store %"class.blink::LayoutBox"* %194, %"class.blink::LayoutBox"** %62, align 8, !noalias !8
  store i64 %195, i64* %64, align 8, !noalias !8
  %196 = icmp eq %"class.blink::LayoutBox"* %194, null
  br i1 %196, label %203, label %197

197:                                              ; preds = %167
  %198 = lshr i160 %186, 107
  %199 = trunc i160 %198 to i16
  %200 = and i16 %199, 256
  %201 = or i16 %200, %189
  %202 = icmp ne i16 %189, 0
  br label %226

203:                                              ; preds = %603, %167
  %204 = phi i32 [ 0, %167 ], [ %588, %603 ]
  %205 = phi float [ 0xFFFFFFFFE0000000, %167 ], [ %589, %603 ]
  %206 = phi float [ 0xFFFFFFFFE0000000, %167 ], [ %590, %603 ]
  %207 = phi i8 [ 0, %167 ], [ %591, %603 ]
  %208 = phi i24 [ -5592406, %167 ], [ %592, %603 ]
  %209 = phi i8 [ 0, %167 ], [ %593, %603 ]
  %210 = phi i8 [ 0, %167 ], [ %594, %603 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #16, !noalias !8
  %211 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %53, align 8, !noalias !8
  %212 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %211, i64 0, i32 5, i32 0
  %213 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %212, align 8, !noalias !8
  %214 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %213, i64 0, i32 0, i32 9
  %215 = bitcast [20 x i8]* %214 to i160*
  %216 = load i160, i160* %215, align 8, !noalias !8
  %217 = and i160 %216, 15211807202738752817960438464512
  %218 = icmp eq i160 %217, 0
  %219 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %213, i64 0, i32 0, i32 5, i32 0, i32 0
  %220 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %219, align 8, !noalias !8
  %221 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %220, i64 0, i32 3
  %222 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %220, i64 0, i32 8
  %223 = select i1 %218, %"class.blink::Length"* %221, %"class.blink::Length"* %222
  %224 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %223, i64 0, i32 2
  %225 = load i8, i8* %224, align 1, !noalias !8
  switch i8 %225, label %650 [
    i8 1, label %609
    i8 2, label %627
  ]

226:                                              ; preds = %603, %197
  %227 = phi i32 [ 0, %197 ], [ %588, %603 ]
  %228 = phi %"class.blink::LayoutBox"* [ %194, %197 ], [ %605, %603 ]
  %229 = phi i8 [ 0, %197 ], [ %594, %603 ]
  %230 = phi i8 [ 0, %197 ], [ %593, %603 ]
  %231 = phi i24 [ -5592406, %197 ], [ %592, %603 ]
  %232 = phi i8 [ 0, %197 ], [ %591, %603 ]
  %233 = phi float [ 0xFFFFFFFFE0000000, %197 ], [ %590, %603 ]
  %234 = phi float [ 0xFFFFFFFFE0000000, %197 ], [ %589, %603 ]
  %235 = load %"struct.blink::NGColspanCellTabulator::Cell"*, %"struct.blink::NGColspanCellTabulator::Cell"** %66, align 8, !noalias !8
  %236 = load i32, i32* %67, align 4, !noalias !8
  %237 = zext i32 %236 to i64
  %238 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %235, i64 %237
  %239 = icmp eq i32 %236, 0
  %240 = load i32, i32* %38, align 8, !noalias !8
  br i1 %239, label %257, label %241

241:                                              ; preds = %226, %253
  %242 = phi i32 [ %254, %253 ], [ %240, %226 ]
  %243 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %255, %253 ], [ %235, %226 ]
  %244 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %243, i64 0, i32 0
  %245 = load i32, i32* %244, align 4, !noalias !8
  %246 = icmp ugt i32 %245, %242
  br i1 %246, label %253, label %247

247:                                              ; preds = %241
  %248 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %243, i64 0, i32 1
  %249 = load i32, i32* %248, align 4, !noalias !8
  %250 = add i32 %249, %245
  %251 = icmp ugt i32 %250, %242
  br i1 %251, label %252, label %253

252:                                              ; preds = %247
  store i32 %250, i32* %38, align 8, !noalias !8
  br label %253

253:                                              ; preds = %252, %247, %241
  %254 = phi i32 [ %242, %241 ], [ %250, %252 ], [ %242, %247 ]
  %255 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %243, i64 1
  %256 = icmp eq %"struct.blink::NGColspanCellTabulator::Cell"* %255, %238
  br i1 %256, label %257, label %241

257:                                              ; preds = %253, %226
  %258 = phi i32 [ %240, %226 ], [ %254, %253 ]
  %259 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %228, i64 0, i32 0, i32 0, i32 5, i32 0
  %260 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %259, align 8, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #16, !noalias !8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 16, i1 false) #16, !noalias !8
  %261 = call { i64, i64 } @_ZNK5blink14NGTableBorders10CellBorderERKNS_11NGBlockNodeEjjjNS_20WritingDirectionModeE(%"class.blink::NGTableBorders"* %4, %"class.blink::NGBlockNode"* nonnull dereferenceable(16) %13, i32 %169, i32 %258, i32 %6, i16 %201) #16, !noalias !8
  %262 = extractvalue { i64, i64 } %261, 0
  store i64 %262, i64* %71, align 8, !noalias !8
  %263 = extractvalue { i64, i64 } %261, 1
  store i64 %263, i64* %70, align 8, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %72) #16, !noalias !8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 32, i1 false) #16, !noalias !8
  %264 = load i32, i32* %38, align 8, !noalias !8
  %265 = call i32 @_ZNK5blink17NGLayoutInputNode16TableCellColspanEv(%"class.blink::NGLayoutInputNode"* nonnull %65) #16, !noalias !11
  %266 = add i32 %264, -1
  %267 = add i32 %266, %265
  %268 = load i32, i32* %73, align 4, !noalias !11
  %269 = add i32 %268, -1
  %270 = icmp ult i32 %269, %267
  %271 = select i1 %270, i32 %269, i32 %267
  %272 = call dereferenceable(12) %"struct.blink::NGTableTypes::ColumnLocation"* @_ZNK3WTF6VectorIN5blink12NGTableTypes14ColumnLocationELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1917"* %3, i32 %271) #16, !noalias !11
  %273 = call dereferenceable(12) %"struct.blink::NGTableTypes::ColumnLocation"* @_ZNK3WTF6VectorIN5blink12NGTableTypes14ColumnLocationELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1917"* %3, i32 %271) #16, !noalias !11
  %274 = getelementptr inbounds %"struct.blink::NGTableTypes::ColumnLocation", %"struct.blink::NGTableTypes::ColumnLocation"* %272, i64 0, i32 0, i32 0
  %275 = load i32, i32* %274, align 4, !noalias !11
  %276 = getelementptr inbounds %"struct.blink::NGTableTypes::ColumnLocation", %"struct.blink::NGTableTypes::ColumnLocation"* %273, i64 0, i32 1, i32 0
  %277 = load i32, i32* %276, align 4, !noalias !11
  %278 = icmp slt i32 %277, 0
  %279 = select i1 %278, i32 -2147483648, i32 2147483647
  %280 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %275, i32 %277) #16
  %281 = extractvalue { i32, i1 } %280, 1
  %282 = extractvalue { i32, i1 } %280, 0
  %283 = select i1 %281, i32 %279, i32 %282, !prof !4
  %284 = call dereferenceable(12) %"struct.blink::NGTableTypes::ColumnLocation"* @_ZNK3WTF6VectorIN5blink12NGTableTypes14ColumnLocationELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1917"* %3, i32 %264) #16, !noalias !11
  %285 = getelementptr inbounds %"struct.blink::NGTableTypes::ColumnLocation", %"struct.blink::NGTableTypes::ColumnLocation"* %284, i64 0, i32 0, i32 0
  %286 = load i32, i32* %285, align 4, !noalias !11
  %287 = icmp sgt i32 %286, -1
  %288 = select i1 %287, i32 -2147483648, i32 2147483647
  %289 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %283, i32 %286) #16
  %290 = extractvalue { i32, i1 } %289, 1
  %291 = extractvalue { i32, i1 } %289, 0
  %292 = select i1 %290, i32 %288, i32 %291, !prof !4
  %293 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %62, align 8, !noalias !11
  %294 = load i64, i64* %64, align 8, !noalias !11
  %295 = zext i32 %292 to i64
  %296 = or i64 %295, -274877906944
  call void @_ZN5blink21NGTableAlgorithmUtils30CreateTableCellConstraintSpaceENS_20WritingDirectionModeENS_11NGBlockNodeERKNS_10NGBoxStrutENS_11LogicalSizeENS_10LayoutUnitEN4absl8optionalIS7_EEjbbbbNS_11NGCacheSlotE(%"class.blink::NGConstraintSpace"* nonnull sret %15, i16 %201, %"class.blink::LayoutBox"* %293, i64 %294, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %52, i64 %296, i32 %1, i64 0, i32 %264, i1 zeroext false, i1 zeroext %2, i1 zeroext false, i1 zeroext %191, i32 1) #16, !noalias !8
  %297 = call %"class.blink::NGLayoutResult"* @_ZNK5blink11NGBlockNode6LayoutERKNS_17NGConstraintSpaceEPKNS_17NGBlockBreakTokenEPKNS_12NGEarlyBreakE(%"class.blink::NGBlockNode"* nonnull %13, %"class.blink::NGConstraintSpace"* nonnull dereferenceable(32) %15, %"class.blink::NGBlockBreakToken"* null, %"class.blink::NGEarlyBreak"* null) #16, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #16, !noalias !8
  %298 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %297, i64 0, i32 3, i32 0
  %299 = bitcast %"class.blink::NGPhysicalFragment"** %298 to %"class.blink::NGPhysicalBoxFragment"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 16, i1 false) #16, !noalias !8
  %300 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %299, align 8, !noalias !8
  %301 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %300, i64 0, i32 0
  store %"class.blink::NGPhysicalFragment"* %301, %"class.blink::NGPhysicalFragment"** %75, align 8, !noalias !8
  store i16 %201, i16* %78, align 8, !noalias !8
  %302 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %68, align 8, !noalias !8
  %303 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %302, i64 0, i32 5, i32 0
  %304 = bitcast %"class.blink::ComputedStyle"** %303 to %"class.blink::ComputedStyleBase"**
  %305 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %304, align 8, !noalias !8
  %306 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %305, i64 0, i32 9
  %307 = bitcast [20 x i8]* %306 to i160*
  %308 = load i160, i160* %307, align 8, !noalias !8
  %309 = and i160 %308, 15211807202738752817960438464512
  %310 = icmp eq i160 %309, 0
  %311 = xor i1 %202, %310
  %312 = call i32 @_ZNK5blink17NGLayoutInputNode16TableCellRowspanEv(%"class.blink::NGLayoutInputNode"* nonnull %65) #16, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %79) #16, !noalias !8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %79, i8 -86, i64 44, i1 false) #16, !noalias !8
  %313 = load i8, i8* %76, align 8, !noalias !8
  %314 = icmp eq i8 %313, 0
  %315 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %75, align 8, !noalias !8
  %316 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %315, i64 0, i32 2, i32 1, i32 0
  %317 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %315, i64 0, i32 2, i32 0, i32 0
  %318 = select i1 %314, i32* %316, i32* %317
  %319 = load i32, i32* %318, align 4, !noalias !8
  %320 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %315, i64 0, i32 1
  %321 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %320, align 8, !noalias !8
  %322 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %315, i64 0, i32 3
  %323 = bitcast i24* %322 to i32*
  %324 = load i32, i32* %323, align 8, !noalias !8
  %325 = lshr i32 %324, 10
  %326 = and i32 %325, 3
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %328, label %331

328:                                              ; preds = %257
  %329 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %321, i64 0, i32 5, i32 0
  %330 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %329, align 8, !noalias !8
  br label %333

331:                                              ; preds = %257
  %332 = call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %321, i32 %326) #16, !noalias !8
  br label %333

333:                                              ; preds = %331, %328
  %334 = phi %"class.blink::ComputedStyle"* [ %330, %328 ], [ %332, %331 ]
  %335 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %334, i64 0, i32 0, i32 9
  %336 = bitcast [20 x i8]* %335 to i160*
  %337 = load i160, i160* %336, align 8, !noalias !8
  %338 = lshr i160 %337, 102
  %339 = trunc i160 %338 to i8
  %340 = and i8 %339, 3
  %341 = icmp eq i8 %313, %340
  br i1 %341, label %344, label %342

342:                                              ; preds = %333
  %343 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %75, align 8, !noalias !8
  br label %355

344:                                              ; preds = %333
  %345 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %80, align 8, !noalias !8
  %346 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %345, i64 0, i32 0, i32 3
  %347 = bitcast i24* %346 to i32*
  %348 = load i32, i32* %347, align 8, !noalias !8
  %349 = and i32 %348, 4194304
  %350 = icmp eq i32 %349, 0
  %351 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %345, i64 0, i32 0
  br i1 %350, label %355, label %352

352:                                              ; preds = %344
  %353 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %345, i64 0, i32 3, i32 0
  %354 = load i32, i32* %353, align 4, !noalias !8
  br label %373

355:                                              ; preds = %344, %342
  %356 = phi %"class.blink::NGPhysicalFragment"* [ %343, %342 ], [ %351, %344 ]
  %357 = load i8, i8* %76, align 8, !noalias !8
  %358 = icmp eq i8 %357, 0
  %359 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %356, i64 0, i32 2, i32 1, i32 0
  %360 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %356, i64 0, i32 2, i32 0, i32 0
  %361 = select i1 %358, i32* %359, i32* %360
  %362 = load i32, i32* %361, align 4, !noalias !8
  br i1 %358, label %373, label %363

363:                                              ; preds = %355
  %364 = sdiv i32 %362, 2
  %365 = sext i32 %364 to i64
  %366 = call i1 @llvm.is.constant.i64(i64 %365) #16
  br i1 %366, label %373, label %367

367:                                              ; preds = %363
  %368 = icmp slt i32 %362, -1
  %369 = select i1 %368, i32 -2147483648, i32 2147483647
  %370 = add nsw i64 %365, 2147483648
  %371 = icmp ult i64 %370, 4294967296
  %372 = select i1 %371, i32 %364, i32 %369, !prof !3
  br label %373

373:                                              ; preds = %367, %363, %355, %352
  %374 = phi i32 [ %354, %352 ], [ %372, %367 ], [ %362, %355 ], [ %364, %363 ]
  %375 = load i32, i32* %38, align 8, !noalias !8
  call void @_ZN5blink12NGTableTypes25CreateCellBlockConstraintERKNS_17NGLayoutInputNodeENS_10LayoutUnitES4_RKNS_10NGBoxStrutEjjj(%"struct.blink::NGTableTypes::CellBlockConstraint"* nonnull sret %17, %"class.blink::NGLayoutInputNode"* nonnull dereferenceable(16) %65, i32 %319, i32 %374, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %52, i32 %169, i32 %375, i32 %312) #16, !noalias !8
  call void @_ZN5blink22NGColspanCellTabulator11ProcessCellERKNS_11NGBlockNodeE(%"class.blink::NGColspanCellTabulator"* nonnull %25, %"class.blink::NGBlockNode"* nonnull dereferenceable(16) %13) #16, !noalias !8
  %376 = load i32, i32* %55, align 4, !noalias !8
  %377 = load i32, i32* %81, align 8, !noalias !8
  %378 = icmp eq i32 %376, %377
  br i1 %378, label %386, label %379, !prof !4

379:                                              ; preds = %373
  %380 = load %"struct.blink::NGTableTypes::CellBlockConstraint"*, %"struct.blink::NGTableTypes::CellBlockConstraint"** %82, align 8, !noalias !8
  %381 = zext i32 %376 to i64
  %382 = getelementptr inbounds %"struct.blink::NGTableTypes::CellBlockConstraint", %"struct.blink::NGTableTypes::CellBlockConstraint"* %380, i64 %381
  %383 = bitcast %"struct.blink::NGTableTypes::CellBlockConstraint"* %382 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %383, i8* nonnull align 4 %79, i64 44, i1 false) #16, !noalias !8
  %384 = load i32, i32* %55, align 4, !noalias !8
  %385 = add i32 %384, 1
  store i32 %385, i32* %55, align 4, !noalias !8
  br label %387

386:                                              ; preds = %373
  call void @_ZN3WTF6VectorIN5blink12NGTableTypes19CellBlockConstraintELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.1932"* %10, %"struct.blink::NGTableTypes::CellBlockConstraint"* nonnull dereferenceable(44) %17) #16, !noalias !8
  br label %387

387:                                              ; preds = %386, %379
  %388 = load i8, i8* %83, align 4, !range !2, !noalias !8
  %389 = icmp ne i8 %388, 0
  %390 = icmp eq i32 %312, 1
  %391 = and i1 %390, %389
  %392 = zext i1 %391 to i8
  %393 = or i8 %229, %392
  %394 = load i32, i32* %84, align 4, !noalias !8
  %395 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %260, i64 0, i32 0, i32 9
  %396 = bitcast [20 x i8]* %395 to i160*
  %397 = load i160, i160* %396, align 8, !noalias !8
  %398 = lshr i160 %397, 64
  %399 = trunc i160 %398 to i32
  %400 = and i32 %399, 15
  %401 = icmp ult i32 %400, 10
  %402 = trunc i32 %400 to i10
  %403 = lshr i10 -195, %402
  %404 = and i10 %403, 1
  %405 = icmp ne i10 %404, 0
  %406 = and i1 %401, %405
  %407 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %297, i64 0, i32 6, i32 0
  %408 = load i32, i32* %407, align 4, !noalias !8
  %409 = and i32 %408, 4096
  %410 = icmp ne i32 %409, 0
  call void @_ZN5blink22NGRowBaselineTabulator11ProcessCellERKNS_13NGBoxFragmentENS_10LayoutUnitEbbb(%"class.blink::NGRowBaselineTabulator"* nonnull %12, %"class.blink::NGBoxFragment"* nonnull dereferenceable(16) %16, i32 %394, i1 zeroext %406, i1 zeroext %311, i1 zeroext %410) #16, !noalias !8
  %411 = load i160, i160* %396, align 8, !noalias !8
  %412 = and i160 %411, 15211807202738752817960438464512
  %413 = icmp eq i160 %412, 0
  %414 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %260, i64 0, i32 0, i32 5, i32 0, i32 0
  %415 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %414, align 8, !noalias !8
  %416 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %415, i64 0, i32 3
  %417 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %415, i64 0, i32 8
  %418 = select i1 %413, %"class.blink::Length"* %416, %"class.blink::Length"* %417
  %419 = select i1 %413, %"class.blink::Length"* %417, %"class.blink::Length"* %416
  %420 = select i1 %311, %"class.blink::Length"* %418, %"class.blink::Length"* %419
  %421 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %420, i64 0, i32 2
  %422 = load i8, i8* %421, align 1, !noalias !8
  switch i8 %422, label %544 [
    i8 1, label %423
    i8 2, label %434
  ]

423:                                              ; preds = %387
  %424 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %420, i64 0, i32 3
  %425 = load i8, i8* %424, align 2, !range !2, !noalias !8
  %426 = icmp eq i8 %425, 0
  br i1 %426, label %430, label %427

427:                                              ; preds = %423
  %428 = bitcast %"class.blink::Length"* %420 to float*
  %429 = load float, float* %428, align 4, !noalias !8
  br label %544

430:                                              ; preds = %423
  %431 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %420, i64 0, i32 0, i32 0
  %432 = load i32, i32* %431, align 4, !noalias !8
  %433 = sitofp i32 %432 to float
  br label %544

434:                                              ; preds = %387
  %435 = call { i64, i64 } @_ZN5blink14ComputePaddingERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* nonnull dereferenceable(32) %15, %"class.blink::ComputedStyle"* dereferenceable(104) %260) #16, !noalias !8
  %436 = extractvalue { i64, i64 } %435, 1
  %437 = load i64, i64* %70, align 8, !noalias !8
  %438 = trunc i64 %437 to i32
  %439 = trunc i64 %436 to i32
  %440 = icmp slt i32 %439, 0
  %441 = select i1 %440, i32 -2147483648, i32 2147483647
  %442 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %438, i32 %439) #16
  %443 = extractvalue { i32, i1 } %442, 1
  %444 = extractvalue { i32, i1 } %442, 0
  %445 = select i1 %443, i32 %441, i32 %444, !prof !4
  %446 = lshr i64 %437, 32
  %447 = trunc i64 %446 to i32
  %448 = lshr i64 %436, 32
  %449 = trunc i64 %448 to i32
  %450 = icmp slt i32 %449, 0
  %451 = select i1 %450, i32 -2147483648, i32 2147483647
  %452 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %447, i32 %449) #16
  %453 = extractvalue { i32, i1 } %452, 1
  %454 = extractvalue { i32, i1 } %452, 0
  %455 = select i1 %453, i32 %451, i32 %454, !prof !4
  %456 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %68, align 8, !noalias !8
  %457 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %456, i64 0, i32 6, i32 0, i32 0
  %458 = load %"class.blink::Node"*, %"class.blink::Node"** %457, align 8, !noalias !8
  %459 = icmp eq %"class.blink::Node"* %458, null
  br i1 %459, label %460, label %467

460:                                              ; preds = %434, %460
  %461 = phi %"class.blink::LayoutObject"* [ %463, %460 ], [ %456, %434 ]
  %462 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %461, i64 0, i32 7
  %463 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %462, align 8, !noalias !8
  %464 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %463, i64 0, i32 6, i32 0, i32 0
  %465 = load %"class.blink::Node"*, %"class.blink::Node"** %464, align 8, !noalias !8
  %466 = icmp eq %"class.blink::Node"* %465, null
  br i1 %466, label %460, label %467

467:                                              ; preds = %460, %434
  %468 = phi %"class.blink::Node"* [ %458, %434 ], [ %465, %460 ]
  %469 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %468, i64 0, i32 3, i32 0, i32 0
  %470 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %469, align 8, !noalias !8
  %471 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %470, i64 0, i32 2, i32 0, i32 0
  %472 = load %"class.blink::Document"*, %"class.blink::Document"** %471, align 8, !noalias !8
  %473 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %472, i64 0, i32 33
  %474 = load i32, i32* %473, align 8, !noalias !8
  %475 = icmp eq i32 %474, 0
  br i1 %475, label %482, label %476

476:                                              ; preds = %467
  %477 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %414, align 8, !noalias !8
  %478 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %477, i64 0, i32 11
  %479 = load i8, i8* %478, align 4, !noalias !8
  %480 = and i8 %479, 2
  %481 = icmp eq i8 %480, 0
  br i1 %481, label %482, label %511

482:                                              ; preds = %476, %467
  %483 = icmp slt i32 %455, 0
  %484 = select i1 %483, i32 -2147483648, i32 2147483647
  %485 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %445, i32 %455) #16
  %486 = extractvalue { i32, i1 } %485, 1
  %487 = extractvalue { i32, i1 } %485, 0
  %488 = select i1 %486, i32 %484, i32 %487, !prof !4
  %489 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %420, i64 0, i32 3
  %490 = load i8, i8* %489, align 2, !range !2, !noalias !8
  %491 = icmp eq i8 %490, 0
  br i1 %491, label %495, label %492

492:                                              ; preds = %482
  %493 = bitcast %"class.blink::Length"* %420 to float*
  %494 = load float, float* %493, align 4, !noalias !8
  br label %499

495:                                              ; preds = %482
  %496 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %420, i64 0, i32 0, i32 0
  %497 = load i32, i32* %496, align 4, !noalias !8
  %498 = sitofp i32 %497 to float
  br label %499

499:                                              ; preds = %495, %492
  %500 = phi float [ %494, %492 ], [ %498, %495 ]
  %501 = fmul float %500, 6.400000e+01
  %502 = fcmp ult float %501, 0xC1E0000000000000
  %503 = fcmp ugt float %501, 0x41DFFFFFE0000000
  %504 = fcmp ogt float %501, 0xC1E0000000000000
  %505 = select i1 %504, float %501, float 0xC1E0000000000000
  %506 = fptosi float %505 to i32
  %507 = select i1 %502, i32 0, i32 2147483647
  %508 = select i1 %503, i32 %507, i32 %506
  %509 = icmp slt i32 %488, %508
  %510 = select i1 %509, i32 %508, i32 %488
  br label %544

511:                                              ; preds = %476
  %512 = icmp slt i32 %455, 0
  %513 = select i1 %512, i32 -2147483648, i32 2147483647
  %514 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %445, i32 %455) #16
  %515 = extractvalue { i32, i1 } %514, 1
  %516 = extractvalue { i32, i1 } %514, 0
  %517 = select i1 %515, i32 %513, i32 %516, !prof !4
  %518 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %420, i64 0, i32 3
  %519 = load i8, i8* %518, align 2, !range !2, !noalias !8
  %520 = icmp eq i8 %519, 0
  br i1 %520, label %524, label %521

521:                                              ; preds = %511
  %522 = bitcast %"class.blink::Length"* %420 to float*
  %523 = load float, float* %522, align 4, !noalias !8
  br label %528

524:                                              ; preds = %511
  %525 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %420, i64 0, i32 0, i32 0
  %526 = load i32, i32* %525, align 4, !noalias !8
  %527 = sitofp i32 %526 to float
  br label %528

528:                                              ; preds = %524, %521
  %529 = phi float [ %523, %521 ], [ %527, %524 ]
  %530 = fmul float %529, 6.400000e+01
  %531 = fcmp ult float %530, 0xC1E0000000000000
  %532 = fcmp ugt float %530, 0x41DFFFFFE0000000
  %533 = fcmp ogt float %530, 0xC1E0000000000000
  %534 = select i1 %533, float %530, float 0xC1E0000000000000
  %535 = fptosi float %534 to i32
  %536 = select i1 %531, i32 0, i32 2147483647
  %537 = select i1 %532, i32 %536, i32 %535
  %538 = icmp slt i32 %537, 0
  %539 = select i1 %538, i32 -2147483648, i32 2147483647
  %540 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %517, i32 %537) #16
  %541 = extractvalue { i32, i1 } %540, 1
  %542 = extractvalue { i32, i1 } %540, 0
  %543 = select i1 %541, i32 %539, i32 %542, !prof !4
  br label %544

544:                                              ; preds = %528, %499, %430, %427, %387
  %545 = phi float [ 0xFFFFFFFFE0000000, %528 ], [ 0xFFFFFFFFE0000000, %499 ], [ 0xFFFFFFFFE0000000, %387 ], [ %429, %427 ], [ %433, %430 ]
  %546 = phi i32 [ %543, %528 ], [ %510, %499 ], [ -1431655766, %387 ], [ -1431655766, %427 ], [ -1431655766, %430 ]
  %547 = phi i8 [ 0, %528 ], [ 0, %499 ], [ 0, %387 ], [ 1, %427 ], [ 1, %430 ]
  %548 = phi i8 [ 1, %528 ], [ 1, %499 ], [ 0, %387 ], [ 0, %427 ], [ 0, %430 ]
  br i1 %390, label %549, label %570

549:                                              ; preds = %544
  %550 = icmp eq i8 %548, 0
  %551 = icmp eq i8 %547, 0
  %552 = select i1 %550, i8 %393, i8 1
  br i1 %551, label %558, label %553

553:                                              ; preds = %549
  %554 = icmp eq i8 %232, 0
  %555 = select i1 %554, float 0.000000e+00, float %234
  %556 = fcmp olt float %555, %545
  %557 = select i1 %556, float %545, float %555
  br label %558

558:                                              ; preds = %553, %549
  %559 = phi i8 [ 1, %553 ], [ %552, %549 ]
  %560 = phi float [ %557, %553 ], [ %234, %549 ]
  %561 = phi float [ %557, %553 ], [ %233, %549 ]
  %562 = phi i8 [ 1, %553 ], [ %232, %549 ]
  %563 = phi i24 [ 0, %553 ], [ %231, %549 ]
  %564 = load i32, i32* %84, align 4, !noalias !8
  %565 = select i1 %550, i32 0, i32 %546
  %566 = icmp slt i32 %227, %564
  %567 = select i1 %566, i32 %564, i32 %227
  %568 = icmp slt i32 %567, %565
  %569 = select i1 %568, i32 %565, i32 %567
  br label %587

570:                                              ; preds = %544
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %85) #16, !noalias !8
  %571 = zext i32 %546 to i64
  %572 = shl nuw i64 %571, 32
  %573 = zext i8 %548 to i64
  %574 = or i64 %572, %573
  %575 = or i64 %574, 2863311360
  call void @_ZN5blink12NGTableTypes17CreateRowspanCellEjjPNS0_19CellBlockConstraintEN4absl8optionalINS_10LayoutUnitEEE(%"struct.blink::NGTableTypes::RowspanCell"* nonnull sret %18, i32 %169, i32 %312, %"struct.blink::NGTableTypes::CellBlockConstraint"* nonnull %17, i64 %575) #16, !noalias !8
  %576 = load i32, i32* %35, align 4, !noalias !8
  %577 = load i32, i32* %34, align 8, !noalias !8
  %578 = icmp eq i32 %576, %577
  br i1 %578, label %585, label %579, !prof !4

579:                                              ; preds = %570
  %580 = load %"struct.blink::NGTableTypes::RowspanCell"*, %"struct.blink::NGTableTypes::RowspanCell"** %33, align 8, !noalias !8
  %581 = zext i32 %576 to i64
  %582 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %580, i64 %581
  %583 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %582 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %583, i8* nonnull align 4 %85, i64 52, i1 false) #16, !noalias !8
  %584 = add i32 %576, 1
  store i32 %584, i32* %35, align 4, !noalias !8
  br label %586

585:                                              ; preds = %570
  call void @_ZN3WTF6VectorIN5blink12NGTableTypes11RowspanCellELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1937"* nonnull %24, %"struct.blink::NGTableTypes::RowspanCell"* nonnull dereferenceable(52) %18) #16, !noalias !8
  br label %586

586:                                              ; preds = %585, %579
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %85) #16, !noalias !8
  br label %587

587:                                              ; preds = %586, %558
  %588 = phi i32 [ %569, %558 ], [ %227, %586 ]
  %589 = phi float [ %560, %558 ], [ %234, %586 ]
  %590 = phi float [ %561, %558 ], [ %233, %586 ]
  %591 = phi i8 [ %562, %558 ], [ %232, %586 ]
  %592 = phi i24 [ %563, %558 ], [ %231, %586 ]
  %593 = phi i8 [ %230, %558 ], [ 1, %586 ]
  %594 = phi i8 [ %559, %558 ], [ %393, %586 ]
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %79) #16, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #16, !noalias !8
  %595 = icmp eq %"class.blink::NGLayoutResult"* %297, null
  br i1 %595, label %603, label %596

596:                                              ; preds = %587
  %597 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %297, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %597) #16, !noalias !8
  %598 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %297, i64 0, i32 0, i32 0, i32 0, i32 0
  %599 = load i32, i32* %598, align 4, !noalias !8
  %600 = icmp eq i32 %599, 0
  br i1 %600, label %601, label %603

601:                                              ; preds = %596
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %297) #16, !noalias !8
  %602 = bitcast %"class.blink::NGLayoutResult"* %297 to i8*
  call void @free(i8* %602) #16, !noalias !8
  br label %603

603:                                              ; preds = %601, %596, %587
  call void @_ZN5blink17NGConstraintSpaceD2Ev(%"class.blink::NGConstraintSpace"* nonnull %15) #16, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %72) #16, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #16, !noalias !8
  %604 = call { %"class.blink::LayoutBox"*, i64 } @_ZNK5blink11NGBlockNode11NextSiblingEv(%"class.blink::NGBlockNode"* nonnull %13) #16, !noalias !8
  %605 = extractvalue { %"class.blink::LayoutBox"*, i64 } %604, 0
  %606 = extractvalue { %"class.blink::LayoutBox"*, i64 } %604, 1
  store %"class.blink::LayoutBox"* %605, %"class.blink::LayoutBox"** %62, align 8, !noalias !8
  %607 = trunc i64 %606 to i8
  store i8 %607, i8* %63, align 8, !noalias !8
  %608 = icmp eq %"class.blink::LayoutBox"* %605, null
  br i1 %608, label %203, label %226

609:                                              ; preds = %203
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %86)
  %610 = icmp eq i8 %207, 0
  %611 = select i1 %610, float 0.000000e+00, float %205
  store float %611, float* %19, align 4, !noalias !8
  %612 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %223, i64 0, i32 3
  %613 = load i8, i8* %612, align 2, !range !2, !noalias !8
  %614 = icmp eq i8 %613, 0
  br i1 %614, label %618, label %615

615:                                              ; preds = %609
  %616 = bitcast %"class.blink::Length"* %223 to float*
  %617 = load float, float* %616, align 4, !noalias !8
  br label %622

618:                                              ; preds = %609
  %619 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %223, i64 0, i32 0, i32 0
  %620 = load i32, i32* %619, align 4, !noalias !8
  %621 = sitofp i32 %620 to float
  br label %622

622:                                              ; preds = %618, %615
  %623 = phi float [ %617, %615 ], [ %621, %618 ]
  %624 = fcmp olt float %611, %623
  %625 = load float, float* %19, align 4
  %626 = select i1 %624, float %623, float %625
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %86)
  br label %650

627:                                              ; preds = %203
  %628 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %223, i64 0, i32 3
  %629 = load i8, i8* %628, align 2, !range !2, !noalias !8
  %630 = icmp eq i8 %629, 0
  br i1 %630, label %634, label %631

631:                                              ; preds = %627
  %632 = bitcast %"class.blink::Length"* %223 to float*
  %633 = load float, float* %632, align 4, !noalias !8
  br label %638

634:                                              ; preds = %627
  %635 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %223, i64 0, i32 0, i32 0
  %636 = load i32, i32* %635, align 4, !noalias !8
  %637 = sitofp i32 %636 to float
  br label %638

638:                                              ; preds = %634, %631
  %639 = phi float [ %633, %631 ], [ %637, %634 ]
  %640 = fmul float %639, 6.400000e+01
  %641 = fcmp ult float %640, 0xC1E0000000000000
  %642 = fcmp ugt float %640, 0x41DFFFFFE0000000
  %643 = fcmp ogt float %640, 0xC1E0000000000000
  %644 = select i1 %643, float %640, float 0xC1E0000000000000
  %645 = fptosi float %644 to i32
  %646 = select i1 %641, i32 0, i32 2147483647
  %647 = select i1 %642, i32 %646, i32 %645
  %648 = icmp slt i32 %647, %204
  %649 = select i1 %648, i32 %204, i32 %647
  br label %650

650:                                              ; preds = %638, %622, %203
  %651 = phi i32 [ %204, %203 ], [ %649, %638 ], [ %204, %622 ]
  %652 = phi float [ %206, %203 ], [ %206, %638 ], [ %626, %622 ]
  %653 = phi i8 [ %207, %203 ], [ %207, %638 ], [ 1, %622 ]
  %654 = phi i24 [ %208, %203 ], [ %208, %638 ], [ 0, %622 ]
  %655 = phi i8 [ %210, %203 ], [ 1, %638 ], [ 1, %622 ]
  %656 = load i8, i8* %56, align 4, !range !2, !noalias !8
  %657 = icmp eq i8 %656, 0
  br i1 %657, label %673, label %658

658:                                              ; preds = %650
  %659 = load i8, i8* %57, align 4, !range !2, !noalias !8
  %660 = icmp eq i8 %659, 0
  br i1 %660, label %661, label %662, !prof !4

661:                                              ; preds = %658
  call void @llvm.trap() #16, !noalias !8
  unreachable

662:                                              ; preds = %658
  %663 = load i32, i32* %87, align 4, !noalias !8
  %664 = load i32, i32* %88, align 4, !noalias !8
  %665 = icmp slt i32 %664, 0
  %666 = select i1 %665, i32 -2147483648, i32 2147483647
  %667 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %663, i32 %664) #16
  %668 = extractvalue { i32, i1 } %667, 1
  %669 = extractvalue { i32, i1 } %667, 0
  %670 = select i1 %668, i32 %666, i32 %669, !prof !4
  %671 = icmp sgt i32 %670, %651
  %672 = select i1 %671, i32 %670, i32 %651
  br label %686

673:                                              ; preds = %650
  %674 = load i8, i8* %59, align 4, !range !2, !noalias !8
  %675 = icmp eq i8 %674, 0
  br i1 %675, label %686, label %676

676:                                              ; preds = %673
  %677 = load i32, i32* %89, align 4, !noalias !8
  %678 = icmp sgt i32 %677, -1
  %679 = select i1 %678, i32 -2147483648, i32 2147483647
  %680 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %651, i32 %677) #16
  %681 = extractvalue { i32, i1 } %680, 1
  %682 = extractvalue { i32, i1 } %680, 0
  %683 = select i1 %681, i32 %679, i32 %682, !prof !4
  %684 = icmp sgt i32 %683, 0
  %685 = select i1 %684, i32 %683, i32 0
  br label %686

686:                                              ; preds = %676, %673, %662
  %687 = phi i32 [ %672, %662 ], [ %651, %676 ], [ %651, %673 ]
  %688 = phi i32 [ %663, %662 ], [ %685, %676 ], [ 0, %673 ]
  store i32 %687, i32* %90, align 4, !alias.scope !8
  store i32 %688, i32* %91, align 4, !alias.scope !8
  %689 = zext i24 %654 to i32
  %690 = shl nuw i32 %689, 8
  %691 = zext i8 %653 to i32
  %692 = or i32 %690, %691
  store i32 %692, i32* %93, align 4, !alias.scope !8
  store float %652, float* %111, align 4, !alias.scope !8
  store i32 %192, i32* %94, align 4, !alias.scope !8
  %693 = load i32, i32* %55, align 4, !noalias !8
  %694 = sub i32 %693, %192
  store i32 %694, i32* %95, align 4, !alias.scope !8
  %695 = and i8 %655, 1
  store i8 %695, i8* %96, align 4, !alias.scope !8
  br i1 %657, label %699, label %696

696:                                              ; preds = %686
  %697 = load i8, i8* %58, align 4, !range !2, !noalias !8
  %698 = icmp ne i8 %697, 0
  br label %705

699:                                              ; preds = %686
  %700 = load i8, i8* %59, align 4, !range !2, !noalias !8
  %701 = icmp eq i8 %700, 0
  br i1 %701, label %705, label %702

702:                                              ; preds = %699
  %703 = load i8, i8* %60, align 4, !range !2, !noalias !8
  %704 = icmp ne i8 %703, 0
  br label %705

705:                                              ; preds = %702, %699, %696
  %706 = phi i1 [ %698, %696 ], [ %704, %702 ], [ false, %699 ]
  %707 = zext i1 %706 to i8
  store i8 %707, i8* %97, align 1, !alias.scope !8
  %708 = and i8 %209, 1
  store i8 %708, i8* %98, align 2, !alias.scope !8
  br i1 %181, label %713, label %709

709:                                              ; preds = %705
  %710 = and i160 %216, 3802951800684688204490109616128
  %711 = icmp eq i160 %710, 2535301200456458802993406410752
  %712 = zext i1 %711 to i8
  br label %713

713:                                              ; preds = %705, %709
  %714 = phi i8 [ 1, %705 ], [ %712, %709 ]
  store i8 %714, i8* %99, align 1, !alias.scope !8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %56) #16, !noalias !8
  %715 = icmp eq i8 %653, 0
  br i1 %715, label %727, label %716

716:                                              ; preds = %713
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %100)
  %717 = fsub float 1.000000e+02, %170
  store float %717, float* %28, align 4
  %718 = fcmp olt float %652, %717
  %719 = select i1 %718, float* %101, float* %28
  %720 = bitcast float* %719 to i32*
  %721 = load i32, i32* %720, align 4
  %722 = zext i32 %721 to i64
  %723 = shl nuw i64 %722, 32
  %724 = or i64 %723, 1
  store i64 %724, i64* %102, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %100)
  %725 = bitcast i32 %721 to float
  %726 = fadd float %170, %725
  br label %727

727:                                              ; preds = %713, %716
  %728 = phi float [ %726, %716 ], [ %170, %713 ]
  %729 = load i32, i32* %30, align 4
  %730 = load i32, i32* %103, align 8
  %731 = icmp eq i32 %729, %730
  br i1 %731, label %739, label %732, !prof !4

732:                                              ; preds = %727
  %733 = load %"struct.blink::NGTableTypes::Row"*, %"struct.blink::NGTableTypes::Row"** %104, align 8
  %734 = zext i32 %729 to i64
  %735 = getelementptr inbounds %"struct.blink::NGTableTypes::Row", %"struct.blink::NGTableTypes::Row"* %733, i64 %734
  %736 = bitcast %"struct.blink::NGTableTypes::Row"* %735 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %736, i8* nonnull align 4 %50, i64 28, i1 false) #16
  %737 = load i32, i32* %30, align 4
  %738 = add i32 %737, 1
  store i32 %738, i32* %30, align 4
  br label %741

739:                                              ; preds = %727
  call void @_ZN3WTF6VectorIN5blink12NGTableTypes3RowELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.1927"* %9, %"struct.blink::NGTableTypes::Row"* nonnull dereferenceable(28) %27) #16
  %740 = load i32, i32* %90, align 4
  br label %741

741:                                              ; preds = %732, %739
  %742 = phi i32 [ %687, %732 ], [ %740, %739 ]
  %743 = icmp slt i32 %742, 0
  %744 = select i1 %743, i32 -2147483648, i32 2147483647
  %745 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %171, i32 %742) #16
  %746 = extractvalue { i32, i1 } %745, 1
  %747 = extractvalue { i32, i1 } %745, 0
  %748 = select i1 %746, i32 %744, i32 %747, !prof !4
  %749 = load i32, i32* %67, align 4
  %750 = icmp eq i32 %749, 0
  br i1 %750, label %799, label %753

751:                                              ; preds = %795
  %752 = zext i32 %796 to i64
  br label %799

753:                                              ; preds = %741, %795
  %754 = phi i32 [ %797, %795 ], [ 0, %741 ]
  %755 = call dereferenceable(12) %"struct.blink::NGColspanCellTabulator::Cell"* @_ZN3WTF6VectorIN5blink22NGColspanCellTabulator4CellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1942"* %39, i32 %754) #16
  %756 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %755, i64 0, i32 2
  %757 = load i32, i32* %756, align 4
  %758 = add i32 %757, -1
  store i32 %758, i32* %756, align 4
  %759 = call dereferenceable(12) %"struct.blink::NGColspanCellTabulator::Cell"* @_ZN3WTF6VectorIN5blink22NGColspanCellTabulator4CellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1942"* %39, i32 %754) #16
  %760 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %759, i64 0, i32 2
  %761 = load i32, i32* %760, align 4
  %762 = icmp eq i32 %761, 0
  br i1 %762, label %763, label %792

763:                                              ; preds = %753
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #16
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %106, align 8
  %764 = load i32, i32* %67, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #16
  %765 = icmp ugt i32 %764, %754
  br i1 %765, label %766, label %767

766:                                              ; preds = %763
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #16
  store i8* null, i8** %106, align 8
  br label %774

767:                                              ; preds = %763
  %768 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %754) #16
  %769 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %764) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %21, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %768, i8* %769) #16
  %770 = load i8*, i8** %108, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #16
  store i8* %770, i8** %106, align 8
  %771 = icmp eq i8* %770, null
  br i1 %771, label %774, label %772

772:                                              ; preds = %767
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %23, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %22) #16
  %773 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %23) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %23) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #16
  br label %774

774:                                              ; preds = %772, %767, %766
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #16
  %775 = load %"struct.blink::NGColspanCellTabulator::Cell"*, %"struct.blink::NGColspanCellTabulator::Cell"** %110, align 8
  %776 = zext i32 %754 to i64
  %777 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %775, i64 %776
  %778 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %777, i64 1
  %779 = icmp eq %"struct.blink::NGColspanCellTabulator::Cell"* %777, null
  br i1 %779, label %789, label %780, !prof !4

780:                                              ; preds = %774
  %781 = load i32, i32* %67, align 4
  %782 = zext i32 %781 to i64
  %783 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %775, i64 %782
  %784 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %777 to i8*
  %785 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %778 to i8*
  %786 = ptrtoint %"struct.blink::NGColspanCellTabulator::Cell"* %783 to i64
  %787 = ptrtoint %"struct.blink::NGColspanCellTabulator::Cell"* %778 to i64
  %788 = sub i64 %786, %787
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %784, i8* nonnull align 4 %785, i64 %788, i1 false) #16
  br label %789

789:                                              ; preds = %774, %780
  %790 = load i32, i32* %67, align 4
  %791 = add i32 %790, -1
  store i32 %791, i32* %67, align 4
  br label %795

792:                                              ; preds = %753
  %793 = add nuw i32 %754, 1
  %794 = load i32, i32* %67, align 4
  br label %795

795:                                              ; preds = %792, %789
  %796 = phi i32 [ %791, %789 ], [ %794, %792 ]
  %797 = phi i32 [ %754, %789 ], [ %793, %792 ]
  %798 = icmp ult i32 %797, %796
  br i1 %798, label %753, label %751

799:                                              ; preds = %741, %751
  %800 = phi i64 [ 0, %741 ], [ %752, %751 ]
  %801 = load %"struct.blink::NGColspanCellTabulator::Cell"*, %"struct.blink::NGColspanCellTabulator::Cell"** %110, align 8
  %802 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %801, i64 %800
  call fastcc void @"_ZNSt3__16__sortIRZN5blink22NGColspanCellTabulator6EndRowEvE3$_0PNS2_4CellEEEvT0_S7_T_"(%"struct.blink::NGColspanCellTabulator::Cell"* %801, %"struct.blink::NGColspanCellTabulator::Cell"* %802) #16
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %50) #16
  %803 = call { %"class.blink::LayoutBox"*, i64 } @_ZNK5blink11NGBlockNode11NextSiblingEv(%"class.blink::NGBlockNode"* nonnull %26) #16
  %804 = extractvalue { %"class.blink::LayoutBox"*, i64 } %803, 0
  %805 = extractvalue { %"class.blink::LayoutBox"*, i64 } %803, 1
  store %"class.blink::LayoutBox"* %804, %"class.blink::LayoutBox"** %42, align 8
  %806 = trunc i64 %805 to i8
  store i8 %806, i8* %43, align 8
  %807 = icmp eq %"class.blink::LayoutBox"* %804, null
  br i1 %807, label %112, label %167

808:                                              ; preds = %836, %161
  %809 = bitcast %"class.blink::NGBlockNode"* %0 to %"class.blink::NGLayoutInputNode"*
  %810 = bitcast %"class.blink::NGBlockNode"* %0 to %"class.blink::LayoutObject"**
  %811 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %810, align 8
  %812 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %811, i64 0, i32 5, i32 0
  %813 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %812, align 8
  %814 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %813, i64 0, i32 0, i32 9
  %815 = bitcast [20 x i8]* %814 to i160*
  %816 = load i160, i160* %815, align 8
  %817 = and i160 %816, 15211807202738752817960438464512
  %818 = icmp eq i160 %817, 0
  %819 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %813, i64 0, i32 0, i32 5, i32 0, i32 0
  %820 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %819, align 8
  %821 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %820, i64 0, i32 3
  %822 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %820, i64 0, i32 8
  %823 = select i1 %818, %"class.blink::Length"* %821, %"class.blink::Length"* %822
  %824 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %823, i64 0, i32 2
  %825 = load i8, i8* %824, align 1
  %826 = icmp eq i8 %825, 2
  br i1 %826, label %842, label %866

827:                                              ; preds = %161, %836
  %828 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %840, %836 ], [ %162, %161 ]
  %829 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %828, i64 0, i32 2
  %830 = load i32, i32* %829, align 4
  %831 = icmp eq i32 %830, 0
  %832 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %828, i64 0, i32 1
  %833 = load i32, i32* %832, align 4
  %834 = sub i32 %114, %833
  br i1 %831, label %835, label %836

835:                                              ; preds = %827
  store i32 %834, i32* %829, align 4
  br label %836

836:                                              ; preds = %827, %835
  %837 = phi i32 [ %834, %835 ], [ %830, %827 ]
  %838 = icmp ult i32 %837, %834
  %839 = select i1 %838, i32 %837, i32 %834
  store i32 %839, i32* %829, align 4
  call void @_ZN5blink23NGTableAlgorithmHelpers27DistributeRowspanCellToRowsERKNS_12NGTableTypes11RowspanCellENS_10LayoutUnitEPN3WTF6VectorINS1_3RowELj0ENS6_18PartitionAllocatorEEE(%"struct.blink::NGTableTypes::RowspanCell"* dereferenceable(52) %828, i32 %5, %"class.WTF::Vector.1927"* %9) #16
  %840 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %828, i64 1
  %841 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %840, %165
  br i1 %841, label %808, label %827

842:                                              ; preds = %808
  %843 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %823, i64 0, i32 3
  %844 = load i8, i8* %843, align 2, !range !2
  %845 = icmp eq i8 %844, 0
  br i1 %845, label %849, label %846

846:                                              ; preds = %842
  %847 = bitcast %"class.blink::Length"* %823 to float*
  %848 = load float, float* %847, align 4
  br label %853

849:                                              ; preds = %842
  %850 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %823, i64 0, i32 0, i32 0
  %851 = load i32, i32* %850, align 4
  %852 = sitofp i32 %851 to float
  br label %853

853:                                              ; preds = %846, %849
  %854 = phi float [ %848, %846 ], [ %852, %849 ]
  %855 = fmul float %854, 6.400000e+01
  %856 = fcmp ult float %855, 0xC1E0000000000000
  %857 = fcmp ugt float %855, 0x41DFFFFFE0000000
  %858 = fcmp ogt float %855, 0xC1E0000000000000
  %859 = select i1 %858, float %855, float 0xC1E0000000000000
  %860 = fptosi float %859 to i32
  %861 = select i1 %856, i32 0, i32 2147483647
  %862 = select i1 %857, i32 %861, i32 %860
  %863 = icmp sgt i32 %862, %142
  br i1 %863, label %864, label %866

864:                                              ; preds = %853
  %865 = sub i32 %114, %31
  call void @_ZN5blink23NGTableAlgorithmHelpers37DistributeSectionFixedBlockSizeToRowsEjjNS_10LayoutUnitES1_S1_PN3WTF6VectorINS_12NGTableTypes3RowELj0ENS2_18PartitionAllocatorEEE(i32 %31, i32 %865, i32 %862, i32 %5, i32 %862, %"class.WTF::Vector.1927"* %9) #16
  br label %866

866:                                              ; preds = %853, %864, %808
  %867 = phi i32 [ %142, %808 ], [ %862, %864 ], [ %142, %853 ]
  %868 = bitcast %"struct.blink::NGTableTypes::Section"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %868) #16
  %869 = sub i32 %114, %31
  call void @_ZN5blink12NGTableTypes13CreateSectionERKNS_17NGLayoutInputNodeEjjNS_10LayoutUnitEb(%"struct.blink::NGTableTypes::Section"* nonnull sret %29, %"class.blink::NGLayoutInputNode"* dereferenceable(16) %809, i32 %31, i32 %869, i32 %867, i1 zeroext %7) #16
  %870 = getelementptr inbounds %"class.WTF::Vector.1922", %"class.WTF::Vector.1922"* %8, i64 0, i32 0, i32 0, i32 2
  %871 = load i32, i32* %870, align 4
  %872 = getelementptr inbounds %"class.WTF::Vector.1922", %"class.WTF::Vector.1922"* %8, i64 0, i32 0, i32 0, i32 1
  %873 = load i32, i32* %872, align 8
  %874 = icmp eq i32 %871, %873
  br i1 %874, label %883, label %875, !prof !4

875:                                              ; preds = %866
  %876 = getelementptr inbounds %"class.WTF::Vector.1922", %"class.WTF::Vector.1922"* %8, i64 0, i32 0, i32 0, i32 0
  %877 = load %"struct.blink::NGTableTypes::Section"*, %"struct.blink::NGTableTypes::Section"** %876, align 8
  %878 = zext i32 %871 to i64
  %879 = getelementptr inbounds %"struct.blink::NGTableTypes::Section", %"struct.blink::NGTableTypes::Section"* %877, i64 %878
  %880 = bitcast %"struct.blink::NGTableTypes::Section"* %879 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %880, i8* nonnull align 4 %868, i64 24, i1 false) #16
  %881 = load i32, i32* %870, align 4
  %882 = add i32 %881, 1
  store i32 %882, i32* %870, align 4
  br label %884

883:                                              ; preds = %866
  call void @_ZN3WTF6VectorIN5blink12NGTableTypes7SectionELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1922"* %8, %"struct.blink::NGTableTypes::Section"* nonnull dereferenceable(24) %29) #16
  br label %884

884:                                              ; preds = %875, %883
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %868) #16
  %885 = getelementptr inbounds %"class.blink::NGColspanCellTabulator", %"class.blink::NGColspanCellTabulator"* %25, i64 0, i32 1, i32 0, i32 0, i32 0
  %886 = load %"struct.blink::NGColspanCellTabulator::Cell"*, %"struct.blink::NGColspanCellTabulator::Cell"** %885, align 8
  %887 = icmp eq %"struct.blink::NGColspanCellTabulator::Cell"* %886, null
  %888 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %886 to i8*
  br i1 %887, label %895, label %889, !prof !3

889:                                              ; preds = %884
  %890 = getelementptr inbounds %"class.blink::NGColspanCellTabulator", %"class.blink::NGColspanCellTabulator"* %25, i64 0, i32 1, i32 0, i32 0, i32 2
  %891 = load i32, i32* %890, align 4
  %892 = icmp eq i32 %891, 0
  br i1 %892, label %894, label %893, !prof !4

893:                                              ; preds = %889
  store i32 0, i32* %890, align 4
  br label %894

894:                                              ; preds = %893, %889
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %888) #16
  store %"struct.blink::NGColspanCellTabulator::Cell"* null, %"struct.blink::NGColspanCellTabulator::Cell"** %885, align 8
  br label %895

895:                                              ; preds = %884, %894
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #16
  %896 = load %"struct.blink::NGTableTypes::RowspanCell"*, %"struct.blink::NGTableTypes::RowspanCell"** %33, align 8
  %897 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %896, null
  %898 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %896 to i8*
  br i1 %897, label %904, label %899, !prof !3

899:                                              ; preds = %895
  %900 = load i32, i32* %35, align 4
  %901 = icmp eq i32 %900, 0
  br i1 %901, label %903, label %902, !prof !4

902:                                              ; preds = %899
  store i32 0, i32* %35, align 4
  br label %903

903:                                              ; preds = %902, %899
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %898) #16
  store %"struct.blink::NGTableTypes::RowspanCell"* null, %"struct.blink::NGTableTypes::RowspanCell"** %33, align 8
  br label %904

904:                                              ; preds = %895, %903
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #16
  ret void
}

declare { %"class.blink::LayoutBox"*, i64 } @_ZNK5blink11NGBlockNode10FirstChildEv(%"class.blink::NGBlockNode"*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink22NGColspanCellTabulator8StartRowEv(%"class.blink::NGColspanCellTabulator"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGColspanCellTabulator", %"class.blink::NGColspanCellTabulator"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22NGColspanCellTabulator6EndRowEv(%"class.blink::NGColspanCellTabulator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGColspanCellTabulator", %"class.blink::NGColspanCellTabulator"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.blink::NGColspanCellTabulator", %"class.blink::NGColspanCellTabulator"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %13

6:                                                ; preds = %26
  %7 = zext i32 %28 to i64
  br label %8

8:                                                ; preds = %6, %1
  %9 = phi i64 [ 0, %1 ], [ %7, %6 ]
  %10 = getelementptr inbounds %"class.WTF::Vector.1942", %"class.WTF::Vector.1942"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = load %"struct.blink::NGColspanCellTabulator::Cell"*, %"struct.blink::NGColspanCellTabulator::Cell"** %10, align 8
  %12 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %11, i64 %9
  tail call fastcc void @"_ZNSt3__16__sortIRZN5blink22NGColspanCellTabulator6EndRowEvE3$_0PNS2_4CellEEEvT0_S7_T_"(%"struct.blink::NGColspanCellTabulator::Cell"* %11, %"struct.blink::NGColspanCellTabulator::Cell"* %12) #16
  ret void

13:                                               ; preds = %1, %26
  %14 = phi i32 [ %27, %26 ], [ 0, %1 ]
  %15 = tail call dereferenceable(12) %"struct.blink::NGColspanCellTabulator::Cell"* @_ZN3WTF6VectorIN5blink22NGColspanCellTabulator4CellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1942"* %2, i32 %14) #16
  %16 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %15, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, -1
  store i32 %18, i32* %16, align 4
  %19 = tail call dereferenceable(12) %"struct.blink::NGColspanCellTabulator::Cell"* @_ZN3WTF6VectorIN5blink22NGColspanCellTabulator4CellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1942"* %2, i32 %14) #16
  %20 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %19, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %13
  tail call void @_ZN3WTF6VectorIN5blink22NGColspanCellTabulator4CellELj0ENS_18PartitionAllocatorEE7EraseAtEj(%"class.WTF::Vector.1942"* %2, i32 %14)
  br label %26

24:                                               ; preds = %13
  %25 = add nuw i32 %14, 1
  br label %26

26:                                               ; preds = %24, %23
  %27 = phi i32 [ %14, %23 ], [ %25, %24 ]
  %28 = load i32, i32* %3, align 4
  %29 = icmp ult i32 %27, %28
  br i1 %29, label %13, label %6
}

declare { %"class.blink::LayoutBox"*, i64 } @_ZNK5blink11NGBlockNode11NextSiblingEv(%"class.blink::NGBlockNode"*) local_unnamed_addr #2

declare void @_ZN5blink23NGTableAlgorithmHelpers27DistributeRowspanCellToRowsERKNS_12NGTableTypes11RowspanCellENS_10LayoutUnitEPN3WTF6VectorINS1_3RowELj0ENS6_18PartitionAllocatorEEE(%"struct.blink::NGTableTypes::RowspanCell"* dereferenceable(52), i32, %"class.WTF::Vector.1927"*) local_unnamed_addr #2

declare void @_ZN5blink23NGTableAlgorithmHelpers37DistributeSectionFixedBlockSizeToRowsEjjNS_10LayoutUnitES1_S1_PN3WTF6VectorINS_12NGTableTypes3RowELj0ENS2_18PartitionAllocatorEEE(i32, i32, i32, i32, i32, %"class.WTF::Vector.1927"*) local_unnamed_addr #2

declare void @_ZN5blink12NGTableTypes13CreateSectionERKNS_17NGLayoutInputNodeEjjNS_10LayoutUnitEb(%"struct.blink::NGTableTypes::Section"* sret, %"class.blink::NGLayoutInputNode"* dereferenceable(16), i32, i32, i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink22NGColspanCellTabulator4CellELj0ENS_18PartitionAllocatorEE7EraseAtEj(%"class.WTF::Vector.1942"*, i32) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1942", %"class.WTF::Vector.1942"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.1942", %"class.WTF::Vector.1942"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::NGColspanCellTabulator::Cell"*, %"struct.blink::NGColspanCellTabulator::Cell"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %24, i64 %25
  %27 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %26, i64 1
  %28 = icmp ne %"struct.blink::NGColspanCellTabulator::Cell"* %26, null
  %29 = icmp ne %"struct.blink::NGColspanCellTabulator::Cell"* %27, null
  %30 = and i1 %28, %29
  br i1 %30, label %31, label %40, !prof !3

31:                                               ; preds = %22
  %32 = load i32, i32* %8, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %24, i64 %33
  %35 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %26 to i8*
  %36 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %27 to i8*
  %37 = ptrtoint %"struct.blink::NGColspanCellTabulator::Cell"* %34 to i64
  %38 = ptrtoint %"struct.blink::NGColspanCellTabulator::Cell"* %27 to i64
  %39 = sub i64 %37, %38
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %35, i8* nonnull align 4 %36, i64 %39, i1 false) #16
  br label %40

40:                                               ; preds = %22, %31
  %41 = load i32, i32* %8, align 4
  %42 = add i32 %41, -1
  store i32 %42, i32* %8, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink22NGColspanCellTabulator18FindNextFreeColumnEv(%"class.blink::NGColspanCellTabulator"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGColspanCellTabulator", %"class.blink::NGColspanCellTabulator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.blink::NGColspanCellTabulator::Cell"*, %"struct.blink::NGColspanCellTabulator::Cell"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::NGColspanCellTabulator", %"class.blink::NGColspanCellTabulator"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::NGColspanCellTabulator", %"class.blink::NGColspanCellTabulator"* %0, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  br label %13

12:                                               ; preds = %25, %1
  ret void

13:                                               ; preds = %9, %25
  %14 = phi i32 [ %11, %9 ], [ %26, %25 ]
  %15 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %3, %9 ], [ %27, %25 ]
  %16 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp ugt i32 %17, %14
  br i1 %18, label %25, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %15, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = add i32 %21, %17
  %23 = icmp ugt i32 %22, %14
  br i1 %23, label %24, label %25

24:                                               ; preds = %19
  store i32 %22, i32* %10, align 8
  br label %25

25:                                               ; preds = %13, %24, %19
  %26 = phi i32 [ %14, %13 ], [ %22, %24 ], [ %14, %19 ]
  %27 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %15, i64 1
  %28 = icmp eq %"struct.blink::NGColspanCellTabulator::Cell"* %27, %7
  br i1 %28, label %12, label %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22NGColspanCellTabulator11ProcessCellERKNS_11NGBlockNodeE(%"class.blink::NGColspanCellTabulator"* nocapture, %"class.blink::NGBlockNode"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::NGBlockNode"* %1 to %"class.blink::NGLayoutInputNode"*
  %4 = tail call i32 @_ZNK5blink17NGLayoutInputNode16TableCellColspanEv(%"class.blink::NGLayoutInputNode"* %3) #16
  %5 = tail call i32 @_ZNK5blink17NGLayoutInputNode16TableCellRowspanEv(%"class.blink::NGLayoutInputNode"* %3) #16
  %6 = icmp ugt i32 %5, 1
  br i1 %6, label %7, label %65

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::NGColspanCellTabulator", %"class.blink::NGColspanCellTabulator"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.blink::NGColspanCellTabulator", %"class.blink::NGColspanCellTabulator"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::NGColspanCellTabulator", %"class.blink::NGColspanCellTabulator"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.blink::NGColspanCellTabulator", %"class.blink::NGColspanCellTabulator"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %15, label %54, !prof !4

15:                                               ; preds = %7
  %16 = add i32 %11, 1
  %17 = lshr i32 %11, 2
  %18 = add i32 %16, %17
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %16
  %22 = select i1 %21, i32 %20, i32 %16
  %23 = icmp ult i32 %11, %22
  br i1 %23, label %24, label %54, !prof !3

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.WTF::Vector.1942", %"class.WTF::Vector.1942"* %8, i64 0, i32 0, i32 0, i32 0
  %26 = load %"struct.blink::NGColspanCellTabulator::Cell"*, %"struct.blink::NGColspanCellTabulator::Cell"** %25, align 8
  %27 = icmp eq %"struct.blink::NGColspanCellTabulator::Cell"* %26, null
  %28 = zext i32 %22 to i64
  %29 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22NGColspanCellTabulator4CellEEEmm(i64 %28) #16
  %30 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %29, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22NGColspanCellTabulator4CellEEEPKcv, i64 0, i64 0)) #16
  br i1 %27, label %31, label %36

31:                                               ; preds = %24
  %32 = ptrtoint i8* %30 to i64
  %33 = bitcast %"class.WTF::Vector.1942"* %8 to i64*
  store atomic i64 %32, i64* %33 monotonic, align 8
  %34 = udiv i64 %29, 12
  %35 = trunc i64 %34 to i32
  store i32 %35, i32* %12, align 8
  br label %54

36:                                               ; preds = %24
  %37 = udiv i64 %29, 12
  %38 = ptrtoint i8* %30 to i64
  %39 = load %"struct.blink::NGColspanCellTabulator::Cell"*, %"struct.blink::NGColspanCellTabulator::Cell"** %25, align 8
  %40 = icmp ne i8* %30, null
  %41 = icmp ne %"struct.blink::NGColspanCellTabulator::Cell"* %39, null
  %42 = and i1 %40, %41
  %43 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %39 to i8*
  br i1 %42, label %44, label %50, !prof !3

44:                                               ; preds = %36
  %45 = load i32, i32* %10, align 4
  %46 = zext i32 %45 to i64
  %47 = mul nuw nsw i64 %46, 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %30, i8* nonnull align 4 %43, i64 %47, i1 false) #16
  %48 = bitcast %"class.WTF::Vector.1942"* %8 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %44, %36
  %51 = phi i8* [ %49, %44 ], [ %43, %36 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #16
  %52 = bitcast %"class.WTF::Vector.1942"* %8 to i64*
  store atomic i64 %38, i64* %52 monotonic, align 8
  %53 = trunc i64 %37 to i32
  store i32 %53, i32* %12, align 8
  br label %54

54:                                               ; preds = %7, %15, %31, %50
  %55 = getelementptr inbounds %"class.WTF::Vector.1942", %"class.WTF::Vector.1942"* %8, i64 0, i32 0, i32 0, i32 0
  %56 = load %"struct.blink::NGColspanCellTabulator::Cell"*, %"struct.blink::NGColspanCellTabulator::Cell"** %55, align 8
  %57 = load i32, i32* %10, align 4
  %58 = zext i32 %57 to i64
  %59 = load i32, i32* %9, align 4
  %60 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %56, i64 %58, i32 0
  store i32 %59, i32* %60, align 4
  %61 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %56, i64 %58, i32 1
  store i32 %4, i32* %61, align 4
  %62 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %56, i64 %58, i32 2
  store i32 %5, i32* %62, align 4
  %63 = load i32, i32* %10, align 4
  %64 = add i32 %63, 1
  store i32 %64, i32* %10, align 4
  br label %65

65:                                               ; preds = %54, %2
  %66 = getelementptr inbounds %"class.blink::NGColspanCellTabulator", %"class.blink::NGColspanCellTabulator"* %0, i64 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, %4
  store i32 %68, i32* %66, align 8
  ret void
}

declare i32 @_ZNK5blink17NGLayoutInputNode16TableCellColspanEv(%"class.blink::NGLayoutInputNode"*) local_unnamed_addr #2

declare i32 @_ZNK5blink17NGLayoutInputNode16TableCellRowspanEv(%"class.blink::NGLayoutInputNode"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22NGRowBaselineTabulator11ProcessCellERKNS_13NGBoxFragmentENS_10LayoutUnitEbbb(%"class.blink::NGRowBaselineTabulator"* nocapture, %"class.blink::NGBoxFragment"* dereferenceable(16), i32, i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = and i1 %3, %4
  br i1 %10, label %11, label %117

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::NGBoxFragment"* %1 to %"class.blink::NGPhysicalBoxFragment"**
  %13 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %13, i64 0, i32 1
  %15 = bitcast i24* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = trunc i32 %16 to i16
  %18 = icmp slt i16 %17, 0
  br i1 %18, label %19, label %117

19:                                               ; preds = %11
  %20 = zext i1 %5 to i8
  %21 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %0, i64 0, i32 2
  %22 = load i8, i8* %21, align 4, !range !2
  %23 = or i8 %22, %20
  store i8 %23, i8* %21, align 4
  %24 = getelementptr inbounds %"class.blink::NGBoxFragment", %"class.blink::NGBoxFragment"* %1, i64 0, i32 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = getelementptr inbounds %"class.blink::NGBoxFragment", %"class.blink::NGBoxFragment"* %1, i64 0, i32 0, i32 0
  %27 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %27, i64 0, i32 1
  %29 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %27, i64 0, i32 3
  %31 = bitcast i24* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = lshr i32 %32, 10
  %34 = and i32 %33, 3
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %19
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %29, i64 0, i32 5, i32 0
  %38 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %37, align 8
  br label %41

39:                                               ; preds = %19
  %40 = tail call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %29, i32 %34) #16
  br label %41

41:                                               ; preds = %39, %36
  %42 = phi %"class.blink::ComputedStyle"* [ %38, %36 ], [ %40, %39 ]
  %43 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %42, i64 0, i32 0, i32 9
  %44 = bitcast [20 x i8]* %43 to i160*
  %45 = load i160, i160* %44, align 8
  %46 = lshr i160 %45, 102
  %47 = trunc i160 %46 to i8
  %48 = and i8 %47, 3
  %49 = icmp eq i8 %25, %48
  br i1 %49, label %52, label %50

50:                                               ; preds = %41
  %51 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %26, align 8
  br label %63

52:                                               ; preds = %41
  %53 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %12, align 8
  %54 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %53, i64 0, i32 0, i32 3
  %55 = bitcast i24* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = and i32 %56, 4194304
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %53, i64 0, i32 0
  br i1 %58, label %63, label %60

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %53, i64 0, i32 3, i32 0
  %62 = load i32, i32* %61, align 4
  br label %81

63:                                               ; preds = %50, %52
  %64 = phi %"class.blink::NGPhysicalFragment"* [ %51, %50 ], [ %59, %52 ]
  %65 = load i8, i8* %24, align 1
  %66 = icmp eq i8 %65, 0
  %67 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %64, i64 0, i32 2, i32 1, i32 0
  %68 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %64, i64 0, i32 2, i32 0, i32 0
  %69 = select i1 %66, i32* %67, i32* %68
  %70 = load i32, i32* %69, align 4
  br i1 %66, label %81, label %71

71:                                               ; preds = %63
  %72 = sdiv i32 %70, 2
  %73 = sext i32 %72 to i64
  %74 = tail call i1 @llvm.is.constant.i64(i64 %73) #16
  br i1 %74, label %81, label %75

75:                                               ; preds = %71
  %76 = icmp slt i32 %70, -1
  %77 = select i1 %76, i32 -2147483648, i32 2147483647
  %78 = add nsw i64 %73, 2147483648
  %79 = icmp ult i64 %78, 4294967296
  %80 = select i1 %79, i32 %72, i32 %77, !prof !3
  br label %81

81:                                               ; preds = %60, %63, %71, %75
  %82 = phi i32 [ %62, %60 ], [ %80, %75 ], [ %70, %63 ], [ %72, %71 ]
  %83 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %83)
  store i32 -2147483648, i32* %7, align 4
  %84 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8, i8* %84, align 4, !range !2
  %86 = icmp eq i8 %85, 0
  %87 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %88 = bitcast i32* %7 to %"class.blink::LayoutUnit"*
  %89 = select i1 %86, %"class.blink::LayoutUnit"* %88, %"class.blink::LayoutUnit"* %87
  %90 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %89, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp slt i32 %91, %82
  %93 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %94 = select i1 %92, i32 %82, i32 %91
  store i32 %94, i32* %93, align 4
  br i1 %86, label %95, label %96

95:                                               ; preds = %81
  store i8 1, i8* %84, align 4
  br label %96

96:                                               ; preds = %81, %95
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %83)
  %97 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %97)
  store i32 -2147483648, i32* %8, align 4
  %98 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %99 = load i8, i8* %98, align 4, !range !2
  %100 = icmp eq i8 %99, 0
  %101 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %102 = bitcast i32* %8 to %"class.blink::LayoutUnit"*
  %103 = select i1 %100, %"class.blink::LayoutUnit"* %102, %"class.blink::LayoutUnit"* %101
  %104 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %103, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = icmp sgt i32 %82, -1
  %107 = select i1 %106, i32 -2147483648, i32 2147483647
  %108 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %2, i32 %82) #16
  %109 = extractvalue { i32, i1 } %108, 1
  %110 = extractvalue { i32, i1 } %108, 0
  %111 = select i1 %109, i32 %107, i32 %110, !prof !4
  %112 = icmp slt i32 %105, %111
  %113 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %114 = select i1 %112, i32 %111, i32 %105
  store i32 %114, i32* %113, align 4
  br i1 %100, label %115, label %116

115:                                              ; preds = %96
  store i8 1, i8* %98, align 4
  br label %116

116:                                              ; preds = %96, %115
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %97)
  br label %117

117:                                              ; preds = %6, %116, %11
  %118 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i8, i8* %118, align 4, !range !2
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %121, label %205

121:                                              ; preds = %117
  %122 = zext i1 %5 to i8
  %123 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %0, i64 0, i32 5
  %124 = load i8, i8* %123, align 4, !range !2
  %125 = or i8 %124, %122
  store i8 %125, i8* %123, align 4
  %126 = tail call { i64, i64 } @_ZNK5blink13NGBoxFragment7PaddingEv(%"class.blink::NGBoxFragment"* %1)
  %127 = extractvalue { i64, i64 } %126, 1
  %128 = bitcast %"class.blink::NGBoxFragment"* %1 to %"class.blink::NGPhysicalBoxFragment"**
  %129 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %129, i64 0, i32 1
  %131 = bitcast i24* %130 to i32*
  %132 = load i32, i32* %131, align 8
  %133 = and i32 %132, 1024
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %166, label %135

135:                                              ; preds = %121
  %136 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %129, i64 0, i32 2
  %137 = load i32, i32* %136, align 4
  %138 = zext i32 %137 to i64
  %139 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %129, i64 0, i32 6, i64 %138
  %140 = and i32 %132, 2
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %135
  %143 = bitcast %"struct.blink::NGLink"* %139 to %"struct.blink::PhysicalRect"*
  br label %154

144:                                              ; preds = %135
  %145 = bitcast %"struct.blink::NGLink"* %139 to i8*
  %146 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %139, i64 1
  %147 = bitcast %"struct.blink::NGLink"* %146 to i32*
  %148 = load i32, i32* %147, align 8
  %149 = shl i32 %148, 6
  %150 = or i32 %149, 24
  %151 = zext i32 %150 to i64
  %152 = getelementptr inbounds i8, i8* %145, i64 %151
  %153 = bitcast i8* %152 to %"struct.blink::PhysicalRect"*
  br label %154

154:                                              ; preds = %144, %142
  %155 = phi %"struct.blink::PhysicalRect"* [ %153, %144 ], [ %143, %142 ]
  %156 = and i32 %132, 64
  %157 = icmp eq i32 %156, 0
  %158 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %155, i64 1
  %159 = select i1 %157, %"struct.blink::PhysicalRect"* %155, %"struct.blink::PhysicalRect"* %158
  %160 = bitcast %"struct.blink::PhysicalRect"* %159 to i64*
  %161 = load i64, i64* %160, align 4
  %162 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %159, i64 0, i32 1
  %163 = bitcast %"struct.blink::PhysicalSize"* %162 to i64*
  %164 = load i64, i64* %163, align 4
  %165 = and i64 %161, -4294967296
  br label %166

166:                                              ; preds = %154, %121
  %167 = phi i64 [ %165, %154 ], [ 0, %121 ]
  %168 = phi i64 [ %164, %154 ], [ 0, %121 ]
  %169 = getelementptr inbounds %"class.blink::NGBoxFragment", %"class.blink::NGBoxFragment"* %1, i64 0, i32 0, i32 1
  %170 = bitcast %"class.blink::WritingDirectionMode"* %169 to i16*
  %171 = load i16, i16* %170, align 8
  %172 = trunc i16 %171 to i8
  switch i8 %172, label %179 [
    i8 0, label %173
    i8 1, label %175
    i8 3, label %175
    i8 2, label %177
    i8 4, label %178
  ]

173:                                              ; preds = %166
  %174 = shl i64 %168, 32
  br label %179

175:                                              ; preds = %166, %166
  %176 = and i64 %168, -4294967296
  br label %179

177:                                              ; preds = %166
  br label %179

178:                                              ; preds = %166
  br label %179

179:                                              ; preds = %166, %173, %175, %177, %178
  %180 = phi i64 [ 0, %166 ], [ %167, %178 ], [ %167, %177 ], [ %176, %175 ], [ %174, %173 ]
  %181 = lshr i64 %127, 32
  %182 = trunc i64 %181 to i32
  %183 = lshr i64 %180, 32
  %184 = trunc i64 %183 to i32
  %185 = icmp slt i32 %184, 0
  %186 = select i1 %185, i32 -2147483648, i32 2147483647
  %187 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %182, i32 %184) #16
  %188 = extractvalue { i32, i1 } %187, 1
  %189 = extractvalue { i32, i1 } %187, 0
  %190 = select i1 %188, i32 %186, i32 %189
  %191 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %191)
  store i32 2147483647, i32* %9, align 4
  %192 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %193 = load i8, i8* %192, align 4, !range !2
  %194 = icmp eq i8 %193, 0
  %195 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %196 = bitcast i32* %9 to %"class.blink::LayoutUnit"*
  %197 = select i1 %194, %"class.blink::LayoutUnit"* %196, %"class.blink::LayoutUnit"* %195
  %198 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %197, i64 0, i32 0
  %199 = load i32, i32* %198, align 4
  %200 = icmp slt i32 %190, %199
  %201 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %202 = select i1 %200, i32 %190, i32 %199
  store i32 %202, i32* %201, align 4
  br i1 %194, label %203, label %204

203:                                              ; preds = %179
  store i8 1, i8* %192, align 4
  br label %204

204:                                              ; preds = %179, %203
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %191)
  br label %205

205:                                              ; preds = %117, %204
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink13NGBoxFragment7PaddingEv(%"class.blink::NGBoxFragment"*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::NGBoxFragment"* %0 to %"class.blink::NGPhysicalBoxFragment"**
  %3 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %3, i64 0, i32 1
  %5 = bitcast i24* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 2048
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %43, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %3, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %3, i64 0, i32 6, i64 %12
  %14 = and i32 %6, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %9
  %17 = bitcast %"struct.blink::NGLink"* %13 to %"struct.blink::PhysicalRect"*
  br label %28

18:                                               ; preds = %9
  %19 = bitcast %"struct.blink::NGLink"* %13 to i8*
  %20 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %13, i64 1
  %21 = bitcast %"struct.blink::NGLink"* %20 to i32*
  %22 = load i32, i32* %21, align 8
  %23 = shl i32 %22, 6
  %24 = or i32 %23, 24
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %19, i64 %25
  %27 = bitcast i8* %26 to %"struct.blink::PhysicalRect"*
  br label %28

28:                                               ; preds = %18, %16
  %29 = phi %"struct.blink::PhysicalRect"* [ %27, %18 ], [ %17, %16 ]
  %30 = and i32 %6, 64
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %29, i64 1
  %33 = select i1 %31, %"struct.blink::PhysicalRect"* %29, %"struct.blink::PhysicalRect"* %32
  %34 = and i32 %6, 1024
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %33, i64 1
  %37 = select i1 %35, %"struct.blink::PhysicalRect"* %33, %"struct.blink::PhysicalRect"* %36
  %38 = bitcast %"struct.blink::PhysicalRect"* %37 to i64*
  %39 = load i64, i64* %38, align 4
  %40 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %37, i64 0, i32 1
  %41 = bitcast %"struct.blink::PhysicalSize"* %40 to i64*
  %42 = load i64, i64* %41, align 4
  br label %43

43:                                               ; preds = %1, %28
  %44 = phi i64 [ %39, %28 ], [ 0, %1 ]
  %45 = phi i64 [ %42, %28 ], [ 0, %1 ]
  %46 = trunc i64 %44 to i32
  %47 = lshr i64 %44, 32
  %48 = getelementptr inbounds %"class.blink::NGBoxFragment", %"class.blink::NGBoxFragment"* %0, i64 0, i32 0, i32 1
  %49 = bitcast %"class.blink::WritingDirectionMode"* %48 to i16*
  %50 = load i16, i16* %49, align 8
  %51 = trunc i16 %50 to i8
  switch i8 %51, label %73 [
    i8 0, label %52
    i8 1, label %59
    i8 3, label %59
    i8 2, label %63
    i8 4, label %68
  ]

52:                                               ; preds = %43
  %53 = trunc i64 %47 to i32
  %54 = lshr i64 %45, 32
  %55 = trunc i64 %54 to i32
  %56 = and i64 %44, 4294967295
  %57 = shl i64 %45, 32
  %58 = or i64 %57, %56
  br label %73

59:                                               ; preds = %43, %43
  %60 = trunc i64 %45 to i32
  %61 = and i64 %45, -4294967296
  %62 = or i64 %61, %47
  br label %73

63:                                               ; preds = %43
  %64 = trunc i64 %45 to i32
  %65 = lshr i64 %45, 32
  %66 = and i64 %44, -4294967296
  %67 = or i64 %65, %66
  br label %73

68:                                               ; preds = %43
  %69 = trunc i64 %45 to i32
  %70 = lshr i64 %45, 32
  %71 = and i64 %44, -4294967296
  %72 = or i64 %70, %71
  br label %73

73:                                               ; preds = %43, %52, %59, %63, %68
  %74 = phi i64 [ 0, %43 ], [ %72, %68 ], [ %67, %63 ], [ %62, %59 ], [ %58, %52 ]
  %75 = phi i32 [ 0, %43 ], [ %46, %68 ], [ %64, %63 ], [ %60, %59 ], [ %53, %52 ]
  %76 = phi i32 [ 0, %43 ], [ %69, %68 ], [ %46, %63 ], [ %46, %59 ], [ %55, %52 ]
  %77 = icmp ugt i16 %50, 255
  %78 = select i1 %77, i32 %76, i32 %75
  %79 = select i1 %77, i32 %75, i32 %76
  %80 = zext i32 %78 to i64
  %81 = shl nuw i64 %80, 32
  %82 = zext i32 %79 to i64
  %83 = or i64 %81, %82
  %84 = insertvalue { i64, i64 } undef, i64 %83, 0
  %85 = insertvalue { i64, i64 } %84, i64 %74, 1
  ret { i64, i64 } %85
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink22NGRowBaselineTabulator19ComputeRowBlockSizeENS_10LayoutUnitE(%"class.blink::NGRowBaselineTabulator"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %24, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %11, !prof !4

10:                                               ; preds = %6
  tail call void @llvm.trap() #16
  unreachable

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %15, 0
  %17 = select i1 %16, i32 -2147483648, i32 2147483647
  %18 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %13, i32 %15) #16
  %19 = extractvalue { i32, i1 } %18, 1
  %20 = extractvalue { i32, i1 } %18, 0
  %21 = select i1 %19, i32 %17, i32 %20, !prof !4
  %22 = icmp sgt i32 %21, %1
  %23 = select i1 %22, i32 %21, i32 %1
  br label %24

24:                                               ; preds = %2, %11
  %25 = phi i32 [ %23, %11 ], [ %1, %2 ]
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink22NGRowBaselineTabulator15ComputeBaselineENS_10LayoutUnitE(%"class.blink::NGRowBaselineTabulator"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  br label %24

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 4, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, -1
  %17 = select i1 %16, i32 -2147483648, i32 2147483647
  %18 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1, i32 %15) #16
  %19 = extractvalue { i32, i1 } %18, 1
  %20 = extractvalue { i32, i1 } %18, 0
  %21 = select i1 %19, i32 %17, i32 %20, !prof !4
  %22 = icmp sgt i32 %21, 0
  %23 = select i1 %22, i32 %21, i32 0
  br label %24

24:                                               ; preds = %9, %13, %6
  %25 = phi i32 [ %8, %6 ], [ %23, %13 ], [ 0, %9 ]
  ret i32 %25
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink22NGRowBaselineTabulator49ComputeBaselineDependsOnPercentageBlockDescendantEv(%"class.blink::NGRowBaselineTabulator"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %0, i64 0, i32 2
  br label %13

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::NGRowBaselineTabulator", %"class.blink::NGRowBaselineTabulator"* %0, i64 0, i32 5
  br label %13

13:                                               ; preds = %5, %11
  %14 = phi i8* [ %12, %11 ], [ %6, %5 ]
  %15 = load i8, i8* %14, align 4, !range !2
  %16 = icmp ne i8 %15, 0
  br label %17

17:                                               ; preds = %13, %7
  %18 = phi i1 [ false, %7 ], [ %16, %13 ]
  ret i1 %18
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGConstraintSpaceD2Ev(%"class.blink::NGConstraintSpace"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %8 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %7, align 8
  %9 = icmp eq %"struct.blink::NGConstraintSpace::RareData"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  tail call void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"* nonnull %8) #16
  %11 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %8 to i8*
  tail call void @free(i8* %11) #16
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %13, align 8
  store %"class.blink::NGExclusionSpaceInternal"* null, %"class.blink::NGExclusionSpaceInternal"** %13, align 8
  %15 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %14, null
  br i1 %15, label %76, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %14, i64 0, i32 6
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.1751", %"class.std::__1::unique_ptr.1751"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %18, align 8
  store %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* null, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %18, align 8
  %20 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.std::__1::unique_ptr.1751"* %17 to %"struct.std::__1::default_delete.1774"*
  tail call void @_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_(%"struct.std::__1::default_delete.1774"* %22, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* nonnull %19) #16
  br label %23

23:                                               ; preds = %21, %16
  %24 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %14, i64 0, i32 0, i32 0
  %25 = load %"class.base::RefCountedData.1735"*, %"class.base::RefCountedData.1735"** %24, align 8
  %26 = icmp eq %"class.base::RefCountedData.1735"* %25, null
  br i1 %26, label %74, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.base::RefCountedData.1735", %"class.base::RefCountedData.1735"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw sub i32* %28, i32 1 acq_rel
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %74

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.base::RefCountedData.1735", %"class.base::RefCountedData.1735"* %25, i64 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::Vector.1737", %"class.WTF::Vector.1737"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %class.scoped_refptr.1740*, %class.scoped_refptr.1740** %33, align 8
  %35 = icmp eq %class.scoped_refptr.1740* %34, null
  br i1 %35, label %72, label %36, !prof !3

36:                                               ; preds = %31
  %37 = bitcast %class.scoped_refptr.1740* %34 to i8*
  %38 = getelementptr inbounds %"class.base::RefCountedData.1735", %"class.base::RefCountedData.1735"* %25, i64 0, i32 1, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %70, label %41, !prof !4

41:                                               ; preds = %36
  %42 = zext i32 %39 to i64
  %43 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %34, i64 %42
  br label %44

44:                                               ; preds = %64, %41
  %45 = phi %class.scoped_refptr.1740* [ %65, %64 ], [ %34, %41 ]
  %46 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %45, i64 0, i32 0
  %47 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %46, align 8
  %48 = icmp eq %"struct.blink::NGExclusion"* %47, null
  br i1 %48, label %64, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %47, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %50) #16
  %51 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %64

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %47, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.base::RefCounted.1742", %"class.base::RefCounted.1742"* %55, i64 8
  %57 = bitcast %"class.base::RefCounted.1742"* %56 to %"struct.blink::NGExclusionShapeData"**
  %58 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %57, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %57, align 8
  %59 = icmp eq %"struct.blink::NGExclusionShapeData"* %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %54
  %61 = bitcast %"struct.blink::NGExclusionShapeData"* %58 to i8*
  tail call void @_ZdlPv(i8* %61) #17
  br label %62

62:                                               ; preds = %60, %54
  %63 = bitcast %"struct.blink::NGExclusion"* %47 to i8*
  tail call void @free(i8* %63) #16
  br label %64

64:                                               ; preds = %62, %49, %44
  %65 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %45, i64 1
  %66 = icmp eq %class.scoped_refptr.1740* %65, %43
  br i1 %66, label %67, label %44

67:                                               ; preds = %64
  store i32 0, i32* %38, align 4
  %68 = bitcast %"class.WTF::Vector.1737"* %32 to i8**
  %69 = load i8*, i8** %68, align 8
  br label %70

70:                                               ; preds = %67, %36
  %71 = phi i8* [ %69, %67 ], [ %37, %36 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %71) #16
  br label %72

72:                                               ; preds = %31, %70
  %73 = bitcast %"class.base::RefCountedData.1735"* %25 to i8*
  tail call void @_ZdlPv(i8* %73) #17
  br label %74

74:                                               ; preds = %72, %27, %23
  %75 = bitcast %"class.blink::NGExclusionSpaceInternal"* %14 to i8*
  tail call void @free(i8* %75) #16
  br label %76

76:                                               ; preds = %12, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 7
  %5 = zext i16 %4 to i32
  switch i32 %5, label %128 [
    i32 5, label %118
    i32 4, label %62
    i32 3, label %6
  ]

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %8 = bitcast %union.anon.1635* %7 to %"class.blink::NGTableConstraintSpaceData"**
  %9 = load %"class.blink::NGTableConstraintSpaceData"*, %"class.blink::NGTableConstraintSpaceData"** %8, align 8
  %10 = icmp eq %"class.blink::NGTableConstraintSpaceData"* %9, null
  br i1 %10, label %128, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %12) #16
  %13 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %128

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 5, i32 0, i32 0, i32 0
  %18 = load %"struct.blink::NGTableConstraintSpaceData::Cell"*, %"struct.blink::NGTableConstraintSpaceData::Cell"** %17, align 8
  %19 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Cell"* %18, null
  %20 = bitcast %"struct.blink::NGTableConstraintSpaceData::Cell"* %18 to i8*
  br i1 %19, label %27, label %21, !prof !3

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 5, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25, !prof !4

25:                                               ; preds = %21
  store i32 0, i32* %22, align 4
  br label %26

26:                                               ; preds = %25, %21
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %20) #16
  store %"struct.blink::NGTableConstraintSpaceData::Cell"* null, %"struct.blink::NGTableConstraintSpaceData::Cell"** %17, align 8
  br label %27

27:                                               ; preds = %26, %16
  %28 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %29 = load %"struct.blink::NGTableConstraintSpaceData::Row"*, %"struct.blink::NGTableConstraintSpaceData::Row"** %28, align 8
  %30 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Row"* %29, null
  %31 = bitcast %"struct.blink::NGTableConstraintSpaceData::Row"* %29 to i8*
  br i1 %30, label %38, label %32, !prof !3

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 4, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %37, label %36, !prof !4

36:                                               ; preds = %32
  store i32 0, i32* %33, align 4
  br label %37

37:                                               ; preds = %36, %32
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %31) #16
  store %"struct.blink::NGTableConstraintSpaceData::Row"* null, %"struct.blink::NGTableConstraintSpaceData::Row"** %28, align 8
  br label %38

38:                                               ; preds = %37, %27
  %39 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"struct.blink::NGTableConstraintSpaceData::Section"*, %"struct.blink::NGTableConstraintSpaceData::Section"** %39, align 8
  %41 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Section"* %40, null
  %42 = bitcast %"struct.blink::NGTableConstraintSpaceData::Section"* %40 to i8*
  br i1 %41, label %49, label %43, !prof !3

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 3, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %48, label %47, !prof !4

47:                                               ; preds = %43
  store i32 0, i32* %44, align 4
  br label %48

48:                                               ; preds = %47, %43
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %42) #16
  store %"struct.blink::NGTableConstraintSpaceData::Section"* null, %"struct.blink::NGTableConstraintSpaceData::Section"** %39, align 8
  br label %49

49:                                               ; preds = %48, %38
  %50 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  %51 = load %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"** %50, align 8
  %52 = icmp eq %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %51, null
  %53 = bitcast %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %51 to i8*
  br i1 %52, label %60, label %54, !prof !3

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 2, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %59, label %58, !prof !4

58:                                               ; preds = %54
  store i32 0, i32* %55, align 4
  br label %59

59:                                               ; preds = %58, %54
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %53) #16
  br label %60

60:                                               ; preds = %49, %59
  %61 = bitcast %"class.blink::NGTableConstraintSpaceData"* %9 to i8*
  tail call void @free(i8* %61) #16
  br label %128

62:                                               ; preds = %1
  %63 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %64 = bitcast %union.anon.1635* %63 to %"class.blink::NGTableConstraintSpaceData"**
  %65 = load %"class.blink::NGTableConstraintSpaceData"*, %"class.blink::NGTableConstraintSpaceData"** %64, align 8
  %66 = icmp eq %"class.blink::NGTableConstraintSpaceData"* %65, null
  br i1 %66, label %128, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %68) #16
  %69 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %128

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 5, i32 0, i32 0, i32 0
  %74 = load %"struct.blink::NGTableConstraintSpaceData::Cell"*, %"struct.blink::NGTableConstraintSpaceData::Cell"** %73, align 8
  %75 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Cell"* %74, null
  %76 = bitcast %"struct.blink::NGTableConstraintSpaceData::Cell"* %74 to i8*
  br i1 %75, label %83, label %77, !prof !3

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 5, i32 0, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %82, label %81, !prof !4

81:                                               ; preds = %77
  store i32 0, i32* %78, align 4
  br label %82

82:                                               ; preds = %81, %77
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %76) #16
  store %"struct.blink::NGTableConstraintSpaceData::Cell"* null, %"struct.blink::NGTableConstraintSpaceData::Cell"** %73, align 8
  br label %83

83:                                               ; preds = %82, %72
  %84 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 4, i32 0, i32 0, i32 0
  %85 = load %"struct.blink::NGTableConstraintSpaceData::Row"*, %"struct.blink::NGTableConstraintSpaceData::Row"** %84, align 8
  %86 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Row"* %85, null
  %87 = bitcast %"struct.blink::NGTableConstraintSpaceData::Row"* %85 to i8*
  br i1 %86, label %94, label %88, !prof !3

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 4, i32 0, i32 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %93, label %92, !prof !4

92:                                               ; preds = %88
  store i32 0, i32* %89, align 4
  br label %93

93:                                               ; preds = %92, %88
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %87) #16
  store %"struct.blink::NGTableConstraintSpaceData::Row"* null, %"struct.blink::NGTableConstraintSpaceData::Row"** %84, align 8
  br label %94

94:                                               ; preds = %93, %83
  %95 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 3, i32 0, i32 0, i32 0
  %96 = load %"struct.blink::NGTableConstraintSpaceData::Section"*, %"struct.blink::NGTableConstraintSpaceData::Section"** %95, align 8
  %97 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Section"* %96, null
  %98 = bitcast %"struct.blink::NGTableConstraintSpaceData::Section"* %96 to i8*
  br i1 %97, label %105, label %99, !prof !3

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 3, i32 0, i32 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %104, label %103, !prof !4

103:                                              ; preds = %99
  store i32 0, i32* %100, align 4
  br label %104

104:                                              ; preds = %103, %99
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %98) #16
  store %"struct.blink::NGTableConstraintSpaceData::Section"* null, %"struct.blink::NGTableConstraintSpaceData::Section"** %95, align 8
  br label %105

105:                                              ; preds = %104, %94
  %106 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 2, i32 0, i32 0, i32 0
  %107 = load %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"** %106, align 8
  %108 = icmp eq %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %107, null
  %109 = bitcast %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %107 to i8*
  br i1 %108, label %116, label %110, !prof !3

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 2, i32 0, i32 0, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %115, label %114, !prof !4

114:                                              ; preds = %110
  store i32 0, i32* %111, align 4
  br label %115

115:                                              ; preds = %114, %110
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %109) #16
  br label %116

116:                                              ; preds = %105, %115
  %117 = bitcast %"class.blink::NGTableConstraintSpaceData"* %65 to i8*
  tail call void @free(i8* %117) #16
  br label %128

118:                                              ; preds = %1
  %119 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %120 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %119, align 8
  %121 = icmp eq %"class.blink::SerializedScriptValue"* %120, null
  br i1 %121, label %128, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = atomicrmw sub i32* %123, i32 1 acq_rel
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %126, label %128

126:                                              ; preds = %122
  tail call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %120) #16
  %127 = bitcast %"class.blink::SerializedScriptValue"* %120 to i8*
  tail call void @free(i8* %127) #16
  br label %128

128:                                              ; preds = %126, %122, %118, %116, %67, %62, %60, %11, %6, %1
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_(%"struct.std::__1::default_delete.1774"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, null
  br i1 %3, label %127, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::Vector.1767", %"class.WTF::Vector.1767"* %5, i64 0, i32 0, i32 0, i32 0
  br i1 %8, label %58, label %10, !prof !4

10:                                               ; preds = %4
  %11 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %12 = zext i32 %7 to i64
  %13 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %11, i64 %12
  br label %14

14:                                               ; preds = %54, %10
  %15 = phi %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* [ %55, %54 ], [ %11, %10 ]
  %16 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2
  %17 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20, !prof !4

20:                                               ; preds = %14
  store i32 0, i32* %17, align 4
  br label %21

21:                                               ; preds = %20, %14
  %22 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %16, i64 0, i32 0, i32 0, i32 0
  %23 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %22, align 8
  %24 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2, i32 0, i32 1, i64 0
  %25 = bitcast i8* %24 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %26 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %23, %25
  br i1 %26, label %29, label %27, !prof !3

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %16, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"* %28, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %23) #16
  br label %29

29:                                               ; preds = %27, %21
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %22, align 8
  %30 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34, !prof !4

34:                                               ; preds = %29
  store i32 0, i32* %31, align 4
  br label %35

35:                                               ; preds = %34, %29
  %36 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %30, i64 0, i32 0, i32 0, i32 0
  %37 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %36, align 8
  %38 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1, i32 0, i32 1, i64 0
  %39 = bitcast i8* %38 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %40 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %37, %39
  br i1 %40, label %43, label %41, !prof !3

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %30, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"* %42, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %37) #16
  br label %43

43:                                               ; preds = %41, %35
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %36, align 8
  %44 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 0, i32 1, i32 0
  %45 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %44, align 8
  %46 = icmp eq %"class.blink::NGShapeExclusions"* %45, null
  br i1 %46, label %54, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #16
  %49 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %45, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %47
  tail call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %45) #16
  %53 = bitcast %"class.blink::NGShapeExclusions"* %45 to i8*
  tail call void @free(i8* %53) #16
  br label %54

54:                                               ; preds = %43, %47, %52
  %55 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 1
  %56 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %55, %13
  br i1 %56, label %57, label %14

57:                                               ; preds = %54
  store i32 0, i32* %6, align 4
  br label %58

58:                                               ; preds = %57, %4
  %59 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %60 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1, i32 0, i32 1, i64 0
  %61 = bitcast i8* %60 to %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*
  %62 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %59, %61
  br i1 %62, label %65, label %63, !prof !3

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::Vector.1767", %"class.WTF::Vector.1767"* %5, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1768"* %64, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %59) #16
  br label %65

65:                                               ; preds = %63, %58
  store %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* null, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %66 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %68, label %118, label %70, !prof !4

70:                                               ; preds = %65
  %71 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %69, align 8
  %72 = zext i32 %67 to i64
  %73 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %71, i64 %72
  br label %74

74:                                               ; preds = %114, %70
  %75 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelf"* [ %115, %114 ], [ %71, %70 ]
  %76 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 6, i32 0
  %77 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %76, align 8
  %78 = icmp eq %"class.blink::NGShapeExclusions"* %77, null
  br i1 %78, label %86, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %77, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %80) #16
  %81 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %77, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %79
  tail call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %77) #16
  %85 = bitcast %"class.blink::NGShapeExclusions"* %77 to i8*
  tail call void @free(i8* %85) #16
  br label %86

86:                                               ; preds = %84, %79, %74
  %87 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5
  %88 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5, i32 0, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %92, label %91, !prof !4

91:                                               ; preds = %86
  store i32 0, i32* %88, align 4
  br label %92

92:                                               ; preds = %91, %86
  %93 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %87, i64 0, i32 0, i32 0, i32 0
  %94 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %93, align 8
  %95 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5, i32 0, i32 1, i64 0
  %96 = bitcast i8* %95 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %97 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %94, %96
  br i1 %97, label %100, label %98, !prof !3

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %87, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"* %99, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %94) #16
  br label %100

100:                                              ; preds = %98, %92
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %93, align 8
  %101 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4
  %102 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4, i32 0, i32 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %106, label %105, !prof !4

105:                                              ; preds = %100
  store i32 0, i32* %102, align 4
  br label %106

106:                                              ; preds = %105, %100
  %107 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %101, i64 0, i32 0, i32 0, i32 0
  %108 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %107, align 8
  %109 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4, i32 0, i32 1, i64 0
  %110 = bitcast i8* %109 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %111 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %108, %110
  br i1 %111, label %114, label %112, !prof !3

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %101, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"* %113, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %108) #16
  br label %114

114:                                              ; preds = %106, %112
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %107, align 8
  %115 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 1
  %116 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %115, %73
  br i1 %116, label %117, label %74

117:                                              ; preds = %114
  store i32 0, i32* %66, align 4
  br label %118

118:                                              ; preds = %117, %65
  %119 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %69, align 8
  %120 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 1, i64 0
  %121 = bitcast i8* %120 to %"struct.blink::NGExclusionSpaceInternal::NGShelf"*
  %122 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %119, %121
  br i1 %122, label %125, label %123, !prof !3

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1755"* %124, %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %119) #16
  br label %125

125:                                              ; preds = %118, %123
  %126 = bitcast %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1 to i8*
  tail call void @free(i8* %126) #16
  br label %127

127:                                              ; preds = %125, %2
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*) local_unnamed_addr #10 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.1737", %"class.WTF::Vector.1737"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr.1740*, %class.scoped_refptr.1740** %3, align 8
  %5 = icmp eq %class.scoped_refptr.1740* %4, null
  br i1 %5, label %42, label %6, !prof !3

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr.1740* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %40, label %11, !prof !4

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %4, i64 %12
  br label %14

14:                                               ; preds = %34, %11
  %15 = phi %class.scoped_refptr.1740* [ %35, %34 ], [ %4, %11 ]
  %16 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %15, i64 0, i32 0
  %17 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %16, align 8
  %18 = icmp eq %"struct.blink::NGExclusion"* %17, null
  br i1 %18, label %34, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %20) #16
  %21 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %34

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.1742", %"class.base::RefCounted.1742"* %25, i64 8
  %27 = bitcast %"class.base::RefCounted.1742"* %26 to %"struct.blink::NGExclusionShapeData"**
  %28 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %27, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %27, align 8
  %29 = icmp eq %"struct.blink::NGExclusionShapeData"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %24
  %31 = bitcast %"struct.blink::NGExclusionShapeData"* %28 to i8*
  tail call void @_ZdlPv(i8* %31) #17
  br label %32

32:                                               ; preds = %30, %24
  %33 = bitcast %"struct.blink::NGExclusion"* %17 to i8*
  tail call void @free(i8* %33) #16
  br label %34

34:                                               ; preds = %32, %19, %14
  %35 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %15, i64 1
  %36 = icmp eq %class.scoped_refptr.1740* %35, %13
  br i1 %36, label %37, label %14

37:                                               ; preds = %34
  store i32 0, i32* %8, align 4
  %38 = bitcast %"class.WTF::Vector.1737"* %2 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %37, %6
  %41 = phi i8* [ %39, %37 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %41) #16
  store %class.scoped_refptr.1740* null, %class.scoped_refptr.1740** %3, align 8
  br label %42

42:                                               ; preds = %1, %40
  %43 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.WTF::Vector.1737", %"class.WTF::Vector.1737"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %class.scoped_refptr.1740*, %class.scoped_refptr.1740** %44, align 8
  %46 = icmp eq %class.scoped_refptr.1740* %45, null
  br i1 %46, label %83, label %47, !prof !3

47:                                               ; preds = %42
  %48 = bitcast %class.scoped_refptr.1740* %45 to i8*
  %49 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %81, label %52, !prof !4

52:                                               ; preds = %47
  %53 = zext i32 %50 to i64
  %54 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %45, i64 %53
  br label %55

55:                                               ; preds = %75, %52
  %56 = phi %class.scoped_refptr.1740* [ %76, %75 ], [ %45, %52 ]
  %57 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %56, i64 0, i32 0
  %58 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %57, align 8
  %59 = icmp eq %"struct.blink::NGExclusion"* %58, null
  br i1 %59, label %75, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #16
  %62 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %75

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.base::RefCounted.1742", %"class.base::RefCounted.1742"* %66, i64 8
  %68 = bitcast %"class.base::RefCounted.1742"* %67 to %"struct.blink::NGExclusionShapeData"**
  %69 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %68, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %68, align 8
  %70 = icmp eq %"struct.blink::NGExclusionShapeData"* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %65
  %72 = bitcast %"struct.blink::NGExclusionShapeData"* %69 to i8*
  tail call void @_ZdlPv(i8* %72) #17
  br label %73

73:                                               ; preds = %71, %65
  %74 = bitcast %"struct.blink::NGExclusion"* %58 to i8*
  tail call void @free(i8* %74) #16
  br label %75

75:                                               ; preds = %73, %60, %55
  %76 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %56, i64 1
  %77 = icmp eq %class.scoped_refptr.1740* %76, %54
  br i1 %77, label %78, label %55

78:                                               ; preds = %75
  store i32 0, i32* %49, align 4
  %79 = bitcast %"class.WTF::Vector.1737"* %43 to i8**
  %80 = load i8*, i8** %79, align 8
  br label %81

81:                                               ; preds = %78, %47
  %82 = phi i8* [ %80, %78 ], [ %48, %47 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %82) #16
  store %class.scoped_refptr.1740* null, %class.scoped_refptr.1740** %44, align 8
  br label %83

83:                                               ; preds = %42, %81
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1768"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*) local_unnamed_addr #10 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #16
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1755"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"*) local_unnamed_addr #10 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #16
  ret void
}

declare { i64, i64 } @_ZNK5blink14NGTableBorders10CellBorderERKNS_11NGBlockNodeEjjjNS_20WritingDirectionModeE(%"class.blink::NGTableBorders"*, %"class.blink::NGBlockNode"* dereferenceable(16), i32, i32, i32, i16) local_unnamed_addr #2

declare { i64, i64 } @_ZNK5blink14NGTableBorders21CellPaddingForMeasureERKNS_13ComputedStyleENS_20WritingDirectionModeE(%"class.blink::NGTableBorders"*, %"class.blink::ComputedStyle"* dereferenceable(104), i16) local_unnamed_addr #2

declare void @_ZN5blink12NGTableTypes26CreateCellInlineConstraintERKNS_11NGBlockNodeENS_11WritingModeEbRKNS_10NGBoxStrutES7_(%"struct.blink::NGTableTypes::CellInlineConstraint"* sret, %"class.blink::NGBlockNode"* dereferenceable(16), i8 zeroext, i1 zeroext, %"struct.blink::NGBoxStrut"* dereferenceable(16), %"struct.blink::NGBoxStrut"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink12NGTableTypes20CellInlineConstraint9EncompassERKS1_(%"struct.blink::NGTableTypes::CellInlineConstraint"*, %"struct.blink::NGTableTypes::CellInlineConstraint"* dereferenceable(24)) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4absl8optionalIN5blink12NGTableTypes20CellInlineConstraintEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 76620946
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 76620946) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = mul i64 %0, 28
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(28) %"class.absl::optional.1905"* @_ZN3WTF6VectorIN4absl8optionalIN5blink12NGTableTypes20CellInlineConstraintEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1902"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1902", %"class.WTF::Vector.1902"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.1902", %"class.WTF::Vector.1902"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.absl::optional.1905"*, %"class.absl::optional.1905"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.absl::optional.1905", %"class.absl::optional.1905"* %24, i64 %25
  ret %"class.absl::optional.1905"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGTableTypes11ColspanCellEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 67043328
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 67043328) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 5
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

declare void @_ZN5blink12NGTableTypes6Column9EncompassERKN4absl8optionalINS0_20CellInlineConstraintEEE(%"struct.blink::NGTableTypes::Column"*, %"class.absl::optional.1905"* dereferenceable(28)) local_unnamed_addr #2

declare void @_ZN5blink23NGTableAlgorithmHelpers31DistributeColspanCellsToColumnsERKN3WTF6VectorINS_12NGTableTypes11ColspanCellELj0ENS1_18PartitionAllocatorEEENS_10LayoutUnitEbPN4base14RefCountedDataINS2_INS3_6ColumnELj0ES5_EEEE(%"class.WTF::Vector.1912"* dereferenceable(16), i32, i1 zeroext, %"class.base::RefCountedData.1873"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink12NGTableTypes6ColumnELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.1875"*, %"struct.blink::NGTableTypes::Column"* dereferenceable(32)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1875", %"class.WTF::Vector.1875"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1875", %"class.WTF::Vector.1875"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::NGTableTypes::Column"*, %"struct.blink::NGTableTypes::Column"** %6, align 8
  %8 = icmp ugt %"struct.blink::NGTableTypes::Column"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::NGTableTypes::Column"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1875", %"class.WTF::Vector.1875"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::NGTableTypes::Column"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGTableTypes6ColumnEEEmm(i64 %26) #16
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12NGTableTypes6ColumnEEEPKcv, i64 0, i64 0)) #16
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1875"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 5
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.blink::NGTableTypes::Column"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 5
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.blink::NGTableTypes::Column"*, %"struct.blink::NGTableTypes::Column"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.blink::NGTableTypes::Column"* %38, null
  %41 = and i1 %39, %40
  br i1 %41, label %42, label %48, !prof !3

42:                                               ; preds = %35
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = shl nuw nsw i64 %44, 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* align 4 %45, i64 %46, i1 false) #16
  %47 = load %"struct.blink::NGTableTypes::Column"*, %"struct.blink::NGTableTypes::Column"** %6, align 8
  br label %48

48:                                               ; preds = %42, %35
  %49 = phi %"struct.blink::NGTableTypes::Column"* [ %38, %35 ], [ %47, %42 ]
  %50 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #16
  %51 = bitcast %"class.WTF::Vector.1875"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.blink::NGTableTypes::Column"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.blink::NGTableTypes::Column"* %1 to i64
  %56 = ptrtoint %"struct.blink::NGTableTypes::Column"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 5
  %59 = getelementptr inbounds %"class.WTF::Vector.1875", %"class.WTF::Vector.1875"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"struct.blink::NGTableTypes::Column"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGTableTypes6ColumnEEEmm(i64 %71) #16
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12NGTableTypes6ColumnEEEPKcv, i64 0, i64 0)) #16
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1875"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.blink::NGTableTypes::Column"*, %"struct.blink::NGTableTypes::Column"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.blink::NGTableTypes::Column"* %78, null
  %81 = and i1 %79, %80
  br i1 %81, label %82, label %88, !prof !3

82:                                               ; preds = %77
  %83 = load i32, i32* %3, align 4
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = shl nuw nsw i64 %84, 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* align 4 %85, i64 %86, i1 false) #16
  %87 = load %"struct.blink::NGTableTypes::Column"*, %"struct.blink::NGTableTypes::Column"** %6, align 8
  br label %88

88:                                               ; preds = %82, %77
  %89 = phi %"struct.blink::NGTableTypes::Column"* [ %78, %77 ], [ %87, %82 ]
  %90 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #16
  %91 = bitcast %"class.WTF::Vector.1875"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %88, %75
  %93 = lshr i64 %72, 5
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.blink::NGTableTypes::Column"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.blink::NGTableTypes::Column"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %97, i64 %58
  br label %99

99:                                               ; preds = %48, %29, %13, %96
  %100 = phi %"struct.blink::NGTableTypes::Column"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %48 ]
  %101 = phi %"struct.blink::NGTableTypes::Column"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %48 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %100, i64 %103, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %105, i64 32, i1 false) #16
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGTableTypes6ColumnEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 67043328
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 67043328) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 5
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(28) %"class.absl::optional.1905"* @_ZNK3WTF6VectorIN4absl8optionalIN5blink12NGTableTypes20CellInlineConstraintEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1902"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1902", %"class.WTF::Vector.1902"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.1902", %"class.WTF::Vector.1902"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.absl::optional.1905"*, %"class.absl::optional.1905"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.absl::optional.1905", %"class.absl::optional.1905"* %24, i64 %25
  ret %"class.absl::optional.1905"* %26
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__113__stable_sortIRZN5blink12_GLOBAL__N_139ApplyCellConstraintsToColumnConstraintsERKN3WTF6VectorIN4absl8optionalINS1_12NGTableTypes20CellInlineConstraintEEELj0ENS3_18PartitionAllocatorEEENS1_10LayoutUnitEbPNS4_INS7_11ColspanCellELj0ESA_EEPN4base14RefCountedDataINS4_INS7_6ColumnELj0ESA_EEEEE3$_1PSF_EEvT0_SR_T_NS_15iterator_traitsISR_E15difference_typeEPNSU_10value_typeEl"(%"struct.blink::NGTableTypes::ColspanCell"*, %"struct.blink::NGTableTypes::ColspanCell"*, %class.anon.2027* dereferenceable(1), i64, %"struct.blink::NGTableTypes::ColspanCell"*, i64) unnamed_addr #0 {
  %7 = alloca [24 x i8], align 4
  %8 = alloca %"struct.blink::NGTableTypes::ColspanCell", align 4
  switch i64 %3, label %28 [
    i64 0, label %202
    i64 1, label %202
    i64 2, label %9
  ]

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %1, i64 -1
  %11 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %1, i64 -1, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %22

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %1, i64 -1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp ult i32 %18, %20
  br i1 %21, label %24, label %202

22:                                               ; preds = %9
  %23 = icmp ult i32 %12, %14
  br i1 %23, label %24, label %202

24:                                               ; preds = %16, %22
  %25 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25)
  %26 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %25, i8* align 4 %26, i64 32, i1 false) #16
  %27 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* align 4 %27, i64 32, i1 false) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* nonnull align 4 %25, i64 32, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25)
  br label %202

28:                                               ; preds = %6
  %29 = icmp slt i64 %3, 129
  br i1 %29, label %30, label %68

30:                                               ; preds = %28
  %31 = getelementptr inbounds [24 x i8], [24 x i8]* %7, i64 0, i64 0
  %32 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %0, %1
  br i1 %32, label %202, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %0, i64 1
  %35 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %34, %1
  br i1 %35, label %202, label %36

36:                                               ; preds = %33, %57
  %37 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %62, %57 ], [ %34, %33 ]
  %38 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %37, %57 ], [ %0, %33 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31)
  %39 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %31, i8* align 4 %39, i64 24, i1 false) #16
  %40 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %38, i64 1, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %38, i64 1, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %37, %0
  br i1 %44, label %57, label %45

45:                                               ; preds = %36, %64
  %46 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %47, %64 ], [ %37, %36 ]
  %47 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %46, i64 -1
  %48 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %46, i64 -1, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %43, %49
  br i1 %50, label %51, label %55

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %46, i64 -1, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = icmp ult i32 %41, %53
  br i1 %54, label %64, label %57

55:                                               ; preds = %45
  %56 = icmp ult i32 %43, %49
  br i1 %56, label %64, label %57

57:                                               ; preds = %64, %55, %51, %36
  %58 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %0, %36 ], [ %46, %55 ], [ %0, %64 ], [ %46, %51 ]
  %59 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* nonnull align 4 %31, i64 24, i1 false) #16
  %60 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %58, i64 0, i32 1
  store i32 %41, i32* %60, align 4
  %61 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %58, i64 0, i32 2
  store i32 %43, i32* %61, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31)
  %62 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %37, i64 1
  %63 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %62, %1
  br i1 %63, label %202, label %36

64:                                               ; preds = %55, %51
  %65 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %46 to i8*
  %66 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %65, i8* align 4 %66, i64 32, i1 false) #16
  %67 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %47, %0
  br i1 %67, label %57, label %45

68:                                               ; preds = %28
  %69 = lshr i64 %3, 1
  %70 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %0, i64 %69
  %71 = icmp sgt i64 %3, %5
  br i1 %71, label %200, label %72

72:                                               ; preds = %68
  tail call fastcc void @"_ZNSt3__118__stable_sort_moveIRZN5blink12_GLOBAL__N_139ApplyCellConstraintsToColumnConstraintsERKN3WTF6VectorIN4absl8optionalINS1_12NGTableTypes20CellInlineConstraintEEELj0ENS3_18PartitionAllocatorEEENS1_10LayoutUnitEbPNS4_INS7_11ColspanCellELj0ESA_EEPN4base14RefCountedDataINS4_INS7_6ColumnELj0ESA_EEEEE3$_1PSF_EEvT0_SR_T_NS_15iterator_traitsISR_E15difference_typeEPNSU_10value_typeE"(%"struct.blink::NGTableTypes::ColspanCell"* %0, %"struct.blink::NGTableTypes::ColspanCell"* %70, %class.anon.2027* dereferenceable(1) %2, i64 %69, %"struct.blink::NGTableTypes::ColspanCell"* %4)
  %73 = sub nsw i64 %3, %69
  %74 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %4, i64 %69
  tail call fastcc void @"_ZNSt3__118__stable_sort_moveIRZN5blink12_GLOBAL__N_139ApplyCellConstraintsToColumnConstraintsERKN3WTF6VectorIN4absl8optionalINS1_12NGTableTypes20CellInlineConstraintEEELj0ENS3_18PartitionAllocatorEEENS1_10LayoutUnitEbPNS4_INS7_11ColspanCellELj0ESA_EEPN4base14RefCountedDataINS4_INS7_6ColumnELj0ESA_EEEEE3$_1PSF_EEvT0_SR_T_NS_15iterator_traitsISR_E15difference_typeEPNSU_10value_typeE"(%"struct.blink::NGTableTypes::ColspanCell"* %70, %"struct.blink::NGTableTypes::ColspanCell"* %1, %class.anon.2027* dereferenceable(1) %2, i64 %73, %"struct.blink::NGTableTypes::ColspanCell"* %74)
  %75 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %4, i64 %3
  br label %102

76:                                               ; preds = %175
  %77 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %176, %75
  br i1 %77, label %202, label %78

78:                                               ; preds = %76
  %79 = ptrtoint %"struct.blink::NGTableTypes::ColspanCell"* %176 to i64
  %80 = add i64 %3, -1
  %81 = getelementptr %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %4, i64 %80, i32 0, i32 0, i32 0
  %82 = ptrtoint i32* %81 to i64
  %83 = sub i64 %82, %79
  %84 = lshr i64 %83, 5
  %85 = add nuw nsw i64 %84, 1
  %86 = and i64 %85, 3
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %98, label %88

88:                                               ; preds = %78, %88
  %89 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %95, %88 ], [ %178, %78 ]
  %90 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %94, %88 ], [ %176, %78 ]
  %91 = phi i64 [ %96, %88 ], [ %86, %78 ]
  %92 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %89 to i8*
  %93 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %92, i8* align 4 %93, i64 32, i1 false) #16
  %94 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %90, i64 1
  %95 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %89, i64 1
  %96 = add i64 %91, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %88, !llvm.loop !14

98:                                               ; preds = %88, %78
  %99 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %178, %78 ], [ %95, %88 ]
  %100 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %176, %78 ], [ %94, %88 ]
  %101 = icmp ult i64 %83, 96
  br i1 %101, label %202, label %180

102:                                              ; preds = %72, %175
  %103 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %177, %175 ], [ %4, %72 ]
  %104 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %178, %175 ], [ %0, %72 ]
  %105 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %176, %175 ], [ %74, %72 ]
  %106 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %105, %75
  br i1 %106, label %107, label %153

107:                                              ; preds = %102
  %108 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %103, %74
  br i1 %108, label %202, label %109

109:                                              ; preds = %107
  %110 = ptrtoint %"struct.blink::NGTableTypes::ColspanCell"* %103 to i64
  %111 = add nsw i64 %69, -1
  %112 = getelementptr %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %4, i64 %111, i32 0, i32 0, i32 0
  %113 = ptrtoint i32* %112 to i64
  %114 = sub i64 %113, %110
  %115 = lshr i64 %114, 5
  %116 = add nuw nsw i64 %115, 1
  %117 = and i64 %116, 3
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %129, label %119

119:                                              ; preds = %109, %119
  %120 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %125, %119 ], [ %103, %109 ]
  %121 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %126, %119 ], [ %104, %109 ]
  %122 = phi i64 [ %127, %119 ], [ %117, %109 ]
  %123 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %121 to i8*
  %124 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %120 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %123, i8* align 4 %124, i64 32, i1 false) #16
  %125 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %120, i64 1
  %126 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %121, i64 1
  %127 = add i64 %122, -1
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %129, label %119, !llvm.loop !16

129:                                              ; preds = %119, %109
  %130 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %103, %109 ], [ %125, %119 ]
  %131 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %104, %109 ], [ %126, %119 ]
  %132 = icmp ult i64 %114, 96
  br i1 %132, label %202, label %133

133:                                              ; preds = %129, %133
  %134 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %150, %133 ], [ %130, %129 ]
  %135 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %151, %133 ], [ %131, %129 ]
  %136 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %135 to i8*
  %137 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %134 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %136, i8* align 4 %137, i64 32, i1 false) #16
  %138 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %134, i64 1
  %139 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %135, i64 1
  %140 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %139 to i8*
  %141 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %138 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %140, i8* align 4 %141, i64 32, i1 false) #16
  %142 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %134, i64 2
  %143 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %135, i64 2
  %144 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %143 to i8*
  %145 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %142 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %144, i8* align 4 %145, i64 32, i1 false) #16
  %146 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %134, i64 3
  %147 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %135, i64 3
  %148 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %147 to i8*
  %149 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %149, i64 32, i1 false) #16
  %150 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %134, i64 4
  %151 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %135, i64 4
  %152 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %150, %74
  br i1 %152, label %202, label %133

153:                                              ; preds = %102
  %154 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %105, i64 0, i32 2
  %155 = load i32, i32* %154, align 4
  %156 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %103, i64 0, i32 2
  %157 = load i32, i32* %156, align 4
  %158 = icmp eq i32 %155, %157
  br i1 %158, label %159, label %165

159:                                              ; preds = %153
  %160 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %105, i64 0, i32 1
  %161 = load i32, i32* %160, align 4
  %162 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %103, i64 0, i32 1
  %163 = load i32, i32* %162, align 4
  %164 = icmp ult i32 %161, %163
  br i1 %164, label %167, label %171

165:                                              ; preds = %153
  %166 = icmp ult i32 %155, %157
  br i1 %166, label %167, label %171

167:                                              ; preds = %165, %159
  %168 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %104 to i8*
  %169 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %105 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %168, i8* align 4 %169, i64 32, i1 false) #16
  %170 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %105, i64 1
  br label %175

171:                                              ; preds = %165, %159
  %172 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %104 to i8*
  %173 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %103 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %172, i8* align 4 %173, i64 32, i1 false) #16
  %174 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %103, i64 1
  br label %175

175:                                              ; preds = %171, %167
  %176 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %170, %167 ], [ %105, %171 ]
  %177 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %103, %167 ], [ %174, %171 ]
  %178 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %104, i64 1
  %179 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %177, %74
  br i1 %179, label %76, label %102

180:                                              ; preds = %98, %180
  %181 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %198, %180 ], [ %99, %98 ]
  %182 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %197, %180 ], [ %100, %98 ]
  %183 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %181 to i8*
  %184 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %182 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %183, i8* align 4 %184, i64 32, i1 false) #16
  %185 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %182, i64 1
  %186 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %181, i64 1
  %187 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %186 to i8*
  %188 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %185 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %187, i8* align 4 %188, i64 32, i1 false) #16
  %189 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %182, i64 2
  %190 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %181, i64 2
  %191 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %190 to i8*
  %192 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %189 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %191, i8* align 4 %192, i64 32, i1 false) #16
  %193 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %182, i64 3
  %194 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %181, i64 3
  %195 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %194 to i8*
  %196 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %193 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %195, i8* align 4 %196, i64 32, i1 false) #16
  %197 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %182, i64 4
  %198 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %181, i64 4
  %199 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %197, %75
  br i1 %199, label %202, label %180

200:                                              ; preds = %68
  tail call fastcc void @"_ZNSt3__113__stable_sortIRZN5blink12_GLOBAL__N_139ApplyCellConstraintsToColumnConstraintsERKN3WTF6VectorIN4absl8optionalINS1_12NGTableTypes20CellInlineConstraintEEELj0ENS3_18PartitionAllocatorEEENS1_10LayoutUnitEbPNS4_INS7_11ColspanCellELj0ESA_EEPN4base14RefCountedDataINS4_INS7_6ColumnELj0ESA_EEEEE3$_1PSF_EEvT0_SR_T_NS_15iterator_traitsISR_E15difference_typeEPNSU_10value_typeEl"(%"struct.blink::NGTableTypes::ColspanCell"* %0, %"struct.blink::NGTableTypes::ColspanCell"* %70, %class.anon.2027* dereferenceable(1) %2, i64 %69, %"struct.blink::NGTableTypes::ColspanCell"* %4, i64 %5)
  %201 = sub nsw i64 %3, %69
  tail call fastcc void @"_ZNSt3__113__stable_sortIRZN5blink12_GLOBAL__N_139ApplyCellConstraintsToColumnConstraintsERKN3WTF6VectorIN4absl8optionalINS1_12NGTableTypes20CellInlineConstraintEEELj0ENS3_18PartitionAllocatorEEENS1_10LayoutUnitEbPNS4_INS7_11ColspanCellELj0ESA_EEPN4base14RefCountedDataINS4_INS7_6ColumnELj0ESA_EEEEE3$_1PSF_EEvT0_SR_T_NS_15iterator_traitsISR_E15difference_typeEPNSU_10value_typeEl"(%"struct.blink::NGTableTypes::ColspanCell"* %70, %"struct.blink::NGTableTypes::ColspanCell"* %1, %class.anon.2027* dereferenceable(1) %2, i64 %201, %"struct.blink::NGTableTypes::ColspanCell"* %4, i64 %5)
  tail call fastcc void @"_ZNSt3__115__inplace_mergeIRZN5blink12_GLOBAL__N_139ApplyCellConstraintsToColumnConstraintsERKN3WTF6VectorIN4absl8optionalINS1_12NGTableTypes20CellInlineConstraintEEELj0ENS3_18PartitionAllocatorEEENS1_10LayoutUnitEbPNS4_INS7_11ColspanCellELj0ESA_EEPN4base14RefCountedDataINS4_INS7_6ColumnELj0ESA_EEEEE3$_1PSF_EEvT0_SR_SR_T_NS_15iterator_traitsISR_E15difference_typeESV_PNSU_10value_typeEl"(%"struct.blink::NGTableTypes::ColspanCell"* %0, %"struct.blink::NGTableTypes::ColspanCell"* %70, %"struct.blink::NGTableTypes::ColspanCell"* %1, %class.anon.2027* dereferenceable(1) %2, i64 %69, i64 %201, %"struct.blink::NGTableTypes::ColspanCell"* %4, i64 %5)
  br label %202

202:                                              ; preds = %98, %180, %129, %133, %57, %107, %76, %33, %30, %16, %200, %22, %24, %6, %6
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__118__stable_sort_moveIRZN5blink12_GLOBAL__N_139ApplyCellConstraintsToColumnConstraintsERKN3WTF6VectorIN4absl8optionalINS1_12NGTableTypes20CellInlineConstraintEEELj0ENS3_18PartitionAllocatorEEENS1_10LayoutUnitEbPNS4_INS7_11ColspanCellELj0ESA_EEPN4base14RefCountedDataINS4_INS7_6ColumnELj0ESA_EEEEE3$_1PSF_EEvT0_SR_T_NS_15iterator_traitsISR_E15difference_typeEPNSU_10value_typeE"(%"struct.blink::NGTableTypes::ColspanCell"*, %"struct.blink::NGTableTypes::ColspanCell"*, %class.anon.2027* dereferenceable(1), i64, %"struct.blink::NGTableTypes::ColspanCell"*) unnamed_addr #0 {
  switch i64 %3, label %38 [
    i64 0, label %231
    i64 1, label %6
    i64 2, label %9
  ]

6:                                                ; preds = %5
  %7 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %4 to i8*
  %8 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 32, i1 false)
  br label %231

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %1, i64 -1
  %11 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %1, i64 -1, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %23

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %1, i64 -1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp ult i32 %18, %20
  %22 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %4 to i8*
  br i1 %21, label %26, label %32

23:                                               ; preds = %9
  %24 = icmp ult i32 %12, %14
  %25 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %4 to i8*
  br i1 %24, label %26, label %32

26:                                               ; preds = %16, %23
  %27 = phi i8* [ %22, %16 ], [ %25, %23 ]
  %28 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* align 4 %28, i64 32, i1 false)
  %29 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %4, i64 1
  %30 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %29 to i8*
  %31 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %30, i8* align 4 %31, i64 32, i1 false)
  br label %231

32:                                               ; preds = %16, %23
  %33 = phi i8* [ %22, %16 ], [ %25, %23 ]
  %34 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* align 4 %34, i64 32, i1 false)
  %35 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %4, i64 1
  %36 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %35 to i8*
  %37 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 32, i1 false)
  br label %231

38:                                               ; preds = %5
  %39 = icmp slt i64 %3, 9
  br i1 %39, label %40, label %98

40:                                               ; preds = %38
  %41 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %0, %1
  br i1 %41, label %231, label %42

42:                                               ; preds = %40
  %43 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %4 to i8*
  %44 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %43, i8* align 4 %44, i64 32, i1 false) #16
  %45 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %0, i64 1
  %46 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %45, %1
  br i1 %46, label %231, label %47

47:                                               ; preds = %42, %93
  %48 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %96, %93 ], [ %45, %42 ]
  %49 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %51, %93 ], [ %4, %42 ]
  %50 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %48, %93 ], [ %0, %42 ]
  %51 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %49, i64 1
  %52 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %50, i64 1, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %49, i64 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %53, %55
  br i1 %56, label %57, label %64

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %50, i64 1, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %49, i64 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = icmp ult i32 %59, %61
  %63 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %51 to i8*
  br i1 %62, label %67, label %93

64:                                               ; preds = %47
  %65 = icmp ult i32 %53, %55
  %66 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %51 to i8*
  br i1 %65, label %67, label %93

67:                                               ; preds = %64, %57
  %68 = phi i8* [ %63, %57 ], [ %66, %64 ]
  %69 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %69, i64 32, i1 false) #16
  %70 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %50, i64 1, i32 1
  %71 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %49, %4
  br i1 %71, label %93, label %72

72:                                               ; preds = %67, %86
  %73 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %74, %86 ], [ %49, %67 ]
  %74 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %73, i64 -1
  %75 = load i32, i32* %52, align 4
  %76 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %73, i64 -1, i32 2
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %75, %77
  br i1 %78, label %79, label %84

79:                                               ; preds = %72
  %80 = load i32, i32* %70, align 4
  %81 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %73, i64 -1, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = icmp ult i32 %80, %82
  br i1 %83, label %86, label %90

84:                                               ; preds = %72
  %85 = icmp ult i32 %75, %77
  br i1 %85, label %86, label %90

86:                                               ; preds = %84, %79
  %87 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %73 to i8*
  %88 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %74 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %87, i8* align 4 %88, i64 32, i1 false) #16
  %89 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %74, %4
  br i1 %89, label %90, label %72

90:                                               ; preds = %86, %84, %79
  %91 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %73, %84 ], [ %4, %86 ], [ %73, %79 ]
  %92 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %91 to i8*
  br label %93

93:                                               ; preds = %57, %64, %67, %90
  %94 = phi i8* [ %92, %90 ], [ %43, %67 ], [ %63, %57 ], [ %66, %64 ]
  %95 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %94, i8* align 4 %95, i64 32, i1 false) #16
  %96 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %48, i64 1
  %97 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %96, %1
  br i1 %97, label %231, label %47

98:                                               ; preds = %38
  %99 = lshr i64 %3, 1
  %100 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %0, i64 %99
  tail call fastcc void @"_ZNSt3__113__stable_sortIRZN5blink12_GLOBAL__N_139ApplyCellConstraintsToColumnConstraintsERKN3WTF6VectorIN4absl8optionalINS1_12NGTableTypes20CellInlineConstraintEEELj0ENS3_18PartitionAllocatorEEENS1_10LayoutUnitEbPNS4_INS7_11ColspanCellELj0ESA_EEPN4base14RefCountedDataINS4_INS7_6ColumnELj0ESA_EEEEE3$_1PSF_EEvT0_SR_T_NS_15iterator_traitsISR_E15difference_typeEPNSU_10value_typeEl"(%"struct.blink::NGTableTypes::ColspanCell"* %0, %"struct.blink::NGTableTypes::ColspanCell"* %100, %class.anon.2027* dereferenceable(1) %2, i64 %99, %"struct.blink::NGTableTypes::ColspanCell"* %4, i64 %99)
  %101 = sub nsw i64 %3, %99
  %102 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %4, i64 %99
  tail call fastcc void @"_ZNSt3__113__stable_sortIRZN5blink12_GLOBAL__N_139ApplyCellConstraintsToColumnConstraintsERKN3WTF6VectorIN4absl8optionalINS1_12NGTableTypes20CellInlineConstraintEEELj0ENS3_18PartitionAllocatorEEENS1_10LayoutUnitEbPNS4_INS7_11ColspanCellELj0ESA_EEPN4base14RefCountedDataINS4_INS7_6ColumnELj0ESA_EEEEE3$_1PSF_EEvT0_SR_T_NS_15iterator_traitsISR_E15difference_typeEPNSU_10value_typeEl"(%"struct.blink::NGTableTypes::ColspanCell"* %100, %"struct.blink::NGTableTypes::ColspanCell"* %1, %class.anon.2027* dereferenceable(1) %2, i64 %101, %"struct.blink::NGTableTypes::ColspanCell"* %102, i64 %101)
  %103 = icmp eq i64 %99, 0
  br i1 %103, label %104, label %151

104:                                              ; preds = %226, %98
  %105 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %100, %98 ], [ %227, %226 ]
  %106 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %4, %98 ], [ %229, %226 ]
  %107 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %105, %1
  br i1 %107, label %231, label %108

108:                                              ; preds = %104
  %109 = ptrtoint %"struct.blink::NGTableTypes::ColspanCell"* %105 to i64
  %110 = getelementptr %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %1, i64 -1, i32 0, i32 0, i32 0
  %111 = ptrtoint i32* %110 to i64
  %112 = sub i64 %111, %109
  %113 = lshr i64 %112, 5
  %114 = add nuw nsw i64 %113, 1
  %115 = and i64 %114, 3
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %127, label %117

117:                                              ; preds = %108, %117
  %118 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %124, %117 ], [ %106, %108 ]
  %119 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %123, %117 ], [ %105, %108 ]
  %120 = phi i64 [ %125, %117 ], [ %115, %108 ]
  %121 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %118 to i8*
  %122 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %119 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %121, i8* align 4 %122, i64 32, i1 false) #16
  %123 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %119, i64 1
  %124 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %118, i64 1
  %125 = add i64 %120, -1
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %127, label %117, !llvm.loop !17

127:                                              ; preds = %117, %108
  %128 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %106, %108 ], [ %124, %117 ]
  %129 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %105, %108 ], [ %123, %117 ]
  %130 = icmp ult i64 %112, 96
  br i1 %130, label %231, label %131

131:                                              ; preds = %127, %131
  %132 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %149, %131 ], [ %128, %127 ]
  %133 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %148, %131 ], [ %129, %127 ]
  %134 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %132 to i8*
  %135 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %133 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %134, i8* align 4 %135, i64 32, i1 false) #16
  %136 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %133, i64 1
  %137 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %132, i64 1
  %138 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %137 to i8*
  %139 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %136 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %138, i8* align 4 %139, i64 32, i1 false) #16
  %140 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %133, i64 2
  %141 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %132, i64 2
  %142 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %141 to i8*
  %143 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %140 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %142, i8* align 4 %143, i64 32, i1 false) #16
  %144 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %133, i64 3
  %145 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %132, i64 3
  %146 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %145 to i8*
  %147 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %144 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %146, i8* align 4 %147, i64 32, i1 false) #16
  %148 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %133, i64 4
  %149 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %132, i64 4
  %150 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %148, %1
  br i1 %150, label %231, label %131

151:                                              ; preds = %98, %226
  %152 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %228, %226 ], [ %0, %98 ]
  %153 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %229, %226 ], [ %4, %98 ]
  %154 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %227, %226 ], [ %100, %98 ]
  %155 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %154, %1
  br i1 %155, label %156, label %202

156:                                              ; preds = %151
  %157 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %152, %100
  br i1 %157, label %231, label %158

158:                                              ; preds = %156
  %159 = ptrtoint %"struct.blink::NGTableTypes::ColspanCell"* %152 to i64
  %160 = add nsw i64 %99, -1
  %161 = getelementptr %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %0, i64 %160, i32 0, i32 0, i32 0
  %162 = ptrtoint i32* %161 to i64
  %163 = sub i64 %162, %159
  %164 = lshr i64 %163, 5
  %165 = add nuw nsw i64 %164, 1
  %166 = and i64 %165, 3
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %178, label %168

168:                                              ; preds = %158, %168
  %169 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %174, %168 ], [ %152, %158 ]
  %170 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %175, %168 ], [ %153, %158 ]
  %171 = phi i64 [ %176, %168 ], [ %166, %158 ]
  %172 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %170 to i8*
  %173 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %169 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %172, i8* align 4 %173, i64 32, i1 false) #16
  %174 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %169, i64 1
  %175 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %170, i64 1
  %176 = add i64 %171, -1
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %168, !llvm.loop !18

178:                                              ; preds = %168, %158
  %179 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %152, %158 ], [ %174, %168 ]
  %180 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %153, %158 ], [ %175, %168 ]
  %181 = icmp ult i64 %163, 96
  br i1 %181, label %231, label %182

182:                                              ; preds = %178, %182
  %183 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %199, %182 ], [ %179, %178 ]
  %184 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %200, %182 ], [ %180, %178 ]
  %185 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %184 to i8*
  %186 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %183 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %185, i8* align 4 %186, i64 32, i1 false) #16
  %187 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %183, i64 1
  %188 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %184, i64 1
  %189 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %188 to i8*
  %190 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %187 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %189, i8* align 4 %190, i64 32, i1 false) #16
  %191 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %183, i64 2
  %192 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %184, i64 2
  %193 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %192 to i8*
  %194 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %191 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %193, i8* align 4 %194, i64 32, i1 false) #16
  %195 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %183, i64 3
  %196 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %184, i64 3
  %197 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %196 to i8*
  %198 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %195 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %197, i8* align 4 %198, i64 32, i1 false) #16
  %199 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %183, i64 4
  %200 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %184, i64 4
  %201 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %199, %100
  br i1 %201, label %231, label %182

202:                                              ; preds = %151
  %203 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %154, i64 0, i32 2
  %204 = load i32, i32* %203, align 4
  %205 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %152, i64 0, i32 2
  %206 = load i32, i32* %205, align 4
  %207 = icmp eq i32 %204, %206
  br i1 %207, label %208, label %215

208:                                              ; preds = %202
  %209 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %154, i64 0, i32 1
  %210 = load i32, i32* %209, align 4
  %211 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %152, i64 0, i32 1
  %212 = load i32, i32* %211, align 4
  %213 = icmp ult i32 %210, %212
  %214 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %153 to i8*
  br i1 %213, label %218, label %222

215:                                              ; preds = %202
  %216 = icmp ult i32 %204, %206
  %217 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %153 to i8*
  br i1 %216, label %218, label %222

218:                                              ; preds = %215, %208
  %219 = phi i8* [ %214, %208 ], [ %217, %215 ]
  %220 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %154 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %219, i8* align 4 %220, i64 32, i1 false) #16
  %221 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %154, i64 1
  br label %226

222:                                              ; preds = %215, %208
  %223 = phi i8* [ %214, %208 ], [ %217, %215 ]
  %224 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %152 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %223, i8* align 4 %224, i64 32, i1 false) #16
  %225 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %152, i64 1
  br label %226

226:                                              ; preds = %222, %218
  %227 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %221, %218 ], [ %154, %222 ]
  %228 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %152, %218 ], [ %225, %222 ]
  %229 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %153, i64 1
  %230 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %228, %100
  br i1 %230, label %104, label %151

231:                                              ; preds = %178, %182, %127, %131, %93, %156, %104, %42, %40, %26, %32, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__115__inplace_mergeIRZN5blink12_GLOBAL__N_139ApplyCellConstraintsToColumnConstraintsERKN3WTF6VectorIN4absl8optionalINS1_12NGTableTypes20CellInlineConstraintEEELj0ENS3_18PartitionAllocatorEEENS1_10LayoutUnitEbPNS4_INS7_11ColspanCellELj0ESA_EEPN4base14RefCountedDataINS4_INS7_6ColumnELj0ESA_EEEEE3$_1PSF_EEvT0_SR_SR_T_NS_15iterator_traitsISR_E15difference_typeESV_PNSU_10value_typeEl"(%"struct.blink::NGTableTypes::ColspanCell"*, %"struct.blink::NGTableTypes::ColspanCell"*, %"struct.blink::NGTableTypes::ColspanCell"*, %class.anon.2027* readnone dereferenceable(1), i64, i64, %"struct.blink::NGTableTypes::ColspanCell"*, i64) unnamed_addr #0 {
  %9 = ptrtoint %"struct.blink::NGTableTypes::ColspanCell"* %6 to i64
  %10 = alloca %"struct.blink::NGTableTypes::ColspanCell", align 4
  %11 = alloca %"struct.blink::NGTableTypes::ColspanCell", align 4
  %12 = alloca %"struct.blink::NGTableTypes::ColspanCell", align 4
  %13 = alloca %"struct.blink::NGTableTypes::ColspanCell", align 4
  %14 = alloca %"struct.blink::NGTableTypes::ColspanCell", align 4
  %15 = icmp eq i64 %5, 0
  br i1 %15, label %479, label %16

16:                                               ; preds = %8
  %17 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %14 to i8*
  %18 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %13 to i8*
  %19 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %12 to i8*
  %20 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %11 to i8*
  br label %21

21:                                               ; preds = %16, %472
  %22 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %0, %16 ], [ %477, %472 ]
  %23 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %1, %16 ], [ %476, %472 ]
  %24 = phi i64 [ %5, %16 ], [ %475, %472 ]
  %25 = phi i64 [ %4, %16 ], [ %474, %472 ]
  %26 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %2, %16 ], [ %473, %472 ]
  %27 = icmp sgt i64 %25, %7
  %28 = icmp sgt i64 %24, %7
  %29 = and i1 %27, %28
  br i1 %29, label %30, label %36

30:                                               ; preds = %21
  %31 = icmp eq i64 %25, 0
  br i1 %31, label %479, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %23, i64 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %23, i64 0, i32 1
  br label %249

36:                                               ; preds = %21
  %37 = ptrtoint %"struct.blink::NGTableTypes::ColspanCell"* %22 to i64
  %38 = ptrtoint %"struct.blink::NGTableTypes::ColspanCell"* %23 to i64
  %39 = icmp sgt i64 %25, %24
  br i1 %39, label %65, label %40

40:                                               ; preds = %36
  %41 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %22, %23
  br i1 %41, label %479, label %42

42:                                               ; preds = %40
  %43 = getelementptr %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %23, i64 -1, i32 0, i32 0, i32 0
  %44 = ptrtoint i32* %43 to i64
  %45 = sub i64 %44, %37
  %46 = lshr i64 %45, 5
  %47 = add nuw nsw i64 %46, 1
  %48 = and i64 %47, 3
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %60, label %50

50:                                               ; preds = %42, %50
  %51 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %56, %50 ], [ %22, %42 ]
  %52 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %57, %50 ], [ %6, %42 ]
  %53 = phi i64 [ %58, %50 ], [ %48, %42 ]
  %54 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %52 to i8*
  %55 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %54, i8* align 4 %55, i64 32, i1 false) #16
  %56 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %51, i64 1
  %57 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %52, i64 1
  %58 = add i64 %53, -1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %50, !llvm.loop !19

60:                                               ; preds = %50, %42
  %61 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ undef, %42 ], [ %57, %50 ]
  %62 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %22, %42 ], [ %56, %50 ]
  %63 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %6, %42 ], [ %57, %50 ]
  %64 = icmp ult i64 %45, 96
  br i1 %64, label %90, label %133

65:                                               ; preds = %36
  %66 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %23, %26
  br i1 %66, label %479, label %67

67:                                               ; preds = %65
  %68 = getelementptr %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %26, i64 -1, i32 0, i32 0, i32 0
  %69 = ptrtoint i32* %68 to i64
  %70 = sub i64 %69, %38
  %71 = lshr i64 %70, 5
  %72 = add nuw nsw i64 %71, 1
  %73 = and i64 %72, 3
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %85, label %75

75:                                               ; preds = %67, %75
  %76 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %81, %75 ], [ %23, %67 ]
  %77 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %82, %75 ], [ %6, %67 ]
  %78 = phi i64 [ %83, %75 ], [ %73, %67 ]
  %79 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %77 to i8*
  %80 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %79, i8* align 4 %80, i64 32, i1 false) #16
  %81 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %76, i64 1
  %82 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %77, i64 1
  %83 = add i64 %78, -1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %75, !llvm.loop !20

85:                                               ; preds = %75, %67
  %86 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ undef, %67 ], [ %82, %75 ]
  %87 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %23, %67 ], [ %81, %75 ]
  %88 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %6, %67 ], [ %82, %75 ]
  %89 = icmp ult i64 %70, 96
  br i1 %89, label %153, label %229

90:                                               ; preds = %133, %60
  %91 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %61, %60 ], [ %151, %133 ]
  %92 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %91, %6
  br i1 %92, label %479, label %93

93:                                               ; preds = %90, %128
  %94 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %130, %128 ], [ %6, %90 ]
  %95 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %131, %128 ], [ %22, %90 ]
  %96 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %129, %128 ], [ %23, %90 ]
  %97 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %96, %26
  br i1 %97, label %98, label %106

98:                                               ; preds = %93
  %99 = ptrtoint %"struct.blink::NGTableTypes::ColspanCell"* %91 to i64
  %100 = ptrtoint %"struct.blink::NGTableTypes::ColspanCell"* %94 to i64
  %101 = sub i64 %99, %100
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %479, label %103

103:                                              ; preds = %98
  %104 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %95 to i8*
  %105 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %94 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %105, i64 %101, i1 false) #16
  br label %479

106:                                              ; preds = %93
  %107 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %96, i64 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %94, i64 0, i32 2
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %108, %110
  br i1 %111, label %112, label %118

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %96, i64 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %94, i64 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = icmp ult i32 %114, %116
  br i1 %117, label %120, label %124

118:                                              ; preds = %106
  %119 = icmp ult i32 %108, %110
  br i1 %119, label %120, label %124

120:                                              ; preds = %118, %112
  %121 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %95 to i8*
  %122 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %96 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %121, i8* align 4 %122, i64 32, i1 false) #16
  %123 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %96, i64 1
  br label %128

124:                                              ; preds = %118, %112
  %125 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %95 to i8*
  %126 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %125, i8* align 4 %126, i64 32, i1 false) #16
  %127 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %94, i64 1
  br label %128

128:                                              ; preds = %124, %120
  %129 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %123, %120 ], [ %96, %124 ]
  %130 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %94, %120 ], [ %127, %124 ]
  %131 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %95, i64 1
  %132 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %130, %91
  br i1 %132, label %479, label %93

133:                                              ; preds = %60, %133
  %134 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %150, %133 ], [ %62, %60 ]
  %135 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %151, %133 ], [ %63, %60 ]
  %136 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %135 to i8*
  %137 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %134 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %136, i8* align 4 %137, i64 32, i1 false) #16
  %138 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %134, i64 1
  %139 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %135, i64 1
  %140 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %139 to i8*
  %141 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %138 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %140, i8* align 4 %141, i64 32, i1 false) #16
  %142 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %134, i64 2
  %143 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %135, i64 2
  %144 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %143 to i8*
  %145 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %142 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %144, i8* align 4 %145, i64 32, i1 false) #16
  %146 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %134, i64 3
  %147 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %135, i64 3
  %148 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %147 to i8*
  %149 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %149, i64 32, i1 false) #16
  %150 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %134, i64 4
  %151 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %135, i64 4
  %152 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %150, %23
  br i1 %152, label %90, label %133

153:                                              ; preds = %229, %85
  %154 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %86, %85 ], [ %247, %229 ]
  %155 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %154, %6
  br i1 %155, label %479, label %156

156:                                              ; preds = %153, %220
  %157 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %227, %220 ], [ %26, %153 ]
  %158 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %223, %220 ], [ %154, %153 ]
  %159 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %222, %220 ], [ %23, %153 ]
  %160 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %159, %22
  br i1 %160, label %161, label %203

161:                                              ; preds = %156
  %162 = getelementptr %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %158, i64 -1, i32 0, i32 0, i32 0
  %163 = ptrtoint i32* %162 to i64
  %164 = sub i64 %163, %9
  %165 = lshr i64 %164, 5
  %166 = add nuw nsw i64 %165, 1
  %167 = and i64 %166, 3
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %179, label %169

169:                                              ; preds = %161, %169
  %170 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %173, %169 ], [ %158, %161 ]
  %171 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %174, %169 ], [ %157, %161 ]
  %172 = phi i64 [ %177, %169 ], [ %167, %161 ]
  %173 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %170, i64 -1
  %174 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %171, i64 -1
  %175 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %174 to i8*
  %176 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %173 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %175, i8* align 4 %176, i64 32, i1 false) #16
  %177 = add i64 %172, -1
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %179, label %169, !llvm.loop !21

179:                                              ; preds = %169, %161
  %180 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %158, %161 ], [ %173, %169 ]
  %181 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %157, %161 ], [ %174, %169 ]
  %182 = icmp ult i64 %164, 96
  br i1 %182, label %479, label %183

183:                                              ; preds = %179, %183
  %184 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %198, %183 ], [ %180, %179 ]
  %185 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %199, %183 ], [ %181, %179 ]
  %186 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %184, i64 -1
  %187 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %185, i64 -1
  %188 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %187 to i8*
  %189 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %186 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %188, i8* align 4 %189, i64 32, i1 false) #16
  %190 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %184, i64 -2
  %191 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %185, i64 -2
  %192 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %191 to i8*
  %193 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %190 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %192, i8* align 4 %193, i64 32, i1 false) #16
  %194 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %184, i64 -3
  %195 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %185, i64 -3
  %196 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %195 to i8*
  %197 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %194 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %196, i8* align 4 %197, i64 32, i1 false) #16
  %198 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %184, i64 -4
  %199 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %185, i64 -4
  %200 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %199 to i8*
  %201 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %198 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %200, i8* align 4 %201, i64 32, i1 false) #16
  %202 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %198, %6
  br i1 %202, label %479, label %183

203:                                              ; preds = %156
  %204 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %159, i64 -1
  %205 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %158, i64 -1
  %206 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %158, i64 -1, i32 2
  %207 = load i32, i32* %206, align 4
  %208 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %159, i64 -1, i32 2
  %209 = load i32, i32* %208, align 4
  %210 = icmp eq i32 %207, %209
  br i1 %210, label %211, label %217

211:                                              ; preds = %203
  %212 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %158, i64 -1, i32 1
  %213 = load i32, i32* %212, align 4
  %214 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %159, i64 -1, i32 1
  %215 = load i32, i32* %214, align 4
  %216 = icmp ult i32 %213, %215
  br i1 %216, label %220, label %219

217:                                              ; preds = %203
  %218 = icmp ult i32 %207, %209
  br i1 %218, label %220, label %219

219:                                              ; preds = %217, %211
  br label %220

220:                                              ; preds = %211, %217, %219
  %221 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %205, %219 ], [ %204, %217 ], [ %204, %211 ]
  %222 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %159, %219 ], [ %204, %217 ], [ %204, %211 ]
  %223 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %205, %219 ], [ %158, %217 ], [ %158, %211 ]
  %224 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %157, i64 -1
  %225 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %224 to i8*
  %226 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %221 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %225, i8* align 4 %226, i64 32, i1 false) #16
  %227 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %157, i64 -1
  %228 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %223, %6
  br i1 %228, label %479, label %156

229:                                              ; preds = %85, %229
  %230 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %246, %229 ], [ %87, %85 ]
  %231 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %247, %229 ], [ %88, %85 ]
  %232 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %231 to i8*
  %233 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %230 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %232, i8* align 4 %233, i64 32, i1 false) #16
  %234 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %230, i64 1
  %235 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %231, i64 1
  %236 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %235 to i8*
  %237 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %234 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %236, i8* align 4 %237, i64 32, i1 false) #16
  %238 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %230, i64 2
  %239 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %231, i64 2
  %240 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %239 to i8*
  %241 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %238 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %240, i8* align 4 %241, i64 32, i1 false) #16
  %242 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %230, i64 3
  %243 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %231, i64 3
  %244 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %243 to i8*
  %245 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %242 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %244, i8* align 4 %245, i64 32, i1 false) #16
  %246 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %230, i64 4
  %247 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %231, i64 4
  %248 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %246, %26
  br i1 %248, label %153, label %229

249:                                              ; preds = %32, %262
  %250 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %22, %32 ], [ %263, %262 ]
  %251 = phi i64 [ %25, %32 ], [ %264, %262 ]
  %252 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %250, i64 0, i32 2
  %253 = load i32, i32* %252, align 4
  %254 = icmp eq i32 %34, %253
  br i1 %254, label %255, label %260

255:                                              ; preds = %249
  %256 = load i32, i32* %35, align 4
  %257 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %250, i64 0, i32 1
  %258 = load i32, i32* %257, align 4
  %259 = icmp ult i32 %256, %258
  br i1 %259, label %266, label %262

260:                                              ; preds = %249
  %261 = icmp ult i32 %34, %253
  br i1 %261, label %266, label %262

262:                                              ; preds = %255, %260
  %263 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %250, i64 1
  %264 = add nsw i64 %251, -1
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %479, label %249

266:                                              ; preds = %255, %260
  %267 = icmp slt i64 %251, %24
  br i1 %267, label %268, label %309

268:                                              ; preds = %266
  %269 = sdiv i64 %24, 2
  %270 = ptrtoint %"struct.blink::NGTableTypes::ColspanCell"* %23 to i64
  %271 = ptrtoint %"struct.blink::NGTableTypes::ColspanCell"* %250 to i64
  %272 = sub i64 %270, %271
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %304, label %274

274:                                              ; preds = %268
  %275 = ashr exact i64 %272, 5
  %276 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %23, i64 %269, i32 2
  %277 = load i32, i32* %276, align 4
  %278 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %23, i64 %269, i32 1
  %279 = load i32, i32* %278, align 4
  br label %280

280:                                              ; preds = %298, %274
  %281 = phi i64 [ %275, %274 ], [ %300, %298 ]
  %282 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %250, %274 ], [ %299, %298 ]
  %283 = lshr i64 %281, 1
  %284 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %282, i64 1
  %285 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %282, i64 %283, i32 2
  %286 = load i32, i32* %285, align 4
  %287 = icmp eq i32 %277, %286
  br i1 %287, label %288, label %292

288:                                              ; preds = %280
  %289 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %282, i64 %283, i32 1
  %290 = load i32, i32* %289, align 4
  %291 = icmp ult i32 %279, %290
  br i1 %291, label %298, label %294

292:                                              ; preds = %280
  %293 = icmp ult i32 %277, %286
  br i1 %293, label %298, label %294

294:                                              ; preds = %292, %288
  %295 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %284, i64 %283
  %296 = xor i64 %283, -1
  %297 = add i64 %281, %296
  br label %298

298:                                              ; preds = %294, %292, %288
  %299 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %295, %294 ], [ %282, %292 ], [ %282, %288 ]
  %300 = phi i64 [ %297, %294 ], [ %283, %292 ], [ %283, %288 ]
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %280

302:                                              ; preds = %298
  %303 = ptrtoint %"struct.blink::NGTableTypes::ColspanCell"* %299 to i64
  br label %304

304:                                              ; preds = %302, %268
  %305 = phi i64 [ %303, %302 ], [ %271, %268 ]
  %306 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %299, %302 ], [ %250, %268 ]
  %307 = sub i64 %305, %271
  %308 = ashr exact i64 %307, 5
  br label %355

309:                                              ; preds = %266
  %310 = icmp eq i64 %251, 1
  br i1 %310, label %311, label %315

311:                                              ; preds = %309
  %312 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %312)
  %313 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %250 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %312, i8* align 4 %313, i64 32, i1 false) #16
  %314 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %313, i8* align 4 %314, i64 32, i1 false) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %314, i8* nonnull align 4 %312, i64 32, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %312)
  br label %479

315:                                              ; preds = %309
  %316 = sdiv i64 %251, 2
  %317 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %250, i64 %316
  %318 = ptrtoint %"struct.blink::NGTableTypes::ColspanCell"* %26 to i64
  %319 = ptrtoint %"struct.blink::NGTableTypes::ColspanCell"* %23 to i64
  %320 = sub i64 %318, %319
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %351, label %322

322:                                              ; preds = %315
  %323 = ashr exact i64 %320, 5
  %324 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %250, i64 %316, i32 2
  %325 = load i32, i32* %324, align 4
  %326 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %250, i64 %316, i32 1
  %327 = load i32, i32* %326, align 4
  br label %328

328:                                              ; preds = %347, %322
  %329 = phi i64 [ %323, %322 ], [ %349, %347 ]
  %330 = phi i64 [ 0, %322 ], [ %348, %347 ]
  %331 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %23, i64 %330
  %332 = lshr i64 %329, 1
  %333 = add nsw i64 %330, 1
  %334 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %331, i64 %332, i32 2
  %335 = load i32, i32* %334, align 4
  %336 = icmp eq i32 %335, %325
  br i1 %336, label %337, label %341

337:                                              ; preds = %328
  %338 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %331, i64 %332, i32 1
  %339 = load i32, i32* %338, align 4
  %340 = icmp ult i32 %339, %327
  br i1 %340, label %343, label %347

341:                                              ; preds = %328
  %342 = icmp ult i32 %335, %325
  br i1 %342, label %343, label %347

343:                                              ; preds = %341, %337
  %344 = add nsw i64 %333, %332
  %345 = xor i64 %332, -1
  %346 = add i64 %329, %345
  br label %347

347:                                              ; preds = %343, %341, %337
  %348 = phi i64 [ %344, %343 ], [ %330, %341 ], [ %330, %337 ]
  %349 = phi i64 [ %346, %343 ], [ %332, %341 ], [ %332, %337 ]
  %350 = icmp eq i64 %349, 0
  br i1 %350, label %351, label %328

351:                                              ; preds = %347, %315
  %352 = phi i64 [ 0, %315 ], [ %348, %347 ]
  %353 = shl nuw i64 %352, 5
  %354 = ashr exact i64 %353, 5
  br label %355

355:                                              ; preds = %351, %304
  %356 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %306, %304 ], [ %317, %351 ]
  %357 = phi i64 [ %269, %304 ], [ %352, %351 ]
  %358 = phi i64 [ %308, %304 ], [ %316, %351 ]
  %359 = phi i64 [ %269, %304 ], [ %354, %351 ]
  %360 = ptrtoint %"struct.blink::NGTableTypes::ColspanCell"* %356 to i64
  %361 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %23, i64 %357
  %362 = sub nsw i64 %251, %358
  %363 = sub nsw i64 %24, %359
  %364 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %356, %23
  br i1 %364, label %465, label %365

365:                                              ; preds = %355
  %366 = icmp eq i64 %357, 0
  br i1 %366, label %465, label %367

367:                                              ; preds = %365
  %368 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %356, i64 1
  %369 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %368, %23
  br i1 %369, label %370, label %377

370:                                              ; preds = %367
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20)
  %371 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %356 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %20, i8* align 4 %371, i64 32, i1 false) #16
  %372 = shl nuw i64 %357, 5
  %373 = ashr exact i64 %372, 5
  %374 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %23 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %371, i8* align 4 %374, i64 %372, i1 false) #16
  %375 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %356, i64 %373
  %376 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %375 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %376, i8* nonnull align 4 %20, i64 32, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20)
  br label %465

377:                                              ; preds = %367
  %378 = icmp eq i64 %357, 1
  br i1 %378, label %379, label %396

379:                                              ; preds = %377
  %380 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %361, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19)
  %381 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %380 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %19, i8* align 4 %381, i64 32, i1 false) #16
  %382 = ptrtoint %"struct.blink::NGTableTypes::ColspanCell"* %380 to i64
  %383 = sub i64 %382, %360
  %384 = icmp eq i64 %383, 0
  br i1 %384, label %385, label %387

385:                                              ; preds = %379
  %386 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %356 to i8*
  br label %393

387:                                              ; preds = %379
  %388 = ashr exact i64 %383, 5
  %389 = sub nsw i64 0, %388
  %390 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %361, i64 %389
  %391 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %390 to i8*
  %392 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %356 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %391, i8* align 4 %392, i64 %383, i1 false) #16
  br label %393

393:                                              ; preds = %387, %385
  %394 = phi i8* [ %386, %385 ], [ %392, %387 ]
  %395 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %361, %385 ], [ %390, %387 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %394, i8* nonnull align 4 %19, i64 32, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19)
  br label %465

396:                                              ; preds = %377
  %397 = ptrtoint %"struct.blink::NGTableTypes::ColspanCell"* %23 to i64
  %398 = ptrtoint %"struct.blink::NGTableTypes::ColspanCell"* %356 to i64
  %399 = sub i64 %397, %398
  %400 = ashr exact i64 %399, 5
  %401 = ptrtoint %"struct.blink::NGTableTypes::ColspanCell"* %361 to i64
  %402 = shl nuw i64 %357, 5
  %403 = ashr exact i64 %402, 5
  %404 = icmp eq i64 %400, %403
  br i1 %404, label %405, label %432

405:                                              ; preds = %396
  %406 = getelementptr %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %23, i64 -1
  %407 = ptrtoint %"struct.blink::NGTableTypes::ColspanCell"* %406 to i64
  %408 = sub i64 %407, %360
  %409 = and i64 %408, 32
  %410 = icmp eq i64 %409, 0
  br i1 %410, label %411, label %416

411:                                              ; preds = %405
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18)
  %412 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %356 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %18, i8* align 4 %412, i64 32, i1 false) #16
  %413 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %412, i8* align 4 %413, i64 32, i1 false) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %413, i8* nonnull align 4 %18, i64 32, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18)
  %414 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %356, i64 1
  %415 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %23, i64 1
  br label %416

416:                                              ; preds = %411, %405
  %417 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %415, %411 ], [ %23, %405 ]
  %418 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %414, %411 ], [ %356, %405 ]
  %419 = icmp ult i64 %408, 32
  br i1 %419, label %465, label %420

420:                                              ; preds = %416, %420
  %421 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %430, %420 ], [ %417, %416 ]
  %422 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %429, %420 ], [ %418, %416 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18)
  %423 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %422 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %18, i8* align 4 %423, i64 32, i1 false) #16
  %424 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %421 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %423, i8* align 4 %424, i64 32, i1 false) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %424, i8* nonnull align 4 %18, i64 32, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18)
  %425 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %422, i64 1
  %426 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %421, i64 1
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18)
  %427 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %425 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %18, i8* align 4 %427, i64 32, i1 false) #16
  %428 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %426 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %427, i8* align 4 %428, i64 32, i1 false) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %428, i8* nonnull align 4 %18, i64 32, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18)
  %429 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %422, i64 2
  %430 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %421, i64 2
  %431 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %429, %23
  br i1 %431, label %465, label %420

432:                                              ; preds = %396, %432
  %433 = phi i64 [ %435, %432 ], [ %403, %396 ]
  %434 = phi i64 [ %433, %432 ], [ %400, %396 ]
  %435 = srem i64 %434, %433
  %436 = icmp eq i64 %435, 0
  br i1 %436, label %437, label %432

437:                                              ; preds = %432
  %438 = icmp eq i64 %433, 0
  br i1 %438, label %441, label %439

439:                                              ; preds = %437
  %440 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %356, i64 %433
  br label %443

441:                                              ; preds = %462, %437
  %442 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %356, i64 %403
  br label %465

443:                                              ; preds = %462, %439
  %444 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %440, %439 ], [ %445, %462 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %17, i8* align 4 bitcast ({ <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", { { { { i8, [3 x i8], %union.anon.40 } } } }, %"class.blink::LayoutUnit", i8, [3 x i8] }>, i32, i32 }* @__const._ZNSt3__112__rotate_gcdIPN5blink12NGTableTypes11ColspanCellEEET_S5_S5_S5_.__t to i8*), i64 32, i1 false) #16
  %445 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %444, i64 -1
  %446 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %445 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %17, i8* align 4 %446, i64 32, i1 false) #16
  %447 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %445, i64 %400
  br label %448

448:                                              ; preds = %448, %443
  %449 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %445, %443 ], [ %450, %448 ]
  %450 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %447, %443 ], [ %460, %448 ]
  %451 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %449 to i8*
  %452 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %450 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %451, i8* align 4 %452, i64 32, i1 false) #16
  %453 = ptrtoint %"struct.blink::NGTableTypes::ColspanCell"* %450 to i64
  %454 = sub i64 %401, %453
  %455 = ashr exact i64 %454, 5
  %456 = icmp slt i64 %400, %455
  %457 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %450, i64 %400
  %458 = sub nsw i64 %400, %455
  %459 = getelementptr inbounds %"struct.blink::NGTableTypes::ColspanCell", %"struct.blink::NGTableTypes::ColspanCell"* %356, i64 %458
  %460 = select i1 %456, %"struct.blink::NGTableTypes::ColspanCell"* %457, %"struct.blink::NGTableTypes::ColspanCell"* %459
  %461 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %460, %445
  br i1 %461, label %462, label %448

462:                                              ; preds = %448
  %463 = bitcast %"struct.blink::NGTableTypes::ColspanCell"* %450 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %463, i8* nonnull align 4 %17, i64 32, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17)
  %464 = icmp eq %"struct.blink::NGTableTypes::ColspanCell"* %445, %356
  br i1 %464, label %441, label %443

465:                                              ; preds = %416, %420, %355, %365, %370, %393, %441
  %466 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %361, %355 ], [ %356, %365 ], [ %375, %370 ], [ %395, %393 ], [ %442, %441 ], [ %23, %420 ], [ %23, %416 ]
  %467 = add nsw i64 %359, %358
  %468 = add nsw i64 %363, %362
  %469 = icmp slt i64 %467, %468
  br i1 %469, label %470, label %471

470:                                              ; preds = %465
  tail call fastcc void @"_ZNSt3__115__inplace_mergeIRZN5blink12_GLOBAL__N_139ApplyCellConstraintsToColumnConstraintsERKN3WTF6VectorIN4absl8optionalINS1_12NGTableTypes20CellInlineConstraintEEELj0ENS3_18PartitionAllocatorEEENS1_10LayoutUnitEbPNS4_INS7_11ColspanCellELj0ESA_EEPN4base14RefCountedDataINS4_INS7_6ColumnELj0ESA_EEEEE3$_1PSF_EEvT0_SR_SR_T_NS_15iterator_traitsISR_E15difference_typeESV_PNSU_10value_typeEl"(%"struct.blink::NGTableTypes::ColspanCell"* %250, %"struct.blink::NGTableTypes::ColspanCell"* %356, %"struct.blink::NGTableTypes::ColspanCell"* %466, %class.anon.2027* dereferenceable(1) %3, i64 %358, i64 %359, %"struct.blink::NGTableTypes::ColspanCell"* %6, i64 %7)
  br label %472

471:                                              ; preds = %465
  tail call fastcc void @"_ZNSt3__115__inplace_mergeIRZN5blink12_GLOBAL__N_139ApplyCellConstraintsToColumnConstraintsERKN3WTF6VectorIN4absl8optionalINS1_12NGTableTypes20CellInlineConstraintEEELj0ENS3_18PartitionAllocatorEEENS1_10LayoutUnitEbPNS4_INS7_11ColspanCellELj0ESA_EEPN4base14RefCountedDataINS4_INS7_6ColumnELj0ESA_EEEEE3$_1PSF_EEvT0_SR_SR_T_NS_15iterator_traitsISR_E15difference_typeESV_PNSU_10value_typeEl"(%"struct.blink::NGTableTypes::ColspanCell"* %466, %"struct.blink::NGTableTypes::ColspanCell"* %361, %"struct.blink::NGTableTypes::ColspanCell"* %26, %class.anon.2027* dereferenceable(1) %3, i64 %362, i64 %363, %"struct.blink::NGTableTypes::ColspanCell"* %6, i64 %7)
  br label %472

472:                                              ; preds = %470, %471
  %473 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %26, %470 ], [ %466, %471 ]
  %474 = phi i64 [ %362, %470 ], [ %358, %471 ]
  %475 = phi i64 [ %363, %470 ], [ %359, %471 ]
  %476 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %361, %470 ], [ %356, %471 ]
  %477 = phi %"struct.blink::NGTableTypes::ColspanCell"* [ %466, %470 ], [ %250, %471 ]
  %478 = icmp eq i64 %475, 0
  br i1 %478, label %479, label %21

479:                                              ; preds = %472, %30, %262, %128, %220, %179, %183, %8, %311, %153, %103, %98, %90, %65, %40
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare %"class.blink::NGLayoutResult"* @_ZNK5blink11NGBlockNode6LayoutERKNS_17NGConstraintSpaceEPKNS_17NGBlockBreakTokenEPKNS_12NGEarlyBreakE(%"class.blink::NGBlockNode"*, %"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::NGBlockBreakToken"*, %"class.blink::NGEarlyBreak"*) local_unnamed_addr #2

declare void @_ZN5blink12NGTableTypes25CreateCellBlockConstraintERKNS_17NGLayoutInputNodeENS_10LayoutUnitES4_RKNS_10NGBoxStrutEjjj(%"struct.blink::NGTableTypes::CellBlockConstraint"* sret, %"class.blink::NGLayoutInputNode"* dereferenceable(16), i32, i32, %"struct.blink::NGBoxStrut"* dereferenceable(16), i32, i32, i32) local_unnamed_addr #2

declare { i64, i64 } @_ZN5blink14ComputePaddingERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #2

declare void @_ZN5blink12NGTableTypes17CreateRowspanCellEjjPNS0_19CellBlockConstraintEN4absl8optionalINS_10LayoutUnitEEE(%"struct.blink::NGTableTypes::RowspanCell"* sret, i32, i32, %"struct.blink::NGTableTypes::CellBlockConstraint"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(12) %"struct.blink::NGTableTypes::ColumnLocation"* @_ZNK3WTF6VectorIN5blink12NGTableTypes14ColumnLocationELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1917"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1917", %"class.WTF::Vector.1917"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.1917", %"class.WTF::Vector.1917"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::NGTableTypes::ColumnLocation"*, %"struct.blink::NGTableTypes::ColumnLocation"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::NGTableTypes::ColumnLocation", %"struct.blink::NGTableTypes::ColumnLocation"* %24, i64 %25
  ret %"struct.blink::NGTableTypes::ColumnLocation"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink12NGTableTypes19CellBlockConstraintELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.1932"*, %"struct.blink::NGTableTypes::CellBlockConstraint"* dereferenceable(44)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1932", %"class.WTF::Vector.1932"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1932", %"class.WTF::Vector.1932"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::NGTableTypes::CellBlockConstraint"*, %"struct.blink::NGTableTypes::CellBlockConstraint"** %6, align 8
  %8 = icmp ugt %"struct.blink::NGTableTypes::CellBlockConstraint"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::NGTableTypes::CellBlockConstraint", %"struct.blink::NGTableTypes::CellBlockConstraint"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::NGTableTypes::CellBlockConstraint"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1932", %"class.WTF::Vector.1932"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::NGTableTypes::CellBlockConstraint"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGTableTypes19CellBlockConstraintEEEmm(i64 %26) #16
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12NGTableTypes19CellBlockConstraintEEEPKcv, i64 0, i64 0)) #16
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1932"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %27, 44
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.blink::NGTableTypes::CellBlockConstraint"*
  br label %99

35:                                               ; preds = %24
  %36 = udiv i64 %27, 44
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.blink::NGTableTypes::CellBlockConstraint"*, %"struct.blink::NGTableTypes::CellBlockConstraint"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.blink::NGTableTypes::CellBlockConstraint"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.blink::NGTableTypes::CellBlockConstraint"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = mul nuw nsw i64 %45, 44
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #16
  %47 = bitcast %"class.WTF::Vector.1932"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #16
  %51 = bitcast %"class.WTF::Vector.1932"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.blink::NGTableTypes::CellBlockConstraint"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.blink::NGTableTypes::CellBlockConstraint"* %1 to i64
  %56 = ptrtoint %"struct.blink::NGTableTypes::CellBlockConstraint"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = sdiv exact i64 %57, 44
  %59 = getelementptr inbounds %"class.WTF::Vector.1932", %"class.WTF::Vector.1932"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"struct.blink::NGTableTypes::CellBlockConstraint"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGTableTypes19CellBlockConstraintEEEmm(i64 %71) #16
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12NGTableTypes19CellBlockConstraintEEEPKcv, i64 0, i64 0)) #16
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1932"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.blink::NGTableTypes::CellBlockConstraint"*, %"struct.blink::NGTableTypes::CellBlockConstraint"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.blink::NGTableTypes::CellBlockConstraint"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.blink::NGTableTypes::CellBlockConstraint"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = mul nuw nsw i64 %85, 44
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #16
  %87 = bitcast %"class.WTF::Vector.1932"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #16
  %91 = bitcast %"class.WTF::Vector.1932"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = udiv i64 %72, 44
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.blink::NGTableTypes::CellBlockConstraint"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.blink::NGTableTypes::CellBlockConstraint"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.blink::NGTableTypes::CellBlockConstraint", %"struct.blink::NGTableTypes::CellBlockConstraint"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.blink::NGTableTypes::CellBlockConstraint"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.blink::NGTableTypes::CellBlockConstraint"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.blink::NGTableTypes::CellBlockConstraint", %"struct.blink::NGTableTypes::CellBlockConstraint"* %100, i64 %103
  %105 = bitcast %"struct.blink::NGTableTypes::CellBlockConstraint"* %104 to i8*
  %106 = bitcast %"struct.blink::NGTableTypes::CellBlockConstraint"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %106, i64 44, i1 false) #16
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGTableTypes19CellBlockConstraintEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 48758784
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 48758784) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = mul i64 %0, 44
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink12NGTableTypes11RowspanCellELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1937"*, %"struct.blink::NGTableTypes::RowspanCell"* dereferenceable(52)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1937", %"class.WTF::Vector.1937"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1937", %"class.WTF::Vector.1937"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::NGTableTypes::RowspanCell"*, %"struct.blink::NGTableTypes::RowspanCell"** %6, align 8
  %8 = icmp ugt %"struct.blink::NGTableTypes::RowspanCell"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::NGTableTypes::RowspanCell"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1937", %"class.WTF::Vector.1937"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGTableTypes11RowspanCellEEEmm(i64 %26) #16
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12NGTableTypes11RowspanCellEEEPKcv, i64 0, i64 0)) #16
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1937"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %27, 52
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.blink::NGTableTypes::RowspanCell"*
  br label %99

35:                                               ; preds = %24
  %36 = udiv i64 %27, 52
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.blink::NGTableTypes::RowspanCell"*, %"struct.blink::NGTableTypes::RowspanCell"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.blink::NGTableTypes::RowspanCell"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = mul nuw nsw i64 %45, 52
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #16
  %47 = bitcast %"class.WTF::Vector.1937"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #16
  %51 = bitcast %"class.WTF::Vector.1937"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.blink::NGTableTypes::RowspanCell"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.blink::NGTableTypes::RowspanCell"* %1 to i64
  %56 = ptrtoint %"struct.blink::NGTableTypes::RowspanCell"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = sdiv exact i64 %57, 52
  %59 = getelementptr inbounds %"class.WTF::Vector.1937", %"class.WTF::Vector.1937"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGTableTypes11RowspanCellEEEmm(i64 %71) #16
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12NGTableTypes11RowspanCellEEEPKcv, i64 0, i64 0)) #16
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1937"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.blink::NGTableTypes::RowspanCell"*, %"struct.blink::NGTableTypes::RowspanCell"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.blink::NGTableTypes::RowspanCell"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = mul nuw nsw i64 %85, 52
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #16
  %87 = bitcast %"class.WTF::Vector.1937"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #16
  %91 = bitcast %"class.WTF::Vector.1937"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = udiv i64 %72, 52
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.blink::NGTableTypes::RowspanCell"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %100, i64 %103
  %105 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %104 to i8*
  %106 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %106, i64 52, i1 false) #16
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGTableTypes11RowspanCellEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 41257432
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 41257432) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = mul i64 %0, 52
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

; Function Attrs: nounwind
declare void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"*) unnamed_addr #9

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #13

declare dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #14

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"struct.blink::NGTableTypes::Column"* @_ZN3WTF6VectorIN5blink12NGTableTypes6ColumnELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1875"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1875", %"class.WTF::Vector.1875"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.1875", %"class.WTF::Vector.1875"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::NGTableTypes::Column"*, %"struct.blink::NGTableTypes::Column"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %24, i64 %25
  ret %"struct.blink::NGTableTypes::Column"* %26
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc i32 @_ZZN5blink24VisitLayoutNGTableColumnINS_12_GLOBAL__N_124ColumnConstraintsBuilderEEEvRKN3WTF6VectorINS_11NGBlockNodeELj0ENS3_18PartitionAllocatorEEEjPT_ENKUlRKS5_E_clESD_(%class.anon.2073* nocapture readonly, %"class.blink::NGBlockNode"* dereferenceable(16)) unnamed_addr #4 align 2 {
  %3 = alloca %"struct.blink::NGTableTypes::Column", align 4
  %4 = bitcast %"class.blink::NGBlockNode"* %1 to %"class.blink::NGLayoutInputNode"*
  %5 = tail call i32 @_ZNK5blink17NGLayoutInputNode15TableColumnSpanEv(%"class.blink::NGLayoutInputNode"* %4) #16
  %6 = getelementptr inbounds %class.anon.2073, %class.anon.2073* %0, i64 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %class.anon.2073, %class.anon.2073* %0, i64 0, i32 1
  %10 = load i32*, i32** %9, align 8
  %11 = load i32, i32* %10, align 4
  %12 = sub i32 %8, %11
  %13 = icmp ult i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = getelementptr inbounds %class.anon.2073, %class.anon.2073* %0, i64 0, i32 2
  %16 = load %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"**, %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"*** %15, align 8
  %17 = load %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"*, %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"** %16, align 8
  %18 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %18, i8* align 4 getelementptr inbounds ({ { { { { i8, [3 x i8], %union.anon.1640 } } } }, { { { { i8, [3 x i8], %union.anon.1640 } } } }, { { { { i8, [3 x i8], %union.anon.40 } } } }, %"class.blink::LayoutUnit", i8, i8, i8, i8 }, { { { { { i8, [3 x i8], %union.anon.1640 } } } }, { { { { i8, [3 x i8], %union.anon.1640 } } } }, { { { { i8, [3 x i8], %union.anon.40 } } } }, %"class.blink::LayoutUnit", i8, i8, i8, i8 }* @__const._ZN5blink12_GLOBAL__N_124ColumnConstraintsBuilder8VisitColERKNS_17NGLayoutInputNodeEjj.col_constraint, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 32, i1 false) #16
  %19 = bitcast %"class.blink::NGBlockNode"* %1 to %"class.blink::LayoutObject"**
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 0, i32 5, i32 0
  %22 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder", %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"* %17, i64 0, i32 1
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %36

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder", %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %28 = load i8, i8* %27, align 4, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder", %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %32 = bitcast i8* %31 to i64*
  %33 = load i64, i64* %32, align 4
  %34 = and i64 %33, -256
  %35 = and i64 %33, 255
  br label %36

36:                                               ; preds = %30, %26, %2
  %37 = phi i64 [ %34, %30 ], [ 0, %2 ], [ 0, %26 ]
  %38 = phi i64 [ %35, %30 ], [ 0, %2 ], [ 0, %26 ]
  %39 = icmp ne i8 %24, 0
  %40 = or i64 %38, %37
  call void @_ZN5blink12NGTableTypes12CreateColumnERKNS_13ComputedStyleEN4absl8optionalINS_10LayoutUnitEEEb(%"struct.blink::NGTableTypes::Column"* nonnull sret %3, %"class.blink::ComputedStyle"* dereferenceable(104) %22, i64 %40, i1 zeroext %39) #16
  %41 = icmp eq i32 %14, 0
  br i1 %41, label %64, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder", %"class.blink::(anonymous namespace)::ColumnConstraintsBuilder"* %17, i64 0, i32 0
  br label %44

44:                                               ; preds = %61, %42
  %45 = phi i32 [ 0, %42 ], [ %62, %61 ]
  %46 = load %"class.base::RefCountedData.1873"*, %"class.base::RefCountedData.1873"** %43, align 8
  %47 = getelementptr inbounds %"class.base::RefCountedData.1873", %"class.base::RefCountedData.1873"* %46, i64 0, i32 1
  %48 = getelementptr inbounds %"class.base::RefCountedData.1873", %"class.base::RefCountedData.1873"* %46, i64 0, i32 1, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.base::RefCountedData.1873", %"class.base::RefCountedData.1873"* %46, i64 0, i32 1, i32 0, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = icmp eq i32 %49, %51
  br i1 %52, label %60, label %53, !prof !4

53:                                               ; preds = %44
  %54 = getelementptr inbounds %"class.WTF::Vector.1875", %"class.WTF::Vector.1875"* %47, i64 0, i32 0, i32 0, i32 0
  %55 = load %"struct.blink::NGTableTypes::Column"*, %"struct.blink::NGTableTypes::Column"** %54, align 8
  %56 = zext i32 %49 to i64
  %57 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %55, i64 %56, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %57, i8* nonnull align 4 %18, i64 32, i1 false) #16
  %58 = load i32, i32* %48, align 4
  %59 = add i32 %58, 1
  store i32 %59, i32* %48, align 4
  br label %61

60:                                               ; preds = %44
  call void @_ZN3WTF6VectorIN5blink12NGTableTypes6ColumnELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.1875"* %47, %"struct.blink::NGTableTypes::Column"* nonnull dereferenceable(32) %3) #16
  br label %61

61:                                               ; preds = %60, %53
  %62 = add nuw i32 %45, 1
  %63 = icmp eq i32 %62, %14
  br i1 %63, label %64, label %44

64:                                               ; preds = %61, %36
  %65 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %1, i64 0, i32 0, i32 0
  %66 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %66, i64 0, i32 0, i32 0
  call void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"* %67) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #16
  %68 = load i32*, i32** %9, align 8
  %69 = load i32, i32* %68, align 4
  %70 = add i32 %69, %14
  store i32 %70, i32* %68, align 4
  ret i32 %14
}

declare i32 @_ZNK5blink17NGLayoutInputNode15TableColumnSpanEv(%"class.blink::NGLayoutInputNode"*) local_unnamed_addr #2

declare void @_ZN5blink12NGTableTypes12CreateColumnERKNS_13ComputedStyleEN4absl8optionalINS_10LayoutUnitEEEb(%"struct.blink::NGTableTypes::Column"* sret, %"class.blink::ComputedStyle"* dereferenceable(104), i64, i1 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, -824633720840
  %6 = or i96 %5, 274877906944
  store i96 %6, i96* %3, align 4
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !2
  %8 = icmp ne i8 %7, 0
  %9 = and i96 %4, 16777216
  %10 = icmp eq i96 %9, 0
  %11 = and i1 %10, %8
  br i1 %11, label %12, label %27

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 67108876
  %20 = icmp eq i32 %19, 67108864
  br i1 %20, label %21, label %27, !prof !22

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::Node"* %14 to %"class.blink::Element"*
  %23 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %22) #16
  %24 = icmp eq %"class.blink::DisplayLockContext"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = tail call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %23) #16
  br i1 %26, label %27, label %30

27:                                               ; preds = %25, %21, %16, %12, %1
  %28 = load i96, i96* %3, align 4
  %29 = and i96 %28, -57
  store i96 %29, i96* %3, align 4
  br label %55

30:                                               ; preds = %25
  %31 = load i96, i96* %3, align 4
  %32 = and i96 %31, 56
  %33 = icmp eq i96 %32, 0
  br i1 %33, label %34, label %55

34:                                               ; preds = %30
  %35 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !2
  %36 = icmp ne i8 %35, 0
  %37 = and i96 %31, 16777216
  %38 = icmp eq i96 %37, 0
  %39 = and i1 %38, %36
  br i1 %39, label %40, label %51

40:                                               ; preds = %34
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %51, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 67108876
  %47 = icmp eq i32 %46, 67108864
  br i1 %47, label %48, label %51, !prof !22

48:                                               ; preds = %43
  %49 = bitcast %"class.blink::Node"* %41 to %"class.blink::Element"*
  %50 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %49) #16
  br label %51

51:                                               ; preds = %48, %43, %40, %34
  %52 = phi %"class.blink::DisplayLockContext"* [ null, %34 ], [ %50, %48 ], [ null, %43 ], [ null, %40 ]
  %53 = getelementptr inbounds %"class.blink::DisplayLockContext", %"class.blink::DisplayLockContext"* %52, i64 0, i32 14
  store i8 1, i8* %53, align 2
  %54 = load i96, i96* %3, align 4
  br label %55

55:                                               ; preds = %27, %30, %51
  %56 = phi i96 [ %31, %30 ], [ %54, %51 ], [ %29, %27 ]
  %57 = and i96 %56, -1125899906842625
  store i96 %57, i96* %3, align 4
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %0) #16
  ret void
}

declare void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #15

declare zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"*) local_unnamed_addr #2

declare %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"*) local_unnamed_addr #2

declare void @_ZNK5blink19LayoutNGTableColumn27ClearNeedsLayoutForChildrenEv(%"class.blink::LayoutNGTableColumn"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink12NGTableTypes3RowELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.1927"*, %"struct.blink::NGTableTypes::Row"* dereferenceable(28)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1927", %"class.WTF::Vector.1927"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1927", %"class.WTF::Vector.1927"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::NGTableTypes::Row"*, %"struct.blink::NGTableTypes::Row"** %6, align 8
  %8 = icmp ugt %"struct.blink::NGTableTypes::Row"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::NGTableTypes::Row", %"struct.blink::NGTableTypes::Row"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::NGTableTypes::Row"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1927", %"class.WTF::Vector.1927"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::NGTableTypes::Row"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGTableTypes3RowEEEmm(i64 %26) #16
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12NGTableTypes3RowEEEPKcv, i64 0, i64 0)) #16
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1927"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %27, 28
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.blink::NGTableTypes::Row"*
  br label %99

35:                                               ; preds = %24
  %36 = udiv i64 %27, 28
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.blink::NGTableTypes::Row"*, %"struct.blink::NGTableTypes::Row"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.blink::NGTableTypes::Row"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.blink::NGTableTypes::Row"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = mul nuw nsw i64 %45, 28
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #16
  %47 = bitcast %"class.WTF::Vector.1927"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #16
  %51 = bitcast %"class.WTF::Vector.1927"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.blink::NGTableTypes::Row"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.blink::NGTableTypes::Row"* %1 to i64
  %56 = ptrtoint %"struct.blink::NGTableTypes::Row"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = sdiv exact i64 %57, 28
  %59 = getelementptr inbounds %"class.WTF::Vector.1927", %"class.WTF::Vector.1927"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"struct.blink::NGTableTypes::Row"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGTableTypes3RowEEEmm(i64 %71) #16
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12NGTableTypes3RowEEEPKcv, i64 0, i64 0)) #16
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1927"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.blink::NGTableTypes::Row"*, %"struct.blink::NGTableTypes::Row"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.blink::NGTableTypes::Row"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.blink::NGTableTypes::Row"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = mul nuw nsw i64 %85, 28
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #16
  %87 = bitcast %"class.WTF::Vector.1927"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #16
  %91 = bitcast %"class.WTF::Vector.1927"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = udiv i64 %72, 28
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.blink::NGTableTypes::Row"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.blink::NGTableTypes::Row"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.blink::NGTableTypes::Row", %"struct.blink::NGTableTypes::Row"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.blink::NGTableTypes::Row"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.blink::NGTableTypes::Row"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.blink::NGTableTypes::Row", %"struct.blink::NGTableTypes::Row"* %100, i64 %103
  %105 = bitcast %"struct.blink::NGTableTypes::Row"* %104 to i8*
  %106 = bitcast %"struct.blink::NGTableTypes::Row"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %106, i64 28, i1 false) #16
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGTableTypes3RowEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 76620946
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 76620946) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = mul i64 %0, 28
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRNS_6__lessIN5blink12NGTableTypes11RowspanCellES4_EEPS4_EEvT0_S8_T_NS_15iterator_traitsIS8_E15difference_typeEPNSB_10value_typeEl(%"struct.blink::NGTableTypes::RowspanCell"*, %"struct.blink::NGTableTypes::RowspanCell"*, %"struct.std::__1::__less.2116"* dereferenceable(1), i64, %"struct.blink::NGTableTypes::RowspanCell"*, i64) local_unnamed_addr #0 comdat {
  %7 = alloca [40 x i8], align 4
  %8 = alloca %"struct.blink::NGTableTypes::RowspanCell", align 4
  switch i64 %3, label %54 [
    i64 0, label %207
    i64 1, label %207
    i64 2, label %9
  ]

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %1, i64 -1
  %11 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %1, i64 -1, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %28

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %1, i64 -1, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %0, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %10, i64 0, i32 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %0, i64 0, i32 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %24, %26
  br i1 %27, label %50, label %207

28:                                               ; preds = %16, %9
  %29 = icmp ult i32 %12, %14
  br i1 %29, label %38, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %1, i64 -1, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = add i32 %32, %12
  %34 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %0, i64 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = add i32 %35, %14
  %37 = icmp ugt i32 %33, %36
  br i1 %37, label %38, label %50

38:                                               ; preds = %30, %28
  %39 = icmp ult i32 %14, %12
  br i1 %39, label %207, label %40

40:                                               ; preds = %38
  %41 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %0, i64 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = add i32 %42, %14
  %44 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %1, i64 -1, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = add i32 %45, %12
  %47 = icmp ule i32 %43, %46
  %48 = xor i1 %29, true
  %49 = or i1 %47, %48
  br i1 %49, label %207, label %50

50:                                               ; preds = %40, %30, %22
  %51 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %51)
  %52 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %51, i8* align 4 %52, i64 52, i1 false) #16
  %53 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* align 4 %53, i64 52, i1 false) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* nonnull align 4 %51, i64 52, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %51)
  br label %207

54:                                               ; preds = %6
  %55 = icmp slt i64 %3, 129
  br i1 %55, label %56, label %119

56:                                               ; preds = %54
  %57 = getelementptr inbounds [40 x i8], [40 x i8]* %7, i64 0, i64 0
  %58 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %0, %1
  br i1 %58, label %207, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %0, i64 1
  %61 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %60, %1
  br i1 %61, label %207, label %62

62:                                               ; preds = %59, %106
  %63 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %113, %106 ], [ %60, %59 ]
  %64 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %63, %106 ], [ %0, %59 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %57)
  %65 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %64, i64 1, i32 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %64, i64 1, i32 0, i32 1
  %68 = bitcast %"class.blink::LayoutUnit"* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %57, i8* align 4 %68, i64 40, i1 false) #16
  %69 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %64, i64 1, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %64, i64 1, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %63, %0
  br i1 %73, label %106, label %74

74:                                               ; preds = %62
  %75 = add i32 %72, %70
  br label %76

76:                                               ; preds = %115, %74
  %77 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %63, %74 ], [ %78, %115 ]
  %78 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %77, i64 -1
  %79 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %77, i64 -1, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %70, %80
  br i1 %81, label %82, label %90

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %77, i64 -1, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %72, %84
  br i1 %85, label %86, label %90

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %78, i64 0, i32 0, i32 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = icmp sgt i32 %66, %88
  br i1 %89, label %115, label %106

90:                                               ; preds = %82, %76
  %91 = icmp ult i32 %70, %80
  br i1 %91, label %97, label %92

92:                                               ; preds = %90
  %93 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %77, i64 -1, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, %80
  %96 = icmp ugt i32 %75, %95
  br i1 %96, label %97, label %115

97:                                               ; preds = %92, %90
  %98 = icmp ult i32 %80, %70
  br i1 %98, label %106, label %99

99:                                               ; preds = %97
  %100 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %77, i64 -1, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = add i32 %101, %80
  %103 = icmp ule i32 %102, %75
  %104 = xor i1 %91, true
  %105 = or i1 %103, %104
  br i1 %105, label %106, label %115

106:                                              ; preds = %115, %99, %97, %86, %62
  %107 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %0, %62 ], [ %0, %115 ], [ %77, %86 ], [ %77, %99 ], [ %77, %97 ]
  %108 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %107, i64 0, i32 0, i32 0, i32 0
  store i32 %66, i32* %108, align 4
  %109 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %107, i64 0, i32 0, i32 1
  %110 = bitcast %"class.blink::LayoutUnit"* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %110, i8* nonnull align 4 %57, i64 40, i1 false) #16
  %111 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %107, i64 0, i32 1
  store i32 %70, i32* %111, align 4
  %112 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %107, i64 0, i32 2
  store i32 %72, i32* %112, align 4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %57)
  %113 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %63, i64 1
  %114 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %113, %1
  br i1 %114, label %207, label %62

115:                                              ; preds = %99, %92, %86
  %116 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %77 to i8*
  %117 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %116, i8* align 4 %117, i64 52, i1 false) #16
  %118 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %78, %0
  br i1 %118, label %106, label %76

119:                                              ; preds = %54
  %120 = lshr i64 %3, 1
  %121 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %0, i64 %120
  %122 = icmp sgt i64 %3, %5
  br i1 %122, label %205, label %123

123:                                              ; preds = %119
  tail call void @_ZNSt3__118__stable_sort_moveIRNS_6__lessIN5blink12NGTableTypes11RowspanCellES4_EEPS4_EEvT0_S8_T_NS_15iterator_traitsIS8_E15difference_typeEPNSB_10value_typeE(%"struct.blink::NGTableTypes::RowspanCell"* %0, %"struct.blink::NGTableTypes::RowspanCell"* %121, %"struct.std::__1::__less.2116"* dereferenceable(1) %2, i64 %120, %"struct.blink::NGTableTypes::RowspanCell"* %4)
  %124 = sub nsw i64 %3, %120
  %125 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %4, i64 %120
  tail call void @_ZNSt3__118__stable_sort_moveIRNS_6__lessIN5blink12NGTableTypes11RowspanCellES4_EEPS4_EEvT0_S8_T_NS_15iterator_traitsIS8_E15difference_typeEPNSB_10value_typeE(%"struct.blink::NGTableTypes::RowspanCell"* %121, %"struct.blink::NGTableTypes::RowspanCell"* %1, %"struct.std::__1::__less.2116"* dereferenceable(1) %2, i64 %124, %"struct.blink::NGTableTypes::RowspanCell"* %125)
  %126 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %4, i64 %3
  br label %129

127:                                              ; preds = %192
  %128 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %193, %126
  br i1 %128, label %207, label %197

129:                                              ; preds = %123, %192
  %130 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %194, %192 ], [ %4, %123 ]
  %131 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %195, %192 ], [ %0, %123 ]
  %132 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %193, %192 ], [ %125, %123 ]
  %133 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %132, %126
  br i1 %133, label %134, label %144

134:                                              ; preds = %129
  %135 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %130, %125
  br i1 %135, label %207, label %136

136:                                              ; preds = %134, %136
  %137 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %141, %136 ], [ %130, %134 ]
  %138 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %142, %136 ], [ %131, %134 ]
  %139 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %138 to i8*
  %140 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %137 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %139, i8* align 4 %140, i64 52, i1 false) #16
  %141 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %137, i64 1
  %142 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %138, i64 1
  %143 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %141, %125
  br i1 %143, label %207, label %136

144:                                              ; preds = %129
  %145 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %132, i64 0, i32 1
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %130, i64 0, i32 1
  %148 = load i32, i32* %147, align 4
  %149 = icmp eq i32 %146, %148
  br i1 %149, label %150, label %162

150:                                              ; preds = %144
  %151 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %132, i64 0, i32 2
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %130, i64 0, i32 2
  %154 = load i32, i32* %153, align 4
  %155 = icmp eq i32 %152, %154
  br i1 %155, label %156, label %162

156:                                              ; preds = %150
  %157 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %132, i64 0, i32 0, i32 0, i32 0
  %158 = load i32, i32* %157, align 4
  %159 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %130, i64 0, i32 0, i32 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = icmp sgt i32 %158, %160
  br i1 %161, label %184, label %188

162:                                              ; preds = %150, %144
  %163 = icmp ult i32 %146, %148
  br i1 %163, label %172, label %164

164:                                              ; preds = %162
  %165 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %132, i64 0, i32 2
  %166 = load i32, i32* %165, align 4
  %167 = add i32 %166, %146
  %168 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %130, i64 0, i32 2
  %169 = load i32, i32* %168, align 4
  %170 = add i32 %169, %148
  %171 = icmp ugt i32 %167, %170
  br i1 %171, label %172, label %184

172:                                              ; preds = %164, %162
  %173 = icmp ult i32 %148, %146
  br i1 %173, label %188, label %174

174:                                              ; preds = %172
  %175 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %130, i64 0, i32 2
  %176 = load i32, i32* %175, align 4
  %177 = add i32 %176, %148
  %178 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %132, i64 0, i32 2
  %179 = load i32, i32* %178, align 4
  %180 = add i32 %179, %146
  %181 = icmp ule i32 %177, %180
  %182 = xor i1 %163, true
  %183 = or i1 %181, %182
  br i1 %183, label %188, label %184

184:                                              ; preds = %174, %164, %156
  %185 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %131 to i8*
  %186 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %132 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %185, i8* align 4 %186, i64 52, i1 false) #16
  %187 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %132, i64 1
  br label %192

188:                                              ; preds = %174, %172, %156
  %189 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %131 to i8*
  %190 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %130 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %189, i8* align 4 %190, i64 52, i1 false) #16
  %191 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %130, i64 1
  br label %192

192:                                              ; preds = %188, %184
  %193 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %187, %184 ], [ %132, %188 ]
  %194 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %130, %184 ], [ %191, %188 ]
  %195 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %131, i64 1
  %196 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %194, %125
  br i1 %196, label %127, label %129

197:                                              ; preds = %127, %197
  %198 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %203, %197 ], [ %195, %127 ]
  %199 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %202, %197 ], [ %193, %127 ]
  %200 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %198 to i8*
  %201 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %199 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %200, i8* align 4 %201, i64 52, i1 false) #16
  %202 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %199, i64 1
  %203 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %198, i64 1
  %204 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %202, %126
  br i1 %204, label %207, label %197

205:                                              ; preds = %119
  tail call void @_ZNSt3__113__stable_sortIRNS_6__lessIN5blink12NGTableTypes11RowspanCellES4_EEPS4_EEvT0_S8_T_NS_15iterator_traitsIS8_E15difference_typeEPNSB_10value_typeEl(%"struct.blink::NGTableTypes::RowspanCell"* %0, %"struct.blink::NGTableTypes::RowspanCell"* %121, %"struct.std::__1::__less.2116"* dereferenceable(1) %2, i64 %120, %"struct.blink::NGTableTypes::RowspanCell"* %4, i64 %5)
  %206 = sub nsw i64 %3, %120
  tail call void @_ZNSt3__113__stable_sortIRNS_6__lessIN5blink12NGTableTypes11RowspanCellES4_EEPS4_EEvT0_S8_T_NS_15iterator_traitsIS8_E15difference_typeEPNSB_10value_typeEl(%"struct.blink::NGTableTypes::RowspanCell"* %121, %"struct.blink::NGTableTypes::RowspanCell"* %1, %"struct.std::__1::__less.2116"* dereferenceable(1) %2, i64 %206, %"struct.blink::NGTableTypes::RowspanCell"* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRNS_6__lessIN5blink12NGTableTypes11RowspanCellES4_EEPS4_EEvT0_S8_S8_T_NS_15iterator_traitsIS8_E15difference_typeESC_PNSB_10value_typeEl(%"struct.blink::NGTableTypes::RowspanCell"* %0, %"struct.blink::NGTableTypes::RowspanCell"* %121, %"struct.blink::NGTableTypes::RowspanCell"* %1, %"struct.std::__1::__less.2116"* dereferenceable(1) %2, i64 %120, i64 %206, %"struct.blink::NGTableTypes::RowspanCell"* %4, i64 %5)
  br label %207

207:                                              ; preds = %197, %136, %106, %38, %40, %134, %127, %59, %56, %22, %205, %50, %6, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRNS_6__lessIN5blink12NGTableTypes11RowspanCellES4_EEPS4_EEvT0_S8_T_NS_15iterator_traitsIS8_E15difference_typeEPNSB_10value_typeE(%"struct.blink::NGTableTypes::RowspanCell"*, %"struct.blink::NGTableTypes::RowspanCell"*, %"struct.std::__1::__less.2116"* dereferenceable(1), i64, %"struct.blink::NGTableTypes::RowspanCell"*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %67 [
    i64 0, label %161
    i64 1, label %6
    i64 2, label %9
  ]

6:                                                ; preds = %5
  %7 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %4 to i8*
  %8 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 52, i1 false)
  br label %161

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %1, i64 -1
  %11 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %1, i64 -1, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %29

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %1, i64 -1, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %0, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %29

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %10, i64 0, i32 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %0, i64 0, i32 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %24, %26
  %28 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %4 to i8*
  br i1 %27, label %55, label %61

29:                                               ; preds = %16, %9
  %30 = icmp ult i32 %12, %14
  br i1 %30, label %41, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %1, i64 -1, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = add i32 %33, %12
  %35 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %0, i64 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = add i32 %36, %14
  %38 = icmp ugt i32 %34, %37
  br i1 %38, label %41, label %39

39:                                               ; preds = %31
  %40 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %4 to i8*
  br label %55

41:                                               ; preds = %31, %29
  %42 = icmp ult i32 %14, %12
  br i1 %42, label %53, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %0, i64 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = add i32 %45, %14
  %47 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %1, i64 -1, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = add i32 %48, %12
  %50 = icmp ugt i32 %46, %49
  br i1 %50, label %53, label %51

51:                                               ; preds = %43
  %52 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %4 to i8*
  br label %61

53:                                               ; preds = %41, %43
  %54 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %4 to i8*
  br i1 %30, label %55, label %61

55:                                               ; preds = %22, %39, %53
  %56 = phi i8* [ %40, %39 ], [ %54, %53 ], [ %28, %22 ]
  %57 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %56, i8* align 4 %57, i64 52, i1 false)
  %58 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %4, i64 1
  %59 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %58 to i8*
  %60 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %60, i64 52, i1 false)
  br label %161

61:                                               ; preds = %22, %51, %53
  %62 = phi i8* [ %52, %51 ], [ %54, %53 ], [ %28, %22 ]
  %63 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %62, i8* align 4 %63, i64 52, i1 false)
  %64 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %4, i64 1
  %65 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %64 to i8*
  %66 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %65, i8* align 4 %66, i64 52, i1 false)
  br label %161

67:                                               ; preds = %5
  %68 = icmp slt i64 %3, 9
  br i1 %68, label %69, label %70

69:                                               ; preds = %67
  tail call void @_ZNSt3__121__insertion_sort_moveIRNS_6__lessIN5blink12NGTableTypes11RowspanCellES4_EEPS4_EEvT0_S8_PNS_15iterator_traitsIS8_E10value_typeET_(%"struct.blink::NGTableTypes::RowspanCell"* %0, %"struct.blink::NGTableTypes::RowspanCell"* %1, %"struct.blink::NGTableTypes::RowspanCell"* %4, %"struct.std::__1::__less.2116"* dereferenceable(1) %2)
  br label %161

70:                                               ; preds = %67
  %71 = lshr i64 %3, 1
  %72 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %0, i64 %71
  tail call void @_ZNSt3__113__stable_sortIRNS_6__lessIN5blink12NGTableTypes11RowspanCellES4_EEPS4_EEvT0_S8_T_NS_15iterator_traitsIS8_E15difference_typeEPNSB_10value_typeEl(%"struct.blink::NGTableTypes::RowspanCell"* %0, %"struct.blink::NGTableTypes::RowspanCell"* %72, %"struct.std::__1::__less.2116"* dereferenceable(1) %2, i64 %71, %"struct.blink::NGTableTypes::RowspanCell"* %4, i64 %71)
  %73 = sub nsw i64 %3, %71
  %74 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %4, i64 %71
  tail call void @_ZNSt3__113__stable_sortIRNS_6__lessIN5blink12NGTableTypes11RowspanCellES4_EEPS4_EEvT0_S8_T_NS_15iterator_traitsIS8_E15difference_typeEPNSB_10value_typeEl(%"struct.blink::NGTableTypes::RowspanCell"* %72, %"struct.blink::NGTableTypes::RowspanCell"* %1, %"struct.std::__1::__less.2116"* dereferenceable(1) %2, i64 %73, %"struct.blink::NGTableTypes::RowspanCell"* %74, i64 %73)
  %75 = icmp eq i64 %71, 0
  br i1 %75, label %76, label %88

76:                                               ; preds = %156, %70
  %77 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %72, %70 ], [ %157, %156 ]
  %78 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %4, %70 ], [ %159, %156 ]
  %79 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %77, %1
  br i1 %79, label %161, label %80

80:                                               ; preds = %76, %80
  %81 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %86, %80 ], [ %78, %76 ]
  %82 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %85, %80 ], [ %77, %76 ]
  %83 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %81 to i8*
  %84 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %83, i8* align 4 %84, i64 52, i1 false) #16
  %85 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %82, i64 1
  %86 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %81, i64 1
  %87 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %85, %1
  br i1 %87, label %161, label %80

88:                                               ; preds = %70, %156
  %89 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %158, %156 ], [ %0, %70 ]
  %90 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %159, %156 ], [ %4, %70 ]
  %91 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %157, %156 ], [ %72, %70 ]
  %92 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %91, %1
  br i1 %92, label %93, label %103

93:                                               ; preds = %88
  %94 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %89, %72
  br i1 %94, label %161, label %95

95:                                               ; preds = %93, %95
  %96 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %100, %95 ], [ %89, %93 ]
  %97 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %101, %95 ], [ %90, %93 ]
  %98 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %97 to i8*
  %99 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %96 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %98, i8* align 4 %99, i64 52, i1 false) #16
  %100 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %96, i64 1
  %101 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %97, i64 1
  %102 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %100, %72
  br i1 %102, label %161, label %95

103:                                              ; preds = %88
  %104 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %91, i64 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %89, i64 0, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %105, %107
  br i1 %108, label %109, label %122

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %91, i64 0, i32 2
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %89, i64 0, i32 2
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %111, %113
  br i1 %114, label %115, label %122

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %91, i64 0, i32 0, i32 0, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %89, i64 0, i32 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = icmp sgt i32 %117, %119
  %121 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %90 to i8*
  br i1 %120, label %148, label %152

122:                                              ; preds = %109, %103
  %123 = icmp ult i32 %105, %107
  br i1 %123, label %134, label %124

124:                                              ; preds = %122
  %125 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %91, i64 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = add i32 %126, %105
  %128 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %89, i64 0, i32 2
  %129 = load i32, i32* %128, align 4
  %130 = add i32 %129, %107
  %131 = icmp ugt i32 %127, %130
  br i1 %131, label %134, label %132

132:                                              ; preds = %124
  %133 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %90 to i8*
  br label %148

134:                                              ; preds = %124, %122
  %135 = icmp ult i32 %107, %105
  br i1 %135, label %146, label %136

136:                                              ; preds = %134
  %137 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %89, i64 0, i32 2
  %138 = load i32, i32* %137, align 4
  %139 = add i32 %138, %107
  %140 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %91, i64 0, i32 2
  %141 = load i32, i32* %140, align 4
  %142 = add i32 %141, %105
  %143 = icmp ugt i32 %139, %142
  br i1 %143, label %146, label %144

144:                                              ; preds = %136
  %145 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %90 to i8*
  br label %152

146:                                              ; preds = %136, %134
  %147 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %90 to i8*
  br i1 %123, label %148, label %152

148:                                              ; preds = %146, %132, %115
  %149 = phi i8* [ %133, %132 ], [ %147, %146 ], [ %121, %115 ]
  %150 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %91 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %149, i8* align 4 %150, i64 52, i1 false) #16
  %151 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %91, i64 1
  br label %156

152:                                              ; preds = %146, %144, %115
  %153 = phi i8* [ %145, %144 ], [ %147, %146 ], [ %121, %115 ]
  %154 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %153, i8* align 4 %154, i64 52, i1 false) #16
  %155 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %89, i64 1
  br label %156

156:                                              ; preds = %152, %148
  %157 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %151, %148 ], [ %91, %152 ]
  %158 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %89, %148 ], [ %155, %152 ]
  %159 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %90, i64 1
  %160 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %158, %72
  br i1 %160, label %76, label %88

161:                                              ; preds = %95, %80, %93, %76, %55, %61, %5, %69, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRNS_6__lessIN5blink12NGTableTypes11RowspanCellES4_EEPS4_EEvT0_S8_S8_T_NS_15iterator_traitsIS8_E15difference_typeESC_PNSB_10value_typeEl(%"struct.blink::NGTableTypes::RowspanCell"*, %"struct.blink::NGTableTypes::RowspanCell"*, %"struct.blink::NGTableTypes::RowspanCell"*, %"struct.std::__1::__less.2116"* dereferenceable(1), i64, i64, %"struct.blink::NGTableTypes::RowspanCell"*, i64) local_unnamed_addr #0 comdat {
  %9 = alloca %"struct.blink::NGTableTypes::RowspanCell", align 4
  %10 = alloca %"struct.blink::NGTableTypes::RowspanCell", align 4
  %11 = alloca %"struct.blink::NGTableTypes::RowspanCell", align 4
  %12 = alloca %"struct.blink::NGTableTypes::RowspanCell", align 4
  %13 = alloca %"struct.blink::NGTableTypes::RowspanCell", align 4
  %14 = icmp eq i64 %5, 0
  br i1 %14, label %315, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %13 to i8*
  %17 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %12 to i8*
  %18 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %11 to i8*
  %19 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %10 to i8*
  br label %20

20:                                               ; preds = %15, %308
  %21 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %0, %15 ], [ %313, %308 ]
  %22 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %1, %15 ], [ %312, %308 ]
  %23 = phi i64 [ %5, %15 ], [ %311, %308 ]
  %24 = phi i64 [ %4, %15 ], [ %310, %308 ]
  %25 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %2, %15 ], [ %309, %308 ]
  %26 = icmp sgt i64 %24, %7
  %27 = icmp sgt i64 %23, %7
  %28 = and i1 %26, %27
  br i1 %28, label %29, label %36

29:                                               ; preds = %20
  %30 = icmp eq i64 %24, 0
  br i1 %30, label %315, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %22, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %22, i64 0, i32 2
  %35 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %22, i64 0, i32 0, i32 0, i32 0
  br label %37

36:                                               ; preds = %20
  tail call void @_ZNSt3__124__buffered_inplace_mergeIRNS_6__lessIN5blink12NGTableTypes11RowspanCellES4_EEPS4_EEvT0_S8_S8_T_NS_15iterator_traitsIS8_E15difference_typeESC_PNSB_10value_typeE(%"struct.blink::NGTableTypes::RowspanCell"* %21, %"struct.blink::NGTableTypes::RowspanCell"* %22, %"struct.blink::NGTableTypes::RowspanCell"* %25, %"struct.std::__1::__less.2116"* dereferenceable(1) %3, i64 %24, i64 %23, %"struct.blink::NGTableTypes::RowspanCell"* %6)
  br label %315

37:                                               ; preds = %31, %73
  %38 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %21, %31 ], [ %74, %73 ]
  %39 = phi i64 [ %24, %31 ], [ %75, %73 ]
  %40 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %38, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %33, %41
  br i1 %42, label %43, label %53

43:                                               ; preds = %37
  %44 = load i32, i32* %34, align 4
  %45 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %38, i64 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %44, %46
  br i1 %47, label %48, label %53

48:                                               ; preds = %43
  %49 = load i32, i32* %35, align 4
  %50 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %38, i64 0, i32 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp sgt i32 %49, %51
  br i1 %52, label %77, label %73

53:                                               ; preds = %43, %37
  %54 = icmp ult i32 %33, %41
  br i1 %54, label %62, label %55

55:                                               ; preds = %53
  %56 = load i32, i32* %34, align 4
  %57 = add i32 %56, %33
  %58 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %38, i64 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = add i32 %59, %41
  %61 = icmp ugt i32 %57, %60
  br i1 %61, label %62, label %77

62:                                               ; preds = %55, %53
  %63 = icmp ult i32 %41, %33
  br i1 %63, label %73, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %38, i64 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = add i32 %66, %41
  %68 = load i32, i32* %34, align 4
  %69 = add i32 %68, %33
  %70 = icmp ule i32 %67, %69
  %71 = xor i1 %54, true
  %72 = or i1 %70, %71
  br i1 %72, label %73, label %77

73:                                               ; preds = %62, %64, %48
  %74 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %38, i64 1
  %75 = add nsw i64 %39, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %315, label %37

77:                                               ; preds = %64, %55, %48
  %78 = icmp slt i64 %39, %23
  br i1 %78, label %79, label %141

79:                                               ; preds = %77
  %80 = sdiv i64 %23, 2
  %81 = ptrtoint %"struct.blink::NGTableTypes::RowspanCell"* %22 to i64
  %82 = ptrtoint %"struct.blink::NGTableTypes::RowspanCell"* %38 to i64
  %83 = sub i64 %81, %82
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %136, label %85

85:                                               ; preds = %79
  %86 = sdiv exact i64 %83, 52
  %87 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %22, i64 %80, i32 1
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %22, i64 %80, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = add i32 %90, %88
  %92 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %22, i64 %80, i32 0, i32 0, i32 0
  %93 = load i32, i32* %92, align 4
  br label %94

94:                                               ; preds = %130, %85
  %95 = phi i64 [ %86, %85 ], [ %132, %130 ]
  %96 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %38, %85 ], [ %131, %130 ]
  %97 = lshr i64 %95, 1
  %98 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %96, i64 %97
  %99 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %96, i64 %97, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %88, %100
  br i1 %101, label %102, label %110

102:                                              ; preds = %94
  %103 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %96, i64 %97, i32 2
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %90, %104
  br i1 %105, label %106, label %110

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %98, i64 0, i32 0, i32 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp sgt i32 %93, %108
  br i1 %109, label %130, label %126

110:                                              ; preds = %102, %94
  %111 = icmp ult i32 %88, %100
  br i1 %111, label %117, label %112

112:                                              ; preds = %110
  %113 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %96, i64 %97, i32 2
  %114 = load i32, i32* %113, align 4
  %115 = add i32 %114, %100
  %116 = icmp ugt i32 %91, %115
  br i1 %116, label %117, label %130

117:                                              ; preds = %112, %110
  %118 = icmp ult i32 %100, %88
  br i1 %118, label %126, label %119

119:                                              ; preds = %117
  %120 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %96, i64 %97, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = add i32 %121, %100
  %123 = icmp ule i32 %122, %91
  %124 = xor i1 %111, true
  %125 = or i1 %123, %124
  br i1 %125, label %126, label %130

126:                                              ; preds = %119, %117, %106
  %127 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %98, i64 1
  %128 = xor i64 %97, -1
  %129 = add i64 %95, %128
  br label %130

130:                                              ; preds = %126, %119, %112, %106
  %131 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %127, %126 ], [ %96, %106 ], [ %96, %112 ], [ %96, %119 ]
  %132 = phi i64 [ %129, %126 ], [ %97, %106 ], [ %97, %112 ], [ %97, %119 ]
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %94

134:                                              ; preds = %130
  %135 = ptrtoint %"struct.blink::NGTableTypes::RowspanCell"* %131 to i64
  br label %136

136:                                              ; preds = %134, %79
  %137 = phi i64 [ %135, %134 ], [ %82, %79 ]
  %138 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %131, %134 ], [ %38, %79 ]
  %139 = sub i64 %137, %82
  %140 = sdiv exact i64 %139, 52
  br label %208

141:                                              ; preds = %77
  %142 = icmp eq i64 %39, 1
  br i1 %142, label %143, label %147

143:                                              ; preds = %141
  %144 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %144)
  %145 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %144, i8* align 4 %145, i64 52, i1 false) #16
  %146 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %145, i8* align 4 %146, i64 52, i1 false) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %146, i8* nonnull align 4 %144, i64 52, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %144)
  br label %315

147:                                              ; preds = %141
  %148 = sdiv i64 %39, 2
  %149 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %38, i64 %148
  %150 = ptrtoint %"struct.blink::NGTableTypes::RowspanCell"* %25 to i64
  %151 = ptrtoint %"struct.blink::NGTableTypes::RowspanCell"* %22 to i64
  %152 = sub i64 %150, %151
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %204, label %154

154:                                              ; preds = %147
  %155 = sdiv exact i64 %152, 52
  %156 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %38, i64 %148, i32 1
  %157 = load i32, i32* %156, align 4
  %158 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %38, i64 %148, i32 2
  %159 = load i32, i32* %158, align 4
  %160 = add i32 %159, %157
  %161 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %149, i64 0, i32 0, i32 0, i32 0
  %162 = load i32, i32* %161, align 4
  br label %163

163:                                              ; preds = %200, %154
  %164 = phi i64 [ %155, %154 ], [ %202, %200 ]
  %165 = phi i64 [ 0, %154 ], [ %201, %200 ]
  %166 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %22, i64 %165
  %167 = lshr i64 %164, 1
  %168 = add nsw i64 %165, %167
  %169 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %166, i64 %167, i32 1
  %170 = load i32, i32* %169, align 4
  %171 = icmp eq i32 %170, %157
  br i1 %171, label %172, label %180

172:                                              ; preds = %163
  %173 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %166, i64 %167, i32 2
  %174 = load i32, i32* %173, align 4
  %175 = icmp eq i32 %174, %159
  br i1 %175, label %176, label %180

176:                                              ; preds = %172
  %177 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %22, i64 %168, i32 0, i32 0, i32 0
  %178 = load i32, i32* %177, align 4
  %179 = icmp sgt i32 %178, %162
  br i1 %179, label %196, label %200

180:                                              ; preds = %172, %163
  %181 = icmp ult i32 %170, %157
  br i1 %181, label %187, label %182

182:                                              ; preds = %180
  %183 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %166, i64 %167, i32 2
  %184 = load i32, i32* %183, align 4
  %185 = add i32 %184, %170
  %186 = icmp ugt i32 %185, %160
  br i1 %186, label %187, label %196

187:                                              ; preds = %182, %180
  %188 = icmp ult i32 %157, %170
  br i1 %188, label %200, label %189

189:                                              ; preds = %187
  %190 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %166, i64 %167, i32 2
  %191 = load i32, i32* %190, align 4
  %192 = add i32 %191, %170
  %193 = icmp ule i32 %160, %192
  %194 = xor i1 %181, true
  %195 = or i1 %193, %194
  br i1 %195, label %200, label %196

196:                                              ; preds = %189, %182, %176
  %197 = add nsw i64 %168, 1
  %198 = xor i64 %167, -1
  %199 = add i64 %164, %198
  br label %200

200:                                              ; preds = %196, %189, %187, %176
  %201 = phi i64 [ %197, %196 ], [ %165, %176 ], [ %165, %189 ], [ %165, %187 ]
  %202 = phi i64 [ %199, %196 ], [ %167, %176 ], [ %167, %189 ], [ %167, %187 ]
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %204, label %163

204:                                              ; preds = %200, %147
  %205 = phi i64 [ 0, %147 ], [ %201, %200 ]
  %206 = mul nuw i64 %205, 52
  %207 = sdiv exact i64 %206, 52
  br label %208

208:                                              ; preds = %204, %136
  %209 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %138, %136 ], [ %149, %204 ]
  %210 = phi i64 [ %80, %136 ], [ %205, %204 ]
  %211 = phi i64 [ %140, %136 ], [ %148, %204 ]
  %212 = phi i64 [ %80, %136 ], [ %207, %204 ]
  %213 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %22, i64 %210
  %214 = sub nsw i64 %39, %211
  %215 = sub nsw i64 %23, %212
  %216 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %209, %22
  br i1 %216, label %301, label %217

217:                                              ; preds = %208
  %218 = icmp eq i64 %210, 0
  br i1 %218, label %301, label %219

219:                                              ; preds = %217
  %220 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %209, i64 1
  %221 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %220, %22
  br i1 %221, label %222, label %232

222:                                              ; preds = %219
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %19)
  %223 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %19, i8* align 4 %223, i64 52, i1 false) #16
  %224 = mul nuw i64 %210, 52
  %225 = sdiv exact i64 %224, 52
  %226 = icmp eq i64 %224, 0
  br i1 %226, label %229, label %227

227:                                              ; preds = %222
  %228 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %22 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %223, i8* align 4 %228, i64 %224, i1 false) #16
  br label %229

229:                                              ; preds = %227, %222
  %230 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %209, i64 %225
  %231 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %230 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %231, i8* nonnull align 4 %19, i64 52, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %19)
  br label %301

232:                                              ; preds = %219
  %233 = icmp eq i64 %210, 1
  br i1 %233, label %234, label %251

234:                                              ; preds = %232
  %235 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %213, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %18)
  %236 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %235 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %18, i8* align 4 %236, i64 52, i1 false) #16
  %237 = ptrtoint %"struct.blink::NGTableTypes::RowspanCell"* %235 to i64
  %238 = ptrtoint %"struct.blink::NGTableTypes::RowspanCell"* %209 to i64
  %239 = sub i64 %237, %238
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %241, label %243

241:                                              ; preds = %234
  %242 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %209 to i8*
  br label %248

243:                                              ; preds = %234
  %244 = sdiv exact i64 %239, -52
  %245 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %213, i64 %244
  %246 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %245 to i8*
  %247 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %209 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %246, i8* align 4 %247, i64 %239, i1 false) #16
  br label %248

248:                                              ; preds = %243, %241
  %249 = phi i8* [ %242, %241 ], [ %247, %243 ]
  %250 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %213, %241 ], [ %245, %243 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %249, i8* nonnull align 4 %18, i64 52, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %18)
  br label %301

251:                                              ; preds = %232
  %252 = ptrtoint %"struct.blink::NGTableTypes::RowspanCell"* %22 to i64
  %253 = ptrtoint %"struct.blink::NGTableTypes::RowspanCell"* %209 to i64
  %254 = sub i64 %252, %253
  %255 = sdiv exact i64 %254, 52
  %256 = ptrtoint %"struct.blink::NGTableTypes::RowspanCell"* %213 to i64
  %257 = mul nuw i64 %210, 52
  %258 = sdiv exact i64 %257, 52
  %259 = icmp eq i64 %255, %258
  br i1 %259, label %260, label %268

260:                                              ; preds = %251, %260
  %261 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %266, %260 ], [ %22, %251 ]
  %262 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %265, %260 ], [ %209, %251 ]
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %17)
  %263 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %262 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %17, i8* align 4 %263, i64 52, i1 false) #16
  %264 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %261 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %263, i8* align 4 %264, i64 52, i1 false) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %264, i8* nonnull align 4 %17, i64 52, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %17)
  %265 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %262, i64 1
  %266 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %261, i64 1
  %267 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %265, %22
  br i1 %267, label %301, label %260

268:                                              ; preds = %251, %268
  %269 = phi i64 [ %271, %268 ], [ %258, %251 ]
  %270 = phi i64 [ %269, %268 ], [ %255, %251 ]
  %271 = srem i64 %270, %269
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %268

273:                                              ; preds = %268
  %274 = icmp eq i64 %269, 0
  br i1 %274, label %277, label %275

275:                                              ; preds = %273
  %276 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %209, i64 %269
  br label %279

277:                                              ; preds = %298, %273
  %278 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %209, i64 %258
  br label %301

279:                                              ; preds = %298, %275
  %280 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %276, %275 ], [ %281, %298 ]
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %16)
  %281 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %280, i64 -1
  %282 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %281 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %16, i8* align 4 %282, i64 52, i1 false) #16
  %283 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %281, i64 %255
  br label %284

284:                                              ; preds = %284, %279
  %285 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %281, %279 ], [ %286, %284 ]
  %286 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %283, %279 ], [ %296, %284 ]
  %287 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %285 to i8*
  %288 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %286 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %287, i8* align 4 %288, i64 52, i1 false) #16
  %289 = ptrtoint %"struct.blink::NGTableTypes::RowspanCell"* %286 to i64
  %290 = sub i64 %256, %289
  %291 = sdiv exact i64 %290, 52
  %292 = icmp slt i64 %255, %291
  %293 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %286, i64 %255
  %294 = sub nsw i64 %255, %291
  %295 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %209, i64 %294
  %296 = select i1 %292, %"struct.blink::NGTableTypes::RowspanCell"* %293, %"struct.blink::NGTableTypes::RowspanCell"* %295
  %297 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %296, %281
  br i1 %297, label %298, label %284

298:                                              ; preds = %284
  %299 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %286 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %299, i8* nonnull align 4 %16, i64 52, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %16)
  %300 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %281, %209
  br i1 %300, label %277, label %279

301:                                              ; preds = %260, %208, %217, %229, %248, %277
  %302 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %213, %208 ], [ %209, %217 ], [ %230, %229 ], [ %250, %248 ], [ %278, %277 ], [ %22, %260 ]
  %303 = add nsw i64 %212, %211
  %304 = add nsw i64 %215, %214
  %305 = icmp slt i64 %303, %304
  br i1 %305, label %306, label %307

306:                                              ; preds = %301
  tail call void @_ZNSt3__115__inplace_mergeIRNS_6__lessIN5blink12NGTableTypes11RowspanCellES4_EEPS4_EEvT0_S8_S8_T_NS_15iterator_traitsIS8_E15difference_typeESC_PNSB_10value_typeEl(%"struct.blink::NGTableTypes::RowspanCell"* %38, %"struct.blink::NGTableTypes::RowspanCell"* %209, %"struct.blink::NGTableTypes::RowspanCell"* %302, %"struct.std::__1::__less.2116"* dereferenceable(1) %3, i64 %211, i64 %212, %"struct.blink::NGTableTypes::RowspanCell"* %6, i64 %7)
  br label %308

307:                                              ; preds = %301
  tail call void @_ZNSt3__115__inplace_mergeIRNS_6__lessIN5blink12NGTableTypes11RowspanCellES4_EEPS4_EEvT0_S8_S8_T_NS_15iterator_traitsIS8_E15difference_typeESC_PNSB_10value_typeEl(%"struct.blink::NGTableTypes::RowspanCell"* %302, %"struct.blink::NGTableTypes::RowspanCell"* %213, %"struct.blink::NGTableTypes::RowspanCell"* %25, %"struct.std::__1::__less.2116"* dereferenceable(1) %3, i64 %214, i64 %215, %"struct.blink::NGTableTypes::RowspanCell"* %6, i64 %7)
  br label %308

308:                                              ; preds = %306, %307
  %309 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %25, %306 ], [ %302, %307 ]
  %310 = phi i64 [ %214, %306 ], [ %211, %307 ]
  %311 = phi i64 [ %215, %306 ], [ %212, %307 ]
  %312 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %213, %306 ], [ %209, %307 ]
  %313 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %302, %306 ], [ %38, %307 ]
  %314 = icmp eq i64 %311, 0
  br i1 %314, label %315, label %20

315:                                              ; preds = %308, %29, %73, %8, %143, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__121__insertion_sort_moveIRNS_6__lessIN5blink12NGTableTypes11RowspanCellES4_EEPS4_EEvT0_S8_PNS_15iterator_traitsIS8_E10value_typeET_(%"struct.blink::NGTableTypes::RowspanCell"*, %"struct.blink::NGTableTypes::RowspanCell"*, %"struct.blink::NGTableTypes::RowspanCell"*, %"struct.std::__1::__less.2116"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %5 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %0, %1
  br i1 %5, label %116, label %6

6:                                                ; preds = %4
  %7 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %2 to i8*
  %8 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 52, i1 false)
  %9 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %0, i64 1
  %10 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %9, %1
  br i1 %10, label %116, label %11

11:                                               ; preds = %6, %111
  %12 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %114, %111 ], [ %9, %6 ]
  %13 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %15, %111 ], [ %2, %6 ]
  %14 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %12, %111 ], [ %0, %6 ]
  %15 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %13, i64 1
  %16 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %14, i64 1, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %13, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %21, label %34

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %14, i64 1, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %13, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %27, label %34

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %12, i64 0, i32 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %13, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp sgt i32 %29, %31
  %33 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %15 to i8*
  br i1 %32, label %60, label %111

34:                                               ; preds = %21, %11
  %35 = icmp ult i32 %17, %19
  br i1 %35, label %46, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %14, i64 1, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = add i32 %38, %17
  %40 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %13, i64 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = add i32 %41, %19
  %43 = icmp ugt i32 %39, %42
  br i1 %43, label %46, label %44

44:                                               ; preds = %36
  %45 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %15 to i8*
  br label %60

46:                                               ; preds = %36, %34
  %47 = icmp ult i32 %19, %17
  br i1 %47, label %58, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %13, i64 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = add i32 %50, %19
  %52 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %14, i64 1, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = add i32 %53, %17
  %55 = icmp ugt i32 %51, %54
  br i1 %55, label %58, label %56

56:                                               ; preds = %48
  %57 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %15 to i8*
  br label %111

58:                                               ; preds = %46, %48
  %59 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %15 to i8*
  br i1 %35, label %60, label %111

60:                                               ; preds = %27, %44, %58
  %61 = phi i8* [ %45, %44 ], [ %59, %58 ], [ %33, %27 ]
  %62 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %61, i8* align 4 %62, i64 52, i1 false)
  %63 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %12, i64 0, i32 0, i32 0, i32 0
  %64 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %13, %2
  br i1 %64, label %111, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %14, i64 1, i32 2
  br label %67

67:                                               ; preds = %65, %104
  %68 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %13, %65 ], [ %69, %104 ]
  %69 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %68, i64 -1
  %70 = load i32, i32* %16, align 4
  %71 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %68, i64 -1, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %70, %72
  br i1 %73, label %74, label %84

74:                                               ; preds = %67
  %75 = load i32, i32* %66, align 4
  %76 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %68, i64 -1, i32 2
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %75, %77
  br i1 %78, label %79, label %84

79:                                               ; preds = %74
  %80 = load i32, i32* %63, align 4
  %81 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %69, i64 0, i32 0, i32 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = icmp sgt i32 %80, %82
  br i1 %83, label %104, label %108

84:                                               ; preds = %74, %67
  %85 = icmp ult i32 %70, %72
  br i1 %85, label %93, label %86

86:                                               ; preds = %84
  %87 = load i32, i32* %66, align 4
  %88 = add i32 %87, %70
  %89 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %68, i64 -1, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = add i32 %90, %72
  %92 = icmp ugt i32 %88, %91
  br i1 %92, label %93, label %104

93:                                               ; preds = %86, %84
  %94 = icmp ult i32 %72, %70
  br i1 %94, label %108, label %95

95:                                               ; preds = %93
  %96 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %68, i64 -1, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = add i32 %97, %72
  %99 = load i32, i32* %66, align 4
  %100 = add i32 %99, %70
  %101 = icmp ule i32 %98, %100
  %102 = xor i1 %85, true
  %103 = or i1 %101, %102
  br i1 %103, label %108, label %104

104:                                              ; preds = %95, %86, %79
  %105 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %68 to i8*
  %106 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %106, i64 52, i1 false)
  %107 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %69, %2
  br i1 %107, label %108, label %67

108:                                              ; preds = %93, %95, %79, %104
  %109 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %2, %104 ], [ %68, %79 ], [ %68, %95 ], [ %68, %93 ]
  %110 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %109 to i8*
  br label %111

111:                                              ; preds = %58, %56, %27, %60, %108
  %112 = phi i8* [ %110, %108 ], [ %7, %60 ], [ %57, %56 ], [ %59, %58 ], [ %33, %27 ]
  %113 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %112, i8* align 4 %113, i64 52, i1 false)
  %114 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %12, i64 1
  %115 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %114, %1
  br i1 %115, label %116, label %11

116:                                              ; preds = %111, %6, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__124__buffered_inplace_mergeIRNS_6__lessIN5blink12NGTableTypes11RowspanCellES4_EEPS4_EEvT0_S8_S8_T_NS_15iterator_traitsIS8_E15difference_typeESC_PNSB_10value_typeE(%"struct.blink::NGTableTypes::RowspanCell"*, %"struct.blink::NGTableTypes::RowspanCell"*, %"struct.blink::NGTableTypes::RowspanCell"*, %"struct.std::__1::__less.2116"* dereferenceable(1), i64, i64, %"struct.blink::NGTableTypes::RowspanCell"*) local_unnamed_addr #0 comdat {
  %8 = icmp sgt i64 %4, %5
  br i1 %8, label %11, label %9

9:                                                ; preds = %7
  %10 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %0, %1
  br i1 %10, label %164, label %81

11:                                               ; preds = %7
  %12 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %1, %2
  br i1 %12, label %164, label %156

13:                                               ; preds = %81
  %14 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %87, %6
  br i1 %14, label %164, label %15

15:                                               ; preds = %13, %76
  %16 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %78, %76 ], [ %6, %13 ]
  %17 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %79, %76 ], [ %0, %13 ]
  %18 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %77, %76 ], [ %1, %13 ]
  %19 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %18, %2
  br i1 %19, label %20, label %28

20:                                               ; preds = %15
  %21 = ptrtoint %"struct.blink::NGTableTypes::RowspanCell"* %87 to i64
  %22 = ptrtoint %"struct.blink::NGTableTypes::RowspanCell"* %16 to i64
  %23 = sub i64 %21, %22
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %164, label %25

25:                                               ; preds = %20
  %26 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %17 to i8*
  %27 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %16 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %26, i8* align 4 %27, i64 %23, i1 false) #16
  br label %164

28:                                               ; preds = %15
  %29 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %18, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %16, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %30, %32
  br i1 %33, label %34, label %46

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %18, i64 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %16, i64 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %36, %38
  br i1 %39, label %40, label %46

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %18, i64 0, i32 0, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %16, i64 0, i32 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp sgt i32 %42, %44
  br i1 %45, label %68, label %72

46:                                               ; preds = %34, %28
  %47 = icmp ult i32 %30, %32
  br i1 %47, label %56, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %18, i64 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = add i32 %50, %30
  %52 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %16, i64 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = add i32 %53, %32
  %55 = icmp ugt i32 %51, %54
  br i1 %55, label %56, label %68

56:                                               ; preds = %48, %46
  %57 = icmp ult i32 %32, %30
  br i1 %57, label %72, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %16, i64 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = add i32 %60, %32
  %62 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %18, i64 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = add i32 %63, %30
  %65 = icmp ule i32 %61, %64
  %66 = xor i1 %47, true
  %67 = or i1 %65, %66
  br i1 %67, label %72, label %68

68:                                               ; preds = %58, %48, %40
  %69 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %17 to i8*
  %70 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %69, i8* align 4 %70, i64 52, i1 false) #16
  %71 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %18, i64 1
  br label %76

72:                                               ; preds = %58, %56, %40
  %73 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %17 to i8*
  %74 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %73, i8* align 4 %74, i64 52, i1 false) #16
  %75 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %16, i64 1
  br label %76

76:                                               ; preds = %72, %68
  %77 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %71, %68 ], [ %18, %72 ]
  %78 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %16, %68 ], [ %75, %72 ]
  %79 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %17, i64 1
  %80 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %78, %87
  br i1 %80, label %164, label %15

81:                                               ; preds = %9, %81
  %82 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %86, %81 ], [ %0, %9 ]
  %83 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %87, %81 ], [ %6, %9 ]
  %84 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %83 to i8*
  %85 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %84, i8* align 4 %85, i64 52, i1 false)
  %86 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %82, i64 1
  %87 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %83, i64 1
  %88 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %86, %1
  br i1 %88, label %13, label %81

89:                                               ; preds = %156
  %90 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %162, %6
  br i1 %90, label %164, label %91

91:                                               ; preds = %89, %147
  %92 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %154, %147 ], [ %2, %89 ]
  %93 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %150, %147 ], [ %162, %89 ]
  %94 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %149, %147 ], [ %1, %89 ]
  %95 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %94, %0
  br i1 %95, label %96, label %104

96:                                               ; preds = %91, %96
  %97 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %99, %96 ], [ %93, %91 ]
  %98 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %100, %96 ], [ %92, %91 ]
  %99 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %97, i64 -1
  %100 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %98, i64 -1
  %101 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %100 to i8*
  %102 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %102, i64 52, i1 false) #16
  %103 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %99, %6
  br i1 %103, label %164, label %96

104:                                              ; preds = %91
  %105 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %94, i64 -1
  %106 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %93, i64 -1
  %107 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %93, i64 -1, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %94, i64 -1, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %108, %110
  br i1 %111, label %112, label %124

112:                                              ; preds = %104
  %113 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %93, i64 -1, i32 2
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %94, i64 -1, i32 2
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %114, %116
  br i1 %117, label %118, label %124

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %106, i64 0, i32 0, i32 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %105, i64 0, i32 0, i32 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = icmp sgt i32 %120, %122
  br i1 %123, label %147, label %146

124:                                              ; preds = %112, %104
  %125 = icmp ult i32 %108, %110
  br i1 %125, label %134, label %126

126:                                              ; preds = %124
  %127 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %93, i64 -1, i32 2
  %128 = load i32, i32* %127, align 4
  %129 = add i32 %128, %108
  %130 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %94, i64 -1, i32 2
  %131 = load i32, i32* %130, align 4
  %132 = add i32 %131, %110
  %133 = icmp ugt i32 %129, %132
  br i1 %133, label %134, label %147

134:                                              ; preds = %126, %124
  %135 = icmp ult i32 %110, %108
  br i1 %135, label %146, label %136

136:                                              ; preds = %134
  %137 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %94, i64 -1, i32 2
  %138 = load i32, i32* %137, align 4
  %139 = add i32 %138, %110
  %140 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %93, i64 -1, i32 2
  %141 = load i32, i32* %140, align 4
  %142 = add i32 %141, %108
  %143 = icmp ule i32 %139, %142
  %144 = xor i1 %125, true
  %145 = or i1 %143, %144
  br i1 %145, label %146, label %147

146:                                              ; preds = %136, %134, %118
  br label %147

147:                                              ; preds = %118, %126, %136, %146
  %148 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %106, %146 ], [ %105, %136 ], [ %105, %126 ], [ %105, %118 ]
  %149 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %94, %146 ], [ %105, %136 ], [ %105, %126 ], [ %105, %118 ]
  %150 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %106, %146 ], [ %93, %136 ], [ %93, %126 ], [ %93, %118 ]
  %151 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %92, i64 -1
  %152 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %151 to i8*
  %153 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %148 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %152, i8* align 4 %153, i64 52, i1 false) #16
  %154 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %92, i64 -1
  %155 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %150, %6
  br i1 %155, label %164, label %91

156:                                              ; preds = %11, %156
  %157 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %161, %156 ], [ %1, %11 ]
  %158 = phi %"struct.blink::NGTableTypes::RowspanCell"* [ %162, %156 ], [ %6, %11 ]
  %159 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %158 to i8*
  %160 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %157 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %159, i8* align 4 %160, i64 52, i1 false)
  %161 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %157, i64 1
  %162 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %158, i64 1
  %163 = icmp eq %"struct.blink::NGTableTypes::RowspanCell"* %161, %2
  br i1 %163, label %89, label %156

164:                                              ; preds = %76, %147, %96, %11, %9, %89, %25, %20, %13
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink12NGTableTypes7SectionELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1922"*, %"struct.blink::NGTableTypes::Section"* dereferenceable(24)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1922", %"class.WTF::Vector.1922"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1922", %"class.WTF::Vector.1922"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::NGTableTypes::Section"*, %"struct.blink::NGTableTypes::Section"** %6, align 8
  %8 = icmp ugt %"struct.blink::NGTableTypes::Section"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::NGTableTypes::Section", %"struct.blink::NGTableTypes::Section"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::NGTableTypes::Section"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1922", %"class.WTF::Vector.1922"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::NGTableTypes::Section"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGTableTypes7SectionEEEmm(i64 %26) #16
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12NGTableTypes7SectionEEEPKcv, i64 0, i64 0)) #16
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1922"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %27, 24
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.blink::NGTableTypes::Section"*
  br label %99

35:                                               ; preds = %24
  %36 = udiv i64 %27, 24
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.blink::NGTableTypes::Section"*, %"struct.blink::NGTableTypes::Section"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.blink::NGTableTypes::Section"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.blink::NGTableTypes::Section"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = mul nuw nsw i64 %45, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #16
  %47 = bitcast %"class.WTF::Vector.1922"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #16
  %51 = bitcast %"class.WTF::Vector.1922"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.blink::NGTableTypes::Section"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.blink::NGTableTypes::Section"* %1 to i64
  %56 = ptrtoint %"struct.blink::NGTableTypes::Section"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = sdiv exact i64 %57, 24
  %59 = getelementptr inbounds %"class.WTF::Vector.1922", %"class.WTF::Vector.1922"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"struct.blink::NGTableTypes::Section"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGTableTypes7SectionEEEmm(i64 %71) #16
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12NGTableTypes7SectionEEEPKcv, i64 0, i64 0)) #16
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1922"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.blink::NGTableTypes::Section"*, %"struct.blink::NGTableTypes::Section"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.blink::NGTableTypes::Section"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.blink::NGTableTypes::Section"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = mul nuw nsw i64 %85, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #16
  %87 = bitcast %"class.WTF::Vector.1922"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #16
  %91 = bitcast %"class.WTF::Vector.1922"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = udiv i64 %72, 24
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.blink::NGTableTypes::Section"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.blink::NGTableTypes::Section"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.blink::NGTableTypes::Section", %"struct.blink::NGTableTypes::Section"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.blink::NGTableTypes::Section"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.blink::NGTableTypes::Section"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.blink::NGTableTypes::Section", %"struct.blink::NGTableTypes::Section"* %100, i64 %103
  %105 = bitcast %"struct.blink::NGTableTypes::Section"* %104 to i8*
  %106 = bitcast %"struct.blink::NGTableTypes::Section"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %106, i64 24, i1 false) #16
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGTableTypes7SectionEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 89391104
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 89391104) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = mul i64 %0, 24
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(12) %"struct.blink::NGColspanCellTabulator::Cell"* @_ZN3WTF6VectorIN5blink22NGColspanCellTabulator4CellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1942"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1942", %"class.WTF::Vector.1942"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.1942", %"class.WTF::Vector.1942"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::NGColspanCellTabulator::Cell"*, %"struct.blink::NGColspanCellTabulator::Cell"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %24, i64 %25
  ret %"struct.blink::NGColspanCellTabulator::Cell"* %26
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN5blink22NGColspanCellTabulator6EndRowEvE3$_0PNS2_4CellEEEvT0_S7_T_"(%"struct.blink::NGColspanCellTabulator::Cell"*, %"struct.blink::NGColspanCellTabulator::Cell"*) unnamed_addr #0 {
  br label %3

3:                                                ; preds = %480, %2
  %4 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %1, %2 ], [ %454, %480 ]
  %5 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %0, %2 ], [ %30, %480 ]
  %6 = ptrtoint %"struct.blink::NGColspanCellTabulator::Cell"* %4 to i64
  %7 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %4, i64 -1
  %8 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %7, i64 0, i32 0
  %9 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %7 to i8*
  %10 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %4, i64 -1, i32 1
  %11 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %4, i64 -1, i32 2
  %12 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %7 to i8*
  %13 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %4, i64 -1, i32 1
  %14 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %4, i64 -1, i32 2
  %15 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %7 to i8*
  %16 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %4, i64 -1, i32 1
  %17 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %4, i64 -1, i32 2
  %18 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %7, i64 0, i32 0
  %19 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %7 to i8*
  %20 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %4, i64 -1, i32 1
  %21 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %4, i64 -1, i32 2
  %22 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %7, i64 0, i32 0
  %23 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %7 to i8*
  %24 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %4, i64 -1, i32 1
  %25 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %4, i64 -1, i32 2
  %26 = ptrtoint %"struct.blink::NGColspanCellTabulator::Cell"* %4 to i64
  br label %27

27:                                               ; preds = %491, %3
  %28 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %5, %3 ], [ %492, %491 ]
  br label %29

29:                                               ; preds = %384, %27
  %30 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %28, %27 ], [ %373, %384 ]
  %31 = ptrtoint %"struct.blink::NGColspanCellTabulator::Cell"* %30 to i64
  %32 = sub i64 %6, %31
  %33 = sdiv exact i64 %32, 12
  switch i64 %33, label %155 [
    i64 0, label %495
    i64 1, label %495
    i64 2, label %34
    i64 3, label %50
    i64 4, label %100
    i64 5, label %105
  ]

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %4, i64 -1
  %36 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp ult i32 %37, %39
  br i1 %40, label %41, label %495

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %30 to i8*
  %47 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %46, i8* align 4 %47, i64 12, i1 false) #16
  store i32 %39, i32* %36, align 4
  %48 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %4, i64 -1, i32 1
  store i32 %43, i32* %48, align 4
  %49 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %4, i64 -1, i32 2
  store i32 %45, i32* %49, align 4
  br label %495

50:                                               ; preds = %29
  %51 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 1
  %52 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %4, i64 -1
  %53 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %51, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp ult i32 %54, %56
  %58 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %52, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp ult i32 %59, %54
  br i1 %57, label %80, label %61

61:                                               ; preds = %50
  br i1 %60, label %62, label %495

62:                                               ; preds = %61
  %63 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 1, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 1, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %51 to i8*
  %68 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %67, i8* align 4 %68, i64 12, i1 false) #16
  store i32 %54, i32* %58, align 4
  %69 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %4, i64 -1, i32 1
  store i32 %64, i32* %69, align 4
  %70 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %4, i64 -1, i32 2
  store i32 %66, i32* %70, align 4
  %71 = load i32, i32* %53, align 4
  %72 = load i32, i32* %55, align 4
  %73 = icmp ult i32 %71, %72
  br i1 %73, label %74, label %495

74:                                               ; preds = %62
  %75 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 0, i32 2
  %78 = load i32, i32* %77, align 4
  %79 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %79, i8* align 4 %67, i64 12, i1 false) #16
  store i32 %72, i32* %53, align 4
  store i32 %76, i32* %63, align 4
  store i32 %78, i32* %65, align 4
  br label %495

80:                                               ; preds = %50
  %81 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 0, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %30 to i8*
  br i1 %60, label %86, label %90

86:                                               ; preds = %80
  %87 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %85, i8* align 4 %87, i64 12, i1 false) #16
  store i32 %56, i32* %58, align 4
  %88 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %4, i64 -1, i32 1
  store i32 %82, i32* %88, align 4
  %89 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %4, i64 -1, i32 2
  store i32 %84, i32* %89, align 4
  br label %495

90:                                               ; preds = %80
  %91 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %85, i8* align 4 %91, i64 12, i1 false) #16
  store i32 %56, i32* %53, align 4
  %92 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 1, i32 1
  store i32 %82, i32* %92, align 4
  %93 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 1, i32 2
  store i32 %84, i32* %93, align 4
  %94 = load i32, i32* %58, align 4
  %95 = icmp ult i32 %94, %56
  br i1 %95, label %96, label %495

96:                                               ; preds = %90
  %97 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %91, i8* align 4 %97, i64 12, i1 false) #16
  store i32 %56, i32* %58, align 4
  %98 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %4, i64 -1, i32 1
  store i32 %82, i32* %98, align 4
  %99 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %4, i64 -1, i32 2
  store i32 %84, i32* %99, align 4
  br label %495

100:                                              ; preds = %29
  %101 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 1
  %102 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 2
  %103 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %4, i64 -1
  %104 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5blink22NGColspanCellTabulator6EndRowEvE3$_0PNS2_4CellEEEjT0_S7_S7_S7_T_"(%"struct.blink::NGColspanCellTabulator::Cell"* %30, %"struct.blink::NGColspanCellTabulator::Cell"* %101, %"struct.blink::NGColspanCellTabulator::Cell"* %102, %"struct.blink::NGColspanCellTabulator::Cell"* %103)
  br label %495

105:                                              ; preds = %29
  %106 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 1
  %107 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 2
  %108 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 3
  %109 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %4, i64 -1
  %110 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5blink22NGColspanCellTabulator6EndRowEvE3$_0PNS2_4CellEEEjT0_S7_S7_S7_T_"(%"struct.blink::NGColspanCellTabulator::Cell"* %30, %"struct.blink::NGColspanCellTabulator::Cell"* %106, %"struct.blink::NGColspanCellTabulator::Cell"* %107, %"struct.blink::NGColspanCellTabulator::Cell"* %108) #16
  %111 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %109, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %108, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = icmp ult i32 %112, %114
  br i1 %115, label %116, label %495

116:                                              ; preds = %105
  %117 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 3, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 3, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %108 to i8*
  %122 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %109 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %121, i8* align 4 %122, i64 12, i1 false) #16
  store i32 %114, i32* %111, align 4
  %123 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %4, i64 -1, i32 1
  store i32 %118, i32* %123, align 4
  %124 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %4, i64 -1, i32 2
  store i32 %120, i32* %124, align 4
  %125 = load i32, i32* %113, align 4
  %126 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %107, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = icmp ult i32 %125, %127
  br i1 %128, label %129, label %495

129:                                              ; preds = %116
  %130 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 2, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 2, i32 2
  %133 = load i32, i32* %132, align 4
  %134 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %107 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %134, i8* align 4 %121, i64 12, i1 false) #16
  store i32 %127, i32* %113, align 4
  store i32 %131, i32* %117, align 4
  store i32 %133, i32* %119, align 4
  %135 = load i32, i32* %126, align 4
  %136 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %106, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = icmp ult i32 %135, %137
  br i1 %138, label %139, label %495

139:                                              ; preds = %129
  %140 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 1, i32 1
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 1, i32 2
  %143 = load i32, i32* %142, align 4
  %144 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %106 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %144, i8* align 4 %134, i64 12, i1 false) #16
  store i32 %137, i32* %126, align 4
  store i32 %141, i32* %130, align 4
  store i32 %143, i32* %132, align 4
  %145 = load i32, i32* %136, align 4
  %146 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  %148 = icmp ult i32 %145, %147
  br i1 %148, label %149, label %495

149:                                              ; preds = %139
  %150 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 0, i32 1
  %151 = load i32, i32* %150, align 4
  %152 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 0, i32 2
  %153 = load i32, i32* %152, align 4
  %154 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %154, i8* align 4 %144, i64 12, i1 false) #16
  store i32 %147, i32* %136, align 4
  store i32 %151, i32* %140, align 4
  store i32 %153, i32* %142, align 4
  br label %495

155:                                              ; preds = %29
  %156 = icmp slt i64 %32, 372
  br i1 %156, label %157, label %242

157:                                              ; preds = %155
  %158 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 2
  %159 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 1
  %160 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %159, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  %162 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  %164 = icmp ult i32 %161, %163
  %165 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %158, i64 0, i32 0
  %166 = load i32, i32* %165, align 4
  %167 = icmp ult i32 %166, %161
  br i1 %164, label %186, label %168

168:                                              ; preds = %157
  br i1 %167, label %169, label %205

169:                                              ; preds = %168
  %170 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 1, i32 1
  %171 = load i32, i32* %170, align 4
  %172 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 1, i32 2
  %173 = load i32, i32* %172, align 4
  %174 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %159 to i8*
  %175 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %158 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %174, i8* align 4 %175, i64 12, i1 false) #16
  store i32 %161, i32* %165, align 4
  %176 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 2, i32 1
  store i32 %171, i32* %176, align 4
  %177 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 2, i32 2
  store i32 %173, i32* %177, align 4
  %178 = load i32, i32* %160, align 4
  %179 = icmp ult i32 %178, %163
  br i1 %179, label %180, label %205

180:                                              ; preds = %169
  %181 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 0, i32 1
  %182 = load i32, i32* %181, align 4
  %183 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 0, i32 2
  %184 = load i32, i32* %183, align 4
  %185 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %185, i8* align 4 %174, i64 12, i1 false) #16
  store i32 %163, i32* %160, align 4
  store i32 %182, i32* %170, align 4
  store i32 %184, i32* %172, align 4
  br label %205

186:                                              ; preds = %157
  %187 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 0, i32 1
  %188 = load i32, i32* %187, align 4
  %189 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 0, i32 2
  %190 = load i32, i32* %189, align 4
  %191 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %30 to i8*
  br i1 %167, label %192, label %196

192:                                              ; preds = %186
  %193 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %158 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %191, i8* align 4 %193, i64 12, i1 false) #16
  store i32 %163, i32* %165, align 4
  %194 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 2, i32 1
  store i32 %188, i32* %194, align 4
  %195 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 2, i32 2
  store i32 %190, i32* %195, align 4
  br label %205

196:                                              ; preds = %186
  %197 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %159 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %191, i8* align 4 %197, i64 12, i1 false) #16
  store i32 %163, i32* %160, align 4
  %198 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 1, i32 1
  store i32 %188, i32* %198, align 4
  %199 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 1, i32 2
  store i32 %190, i32* %199, align 4
  %200 = icmp ult i32 %166, %163
  br i1 %200, label %201, label %205

201:                                              ; preds = %196
  %202 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %158 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %197, i8* align 4 %202, i64 12, i1 false) #16
  store i32 %163, i32* %165, align 4
  %203 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 2, i32 1
  store i32 %188, i32* %203, align 4
  %204 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 2, i32 2
  store i32 %190, i32* %204, align 4
  br label %205

205:                                              ; preds = %201, %196, %192, %180, %169, %168
  %206 = phi i32 [ %166, %168 ], [ %161, %169 ], [ %161, %180 ], [ %163, %192 ], [ %166, %196 ], [ %163, %201 ]
  %207 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 3
  %208 = icmp eq %"struct.blink::NGColspanCellTabulator::Cell"* %207, %4
  br i1 %208, label %495, label %209

209:                                              ; preds = %205, %240
  %210 = phi i32 [ %241, %240 ], [ %206, %205 ]
  %211 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %238, %240 ], [ %207, %205 ]
  %212 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %211, %240 ], [ %158, %205 ]
  %213 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %211, i64 0, i32 0
  %214 = load i32, i32* %213, align 4
  %215 = icmp ult i32 %214, %210
  br i1 %215, label %216, label %237

216:                                              ; preds = %209
  %217 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %211, i64 0, i32 1
  %218 = load i32, i32* %217, align 4
  %219 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %211, i64 0, i32 2
  %220 = load i32, i32* %219, align 4
  br label %221

221:                                              ; preds = %227, %216
  %222 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %211, %216 ], [ %223, %227 ]
  %223 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %212, %216 ], [ %228, %227 ]
  %224 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %222 to i8*
  %225 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %223 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %224, i8* align 4 %225, i64 12, i1 false) #16
  %226 = icmp eq %"struct.blink::NGColspanCellTabulator::Cell"* %223, %30
  br i1 %226, label %232, label %227

227:                                              ; preds = %221
  %228 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %223, i64 -1
  %229 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %228, i64 0, i32 0
  %230 = load i32, i32* %229, align 4
  %231 = icmp ult i32 %214, %230
  br i1 %231, label %221, label %232

232:                                              ; preds = %227, %221
  %233 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %30, %221 ], [ %223, %227 ]
  %234 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %233, i64 0, i32 0
  store i32 %214, i32* %234, align 4
  %235 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %233, i64 0, i32 1
  store i32 %218, i32* %235, align 4
  %236 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %233, i64 0, i32 2
  store i32 %220, i32* %236, align 4
  br label %237

237:                                              ; preds = %232, %209
  %238 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %211, i64 1
  %239 = icmp eq %"struct.blink::NGColspanCellTabulator::Cell"* %238, %4
  br i1 %239, label %495, label %240

240:                                              ; preds = %237
  %241 = load i32, i32* %213, align 4
  br label %209

242:                                              ; preds = %155
  %243 = icmp sgt i64 %32, 11988
  %244 = udiv i64 %32, 24
  %245 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 %244
  br i1 %243, label %246, label %295

246:                                              ; preds = %242
  %247 = udiv i64 %32, 48
  %248 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 %247
  %249 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %245, i64 %247
  %250 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5blink22NGColspanCellTabulator6EndRowEvE3$_0PNS2_4CellEEEjT0_S7_S7_S7_T_"(%"struct.blink::NGColspanCellTabulator::Cell"* %30, %"struct.blink::NGColspanCellTabulator::Cell"* %248, %"struct.blink::NGColspanCellTabulator::Cell"* %245, %"struct.blink::NGColspanCellTabulator::Cell"* %249) #16
  %251 = load i32, i32* %18, align 4
  %252 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %249, i64 0, i32 0
  %253 = load i32, i32* %252, align 4
  %254 = icmp ult i32 %251, %253
  br i1 %254, label %255, label %333

255:                                              ; preds = %246
  %256 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %249, i64 0, i32 1
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %249, i64 0, i32 2
  %259 = load i32, i32* %258, align 4
  %260 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %249 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %260, i8* align 4 %19, i64 12, i1 false) #16
  store i32 %253, i32* %18, align 4
  store i32 %257, i32* %20, align 4
  store i32 %259, i32* %21, align 4
  %261 = add i32 %250, 1
  %262 = load i32, i32* %252, align 4
  %263 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %245, i64 0, i32 0
  %264 = load i32, i32* %263, align 4
  %265 = icmp ult i32 %262, %264
  br i1 %265, label %266, label %333

266:                                              ; preds = %255
  %267 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 %244, i32 1
  %268 = load i32, i32* %267, align 4
  %269 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 %244, i32 2
  %270 = load i32, i32* %269, align 4
  %271 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %245 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %271, i8* align 4 %260, i64 12, i1 false) #16
  store i32 %264, i32* %252, align 4
  store i32 %268, i32* %256, align 4
  store i32 %270, i32* %258, align 4
  %272 = add i32 %250, 2
  %273 = load i32, i32* %263, align 4
  %274 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %248, i64 0, i32 0
  %275 = load i32, i32* %274, align 4
  %276 = icmp ult i32 %273, %275
  br i1 %276, label %277, label %333

277:                                              ; preds = %266
  %278 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 %247, i32 1
  %279 = load i32, i32* %278, align 4
  %280 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 %247, i32 2
  %281 = load i32, i32* %280, align 4
  %282 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %248 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %282, i8* align 4 %271, i64 12, i1 false) #16
  store i32 %275, i32* %263, align 4
  store i32 %279, i32* %267, align 4
  store i32 %281, i32* %269, align 4
  %283 = add i32 %250, 3
  %284 = load i32, i32* %274, align 4
  %285 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 0, i32 0
  %286 = load i32, i32* %285, align 4
  %287 = icmp ult i32 %284, %286
  br i1 %287, label %288, label %333

288:                                              ; preds = %277
  %289 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 0, i32 1
  %290 = load i32, i32* %289, align 4
  %291 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 0, i32 2
  %292 = load i32, i32* %291, align 4
  %293 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %293, i8* align 4 %282, i64 12, i1 false) #16
  store i32 %286, i32* %274, align 4
  store i32 %290, i32* %278, align 4
  store i32 %292, i32* %280, align 4
  %294 = add i32 %250, 4
  br label %333

295:                                              ; preds = %242
  %296 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %245, i64 0, i32 0
  %297 = load i32, i32* %296, align 4
  %298 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 0, i32 0
  %299 = load i32, i32* %298, align 4
  %300 = icmp ult i32 %297, %299
  %301 = load i32, i32* %8, align 4
  %302 = icmp ult i32 %301, %297
  br i1 %300, label %319, label %303

303:                                              ; preds = %295
  br i1 %302, label %304, label %333

304:                                              ; preds = %303
  %305 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 %244, i32 1
  %306 = load i32, i32* %305, align 4
  %307 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 %244, i32 2
  %308 = load i32, i32* %307, align 4
  %309 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %245 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %309, i8* align 4 %9, i64 12, i1 false) #16
  store i32 %297, i32* %8, align 4
  store i32 %306, i32* %10, align 4
  store i32 %308, i32* %11, align 4
  %310 = load i32, i32* %296, align 4
  %311 = load i32, i32* %298, align 4
  %312 = icmp ult i32 %310, %311
  br i1 %312, label %313, label %333

313:                                              ; preds = %304
  %314 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 0, i32 1
  %315 = load i32, i32* %314, align 4
  %316 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 0, i32 2
  %317 = load i32, i32* %316, align 4
  %318 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %318, i8* align 4 %309, i64 12, i1 false) #16
  store i32 %311, i32* %296, align 4
  store i32 %315, i32* %305, align 4
  store i32 %317, i32* %307, align 4
  br label %333

319:                                              ; preds = %295
  %320 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 0, i32 1
  %321 = load i32, i32* %320, align 4
  %322 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 0, i32 2
  %323 = load i32, i32* %322, align 4
  %324 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %30 to i8*
  br i1 %302, label %325, label %326

325:                                              ; preds = %319
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %324, i8* align 4 %15, i64 12, i1 false) #16
  store i32 %299, i32* %8, align 4
  store i32 %321, i32* %16, align 4
  store i32 %323, i32* %17, align 4
  br label %333

326:                                              ; preds = %319
  %327 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %245 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %324, i8* align 4 %327, i64 12, i1 false) #16
  store i32 %299, i32* %296, align 4
  %328 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 %244, i32 1
  store i32 %321, i32* %328, align 4
  %329 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 %244, i32 2
  store i32 %323, i32* %329, align 4
  %330 = load i32, i32* %8, align 4
  %331 = icmp ult i32 %330, %299
  br i1 %331, label %332, label %333

332:                                              ; preds = %326
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %327, i8* align 4 %12, i64 12, i1 false) #16
  store i32 %299, i32* %8, align 4
  store i32 %321, i32* %13, align 4
  store i32 %323, i32* %14, align 4
  br label %333

333:                                              ; preds = %332, %326, %325, %313, %304, %303, %288, %277, %266, %255, %246
  %334 = phi i32 [ %294, %288 ], [ %283, %277 ], [ %272, %266 ], [ %261, %255 ], [ %250, %246 ], [ 1, %325 ], [ 0, %303 ], [ 2, %313 ], [ 1, %304 ], [ 2, %332 ], [ 1, %326 ]
  %335 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 0, i32 0
  %336 = load i32, i32* %335, align 4
  %337 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %245, i64 0, i32 0
  %338 = load i32, i32* %337, align 4
  %339 = icmp ult i32 %336, %338
  br i1 %339, label %411, label %340

340:                                              ; preds = %333, %396
  %341 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %342, %396 ], [ %7, %333 ]
  %342 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %341, i64 -1
  %343 = icmp eq %"struct.blink::NGColspanCellTabulator::Cell"* %30, %342
  br i1 %343, label %344, label %396

344:                                              ; preds = %340
  %345 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 1
  %346 = load i32, i32* %22, align 4
  %347 = icmp ult i32 %336, %346
  br i1 %347, label %365, label %348

348:                                              ; preds = %344
  %349 = icmp eq %"struct.blink::NGColspanCellTabulator::Cell"* %345, %7
  br i1 %349, label %495, label %350

350:                                              ; preds = %348, %362
  %351 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %363, %362 ], [ %345, %348 ]
  %352 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %351, i64 0, i32 0
  %353 = load i32, i32* %352, align 4
  %354 = icmp ult i32 %336, %353
  br i1 %354, label %355, label %362

355:                                              ; preds = %350
  %356 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %351, i64 0, i32 1
  %357 = load i32, i32* %356, align 4
  %358 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %351, i64 0, i32 2
  %359 = load i32, i32* %358, align 4
  %360 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %351 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %360, i8* align 4 %23, i64 12, i1 false) #16
  store i32 %353, i32* %22, align 4
  store i32 %357, i32* %24, align 4
  store i32 %359, i32* %25, align 4
  %361 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %351, i64 1
  br label %365

362:                                              ; preds = %350
  %363 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %351, i64 1
  %364 = icmp eq %"struct.blink::NGColspanCellTabulator::Cell"* %363, %7
  br i1 %364, label %495, label %350

365:                                              ; preds = %355, %344
  %366 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %345, %344 ], [ %361, %355 ]
  %367 = icmp eq %"struct.blink::NGColspanCellTabulator::Cell"* %366, %7
  br i1 %367, label %495, label %368

368:                                              ; preds = %365, %386
  %369 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %377, %386 ], [ %366, %365 ]
  %370 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %380, %386 ], [ %7, %365 ]
  %371 = load i32, i32* %335, align 4
  br label %372

372:                                              ; preds = %372, %368
  %373 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %369, %368 ], [ %377, %372 ]
  %374 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %373, i64 0, i32 0
  %375 = load i32, i32* %374, align 4
  %376 = icmp ult i32 %371, %375
  %377 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %373, i64 1
  br i1 %376, label %378, label %372

378:                                              ; preds = %372, %378
  %379 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %380, %378 ], [ %370, %372 ]
  %380 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %379, i64 -1
  %381 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %380, i64 0, i32 0
  %382 = load i32, i32* %381, align 4
  %383 = icmp ult i32 %371, %382
  br i1 %383, label %378, label %384

384:                                              ; preds = %378
  %385 = icmp ult %"struct.blink::NGColspanCellTabulator::Cell"* %373, %380
  br i1 %385, label %386, label %29

386:                                              ; preds = %384
  %387 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %380, i64 0, i32 0
  %388 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %373, i64 0, i32 1
  %389 = load i32, i32* %388, align 4
  %390 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %373, i64 0, i32 2
  %391 = load i32, i32* %390, align 4
  %392 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %373 to i8*
  %393 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %380 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %392, i8* align 4 %393, i64 12, i1 false) #16
  store i32 %375, i32* %387, align 4
  %394 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %379, i64 -1, i32 1
  store i32 %389, i32* %394, align 4
  %395 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %379, i64 -1, i32 2
  store i32 %391, i32* %395, align 4
  br label %368

396:                                              ; preds = %340
  %397 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %342, i64 0, i32 0
  %398 = load i32, i32* %397, align 4
  %399 = icmp ult i32 %398, %338
  br i1 %399, label %400, label %340

400:                                              ; preds = %396
  %401 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %342, i64 0, i32 0
  %402 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 0, i32 1
  %403 = load i32, i32* %402, align 4
  %404 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 0, i32 2
  %405 = load i32, i32* %404, align 4
  %406 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %30 to i8*
  %407 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %342 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %406, i8* align 4 %407, i64 12, i1 false) #16
  store i32 %336, i32* %401, align 4
  %408 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %341, i64 -1, i32 1
  store i32 %403, i32* %408, align 4
  %409 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %341, i64 -1, i32 2
  store i32 %405, i32* %409, align 4
  %410 = add i32 %334, 1
  br label %411

411:                                              ; preds = %333, %400
  %412 = phi i32 [ %410, %400 ], [ %334, %333 ]
  %413 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %342, %400 ], [ %7, %333 ]
  %414 = ptrtoint %"struct.blink::NGColspanCellTabulator::Cell"* %30 to i64
  %415 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %30, i64 1
  %416 = icmp ult %"struct.blink::NGColspanCellTabulator::Cell"* %415, %413
  br i1 %416, label %417, label %451

417:                                              ; preds = %411, %438
  %418 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %450, %438 ], [ %245, %411 ]
  %419 = phi i32 [ %448, %438 ], [ %412, %411 ]
  %420 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %429, %438 ], [ %415, %411 ]
  %421 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %432, %438 ], [ %413, %411 ]
  %422 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %418, i64 0, i32 0
  %423 = load i32, i32* %422, align 4
  br label %424

424:                                              ; preds = %424, %417
  %425 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %420, %417 ], [ %429, %424 ]
  %426 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %425, i64 0, i32 0
  %427 = load i32, i32* %426, align 4
  %428 = icmp ult i32 %427, %423
  %429 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %425, i64 1
  br i1 %428, label %424, label %430

430:                                              ; preds = %424, %430
  %431 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %432, %430 ], [ %421, %424 ]
  %432 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %431, i64 -1
  %433 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %432, i64 0, i32 0
  %434 = load i32, i32* %433, align 4
  %435 = icmp ult i32 %434, %423
  br i1 %435, label %436, label %430

436:                                              ; preds = %430
  %437 = icmp ugt %"struct.blink::NGColspanCellTabulator::Cell"* %425, %432
  br i1 %437, label %451, label %438

438:                                              ; preds = %436
  %439 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %432, i64 0, i32 0
  %440 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %425, i64 0, i32 1
  %441 = load i32, i32* %440, align 4
  %442 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %425, i64 0, i32 2
  %443 = load i32, i32* %442, align 4
  %444 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %425 to i8*
  %445 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %432 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %444, i8* align 4 %445, i64 12, i1 false) #16
  store i32 %427, i32* %439, align 4
  %446 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %431, i64 -1, i32 1
  store i32 %441, i32* %446, align 4
  %447 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %431, i64 -1, i32 2
  store i32 %443, i32* %447, align 4
  %448 = add i32 %419, 1
  %449 = icmp eq %"struct.blink::NGColspanCellTabulator::Cell"* %418, %425
  %450 = select i1 %449, %"struct.blink::NGColspanCellTabulator::Cell"* %432, %"struct.blink::NGColspanCellTabulator::Cell"* %418
  br label %417

451:                                              ; preds = %436, %411
  %452 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %245, %411 ], [ %418, %436 ]
  %453 = phi i32 [ %412, %411 ], [ %419, %436 ]
  %454 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %415, %411 ], [ %425, %436 ]
  %455 = icmp eq %"struct.blink::NGColspanCellTabulator::Cell"* %454, %452
  br i1 %455, label %472, label %456

456:                                              ; preds = %451
  %457 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %452, i64 0, i32 0
  %458 = load i32, i32* %457, align 4
  %459 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %454, i64 0, i32 0
  %460 = load i32, i32* %459, align 4
  %461 = icmp ult i32 %458, %460
  br i1 %461, label %462, label %472

462:                                              ; preds = %456
  %463 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %454, i64 0, i32 1
  %464 = load i32, i32* %463, align 4
  %465 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %454, i64 0, i32 2
  %466 = load i32, i32* %465, align 4
  %467 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %454 to i8*
  %468 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %452 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %467, i8* align 4 %468, i64 12, i1 false) #16
  store i32 %460, i32* %457, align 4
  %469 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %452, i64 0, i32 1
  store i32 %464, i32* %469, align 4
  %470 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %452, i64 0, i32 2
  store i32 %466, i32* %470, align 4
  %471 = add i32 %453, 1
  br label %472

472:                                              ; preds = %451, %462, %456
  %473 = phi i32 [ %471, %462 ], [ %453, %456 ], [ %453, %451 ]
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %475, label %482

475:                                              ; preds = %472
  %476 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink22NGColspanCellTabulator6EndRowEvE3$_0PNS2_4CellEEEbT0_S7_T_"(%"struct.blink::NGColspanCellTabulator::Cell"* %30, %"struct.blink::NGColspanCellTabulator::Cell"* %454)
  %477 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %454, i64 1
  %478 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink22NGColspanCellTabulator6EndRowEvE3$_0PNS2_4CellEEEbT0_S7_T_"(%"struct.blink::NGColspanCellTabulator::Cell"* %477, %"struct.blink::NGColspanCellTabulator::Cell"* %4)
  br i1 %478, label %479, label %481

479:                                              ; preds = %475
  br i1 %476, label %495, label %480

480:                                              ; preds = %479, %493
  br label %3

481:                                              ; preds = %475
  br i1 %476, label %491, label %482

482:                                              ; preds = %481, %472
  %483 = ptrtoint %"struct.blink::NGColspanCellTabulator::Cell"* %454 to i64
  %484 = sub i64 %483, %414
  %485 = sdiv exact i64 %484, 12
  %486 = sub i64 %26, %483
  %487 = sdiv exact i64 %486, 12
  %488 = icmp slt i64 %485, %487
  br i1 %488, label %489, label %493

489:                                              ; preds = %482
  tail call fastcc void @"_ZNSt3__16__sortIRZN5blink22NGColspanCellTabulator6EndRowEvE3$_0PNS2_4CellEEEvT0_S7_T_"(%"struct.blink::NGColspanCellTabulator::Cell"* %30, %"struct.blink::NGColspanCellTabulator::Cell"* %454)
  %490 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %454, i64 1
  br label %491

491:                                              ; preds = %489, %481
  %492 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %477, %481 ], [ %490, %489 ]
  br label %27

493:                                              ; preds = %482
  %494 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %454, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN5blink22NGColspanCellTabulator6EndRowEvE3$_0PNS2_4CellEEEvT0_S7_T_"(%"struct.blink::NGColspanCellTabulator::Cell"* %494, %"struct.blink::NGColspanCellTabulator::Cell"* %4)
  br label %480

495:                                              ; preds = %479, %365, %29, %29, %348, %362, %237, %205, %149, %139, %129, %116, %105, %96, %90, %86, %74, %62, %61, %34, %41, %100
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN5blink22NGColspanCellTabulator6EndRowEvE3$_0PNS2_4CellEEEjT0_S7_S7_S7_T_"(%"struct.blink::NGColspanCellTabulator::Cell"* nocapture, %"struct.blink::NGColspanCellTabulator::Cell"* nocapture, %"struct.blink::NGColspanCellTabulator::Cell"* nocapture, %"struct.blink::NGColspanCellTabulator::Cell"* nocapture) unnamed_addr #0 {
  %5 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp ult i32 %6, %8
  %10 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %2, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp ult i32 %11, %6
  br i1 %9, label %33, label %13

13:                                               ; preds = %4
  br i1 %12, label %14, label %53

14:                                               ; preds = %13
  %15 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %1 to i8*
  %20 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %20, i64 12, i1 false) #16
  store i32 %6, i32* %10, align 4
  %21 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %2, i64 0, i32 1
  store i32 %16, i32* %21, align 4
  %22 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %2, i64 0, i32 2
  store i32 %18, i32* %22, align 4
  %23 = load i32, i32* %5, align 4
  %24 = load i32, i32* %7, align 4
  %25 = icmp ult i32 %23, %24
  br i1 %25, label %26, label %53

26:                                               ; preds = %14
  %27 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %19, i64 12, i1 false) #16
  store i32 %24, i32* %5, align 4
  store i32 %28, i32* %15, align 4
  store i32 %30, i32* %17, align 4
  %32 = load i32, i32* %10, align 4
  br label %53

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %0 to i8*
  br i1 %12, label %39, label %43

39:                                               ; preds = %33
  %40 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* align 4 %40, i64 12, i1 false) #16
  store i32 %8, i32* %10, align 4
  %41 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %2, i64 0, i32 1
  store i32 %35, i32* %41, align 4
  %42 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %2, i64 0, i32 2
  store i32 %37, i32* %42, align 4
  br label %53

43:                                               ; preds = %33
  %44 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* align 4 %44, i64 12, i1 false) #16
  store i32 %8, i32* %5, align 4
  %45 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %1, i64 0, i32 1
  store i32 %35, i32* %45, align 4
  %46 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %1, i64 0, i32 2
  store i32 %37, i32* %46, align 4
  %47 = load i32, i32* %10, align 4
  %48 = icmp ult i32 %47, %8
  br i1 %48, label %49, label %53

49:                                               ; preds = %43
  %50 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %44, i8* align 4 %50, i64 12, i1 false) #16
  store i32 %8, i32* %10, align 4
  %51 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %2, i64 0, i32 1
  store i32 %35, i32* %51, align 4
  %52 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %2, i64 0, i32 2
  store i32 %37, i32* %52, align 4
  br label %53

53:                                               ; preds = %13, %14, %26, %39, %43, %49
  %54 = phi i32 [ %8, %39 ], [ %11, %13 ], [ %32, %26 ], [ %6, %14 ], [ %8, %49 ], [ %47, %43 ]
  %55 = phi i32 [ 1, %39 ], [ 0, %13 ], [ 2, %26 ], [ 1, %14 ], [ 2, %49 ], [ 1, %43 ]
  %56 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %3, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp ult i32 %57, %54
  br i1 %58, label %59, label %89

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %2, i64 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %2, i64 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %2 to i8*
  %65 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %64, i8* align 4 %65, i64 12, i1 false) #16
  store i32 %54, i32* %56, align 4
  %66 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %3, i64 0, i32 1
  store i32 %61, i32* %66, align 4
  %67 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %3, i64 0, i32 2
  store i32 %63, i32* %67, align 4
  %68 = add nuw nsw i32 %55, 1
  %69 = load i32, i32* %10, align 4
  %70 = load i32, i32* %5, align 4
  %71 = icmp ult i32 %69, %70
  br i1 %71, label %72, label %89

72:                                               ; preds = %59
  %73 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %1, i64 0, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %1, i64 0, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %77, i8* align 4 %64, i64 12, i1 false) #16
  store i32 %70, i32* %10, align 4
  store i32 %74, i32* %60, align 4
  store i32 %76, i32* %62, align 4
  %78 = add nuw nsw i32 %55, 2
  %79 = load i32, i32* %5, align 4
  %80 = load i32, i32* %7, align 4
  %81 = icmp ult i32 %79, %80
  br i1 %81, label %82, label %89

82:                                               ; preds = %72
  %83 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %87, i8* align 4 %77, i64 12, i1 false) #16
  store i32 %80, i32* %5, align 4
  store i32 %84, i32* %73, align 4
  store i32 %86, i32* %75, align 4
  %88 = add nuw nsw i32 %55, 3
  br label %89

89:                                               ; preds = %59, %82, %72, %53
  %90 = phi i32 [ %88, %82 ], [ %78, %72 ], [ %68, %59 ], [ %55, %53 ]
  ret i32 %90
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink22NGColspanCellTabulator6EndRowEvE3$_0PNS2_4CellEEEbT0_S7_T_"(%"struct.blink::NGColspanCellTabulator::Cell"*, %"struct.blink::NGColspanCellTabulator::Cell"*) unnamed_addr #0 {
  %3 = ptrtoint %"struct.blink::NGColspanCellTabulator::Cell"* %1 to i64
  %4 = ptrtoint %"struct.blink::NGColspanCellTabulator::Cell"* %0 to i64
  %5 = sub i64 %3, %4
  %6 = sdiv exact i64 %5, 12
  switch i64 %6, label %128 [
    i64 0, label %221
    i64 1, label %221
    i64 2, label %7
    i64 3, label %23
    i64 4, label %73
    i64 5, label %78
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %1, i64 -1
  %9 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp ult i32 %10, %12
  br i1 %13, label %14, label %221

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %0 to i8*
  %20 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %20, i64 12, i1 false) #16
  store i32 %12, i32* %9, align 4
  %21 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %1, i64 -1, i32 1
  store i32 %16, i32* %21, align 4
  %22 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %1, i64 -1, i32 2
  store i32 %18, i32* %22, align 4
  br label %221

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 1
  %25 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %1, i64 -1
  %26 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %24, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp ult i32 %27, %29
  %31 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %25, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp ult i32 %32, %27
  br i1 %30, label %53, label %34

34:                                               ; preds = %23
  br i1 %33, label %35, label %221

35:                                               ; preds = %34
  %36 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 1, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 1, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %24 to i8*
  %41 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 12, i1 false) #16
  store i32 %27, i32* %31, align 4
  %42 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %1, i64 -1, i32 1
  store i32 %37, i32* %42, align 4
  %43 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %1, i64 -1, i32 2
  store i32 %39, i32* %43, align 4
  %44 = load i32, i32* %26, align 4
  %45 = load i32, i32* %28, align 4
  %46 = icmp ult i32 %44, %45
  br i1 %46, label %47, label %221

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* align 4 %40, i64 12, i1 false) #16
  store i32 %45, i32* %26, align 4
  store i32 %49, i32* %36, align 4
  store i32 %51, i32* %38, align 4
  br label %221

53:                                               ; preds = %23
  %54 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %0 to i8*
  br i1 %33, label %59, label %63

59:                                               ; preds = %53
  %60 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %58, i8* align 4 %60, i64 12, i1 false) #16
  store i32 %29, i32* %31, align 4
  %61 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %1, i64 -1, i32 1
  store i32 %55, i32* %61, align 4
  %62 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %1, i64 -1, i32 2
  store i32 %57, i32* %62, align 4
  br label %221

63:                                               ; preds = %53
  %64 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %58, i8* align 4 %64, i64 12, i1 false) #16
  store i32 %29, i32* %26, align 4
  %65 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 1, i32 1
  store i32 %55, i32* %65, align 4
  %66 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 1, i32 2
  store i32 %57, i32* %66, align 4
  %67 = load i32, i32* %31, align 4
  %68 = icmp ult i32 %67, %29
  br i1 %68, label %69, label %221

69:                                               ; preds = %63
  %70 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %64, i8* align 4 %70, i64 12, i1 false) #16
  store i32 %29, i32* %31, align 4
  %71 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %1, i64 -1, i32 1
  store i32 %55, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %1, i64 -1, i32 2
  store i32 %57, i32* %72, align 4
  br label %221

73:                                               ; preds = %2
  %74 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 1
  %75 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 2
  %76 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %1, i64 -1
  %77 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5blink22NGColspanCellTabulator6EndRowEvE3$_0PNS2_4CellEEEjT0_S7_S7_S7_T_"(%"struct.blink::NGColspanCellTabulator::Cell"* %0, %"struct.blink::NGColspanCellTabulator::Cell"* %74, %"struct.blink::NGColspanCellTabulator::Cell"* %75, %"struct.blink::NGColspanCellTabulator::Cell"* %76)
  br label %221

78:                                               ; preds = %2
  %79 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 1
  %80 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 2
  %81 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 3
  %82 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %1, i64 -1
  %83 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5blink22NGColspanCellTabulator6EndRowEvE3$_0PNS2_4CellEEEjT0_S7_S7_S7_T_"(%"struct.blink::NGColspanCellTabulator::Cell"* %0, %"struct.blink::NGColspanCellTabulator::Cell"* %79, %"struct.blink::NGColspanCellTabulator::Cell"* %80, %"struct.blink::NGColspanCellTabulator::Cell"* %81) #16
  %84 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %82, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %81, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp ult i32 %85, %87
  br i1 %88, label %89, label %221

89:                                               ; preds = %78
  %90 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 3, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 3, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %81 to i8*
  %95 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %94, i8* align 4 %95, i64 12, i1 false) #16
  store i32 %87, i32* %84, align 4
  %96 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %1, i64 -1, i32 1
  store i32 %91, i32* %96, align 4
  %97 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %1, i64 -1, i32 2
  store i32 %93, i32* %97, align 4
  %98 = load i32, i32* %86, align 4
  %99 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %80, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = icmp ult i32 %98, %100
  br i1 %101, label %102, label %221

102:                                              ; preds = %89
  %103 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 2, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 2, i32 2
  %106 = load i32, i32* %105, align 4
  %107 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %94, i64 12, i1 false) #16
  store i32 %100, i32* %86, align 4
  store i32 %104, i32* %90, align 4
  store i32 %106, i32* %92, align 4
  %108 = load i32, i32* %99, align 4
  %109 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %79, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = icmp ult i32 %108, %110
  br i1 %111, label %112, label %221

112:                                              ; preds = %102
  %113 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 1, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 1, i32 2
  %116 = load i32, i32* %115, align 4
  %117 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %117, i8* align 4 %107, i64 12, i1 false) #16
  store i32 %110, i32* %99, align 4
  store i32 %114, i32* %103, align 4
  store i32 %116, i32* %105, align 4
  %118 = load i32, i32* %109, align 4
  %119 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = icmp ult i32 %118, %120
  br i1 %121, label %122, label %221

122:                                              ; preds = %112
  %123 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %127, i8* align 4 %117, i64 12, i1 false) #16
  store i32 %120, i32* %109, align 4
  store i32 %124, i32* %113, align 4
  store i32 %126, i32* %115, align 4
  br label %221

128:                                              ; preds = %2
  %129 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 2
  %130 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 1
  %131 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %130, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = icmp ult i32 %132, %134
  %136 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %129, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = icmp ult i32 %137, %132
  br i1 %135, label %157, label %139

139:                                              ; preds = %128
  br i1 %138, label %140, label %176

140:                                              ; preds = %139
  %141 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 1, i32 1
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 1, i32 2
  %144 = load i32, i32* %143, align 4
  %145 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %130 to i8*
  %146 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %129 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %145, i8* align 4 %146, i64 12, i1 false) #16
  store i32 %132, i32* %136, align 4
  %147 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 2, i32 1
  store i32 %142, i32* %147, align 4
  %148 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 2, i32 2
  store i32 %144, i32* %148, align 4
  %149 = load i32, i32* %131, align 4
  %150 = icmp ult i32 %149, %134
  br i1 %150, label %151, label %176

151:                                              ; preds = %140
  %152 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 0, i32 1
  %153 = load i32, i32* %152, align 4
  %154 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 0, i32 2
  %155 = load i32, i32* %154, align 4
  %156 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %156, i8* align 4 %145, i64 12, i1 false) #16
  store i32 %134, i32* %131, align 4
  store i32 %153, i32* %141, align 4
  store i32 %155, i32* %143, align 4
  br label %176

157:                                              ; preds = %128
  %158 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 0, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 0, i32 2
  %161 = load i32, i32* %160, align 4
  %162 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %0 to i8*
  br i1 %138, label %163, label %167

163:                                              ; preds = %157
  %164 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %129 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %162, i8* align 4 %164, i64 12, i1 false) #16
  store i32 %134, i32* %136, align 4
  %165 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 2, i32 1
  store i32 %159, i32* %165, align 4
  %166 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 2, i32 2
  store i32 %161, i32* %166, align 4
  br label %176

167:                                              ; preds = %157
  %168 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %130 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %162, i8* align 4 %168, i64 12, i1 false) #16
  store i32 %134, i32* %131, align 4
  %169 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 1, i32 1
  store i32 %159, i32* %169, align 4
  %170 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 1, i32 2
  store i32 %161, i32* %170, align 4
  %171 = icmp ult i32 %137, %134
  br i1 %171, label %172, label %176

172:                                              ; preds = %167
  %173 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %129 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %168, i8* align 4 %173, i64 12, i1 false) #16
  store i32 %134, i32* %136, align 4
  %174 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 2, i32 1
  store i32 %159, i32* %174, align 4
  %175 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 2, i32 2
  store i32 %161, i32* %175, align 4
  br label %176

176:                                              ; preds = %139, %140, %151, %163, %167, %172
  %177 = phi i32 [ %137, %139 ], [ %132, %140 ], [ %132, %151 ], [ %134, %163 ], [ %137, %167 ], [ %134, %172 ]
  %178 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %0, i64 3
  %179 = icmp eq %"struct.blink::NGColspanCellTabulator::Cell"* %178, %1
  br i1 %179, label %221, label %180

180:                                              ; preds = %176, %215
  %181 = phi i32 [ %217, %215 ], [ %177, %176 ]
  %182 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %213, %215 ], [ %178, %176 ]
  %183 = phi i32 [ %212, %215 ], [ 0, %176 ]
  %184 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %182, %215 ], [ %129, %176 ]
  %185 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %182, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  %187 = icmp ult i32 %186, %181
  br i1 %187, label %188, label %211

188:                                              ; preds = %180
  %189 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %182, i64 0, i32 1
  %190 = load i32, i32* %189, align 4
  %191 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %182, i64 0, i32 2
  %192 = load i32, i32* %191, align 4
  br label %193

193:                                              ; preds = %199, %188
  %194 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %182, %188 ], [ %195, %199 ]
  %195 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %184, %188 ], [ %200, %199 ]
  %196 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %194 to i8*
  %197 = bitcast %"struct.blink::NGColspanCellTabulator::Cell"* %195 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %196, i8* align 4 %197, i64 12, i1 false)
  %198 = icmp eq %"struct.blink::NGColspanCellTabulator::Cell"* %195, %0
  br i1 %198, label %204, label %199

199:                                              ; preds = %193
  %200 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %195, i64 -1
  %201 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %200, i64 0, i32 0
  %202 = load i32, i32* %201, align 4
  %203 = icmp ult i32 %186, %202
  br i1 %203, label %193, label %204

204:                                              ; preds = %193, %199
  %205 = phi %"struct.blink::NGColspanCellTabulator::Cell"* [ %0, %193 ], [ %195, %199 ]
  %206 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %205, i64 0, i32 0
  store i32 %186, i32* %206, align 4
  %207 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %205, i64 0, i32 1
  store i32 %190, i32* %207, align 4
  %208 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %205, i64 0, i32 2
  store i32 %192, i32* %208, align 4
  %209 = add i32 %183, 1
  %210 = icmp eq i32 %209, 8
  br i1 %210, label %218, label %211

211:                                              ; preds = %204, %180
  %212 = phi i32 [ %209, %204 ], [ %183, %180 ]
  %213 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %182, i64 1
  %214 = icmp eq %"struct.blink::NGColspanCellTabulator::Cell"* %213, %1
  br i1 %214, label %221, label %215

215:                                              ; preds = %211
  %216 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %182, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  br label %180

218:                                              ; preds = %204
  %219 = getelementptr inbounds %"struct.blink::NGColspanCellTabulator::Cell", %"struct.blink::NGColspanCellTabulator::Cell"* %182, i64 1
  %220 = icmp eq %"struct.blink::NGColspanCellTabulator::Cell"* %219, %1
  br label %221

221:                                              ; preds = %211, %218, %176, %122, %112, %102, %89, %78, %69, %63, %59, %47, %35, %34, %7, %14, %2, %2, %73
  %222 = phi i1 [ true, %73 ], [ true, %2 ], [ true, %2 ], [ true, %14 ], [ true, %7 ], [ true, %34 ], [ true, %35 ], [ true, %47 ], [ true, %59 ], [ true, %63 ], [ true, %69 ], [ true, %78 ], [ true, %89 ], [ true, %102 ], [ true, %112 ], [ true, %122 ], [ true, %176 ], [ %220, %218 ], [ true, %211 ]
  ret i1 %222
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22NGColspanCellTabulator4CellEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 178782208
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 178782208) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = mul i64 %0, 12
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone speculatable }
attributes #14 = { nounwind readnone }
attributes #15 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind }
attributes #17 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink24NGConstraintSpaceBuilder17ToConstraintSpaceEv: argument 0"}
!7 = distinct !{!7, !"_ZN5blink24NGConstraintSpaceBuilder17ToConstraintSpaceEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink12_GLOBAL__N_126ComputeMinimumRowBlockSizeERKNS_11NGBlockNodeENS_10LayoutUnitEbRKN3WTF6VectorINS_12NGTableTypes14ColumnLocationELj0ENS5_18PartitionAllocatorEEERKNS_14NGTableBordersEjjbPNS6_INS7_19CellBlockConstraintELj0ES9_EEPNS6_INS7_11RowspanCellELj0ES9_EEPNS_22NGColspanCellTabulatorE: argument 0"}
!10 = distinct !{!10, !"_ZN5blink12_GLOBAL__N_126ComputeMinimumRowBlockSizeERKNS_11NGBlockNodeENS_10LayoutUnitEbRKN3WTF6VectorINS_12NGTableTypes14ColumnLocationELj0ENS5_18PartitionAllocatorEEERKNS_14NGTableBordersEjjbPNS6_INS7_19CellBlockConstraintELj0ES9_EEPNS6_INS7_11RowspanCellELj0ES9_EEPNS_22NGColspanCellTabulatorE"}
!11 = !{!12, !9}
!12 = distinct !{!12, !13, !"_ZZN5blink12_GLOBAL__N_126ComputeMinimumRowBlockSizeERKNS_11NGBlockNodeENS_10LayoutUnitEbRKN3WTF6VectorINS_12NGTableTypes14ColumnLocationELj0ENS5_18PartitionAllocatorEEERKNS_14NGTableBordersEjjbPNS6_INS7_19CellBlockConstraintELj0ES9_EEPNS6_INS7_11RowspanCellELj0ES9_EEPNS_22NGColspanCellTabulatorEENK3$_2clES3_jRKNS_10NGBoxStrutE: argument 0"}
!13 = distinct !{!13, !"_ZZN5blink12_GLOBAL__N_126ComputeMinimumRowBlockSizeERKNS_11NGBlockNodeENS_10LayoutUnitEbRKN3WTF6VectorINS_12NGTableTypes14ColumnLocationELj0ENS5_18PartitionAllocatorEEERKNS_14NGTableBordersEjjbPNS6_INS7_19CellBlockConstraintELj0ES9_EEPNS6_INS7_11RowspanCellELj0ES9_EEPNS_22NGColspanCellTabulatorEENK3$_2clES3_jRKNS_10NGBoxStrutE"}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.unroll.disable"}
!16 = distinct !{!16, !15}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !15}
!19 = distinct !{!19, !15}
!20 = distinct !{!20, !15}
!21 = distinct !{!21, !15}
!22 = !{!"branch_weights", i32 1, i32 4001}
