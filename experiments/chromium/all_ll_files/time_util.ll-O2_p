; ModuleID = '../../google_apis/drive/time_util.cc'
source_filename = "../../google_apis/drive/time_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"struct.base::Time::Exploded" = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.logging::CheckOpResult" = type { i8* }

$_ZNK4base9TimeDeltamiES0_ = comdat any

@.str = private unnamed_addr constant [2 x i8] c"T\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.5 = private unnamed_addr constant [35 x i8] c"%04d-%02d-%02dT%02d:%02d:%02d.%03d\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11google_apis4util17GetTimeFromStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_4TimeE(i8*, i64, %"class.base::Time"*) local_unnamed_addr #0 {
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = alloca %"struct.base::Time::Exploded", align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = alloca %"class.std::__1::vector", align 8
  %11 = alloca %"class.std::__1::vector", align 8
  %12 = alloca %"class.std::__1::vector", align 8
  %13 = alloca %"class.std::__1::vector", align 8
  %14 = alloca %"class.std::__1::vector", align 8
  %15 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #6
  %16 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %17 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 16, i1 false) #6
  %18 = bitcast %"class.base::BasicStringPiece"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #6
  %19 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  %20 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 16, i1 false) #6
  %21 = bitcast %"struct.base::Time::Exploded"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %21, i8 0, i64 32, i1 false)
  %22 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #6
  store i32 0, i32* %8, align 4
  %23 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #6
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %25 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %9, i8* %0, i64 %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1, i32 0, i32 1) #6
  %26 = bitcast %"class.base::BasicStringPiece"** %24 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::vector"* %9 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %27, %29
  %31 = icmp eq i64 %30, 32
  %32 = inttoptr i64 %29 to %"class.base::BasicStringPiece"*
  br i1 %31, label %33, label %49

33:                                               ; preds = %3
  %34 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %32, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %32, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %32, i64 1
  %39 = bitcast %"class.base::BasicStringPiece"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 %39, i64 16, i1 false)
  %40 = icmp eq i64 %29, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %33
  store i64 %29, i64* %26, align 8
  %42 = inttoptr i64 %29 to i8*
  call void @_ZdlPv(i8* %42) #7
  br label %43

43:                                               ; preds = %33, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #6
  %44 = load i64, i64* %17, align 8
  %45 = add i64 %44, -1
  %46 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %5, i64 %45) #6
  %47 = load i8, i8* %46, align 1
  %48 = icmp eq i8 %47, 90
  br i1 %48, label %54, label %55

49:                                               ; preds = %3
  %50 = icmp eq i64 %29, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  store i64 %29, i64* %26, align 8
  %52 = inttoptr i64 %29 to i8*
  call void @_ZdlPv(i8* %52) #7
  br label %53

53:                                               ; preds = %49, %51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #6
  br label %275

54:                                               ; preds = %43
  store i32 0, i32* %8, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* nonnull align 8 %15, i64 16, i1 false)
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_suffixEm(%"class.base::BasicStringPiece"* nonnull %6, i64 1)
  br label %108

55:                                               ; preds = %43
  %56 = bitcast %"class.std::__1::vector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #6
  %57 = load i8*, i8** %16, align 8
  %58 = load i64, i64* %17, align 8
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %10, i8* %57, i64 %58, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1, i32 0, i32 1) #6
  %59 = bitcast %"class.std::__1::vector"* %10 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 1
  %62 = bitcast %"class.base::BasicStringPiece"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #6
  %64 = sub i64 %63, %60
  %65 = icmp eq i64 %64, 32
  br i1 %65, label %66, label %75

66:                                               ; preds = %55
  %67 = inttoptr i64 %60 to %"class.base::BasicStringPiece"*
  %68 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %67, i64 1, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %67, i64 1, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = call fastcc zeroext i1 @_ZN11google_apis4util12_GLOBAL__N_113ParseTimezoneEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEbPi(i8* %69, i64 %71, i1 zeroext true, i32* nonnull %8)
  br i1 %72, label %73, label %100

73:                                               ; preds = %66
  %74 = inttoptr i64 %60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %74, i64 16, i1 false)
  br label %100

75:                                               ; preds = %55
  %76 = bitcast %"class.std::__1::vector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #6
  %77 = load i8*, i8** %16, align 8
  %78 = load i64, i64* %17, align 8
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %11, i8* %77, i64 %78, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1, i32 0, i32 1) #6
  %79 = icmp eq i64 %60, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = inttoptr i64 %60 to i8*
  call void @_ZdlPv(i8* %81) #7
  br label %82

82:                                               ; preds = %80, %75
  %83 = bitcast %"class.std::__1::vector"* %11 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 1
  %86 = bitcast %"class.base::BasicStringPiece"** %85 to i64*
  %87 = load i64, i64* %86, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #6
  %88 = sub i64 %87, %84
  %89 = icmp eq i64 %88, 32
  br i1 %89, label %90, label %99

90:                                               ; preds = %82
  %91 = inttoptr i64 %84 to %"class.base::BasicStringPiece"*
  %92 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %91, i64 1, i32 0
  %93 = load i8*, i8** %92, align 8
  %94 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %91, i64 1, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = call fastcc zeroext i1 @_ZN11google_apis4util12_GLOBAL__N_113ParseTimezoneEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEbPi(i8* %93, i64 %95, i1 zeroext false, i32* nonnull %8)
  br i1 %96, label %97, label %100

97:                                               ; preds = %90
  %98 = inttoptr i64 %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %98, i64 16, i1 false)
  br label %100

99:                                               ; preds = %82
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* nonnull align 8 %15, i64 16, i1 false)
  br label %100

100:                                              ; preds = %97, %99, %73, %90, %66
  %101 = phi i64 [ %60, %73 ], [ %60, %66 ], [ %84, %97 ], [ %84, %90 ], [ %84, %99 ]
  %102 = phi i1 [ true, %73 ], [ false, %66 ], [ true, %97 ], [ false, %90 ], [ true, %99 ]
  %103 = phi i1 [ true, %73 ], [ false, %66 ], [ true, %97 ], [ false, %90 ], [ false, %99 ]
  %104 = icmp eq i64 %101, 0
  br i1 %104, label %107, label %105

105:                                              ; preds = %100
  %106 = inttoptr i64 %101 to i8*
  call void @_ZdlPv(i8* %106) #7
  br i1 %102, label %108, label %275

107:                                              ; preds = %100
  br i1 %102, label %108, label %275

108:                                              ; preds = %105, %54, %107
  %109 = phi i1 [ true, %54 ], [ %103, %107 ], [ %103, %105 ]
  %110 = bitcast %"class.std::__1::vector"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #6
  %111 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %112 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 1
  %113 = bitcast %"class.std::__1::vector"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %113, i8 -86, i64 24, i1 false)
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %12, i8* %35, i64 %37, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1, i32 0, i32 1) #6
  %114 = bitcast %"class.base::BasicStringPiece"** %112 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.std::__1::vector"* %12 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = sub i64 %115, %117
  %119 = icmp eq i64 %118, 48
  %120 = inttoptr i64 %117 to %"class.base::BasicStringPiece"*
  br i1 %119, label %121, label %146

121:                                              ; preds = %108
  %122 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %120, i64 0, i32 0
  %123 = load i8*, i8** %122, align 8
  %124 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %120, i64 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %7, i64 0, i32 0
  %127 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* %123, i64 %125, i32* nonnull %126) #6
  br i1 %127, label %128, label %144

128:                                              ; preds = %121
  %129 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %111, align 8
  %130 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %129, i64 1, i32 0
  %131 = load i8*, i8** %130, align 8
  %132 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %129, i64 1, i32 1
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %7, i64 0, i32 1
  %135 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* %131, i64 %133, i32* %134) #6
  br i1 %135, label %136, label %144

136:                                              ; preds = %128
  %137 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %111, align 8
  %138 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %137, i64 2, i32 0
  %139 = load i8*, i8** %138, align 8
  %140 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %137, i64 2, i32 1
  %141 = load i64, i64* %140, align 8
  %142 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %7, i64 0, i32 3
  %143 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* %139, i64 %141, i32* %142) #6
  br i1 %143, label %153, label %144

144:                                              ; preds = %136, %128, %121
  %145 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %111, align 8
  br label %146

146:                                              ; preds = %144, %108
  %147 = phi %"class.base::BasicStringPiece"* [ %145, %144 ], [ %120, %108 ]
  %148 = icmp eq %"class.base::BasicStringPiece"* %147, null
  br i1 %148, label %152, label %149

149:                                              ; preds = %146
  %150 = ptrtoint %"class.base::BasicStringPiece"* %147 to i64
  store i64 %150, i64* %114, align 8
  %151 = bitcast %"class.base::BasicStringPiece"* %147 to i8*
  call void @_ZdlPv(i8* %151) #7
  br label %152

152:                                              ; preds = %146, %149
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #6
  br label %275

153:                                              ; preds = %136
  %154 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %111, align 8
  %155 = icmp eq %"class.base::BasicStringPiece"* %154, null
  br i1 %155, label %159, label %156

156:                                              ; preds = %153
  %157 = ptrtoint %"class.base::BasicStringPiece"* %154 to i64
  store i64 %157, i64* %114, align 8
  %158 = bitcast %"class.base::BasicStringPiece"* %154 to i8*
  call void @_ZdlPv(i8* %158) #7
  br label %159

159:                                              ; preds = %153, %156
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #6
  %160 = bitcast %"class.std::__1::vector"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %160) #6
  %161 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 0
  %162 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 1
  %163 = bitcast %"class.std::__1::vector"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %163, i8 -86, i64 24, i1 false)
  %164 = load i8*, i8** %19, align 8
  %165 = load i64, i64* %20, align 8
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %13, i8* %164, i64 %165, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1, i32 0, i32 1) #6
  %166 = bitcast %"class.base::BasicStringPiece"** %162 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = bitcast %"class.std::__1::vector"* %13 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %167, %169
  %171 = icmp eq i64 %170, 48
  %172 = inttoptr i64 %169 to %"class.base::BasicStringPiece"*
  br i1 %171, label %173, label %244

173:                                              ; preds = %159
  %174 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %172, i64 0, i32 0
  %175 = load i8*, i8** %174, align 8
  %176 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %172, i64 0, i32 1
  %177 = load i64, i64* %176, align 8
  %178 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %7, i64 0, i32 4
  %179 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* %175, i64 %177, i32* %178) #6
  br i1 %179, label %180, label %241

180:                                              ; preds = %173
  %181 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %161, align 8
  %182 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %181, i64 1, i32 0
  %183 = load i8*, i8** %182, align 8
  %184 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %181, i64 1, i32 1
  %185 = load i64, i64* %184, align 8
  %186 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %7, i64 0, i32 5
  %187 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* %183, i64 %185, i32* %186) #6
  br i1 %187, label %188, label %241

188:                                              ; preds = %180
  %189 = bitcast %"class.std::__1::vector"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %189) #6
  %190 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %14, i64 0, i32 0, i32 0
  %191 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %14, i64 0, i32 0, i32 1
  %192 = bitcast %"class.std::__1::vector"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %192, i8 -86, i64 24, i1 false)
  %193 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %161, align 8
  %194 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %193, i64 2, i32 0
  %195 = load i8*, i8** %194, align 8
  %196 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %193, i64 2, i32 1
  %197 = load i64, i64* %196, align 8
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %14, i8* %195, i64 %197, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1, i32 0, i32 1) #6
  %198 = bitcast %"class.base::BasicStringPiece"** %191 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = bitcast %"class.std::__1::vector"* %14 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = sub i64 %199, %201
  %203 = ashr exact i64 %202, 4
  %204 = icmp ugt i64 %203, 2
  %205 = inttoptr i64 %201 to %"class.base::BasicStringPiece"*
  br i1 %204, label %233, label %206

206:                                              ; preds = %188
  %207 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %205, i64 0, i32 0
  %208 = load i8*, i8** %207, align 8
  %209 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %205, i64 0, i32 1
  %210 = load i64, i64* %209, align 8
  %211 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %7, i64 0, i32 6
  %212 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* %208, i64 %210, i32* %211) #6
  br i1 %212, label %213, label %230

213:                                              ; preds = %206
  %214 = load i64, i64* %198, align 8
  %215 = load i64, i64* %200, align 8
  %216 = sub i64 %214, %215
  %217 = ashr exact i64 %216, 4
  %218 = icmp ugt i64 %217, 1
  %219 = inttoptr i64 %215 to %"class.base::BasicStringPiece"*
  br i1 %218, label %220, label %229

220:                                              ; preds = %213
  %221 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %219, i64 1, i32 1
  %222 = load i64, i64* %221, align 8
  %223 = icmp eq i64 %222, 3
  br i1 %223, label %224, label %229

224:                                              ; preds = %220
  %225 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %219, i64 1, i32 0
  %226 = load i8*, i8** %225, align 8
  %227 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %7, i64 0, i32 7
  %228 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* %226, i64 3, i32* %227) #6
  br i1 %228, label %229, label %230

229:                                              ; preds = %224, %220, %213
  br label %230

230:                                              ; preds = %229, %206, %224
  %231 = phi i32 [ 1, %224 ], [ 1, %206 ], [ 0, %229 ]
  %232 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %190, align 8
  br label %233

233:                                              ; preds = %230, %188
  %234 = phi %"class.base::BasicStringPiece"* [ %232, %230 ], [ %205, %188 ]
  %235 = phi i32 [ %231, %230 ], [ 1, %188 ]
  %236 = icmp eq %"class.base::BasicStringPiece"* %234, null
  br i1 %236, label %240, label %237

237:                                              ; preds = %233
  %238 = ptrtoint %"class.base::BasicStringPiece"* %234 to i64
  store i64 %238, i64* %198, align 8
  %239 = bitcast %"class.base::BasicStringPiece"* %234 to i8*
  call void @_ZdlPv(i8* %239) #7
  br label %240

240:                                              ; preds = %233, %237
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %189) #6
  br label %241

241:                                              ; preds = %240, %180, %173
  %242 = phi i32 [ 1, %173 ], [ 1, %180 ], [ %235, %240 ]
  %243 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %161, align 8
  br label %244

244:                                              ; preds = %241, %159
  %245 = phi %"class.base::BasicStringPiece"* [ %243, %241 ], [ %172, %159 ]
  %246 = phi i32 [ %242, %241 ], [ 1, %159 ]
  %247 = icmp eq %"class.base::BasicStringPiece"* %245, null
  br i1 %247, label %251, label %248

248:                                              ; preds = %244
  %249 = ptrtoint %"class.base::BasicStringPiece"* %245 to i64
  store i64 %249, i64* %166, align 8
  %250 = bitcast %"class.base::BasicStringPiece"* %245 to i8*
  call void @_ZdlPv(i8* %250) #7
  br label %251

251:                                              ; preds = %244, %248
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %160) #6
  %252 = icmp eq i32 %246, 0
  br i1 %252, label %253, label %275

253:                                              ; preds = %251
  %254 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %7, i64 0, i32 2
  store i32 0, i32* %254, align 4
  %255 = call zeroext i1 @_ZNK4base4Time8Exploded14HasValidValuesEv(%"struct.base::Time::Exploded"* nonnull %7) #6
  br i1 %255, label %256, label %275

256:                                              ; preds = %253
  br i1 %109, label %257, label %272

257:                                              ; preds = %256
  %258 = call zeroext i1 @_ZN4base4Time12FromExplodedEbRKNS0_8ExplodedEPS0_(i1 zeroext false, %"struct.base::Time::Exploded"* nonnull dereferenceable(32) %7, %"class.base::Time"* %2) #6
  br i1 %258, label %259, label %275

259:                                              ; preds = %257
  %260 = load i32, i32* %8, align 4
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %274, label %262

262:                                              ; preds = %259
  %263 = icmp eq i32 %260, 2147483647
  %264 = sext i32 %260 to i64
  %265 = mul nsw i64 %264, 60000000
  %266 = select i1 %263, i64 9223372036854775807, i64 %265
  %267 = bitcast %"class.base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %267) #6
  %268 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %2, i64 0, i32 0, i32 0
  %269 = load i64, i64* %268, align 8
  %270 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %269, i64* %270, align 8
  %271 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %4, i64 %266) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %267) #6
  store i64 %271, i64* %268, align 8
  br label %274

272:                                              ; preds = %256
  %273 = call zeroext i1 @_ZN4base4Time12FromExplodedEbRKNS0_8ExplodedEPS0_(i1 zeroext true, %"struct.base::Time::Exploded"* nonnull dereferenceable(32) %7, %"class.base::Time"* %2) #6
  br i1 %273, label %274, label %275

274:                                              ; preds = %259, %272, %262
  br label %275

275:                                              ; preds = %105, %272, %257, %253, %152, %53, %251, %107, %274
  %276 = phi i1 [ true, %274 ], [ false, %251 ], [ false, %152 ], [ false, %107 ], [ false, %53 ], [ false, %253 ], [ false, %257 ], [ false, %272 ], [ false, %105 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #6
  ret i1 %276
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_suffixEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN11google_apis4util12_GLOBAL__N_113ParseTimezoneEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEbPi(i8*, i64, i1 zeroext, i32* nocapture) unnamed_addr #0 {
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #6
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %5, i8* %0, i64 %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1, i32 0, i32 1) #6
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #6
  store i32 0, i32* %6, align 4
  %13 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %14 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %10, align 8
  %15 = icmp eq %"class.base::BasicStringPiece"* %13, %14
  br i1 %15, label %52, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %13, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %13, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* %18, i64 %20, i32* nonnull %6) #6
  br i1 %21, label %22, label %49

22:                                               ; preds = %16
  %23 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #6
  store i32 0, i32* %7, align 4
  %24 = bitcast %"class.base::BasicStringPiece"** %10 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector"* %5 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = ashr exact i64 %28, 4
  %30 = icmp ugt i64 %29, 1
  %31 = inttoptr i64 %27 to %"class.base::BasicStringPiece"*
  br i1 %30, label %32, label %40

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %31, i64 1, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %31, i64 1, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* %34, i64 %36, i32* nonnull %7) #6
  br i1 %37, label %38, label %47

38:                                               ; preds = %32
  %39 = load i32, i32* %7, align 4
  br label %40

40:                                               ; preds = %38, %22
  %41 = phi i32 [ %39, %38 ], [ 0, %22 ]
  %42 = load i32, i32* %6, align 4
  %43 = mul nsw i32 %42, 60
  %44 = add nsw i32 %43, %41
  %45 = select i1 %2, i32 1, i32 -1
  %46 = mul nsw i32 %44, %45
  store i32 %46, i32* %3, align 4
  br label %47

47:                                               ; preds = %32, %40
  %48 = phi i1 [ true, %40 ], [ false, %32 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #6
  br label %49

49:                                               ; preds = %47, %16
  %50 = phi i1 [ false, %16 ], [ %48, %47 ]
  %51 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  br label %52

52:                                               ; preds = %49, %4
  %53 = phi %"class.base::BasicStringPiece"* [ %51, %49 ], [ %13, %4 ]
  %54 = phi i1 [ %50, %49 ], [ false, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #6
  %55 = icmp eq %"class.base::BasicStringPiece"* %53, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %52
  %57 = ptrtoint %"class.base::BasicStringPiece"* %53 to i64
  %58 = bitcast %"class.base::BasicStringPiece"** %10 to i64*
  store i64 %57, i64* %58, align 8
  %59 = bitcast %"class.base::BasicStringPiece"* %53 to i8*
  call void @_ZdlPv(i8* %59) #7
  br label %60

60:                                               ; preds = %52, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #6
  ret i1 %54
}

declare zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8*, i64, i32*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base4Time8Exploded14HasValidValuesEv(%"struct.base::Time::Exploded"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11google_apis4util18FormatTimeAsStringERKN4base4TimeE(%"class.std::__1::basic_string"* noalias sret, %"class.base::Time"* dereferenceable(8)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %1, i64 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  store i8 4, i8* %8, align 1
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i32*
  store i32 1819047278, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 4
  store i8 0, i8* %11, align 4
  br label %13

12:                                               ; preds = %2
  tail call void @_ZN4base13TimeToISO8601ERKNS_4TimeE(%"class.std::__1::basic_string"* sret %0, %"class.base::Time"* dereferenceable(8) %1) #6
  br label %13

13:                                               ; preds = %12, %6
  ret void
}

declare void @_ZN4base13TimeToISO8601ERKNS_4TimeE(%"class.std::__1::basic_string"* sret, %"class.base::Time"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11google_apis4util27FormatTimeAsStringLocaltimeERKN4base4TimeE(%"class.std::__1::basic_string"* noalias sret, %"class.base::Time"* dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca %"struct.base::Time::Exploded", align 4
  %4 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %1, i64 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  store i8 4, i8* %9, align 1
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i32*
  store i32 1819047278, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %10, i64 4
  store i8 0, i8* %12, align 4
  br label %30

13:                                               ; preds = %2
  %14 = bitcast %"struct.base::Time::Exploded"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #6
  %15 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %3, i64 0, i32 0
  %16 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %3, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %3, i64 0, i32 3
  %18 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %3, i64 0, i32 4
  %19 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %3, i64 0, i32 5
  %20 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %3, i64 0, i32 6
  %21 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %3, i64 0, i32 7
  %22 = bitcast %"struct.base::Time::Exploded"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %22, i8 -86, i64 32, i1 false)
  call void @_ZNK4base4Time7ExplodeEbPNS0_8ExplodedE(%"class.base::Time"* %1, i1 zeroext true, %"struct.base::Time::Exploded"* nonnull %3) #6
  %23 = load i32, i32* %15, align 4
  %24 = load i32, i32* %16, align 4
  %25 = load i32, i32* %17, align 4
  %26 = load i32, i32* %18, align 4
  %27 = load i32, i32* %19, align 4
  %28 = load i32, i32* %20, align 4
  %29 = load i32, i32* %21, align 4
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.5, i64 0, i64 0), i32 %23, i32 %24, i32 %25, i32 %26, i32 %27, i32 %28, i32 %29) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #6
  br label %30

30:                                               ; preds = %13, %7
  ret void
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare zeroext i1 @_ZN4base4Time12FromExplodedEbRKNS0_8ExplodedEPS0_(i1 zeroext, %"struct.base::Time::Exploded"* dereferenceable(32), %"class.base::Time"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #6
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !2
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #6
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %26, i8* %27) #6
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #6
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #6
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #4

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #2

declare void @_ZNK4base4Time7ExplodeEbPNS0_8ExplodedE(%"class.base::Time"*, i1 zeroext, %"struct.base::Time::Exploded"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
