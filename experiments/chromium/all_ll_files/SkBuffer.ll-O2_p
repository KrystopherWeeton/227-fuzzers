; ModuleID = '../../third_party/skia/src/core/SkBuffer.cpp'
source_filename = "../../third_party/skia/src/core/SkBuffer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkRBuffer = type <{ i8*, i8*, i8*, i8, [7 x i8] }>
%class.SkWBuffer = type { i8*, i8*, i8* }

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @_ZN9SkRBuffer4skipEm(%class.SkRBuffer* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkRBuffer, %class.SkRBuffer* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %18, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkRBuffer, %class.SkRBuffer* %0, i64 0, i32 2
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %class.SkRBuffer, %class.SkRBuffer* %0, i64 0, i32 1
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %9, %12
  %14 = icmp ult i64 %13, %1
  %15 = inttoptr i64 %12 to i8*
  br i1 %14, label %18, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds i8, i8* %15, i64 %1
  store i8* %17, i8** %10, align 8
  br label %19

18:                                               ; preds = %6, %2
  store i8 0, i8* %3, align 8
  br label %19

19:                                               ; preds = %18, %16
  %20 = phi i8* [ %15, %16 ], [ null, %18 ]
  ret i8* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9SkRBuffer4readEPvm(%class.SkRBuffer* nocapture, i8* nocapture, i64) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.SkRBuffer, %class.SkRBuffer* %0, i64 0, i32 3
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %17, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.SkRBuffer, %class.SkRBuffer* %0, i64 0, i32 2
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %class.SkRBuffer, %class.SkRBuffer* %0, i64 0, i32 1
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %10, %13
  %15 = icmp ult i64 %14, %2
  %16 = inttoptr i64 %13 to i8*
  br i1 %15, label %17, label %18

17:                                               ; preds = %3, %7
  store i8 0, i8* %4, align 8
  br label %24

18:                                               ; preds = %7
  %19 = getelementptr inbounds i8, i8* %16, i64 %2
  store i8* %19, i8** %11, align 8
  %20 = icmp eq i64 %13, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %18
  %22 = icmp eq i64 %2, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %21
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* nonnull align 1 %16, i64 %2, i1 false) #3
  br label %24

24:                                               ; preds = %17, %18, %21, %23
  %25 = phi i1 [ true, %23 ], [ true, %21 ], [ false, %18 ], [ false, %17 ]
  ret i1 %25
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN9SkRBuffer12skipToAlign4Ev(%class.SkRBuffer* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkRBuffer, %class.SkRBuffer* %0, i64 0, i32 1
  %3 = bitcast i8** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = add nsw i64 %4, 3
  %6 = and i64 %5, -4
  %7 = sub nsw i64 %6, %4
  %8 = getelementptr inbounds %class.SkRBuffer, %class.SkRBuffer* %0, i64 0, i32 3
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = inttoptr i64 %4 to i8*
  br i1 %10, label %20, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %class.SkRBuffer, %class.SkRBuffer* %0, i64 0, i32 2
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %4
  %17 = icmp ugt i64 %7, %16
  br i1 %17, label %20, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds i8, i8* %11, i64 %7
  store i8* %19, i8** %2, align 8
  br label %21

20:                                               ; preds = %12, %1
  store i8 0, i8* %8, align 8
  br label %21

21:                                               ; preds = %20, %18
  %22 = phi i1 [ true, %18 ], [ false, %20 ]
  ret i1 %22
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @_ZN9SkWBuffer4skipEm(%class.SkWBuffer* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkWBuffer, %class.SkWBuffer* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %class.SkWBuffer, %class.SkWBuffer* %0, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds i8, i8* %4, i64 %1
  store i8* %7, i8** %3, align 8
  %8 = icmp eq i8* %6, null
  %9 = select i1 %8, i8* null, i8* %4
  ret i8* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkWBuffer16writeNoSizeCheckEPKvm(%class.SkWBuffer* nocapture, i8* readonly, i64) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.SkWBuffer, %class.SkWBuffer* %0, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  %7 = icmp eq i8* %1, null
  %8 = or i1 %6, %7
  %9 = icmp eq i64 %2, 0
  %10 = or i1 %9, %8
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.SkWBuffer, %class.SkWBuffer* %0, i64 0, i32 1
  %13 = load i8*, i8** %12, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* nonnull align 1 %1, i64 %2, i1 false) #3
  br label %14

14:                                               ; preds = %3, %11
  %15 = getelementptr inbounds %class.SkWBuffer, %class.SkWBuffer* %0, i64 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 %2
  store i8* %17, i8** %15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZN9SkWBuffer11padToAlign4Ev(%class.SkWBuffer* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkWBuffer, %class.SkWBuffer* %0, i64 0, i32 1
  %3 = bitcast i8** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %class.SkWBuffer* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = add i64 %7, 3
  %9 = and i64 %8, -4
  %10 = sub i64 %9, %7
  %11 = icmp eq i64 %10, 0
  %12 = inttoptr i64 %4 to i8*
  %13 = icmp eq i64 %6, 0
  %14 = or i1 %11, %13
  br i1 %14, label %24, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds i8, i8* %12, i64 %10
  %17 = getelementptr i8, i8* %12, i64 1
  %18 = icmp ugt i8* %16, %17
  %19 = select i1 %18, i8* %16, i8* %17
  %20 = sub i64 0, %4
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = ptrtoint i8* %21 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %22, i1 false)
  %23 = load i8*, i8** %2, align 8
  br label %24

24:                                               ; preds = %15, %1
  %25 = phi i8* [ %23, %15 ], [ %12, %1 ]
  %26 = getelementptr inbounds i8, i8* %25, i64 %10
  store i8* %26, i8** %2, align 8
  ret i64 %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
