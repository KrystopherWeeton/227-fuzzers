; ModuleID = '../../third_party/libzip/src/lib/zip_algorithm_deflate.c'
source_filename = "../../third_party/libzip/src/lib/zip_algorithm_deflate.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.zip_compression_algorithm = type { i8* (i16, i32, %struct.zip_error*)*, void (i8*)*, i16 (i8*)*, i8, i1 (i8*)*, i1 (i8*)*, i1 (i8*, i8*, i64)*, void (i8*)*, i32 (i8*, i8*, i64*)* }
%struct.zip_error = type { i32, i32, i8* }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.internal_state = type opaque

@zip_algorithm_deflate_compress = hidden local_unnamed_addr global %struct.zip_compression_algorithm { i8* (i16, i32, %struct.zip_error*)* @compress_allocate, void (i8*)* @deallocate, i16 (i8*)* @general_purpose_bit_flags, i8 20, i1 (i8*)* @start, i1 (i8*)* @end, i1 (i8*, i8*, i64)* @input, void (i8*)* @end_of_input, i32 (i8*, i8*, i64*)* @process }, align 8
@zip_algorithm_deflate_decompress = hidden local_unnamed_addr global %struct.zip_compression_algorithm { i8* (i16, i32, %struct.zip_error*)* @decompress_allocate, void (i8*)* @deallocate, i16 (i8*)* @general_purpose_bit_flags, i8 20, i1 (i8*)* @start, i1 (i8*)* @end, i1 (i8*, i8*, i64)* @input, void (i8*)* @end_of_input, i32 (i8*, i8*, i64*)* @process }, align 8
@.str = private unnamed_addr constant [7 x i8] c"1.2.11\00", align 1

; Function Attrs: nounwind ssp uwtable
define internal noalias i8* @compress_allocate(i16 zeroext, i32, %struct.zip_error*) #0 {
  %4 = tail call noalias i8* @malloc(i64 136) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %3
  %7 = tail call i32* @__errno_location() #9
  %8 = load i32, i32* %7, align 4
  tail call void @zip_error_set(%struct.zip_error* %2, i32 1, i32 %8) #8
  br label %19

9:                                                ; preds = %3
  %10 = bitcast i8* %4 to %struct.zip_error**
  store %struct.zip_error* %2, %struct.zip_error** %10, align 8
  %11 = getelementptr inbounds i8, i8* %4, i64 8
  store i8 1, i8* %11, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 12
  %13 = bitcast i8* %12 to i32*
  %14 = add i32 %1, -1
  %15 = icmp ugt i32 %14, 8
  %16 = select i1 %15, i32 9, i32 %1
  store i32 %16, i32* %13, align 4
  %17 = getelementptr inbounds i8, i8* %4, i64 16
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds i8, i8* %4, i64 88
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #8
  br label %19

19:                                               ; preds = %6, %9
  ret i8* %4
}

; Function Attrs: nounwind ssp uwtable
define internal void @deallocate(i8* nocapture) #0 {
  tail call void @free(i8* %0) #8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i16 @general_purpose_bit_flags(i8* nocapture readonly) #1 {
  %2 = getelementptr inbounds i8, i8* %0, i64 8
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds i8, i8* %0, i64 12
  %7 = bitcast i8* %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 3
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = icmp sgt i32 %8, 7
  %12 = select i1 %11, i16 2, i16 0
  br label %13

13:                                               ; preds = %10, %5, %1
  %14 = phi i16 [ 0, %1 ], [ 4, %5 ], [ %12, %10 ]
  ret i16 %14
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @start(i8*) #0 {
  %2 = getelementptr inbounds i8, i8* %0, i64 24
  %3 = bitcast i8* %2 to %struct.z_stream_s*
  %4 = getelementptr inbounds i8, i8* %0, i64 32
  %5 = bitcast i8* %4 to i32*
  store i32 0, i32* %5, align 8
  %6 = bitcast i8* %2 to i8**
  store i8* null, i8** %6, align 8
  %7 = getelementptr inbounds i8, i8* %0, i64 56
  %8 = bitcast i8* %7 to i32*
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds i8, i8* %0, i64 48
  %10 = bitcast i8* %9 to i8**
  store i8* null, i8** %10, align 8
  %11 = getelementptr inbounds i8, i8* %0, i64 8
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds i8, i8* %0, i64 12
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = tail call i32 @Cr_z_deflateInit2_(%struct.z_stream_s* %3, i32 %17, i32 8, i32 -15, i32 9, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 112) #8
  br label %21

19:                                               ; preds = %1
  %20 = tail call i32 @Cr_z_inflateInit2_(%struct.z_stream_s* %3, i32 -15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 112) #8
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i32 [ %18, %14 ], [ %20, %19 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = bitcast i8* %0 to %struct.zip_error**
  %26 = load %struct.zip_error*, %struct.zip_error** %25, align 8
  tail call void @zip_error_set(%struct.zip_error* %26, i32 13, i32 %22) #8
  br label %27

27:                                               ; preds = %21, %24
  %28 = phi i1 [ false, %24 ], [ true, %21 ]
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @end(i8*) #0 {
  %2 = getelementptr inbounds i8, i8* %0, i64 8
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds i8, i8* %0, i64 24
  %6 = bitcast i8* %5 to %struct.z_stream_s*
  br i1 %4, label %9, label %7

7:                                                ; preds = %1
  %8 = tail call i32 @Cr_z_deflateEnd(%struct.z_stream_s* %6) #8
  br label %11

9:                                                ; preds = %1
  %10 = tail call i32 @Cr_z_inflateEnd(%struct.z_stream_s* %6) #8
  br label %11

11:                                               ; preds = %9, %7
  %12 = phi i32 [ %8, %7 ], [ %10, %9 ]
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = bitcast i8* %0 to %struct.zip_error**
  %16 = load %struct.zip_error*, %struct.zip_error** %15, align 8
  tail call void @zip_error_set(%struct.zip_error* %16, i32 13, i32 %12) #8
  br label %17

17:                                               ; preds = %11, %14
  %18 = phi i1 [ false, %14 ], [ true, %11 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @input(i8* nocapture, i8*, i64) #0 {
  %4 = icmp ugt i64 %2, 4294967295
  br i1 %4, label %10, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds i8, i8* %0, i64 32
  %7 = bitcast i8* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %5, %3
  %11 = bitcast i8* %0 to %struct.zip_error**
  %12 = load %struct.zip_error*, %struct.zip_error** %11, align 8
  tail call void @zip_error_set(%struct.zip_error* %12, i32 18, i32 0) #8
  br label %17

13:                                               ; preds = %5
  %14 = getelementptr inbounds i8, i8* %0, i64 24
  %15 = trunc i64 %2 to i32
  store i32 %15, i32* %7, align 8
  %16 = bitcast i8* %14 to i8**
  store i8* %1, i8** %16, align 8
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i1 [ false, %10 ], [ true, %13 ]
  ret i1 %18
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @end_of_input(i8* nocapture) #2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 16
  store i8 1, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @process(i8*, i8*, i64* nocapture) #0 {
  %4 = load i64, i64* %2, align 8
  %5 = icmp ult i64 %4, 4294967295
  %6 = select i1 %5, i64 %4, i64 4294967295
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds i8, i8* %0, i64 24
  %9 = bitcast i8* %8 to %struct.z_stream_s*
  %10 = getelementptr inbounds i8, i8* %0, i64 56
  %11 = bitcast i8* %10 to i32*
  store i32 %7, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %0, i64 48
  %13 = bitcast i8* %12 to i8**
  store i8* %1, i8** %13, align 8
  %14 = getelementptr inbounds i8, i8* %0, i64 8
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds i8, i8* %0, i64 16
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  %21 = select i1 %20, i32 0, i32 4
  %22 = tail call i32 @Cr_z_deflate(%struct.z_stream_s* %9, i32 %21) #8
  br label %25

23:                                               ; preds = %3
  %24 = tail call i32 @Cr_z_inflate(%struct.z_stream_s* %9, i32 2) #8
  br label %25

25:                                               ; preds = %23, %17
  %26 = phi i32 [ %22, %17 ], [ %24, %23 ]
  %27 = load i64, i64* %2, align 8
  %28 = load i32, i32* %11, align 8
  %29 = zext i32 %28 to i64
  %30 = sub i64 %27, %29
  store i64 %30, i64* %2, align 8
  switch i32 %26, label %37 [
    i32 0, label %40
    i32 1, label %31
    i32 -5, label %32
  ]

31:                                               ; preds = %25
  br label %40

32:                                               ; preds = %25
  %33 = getelementptr inbounds i8, i8* %0, i64 32
  %34 = bitcast i8* %33 to i32*
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %32, %25
  %38 = bitcast i8* %0 to %struct.zip_error**
  %39 = load %struct.zip_error*, %struct.zip_error** %38, align 8
  tail call void @zip_error_set(%struct.zip_error* %39, i32 13, i32 %26) #8
  br label %40

40:                                               ; preds = %32, %25, %37, %31
  %41 = phi i32 [ 2, %37 ], [ 1, %31 ], [ %26, %25 ], [ 3, %32 ]
  ret i32 %41
}

; Function Attrs: nounwind ssp uwtable
define internal noalias i8* @decompress_allocate(i16 zeroext, i32, %struct.zip_error*) #0 {
  %4 = tail call noalias i8* @malloc(i64 136) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %3
  %7 = tail call i32* @__errno_location() #9
  %8 = load i32, i32* %7, align 4
  tail call void @zip_error_set(%struct.zip_error* %2, i32 1, i32 %8) #8
  br label %19

9:                                                ; preds = %3
  %10 = bitcast i8* %4 to %struct.zip_error**
  store %struct.zip_error* %2, %struct.zip_error** %10, align 8
  %11 = getelementptr inbounds i8, i8* %4, i64 8
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 12
  %13 = bitcast i8* %12 to i32*
  %14 = add i32 %1, -1
  %15 = icmp ugt i32 %14, 8
  %16 = select i1 %15, i32 9, i32 %1
  store i32 %16, i32* %13, align 4
  %17 = getelementptr inbounds i8, i8* %4, i64 16
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds i8, i8* %4, i64 88
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #8
  br label %19

19:                                               ; preds = %6, %9
  ret i8* %4
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

declare void @zip_error_set(%struct.zip_error*, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #5

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

declare i32 @Cr_z_deflateInit2_(%struct.z_stream_s*, i32, i32, i32, i32, i32, i8*, i32) local_unnamed_addr #4

declare i32 @Cr_z_inflateInit2_(%struct.z_stream_s*, i32, i8*, i32) local_unnamed_addr #4

declare i32 @Cr_z_deflateEnd(%struct.z_stream_s*) local_unnamed_addr #4

declare i32 @Cr_z_inflateEnd(%struct.z_stream_s*) local_unnamed_addr #4

declare i32 @Cr_z_deflate(%struct.z_stream_s*, i32) local_unnamed_addr #4

declare i32 @Cr_z_inflate(%struct.z_stream_s*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nounwind }
attributes #9 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
