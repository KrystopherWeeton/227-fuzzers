; ModuleID = '../../third_party/ruy/src/ruy/create_trmul_params.cc'
source_filename = "../../third_party/ruy/src/ruy/create_trmul_params.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.ruy::MatLayout" = type <{ i32, i32, i32, i8, [3 x i8] }>
%"struct.ruy::Type" = type { i8, i8, i8 }
%"struct.ruy::KernelLayout" = type { i8, i8, i8 }
%"struct.ruy::PMatLayout" = type { i32, i32, i32, i8, %"struct.ruy::KernelLayout" }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3ruy6detail18CreatePackedLayoutERKNS_9MatLayoutERKNS_4TypeERKNS_12KernelLayoutEPNS_10PMatLayoutE(%"struct.ruy::MatLayout"* nocapture readonly dereferenceable(16), %"struct.ruy::Type"* nocapture readonly dereferenceable(3), %"struct.ruy::KernelLayout"* nocapture readonly dereferenceable(3), %"struct.ruy::PMatLayout"* nocapture) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %"struct.ruy::PMatLayout", %"struct.ruy::PMatLayout"* %3, i64 0, i32 3
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"struct.ruy::MatLayout", %"struct.ruy::MatLayout"* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"struct.ruy::KernelLayout", %"struct.ruy::KernelLayout"* %2, i64 0, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = add i32 %7, -1
  %12 = add i32 %11, %10
  %13 = sub nsw i32 0, %10
  %14 = and i32 %12, %13
  %15 = getelementptr inbounds %"struct.ruy::PMatLayout", %"struct.ruy::PMatLayout"* %3, i64 0, i32 0
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds %"struct.ruy::MatLayout", %"struct.ruy::MatLayout"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"struct.ruy::KernelLayout", %"struct.ruy::KernelLayout"* %2, i64 0, i32 2
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = add i32 %17, -1
  %22 = add i32 %21, %20
  %23 = sub nsw i32 0, %20
  %24 = and i32 %22, %23
  %25 = getelementptr inbounds %"struct.ruy::PMatLayout", %"struct.ruy::PMatLayout"* %3, i64 0, i32 1
  store i32 %24, i32* %25, align 4
  %26 = getelementptr inbounds %"struct.ruy::PMatLayout", %"struct.ruy::PMatLayout"* %3, i64 0, i32 4, i32 0
  %27 = getelementptr inbounds %"struct.ruy::KernelLayout", %"struct.ruy::KernelLayout"* %2, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %26, i8* align 1 %27, i64 3, i1 false)
  %28 = getelementptr inbounds %"struct.ruy::Type", %"struct.ruy::Type"* %1, i64 0, i32 2
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = mul nsw i32 %14, %30
  %32 = and i32 %31, 1023
  %33 = icmp eq i32 %32, 0
  %34 = add nsw i32 %14, 64
  %35 = select i1 %33, i32 %34, i32 %14
  %36 = getelementptr inbounds %"struct.ruy::PMatLayout", %"struct.ruy::PMatLayout"* %3, i64 0, i32 2
  store i32 %35, i32* %36, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
