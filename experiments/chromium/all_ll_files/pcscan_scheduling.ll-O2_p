; ModuleID = '../../base/allocator/partition_allocator/starscan/pcscan_scheduling.cc'
source_filename = "../../base/allocator/partition_allocator/starscan/pcscan_scheduling.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.base::internal::MUAwareTaskBasedBackend" = type { %"class.base::internal::PCScanSchedulingBackend", %"class.base::RepeatingCallback", %"class.base::Lock", i64, %"class.base::TimeTicks" }
%"class.base::internal::PCScanSchedulingBackend" = type { i32 (...)**, %"class.base::internal::PCScanScheduler"* }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i32 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::internal::PCScanScheduler" = type { %"struct.base::internal::QuarantineData", %"class.base::internal::LimitBackend", %"class.base::internal::PCScanSchedulingBackend"* }
%"struct.base::internal::QuarantineData" = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", i64 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.base::internal::LimitBackend" = type { %"class.base::internal::PCScanSchedulingBackend" }
%"class.base::TimeDelta" = type { i64 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZN4base8internal14QuarantineData23kQuarantineSizeMinLimitE = hidden local_unnamed_addr constant i64 1048576, align 8
@_ZN4base8internal12LimitBackend23kQuarantineSizeFractionE = hidden local_unnamed_addr constant double 1.000000e-01, align 8
@_ZN4base8internal23MUAwareTaskBasedBackend31kSoftLimitQuarantineSizePercentE = hidden local_unnamed_addr constant double 1.000000e-01, align 8
@_ZN4base8internal23MUAwareTaskBasedBackend31kHardLimitQuarantineSizePercentE = hidden local_unnamed_addr constant double 5.000000e-01, align 8
@_ZN4base8internal23MUAwareTaskBasedBackend32kTargetMutatorUtilizationPercentE = hidden local_unnamed_addr constant double 9.000000e-01, align 8
@_ZTVN4base8internal23MUAwareTaskBasedBackendE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.base::internal::MUAwareTaskBasedBackend"*)* @_ZN4base8internal23MUAwareTaskBasedBackend12LimitReachedEv to i8*), i8* bitcast (void (%"class.base::internal::MUAwareTaskBasedBackend"*)* @_ZN4base8internal23MUAwareTaskBasedBackend11ScanStartedEv to i8*), i8* bitcast (void (%"class.base::internal::MUAwareTaskBasedBackend"*, i64, i64, i64)* @_ZN4base8internal23MUAwareTaskBasedBackend23UpdateScheduleAfterScanEmNS_9TimeDeltaEm to i8*), i8* bitcast (i64 (%"class.base::internal::MUAwareTaskBasedBackend"*)* @_ZN4base8internal23MUAwareTaskBasedBackend21UpdateDelayedScheduleEv to i8*)] }, align 8
@.str = private unnamed_addr constant [71 x i8] c"../../base/allocator/partition_allocator/starscan/pcscan_scheduling.cc\00", align 1
@.str.1 = private unnamed_addr constant [31 x i8] c"Rescheduling scan with delay: \00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c" ms\00", align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"Schedule is off by \00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"ms\00", align 1
@_ZTVN4base8internal23PCScanSchedulingBackendE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.base::internal::PCScanSchedulingBackend"*)* @_ZN4base8internal23PCScanSchedulingBackend11ScanStartedEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i64 (%"class.base::internal::PCScanSchedulingBackend"*)* @_ZN4base8internal23PCScanSchedulingBackend21UpdateDelayedScheduleEv to i8*)] }, align 8
@_ZTVN4base8internal12LimitBackendE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.base::internal::LimitBackend"*)* @_ZN4base8internal12LimitBackend12LimitReachedEv to i8*), i8* bitcast (void (%"class.base::internal::PCScanSchedulingBackend"*)* @_ZN4base8internal23PCScanSchedulingBackend11ScanStartedEv to i8*), i8* bitcast (void (%"class.base::internal::LimitBackend"*, i64, i64, i64)* @_ZN4base8internal12LimitBackend23UpdateScheduleAfterScanEmNS_9TimeDeltaEm to i8*), i8* bitcast (i64 (%"class.base::internal::PCScanSchedulingBackend"*)* @_ZN4base8internal23PCScanSchedulingBackend21UpdateDelayedScheduleEv to i8*)] }, align 8
@.str.5 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.6 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN4base8internal23MUAwareTaskBasedBackendC1ERNS0_15PCScanSchedulerENS_17RepeatingCallbackIFvNS_9TimeDeltaEEEE = hidden unnamed_addr alias void (%"class.base::internal::MUAwareTaskBasedBackend"*, %"class.base::internal::PCScanScheduler"*, %"class.base::RepeatingCallback"*), void (%"class.base::internal::MUAwareTaskBasedBackend"*, %"class.base::internal::PCScanScheduler"*, %"class.base::RepeatingCallback"*)* @_ZN4base8internal23MUAwareTaskBasedBackendC2ERNS0_15PCScanSchedulerENS_17RepeatingCallbackIFvNS_9TimeDeltaEEEE
@_ZN4base8internal23MUAwareTaskBasedBackendD1Ev = hidden unnamed_addr alias void (%"class.base::internal::MUAwareTaskBasedBackend"*), void (%"class.base::internal::MUAwareTaskBasedBackend"*)* @_ZN4base8internal23MUAwareTaskBasedBackendD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base8internal15PCScanScheduler23SetNewSchedulingBackendERNS0_23PCScanSchedulingBackendE(%"class.base::internal::PCScanScheduler"* nocapture, %"class.base::internal::PCScanSchedulingBackend"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::PCScanScheduler", %"class.base::internal::PCScanScheduler"* %0, i64 0, i32 2
  store %"class.base::internal::PCScanSchedulingBackend"* %1, %"class.base::internal::PCScanSchedulingBackend"** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base8internal23PCScanSchedulingBackend11ScanStartedEv(%"class.base::internal::PCScanSchedulingBackend"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::PCScanSchedulingBackend", %"class.base::internal::PCScanSchedulingBackend"* %0, i64 0, i32 1
  %3 = load %"class.base::internal::PCScanScheduler"*, %"class.base::internal::PCScanScheduler"** %2, align 8
  %4 = getelementptr inbounds %"class.base::internal::PCScanScheduler", %"class.base::internal::PCScanScheduler"* %3, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = atomicrmw add i64* %4, i64 1 monotonic
  %6 = getelementptr inbounds %"class.base::internal::PCScanScheduler", %"class.base::internal::PCScanScheduler"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw xchg i64* %6, i64 0 monotonic
  %8 = getelementptr inbounds %"class.base::internal::PCScanScheduler", %"class.base::internal::PCScanScheduler"* %3, i64 0, i32 0, i32 3
  store i64 %7, i64* %8, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN4base8internal23PCScanSchedulingBackend21UpdateDelayedScheduleEv(%"class.base::internal::PCScanSchedulingBackend"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i64 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4base8internal12LimitBackend12LimitReachedEv(%"class.base::internal::LimitBackend"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal12LimitBackend23UpdateScheduleAfterScanEmNS_9TimeDeltaEm(%"class.base::internal::LimitBackend"* nocapture readonly, i64, i64, i64) unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.base::internal::LimitBackend", %"class.base::internal::LimitBackend"* %0, i64 0, i32 0, i32 1
  %6 = load %"class.base::internal::PCScanScheduler"*, %"class.base::internal::PCScanScheduler"** %5, align 8
  %7 = getelementptr inbounds %"class.base::internal::PCScanScheduler", %"class.base::internal::PCScanScheduler"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i64* %7, i64 %1 monotonic
  %9 = add i64 %8, %1
  %10 = getelementptr inbounds %"class.base::internal::PCScanScheduler", %"class.base::internal::PCScanScheduler"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i64, i64* %10 monotonic, align 8
  %12 = icmp ugt i64 %9, %11
  br i1 %12, label %13, label %20

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.base::internal::PCScanScheduler", %"class.base::internal::PCScanScheduler"* %6, i64 0, i32 2
  %15 = load %"class.base::internal::PCScanSchedulingBackend"*, %"class.base::internal::PCScanSchedulingBackend"** %14, align 8
  %16 = bitcast %"class.base::internal::PCScanSchedulingBackend"* %15 to i1 (%"class.base::internal::PCScanSchedulingBackend"*)***
  %17 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)**, i1 (%"class.base::internal::PCScanSchedulingBackend"*)*** %16, align 8
  %18 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)*, i1 (%"class.base::internal::PCScanSchedulingBackend"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.base::internal::PCScanSchedulingBackend"* %15) #10
  br label %20

20:                                               ; preds = %4, %13
  %21 = load %"class.base::internal::PCScanScheduler"*, %"class.base::internal::PCScanScheduler"** %5, align 8
  %22 = uitofp i64 %3 to double
  %23 = fmul double %22, 1.000000e-01
  %24 = fptoui double %23 to i64
  %25 = icmp ugt i64 %24, 1048576
  %26 = select i1 %25, i64 %24, i64 1048576
  %27 = getelementptr inbounds %"class.base::internal::PCScanScheduler", %"class.base::internal::PCScanScheduler"* %21, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %26, i64* %27 monotonic, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal23MUAwareTaskBasedBackendC2ERNS0_15PCScanSchedulerENS_17RepeatingCallbackIFvNS_9TimeDeltaEEEE(%"class.base::internal::MUAwareTaskBasedBackend"*, %"class.base::internal::PCScanScheduler"* dereferenceable(56), %"class.base::RepeatingCallback"* nocapture) unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::MUAwareTaskBasedBackend", %"class.base::internal::MUAwareTaskBasedBackend"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.base::internal::MUAwareTaskBasedBackend", %"class.base::internal::MUAwareTaskBasedBackend"* %0, i64 0, i32 0, i32 1
  store %"class.base::internal::PCScanScheduler"* %1, %"class.base::internal::PCScanScheduler"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4base8internal23MUAwareTaskBasedBackendE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::MUAwareTaskBasedBackend", %"class.base::internal::MUAwareTaskBasedBackend"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::RepeatingCallback"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::RepeatingCallback"* %6 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %11 = getelementptr inbounds %"class.base::internal::MUAwareTaskBasedBackend", %"class.base::internal::MUAwareTaskBasedBackend"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %11) #10
  %12 = getelementptr inbounds %"class.base::internal::MUAwareTaskBasedBackend", %"class.base::internal::MUAwareTaskBasedBackend"* %0, i64 0, i32 3
  %13 = bitcast i64* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal23MUAwareTaskBasedBackendD2Ev(%"class.base::internal::MUAwareTaskBasedBackend"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::MUAwareTaskBasedBackend", %"class.base::internal::MUAwareTaskBasedBackend"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4base8internal23MUAwareTaskBasedBackendE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::internal::MUAwareTaskBasedBackend", %"class.base::internal::MUAwareTaskBasedBackend"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %3) #10
  %4 = getelementptr inbounds %"class.base::internal::MUAwareTaskBasedBackend", %"class.base::internal::MUAwareTaskBasedBackend"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base8internal23MUAwareTaskBasedBackend12LimitReachedEv(%"class.base::internal::MUAwareTaskBasedBackend"*) unnamed_addr #4 align 2 {
  %2 = alloca %"class.base::TimeDelta", align 8
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = getelementptr inbounds %"class.base::internal::MUAwareTaskBasedBackend", %"class.base::internal::MUAwareTaskBasedBackend"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0, i32 0
  %7 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %6) #10
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9, !prof !2

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %10) #10
  br label %11

11:                                               ; preds = %1, %9
  %12 = getelementptr inbounds %"class.base::internal::MUAwareTaskBasedBackend", %"class.base::internal::MUAwareTaskBasedBackend"* %0, i64 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %54, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.base::internal::MUAwareTaskBasedBackend", %"class.base::internal::MUAwareTaskBasedBackend"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.base::internal::PCScanScheduler"*, %"class.base::internal::PCScanScheduler"** %16, align 8
  %18 = getelementptr inbounds %"class.base::internal::PCScanScheduler", %"class.base::internal::PCScanScheduler"* %17, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %13, i64* %18 monotonic, align 8
  store i64 0, i64* %12, align 8
  %19 = getelementptr inbounds %"class.base::internal::PCScanScheduler", %"class.base::internal::PCScanScheduler"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i64, i64* %19 monotonic, align 8
  %21 = load atomic i64, i64* %18 monotonic, align 8
  %22 = icmp ugt i64 %20, %21
  br i1 %22, label %54, label %23, !prof !3

23:                                               ; preds = %15
  %24 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  %26 = tail call i64 @_ZN4base9TimeTicks3NowEv() #10
  %27 = getelementptr inbounds %"class.base::internal::MUAwareTaskBasedBackend", %"class.base::internal::MUAwareTaskBasedBackend"* %0, i64 0, i32 4, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = sub nsw i64 %28, %26
  store i64 %29, i64* %25, align 8
  %30 = icmp slt i64 %29, 1
  br i1 %30, label %52, label %31

31:                                               ; preds = %23
  %32 = tail call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i64 71) #10
  %33 = icmp sgt i32 %32, 2
  br i1 %33, label %34, label %43

34:                                               ; preds = %31
  %35 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %35) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 102, i32 -3) #10
  %36 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %37 = bitcast %"class.std::__1::basic_ostringstream"* %36 to %"class.std::__1::basic_ostream"*
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %37, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i64 30) #10
  %39 = call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* nonnull %3) #10
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(%"class.std::__1::basic_ostream"* %38, double %39) #10
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %40, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i64 3) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %35) #10
  %42 = load i64, i64* %25, align 8
  br label %43

43:                                               ; preds = %31, %34
  %44 = phi i64 [ %29, %31 ], [ %42, %34 ]
  %45 = bitcast %"class.base::TimeDelta"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45)
  %46 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  store i64 %44, i64* %46, align 8
  %47 = getelementptr inbounds %"class.base::internal::MUAwareTaskBasedBackend", %"class.base::internal::MUAwareTaskBasedBackend"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %48 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %47, align 8
  %49 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %48, i64 0, i32 1
  %50 = bitcast void ()** %49 to void (%"class.base::internal::BindStateBase"*, %"class.base::TimeDelta"*)**
  %51 = load void (%"class.base::internal::BindStateBase"*, %"class.base::TimeDelta"*)*, void (%"class.base::internal::BindStateBase"*, %"class.base::TimeDelta"*)** %50, align 8
  call void %51(%"class.base::internal::BindStateBase"* %48, %"class.base::TimeDelta"* nonnull dereferenceable(8) %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45)
  br label %52

52:                                               ; preds = %23, %43
  %53 = phi i1 [ false, %43 ], [ true, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  br label %54

54:                                               ; preds = %11, %52, %15
  %55 = phi i1 [ %53, %52 ], [ true, %15 ], [ true, %11 ]
  %56 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %6) #10
  ret i1 %55
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #6

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(%"class.std::__1::basic_ostream"*, double) local_unnamed_addr #6

declare double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal23MUAwareTaskBasedBackend11ScanStartedEv(%"class.base::internal::MUAwareTaskBasedBackend"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::MUAwareTaskBasedBackend", %"class.base::internal::MUAwareTaskBasedBackend"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #10
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.base::internal::MUAwareTaskBasedBackend", %"class.base::internal::MUAwareTaskBasedBackend"* %0, i64 0, i32 0, i32 1
  %10 = load %"class.base::internal::PCScanScheduler"*, %"class.base::internal::PCScanScheduler"** %9, align 8
  %11 = getelementptr inbounds %"class.base::internal::PCScanScheduler", %"class.base::internal::PCScanScheduler"* %10, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i64* %11, i64 1 monotonic
  %13 = getelementptr inbounds %"class.base::internal::PCScanScheduler", %"class.base::internal::PCScanScheduler"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw xchg i64* %13, i64 0 monotonic
  %15 = getelementptr inbounds %"class.base::internal::PCScanScheduler", %"class.base::internal::PCScanScheduler"* %10, i64 0, i32 0, i32 3
  store i64 %14, i64* %15, align 8
  %16 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal23MUAwareTaskBasedBackend23UpdateScheduleAfterScanEmNS_9TimeDeltaEm(%"class.base::internal::MUAwareTaskBasedBackend"*, i64, i64, i64) unnamed_addr #4 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.base::internal::MUAwareTaskBasedBackend", %"class.base::internal::MUAwareTaskBasedBackend"* %0, i64 0, i32 0, i32 1
  %7 = load %"class.base::internal::PCScanScheduler"*, %"class.base::internal::PCScanScheduler"** %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::PCScanScheduler", %"class.base::internal::PCScanScheduler"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i64* %8, i64 %1 monotonic
  %10 = add i64 %9, %1
  %11 = getelementptr inbounds %"class.base::internal::PCScanScheduler", %"class.base::internal::PCScanScheduler"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i64, i64* %11 monotonic, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %21

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.base::internal::PCScanScheduler", %"class.base::internal::PCScanScheduler"* %7, i64 0, i32 2
  %16 = load %"class.base::internal::PCScanSchedulingBackend"*, %"class.base::internal::PCScanSchedulingBackend"** %15, align 8
  %17 = bitcast %"class.base::internal::PCScanSchedulingBackend"* %16 to i1 (%"class.base::internal::PCScanSchedulingBackend"*)***
  %18 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)**, i1 (%"class.base::internal::PCScanSchedulingBackend"*)*** %17, align 8
  %19 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)*, i1 (%"class.base::internal::PCScanSchedulingBackend"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.base::internal::PCScanSchedulingBackend"* %16) #10
  br label %21

21:                                               ; preds = %4, %14
  %22 = getelementptr inbounds %"class.base::internal::MUAwareTaskBasedBackend", %"class.base::internal::MUAwareTaskBasedBackend"* %0, i64 0, i32 2
  %23 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %22, i64 0, i32 0, i32 0
  %24 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %23) #10
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %28, label %26, !prof !2

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %22, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %27) #10
  br label %28

28:                                               ; preds = %21, %26
  %29 = load %"class.base::internal::PCScanScheduler"*, %"class.base::internal::PCScanScheduler"** %6, align 8
  %30 = uitofp i64 %3 to double
  %31 = fmul double %30, 1.000000e-01
  %32 = fptoui double %31 to i64
  %33 = icmp ugt i64 %32, 1048576
  %34 = select i1 %33, i64 %32, i64 1048576
  %35 = getelementptr inbounds %"class.base::internal::PCScanScheduler", %"class.base::internal::PCScanScheduler"* %29, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %34, i64* %35 monotonic, align 8
  %36 = fmul double %30, 5.000000e-01
  %37 = fptoui double %36 to i64
  %38 = icmp ugt i64 %37, 1048576
  %39 = select i1 %38, i64 %37, i64 1048576
  %40 = getelementptr inbounds %"class.base::internal::MUAwareTaskBasedBackend", %"class.base::internal::MUAwareTaskBasedBackend"* %0, i64 0, i32 3
  store i64 %39, i64* %40, align 8
  %41 = sitofp i64 %2 to double
  %42 = fmul double %41, 9.000000e-01
  %43 = fcmp oge double %42, 0xC3E0000000000000
  %44 = fcmp ole double %42, 0x43DFFFFFFFFFFFFF
  %45 = and i1 %44, %43
  %46 = fptosi double %42 to i64
  %47 = icmp sgt i64 %2, -1
  %48 = select i1 %47, i64 9223372036854775807, i64 -9223372036854775808
  %49 = select i1 %45, i64 %46, i64 %48
  %50 = sitofp i64 %49 to double
  %51 = fdiv double %50, 0x3FB9999999999998
  %52 = fcmp oge double %51, 0xC3E0000000000000
  %53 = fcmp ole double %51, 0x43DFFFFFFFFFFFFF
  %54 = and i1 %53, %52
  %55 = fptosi double %51 to i64
  %56 = icmp sgt i64 %49, -1
  %57 = select i1 %56, i64 9223372036854775807, i64 -9223372036854775808
  %58 = select i1 %54, i64 %55, i64 %57
  %59 = tail call i64 @_ZN4base9TimeTicks3NowEv() #10
  %60 = add i64 %58, -9223372036854775807
  %61 = icmp ult i64 %60, 2
  br i1 %61, label %69, label %62

62:                                               ; preds = %28
  %63 = icmp slt i64 %58, 0
  %64 = select i1 %63, i64 -9223372036854775808, i64 9223372036854775807
  %65 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %59, i64 %58) #10
  %66 = extractvalue { i64, i1 } %65, 1
  %67 = extractvalue { i64, i1 } %65, 0
  %68 = select i1 %66, i64 %64, i64 %67, !prof !3
  br label %77

69:                                               ; preds = %28
  %70 = add i64 %59, -9223372036854775807
  %71 = icmp ugt i64 %70, 1
  %72 = icmp eq i64 %59, %58
  %73 = or i1 %72, %71
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #10
  %76 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #10
  br label %77

77:                                               ; preds = %62, %69, %74
  %78 = phi i64 [ %68, %62 ], [ %58, %69 ], [ %58, %74 ]
  %79 = getelementptr inbounds %"class.base::internal::MUAwareTaskBasedBackend", %"class.base::internal::MUAwareTaskBasedBackend"* %0, i64 0, i32 4, i32 0, i32 0
  store i64 %78, i64* %79, align 8
  %80 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %23) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4base8internal23MUAwareTaskBasedBackend21UpdateDelayedScheduleEv(%"class.base::internal::MUAwareTaskBasedBackend"*) unnamed_addr #4 align 2 {
  %2 = alloca %"class.base::TimeDelta", align 8
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = getelementptr inbounds %"class.base::internal::MUAwareTaskBasedBackend", %"class.base::internal::MUAwareTaskBasedBackend"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %5) #10
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !2

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %9) #10
  br label %10

10:                                               ; preds = %1, %8
  %11 = bitcast %"class.base::TimeDelta"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  %13 = tail call i64 @_ZN4base9TimeTicks3NowEv() #10
  %14 = getelementptr inbounds %"class.base::internal::MUAwareTaskBasedBackend", %"class.base::internal::MUAwareTaskBasedBackend"* %0, i64 0, i32 4, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = sub nsw i64 %15, %13
  store i64 %16, i64* %12, align 8
  %17 = tail call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i64 71) #10
  %18 = icmp sgt i32 %17, 2
  br i1 %18, label %19, label %28

19:                                               ; preds = %10
  %20 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %20) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 151, i32 -3) #10
  %21 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %22 = bitcast %"class.std::__1::basic_ostringstream"* %21 to %"class.std::__1::basic_ostream"*
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0), i64 19) #10
  %24 = call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* nonnull %2) #10
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(%"class.std::__1::basic_ostream"* %23, double %24) #10
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i64 2) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %20) #10
  %27 = load i64, i64* %12, align 8
  br label %28

28:                                               ; preds = %10, %19
  %29 = phi i64 [ %16, %10 ], [ %27, %19 ]
  %30 = icmp sgt i64 %29, 0
  %31 = select i1 %30, i64 %29, i64 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  %32 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #10
  ret i64 %31
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #5

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #4 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #4 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #5

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #6

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #6

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #5

declare i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8*, i64) local_unnamed_addr #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
