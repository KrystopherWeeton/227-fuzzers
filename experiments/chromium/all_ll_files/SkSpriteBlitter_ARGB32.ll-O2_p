; ModuleID = '../../third_party/skia/src/core/SkSpriteBlitter_ARGB32.cpp'
source_filename = "../../third_party/skia/src/core/SkSpriteBlitter_ARGB32.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkSpriteBlitter = type { %class.SkBlitter, %class.SkPixmap, %class.SkPixmap, i32, i32, %class.SkPaint* }
%class.SkBlitter = type { i32 (...)**, %class.SkAutoMalloc }
%class.SkAutoMalloc = type { %"class.std::__1::unique_ptr", i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkPaint = type <{ %class.sk_sp.7, %class.sk_sp.8, %class.sk_sp.9, %class.sk_sp.10, %class.sk_sp.11, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.7 = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.8 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.9 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type opaque
%class.sk_sp.10 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.11 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%class.anon = type { %class.SkPixmap*, i32* }
%class.anon.13 = type { %class.SkPixmap*, %class.SkPaint* }
%class.Sprite_D32_S32 = type <{ %class.SkSpriteBlitter, void (i32*, i32*, i32, i32)*, i32, [4 x i8] }>
%class.Sprite_D32_S32A_Xfer = type { %class.SkSpriteBlitter, %class.SkXfermode* }
%class.SkXfermode = type { %class.SkRefCnt.base, [4 x i8] }
%struct.SkMask = type <{ i8*, %struct.SkIRect, i32, i8, [3 x i8] }>
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.16 = type { %class.SkXfermode* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>

$_ZN12SkArenaAlloc4makeIZNS_4makeI14Sprite_D32_S32JRK8SkPixmapRjEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS7_ = comdat any

$_ZZN12SkArenaAlloc4makeIZNS_4makeI14Sprite_D32_S32JRK8SkPixmapRjEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS7_ENUlPcE_8__invokeESG_ = comdat any

$_ZN15SkSpriteBlitterD2Ev = comdat any

$_ZN14Sprite_D32_S32D0Ev = comdat any

$_ZN14Sprite_D32_S328blitRectEiiii = comdat any

$_ZN9SkBlitter10blitAntiH2Eiijj = comdat any

$_ZN9SkBlitter10blitAntiV2Eiijj = comdat any

$_ZNK9SkBlitter20requestRowsPreservedEv = comdat any

$_ZN9SkBlitter15allocBlitMemoryEm = comdat any

$_ZN12SkArenaAlloc4makeIZNS_4makeI20Sprite_D32_S32A_XferJRK8SkPixmapRK7SkPaintEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS9_ = comdat any

$_ZZN12SkArenaAlloc4makeIZNS_4makeI20Sprite_D32_S32A_XferJRK8SkPixmapRK7SkPaintEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS9_ENUlPcE_8__invokeESI_ = comdat any

$_ZN20Sprite_D32_S32A_XferD0Ev = comdat any

$_ZN20Sprite_D32_S32A_Xfer8blitRectEiiii = comdat any

$_ZTV14Sprite_D32_S32 = comdat any

$_ZTV20Sprite_D32_S32A_Xfer = comdat any

@_ZTV14Sprite_D32_S32 = linkonce_odr hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkSpriteBlitter*)* @_ZN15SkSpriteBlitterD2Ev to i8*), i8* bitcast (void (%class.Sprite_D32_S32*)* @_ZN14Sprite_D32_S32D0Ev to i8*), i8* bitcast (void (%class.SkSpriteBlitter*, i32, i32, i32)* @_ZN15SkSpriteBlitter5blitHEiii to i8*), i8* bitcast (void (%class.SkSpriteBlitter*, i32, i32, i8*, i16*)* @_ZN15SkSpriteBlitter9blitAntiHEiiPKhPKs to i8*), i8* bitcast (void (%class.SkSpriteBlitter*, i32, i32, i32, i8)* @_ZN15SkSpriteBlitter5blitVEiiih to i8*), i8* bitcast (void (%class.Sprite_D32_S32*, i32, i32, i32, i32)* @_ZN14Sprite_D32_S328blitRectEiiii to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)* @_ZN9SkBlitter12blitAntiRectEiiiihh to i8*), i8* bitcast (void (%class.SkSpriteBlitter*, %struct.SkMask*, %struct.SkIRect*)* @_ZN15SkSpriteBlitter8blitMaskERK6SkMaskRK7SkIRect to i8*), i8* bitcast (%class.SkPixmap* (%class.SkBlitter*, i32*)* @_ZN9SkBlitter17justAnOpaqueColorEPj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiH2Eiijj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiV2Eiijj to i8*), i8* bitcast (i1 (%class.SkBlitter*)* @_ZNK9SkBlitter13isNullBlitterEv to i8*), i8* bitcast (i32 (%class.SkBlitter*)* @_ZNK9SkBlitter20requestRowsPreservedEv to i8*), i8* bitcast (i8* (%class.SkBlitter*, i64)* @_ZN9SkBlitter15allocBlitMemoryEm to i8*), i8* bitcast (i1 (%class.SkSpriteBlitter*, %class.SkPixmap*, i32, i32, %class.SkPaint*)* @_ZN15SkSpriteBlitter5setupERK8SkPixmapiiRK7SkPaint to i8*)] }, comdat, align 8
@_ZTV15SkSpriteBlitter = external unnamed_addr constant { [17 x i8*] }, align 8
@_ZTV20Sprite_D32_S32A_Xfer = linkonce_odr hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkSpriteBlitter*)* @_ZN15SkSpriteBlitterD2Ev to i8*), i8* bitcast (void (%class.Sprite_D32_S32A_Xfer*)* @_ZN20Sprite_D32_S32A_XferD0Ev to i8*), i8* bitcast (void (%class.SkSpriteBlitter*, i32, i32, i32)* @_ZN15SkSpriteBlitter5blitHEiii to i8*), i8* bitcast (void (%class.SkSpriteBlitter*, i32, i32, i8*, i16*)* @_ZN15SkSpriteBlitter9blitAntiHEiiPKhPKs to i8*), i8* bitcast (void (%class.SkSpriteBlitter*, i32, i32, i32, i8)* @_ZN15SkSpriteBlitter5blitVEiiih to i8*), i8* bitcast (void (%class.Sprite_D32_S32A_Xfer*, i32, i32, i32, i32)* @_ZN20Sprite_D32_S32A_Xfer8blitRectEiiii to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)* @_ZN9SkBlitter12blitAntiRectEiiiihh to i8*), i8* bitcast (void (%class.SkSpriteBlitter*, %struct.SkMask*, %struct.SkIRect*)* @_ZN15SkSpriteBlitter8blitMaskERK6SkMaskRK7SkIRect to i8*), i8* bitcast (%class.SkPixmap* (%class.SkBlitter*, i32*)* @_ZN9SkBlitter17justAnOpaqueColorEPj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiH2Eiijj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiV2Eiijj to i8*), i8* bitcast (i1 (%class.SkBlitter*)* @_ZNK9SkBlitter13isNullBlitterEv to i8*), i8* bitcast (i32 (%class.SkBlitter*)* @_ZNK9SkBlitter20requestRowsPreservedEv to i8*), i8* bitcast (i8* (%class.SkBlitter*, i64)* @_ZN9SkBlitter15allocBlitMemoryEm to i8*), i8* bitcast (i1 (%class.SkSpriteBlitter*, %class.SkPixmap*, i32, i32, %class.SkPaint*)* @_ZN15SkSpriteBlitter5setupERK8SkPixmapiiRK7SkPaint to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkSpriteBlitter* @_ZN15SkSpriteBlitter9ChooseL32ERK8SkPixmapRK7SkPaintP12SkArenaAlloc(%class.SkPixmap* dereferenceable(40), %class.SkPaint* dereferenceable(72), %class.SkArenaAlloc*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.anon, align 8
  %5 = alloca %class.anon.13, align 8
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 3, i32 0
  %8 = load %class.SkColorFilter*, %class.SkColorFilter** %7, align 8
  %9 = icmp eq %class.SkColorFilter* %8, null
  br i1 %9, label %10, label %51

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 2, i32 0
  %12 = load %class.SkMaskFilter*, %class.SkMaskFilter** %11, align 8
  %13 = icmp eq %class.SkMaskFilter* %12, null
  br i1 %13, label %14, label %51

14:                                               ; preds = %10
  %15 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #7
  %16 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 5, i32 3
  %17 = load float, float* %16, align 4
  %18 = fmul float %17, 2.550000e+02
  %19 = fadd float %18, 5.000000e-01
  %20 = tail call float @llvm.floor.f32(float %19) #7
  %21 = fcmp olt float %20, 0x41DFFFFFE0000000
  %22 = select i1 %21, float %20, float 0x41DFFFFFE0000000
  %23 = fcmp ogt float %22, 0xC1DFFFFFE0000000
  %24 = select i1 %23, float %22, float 0xC1DFFFFFE0000000
  %25 = fptosi float %24 to i32
  %26 = and i32 %25, 255
  store i32 %26, i32* %6, align 4
  %27 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %0, i64 0, i32 2, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 6
  br i1 %29, label %30, label %49

30:                                               ; preds = %14
  %31 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 8, i32 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 261120
  %34 = icmp eq i32 %33, 3072
  br i1 %34, label %35, label %41

35:                                               ; preds = %30
  %36 = bitcast %class.anon* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #7
  %37 = getelementptr inbounds %class.anon, %class.anon* %4, i64 0, i32 0
  store %class.SkPixmap* %0, %class.SkPixmap** %37, align 8
  %38 = getelementptr inbounds %class.anon, %class.anon* %4, i64 0, i32 1
  store i32* %6, i32** %38, align 8
  %39 = call %class.Sprite_D32_S32* @_ZN12SkArenaAlloc4makeIZNS_4makeI14Sprite_D32_S32JRK8SkPixmapRjEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS7_(%class.SkArenaAlloc* %2, %class.anon* nonnull dereferenceable(16) %4) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #7
  %40 = getelementptr inbounds %class.Sprite_D32_S32, %class.Sprite_D32_S32* %39, i64 0, i32 0
  br label %49

41:                                               ; preds = %30
  %42 = icmp eq i32 %26, 255
  br i1 %42, label %43, label %49

43:                                               ; preds = %41
  %44 = bitcast %class.anon.13* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #7
  %45 = getelementptr inbounds %class.anon.13, %class.anon.13* %5, i64 0, i32 0
  store %class.SkPixmap* %0, %class.SkPixmap** %45, align 8
  %46 = getelementptr inbounds %class.anon.13, %class.anon.13* %5, i64 0, i32 1
  store %class.SkPaint* %1, %class.SkPaint** %46, align 8
  %47 = call %class.Sprite_D32_S32A_Xfer* @_ZN12SkArenaAlloc4makeIZNS_4makeI20Sprite_D32_S32A_XferJRK8SkPixmapRK7SkPaintEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS9_(%class.SkArenaAlloc* %2, %class.anon.13* nonnull dereferenceable(16) %5) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #7
  %48 = getelementptr inbounds %class.Sprite_D32_S32A_Xfer, %class.Sprite_D32_S32A_Xfer* %47, i64 0, i32 0
  br label %49

49:                                               ; preds = %14, %41, %43, %35
  %50 = phi %class.SkSpriteBlitter* [ %40, %35 ], [ %48, %43 ], [ null, %41 ], [ null, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #7
  br label %51

51:                                               ; preds = %10, %3, %49
  %52 = phi %class.SkSpriteBlitter* [ %50, %49 ], [ null, %3 ], [ null, %10 ]
  ret %class.SkSpriteBlitter* %52
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.Sprite_D32_S32* @_ZN12SkArenaAlloc4makeIZNS_4makeI14Sprite_D32_S32JRK8SkPixmapRjEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS7_(%class.SkArenaAlloc*, %class.anon* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %0, i32 145, i32 8) #7
  %4 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %0, i64 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = ptrtoint i8* %3 to i64
  %8 = sub i64 %7, %6
  %9 = trunc i64 %8 to i32
  %10 = getelementptr inbounds i8, i8* %3, i64 136
  store i8* %10, i8** %4, align 8
  tail call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %0, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeI14Sprite_D32_S32JRK8SkPixmapRjEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS7_ENUlPcE_8__invokeESG_, i32 %9) #7
  %11 = bitcast i8* %3 to %class.Sprite_D32_S32*
  %12 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 0
  %13 = load %class.SkPixmap*, %class.SkPixmap** %12, align 8
  %14 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 1
  %15 = load i32*, i32** %14, align 8
  %16 = load i32, i32* %15, align 4
  %17 = bitcast i8* %3 to %class.SkSpriteBlitter*
  tail call void @_ZN15SkSpriteBlitterC2ERK8SkPixmap(%class.SkSpriteBlitter* %17, %class.SkPixmap* dereferenceable(40) %13) #7
  %18 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV14Sprite_D32_S32, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = icmp ne i32 %16, 255
  %20 = zext i1 %19 to i32
  %21 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %13, i64 0, i32 2, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %29, label %24

24:                                               ; preds = %2
  %25 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %13, i64 0, i32 2, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = tail call zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32 %26) #7
  %28 = or i32 %20, 2
  br i1 %27, label %29, label %30

29:                                               ; preds = %24, %2
  br label %30

30:                                               ; preds = %24, %29
  %31 = phi i32 [ %20, %29 ], [ %28, %24 ]
  %32 = tail call void (i32*, i32*, i32, i32)* @_ZN9SkBlitRow9Factory32Ej(i32 %31) #7
  %33 = getelementptr inbounds i8, i8* %3, i64 120
  %34 = bitcast i8* %33 to void (i32*, i32*, i32, i32)**
  store void (i32*, i32*, i32, i32)* %32, void (i32*, i32*, i32, i32)** %34, align 8
  %35 = getelementptr inbounds i8, i8* %3, i64 128
  %36 = bitcast i8* %35 to i32*
  store i32 %16, i32* %36, align 8
  ret %class.Sprite_D32_S32* %11
}

declare i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #3

declare void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc*, i8* (i8*)*, i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc4makeIZNS_4makeI14Sprite_D32_S32JRK8SkPixmapRjEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS7_ENUlPcE_8__invokeESG_(i8*) #4 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -145
  %3 = bitcast i8* %2 to %class.Sprite_D32_S32*
  %4 = bitcast i8* %2 to void (%class.Sprite_D32_S32*)***
  %5 = load void (%class.Sprite_D32_S32*)**, void (%class.Sprite_D32_S32*)*** %4, align 8
  %6 = load void (%class.Sprite_D32_S32*)*, void (%class.Sprite_D32_S32*)** %5, align 8
  tail call void %6(%class.Sprite_D32_S32* %3) #7
  ret i8* %2
}

declare void @_ZN15SkSpriteBlitterC2ERK8SkPixmap(%class.SkSpriteBlitter*, %class.SkPixmap* dereferenceable(40)) unnamed_addr #3

declare void (i32*, i32*, i32, i32)* @_ZN9SkBlitRow9Factory32Ej(i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15SkSpriteBlitterD2Ev(%class.SkSpriteBlitter*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.SkSpriteBlitter, %class.SkSpriteBlitter* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV15SkSpriteBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkSpriteBlitter, %class.SkSpriteBlitter* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.SkColorSpace*, %class.SkColorSpace** %3, align 8
  %5 = icmp eq %class.SkColorSpace* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorSpace* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #8
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %class.SkSpriteBlitter, %class.SkSpriteBlitter* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %14 = load %class.SkColorSpace*, %class.SkColorSpace** %13, align 8
  %15 = icmp eq %class.SkColorSpace* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = bitcast %class.SkColorSpace* %14 to i8*
  tail call void @_ZdlPv(i8* %21) #8
  br label %22

22:                                               ; preds = %12, %16, %20
  %23 = getelementptr inbounds %class.SkSpriteBlitter, %class.SkSpriteBlitter* %0, i64 0, i32 0
  tail call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %23) #7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14Sprite_D32_S32D0Ev(%class.Sprite_D32_S32*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.Sprite_D32_S32, %class.Sprite_D32_S32* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV15SkSpriteBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.Sprite_D32_S32, %class.Sprite_D32_S32* %0, i64 0, i32 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.SkColorSpace*, %class.SkColorSpace** %3, align 8
  %5 = icmp eq %class.SkColorSpace* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorSpace* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #8
  br label %12

12:                                               ; preds = %10, %6, %1
  %13 = getelementptr inbounds %class.Sprite_D32_S32, %class.Sprite_D32_S32* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %14 = load %class.SkColorSpace*, %class.SkColorSpace** %13, align 8
  %15 = icmp eq %class.SkColorSpace* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = bitcast %class.SkColorSpace* %14 to i8*
  tail call void @_ZdlPv(i8* %21) #8
  br label %22

22:                                               ; preds = %12, %16, %20
  %23 = getelementptr inbounds %class.Sprite_D32_S32, %class.Sprite_D32_S32* %0, i64 0, i32 0, i32 0
  tail call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %23) #7
  %24 = bitcast %class.Sprite_D32_S32* %0 to i8*
  tail call void @_ZdlPv(i8* %24) #8
  ret void
}

declare void @_ZN15SkSpriteBlitter5blitHEiii(%class.SkSpriteBlitter*, i32, i32, i32) unnamed_addr #3

declare void @_ZN15SkSpriteBlitter9blitAntiHEiiPKhPKs(%class.SkSpriteBlitter*, i32, i32, i8*, i16*) unnamed_addr #3

declare void @_ZN15SkSpriteBlitter5blitVEiiih(%class.SkSpriteBlitter*, i32, i32, i32, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14Sprite_D32_S328blitRectEiiii(%class.Sprite_D32_S32*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %class.Sprite_D32_S32, %class.Sprite_D32_S32* %0, i64 0, i32 0, i32 1, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = sext i32 %2 to i64
  %9 = getelementptr inbounds %class.Sprite_D32_S32, %class.Sprite_D32_S32* %0, i64 0, i32 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = mul i64 %10, %8
  %12 = getelementptr inbounds i8, i8* %7, i64 %11
  %13 = shl i32 %1, 2
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* %12, i64 %14
  %16 = getelementptr inbounds %class.Sprite_D32_S32, %class.Sprite_D32_S32* %0, i64 0, i32 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = sub nsw i32 %1, %17
  %19 = getelementptr inbounds %class.Sprite_D32_S32, %class.Sprite_D32_S32* %0, i64 0, i32 0, i32 4
  %20 = load i32, i32* %19, align 4
  %21 = sub nsw i32 %2, %20
  %22 = getelementptr inbounds %class.Sprite_D32_S32, %class.Sprite_D32_S32* %0, i64 0, i32 0, i32 2, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = sext i32 %21 to i64
  %25 = getelementptr inbounds %class.Sprite_D32_S32, %class.Sprite_D32_S32* %0, i64 0, i32 0, i32 2, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = mul i64 %26, %24
  %28 = getelementptr inbounds i8, i8* %23, i64 %27
  %29 = shl i32 %18, 2
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %28, i64 %30
  %32 = getelementptr inbounds %class.Sprite_D32_S32, %class.Sprite_D32_S32* %0, i64 0, i32 1
  %33 = load void (i32*, i32*, i32, i32)*, void (i32*, i32*, i32, i32)** %32, align 8
  %34 = getelementptr inbounds %class.Sprite_D32_S32, %class.Sprite_D32_S32* %0, i64 0, i32 2
  %35 = load i32, i32* %34, align 8
  br label %36

36:                                               ; preds = %36, %5
  %37 = phi i32 [ %4, %5 ], [ %44, %36 ]
  %38 = phi i8* [ %15, %5 ], [ %42, %36 ]
  %39 = phi i8* [ %31, %5 ], [ %43, %36 ]
  %40 = bitcast i8* %39 to i32*
  %41 = bitcast i8* %38 to i32*
  tail call void %33(i32* %41, i32* %40, i32 %3, i32 %35) #7
  %42 = getelementptr inbounds i8, i8* %38, i64 %10
  %43 = getelementptr inbounds i8, i8* %39, i64 %26
  %44 = add nsw i32 %37, -1
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %36

46:                                               ; preds = %36
  ret void
}

declare void @_ZN9SkBlitter12blitAntiRectEiiiihh(%class.SkBlitter*, i32, i32, i32, i32, i8 zeroext, i8 zeroext) unnamed_addr #3

declare void @_ZN15SkSpriteBlitter8blitMaskERK6SkMaskRK7SkIRect(%class.SkSpriteBlitter*, %struct.SkMask* dereferenceable(32), %struct.SkIRect* dereferenceable(16)) unnamed_addr #3

declare %class.SkPixmap* @_ZN9SkBlitter17justAnOpaqueColorEPj(%class.SkBlitter*, i32*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkBlitter10blitAntiH2Eiijj(%class.SkBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = alloca [3 x i16], align 2
  %7 = alloca [2 x i8], align 1
  %8 = bitcast [3 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %8) #7
  %9 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 0
  %10 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 1
  %11 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 2
  %12 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %12) #7
  %13 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 1
  store i16 1, i16* %9, align 2
  store i16 1, i16* %10, align 2
  store i16 0, i16* %11, align 2
  %14 = trunc i32 %3 to i8
  store i8 %14, i8* %12, align 1
  %15 = trunc i32 %4 to i8
  store i8 %15, i8* %13, align 1
  %16 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %17 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %17, i64 3
  %19 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %18, align 8
  call void %19(%class.SkBlitter* %0, i32 %1, i32 %2, i8* nonnull %12, i16* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %8) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkBlitter10blitAntiV2Eiijj(%class.SkBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = alloca [2 x i16], align 2
  %7 = alloca [1 x i8], align 1
  %8 = bitcast [2 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #7
  %9 = getelementptr inbounds [2 x i16], [2 x i16]* %6, i64 0, i64 0
  %10 = getelementptr inbounds [2 x i16], [2 x i16]* %6, i64 0, i64 1
  %11 = getelementptr inbounds [1 x i8], [1 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #7
  store i16 1, i16* %9, align 2
  store i16 0, i16* %10, align 2
  %12 = trunc i32 %3 to i8
  store i8 %12, i8* %11, align 1
  %13 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %14 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %13, align 8
  %15 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %14, i64 3
  %16 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %15, align 8
  call void %16(%class.SkBlitter* %0, i32 %1, i32 %2, i8* nonnull %11, i16* nonnull %9) #7
  store i16 1, i16* %9, align 2
  store i16 0, i16* %10, align 2
  %17 = trunc i32 %4 to i8
  store i8 %17, i8* %11, align 1
  %18 = add nsw i32 %2, 1
  %19 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %13, align 8
  %20 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %19, i64 3
  %21 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %20, align 8
  call void %21(%class.SkBlitter* %0, i32 %1, i32 %18, i8* nonnull %11, i16* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #7
  ret void
}

declare zeroext i1 @_ZNK9SkBlitter13isNullBlitterEv(%class.SkBlitter*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK9SkBlitter20requestRowsPreservedEv(%class.SkBlitter*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN9SkBlitter15allocBlitMemoryEm(%class.SkBlitter*, i64) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %5, %1
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %1, i32 2) #7
  %9 = getelementptr inbounds %class.SkAutoMalloc, %class.SkAutoMalloc* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  store i8* %8, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void @_Z7sk_freePv(i8* nonnull %10) #7
  br label %13

13:                                               ; preds = %12, %7
  store i64 %1, i64* %4, align 8
  br label %14

14:                                               ; preds = %2, %13
  %15 = getelementptr inbounds %class.SkAutoMalloc, %class.SkAutoMalloc* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  ret i8* %16
}

declare zeroext i1 @_ZN15SkSpriteBlitter5setupERK8SkPixmapiiRK7SkPaint(%class.SkSpriteBlitter*, %class.SkPixmap* dereferenceable(40), i32, i32, %class.SkPaint* dereferenceable(72)) unnamed_addr #3

declare zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9SkBlitterD2Ev(%class.SkBlitter*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.Sprite_D32_S32A_Xfer* @_ZN12SkArenaAlloc4makeIZNS_4makeI20Sprite_D32_S32A_XferJRK8SkPixmapRK7SkPaintEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS9_(%class.SkArenaAlloc*, %class.anon.13* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.sk_sp.16, align 8
  %4 = tail call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %0, i32 137, i32 8) #7
  %5 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %0, i64 0, i32 1
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint i8* %4 to i64
  %9 = sub i64 %8, %7
  %10 = trunc i64 %9 to i32
  %11 = getelementptr inbounds i8, i8* %4, i64 128
  store i8* %11, i8** %5, align 8
  tail call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %0, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeI20Sprite_D32_S32A_XferJRK8SkPixmapRK7SkPaintEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS9_ENUlPcE_8__invokeESI_, i32 %10) #7
  %12 = bitcast i8* %4 to %class.Sprite_D32_S32A_Xfer*
  %13 = getelementptr inbounds %class.anon.13, %class.anon.13* %1, i64 0, i32 0
  %14 = load %class.SkPixmap*, %class.SkPixmap** %13, align 8
  %15 = getelementptr inbounds %class.anon.13, %class.anon.13* %1, i64 0, i32 1
  %16 = load %class.SkPaint*, %class.SkPaint** %15, align 8
  %17 = bitcast i8* %4 to %class.SkSpriteBlitter*
  tail call void @_ZN15SkSpriteBlitterC2ERK8SkPixmap(%class.SkSpriteBlitter* %17, %class.SkPixmap* dereferenceable(40) %14) #7
  %18 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV20Sprite_D32_S32A_Xfer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %16, i64 0, i32 8, i32 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = lshr i32 %20, 10
  %22 = and i32 %21, 255
  %23 = bitcast %class.sk_sp.16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #7
  %24 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %3, i64 0, i32 0
  store %class.SkXfermode* inttoptr (i64 -6148914691236517206 to %class.SkXfermode*), %class.SkXfermode** %24, align 8
  call void @_ZN10SkXfermode4MakeE11SkBlendMode(%class.sk_sp.16* nonnull sret %3, i32 %22) #7
  %25 = load %class.SkXfermode*, %class.SkXfermode** %24, align 8
  %26 = icmp eq %class.SkXfermode* %25, null
  br i1 %26, label %37, label %27

27:                                               ; preds = %2
  %28 = getelementptr inbounds %class.SkXfermode, %class.SkXfermode* %25, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 -1 acq_rel
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %37

31:                                               ; preds = %27
  %32 = bitcast %class.SkXfermode* %25 to %class.SkRefCntBase*
  %33 = bitcast %class.SkXfermode* %25 to void (%class.SkRefCntBase*)***
  %34 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %33, align 8
  %35 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %34, i64 2
  %36 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %35, align 8
  call void %36(%class.SkRefCntBase* nonnull %32) #7
  br label %37

37:                                               ; preds = %2, %27, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #7
  %38 = getelementptr inbounds i8, i8* %4, i64 120
  %39 = bitcast i8* %38 to %class.SkXfermode**
  store %class.SkXfermode* %25, %class.SkXfermode** %39, align 8
  ret %class.Sprite_D32_S32A_Xfer* %12
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc4makeIZNS_4makeI20Sprite_D32_S32A_XferJRK8SkPixmapRK7SkPaintEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS9_ENUlPcE_8__invokeESI_(i8*) #4 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -137
  %3 = bitcast i8* %2 to %class.Sprite_D32_S32A_Xfer*
  %4 = bitcast i8* %2 to void (%class.Sprite_D32_S32A_Xfer*)***
  %5 = load void (%class.Sprite_D32_S32A_Xfer*)**, void (%class.Sprite_D32_S32A_Xfer*)*** %4, align 8
  %6 = load void (%class.Sprite_D32_S32A_Xfer*)*, void (%class.Sprite_D32_S32A_Xfer*)** %5, align 8
  tail call void %6(%class.Sprite_D32_S32A_Xfer* %3) #7
  ret i8* %2
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20Sprite_D32_S32A_XferD0Ev(%class.Sprite_D32_S32A_Xfer*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.Sprite_D32_S32A_Xfer, %class.Sprite_D32_S32A_Xfer* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV15SkSpriteBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.Sprite_D32_S32A_Xfer, %class.Sprite_D32_S32A_Xfer* %0, i64 0, i32 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.SkColorSpace*, %class.SkColorSpace** %3, align 8
  %5 = icmp eq %class.SkColorSpace* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorSpace* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #8
  br label %12

12:                                               ; preds = %10, %6, %1
  %13 = getelementptr inbounds %class.Sprite_D32_S32A_Xfer, %class.Sprite_D32_S32A_Xfer* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %14 = load %class.SkColorSpace*, %class.SkColorSpace** %13, align 8
  %15 = icmp eq %class.SkColorSpace* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = bitcast %class.SkColorSpace* %14 to i8*
  tail call void @_ZdlPv(i8* %21) #8
  br label %22

22:                                               ; preds = %12, %16, %20
  %23 = getelementptr inbounds %class.Sprite_D32_S32A_Xfer, %class.Sprite_D32_S32A_Xfer* %0, i64 0, i32 0, i32 0
  tail call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %23) #7
  %24 = bitcast %class.Sprite_D32_S32A_Xfer* %0 to i8*
  tail call void @_ZdlPv(i8* %24) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20Sprite_D32_S32A_Xfer8blitRectEiiii(%class.Sprite_D32_S32A_Xfer*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %class.Sprite_D32_S32A_Xfer, %class.Sprite_D32_S32A_Xfer* %0, i64 0, i32 0, i32 1, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = sext i32 %2 to i64
  %9 = getelementptr inbounds %class.Sprite_D32_S32A_Xfer, %class.Sprite_D32_S32A_Xfer* %0, i64 0, i32 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = mul i64 %10, %8
  %12 = getelementptr inbounds i8, i8* %7, i64 %11
  %13 = shl i32 %1, 2
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* %12, i64 %14
  %16 = getelementptr inbounds %class.Sprite_D32_S32A_Xfer, %class.Sprite_D32_S32A_Xfer* %0, i64 0, i32 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = sub nsw i32 %1, %17
  %19 = getelementptr inbounds %class.Sprite_D32_S32A_Xfer, %class.Sprite_D32_S32A_Xfer* %0, i64 0, i32 0, i32 4
  %20 = load i32, i32* %19, align 4
  %21 = sub nsw i32 %2, %20
  %22 = getelementptr inbounds %class.Sprite_D32_S32A_Xfer, %class.Sprite_D32_S32A_Xfer* %0, i64 0, i32 0, i32 2, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = sext i32 %21 to i64
  %25 = getelementptr inbounds %class.Sprite_D32_S32A_Xfer, %class.Sprite_D32_S32A_Xfer* %0, i64 0, i32 0, i32 2, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = mul i64 %26, %24
  %28 = getelementptr inbounds i8, i8* %23, i64 %27
  %29 = shl i32 %18, 2
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %28, i64 %30
  %32 = getelementptr inbounds %class.Sprite_D32_S32A_Xfer, %class.Sprite_D32_S32A_Xfer* %0, i64 0, i32 1
  %33 = load %class.SkXfermode*, %class.SkXfermode** %32, align 8
  %34 = bitcast %class.SkXfermode* %33 to void (%class.SkXfermode*, i32*, i32*, i32, i8*)***
  br label %35

35:                                               ; preds = %35, %5
  %36 = phi i32 [ %4, %5 ], [ %46, %35 ]
  %37 = phi i8* [ %15, %5 ], [ %44, %35 ]
  %38 = phi i8* [ %31, %5 ], [ %45, %35 ]
  %39 = bitcast i8* %38 to i32*
  %40 = bitcast i8* %37 to i32*
  %41 = load void (%class.SkXfermode*, i32*, i32*, i32, i8*)**, void (%class.SkXfermode*, i32*, i32*, i32, i8*)*** %34, align 8
  %42 = getelementptr inbounds void (%class.SkXfermode*, i32*, i32*, i32, i8*)*, void (%class.SkXfermode*, i32*, i32*, i32, i8*)** %41, i64 3
  %43 = load void (%class.SkXfermode*, i32*, i32*, i32, i8*)*, void (%class.SkXfermode*, i32*, i32*, i32, i8*)** %42, align 8
  tail call void %43(%class.SkXfermode* %33, i32* %40, i32* %39, i32 %3, i8* null) #7
  %44 = getelementptr inbounds i8, i8* %37, i64 %10
  %45 = getelementptr inbounds i8, i8* %38, i64 %26
  %46 = add nsw i32 %36, -1
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %35

48:                                               ; preds = %35
  ret void
}

declare void @_ZN10SkXfermode4MakeE11SkBlendMode(%class.sk_sp.16* sret, i32) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readnone speculatable }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
