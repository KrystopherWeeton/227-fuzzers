; ModuleID = '../../third_party/libvpx/source/libvpx/vp8/encoder/lookahead.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp8/encoder/lookahead.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.lookahead_ctx = type { i32, i32, i32, i32, %struct.lookahead_entry* }
%struct.lookahead_entry = type { %struct.yv12_buffer_config, i64, i64, i32 }
%struct.yv12_buffer_config = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_lookahead_destroy(%struct.lookahead_ctx*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.lookahead_ctx* %0, null
  br i1 %2, label %26, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 4
  %5 = load %struct.lookahead_entry*, %struct.lookahead_entry** %4, align 8
  %6 = icmp eq %struct.lookahead_entry* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %21, label %11

11:                                               ; preds = %7, %11
  %12 = phi i64 [ %16, %11 ], [ 0, %7 ]
  %13 = phi %struct.lookahead_entry* [ %20, %11 ], [ %5, %7 ]
  %14 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %13, i64 %12, i32 0
  %15 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %14) #6
  %16 = add nuw nsw i64 %12, 1
  %17 = load i32, i32* %8, align 8
  %18 = zext i32 %17 to i64
  %19 = icmp ult i64 %16, %18
  %20 = load %struct.lookahead_entry*, %struct.lookahead_entry** %4, align 8
  br i1 %19, label %11, label %21

21:                                               ; preds = %11, %7
  %22 = phi %struct.lookahead_entry* [ %5, %7 ], [ %20, %11 ]
  %23 = bitcast %struct.lookahead_entry* %22 to i8*
  tail call void @free(i8* %23) #6
  br label %24

24:                                               ; preds = %3, %21
  %25 = bitcast %struct.lookahead_ctx* %0 to i8*
  tail call void @free(i8* %25) #6
  br label %26

26:                                               ; preds = %1, %24
  ret void
}

declare i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.lookahead_ctx* @vp8_lookahead_init(i32, i32, i32) local_unnamed_addr #0 {
  %4 = add i32 %0, 15
  %5 = and i32 %4, -16
  %6 = add i32 %1, 15
  %7 = and i32 %6, -16
  %8 = tail call noalias i8* @calloc(i64 1, i64 24) #6
  %9 = bitcast i8* %8 to %struct.lookahead_ctx*
  %10 = icmp eq i8* %8, null
  br i1 %10, label %33, label %11

11:                                               ; preds = %3
  %12 = bitcast i8* %8 to i32*
  store i32 2, i32* %12, align 8
  %13 = tail call noalias i8* @calloc(i64 2, i64 184) #6
  %14 = getelementptr inbounds i8, i8* %8, i64 16
  %15 = bitcast i8* %14 to i8**
  store i8* %13, i8** %15, align 8
  %16 = icmp eq i8* %13, null
  br i1 %16, label %32, label %17

17:                                               ; preds = %11
  %18 = bitcast i8* %13 to %struct.yv12_buffer_config*
  %19 = tail call i32 @vp8_yv12_alloc_frame_buffer(%struct.yv12_buffer_config* nonnull %18, i32 %5, i32 %7, i32 32) #6
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %26

21:                                               ; preds = %17
  %22 = getelementptr inbounds i8, i8* %13, i64 184
  %23 = bitcast i8* %22 to %struct.yv12_buffer_config*
  %24 = tail call i32 @vp8_yv12_alloc_frame_buffer(%struct.yv12_buffer_config* %23, i32 %5, i32 %7, i32 32) #6
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %17, %21
  %27 = bitcast i8* %13 to %struct.yv12_buffer_config*
  %28 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* nonnull %27) #6
  %29 = getelementptr inbounds i8, i8* %13, i64 184
  %30 = bitcast i8* %29 to %struct.yv12_buffer_config*
  %31 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %30) #6
  tail call void @free(i8* %13) #6
  br label %32

32:                                               ; preds = %11, %26
  tail call void @free(i8* %8) #6
  br label %33

33:                                               ; preds = %21, %3, %32
  %34 = phi %struct.lookahead_ctx* [ null, %32 ], [ %9, %3 ], [ %9, %21 ]
  ret %struct.lookahead_ctx* %34
}

; Function Attrs: nofree nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #3

declare i32 @vp8_yv12_alloc_frame_buffer(%struct.yv12_buffer_config*, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp8_lookahead_push(%struct.lookahead_ctx* nocapture, %struct.yv12_buffer_config*, i64, i64, i32, i8* readonly) local_unnamed_addr #0 {
  %7 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = add nsw i32 %8, 15
  %10 = ashr i32 %9, 4
  %11 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = add nsw i32 %12, 15
  %14 = ashr i32 %13, 4
  %15 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = add i32 %16, 2
  %18 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %100, label %21

21:                                               ; preds = %6
  %22 = add i32 %16, 1
  store i32 %22, i32* %15, align 4
  %23 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 4
  %26 = load %struct.lookahead_entry*, %struct.lookahead_entry** %25, align 8
  %27 = zext i32 %24 to i64
  %28 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %26, i64 %27
  %29 = add i32 %24, 1
  %30 = icmp ult i32 %29, %19
  %31 = select i1 %30, i32 0, i32 %19
  %32 = sub i32 %29, %31
  store i32 %32, i32* %23, align 4
  %33 = icmp ne i32 %19, 1
  %34 = icmp eq i8* %5, null
  %35 = or i1 %34, %33
  %36 = icmp ne i32 %4, 0
  %37 = or i1 %36, %35
  br i1 %37, label %94, label %38

38:                                               ; preds = %21
  %39 = icmp sgt i32 %8, 0
  br i1 %39, label %40, label %96

40:                                               ; preds = %38
  %41 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %28, i64 0, i32 0
  %42 = sext i32 %14 to i64
  br label %43

43:                                               ; preds = %40, %90
  %44 = phi i32 [ 0, %40 ], [ %92, %90 ]
  %45 = phi i8* [ %5, %40 ], [ %91, %90 ]
  %46 = shl i32 %44, 4
  br label %47

47:                                               ; preds = %43, %85
  %48 = phi i32 [ %86, %85 ], [ 0, %43 ]
  %49 = icmp slt i32 %48, %14
  br i1 %49, label %50, label %65

50:                                               ; preds = %47
  %51 = sext i32 %48 to i64
  br label %52

52:                                               ; preds = %58, %50
  %53 = phi i64 [ %51, %50 ], [ %59, %58 ]
  %54 = phi i32 [ %48, %50 ], [ %60, %58 ]
  %55 = getelementptr inbounds i8, i8* %45, i64 %53
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %63

58:                                               ; preds = %52
  %59 = add nsw i64 %53, 1
  %60 = add nsw i32 %54, 1
  %61 = trunc i64 %59 to i32
  %62 = icmp eq i32 %14, %61
  br i1 %62, label %65, label %52

63:                                               ; preds = %52
  %64 = trunc i64 %53 to i32
  br label %65

65:                                               ; preds = %58, %63, %47
  %66 = phi i32 [ %48, %47 ], [ %64, %63 ], [ %60, %58 ]
  %67 = icmp eq i32 %66, %14
  br i1 %67, label %90, label %68

68:                                               ; preds = %65
  %69 = icmp slt i32 %66, %14
  br i1 %69, label %70, label %85

70:                                               ; preds = %68
  %71 = sext i32 %66 to i64
  br label %72

72:                                               ; preds = %78, %70
  %73 = phi i64 [ %71, %70 ], [ %79, %78 ]
  %74 = phi i32 [ %66, %70 ], [ %80, %78 ]
  %75 = getelementptr inbounds i8, i8* %45, i64 %73
  %76 = load i8, i8* %75, align 1
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %83, label %78

78:                                               ; preds = %72
  %79 = add nsw i64 %73, 1
  %80 = add nsw i32 %74, 1
  %81 = trunc i64 %79 to i32
  %82 = icmp eq i32 %14, %81
  br i1 %82, label %85, label %72

83:                                               ; preds = %72
  %84 = trunc i64 %73 to i32
  br label %85

85:                                               ; preds = %78, %83, %68
  %86 = phi i32 [ %66, %68 ], [ %84, %83 ], [ %80, %78 ]
  %87 = shl i32 %66, 4
  %88 = sub nsw i32 %86, %66
  %89 = shl i32 %88, 4
  tail call void @vp8_copy_and_extend_frame_with_rect(%struct.yv12_buffer_config* %1, %struct.yv12_buffer_config* %41, i32 %46, i32 %87, i32 16, i32 %89) #6
  br label %47

90:                                               ; preds = %65
  %91 = getelementptr inbounds i8, i8* %45, i64 %42
  %92 = add nuw nsw i32 %44, 1
  %93 = icmp slt i32 %92, %10
  br i1 %93, label %43, label %96

94:                                               ; preds = %21
  %95 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %28, i64 0, i32 0
  tail call void @vp8_copy_and_extend_frame(%struct.yv12_buffer_config* %1, %struct.yv12_buffer_config* %95) #6
  br label %96

96:                                               ; preds = %90, %38, %94
  %97 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %26, i64 %27, i32 1
  store i64 %2, i64* %97, align 8
  %98 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %26, i64 %27, i32 2
  store i64 %3, i64* %98, align 8
  %99 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %26, i64 %27, i32 3
  store i32 %4, i32* %99, align 8
  br label %100

100:                                              ; preds = %6, %96
  %101 = phi i32 [ 0, %96 ], [ 1, %6 ]
  ret i32 %101
}

declare void @vp8_copy_and_extend_frame_with_rect(%struct.yv12_buffer_config*, %struct.yv12_buffer_config*, i32, i32, i32, i32) local_unnamed_addr #1

declare void @vp8_copy_and_extend_frame(%struct.yv12_buffer_config*, %struct.yv12_buffer_config*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct.lookahead_entry* @vp8_lookahead_pop(%struct.lookahead_ctx* nocapture, i32) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %25, label %6

6:                                                ; preds = %2
  %7 = icmp ne i32 %1, 0
  %8 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = icmp eq i32 %4, %10
  %12 = or i1 %7, %11
  br i1 %12, label %13, label %25

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 4
  %17 = load %struct.lookahead_entry*, %struct.lookahead_entry** %16, align 8
  %18 = zext i32 %15 to i64
  %19 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %17, i64 %18
  %20 = add i32 %15, 1
  %21 = icmp ult i32 %20, %9
  %22 = select i1 %21, i32 0, i32 %9
  %23 = sub i32 %20, %22
  store i32 %23, i32* %14, align 4
  %24 = add i32 %4, -1
  store i32 %24, i32* %3, align 4
  br label %25

25:                                               ; preds = %6, %2, %13
  %26 = phi %struct.lookahead_entry* [ %19, %13 ], [ null, %2 ], [ null, %6 ]
  ret %struct.lookahead_entry* %26
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.lookahead_entry* @vp8_lookahead_peek(%struct.lookahead_ctx* nocapture readonly, i32, i32) local_unnamed_addr #5 {
  switch i32 %2, label %37 [
    i32 1, label %4
    i32 -1, label %21
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp ugt i32 %6, %1
  br i1 %7, label %8, label %37

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, %1
  %12 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp ult i32 %11, %13
  %15 = select i1 %14, i32 0, i32 %13
  %16 = sub i32 %11, %15
  %17 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 4
  %18 = load %struct.lookahead_entry*, %struct.lookahead_entry** %17, align 8
  %19 = zext i32 %16 to i64
  %20 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %18, i64 %19
  br label %37

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %29

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, -1
  br label %31

29:                                               ; preds = %21
  %30 = sub i32 %23, %1
  br label %31

31:                                               ; preds = %29, %25
  %32 = phi i32 [ %28, %25 ], [ %30, %29 ]
  %33 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 4
  %34 = load %struct.lookahead_entry*, %struct.lookahead_entry** %33, align 8
  %35 = zext i32 %32 to i64
  %36 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %34, i64 %35
  br label %37

37:                                               ; preds = %3, %31, %4, %8
  %38 = phi %struct.lookahead_entry* [ %20, %8 ], [ null, %4 ], [ %36, %31 ], [ null, %3 ]
  ret %struct.lookahead_entry* %38
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vp8_lookahead_depth(%struct.lookahead_ctx* nocapture readonly) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
