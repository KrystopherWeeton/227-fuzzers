; ModuleID = '../../third_party/blink/renderer/platform/scheduler/common/web_thread_scheduler.cc'
source_filename = "../../third_party/blink/renderer/platform/scheduler/common/web_thread_scheduler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::scheduler::WebThreadScheduler" = type { i32 (...)** }
%"class.base::MessagePump" = type { i32 (...)** }
%"struct.base::sequence_manager::SequenceManager::Settings" = type <{ i32, i8, [3 x i8], %"class.base::TickClock"*, i8, [7 x i8] }>
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::sequence_manager::SequenceManager::Settings::Builder" = type { %"struct.base::sequence_manager::SequenceManager::Settings" }
%"class.base::sequence_manager::SequenceManager" = type { i32 (...)** }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type { %"class.blink::scheduler::ThreadSchedulerImpl", %"class.blink::scheduler::AgentSchedulingStrategy::Delegate", %"class.blink::scheduler::IdleHelper::Delegate", %"class.blink::scheduler::SchedulerHelper::Observer", %"class.blink::scheduler::RenderWidgetSignals::Observer", %"class.base::trace_event::TraceLog::AsyncEnabledStateObserver", i8, i8, [6 x i8], %"class.blink::scheduler::TraceableVariableController", %"struct.blink::scheduler::MainThreadSchedulerImpl::SchedulingSettings", %"class.std::__1::unique_ptr.7", %"class.blink::scheduler::MainThreadSchedulerHelper", %class.scoped_refptr.34, %"class.blink::scheduler::IdleHelper", %"class.std::__1::unique_ptr.227", %"class.blink::scheduler::RenderWidgetSignals", %"class.std::__1::unique_ptr.251", %class.scoped_refptr.34, %class.scoped_refptr.34, %class.scoped_refptr.34, %class.scoped_refptr.34, %"class.std::__1::map", %class.scoped_refptr.34, %class.scoped_refptr.34, %class.scoped_refptr.34, %class.scoped_refptr, %class.scoped_refptr, %class.scoped_refptr, %class.scoped_refptr, %class.scoped_refptr, %"class.blink::MemoryPurgeManager", %"class.std::__1::unique_ptr.274", %"class.blink::scheduler::NonWakingTimeDomain", %"class.base::RepeatingCallback.175", %"class.blink::scheduler::DeadlineTaskRunner", %"class.blink::scheduler::CancelableClosureHolder", %"class.base::RepeatingCallback.175", %"class.base::RepeatingCallback.287", %"class.std::__1::unique_ptr.288", %"struct.blink::scheduler::MainThreadSchedulerImpl::MainThreadOnly", %"class.base::Lock", %"struct.blink::scheduler::MainThreadSchedulerImpl::AnyThread", %"struct.blink::scheduler::MainThreadSchedulerImpl::CompositorThreadOnly", %class.PollableThreadSafeFlag, %class.PollableThreadSafeFlag, %"class.WTF::HashSet.447", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.base::WeakPtrFactory.451" }
%"class.blink::scheduler::ThreadSchedulerImpl" = type { %"class.blink::ThreadScheduler", %"class.blink::scheduler::WebThreadScheduler", %"class.v8::Isolate"* }
%"class.blink::ThreadScheduler" = type { i32 (...)** }
%"class.v8::Isolate" = type opaque
%"class.blink::scheduler::AgentSchedulingStrategy::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::IdleHelper::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::SchedulerHelper::Observer" = type { i32 (...)** }
%"class.blink::scheduler::RenderWidgetSignals::Observer" = type { i32 (...)** }
%"class.base::trace_event::TraceLog::AsyncEnabledStateObserver" = type { i32 (...)** }
%"class.blink::scheduler::TraceableVariableController" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.16", %"class.std::__1::__compressed_pair.23", %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.30", [4 x i8] }>
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18", %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { i64 }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { float }
%"struct.blink::scheduler::MainThreadSchedulerImpl::SchedulingSettings" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.std::__1::array", i8, i8 }
%"struct.std::__1::array" = type { [6 x i8] }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.base::sequence_manager::SequenceManager"* }
%"class.blink::scheduler::MainThreadSchedulerHelper" = type { %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %class.scoped_refptr.34, %class.scoped_refptr.34 }
%"class.blink::scheduler::SchedulerHelper" = type { %"class.base::sequence_manager::SequenceManager::Observer", %"class.base::sequence_manager::SequenceManager"*, %class.scoped_refptr, %"class.blink::scheduler::SchedulerHelper::Observer"*, %"class.blink::scheduler::UkmTaskSampler", %"class.absl::optional" }
%"class.base::sequence_manager::SequenceManager::Observer" = type { i32 (...)** }
%"class.blink::scheduler::UkmTaskSampler" = type { double, double, %"class.std::__1::mersenne_twister_engine" }
%"class.std::__1::mersenne_twister_engine" = type { [312 x i64], i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::SimpleTaskExecutor" }
%"class.base::SimpleTaskExecutor" = type { %"class.base::TaskExecutor", %class.scoped_refptr, %"class.base::TaskExecutor"* }
%"class.base::TaskExecutor" = type { i32 (...)** }
%"class.blink::scheduler::IdleHelper" = type { %"class.base::TaskObserver", %"class.blink::scheduler::SingleThreadIdleTaskRunner::Delegate", %"class.blink::scheduler::SchedulerHelper"*, %"class.blink::scheduler::IdleHelper::Delegate"*, %class.scoped_refptr.36, %class.scoped_refptr.212, %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::IdleHelper::State", %"class.base::TimeDelta", i8, %"class.base::WeakPtr.225", %"class.base::WeakPtrFactory.226" }
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.blink::scheduler::SingleThreadIdleTaskRunner::Delegate" = type { i32 (...)** }
%class.scoped_refptr.36 = type { %"class.base::sequence_manager::TaskQueue"* }
%"class.base::sequence_manager::TaskQueue" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.37", %"class.base::internal::CheckedLock", %"class.std::__1::unique_ptr.38", %"class.base::WeakPtr", %class.scoped_refptr.41, %class.scoped_refptr, i32, i32, i8*, %"class.base::WeakPtrFactory.123" }
%"class.base::RefCountedThreadSafe.37" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::internal::CheckedLock" = type { %"class.base::Lock" }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::sequence_manager::internal::TaskQueueImpl" = type <{ i8*, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %class.scoped_refptr.41, %class.scoped_refptr.43, %"class.base::internal::CheckedLock", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread", %"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly", %"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag", i8, i8, i8, [5 x i8] }>
%"class.base::sequence_manager::internal::SequenceManagerImpl" = type opaque
%class.scoped_refptr.43 = type { %"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster"* }
%"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster" = type { %"class.base::RefCountedThreadSafe.44", [4 x i8], %"class.base::internal::OperationsController", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::RefCountedThreadSafe.44" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::OperationsController" = type { %"struct.std::__1::atomic.45", [4 x i8], %"class.base::WaitableEvent" }
%"struct.std::__1::atomic.45" = type { %"struct.std::__1::__atomic_base.46" }
%"struct.std::__1::__atomic_base.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__cxx_atomic_impl.48" }
%"struct.std::__1::__cxx_atomic_impl.48" = type { %"struct.std::__1::__cxx_atomic_base_impl.49" }
%"struct.std::__1::__cxx_atomic_base_impl.49" = type { i32 }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.50, i8, [7 x i8] }>
%class.scoped_refptr.50 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.51", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.51" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.52" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread" = type { %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", i8, i8, i8, %"class.base::RepeatingCallback", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" }
%"class.base::sequence_manager::TimeDomain" = type { i32 (...)**, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::internal::IntrusiveHeap", i32, %class.scoped_refptr.41 }
%"class.base::internal::IntrusiveHeap" = type { %"class.base::IntrusiveHeap" }
%"class.base::IntrusiveHeap" = type { %"struct.base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp, base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::Impl" }
%"struct.base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp, base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::Impl" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"class.std::__1::__compressed_pair.56" }
%"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp" = type { %"struct.base::sequence_manager::internal::DelayedWakeUp", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"struct.base::sequence_manager::internal::DelayedWakeUp" = type { %"class.base::TimeTicks", i32, i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* }
%"class.base::sequence_manager::TaskQueue::Observer" = type { i32 (...)** }
%"class.base::sequence_manager::internal::LazilyDeallocatedDeque" = type { %"class.std::__1::unique_ptr.61", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, i64, i64, %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* }
%"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.67 }
%class.scoped_refptr.67 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.68", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.68" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" = type <{ i8, [7 x i8], %"class.absl::optional.69", i8, [7 x i8] }>
%"class.absl::optional.69" = type { %"class.absl::optional_internal::optional_data.70" }
%"class.absl::optional_internal::optional_data.70" = type { %"class.absl::optional_internal::optional_data_base.71" }
%"class.absl::optional_internal::optional_data_base.71" = type { %"class.absl::optional_internal::optional_data_dtor_base.72" }
%"class.absl::optional_internal::optional_data_dtor_base.72" = type { i8, %union.anon.73 }
%union.anon.73 = type { %"class.base::TimeTicks" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly" = type <{ %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.76", %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue", %"class.base::ObserverList", %"class.base::HeapHandle", i8, [7 x i8], %"class.base::trace_event::BlameContext"*, %"class.base::sequence_manager::EnqueueOrder", %"class.absl::optional.69", %"class.base::sequence_manager::EnqueueOrder", %"class.base::sequence_manager::EnqueueOrder", %"class.base::RepeatingCallback.106", %"class.base::RepeatingCallback.107", %"class.absl::optional.108", i8, [7 x i8], %"class.absl::optional.69", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.base::sequence_manager::internal::WorkQueue"* }
%"class.base::sequence_manager::internal::WorkQueue" = type opaque
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue" = type { %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue", i32, [4 x i8] }
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue" = type { %"class.std::__1::priority_queue.base", [7 x i8] }
%"class.std::__1::priority_queue.base" = type <{ %"class.std::__1::vector.82", %"struct.std::__1::less" }>
%"class.std::__1::vector.82" = type { %"class.std::__1::__vector_base.83" }
%"class.std::__1::__vector_base.83" = type { %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"*, %"class.std::__1::__compressed_pair.86" }
%"struct.base::sequence_manager::Task" = type { %"struct.base::PendingTask.base", i8, i8, i8, %class.scoped_refptr.85, %"class.base::sequence_manager::EnqueueOrder" }
%"struct.base::PendingTask.base" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array.84", i32, [4 x i8], i8*, i32, i8 }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.std::__1::array.84" = type { [4 x i8*] }
%class.scoped_refptr.85 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"struct.base::sequence_manager::Task"* }
%"struct.std::__1::less" = type { i8 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.92", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.94" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::HeapHandle" = type { i64 }
%"class.base::trace_event::BlameContext" = type { %"class.base::trace_event::TraceLog::AsyncEnabledStateObserver", i8*, i8*, i8*, i8*, i64, i8*, i64, i8*, %"class.base::ThreadChecker", %"class.base::WeakPtrFactory" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.99 }
%class.scoped_refptr.99 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.100", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.100" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.101" }
%"struct.std::__1::atomic.101" = type { %"struct.std::__1::__atomic_base.102" }
%"struct.std::__1::__atomic_base.102" = type { %"struct.std::__1::__atomic_base.103" }
%"struct.std::__1::__atomic_base.103" = type { %"struct.std::__1::__cxx_atomic_impl.104" }
%"struct.std::__1::__cxx_atomic_impl.104" = type { %"struct.std::__1::__cxx_atomic_base_impl.105" }
%"struct.std::__1::__cxx_atomic_base_impl.105" = type { i8 }
%"class.base::sequence_manager::EnqueueOrder" = type { i64 }
%"class.base::RepeatingCallback.106" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.107" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.absl::optional.108" = type { %"class.absl::optional_internal::optional_data.109" }
%"class.absl::optional_internal::optional_data.109" = type { %"class.absl::optional_internal::optional_data_base.110" }
%"class.absl::optional_internal::optional_data_base.110" = type { %"class.absl::optional_internal::optional_data_dtor_base.111" }
%"class.absl::optional_internal::optional_data_dtor_base.111" = type { i8, %union.anon.112 }
%union.anon.112 = type { %"struct.base::sequence_manager::internal::DelayedWakeUp" }
%"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag" = type { %"class.base::sequence_manager::internal::AtomicFlagSet"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, i64 }
%"class.base::sequence_manager::internal::AtomicFlagSet" = type { %class.scoped_refptr.41, %"class.std::__1::unique_ptr.113", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.base::sequence_manager::internal::AtomicFlagSet::Group" = type { %"struct.std::__1::atomic.634", i64, [64 x %"class.base::RepeatingCallback.175"], %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"class.std::__1::unique_ptr.113", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.std::__1::atomic.634" = type { %"struct.std::__1::__atomic_base.635" }
%"struct.std::__1::__atomic_base.635" = type { %"struct.std::__1::__atomic_base.636" }
%"struct.std::__1::__atomic_base.636" = type { %"struct.std::__1::__cxx_atomic_impl.637" }
%"struct.std::__1::__cxx_atomic_impl.637" = type { %"struct.std::__1::__cxx_atomic_base_impl.638" }
%"struct.std::__1::__cxx_atomic_base_impl.638" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.122 }
%class.scoped_refptr.122 = type { %"class.base::internal::WeakReference::Flag"* }
%class.scoped_refptr.41 = type { %"class.base::sequence_manager::internal::AssociatedThreadId"* }
%"class.base::sequence_manager::internal::AssociatedThreadId" = type { %"class.base::RefCountedThreadSafe.42", %"struct.std::__1::atomic" }
%"class.base::RefCountedThreadSafe.42" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.123" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.212 = type { %"class.blink::scheduler::SingleThreadIdleTaskRunner"* }
%"class.blink::scheduler::SingleThreadIdleTaskRunner" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.213", %class.scoped_refptr, %"class.std::__1::multimap", %"class.blink::scheduler::SingleThreadIdleTaskRunner::Delegate"*, %"class.base::trace_event::BlameContext"*, %"class.base::WeakPtr.223", %"class.base::WeakPtrFactory.224" }
%"class.base::RefCountedThreadSafe.213" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.214", %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.base::WeakPtr.223" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.224" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::IdleHelper::State" = type { i32 (...)**, %"class.blink::scheduler::SchedulerHelper"*, %"class.blink::scheduler::IdleHelper::Delegate"*, i32, %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, i8*, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::WeakPtr.225" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.226" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::scheduler::TaskQueueThrottler"* }
%"class.blink::scheduler::TaskQueueThrottler" = type { %"class.blink::scheduler::BudgetPoolController", %"class.WTF::HashMap.230", %"class.base::RepeatingCallback.235", %class.scoped_refptr, %"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.blink::scheduler::TraceableVariableController"*, %"class.base::TickClock"*, %"class.std::__1::unique_ptr.236", %"class.blink::scheduler::CancelableClosureHolder", %"class.absl::optional.69", i8, [7 x i8], %"class.WTF::HashMap.242", %"class.base::WeakPtrFactory.247" }
%"class.blink::scheduler::BudgetPoolController" = type { i32 (...)** }
%"class.WTF::HashMap.230" = type { %"class.WTF::HashTable.231" }
%"class.WTF::HashTable.231" = type <{ %"struct.WTF::KeyValuePair.234"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.234" = type opaque
%"class.base::RepeatingCallback.235" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::scheduler::ThrottledTimeDomain"* }
%"class.blink::scheduler::ThrottledTimeDomain" = type opaque
%"class.WTF::HashMap.242" = type { %"class.WTF::HashTable.243" }
%"class.WTF::HashTable.243" = type <{ %"struct.WTF::KeyValuePair.246"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.246" = type opaque
%"class.base::WeakPtrFactory.247" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::RenderWidgetSignals" = type { %"class.blink::scheduler::RenderWidgetSignals::Observer"*, i32, i32 }
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.blink::scheduler::FindInPageBudgetPoolController"* }
%"class.blink::scheduler::FindInPageBudgetPoolController" = type <{ %"class.blink::scheduler::BudgetPoolController", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.std::__1::unique_ptr.254", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.blink::scheduler::CPUTimeBudgetPool"* }
%"class.blink::scheduler::CPUTimeBudgetPool" = type { %"class.blink::scheduler::BudgetPool.base", %"class.absl::optional.169", %"class.absl::optional.169", %"class.base::TimeDelta", %"class.blink::scheduler::TraceableCounter", %"class.base::TimeTicks", double, %"class.base::RepeatingCallback.174" }
%"class.blink::scheduler::BudgetPool.base" = type <{ i32 (...)**, i8*, %"class.blink::scheduler::BudgetPoolController"*, %"class.WTF::HashSet.165", i8 }>
%"class.WTF::HashSet.165" = type { %"class.WTF::HashTable.166" }
%"class.WTF::HashTable.166" = type <{ %"class.base::sequence_manager::TaskQueue"**, i32, i32, i32, [4 x i8] }>
%"class.absl::optional.169" = type { %"class.absl::optional_internal::optional_data.170" }
%"class.absl::optional_internal::optional_data.170" = type { %"class.absl::optional_internal::optional_data_base.171" }
%"class.absl::optional_internal::optional_data_base.171" = type { %"class.absl::optional_internal::optional_data_dtor_base.172" }
%"class.absl::optional_internal::optional_data_dtor_base.172" = type { i8, %union.anon.173 }
%union.anon.173 = type { %"class.base::TimeDelta" }
%"class.blink::scheduler::TraceableCounter" = type { %"class.blink::scheduler::TraceableVariable", i8*, double (%"class.base::TimeDelta"*)*, %"class.base::TimeDelta" }
%"class.blink::scheduler::TraceableVariable" = type { i32 (...)**, %"class.blink::scheduler::TraceableVariableController"* }
%"class.base::RepeatingCallback.174" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.263" }
%"class.std::__1::__tree.263" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.264", %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%class.scoped_refptr.34 = type { %"class.blink::scheduler::MainThreadTaskQueue"* }
%"class.blink::scheduler::MainThreadTaskQueue" = type { %"class.base::RefCountedThreadSafe.35", %class.scoped_refptr.36, i32, %"struct.blink::scheduler::MainThreadTaskQueue::QueueTraits", i8, %"class.absl::optional.124", %"class.absl::optional.129", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::AgentGroupSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.base::WeakPtrFactory.211" }
%"class.base::RefCountedThreadSafe.35" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.blink::scheduler::MainThreadTaskQueue::QueueTraits" = type { i8, i32 }
%"class.absl::optional.124" = type { %"class.absl::optional_internal::optional_data.125" }
%"class.absl::optional_internal::optional_data.125" = type { %"class.absl::optional_internal::optional_data_base.126" }
%"class.absl::optional_internal::optional_data_base.126" = type { %"class.absl::optional_internal::optional_data_dtor_base.127" }
%"class.absl::optional_internal::optional_data_dtor_base.127" = type { i8, %union.anon.128 }
%union.anon.128 = type { i32 }
%"class.absl::optional.129" = type { %"class.absl::optional_internal::optional_data.130" }
%"class.absl::optional_internal::optional_data.130" = type { %"class.absl::optional_internal::optional_data_base.131" }
%"class.absl::optional_internal::optional_data_base.131" = type { %"class.absl::optional_internal::optional_data_dtor_base.132" }
%"class.absl::optional_internal::optional_data_dtor_base.132" = type { i8, %union.anon.133 }
%union.anon.133 = type { i32 }
%"class.blink::scheduler::AgentGroupSchedulerImpl" = type { %"class.blink::AgentGroupScheduler", %class.scoped_refptr.34, %class.scoped_refptr, %class.scoped_refptr.34, %class.scoped_refptr, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::BrowserInterfaceBrokerProxy" }
%"class.blink::AgentGroupScheduler" = type { %"class.blink::scheduler::WebAgentGroupScheduler" }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::BrowserInterfaceBrokerProxy" = type { %"class.mojo::Remote", %"class.std::__1::map.622" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.616" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.455, %"class.std::__1::unique_ptr.573", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.85, i32 }>
%class.scoped_refptr.455 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.85, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.537", %"class.absl::optional.542", %"class.absl::optional.496", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque.561", %"class.std::__1::map.564", i8, [7 x i8], %class.scoped_refptr.85, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.456" }>
%"class.base::RefCountedThreadSafe.456" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.459 }
%union.anon.459 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.469", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.475" }
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.475" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.85, %"class.std::__1::unique_ptr.476", %"class.absl::optional.486", %"struct.std::__1::atomic.492", i8, i8, i8, i8, i32, i32, %"class.absl::optional.496", %"class.std::__1::unique_ptr.501", i8, i64, %class.scoped_refptr.533, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.535", %"class.base::WeakPtrFactory.536" }
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.85, i8, %"class.mojo::ScopedHandleBase.479", %class.scoped_refptr.480, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.481", i8*, %"class.base::WeakPtrFactory.482" }
%"class.mojo::ScopedHandleBase.479" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.480 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.481" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.482" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.486" = type { %"class.absl::optional_internal::optional_data.487" }
%"class.absl::optional_internal::optional_data.487" = type { %"class.absl::optional_internal::optional_data_base.488" }
%"class.absl::optional_internal::optional_data_base.488" = type { %"class.absl::optional_internal::optional_data_dtor_base.489" }
%"class.absl::optional_internal::optional_data_dtor_base.489" = type { i8, %union.anon.490 }
%union.anon.490 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.491", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.491" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.492" = type { %"struct.std::__1::__atomic_base.493" }
%"struct.std::__1::__atomic_base.493" = type { %"struct.std::__1::__cxx_atomic_impl.494" }
%"struct.std::__1::__cxx_atomic_impl.494" = type { %"struct.std::__1::__cxx_atomic_base_impl.495" }
%"struct.std::__1::__cxx_atomic_base_impl.495" = type { i8 }
%"class.std::__1::unique_ptr.501" = type { %"class.std::__1::__compressed_pair.502" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.503" }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.504", i8, i64, %class.scoped_refptr.505, %class.scoped_refptr.529 }
%"class.base::RepeatingCallback.504" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.505 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.507", %"class.std::__1::map.518", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.506 }
%class.scoped_refptr.506 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.507" = type { %"class.std::__1::__tree.508" }
%"class.std::__1::__tree.508" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.509", %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::map.518" = type { %"class.std::__1::__tree.519" }
%"class.std::__1::__tree.519" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.524" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%class.scoped_refptr.529 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.533 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.534 }
%class.scoped_refptr.534 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.633", [4 x i8], %"class.base::RepeatingCallback.175", %class.scoped_refptr.85, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.45", [4 x i8] }>
%"class.base::RefCountedThreadSafe.633" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr.535" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.536" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.537" = type { %"class.absl::optional_internal::optional_data.538" }
%"class.absl::optional_internal::optional_data.538" = type { %"class.absl::optional_internal::optional_data_base.539" }
%"class.absl::optional_internal::optional_data_base.539" = type { %"class.absl::optional_internal::optional_data_dtor_base.540" }
%"class.absl::optional_internal::optional_data_dtor_base.540" = type { i8, %union.anon.541 }
%union.anon.541 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.542" = type { %"class.absl::optional_internal::optional_data.543" }
%"class.absl::optional_internal::optional_data.543" = type { %"class.absl::optional_internal::optional_data_base.544" }
%"class.absl::optional_internal::optional_data_base.544" = type { %"class.absl::optional_internal::optional_data_dtor_base.545" }
%"class.absl::optional_internal::optional_data_dtor_base.545" = type { i8, [7 x i8], %union.anon.546 }
%union.anon.546 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.496" = type { %"class.absl::optional_internal::optional_data.497" }
%"class.absl::optional_internal::optional_data.497" = type { %"class.absl::optional_internal::optional_data_base.498" }
%"class.absl::optional_internal::optional_data_base.498" = type { %"class.absl::optional_internal::optional_data_dtor_base.499" }
%"class.absl::optional_internal::optional_data_dtor_base.499" = type { i8, %union.anon.500 }
%union.anon.500 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.547 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.547 = type { %"class.std::__1::map.550" }
%"class.std::__1::map.550" = type { %"class.std::__1::__tree.551" }
%"class.std::__1::__tree.551" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.552", %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.base::circular_deque.561" = type { %"class.base::internal::VectorBuffer.562", i64, i64 }
%"class.base::internal::VectorBuffer.562" = type { %"class.std::__1::unique_ptr.563"*, i64 }
%"class.std::__1::unique_ptr.563" = type opaque
%"class.std::__1::map.564" = type { %"class.std::__1::__tree.565" }
%"class.std::__1::__tree.565" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.570" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::unique_ptr.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.575" }
%"struct.std::__1::__compressed_pair_elem.575" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.175", %"class.base::OnceCallback.576", %"class.absl::optional.169", %"class.absl::optional.577", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.583", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.591", %"class.std::__1::map.602", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.611", i8, %class.scoped_refptr.85, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.612" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.576" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.577" = type { %"class.absl::optional_internal::optional_data.578" }
%"class.absl::optional_internal::optional_data.578" = type { %"class.absl::optional_internal::optional_data_base.579" }
%"class.absl::optional_internal::optional_data_base.579" = type { %"class.absl::optional_internal::optional_data_dtor_base.580" }
%"class.absl::optional_internal::optional_data_dtor_base.580" = type { i8, %union.anon.581 }
%union.anon.581 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.85, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.273" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::WeakPtrFactory.273" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.582 }
%class.scoped_refptr.582 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.583" = type { %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.586", %class.scoped_refptr.587 }
%"class.base::RepeatingCallback.586" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.587 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.456", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.591" = type { %"class.std::__1::__tree.592" }
%"class.std::__1::__tree.592" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.593", %"class.std::__1::__compressed_pair.597" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::map.602" = type { %"class.std::__1::__tree.603" }
%"class.std::__1::__tree.603" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.604", %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.base::OnceCallback.611" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.612" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.616" = type { %"class.std::__1::__compressed_pair.617" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"class.blink::mojom::BrowserInterfaceBrokerProxy"* }
%"class.blink::mojom::BrowserInterfaceBrokerProxy" = type { %"class.blink::mojom::BrowserInterfaceBroker", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::BrowserInterfaceBroker" = type { i32 (...)** }
%"class.std::__1::map.622" = type { %"class.std::__1::__tree.623" }
%"class.std::__1::__tree.623" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.624", %"class.std::__1::__compressed_pair.628" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.blink::scheduler::FrameSchedulerImpl" = type { %"class.blink::FrameScheduler", %"class.blink::scheduler::FrameTaskQueueController::Delegate", i32, i8, %"class.base::TimeDelta", %"class.blink::scheduler::TraceableVariableController", %"class.std::__1::unique_ptr.135", %"class.WTF::HashMap.156", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::PageSchedulerImpl"*, %"class.blink::FrameScheduler::Delegate"*, %"class.base::trace_event::BlameContext"*, i32, [4 x i8], %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState.185", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::StateTracer", %"class.blink::scheduler::TraceableState", %"class.WTF::Vector.187", %"class.blink::scheduler::TraceableState", i32, [4 x i8], %"class.blink::scheduler::TraceableState", i64, %"class.base::flat_map", %"class.std::__1::bitset", %"class.blink::scheduler::TraceableState", i64, i8, i8, [6 x i8], %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState.202", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.std::__1::unique_ptr.204", %"class.base::WeakPtrFactory.210", %"class.base::WeakPtrFactory.210", %"class.base::WeakPtrFactory.210" }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap", %"class.base::WeakPtrFactory.134" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.base::WeakPtrFactory.134" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::FrameTaskQueueController::Delegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::scheduler::FrameTaskQueueController"* }
%"class.blink::scheduler::FrameTaskQueueController" = type { %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameTaskQueueController::Delegate"*, %"class.WTF::HashMap.138", %"class.WTF::HashSet", %"class.WTF::HashMap.146", %"class.WTF::Vector" }
%"class.WTF::HashMap.138" = type { %"class.WTF::HashTable.139" }
%"class.WTF::HashTable.139" = type <{ %"struct.WTF::KeyValuePair.142"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.142" = type opaque
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.143" }
%"class.WTF::HashTable.143" = type <{ %class.scoped_refptr.34*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.146" = type { %"class.WTF::HashTable.147" }
%"class.WTF::HashTable.147" = type <{ %"struct.WTF::KeyValuePair.150"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.150" = type opaque
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type opaque
%"class.WTF::HashMap.156" = type { %"class.WTF::HashTable.157" }
%"class.WTF::HashTable.157" = type <{ %"struct.WTF::KeyValuePair.160"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.160" = type opaque
%"class.blink::scheduler::PageSchedulerImpl" = type { %"class.blink::PageScheduler", i8, [7 x i8], %"class.blink::scheduler::TraceableVariableController", %"class.WTF::HashSet.161", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::AgentGroupSchedulerImpl"*, i32, %"class.base::TimeTicks", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::WakeUpBudgetPool"*, %"class.blink::scheduler::WakeUpBudgetPool"*, %"class.blink::scheduler::WakeUpBudgetPool"*, %"class.blink::PageScheduler::Delegate"*, %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.base::TimeDelta", i8, %"class.base::TimeDelta", i8, %"class.blink::TaskHandle", %"class.base::TimeTicks", %"class.std::__1::unique_ptr.178", %"class.base::WeakPtrFactory.184" }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.WTF::HashSet.161" = type { %"class.WTF::HashTable.162" }
%"class.WTF::HashTable.162" = type <{ %"class.blink::scheduler::FrameSchedulerImpl"**, i32, i32, i32, [4 x i8] }>
%"class.blink::scheduler::WakeUpBudgetPool" = type { %"class.blink::scheduler::BudgetPool.base", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, %"class.absl::optional.69" }
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.177 }
%class.scoped_refptr.177 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.blink::scheduler::PageSchedulerImpl::PageLifecycleStateTracker"* }
%"class.blink::scheduler::PageSchedulerImpl::PageLifecycleStateTracker" = type <{ %"class.blink::scheduler::PageSchedulerImpl"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.184" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::TraceableState.185" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", [7 x i8], void (i8*)*, i8* (i32)*, i32, [4 x i8] }>
%"class.blink::scheduler::StateTracer.base" = type <{ i8*, i8 }>
%"class.blink::scheduler::StateTracer" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::Vector.187" = type { %"class.WTF::VectorBuffer.188" }
%"class.WTF::VectorBuffer.188" = type { %"class.WTF::VectorBufferBase.189" }
%"class.WTF::VectorBufferBase.189" = type { %"class.blink::scheduler::MainThreadTaskQueue::ThrottleHandle"*, i32, i32 }
%"class.blink::scheduler::MainThreadTaskQueue::ThrottleHandle" = type { %"class.base::WeakPtr.190", %"class.base::WeakPtr.191" }
%"class.base::WeakPtr.190" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtr.191" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.194" }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"struct.std::__1::pair.196"*, %"struct.std::__1::pair.196"*, %"class.std::__1::__compressed_pair.197" }
%"struct.std::__1::pair.196" = type opaque
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"struct.std::__1::pair.196"* }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.blink::scheduler::TraceableState.202" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", [7 x i8], void (i8*)*, i8* (i32)*, i32, [4 x i8] }>
%"class.blink::scheduler::TraceableState" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", [7 x i8], void (i8*)*, i8* (i1)*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.power_scheduler::PowerModeVoter"* }
%"class.power_scheduler::PowerModeVoter" = type { %"class.power_scheduler::PowerModeVoter::Delegate"* }
%"class.power_scheduler::PowerModeVoter::Delegate" = type { i32 (...)** }
%"class.base::WeakPtrFactory.210" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.211" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::MemoryPurgeManager" = type { i8, i8, i32, i32, %"class.base::OneShotTimer" }
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* }
%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain" = type { %"class.base::sequence_manager::TimeDomain", %"class.base::TaskObserver", i32, i32, i8, %"class.blink::scheduler::SchedulerHelper"*, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::Lock", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::Time", %"class.base::Time", %"class.std::__1::unique_ptr.278" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.277" }
%"class.base::time_internal::TimeBase.277" = type { i64 }
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.base::subtle::ScopedTimeClockOverrides"* }
%"class.base::subtle::ScopedTimeClockOverrides" = type { i8 }
%"class.blink::scheduler::NonWakingTimeDomain" = type { %"class.base::sequence_manager::TimeDomain", %"class.base::TickClock"* }
%"class.blink::scheduler::DeadlineTaskRunner" = type { %"class.blink::scheduler::CancelableClosureHolder", %"class.base::RepeatingCallback.175", %"class.base::TimeTicks", %class.scoped_refptr }
%"class.blink::scheduler::CancelableClosureHolder" = type { %"class.base::RepeatingCallback.175", %"class.base::internal::CancelableCallbackImpl" }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::RepeatingCallback.175", %"class.base::WeakPtrFactory.176" }
%"class.base::WeakPtrFactory.176" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::RepeatingCallback.175" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.287" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.blink::scheduler::AgentSchedulingStrategy"* }
%"class.blink::scheduler::AgentSchedulingStrategy" = type { i32 (...)** }
%"struct.blink::scheduler::MainThreadSchedulerImpl::MainThreadOnly" = type { %"class.blink::scheduler::IdleTimeEstimator", %"class.blink::scheduler::TraceableState.313", %"class.blink::scheduler::MainThreadSchedulerImpl::Policy", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.blink::scheduler::TraceableCounter.317", %"class.blink::scheduler::TraceableCounter.318", %"class.blink::scheduler::TraceableObjectState", %"class.blink::scheduler::TraceableState.326", %"class.absl::optional.330", %"class.blink::scheduler::TraceableState.326", %"class.blink::scheduler::TraceableState.342", %"class.blink::scheduler::TraceableState.342", %"class.blink::scheduler::TraceableState.344", %"class.blink::scheduler::TraceableState.344", %"class.blink::scheduler::TraceableState.344", %"class.blink::scheduler::TraceableState.344", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState.326", %"class.blink::scheduler::TraceableState.344", %"class.blink::scheduler::TraceableState.344", %"class.blink::scheduler::TraceableState.344", %"class.base::TimeTicks", %"class.WTF::HashSet.348", %"class.base::ObserverList.352", %"class.blink::scheduler::MainThreadMetricsHelper", %"class.blink::scheduler::TraceableState.373", %"class.blink::scheduler::TraceableState.375", %"class.blink::scheduler::TraceableState.386", %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeDelta", i32, i32, i32, i8, %"class.std::__1::stack", i32, [4 x i8], %"class.blink::scheduler::TraceableState.342", %"class.WTF::Vector.400", %"class.blink::scheduler::CompositorPriorityExperiments", i8, [7 x i8], %"class.blink::scheduler::TraceableState.411", %"class.WTF::Vector.413", %"class.std::__1::unique_ptr.204" }
%"class.blink::scheduler::IdleTimeEstimator" = type <{ %"class.base::TaskObserver", %"class.cc::RollingTimeDeltaHistory", %"class.base::TickClock"*, double, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", i32, i8, [3 x i8] }>
%"class.cc::RollingTimeDeltaHistory" = type { %"class.std::__1::multiset", %"class.base::circular_deque", i64, %"class.base::flat_map.303" }
%"class.std::__1::multiset" = type { %"class.std::__1::__tree.294" }
%"class.std::__1::__tree.294" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.295", %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::__tree_const_iterator"*, i64 }
%"class.std::__1::__tree_const_iterator" = type opaque
%"class.base::flat_map.303" = type { %"class.base::internal::flat_tree.304" }
%"class.base::internal::flat_tree.304" = type { %"class.std::__1::vector.305" }
%"class.std::__1::vector.305" = type { %"class.std::__1::__vector_base.306" }
%"class.std::__1::__vector_base.306" = type { %"struct.std::__1::pair.307"*, %"struct.std::__1::pair.307"*, %"class.std::__1::__compressed_pair.308" }
%"struct.std::__1::pair.307" = type opaque
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"struct.std::__1::pair.307"* }
%"class.blink::scheduler::TraceableState.313" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.315", [7 x i8], void (i8*)*, i8* (i32)*, i32, [4 x i8] }>
%"class.blink::scheduler::StateTracer.base.315" = type <{ i8*, i8 }>
%"class.blink::scheduler::MainThreadSchedulerImpl::Policy" = type { i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32 }
%"class.blink::scheduler::TraceableCounter.317" = type { %"class.blink::scheduler::TraceableVariable", i8*, double (%"class.base::TimeDelta"*)*, %"class.base::TimeDelta" }
%"class.blink::scheduler::TraceableCounter.318" = type <{ %"class.blink::scheduler::TraceableVariable", i8*, double (i32*)*, i32, [4 x i8] }>
%"class.blink::scheduler::TraceableObjectState" = type { %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::ProtoStateTracer.base", i32, void (%"class.perfetto::protos::pbzero::TrackEvent"*, i32)* }
%"class.blink::scheduler::ProtoStateTracer.base" = type <{ i8*, i8 }>
%"class.perfetto::protos::pbzero::TrackEvent" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list.319" }
%"class.std::__1::list.319" = type { %"class.std::__1::__list_imp.320" }
%"class.std::__1::__list_imp.320" = type { %"struct.std::__1::__list_node_base.321", %"class.std::__1::__compressed_pair.322" }
%"struct.std::__1::__list_node_base.321" = type { %"struct.std::__1::__list_node_base.321"*, %"struct.std::__1::__list_node_base.321"* }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.absl::optional.330" = type { %"class.absl::optional_internal::optional_data.331" }
%"class.absl::optional_internal::optional_data.331" = type { %"class.absl::optional_internal::optional_data_base.332" }
%"class.absl::optional_internal::optional_data_base.332" = type { %"class.absl::optional_internal::optional_data_dtor_base.333" }
%"class.absl::optional_internal::optional_data_dtor_base.333" = type { i8, %union.anon.334 }
%union.anon.334 = type { %"class.base::ScopedSampleMetadata" }
%"class.base::ScopedSampleMetadata" = type { i64, %"class.absl::optional.335" }
%"class.absl::optional.335" = type { %"class.absl::optional_internal::optional_data.336" }
%"class.absl::optional_internal::optional_data.336" = type { %"class.absl::optional_internal::optional_data_base.337" }
%"class.absl::optional_internal::optional_data_base.337" = type { %"class.absl::optional_internal::optional_data_dtor_base.338" }
%"class.absl::optional_internal::optional_data_dtor_base.338" = type { i8, %union.anon.339 }
%union.anon.339 = type { i64 }
%"class.blink::scheduler::TraceableState.326" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.328", [7 x i8], void (i8*)*, i8* (i1)*, i8, [7 x i8] }>
%"class.blink::scheduler::StateTracer.base.328" = type <{ i8*, i8 }>
%"class.blink::scheduler::TraceableState.344" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.346", [7 x i8], void (i8*)*, i8* (i1)*, i8, [7 x i8] }>
%"class.blink::scheduler::StateTracer.base.346" = type <{ i8*, i8 }>
%"class.WTF::HashSet.348" = type { %"class.WTF::HashTable.349" }
%"class.WTF::HashTable.349" = type <{ %"class.blink::scheduler::PageSchedulerImpl"**, i32, i32, i32, [4 x i8] }>
%"class.base::ObserverList.352" = type <{ %"class.std::__1::vector.92", %"class.base::LinkedList.353", i64, i32, [4 x i8] }>
%"class.base::LinkedList.353" = type { %"class.base::LinkNode.354" }
%"class.base::LinkNode.354" = type { %"class.base::internal::LinkNodeBase" }
%"class.blink::scheduler::MainThreadMetricsHelper" = type <{ %"class.blink::scheduler::MetricsHelper", %"class.blink::scheduler::MainThreadSchedulerImpl"*, i8, [7 x i8], %"class.absl::optional.69", %"class.blink::scheduler::ThreadLoadTracker", %"class.blink::scheduler::ThreadLoadTracker", %"class.blink::scheduler::ThreadLoadTracker", %"class.scheduling_metrics::TaskDurationMetricReporter.372", %"class.scheduling_metrics::TaskDurationMetricReporter.372", %"class.scheduling_metrics::TaskDurationMetricReporter.372", %"class.scheduling_metrics::TaskDurationMetricReporter.372", %"class.scheduling_metrics::TaskDurationMetricReporter.372", %"class.scheduling_metrics::TaskDurationMetricReporter.372", %"class.scheduling_metrics::TaskDurationMetricReporter.372", %"class.scheduling_metrics::TaskDurationMetricReporter.372", %"class.scheduling_metrics::TotalDurationMetricReporter", i32, [4 x i8], %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.blink::scheduler::MetricsHelper" = type { i32, %"class.scheduling_metrics::ThreadMetrics", %"class.scheduling_metrics::TaskDurationMetricReporter.370", %"class.scheduling_metrics::TaskDurationMetricReporter.370", %"class.scheduling_metrics::TaskDurationMetricReporter.370", %"class.scheduling_metrics::TaskDurationMetricReporter.370", %"class.scheduling_metrics::TaskDurationMetricReporter.370", %"class.scheduling_metrics::TaskDurationMetricReporter.370" }
%"class.scheduling_metrics::ThreadMetrics" = type { i32, i8, %"class.base::ThreadTicks", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter" }
%"class.base::ThreadTicks" = type { %"class.base::time_internal::TimeBase.356" }
%"class.base::time_internal::TimeBase.356" = type { i64 }
%"class.scheduling_metrics::TaskDurationMetricReporter" = type { %"class.std::__1::unique_ptr.357" }
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"class.base::ScaledLinearHistogram"* }
%"class.base::ScaledLinearHistogram" = type { %"class.base::HistogramBase"*, i32, %"class.std::__1::vector.360" }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.45", [4 x i8] }>
%"class.std::__1::vector.360" = type { %"class.std::__1::__vector_base.361" }
%"class.std::__1::__vector_base.361" = type { i32*, i32*, %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { i32* }
%"class.scheduling_metrics::TaskDurationMetricReporter.370" = type { %"class.std::__1::unique_ptr.357" }
%"class.blink::scheduler::ThreadLoadTracker" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", i32, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::RepeatingCallback.371" }
%"class.base::RepeatingCallback.371" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.scheduling_metrics::TaskDurationMetricReporter.372" = type { %"class.std::__1::unique_ptr.357" }
%"class.scheduling_metrics::TotalDurationMetricReporter" = type { %"class.absl::optional.169", %"class.base::HistogramBase"*, %"class.base::HistogramBase"* }
%"class.blink::scheduler::TraceableState.373" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.328", [7 x i8], void (i8*)*, i8* (i32)*, i32, [4 x i8] }>
%"class.blink::scheduler::TraceableState.375" = type { %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", void (i8*)*, i8* (i64, i64)*, %"class.absl::optional.376" }
%"class.absl::optional.376" = type { %"class.absl::optional_internal::optional_data.377" }
%"class.absl::optional_internal::optional_data.377" = type { %"class.absl::optional_internal::optional_data_base.378" }
%"class.absl::optional_internal::optional_data_base.378" = type { %"class.absl::optional_internal::optional_data_dtor_base.379" }
%"class.absl::optional_internal::optional_data_dtor_base.379" = type { i8, %union.anon.380 }
%union.anon.380 = type { %"struct.blink::scheduler::MainThreadSchedulerImpl::TaskDescriptionForTracing" }
%"struct.blink::scheduler::MainThreadSchedulerImpl::TaskDescriptionForTracing" = type { i8, %"class.absl::optional.381" }
%"class.absl::optional.381" = type { %"class.absl::optional_internal::optional_data.382" }
%"class.absl::optional_internal::optional_data.382" = type { %"class.absl::optional_internal::optional_data_base.383" }
%"class.absl::optional_internal::optional_data_base.383" = type { %"class.absl::optional_internal::optional_data_dtor_base.384" }
%"class.absl::optional_internal::optional_data_dtor_base.384" = type { i8, %union.anon.385 }
%union.anon.385 = type { i32 }
%"class.blink::scheduler::TraceableState.386" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", [7 x i8], void (i8*)*, i8* (i16)*, %"class.absl::optional.387", [6 x i8] }>
%"class.absl::optional.387" = type { %"class.absl::optional_internal::optional_data.388" }
%"class.absl::optional_internal::optional_data.388" = type { %"class.absl::optional_internal::optional_data_base.389" }
%"class.absl::optional_internal::optional_data_base.389" = type { %"class.absl::optional_internal::optional_data_dtor_base.390" }
%"class.absl::optional_internal::optional_data_dtor_base.390" = type { i8, %union.anon.391 }
%union.anon.391 = type { i8 }
%"class.std::__1::stack" = type { %"class.std::__1::vector.393" }
%"class.std::__1::vector.393" = type { %"class.std::__1::__vector_base.394" }
%"class.std::__1::__vector_base.394" = type { %class.scoped_refptr.34*, %class.scoped_refptr.34*, %"class.std::__1::__compressed_pair.395" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %class.scoped_refptr.34* }
%"class.blink::scheduler::TraceableState.342" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.315", [7 x i8], void (i8*)*, i8* (i1)*, i8, [7 x i8] }>
%"class.WTF::Vector.400" = type { %"class.WTF::VectorBuffer.401" }
%"class.WTF::VectorBuffer.401" = type { %"class.WTF::VectorBufferBase.402" }
%"class.WTF::VectorBufferBase.402" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::scheduler::CompositorPriorityExperiments" = type <{ %"class.blink::scheduler::MainThreadSchedulerImpl"*, i32, i8, i8, [2 x i8], %"class.base::TimeTicks", %"class.base::TimeDelta", i8, [7 x i8], %"class.std::__1::unique_ptr.405", i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* }
%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController" = type <{ %"class.blink::scheduler::BudgetPoolController", %"class.blink::scheduler::CompositorPriorityExperiments"*, %"class.std::__1::unique_ptr.254", i8, [7 x i8] }>
%"class.blink::scheduler::TraceableState.411" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.315", [7 x i8], void (i8*)*, i8* (i8)*, i8, [7 x i8] }>
%"class.WTF::Vector.413" = type { %"class.WTF::VectorBuffer.414" }
%"class.WTF::VectorBuffer.414" = type { %"class.WTF::VectorBufferBase.415" }
%"class.WTF::VectorBufferBase.415" = type { %"struct.blink::scheduler::MainThreadSchedulerImpl::AgentGroupSchedulerScope"*, i32, i32 }
%"struct.blink::scheduler::MainThreadSchedulerImpl::AgentGroupSchedulerScope" = type { %"class.std::__1::unique_ptr.416", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::scheduler::WebAgentGroupScheduler"*, %class.scoped_refptr, %class.scoped_refptr, i8*, i8* }
%"class.std::__1::unique_ptr.416" = type { %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"class.base::ThreadTaskRunnerHandleOverride"* }
%"class.base::ThreadTaskRunnerHandleOverride" = type <{ %"class.absl::optional.419", %class.scoped_refptr, %"class.absl::optional.424", [6 x i8] }>
%"class.absl::optional.419" = type { %"class.absl::optional_internal::optional_data.420" }
%"class.absl::optional_internal::optional_data.420" = type { %"class.absl::optional_internal::optional_data_base.421" }
%"class.absl::optional_internal::optional_data_base.421" = type { %"class.absl::optional_internal::optional_data_dtor_base.422" }
%"class.absl::optional_internal::optional_data_dtor_base.422" = type { i8, %union.anon.423 }
%union.anon.423 = type { %"class.base::ThreadTaskRunnerHandle" }
%"class.base::ThreadTaskRunnerHandle" = type { %class.scoped_refptr, %"class.base::SequencedTaskRunnerHandle" }
%"class.base::SequencedTaskRunnerHandle" = type { %class.scoped_refptr.85 }
%"class.absl::optional.424" = type { %"class.absl::optional_internal::optional_data.425" }
%"class.absl::optional_internal::optional_data.425" = type { %"class.absl::optional_internal::optional_data_base.426" }
%"class.absl::optional_internal::optional_data_base.426" = type { %"class.absl::optional_internal::optional_data_dtor_base.427" }
%"class.absl::optional_internal::optional_data_dtor_base.427" = type { i8, %union.anon.428 }
%union.anon.428 = type { %"class.base::RunLoop::ScopedDisallowRunning" }
%"class.base::RunLoop::ScopedDisallowRunning" = type { i8 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.blink::scheduler::MainThreadSchedulerImpl::AnyThread" = type { %"class.blink::scheduler::PendingUserInput::Monitor", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::scheduler::UserModel", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableCounter.439" }
%"class.blink::scheduler::PendingUserInput::Monitor" = type { %"class.WTF::HashMap.434" }
%"class.WTF::HashMap.434" = type { %"class.WTF::HashTable.435" }
%"class.WTF::HashTable.435" = type <{ %"struct.WTF::KeyValuePair.438"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.438" = type opaque
%"class.blink::scheduler::UserModel" = type <{ i32, [4 x i8], %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.blink::scheduler::TraceableCounter.439" = type <{ %"class.blink::scheduler::TraceableVariable", i8*, double (i32*)*, i32, [4 x i8] }>
%"struct.blink::scheduler::MainThreadSchedulerImpl::CompositorThreadOnly" = type { i32, %"class.std::__1::unique_ptr.441" }
%"class.std::__1::unique_ptr.441" = type { %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.base::ThreadChecker"* }
%class.PollableThreadSafeFlag = type { i32, %"class.base::Lock"* }
%"class.WTF::HashSet.447" = type { %"class.WTF::HashTable.448" }
%"class.WTF::HashTable.448" = type <{ %"class.blink::scheduler::AgentGroupSchedulerImpl"**, i32, i32, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.451" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Thread" = type { i32 (...)** }
%"class.blink::scheduler::WebWidgetScheduler" = type { i32 (...)** }
%"class.blink::scheduler::WebRenderWidgetSchedulingState" = type <{ %"class.blink::scheduler::RenderWidgetSignals"*, i8, i8, [6 x i8] }>
%"struct.viz::BeginFrameArgs" = type opaque
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.blink::WebInputEventAttribution" = type { i32, %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.blink::scheduler::WebThreadScheduler::RendererPauseHandle" = type { i32 (...)** }

@.str = private unnamed_addr constant [29 x i8] c"event_consumed_by_compositor\00", align 1
@.str.1 = private unnamed_addr constant [31 x i8] c"event_forwarded_to_main_thread\00", align 1
@_ZTVN5blink9scheduler18WebThreadSchedulerE = hidden unnamed_addr constant { [32 x i8*] } { [32 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*)* @_ZN5blink9scheduler18WebThreadSchedulerD2Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*)* @_ZN5blink9scheduler18WebThreadSchedulerD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::WebThreadScheduler"*)* @_ZN5blink9scheduler18WebThreadScheduler17DefaultTaskRunnerEv to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::WebThreadScheduler"*)* @_ZN5blink9scheduler18WebThreadScheduler20CompositorTaskRunnerEv to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::WebThreadScheduler"*)* @_ZN5blink9scheduler18WebThreadScheduler27DeprecatedDefaultTaskRunnerEv to i8*), i8* bitcast (%"class.blink::Thread"* (%"class.blink::scheduler::WebThreadScheduler"*)* @_ZN5blink9scheduler18WebThreadScheduler16CreateMainThreadEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.blink::scheduler::WebWidgetScheduler"* (%"class.blink::scheduler::WebThreadScheduler"*)* @_ZN5blink9scheduler18WebThreadScheduler21CreateWidgetSchedulerEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.blink::scheduler::WebRenderWidgetSchedulingState"* (%"class.blink::scheduler::WebThreadScheduler"*)* @_ZN5blink9scheduler18WebThreadScheduler30NewRenderWidgetSchedulingStateEv to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*)* @_ZN5blink9scheduler18WebThreadScheduler25BeginFrameNotExpectedSoonEv to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*, i64)* @_ZN5blink9scheduler18WebThreadScheduler30BeginMainFrameNotExpectedUntilEN4base9TimeTicksE to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*, %"struct.viz::BeginFrameArgs"*)* @_ZN5blink9scheduler18WebThreadScheduler14WillBeginFrameERKN3viz14BeginFrameArgsE to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*)* @_ZN5blink9scheduler18WebThreadScheduler26DidCommitFrameToCompositorEv to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*, %"class.blink::WebInputEvent"*, i32)* @_ZN5blink9scheduler18WebThreadScheduler37DidHandleInputEventOnCompositorThreadERKNS_13WebInputEventENS1_15InputEventStateE to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*, i32, %"class.blink::WebInputEventAttribution"*)* @_ZN5blink9scheduler18WebThreadScheduler30WillPostInputEventToMainThreadENS_5mojom9EventTypeERKNS_24WebInputEventAttributionE to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*, i32, %"class.blink::WebInputEventAttribution"*)* @_ZN5blink9scheduler18WebThreadScheduler32WillHandleInputEventOnMainThreadENS_5mojom9EventTypeERKNS_24WebInputEventAttributionE to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*, %"class.blink::WebInputEvent"*, i32)* @_ZN5blink9scheduler18WebThreadScheduler31DidHandleInputEventOnMainThreadERKNS_13WebInputEventENS_19WebInputEventResultE to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*)* @_ZN5blink9scheduler18WebThreadScheduler36DidAnimateForInputOnCompositorThreadEv to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*)* @_ZN5blink9scheduler18WebThreadScheduler25DidScheduleBeginMainFrameEv to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*)* @_ZN5blink9scheduler18WebThreadScheduler20DidRunBeginMainFrameEv to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*, i1)* @_ZN5blink9scheduler18WebThreadScheduler17SetRendererHiddenEb to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*, i1)* @_ZN5blink9scheduler18WebThreadScheduler23SetRendererBackgroundedEb to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*, i1)* @_ZN5blink9scheduler18WebThreadScheduler22SetSchedulerKeepActiveEb to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*)* @_ZN5blink9scheduler18WebThreadScheduler28OnMainFrameRequestedForInputEv to i8*), i8* bitcast (%"class.blink::scheduler::WebThreadScheduler::RendererPauseHandle"* (%"class.blink::scheduler::WebThreadScheduler"*)* @_ZN5blink9scheduler18WebThreadScheduler13PauseRendererEv to i8*), i8* bitcast (i1 (%"class.blink::scheduler::WebThreadScheduler"*)* @_ZN5blink9scheduler18WebThreadScheduler29IsHighPriorityWorkAnticipatedEv to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*, %"class.base::trace_event::BlameContext"*)* @_ZN5blink9scheduler18WebThreadScheduler23SetTopLevelBlameContextEPN4base11trace_event12BlameContextE to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*, i32)* @_ZN5blink9scheduler18WebThreadScheduler22SetRendererProcessTypeENS0_22WebRendererProcessTypeE to i8*)] }, align 8

@_ZN5blink9scheduler18WebThreadSchedulerD1Ev = hidden unnamed_addr alias void (%"class.blink::scheduler::WebThreadScheduler"*), void (%"class.blink::scheduler::WebThreadScheduler"*)* @_ZN5blink9scheduler18WebThreadSchedulerD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler18WebThreadSchedulerD2Ev(%"class.blink::scheduler::WebThreadScheduler"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler18WebThreadSchedulerD0Ev(%"class.blink::scheduler::WebThreadScheduler"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::scheduler::WebThreadScheduler"* @_ZN5blink9scheduler18WebThreadScheduler25CreateMainThreadSchedulerENSt3__110unique_ptrIN4base11MessagePumpENS2_14default_deleteIS5_EEEE(%"class.base::MessagePump"*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"struct.base::sequence_manager::SequenceManager::Settings", align 8
  %3 = alloca %"class.base::sequence_manager::SequenceManager::Settings::Builder", align 8
  %4 = alloca %"struct.base::sequence_manager::SequenceManager::Settings", align 8
  %5 = alloca %"struct.base::sequence_manager::SequenceManager::Settings", align 8
  %6 = bitcast %"struct.base::sequence_manager::SequenceManager::Settings"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = bitcast %"class.base::sequence_manager::SequenceManager::Settings::Builder"* %3 to i8*
  %8 = bitcast %"struct.base::sequence_manager::SequenceManager::Settings"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  call void @_ZN4base16sequence_manager15SequenceManager8Settings7BuilderC1Ev(%"class.base::sequence_manager::SequenceManager::Settings::Builder"* nonnull %3) #9
  %9 = call dereferenceable(24) %"class.base::sequence_manager::SequenceManager::Settings::Builder"* @_ZN4base16sequence_manager15SequenceManager8Settings7Builder18SetMessagePumpTypeENS_15MessagePumpTypeE(%"class.base::sequence_manager::SequenceManager::Settings::Builder"* nonnull %3, i32 0) #9
  %10 = call dereferenceable(24) %"class.base::sequence_manager::SequenceManager::Settings::Builder"* @_ZN4base16sequence_manager15SequenceManager8Settings7Builder28SetRandomisedSamplingEnabledEb(%"class.base::sequence_manager::SequenceManager::Settings::Builder"* %9, i1 zeroext true) #9
  %11 = call dereferenceable(24) %"class.base::sequence_manager::SequenceManager::Settings::Builder"* @_ZN4base16sequence_manager15SequenceManager8Settings7Builder22SetAddQueueTimeToTasksEb(%"class.base::sequence_manager::SequenceManager::Settings::Builder"* %10, i1 zeroext true) #9
  call void @_ZN4base16sequence_manager15SequenceManager8Settings7Builder5BuildEv(%"struct.base::sequence_manager::SequenceManager::Settings"* nonnull sret %2, %"class.base::sequence_manager::SequenceManager::Settings::Builder"* %11) #9
  call void @_ZN4base16sequence_manager15SequenceManager8Settings7BuilderD1Ev(%"class.base::sequence_manager::SequenceManager::Settings::Builder"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  %12 = icmp eq %"class.base::MessagePump"* %0, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %1
  call void @_ZN4base16sequence_manager15SequenceManager8SettingsC1EOS2_(%"struct.base::sequence_manager::SequenceManager::Settings"* nonnull %4, %"struct.base::sequence_manager::SequenceManager::Settings"* nonnull dereferenceable(24) %2) #9
  %14 = call %"class.base::sequence_manager::SequenceManager"* @_ZN4base16sequence_manager44CreateSequenceManagerOnCurrentThreadWithPumpENSt3__110unique_ptrINS_11MessagePumpENS1_14default_deleteIS3_EEEENS0_15SequenceManager8SettingsE(%"class.base::MessagePump"* nonnull %0, %"struct.base::sequence_manager::SequenceManager::Settings"* nonnull %4) #9
  br label %17

15:                                               ; preds = %1
  call void @_ZN4base16sequence_manager15SequenceManager8SettingsC1EOS2_(%"struct.base::sequence_manager::SequenceManager::Settings"* nonnull %5, %"struct.base::sequence_manager::SequenceManager::Settings"* nonnull dereferenceable(24) %2) #9
  %16 = call %"class.base::sequence_manager::SequenceManager"* @_ZN4base16sequence_manager36CreateSequenceManagerOnCurrentThreadENS0_15SequenceManager8SettingsE(%"struct.base::sequence_manager::SequenceManager::Settings"* nonnull %5) #9
  br label %17

17:                                               ; preds = %13, %15
  %18 = phi %"class.base::sequence_manager::SequenceManager"* [ %14, %13 ], [ %16, %15 ]
  %19 = call i8* @_Znwm(i64 6368) #10
  %20 = bitcast i8* %19 to %"class.blink::scheduler::MainThreadSchedulerImpl"*
  call void @_ZN5blink9scheduler23MainThreadSchedulerImplC1ENSt3__110unique_ptrIN4base16sequence_manager15SequenceManagerENS2_14default_deleteIS6_EEEEN4absl8optionalINS4_4TimeEEE(%"class.blink::scheduler::MainThreadSchedulerImpl"* nonnull %20, %"class.base::sequence_manager::SequenceManager"* %18, i8 0, i64 undef) #9
  %21 = getelementptr inbounds i8, i8* %19, i64 8
  %22 = bitcast i8* %21 to %"class.blink::scheduler::WebThreadScheduler"*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret %"class.blink::scheduler::WebThreadScheduler"* %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base16sequence_manager15SequenceManager8Settings7BuilderC1Ev(%"class.base::sequence_manager::SequenceManager::Settings::Builder"*) unnamed_addr #5

declare dereferenceable(24) %"class.base::sequence_manager::SequenceManager::Settings::Builder"* @_ZN4base16sequence_manager15SequenceManager8Settings7Builder18SetMessagePumpTypeENS_15MessagePumpTypeE(%"class.base::sequence_manager::SequenceManager::Settings::Builder"*, i32) local_unnamed_addr #5

declare dereferenceable(24) %"class.base::sequence_manager::SequenceManager::Settings::Builder"* @_ZN4base16sequence_manager15SequenceManager8Settings7Builder28SetRandomisedSamplingEnabledEb(%"class.base::sequence_manager::SequenceManager::Settings::Builder"*, i1 zeroext) local_unnamed_addr #5

declare dereferenceable(24) %"class.base::sequence_manager::SequenceManager::Settings::Builder"* @_ZN4base16sequence_manager15SequenceManager8Settings7Builder22SetAddQueueTimeToTasksEb(%"class.base::sequence_manager::SequenceManager::Settings::Builder"*, i1 zeroext) local_unnamed_addr #5

declare void @_ZN4base16sequence_manager15SequenceManager8Settings7Builder5BuildEv(%"struct.base::sequence_manager::SequenceManager::Settings"* sret, %"class.base::sequence_manager::SequenceManager::Settings::Builder"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base16sequence_manager15SequenceManager8Settings7BuilderD1Ev(%"class.base::sequence_manager::SequenceManager::Settings::Builder"*) unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.base::sequence_manager::SequenceManager"* @_ZN4base16sequence_manager44CreateSequenceManagerOnCurrentThreadWithPumpENSt3__110unique_ptrINS_11MessagePumpENS1_14default_deleteIS3_EEEENS0_15SequenceManager8SettingsE(%"class.base::MessagePump"*, %"struct.base::sequence_manager::SequenceManager::Settings"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base16sequence_manager15SequenceManager8SettingsC1EOS2_(%"struct.base::sequence_manager::SequenceManager::Settings"*, %"struct.base::sequence_manager::SequenceManager::Settings"* dereferenceable(24)) unnamed_addr #6

declare %"class.base::sequence_manager::SequenceManager"* @_ZN4base16sequence_manager36CreateSequenceManagerOnCurrentThreadENS0_15SequenceManager8SettingsE(%"struct.base::sequence_manager::SequenceManager::Settings"*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN5blink9scheduler18WebThreadScheduler23InputEventStateToStringENS1_15InputEventStateE(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp eq i32 %0, 1
  %3 = select i1 %2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i8* null
  %4 = icmp eq i32 %0, 0
  %5 = select i1 %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i8* %3
  ret i8* %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.base::SingleThreadTaskRunner"* @_ZN5blink9scheduler18WebThreadScheduler17DefaultTaskRunnerEv(%"class.blink::scheduler::WebThreadScheduler"* nocapture readnone) unnamed_addr #0 align 2 {
  ret %"class.base::SingleThreadTaskRunner"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.base::SingleThreadTaskRunner"* @_ZN5blink9scheduler18WebThreadScheduler20CompositorTaskRunnerEv(%"class.blink::scheduler::WebThreadScheduler"* nocapture readnone) unnamed_addr #0 align 2 {
  ret %"class.base::SingleThreadTaskRunner"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.base::SingleThreadTaskRunner"* @_ZN5blink9scheduler18WebThreadScheduler27DeprecatedDefaultTaskRunnerEv(%"class.blink::scheduler::WebThreadScheduler"* nocapture readnone) unnamed_addr #0 align 2 {
  ret %"class.base::SingleThreadTaskRunner"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.blink::Thread"* @_ZN5blink9scheduler18WebThreadScheduler16CreateMainThreadEv(%"class.blink::scheduler::WebThreadScheduler"* nocapture readnone) unnamed_addr #0 align 2 {
  ret %"class.blink::Thread"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.blink::scheduler::WebWidgetScheduler"* @_ZN5blink9scheduler18WebThreadScheduler21CreateWidgetSchedulerEv(%"class.blink::scheduler::WebThreadScheduler"* nocapture readnone) unnamed_addr #0 align 2 {
  ret %"class.blink::scheduler::WebWidgetScheduler"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.blink::scheduler::WebRenderWidgetSchedulingState"* @_ZN5blink9scheduler18WebThreadScheduler30NewRenderWidgetSchedulingStateEv(%"class.blink::scheduler::WebThreadScheduler"* nocapture readnone) unnamed_addr #0 align 2 {
  ret %"class.blink::scheduler::WebRenderWidgetSchedulingState"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler18WebThreadScheduler25BeginFrameNotExpectedSoonEv(%"class.blink::scheduler::WebThreadScheduler"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler18WebThreadScheduler30BeginMainFrameNotExpectedUntilEN4base9TimeTicksE(%"class.blink::scheduler::WebThreadScheduler"* nocapture, i64) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler18WebThreadScheduler14WillBeginFrameERKN3viz14BeginFrameArgsE(%"class.blink::scheduler::WebThreadScheduler"* nocapture, %"struct.viz::BeginFrameArgs"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler18WebThreadScheduler26DidCommitFrameToCompositorEv(%"class.blink::scheduler::WebThreadScheduler"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler18WebThreadScheduler37DidHandleInputEventOnCompositorThreadERKNS_13WebInputEventENS1_15InputEventStateE(%"class.blink::scheduler::WebThreadScheduler"* nocapture, %"class.blink::WebInputEvent"* nocapture dereferenceable(40), i32) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler18WebThreadScheduler30WillPostInputEventToMainThreadENS_5mojom9EventTypeERKNS_24WebInputEventAttributionE(%"class.blink::scheduler::WebThreadScheduler"* nocapture, i32, %"class.blink::WebInputEventAttribution"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler18WebThreadScheduler32WillHandleInputEventOnMainThreadENS_5mojom9EventTypeERKNS_24WebInputEventAttributionE(%"class.blink::scheduler::WebThreadScheduler"* nocapture, i32, %"class.blink::WebInputEventAttribution"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler18WebThreadScheduler31DidHandleInputEventOnMainThreadERKNS_13WebInputEventENS_19WebInputEventResultE(%"class.blink::scheduler::WebThreadScheduler"* nocapture, %"class.blink::WebInputEvent"* nocapture dereferenceable(40), i32) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler18WebThreadScheduler36DidAnimateForInputOnCompositorThreadEv(%"class.blink::scheduler::WebThreadScheduler"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler18WebThreadScheduler25DidScheduleBeginMainFrameEv(%"class.blink::scheduler::WebThreadScheduler"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler18WebThreadScheduler20DidRunBeginMainFrameEv(%"class.blink::scheduler::WebThreadScheduler"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler18WebThreadScheduler17SetRendererHiddenEb(%"class.blink::scheduler::WebThreadScheduler"* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler18WebThreadScheduler23SetRendererBackgroundedEb(%"class.blink::scheduler::WebThreadScheduler"* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler18WebThreadScheduler22SetSchedulerKeepActiveEb(%"class.blink::scheduler::WebThreadScheduler"* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.blink::scheduler::WebThreadScheduler::RendererPauseHandle"* @_ZN5blink9scheduler18WebThreadScheduler13PauseRendererEv(%"class.blink::scheduler::WebThreadScheduler"* nocapture readnone) unnamed_addr #0 align 2 {
  ret %"class.blink::scheduler::WebThreadScheduler::RendererPauseHandle"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink9scheduler18WebThreadScheduler29IsHighPriorityWorkAnticipatedEv(%"class.blink::scheduler::WebThreadScheduler"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler18WebThreadScheduler23SetTopLevelBlameContextEPN4base11trace_event12BlameContextE(%"class.blink::scheduler::WebThreadScheduler"* nocapture, %"class.base::trace_event::BlameContext"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler18WebThreadScheduler22SetRendererProcessTypeENS0_22WebRendererProcessTypeE(%"class.blink::scheduler::WebThreadScheduler"* nocapture, i32) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler18WebThreadScheduler28OnMainFrameRequestedForInputEv(%"class.blink::scheduler::WebThreadScheduler"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN5blink9scheduler23MainThreadSchedulerImplC1ENSt3__110unique_ptrIN4base16sequence_manager15SequenceManagerENS2_14default_deleteIS6_EEEEN4absl8optionalINS4_4TimeEEE(%"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.base::sequence_manager::SequenceManager"*, i8, i64) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
